
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>
Issue 34155: [CVE-2019-16056] email.utils.parseaddr mistakenly parse an email - Python tracker

</title>
<link rel="shortcut icon" href="@@file/favicon.ico" />
<link rel="stylesheet" type="text/css" href="@@file/main.css" />
<link rel="stylesheet" type="text/css" href="@@file/style.css" />
<link rel="search" type="application/opensearchdescription+xml" href="@@file/osd.xml" title="Python bug tracker search" />
<meta http-equiv="Content-Type"
      content="text/html; charset=utf-8" />

<script nonce="94798a087739d7a0fb5a3f3b212bf00b802050a2464ad100c1c7d00df790eda2" type="text/javascript">
submitted = false;
function submit_once() {
    if (submitted) {
        alert("Your request is being processed.\nPlease be patient.");
        return false;
    }
    submitted = true;
    return true;
}

function help_window(helpurl, width, height) {
    HelpWin = window.open('https://bugs.python.org/' + helpurl, 'RoundupHelpWindow', 'scrollbars=yes,resizable=yes,toolbar=no,height='+height+',width='+width);
    HelpWin.focus ()
}
</script>


<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.15/jquery-ui.js"></script>
<script type="text/javascript" src="@@file/issue.item.js"></script>
<link rel="stylesheet" type="text/css" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/smoothness/jquery-ui.css" />


</head>
<body>
  <!--  Logo  -->
  <h1 id="logoheader">
    <a accesskey="1" href="." id="logolink">
       <img src="@@file/python-logo.gif" alt="homepage" border="0" id="logo" /></a>
  </h1>

<div id="utility-menu">
<!-- Search Box -->
<div id="searchbox">
    <form name="searchform" method="get" action="issue" id="searchform">
      <div id="search">
       <input type="hidden" name="@columns"
              value="id,activity,title,creator,assignee,status,type" />
       <input type="hidden" name="@sort" value="-activity" />
       <input type="hidden" name="@filter" value="status" />
       <input type="hidden" name="@action" value="searchid" />
       <input type="hidden" name="ignore" value="file:content" />
       <input class="input-text" id="search-text"
              name="@search_text" size="10" />
       <input type="submit" id="submit" value="search" name="submit" class="input-button" />
       <input type="radio" name="status"
              id="status_notresolved" value="-1,1,3" />
       <label for="status_notresolved">open</label>
       <input type="radio" name="status" checked="checked"
              id="status_all" value="-1,1,2,3" />
       <label for="status_all">all</label>
      </div>
     </form>
</div>
</div>


<div id="left-hand-navigation">
<!--  Main Menu NEED LEVEL TWO HEADER AND FOOTER -->
<div id="menu">
  <ul class="level-one">
    <li><a href="https://www.python.org/" title="Go to the Python homepage">Python Home</a></li>
    <li><a href="https://www.python.org/about/" title="About The Python Language">About</a></li>
    <li><a href="https://www.python.org/blogs/" title="">News</a></li>
    <li><a href="https://www.python.org/doc/" title="">Documentation</a></li>
    <li><a href="https://www.python.org/downloads/" title="">Downloads</a></li>
    <li><a href="https://www.python.org/community/" title="">Community</a></li>
    <li><a href="https://www.python.org/psf/" title="Python Software Foundation">Foundation</a></li>
    <li><a href="https://devguide.python.org/" title="Python Developer's Guide">Developer's Guide</a></li>
    <li class="selected"><a href="." class="selected" title="Python Issue Tracker">Issue Tracker</a>
      <ul class="level-two">
        <li>
          <strong>Issues</strong>
          <ul class="level-three">
            
            <li><a href="issue?@template=search&amp;status=1">Search</a></li>
            <li><a href="issue?@action=random">Random Issue</a></li>
            <li>
              <form method="post" action="issue34155">
                <input type="submit" class="form-small"
                       value="Show issue:" />
                <input class="form-small" size="4" type="text" name="@number" />
                <input type="hidden" name="@type" value="issue" />
                <input type="hidden" name="@action" value="show" />
              </form>
            </li>
          </ul>
        </li>


        <li>
          <strong>Summaries</strong>
          <ul class="level-three">
            

            

            

            <li>
              <a href="issue?status=1&amp;@sort=-activity&amp;@columns=id%2Cactivity%2Ctitle%2Ccreator%2Cstatus&amp;@dispname=Issues%20with%20patch&amp;@startwith=0&amp;@group=priority&amp;keywords=2&amp;@action=search&amp;@filter=&amp;@pagesize=50">Issues with patch</a>
            </li>

            <li>
              <a href="issue?status=1&amp;@sort=-activity&amp;@columns=id%2Cactivity%2Ctitle%2Ccreator%2Cstatus&amp;@dispname=Easy%20issues&amp;@startwith=0&amp;@group=priority&amp;keywords=6&amp;@action=search&amp;@filter=&amp;@pagesize=50">Easy issues</a>
            </li>

            <li>
              <a href="issue?@template=stats">Stats</a>
            </li>

          </ul>
        </li>


        <li>
          <strong>User</strong>
          <form method="post" action="issue34155">
          <ul class="level-three">
            <li>
                Login&nbsp;(OpenID&nbsp;possible)<br />
	         <a style="display:inline;width:0;margin:0"
             href="issue34155?@action=oic_login&amp;provider=Google">
                  <img hspace="0" vspace="0" width="16"
                       height="16"
                       src="https://www.google.com/favicon.ico"
                       alt="Google" title="Google" /></a>
	         <a style="display:inline;width:0;margin:0"
             href="issue34155?@action=oic_login&amp;provider=GitHub">
                  <img hspace="0" vspace="0" width="16"
                       height="16"
                       src="https://www.github.com/favicon.ico"
                       alt="GitHub" title="GitHub" /></a>
	         <a style="display:inline;width:0;margin:0"
             href="issue34155?@action=openid_login&amp;provider=Launchpad">
                  <img hspace="0" vspace="0" width="16"
                       height="16"
                       src="https://launchpad.net/favicon.ico"
                       alt="Launchpad" title="Launchpad" /></a>
                <input size="10" name="openid_identifier" style="background:url(@@file/openid-16x16.gif)
                  center left no-repeat;padding-left:16px" /><br />
                <input size="10" type="password" name="__login_password" /><br />
                <input type="hidden" name="@action" value="Login" />
                <input type="checkbox" name="remember" id="remember" />
                <label for="remember">Remember me?</label><br />
                <input class="form-small" type="submit"
                       value="Login" /><br />
                <input type="hidden" name="__came_from"
                       value="https://bugs.python.org/issue34155?">
                
                <input type="hidden" name="@sort" value=""/>
<input type="hidden" name="@group" value=""/>
<input type="hidden" name="@pagesize" value="50"/>
<input type="hidden" name="@startwith" value="0"/>
            </li>
            <li>
                <a href="user?@template=register">Register</a>
            </li>
            <li><a href="user?@template=forgotten">Lost&nbsp;your&nbsp;login?</a></li>
          </ul>
          </form>
        </li>

        

        

        <li>
          <strong>Administration</strong>
          <ul class="level-three">
            
            <li>
                <a href="user?@sort=username">User List</a></li>
            <li>
                <a href="user?iscommitter=1&amp;@action=search&amp;@sort=username&amp;@pagesize=300">Committer List</a></li>
            
            
            
          </ul>
        </li>

        <li>
          <strong>Help</strong>
          <ul class="level-three">
            <li><a href="http://docs.python.org/devguide/triaging.html">
                Tracker Documentation</a></li>
            <li><a href="http://wiki.python.org/moin/TrackerDevelopment">
                Tracker Development</a></li>
            <li><a href="https://github.com/python/psf-infra-meta/issues">
                Report Tracker Problem</a></li>
          </ul>
        </li>

      </ul>
    </li>
  </ul>
</div> <!-- menu -->
</div> <!-- left-hand-navigation -->

<div id="content-body">
<div id="body-main">
<div id="content">
<div id="breadcrumb">
 
 
 Issue34155
 
</div>
 
 





<div>

<form method="post" name="itemSynopsis"
      onsubmit="return submit_once()"
      enctype="multipart/form-data" action="issue34155">

<fieldset><legend>classification</legend>
<table class="form">
<tr>
 <th class="required"><a href="http://docs.python.org/devguide/triaging.html#title" target="_blank">Title</a>:</th>
 
 <td colspan="3">
  <span>[CVE-2019-16056] email.utils.parseaddr mistakenly parse an email</span>
  <input type="hidden" name="title"
         value="[CVE-2019-16056] email.utils.parseaddr mistakenly parse an email">
 </td>
</tr>

<tr>
 <th class="required"><a href="http://docs.python.org/devguide/triaging.html#type" target="_blank">Type</a>:</th>
 <td>security</td>
 <th><a href="http://docs.python.org/devguide/triaging.html#stage" target="_blank">Stage</a>:</th>
 <td>resolved</td>
</tr>

<tr>
 <th><a href="http://docs.python.org/devguide/triaging.html#components" target="_blank">Components</a>:</th>
 <td>email</td>
 <th><a href="http://docs.python.org/devguide/triaging.html#versions" target="_blank">Versions</a>:</th>
 <td>Python 3.9, Python 3.8, Python 3.7, Python 3.6, Python 3.5, Python 2.7</td>
</tr>
</table>
</fieldset>

<fieldset><legend>process</legend>
<table class="form">
<tr>
  <th><a href="http://docs.python.org/devguide/triaging.html#status" target="_blank">Status</a>:</th>
  <td>closed</td>
  <th><a href="http://docs.python.org/devguide/triaging.html#resolution" target="_blank">Resolution</a>:</th>
  <td>fixed</td>
</tr>

<tr>
 <th>
    <a href="http://docs.python.org/devguide/triaging.html#dependencies"
       target="_blank">Dependencies</a>:
 </th>
 <td>
  
  
 </td>
 <th><a href="http://docs.python.org/devguide/triaging.html#superseder" target="_blank">Superseder</a>:</th>
 <td>
  
 
 </td>
 </tr>
 <tr>
 <th>
   <a href="http://docs.python.org/devguide/triaging.html#assigned-to"
      target="_blank">Assigned To</a>:
 </th>
 
 <td>
  
 </td>
 <th>
   <a href="http://docs.python.org/devguide/triaging.html#nosy-list"
      target="_blank">Nosy List</a><!--
        <span tal:condition="context/nosy_count" tal:replace="python: ' (%d)' % context.nosy_count" /> -->:
 </th>
 <td>
     Anselmo Melo, Dain Dwarf, Windson Yang, aeros, barry, bortzmeyer, cnicodeme, jpic, kal.sze, larry, lukasz.langa, maxking, mcepl, miss-islington, msapiro, ned.deily, nicoe, r.david.murray, rcsanchez97, rschiron, vstinner, xtreak
     
 </td>
</tr>
<tr>
 <th>
   <a href="http://docs.python.org/devguide/triaging.html#priority"
      target="_blank">Priority</a>:
 </th>
 <td>critical</td>
 <th>
    <a href="http://docs.python.org/devguide/triaging.html#keywords"
       target="_blank">Keywords</a>:
 </th>
 <td>patch, security_issue</td>


</tr>









</table>
</fieldset>

</form>

<p>Created on <strong>2018-07-19 14:53</strong> by <strong>cnicodeme</strong>, last changed <strong>2019-09-14 17:43</strong> by <strong>maxking</strong>. This issue is now <strong style="color:#00F; background-color:inherit;">closed</strong>.</p>

<table class="files">
 <tr><th colspan="5" class="header">Files</th></tr>
 <tr>
  <th>File name</th>
  <th>Uploaded</th>
  <th>Description</th>
  <th>Edit</th>
 </tr>
 <tr>
  <td>
   <a href="file48295/Screen%20Shot%202019-05-02%20at%2022.07.27.png">Screen Shot 2019-05-02 at 22.07.27.png</a>
  </td>
  <td>
   <span>barry</span>,
   <span>2019-05-03 02:09</span>
  </td>
  <td></td>
  <td>
      
      
      
  </td>
 </tr>
</table>

<table class="files">
 <tr><th class="header" colspan="4">Pull Requests</th></tr>
 <tr>
  <th>URL</th>
  <th>Status</th>
  <th>Linked</th>
  <th>Edit</th>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/13079" title="bpo-34155: Dont parse domains containing @">PR 13079</a></td>
  <td>merged</td>
  <td>
   <span>python-dev</span>,
   <span>2019-05-03 21:27</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/14824" title="[3.8] bpo-34155: Dont parse domains containing @ (GH-13079)">PR 14824</a></td>
  <td>merged</td>
  <td>
   <span>miss-islington</span>,
   <span>2019-07-17 21:54</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/14825" title="[3.7] bpo-34155: Dont parse domains containing @ (GH-13079)">PR 14825</a></td>
  <td>merged</td>
  <td>
   <span>miss-islington</span>,
   <span>2019-07-17 21:54</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/14826" title="[3.6] bpo-34155: Dont parse domains containing @ (GH-13079)">PR 14826</a></td>
  <td>merged</td>
  <td>
   <span>miss-islington</span>,
   <span>2019-07-17 21:54</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/15317" title="[3.5] bpo-34155: Dont parse domains containing @ (GH-13079)">PR 15317</a></td>
  <td>merged</td>
  <td>
   <span>maxking</span>,
   <span>2019-08-17 02:14</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/16006" title="[2.7] bpo-34155: Dont parse domains containing @ (GH-13079)">PR 16006</a></td>
  <td>merged</td>
  <td>
   <span>python-dev</span>,
   <span>2019-09-11 21:10</span>
  </td>
  <td>
    
  </td>
 </tr>
</table>





<table class="messages">
 <tr><th colspan="4" class="header">Messages (52)</th></tr>
 
  <tr>
    <th>
     <a href="#msg321956" id="msg321956">msg321956</a> - <a
    href="msg321956">(view)</a></th>
   <th>Author: Cyril Nicodème (cnicodeme)</th>
   <th>Date: 2018-07-19 14:53</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Hi!

I'm trying to parse some emails, and I discovered that email.utils.parseaddr wrongly parse an email.

Here's the corresponding header:

&gt; From: =?utf-8?Q?<a href="mailto:zq@redacted.com.cn">zq@redacted.com.cn</a>=E3=82=86=E2=86=91=E3=82=86?=
 =?utf-8?Q?=E3=82=83=E3=82=85=E3=81=87=E3=81=BA=E3=81=BD=E3=81=BC"\=E3?=
 =?utf-8?Q?=81=A9=E3=81=A5=E3=81=A2l=E3=81=A0=E3=81=B0=E3=81=A8=E3=81?=
 =?utf-8?Q?=8FKL=E3=81=84=E3=82=8C=E3=82=8B=E3=82=86&gt;KL=E3=82=89JF?=
 &lt;<a href="mailto:mxvu@redacted2.com">mxvu@redacted2.com</a>&gt;

Once this has been parsed via `decode_header`, we obtain this value:

&gt; From: <a href="mailto:zq@redacted.com.cn">zq@redacted.com.cn</a>ゆ↑ゆゃゅぇぺぽぼ"\どづぢlだばとくKLいれるゆ&gt;KLらJF &lt;<a href="mailto:mxvu@redacted2.com">mxvu@redacted2.com</a>&gt;

(I agree, not really a nice looking From email ...)

Then, when this value is given to parseaddr, here's the result:

&gt; ('', '<a href="mailto:zq@redacted.com.cn">zq@redacted.com.cn</a>ゆ↑ゆゃゅぇぺぽぼ')

But it should be:

&gt; ('<a href="mailto:zq@redacted.com.cn">zq@redacted.com.cn</a>ゆ↑ゆゃゅぇぺぽぼ"\どづぢlだばとくKLいれるゆ&gt;KLらJF', '<a href="mailto:mxvu@redacted2.com">mxvu@redacted2.com</a>')

(Note that the email in the "name" part is not the same as the email in the "email" part!)</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg321957" id="msg321957">msg321957</a> - <a
    href="msg321957">(view)</a></th>
   <th>Author: R. David Murray (r.david.murray) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2018-07-19 15:18</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>That does appear to be a bug.  Note that the new email API handles it correctly:

    &gt;&gt;&gt; x = """
    ... &gt; From: =?utf-8?Q?<a href="mailto:zq@redacted.com.cn">zq@redacted.com.cn</a>=E3=82=86=E2=86=91=E3=82=86?=
    ...  =?utf-8?Q?=E3=82=83=E3=82=85=E3=81=87=E3=81=BA=E3=81=BD=E3=81=BC"\=E3?=
    ...  =?utf-8?Q?=81=A9=E3=81=A5=E3=81=A2l=E3=81=A0=E3=81=B0=E3=81=A8=E3=81?=
    ...  =?utf-8?Q?=8FKL=E3=81=84=E3=82=8C=E3=82=8B=E3=82=86&gt;KL=E3=82=89JF?=
    ...  &lt;<a href="mailto:mxvu@redacted2.com">mxvu@redacted2.com</a>&gt;
    ... """
    &gt;&gt;&gt; from email import message_from_string
    &gt;&gt;&gt; from email.policy import default
    &gt;&gt;&gt; m = message_from_string(x+'\n\ntest', policy=default)
    &gt;&gt;&gt; m['from']
    '"<a href="mailto:zq@redacted.com.cn">zq@redacted.com.cn</a>ゆ↑ゆ ゃゅぇぺぽぼ\\"\\\\� ��づぢlだばと� �KLいれるゆ&gt;KLらJF" &lt;<a href="mailto:mxvu@redacted2.com">mxvu@redacted2.com</a>&gt;'
    &gt;&gt;&gt; m['from'].addresses[0].addr_spec
    '<a href="mailto:mxvu@redacted2.com">mxvu@redacted2.com</a>'
    &gt;&gt;&gt; m['from'].addresses[0].display_name
    '<a href="mailto:zq@redacted.com.cn">zq@redacted.com.cn</a>ゆ↑ゆ ゃゅぇぺぽぼ"\\\udce3 \udc81\udca9づぢlだばと\udce3\udc81 \udc8fKLいれるゆ&gt;KLらJF'

I'm not particularly interested myself in fixing parseaddr to handle this case correctly, since it is the legacy API, but if someone else wants to I'll review the patch.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg321958" id="msg321958">msg321958</a> - <a
    href="msg321958">(view)</a></th>
   <th>Author: R. David Murray (r.david.murray) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2018-07-19 15:19</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Oops, I left out a step in that cut and paste.  For completeness:

    &gt;&gt;&gt; x = x[3:]</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg321959" id="msg321959">msg321959</a> - <a
    href="msg321959">(view)</a></th>
   <th>Author: R. David Murray (r.david.murray) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2018-07-19 15:21</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Ah, maybe it doesn't handle it completely correctly; that decode looks different now that I look at it in detail.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg321967" id="msg321967">msg321967</a> - <a
    href="msg321967">(view)</a></th>
   <th>Author: Jakub Wilk (jwilk)</th>
   <th>Date: 2018-07-19 21:03</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>You should not use decode_header() on the whole From header, because that loses
information. You should parse the header first, then decode the parts that
could be RFC2047-encoded.

Quoting &lt;<a href="https://tools.ietf.org/html/rfc2047#section-6.2">https://tools.ietf.org/html/rfc2047#section-6.2</a>&gt;:

&gt; NOTE: Decoding and display of encoded-words occurs *after* a
&gt; structured field body is parsed into tokens.  It is therefore
&gt; possible to hide 'special' characters in encoded-words which, when
&gt; displayed, will be indistinguishable from 'special' characters in the
&gt; surrounding text.  For this and other reasons, it is NOT generally
&gt; possible to translate a message header containing 'encoded-word's to
&gt; an unencoded form which can be parsed by an RFC 822 mail reader.

So I don't see a bug in parseaddr() here, except that the API is a bit of a
footgun.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg329372" id="msg329372">msg329372</a> - <a
    href="msg329372">(view)</a></th>
   <th>Author: Mark Sapiro (msapiro) <span title="Contributor form received">*</span> <img src="@@file/triager.png" title="Python triager" alt="(Python triager)" /></th>
   <th>Date: 2018-11-06 18:14</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>The issue is illustrated much more simply as follows:

email.utils.parseaddr('John Doe <a href="mailto:jdoe@example.com">jdoe@example.com</a> &lt;<a href="mailto:other@example.net">other@example.net</a>&gt;')

returns

('', 'John Doe <a href="mailto:jdoe@example.com">jdoe@example.com</a>')

whereas it should return

('John Doe <a href="mailto:jdoe@example.com">jdoe@example.com</a>', '<a href="mailto:other@example.net">other@example.net</a>')

I'll look at developing a patch.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg329376" id="msg329376">msg329376</a> - <a
    href="msg329376">(view)</a></th>
   <th>Author: R. David Murray (r.david.murray) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2018-11-06 19:23</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>&gt;&gt;&gt; m = message_from_string("From: John Doe <a href="mailto:jdoe@example.com">jdoe@example.com</a> &lt;<a href="mailto:other@example.net">other@example.net</a>&gt;\n\n", policy=default)
    &gt;&gt;&gt; m['From'].addresses(Address(display_name='', username='John Doe jdoe', domain='example.com'),)

The new policies have more error recovery for non-RFC compliant addresses than decode_header, but the two agree in this case.  What is happening here is that (1) an unquoted/unencoded '@' is not allowed in a display name (2) if the address is not '&lt;&gt;' quoted, then everything before the @ is the username and (3) in the absence of a comma after the end of the fqdn (which is not allowed to contain blanks) any additional tokens are discarded.

One could argue that we could treat the blank after the FQDN as a "missing comma", and there would be some merit to that argument.  You could also argue that a "&lt;&gt;" quoted string would trump the occurrence of the @ earlier in the token list.  However, the RFC822 grammar is designed to be parsed character by character, so that would not be a typical way for an RFC822 parser to try to do postel-style error recovery.

So, I don't think there is a bug here, but I'd be curious what other email address parsing libraries do, and that could influence whether extensions to the "make a guess when the string doesn't conform to the RFC" code would be acceptable.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg329377" id="msg329377">msg329377</a> - <a
    href="msg329377">(view)</a></th>
   <th>Author: R. David Murray (r.david.murray) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2018-11-06 19:24</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>The formatting of that doctest paragraph got messed up.  Let me try again:

    &gt;&gt;&gt; m = message_from_string("From: John Doe <a href="mailto:jdoe@example.com">jdoe@example.com</a> &lt;<a href="mailto:other@example.net">other@example.net</a>&gt;\n\n", policy=default)
    &gt;&gt;&gt; m['From'].addresses
    (Address(display_name='', username='John Doe jdoe', domain='example.com'),)</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg329379" id="msg329379">msg329379</a> - <a
    href="msg329379">(view)</a></th>
   <th>Author: Karthikeyan Singaravelan (xtreak) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2018-11-06 19:48</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Is this a case of realname having @ inside an unquoted string? As I can see from the RFC the acceptable characters of an atom other than alphabets and digits that comprises a phrase are ['!', '#', '$', '%', '&amp;', "'", '*', '+', '-', '/', '=', '?', '^', '_', '`', '{', '|', '}', '~'] . So just curious if it's a case of @ inside unquoted string as name?

&gt;&gt;&gt; for char in accepted:
...     print(parseaddr(f'John Doe jdoe{char}example.com &lt;<a href="mailto:other@example.net">other@example.net</a>&gt;'))
...
('John Doe jdoe!example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe#example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe$example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe%example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe&amp;example.com', '<a href="mailto:other@example.net">other@example.net</a>')
("John Doe jdoe'example.com", '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe*example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe+example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe-example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe/example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe=example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe?example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe^example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe_example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe`example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe{example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe|example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe}example.com', '<a href="mailto:other@example.net">other@example.net</a>')
('John Doe jdoe~example.com', '<a href="mailto:other@example.net">other@example.net</a>')

&gt;&gt;&gt; parseaddr('"John Doe <a href="mailto:jdoe@example.com">jdoe@example.com</a>" &lt;<a href="mailto:other@example.net">other@example.net</a>&gt;')
('John Doe <a href="mailto:jdoe@example.com">jdoe@example.com</a>', '<a href="mailto:other@example.net">other@example.net</a>')

&gt;&gt;&gt; parseaddr('John Doe <a href="mailto:jdoe@example.com">jdoe@example.com</a> &lt;<a href="mailto:other@example.net">other@example.net</a>&gt;')
('', 'John Doe <a href="mailto:jdoe@example.com">jdoe@example.com</a>')</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg329380" id="msg329380">msg329380</a> - <a
    href="msg329380">(view)</a></th>
   <th>Author: Mark Sapiro (msapiro) <span title="Contributor form received">*</span> <img src="@@file/triager.png" title="Python triager" alt="(Python triager)" /></th>
   <th>Date: 2018-11-06 19:55</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I agree that my example with an @ in the 'display name', although actually seen in the wild, is non-compliant, and that the behavior of parseaddr() in this case is not a bug.

Sorry for the noise.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg329382" id="msg329382">msg329382</a> - <a
    href="msg329382">(view)</a></th>
   <th>Author: Karthikeyan Singaravelan (xtreak) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2018-11-06 20:27</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Ah sorry, I was typing so long and had an idle session that I didn't realize @r.david.murray added a comment with the explanation. Just to add I tried using Perl module (<a href="https://metacpan.org/release/Email-Address">https://metacpan.org/release/Email-Address</a>) that uses regex for parsing that returns me two addresses and the regex is also not much comprehensible.

use v5.14;
use Email::Address;

my $line = 'John Doe <a href="mailto:jdoe@example.com">jdoe@example.com</a> &lt;<a href="mailto:other@example.net">other@example.net</a>&gt;';
my @addresses = Email::Address-&gt;parse($line);
say $addresses[0];
say $addresses[1];

say "Angle address regex";
say $Email::Address::angle_addr;


<a href="mailto:jdoe@example.com">jdoe@example.com</a>
<a href="mailto:other@example.net">other@example.net</a>
Angle address regex
(?^:(?^:(?^:\s*\((?:\s*(?^:(?^:(?&gt;[^()\\]+))|(?^:\\(?^:[^\x0A\x0D]))|))*\s*\)\s*)|\s+)*&lt;(?^:(?^:(?^:(?^:(?^:\s*\((?:\s*(?^:(?^:(?&gt;[^()\\]+))|(?^:\\(?^:[^\x0A\x0D]))|))*\s*\)\s*)|\s+)*(?^:[^\x00-\x1F\x7F()&lt;&gt;\[\]:;@\\,."\s]+(?:\.[^\x00-\x1F\x7F()&lt;&gt;\[\]:;@\\,."\s]+)*)(?^:(?^:\s*\((?:\s*(?^:(?^:(?&gt;[^()\\]+))|(?^:\\(?^:[^\x0A\x0D]))|))*\s*\)\s*)|\s+)*)|(?^:(?^:(?^:\s*\((?:\s*(?^:(?^:(?&gt;[^()\\]+))|(?^:\\(?^:[^\x0A\x0D]))|))*\s*\)\s*)|\s+)*"(?^:(?^:[^\\"])|(?^:\\(?^:[^\x0A\x0D])))*"(?^:(?^:\s*\((?:\s*(?^:(?^:(?&gt;[^()\\]+))|(?^:\\(?^:[^\x0A\x0D]))|))*\s*\)\s*)|\s+)*))\@(?^:(?^:(?^:(?^:\s*\((?:\s*(?^:(?^:(?&gt;[^()\\]+))|(?^:\\(?^:[^\x0A\x0D]))|))*\s*\)\s*)|\s+)*(?^:[^\x00-\x1F\x7F()&lt;&gt;\[\]:;@\\,."\s]+(?:\.[^\x00-\x1F\x7F()&lt;&gt;\[\]:;@\\,."\s]+)*)(?^:(?^:\s*\((?:\s*(?^:(?^:(?&gt;[^()\\]+))|(?^:\\(?^:[^\x0A\x0D]))|))*\s*\)\s*)|\s+)*)|(?^:(?^:(?^:\s*\((?:\s*(?^:(?^:(?&gt;[^()\\]+))|(?^:\\(?^:[^\x0A\x0D]))|))*\s*\)\s*)|\s+)*\[(?:\s*(?^:(?^:[^\[\]\\])|(?^:\\(?^:[^\x0A\x0D]))))*\s*\](?^:(?^:\s*\((?:\s*(?^:(?^:(?&gt;[^()\\]+))|(?^:\\(?^:[^\x0A\x0D]))|))*\s*\)\s*)|\s+)*)))&gt;(?^:(?^:\s*\((?:\s*(?^:(?^:(?&gt;[^()\\]+))|(?^:\\(?^:[^\x0A\x0D]))|))*\s*\)\s*)|\s+)*)


Thanks</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg329463" id="msg329463">msg329463</a> - <a
    href="msg329463">(view)</a></th>
   <th>Author: Kal Sze (kal.sze)</th>
   <th>Date: 2018-11-08 08:23</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Another failure case:

&gt;&gt;&gt; from email.utils import parseaddr
&gt;&gt;&gt; parseaddr('<a href="mailto:fo@o">fo@o</a>@bar.com')
('', '<a href="mailto:fo@o">fo@o</a>')

If I understand the RFC correctly, the correct results should be ('', '') because there are two '@' signs. The first '@' would need to be quoted for the address to be valid.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg340534" id="msg340534">msg340534</a> - <a
    href="msg340534">(view)</a></th>
   <th>Author: Stéphane Bortzmeyer (bortzmeyer)</th>
   <th>Date: 2019-04-19 10:16</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Note that this bug was used in an actual security attack so it is serious

<a href="https://medium.com/@fs0c131y/tchap-the-super-not-secure-app-of-the-french-government-84b31517d144">https://medium.com/@fs0c131y/tchap-the-super-not-secure-app-of-the-french-government-84b31517d144</a>
<a href="https://twitter.com/fs0c131y/status/1119143946687434753">https://twitter.com/fs0c131y/status/1119143946687434753</a></pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg340535" id="msg340535">msg340535</a> - <a
    href="msg340535">(view)</a></th>
   <th>Author: Karthikeyan Singaravelan (xtreak) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-04-19 10:28</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Relevant attack from matrix blog post.

<a href="https://matrix.org/blog/2019/04/18/security-update-sydent-1-0-2/">https://matrix.org/blog/2019/04/18/security-update-sydent-1-0-2/</a>

&gt; sydent uses python's email.utils.parseaddr function to parse the input email address before sending validation mail to it, but it turns out that if you hand parseaddr an malformed email address of form <a href="mailto:a@b.com">a@b.com</a>@c.com, it silently discards the @c.com prefix without error. The result of this is that if one requested a validation token for '<a href="mailto:a@malicious.org">a@malicious.org</a>@important.com', the token would be sent to '<a href="mailto:a@malicious.org">a@malicious.org</a>', but the address '<a href="mailto:a@malicious.org">a@malicious.org</a>@important.com' would be marked as validated. This release fixes this behaviour by asserting that the parsed email address is the same as the input email address.

I am marking this as a security issue.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg340933" id="msg340933">msg340933</a> - <a
    href="msg340933">(view)</a></th>
   <th>Author: jpic (jpic) <span title="Contributor form received">*</span></th>
   <th>Date: 2019-04-26 16:42</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Given the situation, could raising a SecurityWarning and a DeprecationWarning fix this issue ?</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg341069" id="msg341069">msg341069</a> - <a
    href="msg341069">(view)</a></th>
   <th>Author: Dain Dwarf (Dain Dwarf)</th>
   <th>Date: 2019-04-29 11:42</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Hello, kind of new here.

I just wanted to note that the issue that lead to Tchap's security attack still exists in the non-deprecated message_from_string function:

email.message_from_string('From: <a href="mailto:a@malicious.org">a@malicious.org</a>@important.com', policy=email.policy.default)['from'].addresses

(Address(display_name='', username='a', domain='malicious.org'),)

So, deprecating parseaddr is not enough for security purpose, unless there is another ticket for the new email API.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg341294" id="msg341294">msg341294</a> - <a
    href="msg341294">(view)</a></th>
   <th>Author: Ned Deily (ned.deily) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-05-02 18:07</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>@barry, @r.david.murray, With the additional info about attacks in the wild, should we now consider this a security issue?  If so, someone needs to provide an actual PR.  (Raising the priority to "deferred blocker" pending evaluation.)</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg341320" id="msg341320">msg341320</a> - <a
    href="msg341320">(view)</a></th>
   <th>Author: Windson Yang (Windson Yang) <span title="Contributor form received">*</span></th>
   <th>Date: 2019-05-03 01:45</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I found the issue located in <a href="https://github.com/python/cpython/blob/master/Lib/email/_parseaddr.py#L277">https://github.com/python/cpython/blob/master/Lib/email/_parseaddr.py#L277</a>

elif self.field[self.pos] in '.@':
    # email address is just an addrspec
    # this isn't very efficient since we start over
    self.pos = oldpos
    self.commentlist = oldcl
    addrspec = self.getaddrspec()
    returnlist = [(SPACE.join(self.commentlist), addrspec)]

The parseaddr function runs a for in loop over the input string, when it meets '.@' it will do something. That is why when the input string is '<a href="mailto:foo@bar.com">foo@bar.com</a>@example.com' will return ('', '<a href="mailto:foo@bar.com">foo@bar.com</a>'). One possible solution will be to check the string in the reverse order then we can always get the last '@' in the string.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg341322" id="msg341322">msg341322</a> - <a
    href="msg341322">(view)</a></th>
   <th>Author: Barry A. Warsaw (barry) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-05-03 02:09</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Well, at least we're not alone.  Here's a screen capture from Mail.app Version 12.4 (3445.104.8).</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg341362" id="msg341362">msg341362</a> - <a
    href="msg341362">(view)</a></th>
   <th>Author: jpic (jpic) <span title="Contributor form received">*</span></th>
   <th>Date: 2019-05-03 23:57</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I haven't found this specific case in an RFC, but checked Go's net/mail
library behavior and it just considers it broken:

$ cat mail.go
package main
import "fmt"
import "net/mail"
func main() {
    fmt.Println((&amp;mail.AddressParser{}).Parse("<a href="mailto:a@example.com">a@example.com</a>"))
    fmt.Println((&amp;mail.AddressParser{}).Parse("<a href="mailto:a@malicious.org">a@malicious.org</a>@example.com
"))
}

$ go run mail.go
&lt;<a href="mailto:a@example.com">a@example.com</a>&gt; &lt;nil&gt;
&lt;nil&gt; mail: expected single address, got "@example.com"

That would fix the security issue but not the whole ticket.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg341367" id="msg341367">msg341367</a> - <a
    href="msg341367">(view)</a></th>
   <th>Author: jpic (jpic) <span title="Contributor form received">*</span></th>
   <th>Date: 2019-05-04 01:10</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>The pull request has been updated to mimic net/mail's behavior rather than
trying to workaround user input.

Before:

    &gt;&gt;&gt; email.message_from_string('From: <a href="mailto:a@malicious.org">a@malicious.org</a>@important.com',
policy=email.policy.default)['from'].addresses
    (Address(display_name='', username='a', domain='malicious.org'),)

    &gt;&gt;&gt; parseaddr('<a href="mailto:a@malicious.org">a@malicious.org</a>@important.com')
    ('', '<a href="mailto:a@malicious.org">a@malicious.org</a>')

After:

    &gt;&gt;&gt; email.message_from_string('From: <a href="mailto:a@malicious.org">a@malicious.org</a>@important.com',
policy=email.policy.default)['from'].addresses
    (Address(display_name='', username='', domain=''),)

    &gt;&gt;&gt; parseaddr('<a href="mailto:a@malicious.org">a@malicious.org</a>@important.com')
    ('', 'a@')

I like what I saw under the hood, please feel free to hack me for other
tasks in the email stdlib.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg341370" id="msg341370">msg341370</a> - <a
    href="msg341370">(view)</a></th>
   <th>Author: Windson Yang (Windson Yang) <span title="Contributor form received">*</span></th>
   <th>Date: 2019-05-04 02:16</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Frome the answer from Alnitak (<a href="https://stackoverflow.com/questions/12355858/how-many-symbol-can-be-in-an-email-address">https://stackoverflow.com/questions/12355858/how-many-symbol-can-be-in-an-email-address</a>). Maybe we should raise an error when the address has multiple @ in it.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg341381" id="msg341381">msg341381</a> - <a
    href="msg341381">(view)</a></th>
   <th>Author: jpic (jpic) <span title="Contributor form received">*</span></th>
   <th>Date: 2019-05-04 13:02</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>At is allowed in the local part if quoted, the proposed patch acts within
get_domain() and getdomain() and does not affect local part parsing. This
still works:

&gt;&gt;&gt; parseaddr('"<a href="mailto:fo@bar">fo@bar</a>"@bar.com')
('', '"<a href="mailto:fo@bar">fo@bar</a>"@bar.com')

&gt;&gt;&gt; email.message_from_string('From: "<a href="mailto:a@b">a@b</a>"@ex.com
',policy=email.policy.default)['from'].addresses
(Address(display_name='', username='<a href="mailto:a@b">a@b</a>', domain='ex.com'),)

I'm not against raising an exception in parseaddr, but you should know that
currently nothing in parseaddr seems to raise an exception:

<a href="mailto:jpic@ci">jpic@ci</a>:~/cpython$ grep raise <a href="https://github.com/python/cpython/blob/master/Lib/email/_parseaddr.py">Lib/email/_parseaddr.py</a>
<a href="mailto:jpic@ci">jpic@ci</a>:~/cpython$

For example:

&gt;&gt;&gt; parseaddr('aoeu')
('', 'aoeu')
&gt;&gt;&gt; parseaddr('a@')
('', 'a@')

None of the above calls raised an exception. That is the reason why I did
not introduce a new Exception in the getdomain() change: I thought it would
be more consistent with the rest of the API as such.

As for the new API, the patch does raise a parse error:

 # this detect that the next caracter right after the parsed domain is
another @
if value and value[0] == '@':
      raise errors.HeaderParseError('Multiple domains')

But that's in the lower level API that is planned for going public later on
(probably when it will have unit tests), it's just the higher level API
that the user faces that swallows it. As a user you can still know about
that parse problem using the defects attribute:

&gt;&gt;&gt; email.message_from_string('From: <a href="mailto:a@malicious.org">a@malicious.org</a>@example.com',
policy=email.policy.default)['from'].defects[0]
InvalidHeaderDefect('invalid address in address-list')</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg344030" id="msg344030">msg344030</a> - <a
    href="msg344030">(view)</a></th>
   <th>Author: Abhilash Raj (maxking) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-05-31 06:26</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>How about we go a slightly different route than suggested by jpic and instead of returning a None value, we return the entire rest of the string as the domain? That would take care of the security issue since it won't be a valid domain anymore.


     msg = email.message_from_string(
        'From: SomeAbhilashRaj &lt;<a href="mailto:abhilash@malicious.org">abhilash@malicious.org</a>@important.com&gt;',    
        policy=email.policy.default)
     print(msg['From'].addresses)
     print(msg['From'].defects)

     (Address(display_name='SomeAbhilashRaj', username='abhilash', domain='<a href="mailto:malicious.org@important.com">malicious.org@important.com</a>&gt;'),)
     (InvalidHeaderDefect('invalid address in address-list'), InvalidHeaderDefect("missing trailing '&gt;' on angle-addr"),  InvalidHeaderDefect("unpected '@' in domain"), ObsoleteHeaderDefect("period in 'phrase'"))


This lets us do postel-style error recovery while working in RFC 2822 style grammar. 

I wrote this patch to achieve this:


@@ -1573,6 +1574,11 @@ def get_domain(value):
             domain.append(DOT)
             token, value = get_atom(value[1:])
             domain.append(token)
+    if value and value[0] == '@':
+        domain.defects.append(errors.InvalidHeaderDefect(
+            "unpected '@' in domain"))
+        token = get_unstructured(value)
+        domain.append(token)
     return domain, value

Does this makes sense?</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg344157" id="msg344157">msg344157</a> - <a
    href="msg344157">(view)</a></th>
   <th>Author: jpic (jpic) <span title="Contributor form received">*</span></th>
   <th>Date: 2019-06-01 07:51</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>The email API does error recovery without loading invalid domains into
the domain variable which could lead to dangerous situations, example
with "<a href="mailto:a@foo.">a@foo.</a>":

&gt;&gt;&gt; email.message_from_string('From: <a href="mailto:a@foo.">a@foo.</a>',policy=email.policy.default)['from'].addresses[0].domain
''

In perspective with the new patch proposed by maxking that lets an
invalid domain make it to the domain variable:

&gt;&gt;&gt; email.message_from_string('From: <a href="mailto:a@b">a@b</a>@c.com',policy=email.policy.default)['from'].addresses[0].domain
'<a href="mailto:b@c.com">b@c.com</a>'

For me maxking's suggestion opens the question of where to draw the
line between invalid domains should be loaded into the domain variable
and what invalid domains should not be loaded into the domain
variable.

Another smaller advantage of of Go's net/mail behaviour is that
results between parseaddr and email are consistently empty strings for
an invalid domain: parseaddr does not seem able to return a list of
defects.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg344205" id="msg344205">msg344205</a> - <a
    href="msg344205">(view)</a></th>
   <th>Author: Abhilash Raj (maxking) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-06-01 19:20</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I don't know if we can make the API consistent between parseaddr and the parsing header value since they are completely different even right now. Like you already noticed there is no way to register defects and instead parseaddr returns ('', '') to denote the failure to parse.

About parsing malicious domain, my line of thinking was along the lines of presenting whatever is there to user of the API, without 'hiding' that information. It would be harder to figure out the exception if the domain is missing. 

Even though the domain is parsed in the `domain` value, the value itself is clearly invalid. Any attempt to ever use that Address() will definitely cause an error (perhaps, there should be a sanity check in SMTP.send_message for that?).</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg344389" id="msg344389">msg344389</a> - <a
    href="msg344389">(view)</a></th>
   <th>Author: jpic (jpic) <span title="Contributor form received">*</span></th>
   <th>Date: 2019-06-03 07:51</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Thanks for your explanation, but in perspective with other invalid
domains, such as "foo." currently resulting in an empty string too:

&gt;&gt;&gt; email.message_from_string('From: <a href="mailto:a@foo.">a@foo.</a>',policy=email.policy.default)['from'].addresses[0].domain
''

Do you think this should also change the value of domain to "foo." ?

Also yes with parseaddr it seems that domain is an empty string if it
didn't find a valid domain at all, which is pretty safe in case of
malicious injection attempt - if that's what we're trying to save
python programs from, a clarification of the objective of the patch
would be welcome.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg344431" id="msg344431">msg344431</a> - <a
    href="msg344431">(view)</a></th>
   <th>Author: Abhilash Raj (maxking) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-06-03 15:44</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I agree that we currently abandon parsing (raise `HeaderParseError`) when we encounter a unexpected token when parsing domain (expected token is dot-atom-text).

However, that mechanism is meant to signal the higher level parser that we should look for a different type of token. In case of domain, we don't fallback to anything.

I believe we should fallback to `get_unstructured` when we do encounter an invalid domain (either `foo.` or `<a href="mailto:foo@exaomple">foo@exaomple</a>` or `<a href="mailto:foo@example.com">foo@example.com</a>`) and register defect. But, the `.domain` attribute on the address class should be None if the domain is invalid.

My proposed solution of `get_unstrucutured` is perhaps not a great idea either since we would end up parsing more than we should (maybe we should parse until `&gt;`?) in case of AddrList or something.

I would love to know what David and Barry think about this one?</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg344432" id="msg344432">msg344432</a> - <a
    href="msg344432">(view)</a></th>
   <th>Author: Abhilash Raj (maxking) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-06-03 15:46</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>slight typo in the previous message:

s/fallback to `get_unstructured` /fallback to *something*/g</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg347157" id="msg347157">msg347157</a> - <a
    href="msg347157">(view)</a></th>
   <th>Author: Barry A. Warsaw (barry) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-07-02 21:43</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I still think the only way to read the documentation for parseaddr('<a href="mailto:a@b">a@b</a>@c') is to return ('', '') - a tuple of empty strings.

The documentations says:

"Returns a tuple of that information, unless the parse fails, in which case a 2-tuple of ('', '') is returned."

Of course, it doesn't define exactly what a "failing parse" is, but I would claim that a non-RFC compliant address should fail to parse, at least for the parseaddr() interface.

I'm not concerned about inconsistencies between message_from_string() and parseaddr().  They are difference APIs.

I'll follow up on the PR, but does anybody disagree with that reasoning?</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg347183" id="msg347183">msg347183</a> - <a
    href="msg347183">(view)</a></th>
   <th>Author: Cyril Nicodème (cnicodeme)</th>
   <th>Date: 2019-07-03 07:17</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>This thread has been really interesting to follow, I'm glad to have opened it :)

I would agree with Barry here, it should follow the documentation.

BUT, I would suggest to add a "strict" parameter that would throw exceptions depending on the parsing issue (missing a @, having multiple @, etc).

That way, a basic usage would return the empty strings, letting the developer know the email is invalid, and advanced case would still be possible.

By default, I think having strict set to False would be logical, since it would follow the documentation.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg347223" id="msg347223">msg347223</a> - <a
    href="msg347223">(view)</a></th>
   <th>Author: jpic (jpic) <span title="Contributor form received">*</span></th>
   <th>Date: 2019-07-03 12:10</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Thanks for the kind words Cyril, sorry that this patch doesn't address exactly the issue that you have described initially, but rather the security issue related to it.

The exception depending on the parsing issue is already supported by the new API, although it's just "Invalid Domain" for now. For user interfaces it would be nice to detail parse errors indeed. Again I wonder if this should be a separate issue.

Concerning the default behavior, @maxking will know but I would try to defend the "secure by default" paradigm if necessary, especially in the deprecated API. Meanwhile, I think it would create more value for Python to invest in feature development in the new API, that has a very nice private API but apparently lacks unit tests and documentation before becoming available to users.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg348082" id="msg348082">msg348082</a> - <a
    href="msg348082">(view)</a></th>
   <th>Author: miss-islington (miss-islington)</th>
   <th>Date: 2019-07-17 21:54</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/8cb65d1381b027f0b09ee36bfed7f35bb4dec9a9">8cb65d1381b027f0b09ee36bfed7f35bb4dec9a9</a> by Miss Islington (bot) (jpic) in branch 'master':
<a class="closed" title="[closed] [CVE-2019-16056] email.utils.parseaddr mistakenly parse an email" href="issue34155">bpo-34155</a>: Dont parse domains containing @ (<a href="https://github.com/python/cpython/pull/13079" class="closed" title="GitHub PR 13079: [merged] bpo-34155: Dont parse domains containing @">GH-13079</a>)
<a href="https://github.com/python/cpython/commit/8cb65d1381b027f0b09ee36bfed7f35bb4dec9a9">https://github.com/python/cpython/commit/8cb65d1381b027f0b09ee36bfed7f35bb4dec9a9</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg349278" id="msg349278">msg349278</a> - <a
    href="msg349278">(view)</a></th>
   <th>Author: miss-islington (miss-islington)</th>
   <th>Date: 2019-08-09 08:30</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/c48d606adcef395e59fd555496c42203b01dd3e8">c48d606adcef395e59fd555496c42203b01dd3e8</a> by Miss Islington (bot) in branch '3.7':
<a class="closed" title="[closed] [CVE-2019-16056] email.utils.parseaddr mistakenly parse an email" href="issue34155">bpo-34155</a>: Dont parse domains containing @ (<a href="https://github.com/python/cpython/pull/13079" class="closed" title="GitHub PR 13079: [merged] bpo-34155: Dont parse domains containing @">GH-13079</a>)
<a href="https://github.com/python/cpython/commit/c48d606adcef395e59fd555496c42203b01dd3e8">https://github.com/python/cpython/commit/c48d606adcef395e59fd555496c42203b01dd3e8</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg349279" id="msg349279">msg349279</a> - <a
    href="msg349279">(view)</a></th>
   <th>Author: miss-islington (miss-islington)</th>
   <th>Date: 2019-08-09 08:31</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/217077440a6938a0b428f67cfef6e053c4f8673c">217077440a6938a0b428f67cfef6e053c4f8673c</a> by Miss Islington (bot) in branch '3.8':
<a class="closed" title="[closed] [CVE-2019-16056] email.utils.parseaddr mistakenly parse an email" href="issue34155">bpo-34155</a>: Dont parse domains containing @ (<a href="https://github.com/python/cpython/pull/13079" class="closed" title="GitHub PR 13079: [merged] bpo-34155: Dont parse domains containing @">GH-13079</a>)
<a href="https://github.com/python/cpython/commit/217077440a6938a0b428f67cfef6e053c4f8673c">https://github.com/python/cpython/commit/217077440a6938a0b428f67cfef6e053c4f8673c</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg349292" id="msg349292">msg349292</a> - <a
    href="msg349292">(view)</a></th>
   <th>Author: Ned Deily (ned.deily) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-08-09 15:22</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/13a19139b5e76175bc95294d54afc9425e4f36c9">13a19139b5e76175bc95294d54afc9425e4f36c9</a> by Ned Deily (Miss Islington (bot)) in branch '3.6':
<a class="closed" title="[closed] [CVE-2019-16056] email.utils.parseaddr mistakenly parse an email" href="issue34155">bpo-34155</a>: Dont parse domains containing @ (<a href="https://github.com/python/cpython/pull/13079" class="closed" title="GitHub PR 13079: [merged] bpo-34155: Dont parse domains containing @">GH-13079</a>) (<a href="https://github.com/python/cpython/pull/14826" class="closed" title="GitHub PR 14826: [merged] [3.6] bpo-34155: Dont parse domains containing @ (GH-13079)">GH-14826</a>)
<a href="https://github.com/python/cpython/commit/13a19139b5e76175bc95294d54afc9425e4f36c9">https://github.com/python/cpython/commit/13a19139b5e76175bc95294d54afc9425e4f36c9</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg349357" id="msg349357">msg349357</a> - <a
    href="msg349357">(view)</a></th>
   <th>Author: Abhilash Raj (maxking) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-08-10 20:31</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Closing this since teh PRs are merged.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg349464" id="msg349464">msg349464</a> - <a
    href="msg349464">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-08-12 13:00</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I change the issue type to security because of <a href="https://bugs.python.org/issue34155#msg340534">https://bugs.python.org/issue34155#msg340534</a>: "Note that this bug was used in an actual security attack so it is serious".</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg349465" id="msg349465">msg349465</a> - <a
    href="msg349465">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-08-12 13:02</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>This issue is a security issue so Python 2.7, 3.5, 3.6 should also be fixed, no?</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg349820" id="msg349820">msg349820</a> - <a
    href="msg349820">(view)</a></th>
   <th>Author: Abhilash Raj (maxking) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-08-15 19:19</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>@Victor: This is already backported to 3.6. I am not sure about what gets backported to 3.5 right now, I don't even see a 'Backport to 3.5' label on Github (which made me think we are discouraged to backport to 3.5). I can work on a manual backport if needed?

This patch most probably won't backport to 2.7 without re-writing it completely since the implementation in 2.7 is much different than what we have today.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg349891" id="msg349891">msg349891</a> - <a
    href="msg349891">(view)</a></th>
   <th>Author: Kyle Stanley (aeros) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-08-17 00:01</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>&gt; This is already backported to 3.6. I am not sure about what gets backported to 3.5 right now, I don't even see a 'Backport to 3.5' label on Github (which made me think we are discouraged to backport to 3.5). I can work on a manual backport if needed?

As far as I'm aware, backports to 3.5 have to be manually approved by those with repository management permissions, such the the organization owners (<a href="https://devguide.python.org/devcycle/#current-owners">https://devguide.python.org/devcycle/#current-owners</a>) and admins (<a href="https://devguide.python.org/devcycle/#current-administrators">https://devguide.python.org/devcycle/#current-administrators</a>)</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg349892" id="msg349892">msg349892</a> - <a
    href="msg349892">(view)</a></th>
   <th>Author: Abhilash Raj (maxking) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-08-17 02:15</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Created a backport PR for 3.5.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg349957" id="msg349957">msg349957</a> - <a
    href="msg349957">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-08-19 14:04</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>&gt; Created a backport PR for 3.5.

Thanks. I reviewed it (LGTM).

What about Python 2.7, it's also vulnerable, no?</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg349968" id="msg349968">msg349968</a> - <a
    href="msg349968">(view)</a></th>
   <th>Author: Abhilash Raj (maxking) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-08-19 20:28</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>2.7 needs a separate PR since the code is very different and my familiarity with 2.7 version of email package is very limited. 

I am going to work on a separate patch later this week for 2.7.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg350291" id="msg350291">msg350291</a> - <a
    href="msg350291">(view)</a></th>
   <th>Author: Łukasz Langa (lukasz.langa) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-08-23 14:07</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Downgraded the severity since 3.6 - 3.9 are merged.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg351281" id="msg351281">msg351281</a> - <a
    href="msg351281">(view)</a></th>
   <th>Author: Larry Hastings (larry) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-09-07 05:24</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/063eba280a11d3c9a5dd9ee5abe4de640907951b">063eba280a11d3c9a5dd9ee5abe4de640907951b</a> by larryhastings (Abhilash Raj) in branch '3.5':
[3.5] <a class="closed" title="[closed] [CVE-2019-16056] email.utils.parseaddr mistakenly parse an email" href="issue34155">bpo-34155</a>: Dont parse domains containing @ (<a href="https://github.com/python/cpython/pull/13079" class="closed" title="GitHub PR 13079: [merged] bpo-34155: Dont parse domains containing @">GH-13079</a>) (<a class="closed" title="[closed] Source installation sets incorrect permissions for Grammar3.2.3.final.0.pickle" href="issue15317">#15317</a>)
<a href="https://github.com/python/cpython/commit/063eba280a11d3c9a5dd9ee5abe4de640907951b">https://github.com/python/cpython/commit/063eba280a11d3c9a5dd9ee5abe4de640907951b</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg351283" id="msg351283">msg351283</a> - <a
    href="msg351283">(view)</a></th>
   <th>Author: Larry Hastings (larry) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-09-07 05:39</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>All PRs merged.  Thanks, everybody!</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg351364" id="msg351364">msg351364</a> - <a
    href="msg351364">(view)</a></th>
   <th>Author: Riccardo Schirone (rschiron)</th>
   <th>Date: 2019-09-09 08:51</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>CVE-2019-16056 has been assigned to this issue.
See <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16056">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16056</a> .</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg351377" id="msg351377">msg351377</a> - <a
    href="msg351377">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-09-09 09:31</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I reopen the issue since Python 2.7 is still vulnerable.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg352230" id="msg352230">msg352230</a> - <a
    href="msg352230">(view)</a></th>
   <th>Author: Roberto C. Sánchez (rcsanchez97) <span title="Contributor form received">*</span></th>
   <th>Date: 2019-09-12 23:06</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I am working on Debian LTS support.  I have submitted a PR that contains the necessary adjustments to implement the fix in 2.7.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg352444" id="msg352444">msg352444</a> - <a
    href="msg352444">(view)</a></th>
   <th>Author: miss-islington (miss-islington)</th>
   <th>Date: 2019-09-14 17:26</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/4cbcd2f8c4e12b912e4d21fd892eedf7a3813d8e">4cbcd2f8c4e12b912e4d21fd892eedf7a3813d8e</a> by Miss Islington (bot) (Roberto C. Sánchez) in branch '2.7':
[2.7] <a class="closed" title="[closed] [CVE-2019-16056] email.utils.parseaddr mistakenly parse an email" href="issue34155">bpo-34155</a>: Dont parse domains containing @ (<a href="https://github.com/python/cpython/pull/13079" class="closed" title="GitHub PR 13079: [merged] bpo-34155: Dont parse domains containing @">GH-13079</a>) (<a href="https://github.com/python/cpython/pull/16006" class="closed" title="GitHub PR 16006: [merged] [2.7] bpo-34155: Dont parse domains containing @ (GH-13079)">GH-16006</a>)
<a href="https://github.com/python/cpython/commit/4cbcd2f8c4e12b912e4d21fd892eedf7a3813d8e">https://github.com/python/cpython/commit/4cbcd2f8c4e12b912e4d21fd892eedf7a3813d8e</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg352445" id="msg352445">msg352445</a> - <a
    href="msg352445">(view)</a></th>
   <th>Author: Abhilash Raj (maxking) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-09-14 17:43</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Merged in 2.7, closing this one finally! 

Thanks to everyone who helped with this :)</pre>
   </td>
  </tr>
 
</table>

<table class="history table table-condensed table-striped"><tr><th colspan="4" class="header">
History
</th></tr><tr>
<th>Date</th>
<th>User</th>
<th>Action</th>
<th>Args</th>
</tr>
<tr><td>2019-09-14&nbsp;17:43:40</td><td>maxking</td><td>set</td><td>status: open -> closed<br />resolution: fixed<br />messages:
  + <a rel="nofollow" href="msg352445">msg352445</a><br /><br />stage: patch review -> resolved</td></tr>
<tr><td>2019-09-14&nbsp;17:26:40</td><td>miss-islington</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg352444">msg352444</a></td></tr>
<tr><td>2019-09-12&nbsp;23:06:37</td><td>rcsanchez97</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user32354">rcsanchez97</a><br />messages:
  + <a rel="nofollow" href="msg352230">msg352230</a><br /></td></tr>
<tr><td>2019-09-11&nbsp;21:10:36</td><td>python-dev</td><td>set</td><td>stage: resolved -> patch review<br />pull_requests:
  + <a rel="nofollow" href="pull_request15632">pull_request15632</a></td></tr>
<tr><td>2019-09-11&nbsp;01:32:47</td><td>Anselmo Melo</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user32342">Anselmo Melo</a><br /></td></tr>
<tr><td>2019-09-09&nbsp;13:49:10</td><td>mcepl</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user5290">mcepl</a><br /></td></tr>
<tr><td>2019-09-09&nbsp;09:33:42</td><td>vstinner</td><td>set</td><td>title: email.utils.parseaddr mistakenly parse an email -> [CVE-2019-16056] email.utils.parseaddr mistakenly parse an email</td></tr>
<tr><td>2019-09-09&nbsp;09:31:27</td><td>vstinner</td><td>set</td><td>status: closed -> open<br />resolution: fixed -> (no value)<br />messages:
  + <a rel="nofollow" href="msg351377">msg351377</a><br /></td></tr>
<tr><td>2019-09-09&nbsp;08:51:52</td><td>rschiron</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user31501">rschiron</a><br />messages:
  + <a rel="nofollow" href="msg351364">msg351364</a><br /></td></tr>
<tr><td>2019-09-07&nbsp;05:39:24</td><td>larry</td><td>set</td><td>status: open -> closed<br />resolution: fixed<br />messages:
  + <a rel="nofollow" href="msg351283">msg351283</a><br /></td></tr>
<tr><td>2019-09-07&nbsp;05:24:08</td><td>larry</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user2731">larry</a><br />messages:
  + <a rel="nofollow" href="msg351281">msg351281</a><br /></td></tr>
<tr><td>2019-08-23&nbsp;14:07:28</td><td>lukasz.langa</td><td>set</td><td>priority: deferred blocker -> critical<br />nosy:
  + <a rel="nofollow" href="user12704">lukasz.langa</a><br />messages:
  + <a rel="nofollow" href="msg350291">msg350291</a><br /><br /></td></tr>
<tr><td>2019-08-19&nbsp;20:28:31</td><td>maxking</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg349968">msg349968</a></td></tr>
<tr><td>2019-08-19&nbsp;14:04:52</td><td>vstinner</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg349957">msg349957</a></td></tr>
<tr><td>2019-08-17&nbsp;02:15:34</td><td>maxking</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg349892">msg349892</a><br />stage: patch review -> resolved</td></tr>
<tr><td>2019-08-17&nbsp;02:14:00</td><td>maxking</td><td>set</td><td>stage: resolved -> patch review<br />pull_requests:
  + <a rel="nofollow" href="pull_request15036">pull_request15036</a></td></tr>
<tr><td>2019-08-17&nbsp;00:01:00</td><td>aeros</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user31554">aeros</a><br />messages:
  + <a rel="nofollow" href="msg349891">msg349891</a><br /></td></tr>
<tr><td>2019-08-15&nbsp;19:19:43</td><td>maxking</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg349820">msg349820</a></td></tr>
<tr><td>2019-08-12&nbsp;13:02:14</td><td>vstinner</td><td>set</td><td>status: closed -> open<br /><br />messages:
  + <a rel="nofollow" href="msg349465">msg349465</a><br />versions:
  + Python 2.7, Python 3.5, Python 3.6</td></tr>
<tr><td>2019-08-12&nbsp;13:00:38</td><td>vstinner</td><td>set</td><td>type: behavior -> security<br />messages:
  + <a rel="nofollow" href="msg349464">msg349464</a></td></tr>
<tr><td>2019-08-10&nbsp;20:31:49</td><td>maxking</td><td>set</td><td>status: open -> closed<br /><br />messages:
  + <a rel="nofollow" href="msg349357">msg349357</a><br />stage: patch review -> resolved</td></tr>
<tr><td>2019-08-09&nbsp;15:22:25</td><td>ned.deily</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg349292">msg349292</a></td></tr>
<tr><td>2019-08-09&nbsp;08:31:33</td><td>miss-islington</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg349279">msg349279</a></td></tr>
<tr><td>2019-08-09&nbsp;08:30:50</td><td>miss-islington</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg349278">msg349278</a></td></tr>
<tr><td>2019-07-17&nbsp;21:54:55</td><td>miss-islington</td><td>set</td><td>pull_requests:
  + <a rel="nofollow" href="pull_request14620">pull_request14620</a></td></tr>
<tr><td>2019-07-17&nbsp;21:54:48</td><td>miss-islington</td><td>set</td><td>pull_requests:
  + <a rel="nofollow" href="pull_request14619">pull_request14619</a></td></tr>
<tr><td>2019-07-17&nbsp;21:54:41</td><td>miss-islington</td><td>set</td><td>pull_requests:
  + <a rel="nofollow" href="pull_request14618">pull_request14618</a></td></tr>
<tr><td>2019-07-17&nbsp;21:54:31</td><td>miss-islington</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user27838">miss-islington</a><br />messages:
  + <a rel="nofollow" href="msg348082">msg348082</a><br /></td></tr>
<tr><td>2019-07-03&nbsp;12:10:34</td><td>jpic</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg347223">msg347223</a></td></tr>
<tr><td>2019-07-03&nbsp;07:17:23</td><td>cnicodeme</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg347183">msg347183</a></td></tr>
<tr><td>2019-07-02&nbsp;21:43:09</td><td>barry</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg347157">msg347157</a><br />versions:
  + Python 3.9</td></tr>
<tr><td>2019-06-03&nbsp;15:46:14</td><td>maxking</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg344432">msg344432</a></td></tr>
<tr><td>2019-06-03&nbsp;15:44:34</td><td>maxking</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg344431">msg344431</a></td></tr>
<tr><td>2019-06-03&nbsp;07:51:50</td><td>jpic</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg344389">msg344389</a></td></tr>
<tr><td>2019-06-01&nbsp;19:20:33</td><td>maxking</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg344205">msg344205</a></td></tr>
<tr><td>2019-06-01&nbsp;07:51:22</td><td>jpic</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg344157">msg344157</a></td></tr>
<tr><td>2019-05-31&nbsp;06:26:22</td><td>maxking</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user18684">maxking</a><br />messages:
  + <a rel="nofollow" href="msg344030">msg344030</a><br /></td></tr>
<tr><td>2019-05-04&nbsp;13:02:09</td><td>jpic</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg341381">msg341381</a></td></tr>
<tr><td>2019-05-04&nbsp;02:16:20</td><td>Windson Yang</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg341370">msg341370</a></td></tr>
<tr><td>2019-05-04&nbsp;01:10:58</td><td>jpic</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg341367">msg341367</a></td></tr>
<tr><td>2019-05-03&nbsp;23:57:59</td><td>jpic</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg341362">msg341362</a></td></tr>
<tr><td>2019-05-03&nbsp;21:27:43</td><td>python-dev</td><td>set</td><td>keywords:
  + <a rel="nofollow" href="keyword2">patch</a><br />stage: patch review<br />pull_requests:
  + <a rel="nofollow" href="pull_request12994">pull_request12994</a></td></tr>
<tr><td>2019-05-03&nbsp;02:09:13</td><td>barry</td><td>set</td><td>files:
  + <a rel="nofollow" href="file48295">Screen Shot 2019-05-02 at 22.07.27.png</a><br /><br />messages:
  + <a rel="nofollow" href="msg341322">msg341322</a></td></tr>
<tr><td>2019-05-03&nbsp;01:45:21</td><td>Windson Yang</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user28180">Windson Yang</a><br />messages:
  + <a rel="nofollow" href="msg341320">msg341320</a><br /></td></tr>
<tr><td>2019-05-02&nbsp;18:07:09</td><td>ned.deily</td><td>set</td><td>priority: normal -> deferred blocker<br />nosy:
  + <a rel="nofollow" href="user5248">ned.deily</a><br />messages:
  + <a rel="nofollow" href="msg341294">msg341294</a><br /><br /></td></tr>
<tr><td>2019-04-29&nbsp;12:03:35</td><td>jwilk</td><td>set</td><td>nosy:
  - <a rel="nofollow" href="user4692">jwilk</a><br /></td></tr>
<tr><td>2019-04-29&nbsp;11:42:55</td><td>Dain Dwarf</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user31198">Dain Dwarf</a><br />messages:
  + <a rel="nofollow" href="msg341069">msg341069</a><br /></td></tr>
<tr><td>2019-04-26&nbsp;16:42:43</td><td>jpic</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user31180">jpic</a><br />messages:
  + <a rel="nofollow" href="msg340933">msg340933</a><br /></td></tr>
<tr><td>2019-04-23&nbsp;07:45:20</td><td>vstinner</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user2377">vstinner</a><br /></td></tr>
<tr><td>2019-04-23&nbsp;07:13:33</td><td>vstinner</td><td>set</td><td>nosy:
  - <a rel="nofollow" href="user2377">vstinner</a><br /></td></tr>
<tr><td>2019-04-19&nbsp;12:02:10</td><td>nicoe</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user15084">nicoe</a><br /></td></tr>
<tr><td>2019-04-19&nbsp;10:28:43</td><td>xtreak</td><td>set</td><td>keywords:
  + <a rel="nofollow" href="keyword15">security_issue</a><br />nosy:
  + <a rel="nofollow" href="user2377">vstinner</a><br />messages:
  + <a rel="nofollow" href="msg340535">msg340535</a><br /><br /></td></tr>
<tr><td>2019-04-19&nbsp;10:16:21</td><td>bortzmeyer</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user31129">bortzmeyer</a><br />messages:
  + <a rel="nofollow" href="msg340534">msg340534</a><br /></td></tr>
<tr><td>2018-11-08&nbsp;08:23:11</td><td>kal.sze</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user27827">kal.sze</a><br />messages:
  + <a rel="nofollow" href="msg329463">msg329463</a><br /></td></tr>
<tr><td>2018-11-06&nbsp;20:27:34</td><td>xtreak</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg329382">msg329382</a></td></tr>
<tr><td>2018-11-06&nbsp;19:55:26</td><td>msapiro</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg329380">msg329380</a></td></tr>
<tr><td>2018-11-06&nbsp;19:48:48</td><td>xtreak</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user28746">xtreak</a><br />messages:
  + <a rel="nofollow" href="msg329379">msg329379</a><br /></td></tr>
<tr><td>2018-11-06&nbsp;19:24:59</td><td>r.david.murray</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg329377">msg329377</a></td></tr>
<tr><td>2018-11-06&nbsp;19:23:24</td><td>r.david.murray</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg329376">msg329376</a></td></tr>
<tr><td>2018-11-06&nbsp;18:14:44</td><td>msapiro</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user2507">msapiro</a><br />messages:
  + <a rel="nofollow" href="msg329372">msg329372</a><br /></td></tr>
<tr><td>2018-07-19&nbsp;21:03:38</td><td>jwilk</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user4692">jwilk</a><br />messages:
  + <a rel="nofollow" href="msg321967">msg321967</a><br /></td></tr>
<tr><td>2018-07-19&nbsp;15:21:25</td><td>r.david.murray</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg321959">msg321959</a></td></tr>
<tr><td>2018-07-19&nbsp;15:19:13</td><td>r.david.murray</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg321958">msg321958</a></td></tr>
<tr><td>2018-07-19&nbsp;15:18:03</td><td>r.david.murray</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg321957">msg321957</a><br />versions:
  + Python 3.7, Python 3.8, - Python 3.6</td></tr>
<tr><td>2018-07-19&nbsp;14:53:43</td><td>cnicodeme</td><td>create</td><td></td></tr>
</table>

</div>


</div> <!-- content-body -->
<div id="footer">
<div id="credits">
  Hosted on <a href="https://m.do.co/c/783434964889" title="Hosted on DigitalOcean">DigitalOcean</a>,
  <br>
  Supported by <a href="https://python.org/psf-landing/" title="The Python Software Foundation">The Python Software Foundation</a>,
  <br>
  Powered by <a href="http://roundup.sourceforge.net" title="Powered by the Roundup Issue Tracker">Roundup</a>
</div> <!-- credits -->
Copyright &copy; 1990-2020, <a href="http://python.org/psf">Python Software Foundation</a><br />
<a href="http://python.org/about/legal">Legal Statements</a>
</div> <!-- footer -->
</div> <!-- body-main -->
</div> <!-- content -->



</body>
</html>

