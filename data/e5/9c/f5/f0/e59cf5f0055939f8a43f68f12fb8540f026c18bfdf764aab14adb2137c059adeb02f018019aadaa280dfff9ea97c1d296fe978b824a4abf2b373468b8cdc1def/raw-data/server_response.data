<!DOCTYPE html>
<html lang="en">
<head>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-92665328-1"></script>
<script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        
        gtag('config', 'UA-92665328-1');
    </script>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
<title>[CVE-2017-0563] Google Nexus 9 Cypress SAR Firmware Injection via I2C</title>
<meta name="name" content="CVE-2017-0563">
<meta name="description" content="Google Nexus 9 Cypress SAR Firmware Injection via I2C">
<meta name="image" content="https://alephsecurity.com/assets/img/logo-black.png">
<meta name="twitter:card" content="summary">
<meta name="twitter:site" content="@alephsecurity">
<meta name="twitter:creator" content="@alephsecurity">
<meta name="twitter:title" content="CVE-2017-0563">
<meta name="twitter:url" content="https://alephsecurity.com/vulns/aleph-2017009">
<meta name="twitter:description" content="Google Nexus 9 Cypress SAR Firmware Injection via I2C">
<meta name="twitter:image:src" content="https://alephsecurity.com/assets/img/logo-black.png">
<meta property="og:site_name" content="">
<meta property="og:title" content="CVE-2017-0563">
<meta property="og:type" content="article">
<meta property="og:description" content="Google Nexus 9 Cypress SAR Firmware Injection via I2C">
<meta property="og:url" content="https://alephsecurity.com/vulns/aleph-2017009">
<meta property="article:published_time" content="2017-05-03T00:00:00+00:00">
<meta property="article:author" content="https://alephsecurity.com">
<meta property="og:image" content="https://alephsecurity.com/assets/img/logo-black.png">
<link rel="icon" href="/favicon.png">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inconsolata:400,700">
<link rel="stylesheet" type="text/css" href="/assets/css/main.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.css" integrity="sha384-wITovz90syo1dJWVh32uuETPVEtGigN07tkttEqPv+uR2SE/mbQcG7ATL28aI9H0" crossorigin="anonymous">
<script src="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.js" integrity="sha384-/y1Nn9+QQAipbNQWU65krzJralCnuOasHncUFXGkdwntGeSvQicrYkiUBwsgUqc1" crossorigin="anonymous"></script>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({
      messageStyle: "none",
      tex2jax: {preview: "none"},
      CommonHTML: { linebreaks: { automatic: true } },
      "HTML-CSS": { linebreaks: { automatic: true } },
      SVG: { linebreaks: { automatic: true } }
    });
    </script>
<script type="text/javascript" async src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML">
    </script>
</head>
<body>
<div class="wrapper">
<div class="page__back">
<a href="/">&lt;-- <span class="smallogo">א</span></a>
</div>
<div class="page">
<div class="advisory">
<div class="advisory__title">
<h1>Google Nexus 9 Cypress SAR Firmware Injection via I2C</h1>
</div>
<div class="advisory__subtitle">
Aleph Research Advisory
</div>
<div class="advisory__meta">
<p></p>
</div>
<h2>Identifier</h2>
<div class="cve-critical"><span class="" title="Google Nexus 9 Cypress SAR Firmware Injection via I2C"><a href="/vulns/aleph-2017009">CVE-2017-0563</a></span></div>
<h2>Severity</h2>
Critical
<h2>Product</h2>
<p>Google Nexus 9</p>
<h2>Vulnerable Version</h2>
<p>Nexus 9 Android Builds before N4F27B - May 2017, i.e. before bootloader 3.50.0.0143.</p>
<h2>Mitigation</h2>
<p>Install N4F27B or later (bootloader version 3.50.0.0143).</p>
<h2>Technical Details</h2>
<div class="advisory__content" ?>
<p>The Nexus 9 device contains a sensor SoC manufactured by Cypress. The sensor is managed by a driver available under <a href="https://android.googlesource.com/kernel/tegra/+/android-7.1.1_r0.53/drivers/input/touchscreen/cy8c_sar.c">drivers/input/touchscreen/cy8c_sar.c</a>. The driver uses the sensor’s data in order to regulate the radiation level emitted by the device.</p>
<p>The sensor communicates with the application processor via I\(^2\)C bus #1, which also provides a firmware update interface. During the platform boot, the driver samples the SoC’s firmware’s version via chip address <code class="language-plaintext highlighter-rouge">0x5{c,d}</code>, register <code class="language-plaintext highlighter-rouge">0x6</code>. If it is different than the one available under <code class="language-plaintext highlighter-rouge">/vendor/firmware/sar{0,1}.img</code>, it initiates with a firmware flashing process (via I\(^2\)C chip address <code class="language-plaintext highlighter-rouge">0x6{0,1}</code>). It seems though that the firmware is not signed by Cypress, thus anyone having access to the I\(^2\)C bus, can reflash the firmware of the SoC.</p>
<p>On Nexus 9 before build <code class="language-plaintext highlighter-rouge">N4F27B</code>, the I\(^2\)C bus could be accessed in four ways:</p>
<ol>
<li>Directly by the kernel.</li>
<li>Via the <code class="language-plaintext highlighter-rouge">/dev/i2c-N</code> character devices. However, as per the SElinux policy in Nexus 9, these devices have the <code class="language-plaintext highlighter-rouge">i2c_device</code> context which can only be accessed when one is under the <code class="language-plaintext highlighter-rouge">su</code> domain – only available on <code class="language-plaintext highlighter-rouge">eng</code>/<code class="language-plaintext highlighter-rouge">userdebug</code> builds, i.e. <strong>not on production</strong>.</li>
<li>Via the USB fastboot interface, accessible by the <code class="language-plaintext highlighter-rouge">fastboot oem {i2cr, i2cw, i2crNoAddr, i2cwNoAddr}</code> commands:
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>fastboot oem i2cr 1 0xb8 6 1
<span class="c">...
</span><span class="go">(bootloader) ret:0
</span><span class="gp">(bootloader) &gt;</span><span class="w"> </span><span class="o">[</span>1] <span class="o">=</span> 1f 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
<span class="go">OKAY [  0.012s]
finished. total time: 0.013s
</span></code></pre></div> </div>
</li>
<li>Via the <code class="language-plaintext highlighter-rouge">HBOOT</code> interface, available by UART (exposed by the headphones jack). The I\(^2\)C buses could be accessed by the <code class="language-plaintext highlighter-rouge">i2cr</code>, <code class="language-plaintext highlighter-rouge">i2cw</code>, <code class="language-plaintext highlighter-rouge">i2crNoAddr</code>, <code class="language-plaintext highlighter-rouge">i2cwNoAddr</code> commands:</li>
</ol>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">hboot&gt;</span><span class="w"> </span>i2cr 1 0xb8 6 1
<span class="go">ret:0
</span><span class="gp">     &gt;</span><span class="w"> </span><span class="o">[</span>1] <span class="o">=</span> 1f 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
<span class="go">     
</span><span class="gp">hboot&gt;</span><span class="w">
</span></code></pre></div></div>
<p>Vectors 3 &amp; 4 are especially significant because theoretically they can be used by either a physical attacker (rebooting the device into <code class="language-plaintext highlighter-rouge">fastboot</code>) or by <strong>malicious chargers / headphones</strong>. For example, a malicious charger connected to an ADB-enabled device may reboot the device into fastboot if the user authorizes the charger. As for headphones, on builds before <code class="language-plaintext highlighter-rouge">N4F26T</code> they could reboot the device into <code class="language-plaintext highlighter-rouge">HBOOT</code> by issuing <code class="language-plaintext highlighter-rouge">reboot oem-42</code> on the <code class="language-plaintext highlighter-rouge">FIQ</code> debugger prompt. See <a href="https://alephsecurity.com/2017/03/08/nexus9-fiq-debugger/">our blog post</a> for more details.</p>
<h2 id="proof-of-concept">Proof-of-Concept</h2>
<p>To demonstrate the SoC can be attacked via I\(^2\)C, we modified its firmware image. Then we managed to flash the modified image via the I\(^2\)C bus by the second vector using <code class="language-plaintext highlighter-rouge">i2ctools</code> (i.e. the test device ran our own AOSP-compiled, non-production build). The first firmware image we flashed, <a href="https://github.com/alephsecurity/PoCs/tree/master/CVE-2017-0563">available on GitHub</a> increases the version to <code class="language-plaintext highlighter-rouge">0x3f</code>:</p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">flounder:/ #</span><span class="w"> </span>/data/local/tmp/i2cget <span class="nt">-f</span> <span class="nt">-y</span> 1 0x5c 0x6
<span class="go">/data/local/tmp/i2cget -f -y 1 0x5c 0x6
0x3f
</span><span class="gp">flounder:/ #</span><span class="w">
</span></code></pre></div></div>
<p>The second broke the operation of the chip – from that point forward, we could not reflash the chip since it stopped responding via I\(^2\)C:</p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="go">[   21.431832] CYPRESS_SAR: probe of 1-005d failed with error -1
[   61.118692] [SAR] active=80 
</span></code></pre></div></div>
<p>As for the 3rd and 4th vectors, HBOOT limits the number of command arguments to 16 which creates a technical difficulty controlling the last bytes of each firmware image line (which also contains the checksum) during the flashing process, however further research may show it can be bypassed as well.</p>
<h2 id="patch">Patch</h2>
<p>Google patched the vulnerability on build <code class="language-plaintext highlighter-rouge">N4F27B</code> / bootloader <code class="language-plaintext highlighter-rouge">3.50.0.0143</code> by restricting access to the I\(^2\)C buses – removing vectors 3 and 4. The I\(^2\)C related bootloader commands are no longer available:</p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>fastboot oem i2cr 1 0xb8 6 1
<span class="c">...
</span><span class="go">(bootloader) [ERR] Command error !!!
OKAY [  0.011s]

finished. total time: 0.012s
</span></code></pre></div></div>
<p>Please note that although Google published the advisory on the April Security Bulletin, the patch has been included only since the April 5 2017 Security Patch Level, where the April Nexus 9 image (<code class="language-plaintext highlighter-rouge">N4F26X</code>) has the April 1 2017 Security Patch Level, hence it does not contain the patched bootloader.</p>
</div>
<h2>Timeline</h2>
<div class="list"><ul><li><div class="list__date"><span>03-May-17<span></div>: Public disclosure.</li><li><div class="list__date"><span>01-May-17<span></div>: Patch available.</li><li><div class="list__date"><span>03-Apr-17<span></div>: Vendor advisory available.</li><li><div class="list__date"><span>01-Mar-17<span></div>: Added as <span class="cve-critical" title="Google Nexus 9 Cypress SAR Firmware Injection via I2C"><a href="/vulns/aleph-2017009">ALEPH-2017009</a></span>.</li><li><div class="list__date"><span>21-Dec-16<span></div>: Vulnerability triaged by Vendor (Critical).</li><li><div class="list__date"><span>09-Oct-16<span></div>: Reported.</li></ul></div>

<h2>Posts</h2>
<div class="pagelist__narrow"><ul> <li onclick="javscript:document.location.href='/2017/06/13/nexus9-ephemeral-fiq/'"> <a href="/2017/06/13/nexus9-ephemeral-fiq/">Nexus 9 vs. Malicious Headphones, Take Two </a> <div class="pagelist__subtitle">By <a href="/authors/roeeh">Roee Hay</a>, <div class="pagelist__date"><span>13-Jun 2017</span></div></div></li> <li onclick="javscript:document.location.href='/2017/03/08/nexus9-fiq-debugger/'"> <a href="/2017/03/08/nexus9-fiq-debugger/">Attacking Nexus 9 with Malicious Headphones </a> <div class="pagelist__subtitle">By <a href="/authors/roeeh">Roee Hay</a>, <div class="pagelist__date"><span>08-Mar 2017</span></div></div></li> </ul></div>
<h2>Credit</h2>
<div class="list">
<ul>
<li>
<a href="/authors/roeeh">Roee Hay</a> (<a href="https://twitter.com/roeehay">@roeehay</a>) of Aleph Research, HCL Technologies
</li>
</ul>
</div>
<h2>External References</h2>
<div class="numberedlist">
<ol>
<li>
<a href="https://developers.google.com/android/images">Factory Images for Nexus and Pixel Devices</a>
</li>
<li>
<a href="https://source.android.com/security/bulletin/2017-04-01#eop-in-htc-touchscreen-driver">Google's Advisory (April 2017)</a>
</li>
</ol>
</div>
</div>
</div>
</div>
</body>
</html>
