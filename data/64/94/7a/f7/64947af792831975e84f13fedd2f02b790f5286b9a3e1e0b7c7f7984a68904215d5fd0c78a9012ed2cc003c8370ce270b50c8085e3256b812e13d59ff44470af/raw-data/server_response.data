<!DOCTYPE html>
<html lang="en">
<head>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-92665328-1"></script>
<script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        
        gtag('config', 'UA-92665328-1');
    </script>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
<title>[CVE-2017-1000363] Linux lp.c Out-of-Bounds Write via Kernel Command-line</title>
<meta name="name" content="CVE-2017-1000363">
<meta name="description" content="Linux lp.c Out-of-Bounds Write via Kernel Command-line">
<meta name="image" content="https://alephsecurity.com/assets/img/logo-black.png">
<meta name="twitter:card" content="summary">
<meta name="twitter:site" content="@alephsecurity">
<meta name="twitter:creator" content="@alephsecurity">
<meta name="twitter:title" content="CVE-2017-1000363">
<meta name="twitter:url" content="https://alephsecurity.com/vulns/aleph-2017023">
<meta name="twitter:description" content="Linux lp.c Out-of-Bounds Write via Kernel Command-line">
<meta name="twitter:image:src" content="https://alephsecurity.com/assets/img/logo-black.png">
<meta property="og:site_name" content="">
<meta property="og:title" content="CVE-2017-1000363">
<meta property="og:type" content="article">
<meta property="og:description" content="Linux lp.c Out-of-Bounds Write via Kernel Command-line">
<meta property="og:url" content="https://alephsecurity.com/vulns/aleph-2017023">
<meta property="article:published_time" content="2017-05-23T00:00:00+00:00">
<meta property="article:author" content="https://alephsecurity.com">
<meta property="og:image" content="https://alephsecurity.com/assets/img/logo-black.png">
<link rel="icon" href="/favicon.png">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inconsolata:400,700">
<link rel="stylesheet" type="text/css" href="/assets/css/main.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.css" integrity="sha384-wITovz90syo1dJWVh32uuETPVEtGigN07tkttEqPv+uR2SE/mbQcG7ATL28aI9H0" crossorigin="anonymous">
<script src="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.js" integrity="sha384-/y1Nn9+QQAipbNQWU65krzJralCnuOasHncUFXGkdwntGeSvQicrYkiUBwsgUqc1" crossorigin="anonymous"></script>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({
      messageStyle: "none",
      tex2jax: {preview: "none"},
      CommonHTML: { linebreaks: { automatic: true } },
      "HTML-CSS": { linebreaks: { automatic: true } },
      SVG: { linebreaks: { automatic: true } }
    });
    </script>
<script type="text/javascript" async src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML">
    </script>
</head>
<body>
<div class="wrapper">
<div class="page__back">
<a href="/">&lt;-- <span class="smallogo">◊ê</span></a>
</div>
<div class="page">
<div class="advisory">
<div class="advisory__title">
<h1>Linux lp.c Out-of-Bounds Write via Kernel Command-line</h1>
</div>
<div class="advisory__subtitle">
Aleph Research Advisory
</div>
<div class="advisory__meta">
<p></p>
</div>
<h2>Identifier</h2>
<div class="cve-moderate"><span class="" title="Linux lp.c Out-of-Bounds Write via Kernel Command-line"><a href="/vulns/aleph-2017023">CVE-2017-1000363</a></span></div>
<h2>Severity</h2>
Moderate
<h2>Products</h2>
<div class="numberedlistnoalternative">
<ol>
<li><p>Linux</p>
</li>
</ol>
</div>
<h2>Vulnerable Versions</h2>
<div class="numberedlistnoalternative">
<ol>
<li>
 <p>Linux 4.12-rc1 and below</p>
</li>
<li>
<p>Linux 3.x</p>
</li>
<li>
<p>Linux 2.6.x</p>
</li>
<li>
<p>Linux 2.4.x</p>
</li>
<li>
<p>Linux 2.2.x</p>
</li>
</ol>
</div>
<h2>Mitigation</h2>
<p>Patch has been committed to the mainline tree, available in the 4.12-rc2 release. 3.18 / 4.4 / 4.9 / 4.11 stable releases with the patch are also available (see timeline).</p>
<h2>Technical Details</h2>
<div class="advisory__content" ?>
<p>Due to a missing bounds check, and the fact that <code class="language-plaintext highlighter-rouge">parport_ptr</code> integer is static, a kernel command-line adversary (can happen due to bootloader vulnerabilities in Secure Boot environments, e.g. <span class="cve-critical" title="Motorola Android Bootloader Kernel Cmdline Injection Secure Boot Bypass"><a href="/vulns/aleph-2017011">CVE-2016-10277</a></span>) can overflow the <code class="language-plaintext highlighter-rouge">parport_nr</code> array in the following code, by appending many (<code class="language-plaintext highlighter-rouge">&gt;LP_NO</code>) <code class="language-plaintext highlighter-rouge">lp=none</code> arguments to the command line.</p>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">static</span> <span class="kt">int</span> <span class="n">parport_nr</span><span class="p">[</span><span class="n">LP_NO</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="p">[</span><span class="mi">0</span> <span class="p">...</span> <span class="n">LP_NO</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">LP_PARPORT_UNSPEC</span> <span class="p">};</span>
<span class="k">static</span> <span class="kt">char</span> <span class="o">*</span><span class="n">parport</span><span class="p">[</span><span class="n">LP_NO</span><span class="p">];</span>
<span class="p">[...]</span>
<span class="cp">#ifndef MODULE
</span><span class="k">static</span> <span class="kt">int</span> <span class="n">__init</span> <span class="nf">lp_setup</span> <span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">)</span>
<span class="p">{</span>
<span class="k">static</span> <span class="kt">int</span> <span class="n">parport_ptr</span><span class="p">;</span>
<span class="p">[...]</span>
<span class="p">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="o">!</span><span class="n">strncmp</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="s">"parport"</span><span class="p">,</span> <span class="mi">7</span><span class="p">))</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">simple_strtoul</span><span class="p">(</span><span class="n">str</span><span class="o">+</span><span class="mi">7</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="mi">10</span><span class="p">);</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">parport_ptr</span> <span class="o">&lt;</span> <span class="n">LP_NO</span><span class="p">)</span>
        <span class="n">parport_nr</span><span class="p">[</span><span class="n">parport_ptr</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span>
    <span class="k">else</span>
        <span class="n">printk</span><span class="p">(</span><span class="n">KERN_INFO</span> <span class="s">"lp: too many ports, %s ignored.</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span>
               <span class="n">str</span><span class="p">);</span>
<span class="p">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="o">!</span><span class="n">strcmp</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="s">"auto"</span><span class="p">))</span> <span class="p">{</span>
    <span class="n">parport_nr</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">LP_PARPORT_AUTO</span><span class="p">;</span>
<span class="p">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="o">!</span><span class="n">strcmp</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="s">"none"</span><span class="p">))</span> <span class="p">{</span>
    <span class="n">parport_nr</span><span class="p">[</span><span class="n">parport_ptr</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">LP_PARPORT_NONE</span><span class="p">;</span>
<span class="p">[...]</span>
<span class="cp">#endif
</span><span class="p">[...]</span>
<span class="n">__setup</span><span class="p">(</span><span class="s">"lp="</span><span class="p">,</span> <span class="n">lp_setup</span><span class="p">);</span>
</code></pre></div></div>
<h2 id="patch">Patch</h2>
<p>As per our report, Willy Tarreau commited the following patch:</p>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">diff</span> <span class="o">--</span><span class="n">git</span> <span class="n">a</span><span class="o">/</span><span class="n">drivers</span><span class="o">/</span><span class="kt">char</span><span class="o">/</span><span class="n">lp</span><span class="p">.</span><span class="n">c</span> <span class="n">b</span><span class="o">/</span><span class="n">drivers</span><span class="o">/</span><span class="kt">char</span><span class="o">/</span><span class="n">lp</span><span class="p">.</span><span class="n">c</span>
<span class="n">index</span> <span class="mf">565e4</span><span class="n">cf</span><span class="p">..</span><span class="mi">8249762</span> <span class="mi">100644</span>
<span class="o">---</span> <span class="n">a</span><span class="o">/</span><span class="n">drivers</span><span class="o">/</span><span class="kt">char</span><span class="o">/</span><span class="n">lp</span><span class="p">.</span><span class="n">c</span>
<span class="o">+++</span> <span class="n">b</span><span class="o">/</span><span class="n">drivers</span><span class="o">/</span><span class="kt">char</span><span class="o">/</span><span class="n">lp</span><span class="p">.</span><span class="n">c</span>
<span class="err">@@</span> <span class="o">-</span><span class="mi">859</span><span class="p">,</span><span class="mi">7</span> <span class="o">+</span><span class="mi">859</span><span class="p">,</span><span class="mi">11</span> <span class="err">@@</span> <span class="k">static</span> <span class="kt">int</span> <span class="n">__init</span> <span class="nf">lp_setup</span> <span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">)</span>
 	<span class="err">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">strcmp</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="s">"auto"</span><span class="p">))</span> <span class="p">{</span>
 		<span class="n">parport_nr</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">LP_PARPORT_AUTO</span><span class="p">;</span>
 	<span class="p">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="o">!</span><span class="n">strcmp</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="s">"none"</span><span class="p">))</span> <span class="p">{</span>
<span class="o">-</span>		<span class="n">parport_nr</span><span class="p">[</span><span class="n">parport_ptr</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">LP_PARPORT_NONE</span><span class="p">;</span>
<span class="o">+</span>		<span class="k">if</span> <span class="p">(</span><span class="n">parport_ptr</span> <span class="o">&lt;</span> <span class="n">LP_NO</span><span class="p">)</span>
<span class="o">+</span>			<span class="n">parport_nr</span><span class="p">[</span><span class="n">parport_ptr</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">LP_PARPORT_NONE</span><span class="p">;</span>
<span class="o">+</span>		<span class="k">else</span>
<span class="o">+</span>			<span class="n">printk</span><span class="p">(</span><span class="n">KERN_INFO</span> <span class="s">"lp: too many ports, %s ignored.</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span>
<span class="o">+</span>			       <span class="n">str</span><span class="p">);</span>
 	<span class="p">}</span> <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="o">!</span><span class="n">strcmp</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="s">"reset"</span><span class="p">))</span> <span class="p">{</span>
 		<span class="n">reset</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
 	<span class="p">}</span>
</code></pre></div></div>
</div>
<h2>Timeline</h2>
<div class="list"><ul><li><div class="list__date"><span>30-May-17<span></div>: Deadline.</li><li><div class="list__date"><span>25-May-17<span></div>: <a href="https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git/commit/?h=v4.9.30&id=5d263d94a870a774a24acb2a2cc1e79ef39c2416">Patch available</a> (Linux 4.9.30).</li><li><div class="list__date"><span>25-May-17<span></div>: <a href="https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git/commit/?h=v4.11.3&id=28c7411cdbc41396dceff7e1b37dbb659f7bdfb2">Patch available</a> (Linux 4.11.3).</li><li><div class="list__date"><span>25-May-17<span></div>: <a href="https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git/commit/?h=v4.4.70&id=cda5c7e625cefed46311cb0b37816fb2ff42a8ee">Patch available</a> (Linux 4.4.70).</li><li><div class="list__date"><span>25-May-17<span></div>: <a href="https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git/commit/?h=v3.18.55&id=f4615841767ff7908599e643f587078670a390c9">Patch available</a> (Linux 3.18.55).</li><li><div class="list__date"><span>23-May-17<span></div>: Public disclosure.</li><li><div class="list__date"><span>22-May-17<span></div>: <a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?h=v4.12-rc2&id=3e21f4af170bebf47c187c1ff8bf155583c9f3b1">Patch available</a> (Linux mainline 4.12-rc2).</li><li><div class="list__date"><span>17-May-17<span></div>: <span class="cve-moderate" title="Linux lp.c Out-of-Bounds Write via Kernel Command-line"><a href="/vulns/aleph-2017023">CVE-2017-1000363</a></span> assigned.</li><li><div class="list__date"><span>16-May-17<span></div>: <a href="https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git/commit/?id=3e21f4af170bebf47c187c1ff8bf155583c9f3b1">Patch available</a> (Linux Char/Misc drivers development tree).</li><li><div class="list__date"><span>16-May-17<span></div>: Reported.</li><li><div class="list__date"><span>16-May-17<span></div>: Added as <span class="cve-moderate" title="Linux lp.c Out-of-Bounds Write via Kernel Command-line"><a href="/vulns/aleph-2017023">ALEPH-2017023</a></span>.</li></ul></div>

<h2>Posts</h2>
<div class="pagelist__narrow"><ul> <li onclick="javscript:document.location.href='/2017/05/23/nexus6-initroot/'"> <a href="/2017/05/23/nexus6-initroot/">initroot: Bypassing Nexus 6 Secure Boot through Kernel Command-line Injection </a> <div class="pagelist__subtitle">By <a href="/authors/roeeh">Roee Hay</a>, <div class="pagelist__date"><span>23-May 2017</span></div></div></li> </ul></div>
<h2>Credit</h2>
<div class="list">
<ul>
<li>
<a href="/authors/roeeh">Roee Hay</a> (<a href="https://twitter.com/roeehay">@roeehay</a>) of Aleph Research, HCL Technologies
</li>
</ul>
</div>
</div>
</div>
</div>
</body>
</html>
