<!DOCTYPE html>
<html lang="en">
  <head>
    <title>8464 &ndash; DoS (long loop) in ETCH dissector (packet-etch.c)</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link href="data/assets/64b49332a92937374625c24ed9a89c85.css?1635022386" rel="stylesheet" type="text/css">

<link href="data/assets/f6911ed8e5a97f108734d9324cb6bd67.css?1635022386" rel="stylesheet" type="text/css">

    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1635022386"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "8464 – DoS (long loop) in ETCH dissector (packet-etch.c)",
                             "show_bug.cgi?id=8464" );
        document.title = "8464 – DoS (long loop) in ETCH dissector (packet-etch.c)";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "8464 – DoS (long loop) in ETCH dissector (packet-etch.c)", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1635022386"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-wireshark-org-bugzilla
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_Wireshark
                 bz_component_GTK&#X2B;_UI
                 bz_bug_8464 yui-skin-sam">

  <div id="header"><div id="banner">
      <a href="/bugzilla/"><img id="badge" src="/image/wsbadge-bug@186x57.png"></a>
      <span id="banner-text">
        Wireshark Bug Database &ndash; Bug&nbsp;8464
      </span>
      <div id="subtitle">
        <p class="subheader">DoS (long loop) in ETCH dissector (packet-etch.c)</p>
      </div>

       <div id="motd_yellow">

<p>
This Bugzilla instance was migrated to <a href="https://gitlab.com/wireshark/wireshark">GitLab</a> on Sunday, August 23.
</p>


<p>
This bug has been migrated to <a href="https://gitlab.com/wireshark/wireshark/-/issues/8464">issue 8464</a> in the <a href="https://gitlab.com/wireshark/wireshark/-/issues">GitLab issue tracker</a>.
It can be viewed and updated there.
</p>


</p>

<p>
See the <a href="https://gitlab.com/wireshark/gitlab-migration/wikis/home">migration wiki</a> for more details.
</p>

       </div>


    </div>

<!-- WS: Title info is in the banner
    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;8464</span>
  
        <span id="subtitle" class="subheader">DoS (long loop) in ETCH dissector (packet-etch.c)</span>

        <span id="information" class="header_addl_info">Last modified: 2013-04-25 06:47:50 UTC</span>
    </div>
  -->


    <div id="common_links"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=8464&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=8464" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=8464&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635621907-jAp_hDMf9wPpGSW5kl7smw2qhICDSqSY87QL-6-wCfo">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2013-04-25 06:47:50">
  <input type="hidden" name="id" value="8464">
  <input type="hidden" name="token" value="1635621907-xV6rfvgm5EUBA67qV_IwZOduxwD7vqxsRqFE3oQWAo0">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=8464"><b>Bug&nbsp;8464</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">DoS (long loop) in ETCH dissector (packet-etch.c)</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>DoS (long loop) in ETCH dissector (packet-etch.c)
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'DoS (long loop) in ETCH dissector (packet-etch.c)' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Wireshark

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Wireshark"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >GTK+ UI

  (<a href="buglist.cgi?component=GTK%2B%20UI&amp;product=Wireshark&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>Git
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">x86
        All
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>Low
       Major<span id="votes_container">
    (<a href="page.cgi?id=voting/user.html&amp;bug_id=8464#vote_8464">vote</a>)
  </span>
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Bugzilla Administrator</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'bugzilla-admin\x40wireshark.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2013-03-12 23:07 UTC by <span class="vcard"><span class="fn">Moshe Kaplan</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2013-04-25 06:47 UTC
      (<a href="show_activity.cgi?id=8464">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>2 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="eapache">eapache</option>
                <option value="mmann78">mmann78</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr> 

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_application_vnd.tcpdump.pcap">
        <td>
            <a href="attachment.cgi?id=10237"
               title="View the content of the attachment">
          <b>Pcap file to replicate the long loop</b></a>

          <span class="bz_attach_extra_info">
              (203 bytes,
                application/vnd.tcpdump.pcap)

            <br>
            <a href="#attach_10237"
               title="Go to the comment associated with the attachment">2013-03-12 23:07 UTC</a>,

            <span class="vcard"><span class="fn">Moshe Kaplan</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=10237&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_text_x-python">
        <td>
            <a href="attachment.cgi?id=10238"
               title="View the content of the attachment">
          <b>Scapy file used to generate the attached pcap</b></a>

          <span class="bz_attach_extra_info">
              (1.04 KB,
                text/x-python)

            <br>
            <a href="#attach_10238"
               title="Go to the comment associated with the attachment">2013-03-12 23:08 UTC</a>,

            <span class="vcard"><span class="fn">Moshe Kaplan</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=10238&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a3" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=10273"
               title="View the content of the attachment">
          <b>ETCH dissector - simple fix</b></a>

          <span class="bz_attach_extra_info">
              (565 bytes,
                patch)

            <br>
            <a href="#attach_10273"
               title="Go to the comment associated with the attachment">2013-03-15 05:20 UTC</a>,

            <span class="vcard"><span class="fn">Michael Mann</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=10273&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a4" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=10274"
               title="View the content of the attachment">
          <b>ETCH dissector - expert info fix</b></a>

          <span class="bz_attach_extra_info">
              (9.17 KB,
                patch)

            <br>
            <a href="#attach_10274"
               title="Go to the comment associated with the attachment">2013-03-15 05:22 UTC</a>,

            <span class="vcard"><span class="fn">Michael Mann</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=10274&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
        </span>
        <a href="attachment.cgi?bugid=8464&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=8464&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1490378926" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Moshe Kaplan</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-03-12 23:07:01 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=10237" name="attach_10237" title="Pcap file to replicate the long loop">attachment 10237</a> <a href="attachment.cgi?id=10237&amp;action=edit" title="Pcap file to replicate the long loop">[details]</a></span>
Pcap file to replicate the long loop

Build Information:

--
A remote attacker can create a specially-crafted packet that when processed, causes Wireshark to enter an extremely long loop. This bug can be replicated by opening the attached pcap file.

Tested on Wireshark 1.6.14, 1.8.6, and svn<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=48274">r48274</a>

While processing this packet, Wireshark outputs in the console:

Warn Dissector bug, protocol Etch, in packet 1: More than 1000000 items in the tree -- possible infinite loop

To summarize: When parsing an array, it first reads in the amount of item, and then reads each of the items, increasing the offset along the way. However, if the type is a string, the size is read from the packet, and trusted to be accurate. This can cause an integer overflow, which causes it to read the same value on every one of the 2^31 iterations.

Relevant Code:

static void
read_array(unsigned int *offset, tvbuff_t *tvb, proto_tree *etch_tree)
{
...
  // Return value is controlled: 2^31 iterations
  length = read_length(offset, tvb, etch_tree);

  for (; length &gt; 0; length--) {
    read_value(offset, tvb, etch_tree, hf_etch_value);
  }
...

}

read_value(unsigned int *offset, tvbuff_t *tvb, proto_tree *etch_tree,
           int asWhat)
{
  guint8 type_code;

  type_code = tvb_get_guint8(tvb, *offset);
  if (type_code &lt;= ETCH_TC_MAX_TINY_INT ||
      type_code &gt;= ETCH_TC_MIN_TINY_INT) {
    ...
  }

  switch(type_code) {
  ...
  case ETCH_TC_STRING:
    read_string(offset, tvb, etch_tree);
    break;
  }
  
  return 0;
}

read_string(unsigned int *offset, tvbuff_t *tvb, proto_tree *etch_tree)
{
  int byteLength;
  // Increase offset by 1.
  read_type(offset, tvb, etch_tree);
  // Increase offset by 4, controlled return value
  byteLength = read_length(offset, tvb, etch_tree);

  proto_tree_add_item(etch_tree, hf_etch_string, tvb, *offset,
                      byteLength, ENC_ASCII|ENC_NA);
  // Add controlled value to offset -&gt; This is how we can ensure all 2^31 iterations occur.
  (*offset) += byteLength;
}

read_length(unsigned int *offset, tvbuff_t *tvb, proto_tree *etch_tree)
{
  guint32 length;
  int     length_of_array_length_type;
  guint8  tiny;

  tiny = tvb_get_guint8(tvb, *offset);
  /*  Is this the value already? */
  if (  tiny &lt;= ETCH_TC_MAX_TINY_INT
        || tiny &gt;= ETCH_TC_MIN_TINY_INT) {
    ...
  } else {
    guint8 type_code;
    type_code = read_type(offset, tvb, etch_tree);
    
    length_of_array_length_type = get_byte_length(type_code);
    
    switch (length_of_array_length_type) {
    ...
    case 4:
      // Here we control length
      length = tvb_get_ntohl(tvb, *offset);
      break;
    }
  }
  proto_tree_add_item(etch_tree, hf_etch_length, tvb, *offset,
                      length_of_array_length_type, ENC_BIG_ENDIAN);
  (*offset) += length_of_array_length_type;
  // Which is eventually returned and stored in byteLength
  return length;
}</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Moshe Kaplan</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-03-12 23:08:18 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=10238" name="attach_10238" title="Scapy file used to generate the attached pcap">attachment 10238</a> <a href="attachment.cgi?id=10238&amp;action=edit" title="Scapy file used to generate the attached pcap">[details]</a></span>
Scapy file used to generate the attached pcap</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Michael Mann</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-03-14 09:56:58 UTC
        </span>

      </div>




<pre class="bz_comment_text">
*** This bug has been marked as a duplicate of <a class="bz_bug_link 
          bz_status_CONFIRMED "
   title="CONFIRMED - TRY_TO_FAKE_THIS_ITEM disables bounds errors"
   href="show_bug.cgi?id=3290">bug 3290</a> ***</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-03-14 10:04:47 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8464#c2">comment #2</a>)
<span class="quote">&gt; 
&gt; *** This bug has been marked as a duplicate of <a class="bz_bug_link 
          bz_status_CONFIRMED "
   title="CONFIRMED - TRY_TO_FAKE_THIS_ITEM disables bounds errors"
   href="show_bug.cgi?id=3290">bug 3290</a> ***</span >

Really? I haven't tried to duplicate, but based on Moshe's summary it seems like it ought to be possible to reproduce without ever running past the end of the packet. Could be wrong though.</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Michael Mann</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-03-14 11:14:52 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8464#c3">comment #3</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=8464#c2">comment #2</a>)
&gt; 
&gt; *** This bug has been marked as a duplicate of
&gt; <a class="bz_bug_link 
          bz_status_CONFIRMED "
   title="CONFIRMED - TRY_TO_FAKE_THIS_ITEM disables bounds errors"
   href="show_bug.cgi?id=3290">bug 3290</a> ***</span >

Really? I haven't tried to duplicate, but based on Moshe's
<span class="quote">&gt; summary it seems like it ought to be possible to reproduce without ever
&gt; running past the end of the packet. Could be wrong though.</span >

My understanding of <a class="bz_bug_link 
          bz_status_CONFIRMED "
   title="CONFIRMED - TRY_TO_FAKE_THIS_ITEM disables bounds errors"
   href="show_bug.cgi?id=3290">bug 3290</a> is that if a non-sensical value (ie bigger than packet or negative (excluding -1)) is passed to proto_tree_add* for the length field, that it should trigger a malformed packet. For this bug, the length value is read from the packet and the following field uses that (non-sensical) length for a proto_tree_add_item call.</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Moshe Kaplan</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-03-14 11:49:37 UTC
        </span>

      </div>




<pre class="bz_comment_text">This bug is completely dissector-based, without overrunning the bounds of the packet, and is possible because there is a user-supplied length field that is added to the 'offset' within the packet, which can cause the offset to overflow and so the dissector will re-examine data it already looked at. The 'long loop' aspect is because we can trigger 2^31 operations (the iteration counter is a signed integer).</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-03-14 19:59:39 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8464#c4">comment #4</a>)
<span class="quote">&gt; My understanding of <a class="bz_bug_link 
          bz_status_CONFIRMED "
   title="CONFIRMED - TRY_TO_FAKE_THIS_ITEM disables bounds errors"
   href="show_bug.cgi?id=3290">bug 3290</a> is that if a non-sensical value (ie bigger than
&gt; packet or negative (excluding -1)) is passed to proto_tree_add* for the
&gt; length field, that it should trigger a malformed packet.</span >

That is my understanding too.

<span class="quote">&gt; For this bug, the
&gt; length value is read from the packet and the following field uses that
&gt; (non-sensical) length for a proto_tree_add_item call.</span >

Ah yes, you're right. It has to travel up the stack a frame before it is used, but it does get used.

Moshe: Were <a class="bz_bug_link 
          bz_status_CONFIRMED "
   title="CONFIRMED - TRY_TO_FAKE_THIS_ITEM disables bounds errors"
   href="show_bug.cgi?id=3290">bug #3290</a> fixed then the proto_tree_add_item call in read_string would throw an exception the first time through the loop, since byteLength has some enormous value larger than the packet. This would prevent the loop from running forever.

Michael: This is probably worth fixing anyways in order to backport, since the fix for #3290 (whenever somebody gets around to it) will likely be too intrusive. Reopening to Confirmed for this reason, although I do agree with the duplicate assessment.</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Moshe Kaplan</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-03-14 20:18:03 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8464#c6">comment #6</a>)
<span class="quote">&gt; &gt; For this bug, the
&gt; &gt; length value is read from the packet and the following field uses that
&gt; &gt; (non-sensical) length for a proto_tree_add_item call.
&gt; 
&gt; Ah yes, you're right. It has to travel up the stack a frame before it is
&gt; used, but it does get used.
&gt; 
&gt; Moshe: Were <a class="bz_bug_link 
          bz_status_CONFIRMED "
   title="CONFIRMED - TRY_TO_FAKE_THIS_ITEM disables bounds errors"
   href="show_bug.cgi?id=3290">bug #3290</a> fixed then the proto_tree_add_item call in read_string
&gt; would throw an exception the first time through the loop, since byteLength
&gt; has some enormous value larger than the packet. This would prevent the loop
&gt; from running forever.
&gt; </span >

I apologize for my misunderstanding. Thanks for explaining it.

Is it worthwhile to report such 'bugs' in the future?

Moshe</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-03-14 21:04:07 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8464#c7">comment #7</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=8464#c6">comment #6</a>)
&gt; &gt; &gt; For this bug, the
&gt; &gt; &gt; length value is read from the packet and the following field uses that
&gt; &gt; &gt; (non-sensical) length for a proto_tree_add_item call.
&gt; &gt; 
&gt; &gt; Ah yes, you're right. It has to travel up the stack a frame before it is
&gt; &gt; used, but it does get used.
&gt; &gt; 
&gt; &gt; Moshe: Were <a class="bz_bug_link 
          bz_status_CONFIRMED "
   title="CONFIRMED - TRY_TO_FAKE_THIS_ITEM disables bounds errors"
   href="show_bug.cgi?id=3290">bug #3290</a> fixed then the proto_tree_add_item call in read_string
&gt; &gt; would throw an exception the first time through the loop, since byteLength
&gt; &gt; has some enormous value larger than the packet. This would prevent the loop
&gt; &gt; from running forever.
&gt; &gt; 
&gt; 
&gt; I apologize for my misunderstanding. Thanks for explaining it.
&gt; 
&gt; Is it worthwhile to report such 'bugs' in the future?
&gt; 
&gt; Moshe</span >

I think so. They will need to be fixed and back ported to 1.8 separately, just like this one. And #3290 isn't fixed yet anyways. Hopefully somebody figures it out in time for the 1.10 release.</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Michael Mann</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-03-15 05:20:23 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=10273" name="attach_10273" title="ETCH dissector - simple fix">attachment 10273</a> <a href="attachment.cgi?id=10273&amp;action=edit" title="ETCH dissector - simple fix">[details]</a></span>
ETCH dissector - simple fix

The quick/dirty solution until <a class="bz_bug_link 
          bz_status_CONFIRMED "
   title="CONFIRMED - TRY_TO_FAKE_THIS_ITEM disables bounds errors"
   href="show_bug.cgi?id=3290">bug 3290</a> gets fixed.  Much simplier to backport.</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Michael Mann</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-03-15 05:22:54 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=10274" name="attach_10274" title="ETCH dissector - expert info fix">attachment 10274</a> <a href="attachment.cgi?id=10274&amp;action=edit" title="ETCH dissector - expert info fix">[details]</a></span>
ETCH dissector - expert info fix

I think this is the &quot;more proper&quot; fix, but its a lot more code than <span class=""><a href="attachment.cgi?id=10273" name="attach_10273" title="ETCH dissector - simple fix">attachment #10273</a> <a href="attachment.cgi?id=10273&amp;action=edit" title="ETCH dissector - simple fix">[details]</a></span>.  And if we're just waiting for <a class="bz_bug_link 
          bz_status_CONFIRMED "
   title="CONFIRMED - TRY_TO_FAKE_THIS_ITEM disables bounds errors"
   href="show_bug.cgi?id=3290">bug 3290</a> to be fixed, it may be considered overkill.</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-03-15 06:01:46 UTC
        </span>

      </div>




<pre class="bz_comment_text">+1 for the simpler version of the fix, however I'm concerned it may only fix on 64-bit platforms? tvb_reported_length_remaining takes a 'gint', which can be 32-bits, in which case the (*offset + length) parameter in the fix may already overflow, causing the check to succeed.

Safer to add an overflow check &quot;if (*offset + byteLength &lt; *offset)&quot; in read_string as well?</pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-04-18 12:45:58 UTC
        </span>

      </div>




<pre class="bz_comment_text">Fixed in trunk in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=48919">r48919</a>. Will add to backport list.

Leaving open as a reminder to make public once backport is complete.</pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8464#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-04-25 06:47:50 UTC
        </span>

      </div>




<pre class="bz_comment_text">Backported. Closing and making public.</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=8464">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=8464">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=8464">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=8464&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=8464" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=8464&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635621908-a6npOFD-Wal1LjY2oVgusZoQLfHeOfqeYypMhNT2nG4">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>