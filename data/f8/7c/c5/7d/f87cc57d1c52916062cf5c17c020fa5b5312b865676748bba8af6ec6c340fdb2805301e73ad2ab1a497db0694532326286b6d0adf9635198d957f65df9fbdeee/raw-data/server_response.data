<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
<title>Bug 756263 – Buffer overead with XML parser in xmlNextChar, causes segfault when compiled with ASAN</title>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
<link href="https://bugzilla.gnome.org/" rel="Top"/>
<link href="showdependencytree.cgi?id=756263&amp;hide_resolved=1" rel="Show" title="Dependency Tree"/>
<link href="show_bug.cgi?format=multiple&amp;id=756263" rel="Show" title="Printer-Friendly Version"/>
<link href="skins/standard/global.css" rel="alternate stylesheet" title="Classic"/><link href="js/yui/assets/skins/sam/autocomplete.css" rel="stylesheet" type="text/css"/><link href="js/yui/assets/skins/sam/calendar.css" rel="stylesheet" type="text/css"/><link href="skins/standard/global.css" rel="stylesheet" type="text/css"/><link href="skins/standard/show_bug.css" rel="stylesheet" type="text/css"/><!--[if lte IE 7]>
      


  <link href="skins/standard/IE-fixes.css" rel="stylesheet"
        type="text/css" >
<![endif]-->
<link href="skins/contrib/Gnome/global.css" rel="stylesheet" title="Gnome" type="text/css"/>
<script src="js/yui/yahoo-dom-event/yahoo-dom-event.js" type="text/javascript"></script><script src="js/yui/cookie/cookie-min.js" type="text/javascript"></script><script src="js/yui/datasource/datasource-min.js" type="text/javascript"></script><script src="js/yui/connection/connection-min.js" type="text/javascript"></script><script src="js/yui/json/json-min.js" type="text/javascript"></script><script src="js/yui/autocomplete/autocomplete-min.js" type="text/javascript"></script><script src="js/yui/calendar/calendar-min.js" type="text/javascript"></script><script src="js/global.js" type="text/javascript"></script>
<script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 50
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    'You must enter a Description for this attachment.',
                component_required:
                    'You must select a Component for this bug.',
                description_required:
                    'You must enter a Description for this bug.',
                short_desc_required:
                    'You must enter a Summary for this bug.',
                version_required:
                    'You must select a Version for this bug.'
            }
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null, 
                             "Bug 756263 – Buffer overead with XML parser in xmlNextChar, causes segfault when compiled with ASAN",  
                             "show_bug.cgi?id=756263" );
        document.title = "Bug 756263 – Buffer overead with XML parser in xmlNextChar, causes segfault when compiled with ASAN";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "Bug 756263 – Buffer overead with XML parser in xmlNextChar, causes segfault when compiled with ASAN", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();
    });
    // -->
    </script>
<script src="js/util.js" type="text/javascript"></script><script src="js/field.js" type="text/javascript"></script>
<link href="./search_plugin.cgi" rel="search" title="GNOME Bugzilla" type="application/opensearchdescription+xml"/>
<link href="images/favicon.ico" rel="shortcut icon"/><link href="extensions/TraceParser/web/style.css" rel="stylesheet" type="text/css"/>
</head>
<body class="bugzilla-gnome-org bz_bug bz_status_RESOLVED bz_product_libxml2 bz_component_general bz_bug_756263 yui-skin-sam" onload="">
<div id="header">
<div id="banner">
</div>
<table border="0" cellpadding="0" cellspacing="0" id="titles">
<tr>
<td id="title">
<p>GNOME Bugzilla – Bug 756263</p>
</td>
<td id="subtitle">
<p class="subheader">Buffer overead with XML parser in xmlNextChar, causes segfault when compiled with ASAN</p>
</td>
<td id="information">
<p class="header_addl_info">Last modified: 2015-12-14 21:18:08 UTC</p>
</td>
</tr>
</table>
<table cellpadding="0" cellspacing="0" class="bz_default_hidden" id="lang_links_container"><tr><td>
</td></tr></table>
<ul class="links"><li><a href="./">Home</a></li></ul>
</div>
<div id="bugzilla-body">
<div style="margin-bottom: 50px; margin-top: 50px; padding: 40px; text-align: center; background-color: rgb(74,134,207); border: rgb(57,104,161); color: rgb(255,255,255); line-height: 300%;">After an <a href="https://wiki.gnome.org/Initiatives/DevelopmentInfrastructure" style="color: rgb(255,255,255);">evaluation</a>, GNOME has moved from Bugzilla to <a href="https://gitlab.gnome.org/" style="color: rgb(255,255,255);">GitLab</a>. <a href="https://wiki.gnome.org/GitLab" style="color: rgb(255,255,255);">Learn more about GitLab</a>. <br/><span style="background-color: #EE0000; font-size: xx-large;"><b>No new issues can be reported in GNOME Bugzilla anymore.</b></span>
<br/><span style="background-color: #EE0000; font-size: xx-large;"><b>To report an issue in a GNOME project, <a href="https://gitlab.gnome.org/GNOME" style="color: rgb(255,255,255);">go to GNOME GitLab</a></b>.</span><br/>Do <b>not</b> go to GNOME Gitlab for: <a href="https://sourceforge.net/p/bluefish/tickets" style="color: rgb(255,255,255);">Bluefish</a>, <a href="https://github.com/doxygen/doxygen/issues" style="color: rgb(255,255,255);">Doxygen</a>, <a href="https://bugs.gnucash.org/" style="color: rgb(255,255,255);">GnuCash</a>, <a href="https://gitlab.freedesktop.org/gstreamer/" style="color: rgb(255,255,255);">GStreamer</a>, <a href="https://github.com/afcowie/java-gnome/issues" style="color: rgb(255,255,255);">java-gnome</a>, <a href="https://github.com/ldtp/ldtp2/issues" style="color: rgb(255,255,255);">LDTP</a>, <a href="https://gitlab.freedesktop.org/NetworkManager/NetworkManager/issues" style="color: rgb(255,255,255);">NetworkManager</a>, <a href="https://github.com/tomboy-notes/tomboy/issues" style="color: rgb(255,255,255);">Tomboy</a>.</div>
<script type="text/javascript">
<!--

//-->
</script>
<form action="process_bug.cgi" id="changeform" method="post" name="changeform">
<input name="delta_ts" type="hidden" value="2015-12-14 21:18:08"/>
<input name="longdesclength" type="hidden" value="25"/>
<input name="id" type="hidden" value="756263"/>
<input name="token" type="hidden" value="1626095124-LbPtCNBa6yA4BogBTLlcys-doOLDyjn1Haz5xsurMjc"/>
<div class="bz_alias_short_desc_container edit_form">
<a href="show_bug.cgi?id=756263"><b>Bug 756263</b></a> -<span class="bz_default_hidden" id="summary_alias_container">
<span id="short_desc_nonedit_display">Buffer overead with XML parser in xmlNextChar, causes segfault when compiled with ASAN</span>
</span>
<div id="summary_alias_input">
<table id="summary">
<tr>
<td colspan="2">
</td>
</tr>
<tr><th class="field_label" id="field_label_short_desc">
<label accesskey="s" for="short_desc">
<a class="field_help_link" href="page.cgi?id=fields.html#short_desc" title="The bug summary is a short sentence which succinctly describes what the bug is about.">Summary:</a>
</label>
</th>
<td><span title="Buffer overead with XML parser in xmlNextChar, causes segfault when compiled with ASAN">Buffer overead with XML parser in xmlNextChar, causes segfault when compiled ...
        </span>
</td>
</tr>
</table>
</div>
</div>
<script type="text/javascript">
    hideAliasAndSummary('Buffer overead with XML parser in xmlNextChar, causes segfault when compiled with ASAN', '');
  </script>
<table class="edit_form">
<tr>
<td class="bz_show_bug_column" id="bz_show_bug_column_1">
<table>
<tr>
<th class="field_label">
<a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
<td id="bz_field_status">
<span id="static_bug_status">RESOLVED
          FIXED
      </span>
</td>
</tr>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_product">
<a class="field_help_link" href="describecomponents.cgi" title="Bugs are categorised into Products and Components. Select a Classification to narrow down this list.">Product:</a>
</th>
<td class="field_value" id="field_container_product">libxml2</td>
</tr>
<tr class="bz_default_hidden"><th class="field_label" id="field_label_classification">
<a class="field_help_link" href="page.cgi?id=fields.html#classification" title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation.">Classification:</a>
</th>
<td class="field_value" id="field_container_classification">Platform</td>
</tr>
<tr><th class="field_label" id="field_label_component">
<a class="field_help_link" href="describecomponents.cgi?product=libxml2" title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list.">Component:</a>
</th>
<td class="field_value" id="field_container_component">general</td>
</tr>
<tr><th class="field_label" id="field_label_version">
<label for="version">
<a class="field_help_link" href="page.cgi?id=fields.html#version" title="The version field defines the version of the software the bug was found in.">Version:</a>
</label>
</th>
<td>git master
  </td>
</tr>
<tr><th class="field_label" id="field_label_rep_platform">
<label accesskey="h" for="rep_platform">
<a class="field_help_link" href="page.cgi?id=fields.html#rep_platform" title='The hardware platform the bug was observed on. Note: When searching, selecting the option "All" only finds bugs whose value for this field is literally the word "All".'>Hardware:</a>
</label>
</th>
<td class="field_value">Other
       Linux
      </td>
</tr>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr>
<th class="field_label">
<label accesskey="i" for="priority">
<a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
<td>Normal
       normal
      </td>
</tr>
<tr>
<th class="field_label">
<label for="target_milestone">
<a href="page.cgi?id=fields.html#target_milestone">
            Target Milestone</a></label>:
        </th><td>---
  </td>
</tr>
<tr>
<th class="field_label">
<a href="page.cgi?id=fields.html#assigned_to">Assigned To</a>:
      </th>
<td><span class="vcard"><span class="fn">Daniel Veillard</span>
</span>
</td>
</tr>
<tr><th class="field_label" id="field_label_qa_contact">
<label accesskey="q" for="qa_contact">
<a class="field_help_link" href="page.cgi?id=fields.html#qa_contact" title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved.">QA Contact:</a>
</label>
</th>
<td><span class="vcard"><span class="fn">libxml QA maintainers</span>
</span>
</td>
</tr>
<script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'daniel\x40veillard.com',
        'libxml-qa-maint\x40gnome.bugs');
    </script>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_bug_file_loc">
<label accesskey="u" for="bug_file_loc">
<a class="field_help_link" href="page.cgi?id=fields.html#bug_file_loc" title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen.">URL:</a>
</label>
</th>
<td>
<span id="bz_url_input_area">
</span>
</td>
</tr>
<tr><th class="field_label" id="field_label_status_whiteboard">
<label accesskey="w" for="status_whiteboard">
<a class="field_help_link" href="page.cgi?id=fields.html#status_whiteboard" title="Each bug has a free-form single line text entry box for adding tags and status information.">Whiteboard:</a>
</label>
</th><td colspan="2">
</td>
</tr>

<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_dependson">
<a class="field_help_link" href="page.cgi?id=fields.html#dependson" title="The bugs listed here must be resolved before this bug can be resolved.">Depends on:</a>
</th>
<td>
<span id="dependson_input_area">
</span>
</td>
</tr>
<tr><th class="field_label" id="field_label_blocked">
<a class="field_help_link" href="page.cgi?id=fields.html#blocked" title="This bug must be resolved before the bugs listed in this field can be resolved.">Blocks:</a>
</th>
<td>
<span id="blocked_input_area">
</span>
</td>
</tr>
<tr>
<th> </th>

</tr>
</table>
</td>
<td>
<div class="bz_column_spacer"> </div>
</td>
<td class="bz_show_bug_column" id="bz_show_bug_column_2">
<table cellpadding="3" cellspacing="1">
<tr>
<th class="field_label">
      Reported:
    </th>
<td>2015-10-08 21:12 UTC by <span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</td>
</tr>
<tr>
<th class="field_label">
      Modified:
    </th>
<td>2015-12-14 21:18 UTC 
    </td>
</tr>

<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_see_also">
<a class="field_help_link" href="page.cgi?id=fields.html#see_also" title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with a comma. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields.">See Also:</a>
</th>
<td class="field_value" id="field_container_see_also"></td>
</tr>
<tr><th class="field_label" id="field_label_cf_gnome_target">
<a class="field_help_link" href="page.cgi?id=fields.html#cf_gnome_target" title="A custom Drop Down field in this installation of GNOME Bugzilla.">GNOME target:</a>
</th>
<td class="field_value" colspan="2" id="field_container_cf_gnome_target">---</td>
</tr>
<tr><th class="field_label" id="field_label_cf_gnome_version">
<a class="field_help_link" href="page.cgi?id=fields.html#cf_gnome_version" title="A custom Drop Down field in this installation of GNOME Bugzilla.">GNOME version:</a>
</th>
<td class="field_value" colspan="2" id="field_container_cf_gnome_version">---</td>
</tr>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td colspan="3">
<hr id="bz_top_half_spacer"/>
</td>
</tr>
</table>
<table cellpadding="0" cellspacing="0" id="bz_big_form_parts"><tr>
<td>
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>
<br/>
<table cellpadding="4" cellspacing="0" id="attachment_table">
<tr id="a0">
<th align="left" colspan="3">
      Attachments
    </th>
</tr>
<tr class="bz_contenttype_application_octet-stream" id="a1">
<td valign="top">
<a href="attachment.cgi?id=312925" title="View the content of the attachment">
<b>Input file causing crash when compiled with ASAN</b></a>
<span class="bz_attach_extra_info">
              (20 bytes,
                application/octet-stream)

            <br/>
<a href="#attach_312925" title="Go to the comment associated with the attachment">2015-10-08 21:21 UTC</a>,

            <span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">
             
          </td>
<td valign="top">
<a href="attachment.cgi?id=312925&amp;action=edit">Details</a>
</td>
</tr>
<tr class="bz_contenttype_text_plain bz_patch" id="a2">
<td valign="top">
<a href="attachment.cgi?id=312926" title="View the content of the attachment">
<b>Patch to fix</b></a>
<span class="bz_attach_extra_info">
              (1.26 KB,
                patch)

            <br/>
<a href="#attach_312926" title="Go to the comment associated with the attachment">2015-10-08 21:22 UTC</a>,

            <span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">none
          </td>
<td valign="top">
<a href="attachment.cgi?id=312926&amp;action=edit">Details</a>  |
    <a href="review?bug=756263&amp;attachment=312926">Review</a>
</td>
</tr>

</table>
<br/>
</td>
<td>
</td>
</tr></table>
<div id="comments"><script src="js/comments.js" type="text/javascript">
</script>
<script type="text/javascript">
<!--
  /* Adds the reply text to the `comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>
<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table cellpadding="0" cellspacing="0" class="bz_comment_table"><tr>
<td>
<div class="bz_comment bz_first_comment" id="c0">
<div class="bz_first_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c0">Description</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-10-08 21:12:59 UTC
        </span>
</div>
<pre class="bz_comment_text">This was found on git master, commit <a href="https://git.gnome.org/browse/libxml2/commit/?id=cf77e60515045bdd66f2c59c69a06e603b470eae">cf77e60515045bdd66f2c59c69a06e603b470eae</a>

When compiled with ASAN, it gives the following crash

 $ ./xmllint ~/fuzzing/xml-tmin/id\:000000*                                                                                                                          
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : Input is not proper UTF-8, indicate encoding !
Bytes: 0x80 0x5B 0x3C 0x21
&lt;!DOCTYPE[&lt;!ENTITYJ
         ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : xmlParseDocTypeDecl : no DOCTYPE name !
&lt;!DOCTYPE[&lt;!ENTITYJ
         ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : DOCTYPE improperly terminated
&lt;!DOCTYPE[&lt;!ENTITYJ
         ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : Space required after '&lt;!ENTITY'
&lt;!DOCTYPE[&lt;!ENTITYJ
                   ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : Space required after the entity name
&lt;!DOCTYPE[&lt;!ENTITYJ
                    ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : Entity value required
&lt;!DOCTYPE[&lt;!ENTITYJ
                    ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : Space required before 'NDATA'
&lt;!DOCTYPE[&lt;!ENTITYJ
                    ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : xmlParseEntityDecl: entity J not terminated
&lt;!DOCTYPE[&lt;!ENTITYJ
                    ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : internal error: xmlParseInternalSubset: error detected in Markup declaration


^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : DOCTYPE improperly terminated

^
=================================================================
==18412== ERROR: AddressSanitizer: global-buffer-overflow on address 0x000000c136a1 at pc 0x457370 bp 0x7ffd5ee33770 sp 0x7ffd5ee33768
READ of size 1 at 0x000000c136a1 thread T0
    #0 0x45736f in xmlNextChar /root/libxml2/parserInternals.c:535
    #1 0x4fd936 in xmlParseInternalSubset /root/libxml2/parser.c:8447
    #2 0x52717b in xmlParseDocument /root/libxml2/parser.c:10836
    #3 0x55b5b6 in xmlDoRead /root/libxml2/parser.c:15324
    #4 0x55b5b6 in xmlReadFile /root/libxml2/parser.c:15386
    #5 0x4183b7 in parseAndPrintFile /root/libxml2/xmllint.c:2401
    #6 0x40de46 in main /root/libxml2/xmllint.c:3759
    #7 0x7f920fcc7ec4 (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)
    #8 0x40fad9 in _start (/root/libxml2/xmllint+0x40fad9)
0x000000c136a1 is located 0 bytes to the right of global variable '*.LC25 (parser.c)' (0xc136a0) of size 1
  '*.LC25 (parser.c)' is ascii string ''
0x000000c136a1 is located 63 bytes to the left of global variable '*.LC26 (parser.c)' (0xc136e0) of size 40
  '*.LC26 (parser.c)' is ascii string 'Name %s is not XML Namespace compliant
'
SUMMARY: AddressSanitizer: global-buffer-overflow /root/libxml2/parserInternals.c:529 xmlNextChar
Shadow bytes around the buggy address:
  0x00008017a680: f9 f9 f9 f9 00 00 00 00 02 f9 f9 f9 f9 f9 f9 f9
  0x00008017a690: 00 00 00 07 f9 f9 f9 f9 07 f9 f9 f9 f9 f9 f9 f9
  0x00008017a6a0: 00 00 00 00 00 00 00 03 f9 f9 f9 f9 00 00 02 f9
  0x00008017a6b0: f9 f9 f9 f9 00 07 f9 f9 f9 f9 f9 f9 00 00 02 f9
  0x00008017a6c0: f9 f9 f9 f9 00 01 f9 f9 f9 f9 f9 f9 00 00 00 02
=&gt;0x00008017a6d0: f9 f9 f9 f9[01]f9 f9 f9 f9 f9 f9 f9 00 00 00 00
  0x00008017a6e0: 00 f9 f9 f9 f9 f9 f9 f9 00 02 f9 f9 f9 f9 f9 f9
  0x00008017a6f0: 07 f9 f9 f9 f9 f9 f9 f9 06 f9 f9 f9 f9 f9 f9 f9
  0x00008017a700: 00 00 00 00 00 00 f9 f9 f9 f9 f9 f9 05 f9 f9 f9
  0x00008017a710: f9 f9 f9 f9 00 00 00 01 f9 f9 f9 f9 06 f9 f9 f9
  0x00008017a720: f9 f9 f9 f9 00 00 00 00 02 f9 f9 f9 f9 f9 f9 f9
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:     fa
  Heap righ redzone:     fb
  Freed Heap region:     fd
  Stack left redzone:    f1
  Stack mid redzone:     f2
  Stack right redzone:   f3
  Stack partial redzone: f4
  Stack after return:    f5
  Stack use after scope: f8
  Global redzone:        f9
  Global init order:     f6
  Poisoned by user:      f7
  ASan internal:         fe
==18412== ABORTING
Aborted

The testfile I used was generated with afl-fuzz, and then minimized. It's hex representation is as follows:

 $ xxd -g 1 ~/fuzzing/xml-tmin/id\:000000*
0000000: 3c 21 44 4f 43 54 59 50 45 80 5b 3c 21 45 4e 54  &lt;!DOCTYPE.[&lt;!ENT
0000010: 49 54 59 4a                                      ITYJ


I git bisected it back to the following commit, which is meant to stop the parser on an unterminated entity

commit <a href="https://git.gnome.org/browse/libxml2/commit/?id=a7dfab7411cbf545f359dd3157e5df1eb0e7ce31">a7dfab7411cbf545f359dd3157e5df1eb0e7ce31</a>
Author: Daniel Veillard &lt;<a href="mailto:veillard@redhat.com">veillard@redhat.com</a>&gt;
Date:   Mon Feb 23 11:17:35 2015 +0800

    Stop parsing on entities boundaries errors
    
    For <a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=744980" title="RESOLVED FIXED - Out of bounds memory access in libxml2">https://bugzilla.gnome.org/show_bug.cgi?id=744980</a>
    
    There are times, like on unterminated entities that it's preferable to
    stop parsing, even if that means less error reporting. Entities are
    feeding the parser on further processing, and if they are ill defined
    then it's possible to get the parser to bug. Also do the same on
    Conditional Sections if the input is broken, as the structure of
    the document can't be guessed.

diff --git a/parser.c b/parser.c
index a8d1b67..bbe97eb 100644
--- a/parser.c
+++ b/parser.c
@@ -5658,6 +5658,7 @@ xmlParseEntityDecl(xmlParserCtxtPtr ctxt) {
        if (RAW != '&gt;') {
            xmlFatalErrMsgStr(ctxt, XML_ERR_ENTITY_NOT_FINISHED,
                    "xmlParseEntityDecl: entity %s not terminated\n", name);
+           xmlStopParser(ctxt);
        } else {
            if (input != ctxt-&gt;input) {
                xmlFatalErrMsg(ctxt, XML_ERR_ENTITY_BOUNDARY,


Running it under gdb, with a breakpoint on xmlStopParser, and then showing the backtrace there, and when it crashed:

 $ gdb -ex "break xmlStopParser" -ex "run" -ex "backtrace" -ex "continue" -ex "backtrace" --args ./xmllint ~/fuzzing/xml-tmin/id\:000000*                            
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &lt;<a href="http://gnu.org/licenses/gpl.html">http://gnu.org/licenses/gpl.html</a>&gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
&lt;<a href="http://www.gnu.org/software/gdb/bugs/">http://www.gnu.org/software/gdb/bugs/</a>&gt;.
Find the GDB manual and other documentation resources online at:
&lt;<a href="http://www.gnu.org/software/gdb/documentation/">http://www.gnu.org/software/gdb/documentation/</a>&gt;.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./xmllint...done.
Breakpoint 1 at 0x4e6ae6: xmlStopParser. (5 locations)
Starting program: /root/libxml2/xmllint /root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : Input is not proper UTF-8, indicate encoding !
Bytes: 0x80 0x5B 0x3C 0x21
&lt;!DOCTYPE[&lt;!ENTITYJ
         ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : xmlParseDocTypeDecl : no DOCTYPE name !
&lt;!DOCTYPE[&lt;!ENTITYJ
         ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : DOCTYPE improperly terminated
&lt;!DOCTYPE[&lt;!ENTITYJ
         ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : Space required after '&lt;!ENTITY'
&lt;!DOCTYPE[&lt;!ENTITYJ
                   ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : Space required after the entity name
&lt;!DOCTYPE[&lt;!ENTITYJ
                    ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : Entity value required
&lt;!DOCTYPE[&lt;!ENTITYJ
                    ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : Space required before 'NDATA'
&lt;!DOCTYPE[&lt;!ENTITYJ                                                                                                                                              [50/9271]
                    ^
/root/fuzzing/xml-tmin/id:000000,sig:06,src:002541,op:flip1,pos:19:1: parser error : xmlParseEntityDecl: entity J not terminated
&lt;!DOCTYPE[&lt;!ENTITYJ
                    ^

Breakpoint 1, xmlParseEntityDecl (ctxt=ctxt@entry=0x603c0000fc80) at parser.c:5672
5672                xmlStopParser(ctxt);
</pre>
<p class="trace_link" title="See Full Trace">
<a class="trace_toggle_box" href="#" onclick="traceparser_toggle_trace(this, 235557); return false;" title="Expand/Collapse Trace">+</a>
<a href="page.cgi?id=traceparser/trace.html&amp;trace_id=235557">Trace
    235557</a></p>
<table border="0" cellpadding="0" cellspacing="0"><tr><td>
<div class="trace bz_default_hidden" id="trace_235557">
<ul class="frames">
<li class="frame">
<span class="frame_number">#0</span>
<span class="frame_function">xmlParseEntityDecl</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">5672</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#1</span>
<span class="frame_function">xmlParseMarkupDecl</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">6954</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#2</span>
<span class="frame_function">xmlParseInternalSubset</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">8420</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#3</span>
<span class="frame_function">xmlParseDocument</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">10836</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#4</span>
<span class="frame_function">xmlDoRead</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">15324</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#5</span>
<span class="frame_function">xmlReadFile</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">15386</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#6</span>
<span class="frame_function">parseAndPrintFile</span>
<div class="frame_file_container">
                at <span class="frame_file">xmllint.c</span>
                  line
                  <span class="frame_line">2401</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#7</span>
<span class="frame_function">main</span>
<div class="frame_file_container">
                at <span class="frame_file">xmllint.c</span>
                  line
                  <span class="frame_line">3759</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#0</span>
<span class="frame_function">__GI_raise</span>
<div class="frame_file_container">
                at <span class="frame_file">../nptl/sysdeps/unix/sysv/linux/raise.c</span>
                  line
                  <span class="frame_line">56</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#1</span>
<span class="frame_function">__GI_abort</span>
<div class="frame_file_container">
                at <span class="frame_file">abort.c</span>
                  line
                  <span class="frame_line">89</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#2</span>
<span class="frame_function">??</span>
<div class="frame_library_container">
                from
                <span class="frame_library">/usr/lib/x86_64-linux-gnu/libasan.so.0</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#3</span>
<span class="frame_function">??</span>
<div class="frame_library_container">
                from
                <span class="frame_library">/usr/lib/x86_64-linux-gnu/libasan.so.0</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#4</span>
<span class="frame_function">??</span>
<div class="frame_library_container">
                from
                <span class="frame_library">/usr/lib/x86_64-linux-gnu/libasan.so.0</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#5</span>
<span class="frame_function">__asan_report_error</span>
<div class="frame_library_container">
                from
                <span class="frame_library">/usr/lib/x86_64-linux-gnu/libasan.so.0</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#6</span>
<span class="frame_function">__asan_report_load1</span>
<div class="frame_library_container">
                from
                <span class="frame_library">/usr/lib/x86_64-linux-gnu/libasan.so.0</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#7</span>
<span class="frame_function">xmlNextChar</span>
<div class="frame_file_container">
                at <span class="frame_file">parserInternals.c</span>
                  line
                  <span class="frame_line">535</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#8</span>
<span class="frame_function">xmlParseInternalSubset</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">8447</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#9</span>
<span class="frame_function">xmlParseDocument</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">10836</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#10</span>
<span class="frame_function">xmlDoRead</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">15324</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#11</span>
<span class="frame_function">xmlReadFile</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">15386</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#12</span>
<span class="frame_function">parseAndPrintFile</span>
<div class="frame_file_container">
                at <span class="frame_file">xmllint.c</span>
                  line
                  <span class="frame_line">2401</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#13</span>
<span class="frame_function">main</span>
<div class="frame_file_container">
                at <span class="frame_file">xmllint.c</span>
                  line
                  <span class="frame_line">3759</span>
</div>
</li>
</ul>
</div>
</td></tr></table>
<pre class="bz_comment_text">


This shows that there the parser is running through xmlParseMarkupDecl, and then instate is set to XML_PARSER_EOF (in xmlStopParser), but looking at the source for xmlParseMarkupDecl, on line 6990, the instate is changed to XML_PARSER_DTD. This then causes an issue when the macro NEXT is called twice more, the first time it will read EOF, then the second time it will overread the buffer into global memory space, causing a crash in ASAN. Without ASAN, there is potential to get input that could cause out of bounds memory to be returned to userspace through the use of libxml2, which could be used to cause denial of service attacks, or gain sensitive information.

The fix for this would be to check the instate in xmlParseMarkupDecl after it parses an entry, and if EOF is reached, then stop. A patch to do this is below:

diff --git a/parser.c b/parser.c
index a65e4cc..04b0e58 100644
--- a/parser.c
+++ b/parser.c
@@ -6970,6 +6970,15 @@ xmlParseMarkupDecl(xmlParserCtxtPtr ctxt) {
            xmlParsePI(ctxt);
        }
     }
+
+    /*
+     * If the parser eached end of file, then stop while we know it is failing.
+     * This stops the parser being put into a bad state later on when there is no
+     * more input.
+     */
+    if (ctxt-&gt;instate == XML_PARSER_EOF)
+        return;
+
     /*
      * This is only for internal subset. On external entities,
      * the replacement is done before parsing stage</pre>
</div><div class="bz_comment" id="c1">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c1">Comment 1</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-10-08 21:21:50 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=312925" name="attach_312925" title="Input file causing crash when compiled with ASAN">attachment 312925</a> <a href="attachment.cgi?id=312925&amp;action=edit" title="Input file causing crash when compiled with ASAN">[details]</a></span>
Input file causing crash when compiled with ASAN

Added minimized fuzzing input causing crash.</pre>
</div><div class="bz_comment" id="c2">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c2">Comment 2</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-10-08 21:22:55 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=312926" name="attach_312926" title="Patch to fix">attachment 312926</a> <a href="attachment.cgi?id=312926&amp;action=edit" title="Patch to fix">[details]</a></span> <a href="review?bug=756263&amp;attachment=312926">[review]</a>
Patch to fix

Added a patch to fix this bug, as shown in the main description. For future bug reports, is this the best way to get you patches? Or should I push it to a public git server somewhere?

Cheers,

Hugh</pre>
</div><div class="bz_comment" id="c3">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c3">Comment 3</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-10-08 21:26:02 UTC
        </span>
</div>
<pre class="bz_comment_text">Also, I couldn't see an option to specify this as a potential security issue. Let me know if there is a different process needed for further bugs (I've got a few in the pipeline).

Cheers,

Hugh</pre>
</div><div class="bz_comment" id="c4">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c4">Comment 4</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-10-08 21:46:19 UTC
        </span>
</div>
<pre class="bz_comment_text">Also if someone could point me to documentation on how to write test cases, and I'll make a patch for a test case as well :D.

Cheers,

Hugh</pre>
</div><div class="bz_comment" id="c5">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c5">Comment 5</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Daniel Veillard</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-10-09 16:28:36 UTC
        </span>
</div>
<pre class="bz_comment_text">Hi Hugh

sorry been busy all day with other stuff,
simplest is to make the bug accessible only to libxml2 developpers until
the analysis is made. At first glance the patch sounds good but I would
need to really get into the code.

For tests, well they take input in test/ subdirs and check for output
in results/ it;'s a bit raw but works, it can be a bit complex to generate

For future possible security bugs, I suppose you can toggle the "accessible
only to libxml2 developpers" flag when creating the bug,

  half past midnight, can't look at it today though,

    thanks !

Daniel</pre>
</div><div class="bz_comment" id="c6">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c6">Comment 6</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-10-09 17:32:02 UTC
        </span>
</div>
<pre class="bz_comment_text">Cool thanks. Will do that for the next few. Will try to get another one in today (6am here ;-)).</pre>
</div><div class="bz_comment" id="c7">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c7">Comment 7</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-10-09 18:20:02 UTC
        </span>
</div>
<pre class="bz_comment_text">Hmm, there isn't an option to set it only for libxml2 devs when creating a bug, even under advanced options.</pre>
</div><div class="bz_comment" id="c8">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c8">Comment 8</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-10-26 04:16:22 UTC
        </span>
</div>
<pre class="bz_comment_text">Hey Daniel,

Just seeing whether you've had a chance to look at this yet. Is there anything I can do to help?

Cheers,

Hugh</pre>
</div><div class="bz_comment" id="c9">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c9">Comment 9</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Daniel Veillard</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-03 12:44:43 UTC
        </span>
</div>
<pre class="bz_comment_text">  Hi Hugh,

no thanks, patch looks fine, applied and pushed:
<a href="https://git.gnome.org/browse/libxml2/commit/?id=ab2b9a93ff19cedde7befbf2fcc48c6e352b6cbe">https://git.gnome.org/browse/libxml2/commit/?id=ab2b9a93ff19cedde7befbf2fcc48c6e352b6cbe</a>

  thanks a lot !

Daniel</pre>
</div><div class="bz_comment" id="c10">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c10">Comment 10</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-04 03:03:00 UTC
        </span>
</div>
<pre class="bz_comment_text">Hi Daniel,

Thanks for that. Any chance this report can become public now?

I've also got another <a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=756372" title="RESOLVED FIXED - Buffer overead with HTML parser in push mode in xmlSAX2TextNode, causes segfault when compiled with ASAN">bug 756372</a> that is currently public. I've been meaning to file some more with patches as well, when I get a free moment! 

Cheers,

Hugh</pre>
</div><div class="bz_comment" id="c11">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c11">Comment 11</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Daniel Veillard</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-04 03:14:26 UTC
        </span>
</div>
<pre class="bz_comment_text">yes you are right, for 756372 I have that as part of the issues I'm looking at
right now. Will travel until Friday, but hopefully can close that one too soon.

  thanks !

Daniel</pre>
</div><div class="bz_comment" id="c12">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c12">Comment 12</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Gaurav</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-16 08:44:42 UTC
        </span>
</div>
<pre class="bz_comment_text">Hi Hugh,
===================================================================
The testfile I used was generated with afl-fuzz, and then minimized. It's hex representation is as follows:

 $ xxd -g 1 ~/fuzzing/xml-tmin/id\:000000*
0000000: 3c 21 44 4f 43 54 59 50 45 80 5b 3c 21 45 4e 54  &lt;!DOCTYPE.[&lt;!ENT
0000010: 49 54 59 4a                                      ITYJ
===================================================================
Could you tell me steps to generate testfiles using afl-fuzz.
Thanks.</pre>
</div><div class="bz_comment" id="c13">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c13">Comment 13</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Gaurav</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-19 02:19:12 UTC
        </span>
</div>
<pre class="bz_comment_text">CVE Assigned - CVE-2015-8241</pre>
</div><div class="bz_comment" id="c14">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c14">Comment 14</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-19 02:33:03 UTC
        </span>
</div>
<pre class="bz_comment_text">Hi Gaurav,

Sorry I didn't see your reply earlier.

I used a wrapper called afl-gcc as my CC environment variable, and also set AFL_USE_ASAN=1 (so that it compiles with ASAN). I then built libxml as usual.

I then ran the afl-fuzz tool like so:

afl-fuzz -i ~/fuzzing/libxml2/xmllint/in -o ~/fuzzing/libxml2/xmllint/out -- ~/builds/libxml2/xmllint @@

~/fuzzing/libxml2/xmllint/in is a directory that contains a small xml file, and the output of the fuzzing goes into ~/fuzzing/libxml2/xmllint/out/. The @@ is a placeholder for a file.

After running for a while, the tool found some "crashes", which were inputs that caused xmllint to produce a segfault. In this case, it only does the segfault when compiled with ASAN, but that shows a memory issue (in this case buffer-overread).

Hope that helps, thanks for the CVE number as well.

Cheers,

Hugh</pre>
</div><div class="bz_comment" id="c15">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c15">Comment 15</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Gaurav</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-19 02:51:05 UTC
        </span>
</div>
<pre class="bz_comment_text">I want to know file in how you generated input files [~/fuzzing/libxml2/xmllint/in] ?</pre>
</div><div class="bz_comment" id="c16">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c16">Comment 16</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-19 02:59:11 UTC
        </span>
</div>
<pre class="bz_comment_text">The file was:

&lt;a b="c"&gt;d&lt;/a&gt;

Which came from testcases/others/xml/small_document.xml in the afl tarball

I may have also had the output of xmllint --auto as well, which is 

&lt;?xml version="1.0"?&gt;
&lt;info&gt;abc&lt;/info&gt;

Cheers,

Hugh</pre>
</div><div class="bz_comment" id="c17">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c17">Comment 17</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Gaurav</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-19 03:05:25 UTC
        </span>
</div>
<pre class="bz_comment_text">Keeping test xml file at location ./afl_test/in/ &amp; running below command outputs as below is there something wrong ?

afl-fuzz -i ./afl_test/in/ -o ./afl_test/out/ -- ./xmllint @@
afl-fuzz 1.95b by &lt;<a href="mailto:lcamtuf@google.com">lcamtuf@google.com</a>&gt;
[+] You have 40 CPU cores and 1 runnable tasks (utilization: 2%).
[+] Try parallel jobs - see docs/parallel_fuzzing.txt.
[*] Checking core_pattern...

[-] Hmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues due to an extended delay
    between the fuzzed binary malfunctioning and this information being
    eventually relayed to the fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as hangs, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core &gt;/proc/sys/kernel/core_pattern

[-] PROGRAM ABORT : Pipe at the beginning of 'core_pattern'
         Location : check_crash_handling(), afl-fuzz.c:6933</pre>
</div><div class="bz_comment" id="c18">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c18">Comment 18</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-19 03:23:26 UTC
        </span>
</div>
<pre class="bz_comment_text">Hi Gaurav,

Ah yes, you need a bit more setup first time you use afl. You kinda just have to run all the commands it suggests, then eventually it should start running and you should see a screen similar to <a href="http://lcamtuf.coredump.cx/afl/afl_screen.png">http://lcamtuf.coredump.cx/afl/afl_screen.png</a>

Cheers,

Hugh</pre>
</div><div class="bz_comment" id="c19">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c19">Comment 19</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Gsunde Orangen</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-22 23:05:41 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to Gaurav from <a href="show_bug.cgi?id=756263#c13">comment #13</a>)
<span class="quote">&gt; CVE Assigned - CVE-2015-8241</span>
The release notes mention: "CVE-2015-8242 Buffer overead with HTML parser in push mode"
Which one is correct (8241 or 8242), or is there a different, second bug?</pre>
</div><div class="bz_comment" id="c20">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c20">Comment 20</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Gsunde Orangen</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-22 23:31:59 UTC
        </span>
</div>
<pre class="bz_comment_text">Apologies - found that second one (CVE-2015-8242): <a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=756372" title="RESOLVED FIXED - Buffer overead with HTML parser in push mode in xmlSAX2TextNode, causes segfault when compiled with ASAN">bug 756372</a>.
So I suggest that CVE-2015-8241 should be listed in the release notes for 2.9.3, too; thanks!
Gsunde</pre>
</div><div class="bz_comment" id="c21">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c21">Comment 21</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Gaurav</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-11-23 00:38:32 UTC
        </span>
</div>
<pre class="bz_comment_text">Yes this CVE should be mentioned against commit id - <a href="https://git.gnome.org/browse/libxml2/commit/?id=ab2b9a93ff19cedde7befbf2fcc48c6e352b6cbe">https://git.gnome.org/browse/libxml2/commit/?id=ab2b9a93ff19cedde7befbf2fcc48c6e352b6cbe</a></pre>
</div><div class="bz_comment" id="c22">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c22">Comment 22</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Alexander Pyhalov</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-12-14 14:21:53 UTC
        </span>
</div>
<pre class="bz_comment_text">After applying this patch to libxml2 2.9.2 I see the following regression during tests:

Ran 2269 tests, 16 errors, 0 leaks
Total 2269 tests, 16 errors, 0 leaks
See runxmlconf.log for detailed output

diff to previous (successfull runxmlconf.log):

diff -u  ~/srcs/tests/oi-userland/components/libxml2/build/i86/runxmlconf.log  build/i86/runxmlconf.log 
--- /export/home/alp/srcs/tests/oi-userland/components/libxml2/build/i86/runxmlconf.log 2015-12-14 16:49:35.711325386 +0300
+++ build/i86/runxmlconf.log    2015-12-14 17:16:51.471941259 +0300
@@ -13,6 +13,9 @@
 
 
 ------------
+test valid-not-sa-004 : xmlconf/xmltest//valid/not-sa/004.xml failed to validate a valid document
+
+------------
 Skipping error test pr-xml-euc-jp 
 
 ------------</pre>
</div><div class="bz_comment" id="c23">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c23">Comment 23</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hugh Davenport</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-12-14 21:15:56 UTC
        </span>
</div>
<pre class="bz_comment_text">Hi,

I get 15 errors, but I don't think this is a regression from 2.9.2 as I get the same on a clean checkout of 2.9.2 without this patch, and no change (still errors) with the patch.

Cheers,

Hugh</pre>
</div><div class="bz_comment" id="c24">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=756263#c24">Comment 24</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Alexander Pyhalov</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-12-14 21:18:08 UTC
        </span>
</div>
<pre class="bz_comment_text">Hi, with 2.9.3 I see 15 errors. With 2.9.2 and this patch - 16. As it's not reproducible in the latest version, it's not so important.</pre>
</div>
<script type="text/javascript">
  function traceparser_toggle_trace(link, trace_id) {
    var trace = document.getElementById('trace_' + trace_id);
    bz_toggleClass(trace, 'bz_default_hidden');
    if (link.innerHTML == '+') { link.innerHTML = '&mdash;'; }
    else { link.innerHTML = '+'; }
  }
</script>
</td>
<td>
</td>
</tr></table>
</div>
<hr/>
</form>
<hr/>

<br/>
</div>
<div id="footer">
<div class="intro"></div>
<ul id="useful-links">
<li id="links-actions"><ul class="links">
<li><a href="./">Home</a></li>
<li><span class="separator">| </span><span style="text-decoration:line-through"><a href="">New</a></span></li>
<li><span class="separator">| </span><a href="page.cgi?id=browse.html&amp;product=libxml2">Browse</a></li>
<li><span class="separator">| </span><a href="query.cgi">Search</a></li>
<li class="form">
<span class="separator">| </span>
<form action="buglist.cgi" method="get" onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
<input id="no_redirect_bottom" name="no_redirect" type="hidden" value="0"/>
<script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
<input class="txt" id="quicksearch_bottom" name="quicksearch" title="Quick Search" type="text" value=""/>
<input class="btn" id="find_bottom" type="submit" value="Search"/></form>
<a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>
<li><span class="separator">| </span><a href="page.cgi?id=reports.html">Reports</a></li>
<li>
<span class="separator">| </span>
<a href="http://www.bugzilla.org/docs/4.4/en/html/bug_page.html" target="_blank">Help</a>
</li>
<li id="mini_login_container_bottom">
<span class="separator">| </span>
<a href="show_bug.cgi?id=756263&amp;GoAheadAndLogIn=1" id="login_link_bottom" onclick="return show_mini_login_form('_bottom')">Log In</a>
<form action="show_bug.cgi?id=756263" class="mini_login bz_default_hidden" id="mini_login_bottom" method="POST" onsubmit="return check_mini_login_fields( '_bottom' );">
<input class="bz_login" id="Bugzilla_login_bottom" name="Bugzilla_login" onfocus="mini_login_on_focus('_bottom')" title="Login"/>
<input class="bz_password" id="Bugzilla_password_bottom" name="Bugzilla_password" title="Password" type="password"/>
<input class="bz_password bz_default_hidden bz_mini_login_help" id="Bugzilla_password_dummy_bottom" onfocus="mini_login_on_focus('_bottom')" title="Password" type="text" value="password"/>
<input checked="" class="bz_remember" id="Bugzilla_remember_bottom" name="Bugzilla_remember" type="checkbox" value="on"/>
<label for="Bugzilla_remember_bottom">Remember</label>
<input name="Bugzilla_login_token" type="hidden" value=""/>
<input id="log_in_bottom" name="GoAheadAndLogIn" type="submit" value="Log in"/>
<script type="text/javascript">
      mini_login_constants = {
          "login" : "login",
          "warning" : "You must set the login and password before logging in."
      };
      
      if (YAHOO.env.ua.gecko || YAHOO.env.ua.ie || YAHOO.env.ua.opera) {
          YAHOO.util.Event.onDOMReady(function() {
              init_mini_login_form('_bottom');
          });
      }
      else {
          YAHOO.util.Event.on(window, 'load', function () {
              window.setTimeout(function() {
                  init_mini_login_form('_bottom');
              }, 200);
          });
    }
    </script>
<a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
</form>
</li>
<li id="forgot_container_bottom">
<span class="separator">| </span>
<a href="show_bug.cgi?id=756263&amp;GoAheadAndLogIn=1#forgot" id="forgot_link_bottom" onclick="return show_forgot_form('_bottom')">Forgot Password</a>
<form action="token.cgi" class="mini_forgot bz_default_hidden" id="forgot_form_bottom" method="post">
<label for="login_bottom">Login:</label>
<input id="login_bottom" name="loginname" size="20" type="text"/>
<input id="forgot_button_bottom" type="submit" value="Reset Password"/>
<input name="a" type="hidden" value="reqpw"/>
<input id="token_bottom" name="token" type="hidden" value="1626095124-XKF68hCZBjTK5FzOuMPkVaFdxgILeTbX55h2Lhjf0ak"/>
<a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
</form>
</li>
</ul>
</li>
</ul>
<div class="outro"></div>
</div>
</body>
</html>