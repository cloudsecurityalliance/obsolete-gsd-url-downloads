<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
                      "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
  <head>
    <title>Bug 1039 &ndash; Null pointer dereference in nsvdec.c</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link rel="Top" href="https://bugzilla.libav.org/">

  


  
    <link rel="Show" title="Dependency Tree"
          href="showdependencytree.cgi?id=1039&amp;hide_resolved=1">
      <link rel="Show" title="Dependency Graph"
            href="showdependencygraph.cgi?id=1039">

      <link rel="Show" title="Bug Activity"
            href="show_activity.cgi?id=1039">
      <link rel="Show" title="Printer-Friendly Version"
            href="show_bug.cgi?format=multiple&amp;id=1039">



    
    <link href="skins/standard/global.css"
          rel="alternate stylesheet" 
          title="Classic"><link href="js/yui/assets/skins/sam/autocomplete.css" rel="stylesheet"
        type="text/css" ><link href="js/yui/assets/skins/sam/calendar.css" rel="stylesheet"
        type="text/css" ><link href="skins/standard/global.css" rel="stylesheet"
        type="text/css" ><link href="skins/standard/show_bug.css" rel="stylesheet"
        type="text/css" ><!--[if lte IE 7]>
      


  <link href="skins/standard/IE-fixes.css" rel="stylesheet"
        type="text/css" >
<![endif]-->

    <link href="skins/contrib/Libav/global.css" rel="stylesheet"
        type="text/css" title="Libav">

    

    

    
<script type="text/javascript" src="js/yui/yahoo-dom-event/yahoo-dom-event.js"></script><script type="text/javascript" src="js/yui/cookie/cookie-min.js"></script><script type="text/javascript" src="js/yui/datasource/datasource-min.js"></script><script type="text/javascript" src="js/yui/connection/connection-min.js"></script><script type="text/javascript" src="js/yui/json/json-min.js"></script><script type="text/javascript" src="js/yui/autocomplete/autocomplete-min.js"></script><script type="text/javascript" src="js/yui/calendar/calendar-min.js"></script><script type="text/javascript" src="js/global.js"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    'You must enter a Description for this attachment.',
                component_required:
                    'You must select a Component for this bug.',
                description_required:
                    'You must enter a Description for this bug.',
                short_desc_required:
                    'You must enter a Summary for this bug.',
                version_required:
                    'You must select a Version for this bug.'
            }
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null, 
                             "Bug 1039 – Null pointer dereference in nsvdec.c",  
                             "show_bug.cgi?id=1039" );
        document.title = "Bug 1039 – Null pointer dereference in nsvdec.c";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "Bug 1039 – Null pointer dereference in nsvdec.c", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();
    });
    // -->
    </script>
<script type="text/javascript" src="js/util.js"></script><script type="text/javascript" src="js/field.js"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico" >
  </head>



  <body onload=""
        class="bugzilla-libav-org bz_bug bz_status_CLOSED bz_product_Libav bz_component_libavformat bz_bug_1039 yui-skin-sam">



<div id="header">
<div id="banner">
  </div>

<table border="0" cellspacing="0" cellpadding="0" id="titles">
<tr>
    <td id="title">
      <p>Bugzilla &ndash; Bug&nbsp;1039</p>
    </td>

    <td id="subtitle">
      <p class="subheader">Null pointer dereference in nsvdec.c</p>
    </td>

    <td id="information">
      <p class="header_addl_info">Last modified: 2018-05-30 14:42:49 CEST</p>
    </td>
</tr>
</table>

<table id="lang_links_container" cellpadding="0" cellspacing="0"
       class="bz_default_hidden"><tr><td>
</td></tr></table>
<ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li>
      <span class="separator">| </span>
        <a href="request.cgi">Requests</a></li>

  <li>
        <span class="separator">| </span>
        <a href="docs/en/html/bug_page.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=1039&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  
  <form action="show_bug.cgi?id=1039" method="POST" 
        class="mini_login bz_default_hidden"
        id="mini_login_top"
        onsubmit="return check_mini_login_fields( '_top' );"
  >
    <input id="Bugzilla_login_top" 
           class="bz_login"
           name="Bugzilla_login"
           title="Login"
           onfocus="mini_login_on_focus('_top')"
    >
    <input class="bz_password" 
           id="Bugzilla_password_top" 
           name="Bugzilla_password"
           type="password"
           title="Password"
    >
    <input class="bz_password bz_default_hidden bz_mini_login_help" type="text" 
           id="Bugzilla_password_dummy_top" value="password"
           title="Password"
           onfocus="mini_login_on_focus('_top')"
    >
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <script type="text/javascript">
      mini_login_constants = {
          "login" : "login",
          "warning" : "You must set the login and password before logging in."
      };
      
      if (YAHOO.env.ua.gecko || YAHOO.env.ua.ie || YAHOO.env.ua.opera) {
          YAHOO.util.Event.onDOMReady(function() {
              init_mini_login_form('_top');
          });
      }
      else {
          YAHOO.util.Event.on(window, 'load', function () {
              window.setTimeout(function() {
                  init_mini_login_form('_top');
              }, 200);
          });
    }
    </script>
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>
<li id="forgot_container_top">
  <span class="separator">| </span>
  <a id="forgot_link_top" href="show_bug.cgi?id=1039&amp;GoAheadAndLogIn=1#forgot"
     onclick="return show_forgot_form('_top')">Forgot Password</a>
  <form action="token.cgi" method="post" id="forgot_form_top"
        class="mini_forgot bz_default_hidden">
    <label for="login_top">Login:</label>
    <input type="text" name="loginname" size="20" id="login_top">
    <input id="forgot_button_top" value="Reset Password" 
           type="submit">
    <input type="hidden" name="a" value="reqpw">
    <input type="hidden" id="token_top" name="token" value="1635622088-kGROO9gCG0r6S3Qyb-Nv2ZRuAuZJcZKr3i9sVyEVTBk">
    <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
  </form>
</li>
</ul>
</div> 

<div id="bugzilla-body">

<div class="navigation">
  
  <i><font color="#777777">First</font></i>
  <i><font color="#777777">Last</font></i>
  <i><font color="#777777">Prev</font></i>
  <i><font color="#777777">Next</font></i>
  &nbsp;&nbsp;
  <i><font color="#777777">This bug is not in your last
    search results.</font></i>
</div>
<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2018-05-30 14:42:49">
  <input type="hidden" name="longdesclength" value="6">
  <input type="hidden" name="id" value="1039">
  <input type="hidden" name="token" value="1635622088-aZb3M3F5GRFWD7fdKsw4eu4C6c-UwNJNyPnXrLLSi6Q">
<div class="bz_alias_short_desc_container edit_form">
     <a href="show_bug.cgi?id=1039"><b>Bug&nbsp;1039</b></a> -<span id="summary_alias_container" class="bz_default_hidden"> 
      <span id="short_desc_nonedit_display">Null pointer dereference in nsvdec.c</span>
     </span>
  
       
    <div id="summary_alias_input">
      <table id="summary"> 
        <tr>
            <td colspan="2">
          </td>
        </tr>
        
        <tr><th class="field_label "
    id="field_label_short_desc">

    <label for="short_desc" accesskey="s">

  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>
</label>
</th>
          <td>Null pointer dereference in nsvdec.c
          </td>
        </tr>
      </table>
    </div>
  </div>
  <script type="text/javascript">
    hideAliasAndSummary('Null pointer dereference in nsvdec.c', '');
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">CLOSED
          FIXED
      </span>
    </td>
  </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Libav</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Legal</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Libav"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >libavformat</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">

    <label for="version">

  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>
</label>
</th>
        <td>git HEAD
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">

    <label for="rep_platform" accesskey="h">

  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>
</label>
</th>
      <td class="field_value">X86
       Linux
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label for="priority" accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>---
       normal
      </td>
    </tr>            
          
          <tr>
      <th class="field_label">
        <a href="page.cgi?id=fields.html#assigned_to">Assigned To</a>:
      </th>
      <td><span class="vcard"><span class="fn">Libav Bug Celebrity user</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'bugzilla\x40libav.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">

    <label for="bug_file_loc" accesskey="u">

  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>
</label>
</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          <tr>
    <th class="field_label">
      <label for="duplicates">Duplicates</label>:
    </th>
    <td class="field_value" colspan="2">
      <span id="duplicates"><a class="bz_bug_link 
          bz_status_CLOSED  bz_closed"
   title="CLOSED DUPLICATE - Null pointer dereference in nsv_read_chunk()"
   href="show_bug.cgi?id=994">994</a> 
      </span>
      (<a href="buglist.cgi?bug_id=994">view as bug list</a>)
    </td>
  </tr>
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>
    
  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>
    <a class="bz_bug_link 
          bz_status_CLOSED  bz_closed"
   title="CLOSED FIXED - Release Tracking bug for 12.1 release"
   href="show_bug.cgi?id=976">Release12.1</a> 
  </td>
  </tr>
  
  <tr>
    <th>&nbsp;</th>
  
    <td colspan="2" align="left" id="show_dependency_tree_or_graph">
      Show dependency <a href="showdependencytree.cgi?id=1039&amp;hide_resolved=1">tree</a>
  
        /&nbsp;<a href="showdependencygraph.cgi?id=1039">graph</a>
    </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table cellpadding="3" cellspacing="1">
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2017-03-21 07:14 CET by <span class="vcard"><span class="fn">Marcel Boehme</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2018-05-30 14:42 CEST 
      (<a href="show_activity.cgi?id=1039">History</a>)
    </td>
  
  </tr>
         <tr>
      <th class="field_label">
        <label for="newcc" accesskey="a">CC List:</label>
      </th>
      <td>2 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5">
                <option value="dungnguy">dungnguy</option>
                <option value="kamil.frankowicz">kamil.frankowicz</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>
         <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with a comma. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" ></td>
    </tr> 
         
         <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
         
                <tr>
      <th class="field_label">
        <label>Flags:</label>
      </th>
      <td><span title="Sean McGovern">gseanmcg</span>:
      Security&#8209;concern+<br>
      </td>
    </tr>

        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts" cellspacing="0" cellpadding="0"><tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table" cellspacing="0" cellpadding="4">
  <tr id="a0">
    <th colspan="2" align="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_application_octet-stream">
        <td valign="top">
            <a href="attachment.cgi?id=657"
               title="View the content of the attachment">
          <b>Crash-inducing sample file</b></a>

          <span class="bz_attach_extra_info">
              (1.62 KB,
                application/octet-stream)

            <br>
            <a href="#attach_657"
               title="Go to the comment associated with the attachment">2017-03-21 07:14 CET</a>,

            <span class="vcard"><span class="fn">Marcel Boehme</span>
</span>
          </span>
        </td>


        <td valign="top">
          <a href="attachment.cgi?id=657&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
            <a id="view_all" href="attachment.cgi?bugid=1039&amp;action=viewall">View All</a>
        </span>
        <a href="attachment.cgi?bugid=1039&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=1039&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the `comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>




<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table" cellpadding="0" cellspacing="0"><tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1039#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Marcel Boehme</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-03-21 07:14:03 CET
        </span>
      </div>



<pre class="bz_comment_text" >Created <span class=""><a href="attachment.cgi?id=657" name="attach_657" title="Crash-inducing sample file">attachment 657</a> <a href="attachment.cgi?id=657&amp;action=edit" title="Crash-inducing sample file">[details]</a></span>
Crash-inducing sample file

Dear all,

The following bug was found with AFLGo, a directed version of the fuzzer AFL / AFLFast. Thanks also to Van-Thuan Pham.

The attached file crashes LibAV with a segmentation fault due to a null pointer dereference. It was reproduced on Ubuntu 14.04 x86_64 for LibAV git revision 824d4062 (HEAD).

Below is GBD INFORMATION containing the stack trace, assembler code, and register information from gdb for the crash-inducing sample input. The stack trace may vary but it always crashes in the same function. Here are the stack traces of two different files:

==47558== Invalid read of size 1
==47558==    at 0x8A5FB2: nsv_read_chunk (nsvdec.c:579)
==47558==    by 0x8A6C82: nsv_read_packet (nsvdec.c:644)
==47558==    by 0xA2AB00: ff_read_packet (utils.c:447)
==47558==    by 0xA32FC8: read_frame_internal (utils.c:932)
==47558==    by 0xA403A6: avformat_find_stream_info (utils.c:2336)
==47558==    by 0x541459: open_input_file (avconv_opt.c:771)
==47558==    by 0x5454FE: open_files (avconv_opt.c:2417)
==47558==    by 0x5454FE: avconv_parse_options (avconv_opt.c:2454)
==47558==    by 0x518B8E: main (avconv.c:2881)
==47558==  Address 0x0 is not stack'd, malloc'd or (recently) free'd

==52462== Invalid read of size 1
==52462==    at 0x8A5FB2: nsv_read_chunk (nsvdec.c:579)
==52462==    by 0x8A9754: nsv_read_header (nsvdec.c:505)
==52462==    by 0xA50C61: avformat_open_input (utils.c:336)
==52462==    by 0x541049: open_input_file (avconv_opt.c:754)
==52462==    by 0x5454FE: open_files (avconv_opt.c:2417)
==52462==    by 0x5454FE: avconv_parse_options (avconv_opt.c:2454)
==52462==    by 0x518B8E: main (avconv.c:2881)


GDB INFORMATION
$ gdb ./avconv

(gdb) r -i crash -f null - &gt; /dev/null
[Thread debugging using libthread_db enabled]
Using host libthread_db library &quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;.
avconv version v13_dev0-948-g7995ebf, Copyright (c) 2000-2017 the Libav developers
  built on Mar 17 2017 05:01:44 with gcc 4.8 (Ubuntu 4.8.5-2ubuntu1~14.04.1)
[nsv &#64; 0x2c12060] Format detected only with low score of 20, misdetection possible!

Program received signal SIGSEGV, Segmentation fault.
nsv_read_chunk (s=s&#64;entry=0x2c12060, fill_header=fill_header&#64;entry=1) at libavformat/nsvdec.c:579
579                 av_log(s, AV_LOG_TRACE, &quot;NSV video: [%d] = %02&quot;PRIx8&quot;\n&quot;,

(gdb) bt
#0  nsv_read_chunk (s=s&#64;entry=0x2c12060, fill_header=fill_header&#64;entry=1) at libavformat/nsvdec.c:579
#1  0x00000000008a9755 in nsv_read_header (s=s&#64;entry=0x2c12060) at libavformat/nsvdec.c:505
#2  0x0000000000a50c62 in avformat_open_input (ps=ps&#64;entry=0x7fffffffd950, 
    filename=filename&#64;entry=0x7fffffffe7e3 &quot;/dev/shm/run-libav/avconv/fuzzer9/crashes/id:000179,sig:11,src:007241+003000,op:splice,rep:16&quot;, 
    fmt=fmt&#64;entry=0x0, options=0x2c17ff8) at libavformat/utils.c:336
#3  0x000000000054104a in open_input_file (o=o&#64;entry=0x7fffffffdad0, filename=&lt;optimized out&gt;) at avtools/avconv_opt.c:754
#4  0x00000000005454ff in open_files (inout=0x212e5fc &quot;input&quot;, open_file=0x540a00 &lt;open_input_file&gt;, l=&lt;optimized out&gt;, l=&lt;optimized out&gt;)
    at avtools/avconv_opt.c:2417
#5  avconv_parse_options (argc=argc&#64;entry=6, argv=argv&#64;entry=0x7fffffffe578) at avtools/avconv_opt.c:2454
#6  0x0000000000518b8f in main (argc=6, argv=0x7fffffffe578) at avtools/avconv.c:2881

(gdb) disass $pc-32,$pc+32
Dump of assembler code from 0x8a5f92 to 0x8a5fd2:
   0x00000000008a5f92 &lt;nsv_read_chunk+4834&gt;:    mov    $0x212230c,%edx
   0x00000000008a5f97 &lt;nsv_read_chunk+4839&gt;:    mov    (%rax),%ecx
   0x00000000008a5f99 &lt;nsv_read_chunk+4841&gt;:    sete   %r8b
   0x00000000008a5f9d &lt;nsv_read_chunk+4845&gt;:    or     %r8d,0x40(%r15)
   0x00000000008a5fa1 &lt;nsv_read_chunk+4849&gt;:    cmp    $0x8,%ebp
   0x00000000008a5fa4 &lt;nsv_read_chunk+4852&gt;:    cmovbe %ebp,%r12d
   0x00000000008a5fa8 &lt;nsv_read_chunk+4856&gt;:    mov    %rdi,0x28(%r15)
   0x00000000008a5fac &lt;nsv_read_chunk+4860&gt;:    xor    %eax,%eax
   0x00000000008a5fae &lt;nsv_read_chunk+4862&gt;:    mov    %ecx,0x3c(%r15)
=&gt; 0x00000000008a5fb2 &lt;nsv_read_chunk+4866&gt;:    movzbl (%r9),%r8d
   0x00000000008a5fb6 &lt;nsv_read_chunk+4870&gt;:    lea    -0x1(%r12),%ebp
   0x00000000008a5fbb &lt;nsv_read_chunk+4875&gt;:    xor    %ecx,%ecx
   0x00000000008a5fbd &lt;nsv_read_chunk+4877&gt;:    mov    %r13,%rdi
   0x00000000008a5fc0 &lt;nsv_read_chunk+4880&gt;:    and    $0x3,%ebp
   0x00000000008a5fc3 &lt;nsv_read_chunk+4883&gt;:    mov    %ebp,0x14(%rsp)
   0x00000000008a5fc7 &lt;nsv_read_chunk+4887&gt;:    mov    $0x1,%ebp
   0x00000000008a5fcc &lt;nsv_read_chunk+4892&gt;:    callq  0x20bc3b0 &lt;av_log&gt;
   0x00000000008a5fd1 &lt;nsv_read_chunk+4897&gt;:    cmp    $0x1,%r12d
End of assembler dump.

(gdb) info all-registers
rax            0x0      0                                                                                                                                                                                                                                                                                             
rbx            0x2c2b140        46313792
rcx            0x0      0
rdx            0x212230c        34743052
rsi            0x38     56
rdi            0x0      0
rbp            0x50f65  0x50f65
rsp            0x7fffffffd750   0x7fffffffd750
r8             0x1      1
r9             0x0      0
r10            0x8000000000000000       -9223372036854775808
r11            0x247    583
r12            0x8      8
r13            0x2c12060        46211168
r14            0x0      0
r15            0x2c23020        46280736
rip            0x8a5fb2 0x8a5fb2 &lt;nsv_read_chunk+4866&gt;
eflags         0x10246  [ PF ZF IF RF ]
cs             0x33     51
ss             0x2b     43
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
st0            0        (raw 0x00000000000000000000)
st1            0        (raw 0x00000000000000000000)
st2            0        (raw 0x00000000000000000000)
st3            0        (raw 0x00000000000000000000)
st4            0        (raw 0x00000000000000000000)
st5            0        (raw 0x00000000000000000000)
st6            0        (raw 0x00000000000000000000)
st7            0        (raw 0x00000000000000000000)
fctrl          0x37f    895
fstat          0x0      0
ftag           0xffff   65535
fiseg          0x0      0
fioff          0x0      0
foseg          0x0      0
fooff          0x0      0
fop            0x0      0
mxcsr          0x1fa0   [ PE IM DM ZM OM UM PM ]
ymm0           {v8_float = {0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x1, 0x0, 0x0, 0x0}, v32_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 
    0x0 &lt;repeats 24 times&gt;}, v16_int16 = {0x0, 0x0, 0x0, 0x3ff0, 0x0 &lt;repeats 12 times&gt;}, v8_int32 = {0x0, 0x3ff00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, 
  v4_int64 = {0x3ff0000000000000, 0x0, 0x0, 0x0}, v2_int128 = {0x00000000000000003ff0000000000000, 0x00000000000000000000000000000000}}
ymm1           {v8_float = {0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x1, 0x0, 0x0, 0x0}, v32_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 
    0x0 &lt;repeats 24 times&gt;}, v16_int16 = {0x0, 0x0, 0x0, 0x3ff0, 0x0 &lt;repeats 12 times&gt;}, v8_int32 = {0x0, 0x3ff00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, 
  v4_int64 = {0x3ff0000000000000, 0x0, 0x0, 0x0}, v2_int128 = {0x00000000000000003ff0000000000000, 0x00000000000000000000000000000000}}
ymm2           {v8_float = {0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x1, 0x0, 0x0, 0x0}, v32_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 
    0x0 &lt;repeats 24 times&gt;}, v16_int16 = {0x0, 0x0, 0x0, 0x3ff0, 0x0 &lt;repeats 12 times&gt;}, v8_int32 = {0x0, 0x3ff00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, 
  v4_int64 = {0x3ff0000000000000, 0x0, 0x0, 0x0}, v2_int128 = {0x00000000000000003ff0000000000000, 0x00000000000000000000000000000000}}
ymm3           {v8_float = {0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x1, 0x0, 0x0, 0x0}, v32_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 
    0x0 &lt;repeats 24 times&gt;}, v16_int16 = {0x0, 0x0, 0x0, 0x3ff0, 0x0 &lt;repeats 12 times&gt;}, v8_int32 = {0x0, 0x3ff00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, 
  v4_int64 = {0x3ff0000000000000, 0x0, 0x0, 0x0}, v2_int128 = {0x00000000000000003ff0000000000000, 0x00000000000000000000000000000000}}
ymm4           {v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 &lt;repeats 32 times&gt;}, v16_int16 = {
    0x0 &lt;repeats 16 times&gt;}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {
    0x00000000000000000000000000000000, 0x00000000000000000000000000000000}}
ymm5           {v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x70, 0x70, 0x69, 0x6e, 0x67, 
    0x0 &lt;repeats 27 times&gt;}, v16_int16 = {0x7070, 0x6e69, 0x67, 0x0 &lt;repeats 13 times&gt;}, v8_int32 = {0x6e697070, 0x67, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, 
  v4_int64 = {0x676e697070, 0x0, 0x0, 0x0}, v2_int128 = {0x0000000000000000000000676e697070, 0x00000000000000000000000000000000}}
ymm6           {v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x8000000000000000, 0x0, 0x0, 0x0}, v32_int8 = {0x61, 0x63, 0x6b, 0x65, 
    0x74, 0x73, 0x0, 0x61, 0x0 &lt;repeats 24 times&gt;}, v16_int16 = {0x6361, 0x656b, 0x7374, 0x6100, 0x0 &lt;repeats 12 times&gt;}, v8_int32 = {0x656b6361, 0x61007374, 
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x61007374656b6361, 0x0, 0x0, 0x0}, v2_int128 = {0x000000000000000061007374656b6361, 
    0x00000000000000000000000000000000}}
ymm7           {v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 &lt;repeats 32 times&gt;}, v16_int16 = {
    0x0 &lt;repeats 16 times&gt;}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {
    0x00000000000000000000000000000000, 0x00000000000000000000000000000000}}
ymm8           {v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0 &lt;repeats 32 times&gt;}, v16_int16 = {
    0x0 &lt;repeats 16 times&gt;}, v8_int32 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int64 = {0x0, 0x0, 0x0, 0x0}, v2_int128 = {
    0x00000000000000000000000000000000, 0x00000000000000000000000000000000}}
ymm9           {v8_float = {0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x1, 0x0, 0x0, 0x0}, v32_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 
    0x0 &lt;repeats 24 times&gt;}, v16_int16 = {0x0, 0x0, 0x0, 0x3ff0, 0x0 &lt;repeats 12 times&gt;}, v8_int32 = {0x0, 0x3ff00000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},
  v4_int64 = {0x3ff0000000000000, 0x0, 0x0, 0x0}, v2_int128 = {0x00000000000000003ff0000000000000, 0x00000000000000000000000000000000}}
ymm10          {v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0, 0x0, 0x46, 0x84, 0x24, 0x59, 0xd6, 
    0x3e, 0x0 &lt;repeats 24 times&gt;}, v16_int16 = {0x0, 0x8446, 0x5924, 0x3ed6, 0x0 &lt;repeats 12 times&gt;}, v8_int32 = {0x84460000, 0x3ed65924, 0x0, 0x0, 0x0, 0x0, 
    0x0, 0x0}, v4_int64 = {0x3ed6592484460000, 0x0, 0x0, 0x0}, v2_int128 = {0x00000000000000003ed6592484460000, 0x00000000000000000000000000000000}}
ymm11          {v8_float = {0x9689a800, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x6a, 0xa2, 0x65, 0x50, 0xf2, 0xea, 
    0x8f, 0xbd, 0x0 &lt;repeats 24 times&gt;}, v16_int16 = {0xa26a, 0x5065, 0xeaf2, 0xbd8f, 0x0 &lt;repeats 12 times&gt;}, v8_int32 = {0x5065a26a, 0xbd8feaf2, 0x0, 0x0, 
    0x0, 0x0, 0x0, 0x0}, v4_int64 = {0xbd8feaf25065a26a, 0x0, 0x0, 0x0}, v2_int128 = {0x0000000000000000bd8feaf25065a26a, 0x00000000000000000000000000000000}}
ymm12          {v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc4, 0x3c, 
    0x0 &lt;repeats 24 times&gt;}, v16_int16 = {0x0, 0x0, 0x0, 0x3cc4, 0x0 &lt;repeats 12 times&gt;}, v8_int32 = {0x0, 0x3cc40000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, 
  v4_int64 = {0x3cc4000000000000, 0x0, 0x0, 0x0}, v2_int128 = {0x00000000000000003cc4000000000000, 0x00000000000000000000000000000000}}
ymm13          {v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x80, 0x59, 0xbc, 
    0x0 &lt;repeats 24 times&gt;}, v16_int16 = {0x0, 0x0, 0x8000, 0xbc59, 0x0 &lt;repeats 12 times&gt;}, v8_int32 = {0x0, 0xbc598000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, 
  v4_int64 = {0xbc59800000000000, 0x0, 0x0, 0x0}, v2_int128 = {0x0000000000000000bc59800000000000, 0x00000000000000000000000000000000}}
ymm14          {v8_float = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x0, 0x0, 0x0, 0x0}, v32_int8 = {0x8e, 0x85, 0x83, 0xe8, 0xf0, 0x24, 0x53, 
    0x3c, 0x0 &lt;repeats 24 times&gt;}, v16_int16 = {0x858e, 0xe883, 0x24f0, 0x3c53, 0x0 &lt;repeats 12 times&gt;}, v8_int32 = {0xe883858e, 0x3c5324f0, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int64 = {0x3c5324f0e883858e, 0x0, 0x0, 0x0}, v2_int128 = {0x00000000000000003c5324f0e883858e, 0x00000000000000000000000000000000}}
ymm15          {v8_float = {0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_double = {0x2d, 0x0, 0x0, 0x0}, v32_int8 = {0xc0, 0x9, 0xf2, 0x16, 0xb5, 0xdf, 0x46, 
    0x40, 0x0 &lt;repeats 24 times&gt;}, v16_int16 = {0x9c0, 0x16f2, 0xdfb5, 0x4046, 0x0 &lt;repeats 12 times&gt;}, v8_int32 = {0x16f209c0, 0x4046dfb5, 0x0, 0x0, 0x0, 
    0x0, 0x0, 0x0}, v4_int64 = {0x4046dfb516f209c0, 0x0, 0x0, 0x0}, v2_int128 = {0x00000000000000004046dfb516f209c0, 0x00000000000000000000000000000000}}

Best regards,
- Marcel

---
Marcel Boehme
Senior Research Fellow
TSUNAMi Research Centre
National University of Singapore</pre>
    </div><div id="c1" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1039#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sean McGovern</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-03-24 17:29:15 CET
        </span>
      </div>



<pre class="bz_comment_text" >Confirmed -- I can reproduce this.</pre>
    </div><div id="c2" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1039#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sean McGovern</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-03-26 18:49:31 CEST
        </span>
      </div>



<pre class="bz_comment_text" >Fixed in HEAD with fe6eea99efac66839052af547426518efd970b24 and release/12 with d951a2747968b989882c7da4fae393fee67e4dc2.

Thanks for your report!</pre>
    </div><div id="c3" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1039#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sean McGovern</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-05-01 22:28:39 CEST
        </span>
      </div>



<pre class="bz_comment_text" >*** <a class="bz_bug_link 
          bz_status_CLOSED  bz_closed"
   title="CLOSED DUPLICATE - Null pointer dereference in nsv_read_chunk()"
   href="show_bug.cgi?id=994">Bug 994</a> has been marked as a duplicate of this bug. ***</pre>
    </div><div id="c4" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1039#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Manh-Dung Nguyen</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-05-18 11:56:53 CEST
        </span>
      </div>



<pre class="bz_comment_text" >This is CVE-2017-9051. Thanks</pre>
    </div><div id="c5" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1039#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Diego Biurrun</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-05-29 21:43:10 CEST
        </span>
      </div>



<pre class="bz_comment_text" >I could not reproduce the crash with either the 11, 9, or 0.8 branches, so I assume these branches are unaffected.</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=1039">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=1039">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=1039">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>        


<div class="navigation">
  
  <i><font color="#777777">First</font></i>
  <i><font color="#777777">Last</font></i>
  <i><font color="#777777">Prev</font></i>
  <i><font color="#777777">Next</font></i>
  &nbsp;&nbsp;
  <i><font color="#777777">This bug is not in your last
    search results.</font></i>
</div>

<br>
</div>



<div id="footer">
  <div class="intro"></div>




<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li>
      <span class="separator">| </span>
        <a href="request.cgi">Requests</a></li>

  <li>
        <span class="separator">| </span>
        <a href="docs/en/html/bug_page.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=1039&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  
  <form action="show_bug.cgi?id=1039" method="POST" 
        class="mini_login bz_default_hidden"
        id="mini_login_bottom"
        onsubmit="return check_mini_login_fields( '_bottom' );"
  >
    <input id="Bugzilla_login_bottom" 
           class="bz_login"
           name="Bugzilla_login"
           title="Login"
           onfocus="mini_login_on_focus('_bottom')"
    >
    <input class="bz_password" 
           id="Bugzilla_password_bottom" 
           name="Bugzilla_password"
           type="password"
           title="Password"
    >
    <input class="bz_password bz_default_hidden bz_mini_login_help" type="text" 
           id="Bugzilla_password_dummy_bottom" value="password"
           title="Password"
           onfocus="mini_login_on_focus('_bottom')"
    >
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <script type="text/javascript">
      mini_login_constants = {
          "login" : "login",
          "warning" : "You must set the login and password before logging in."
      };
      
      if (YAHOO.env.ua.gecko || YAHOO.env.ua.ie || YAHOO.env.ua.opera) {
          YAHOO.util.Event.onDOMReady(function() {
              init_mini_login_form('_bottom');
          });
      }
      else {
          YAHOO.util.Event.on(window, 'load', function () {
              window.setTimeout(function() {
                  init_mini_login_form('_bottom');
              }, 200);
          });
    }
    </script>
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>
<li id="forgot_container_bottom">
  <span class="separator">| </span>
  <a id="forgot_link_bottom" href="show_bug.cgi?id=1039&amp;GoAheadAndLogIn=1#forgot"
     onclick="return show_forgot_form('_bottom')">Forgot Password</a>
  <form action="token.cgi" method="post" id="forgot_form_bottom"
        class="mini_forgot bz_default_hidden">
    <label for="login_bottom">Login:</label>
    <input type="text" name="loginname" size="20" id="login_bottom">
    <input id="forgot_button_bottom" value="Reset Password" 
           type="submit">
    <input type="hidden" name="a" value="reqpw">
    <input type="hidden" id="token_bottom" name="token" value="1635622088-kGROO9gCG0r6S3Qyb-Nv2ZRuAuZJcZKr3i9sVyEVTBk">
    <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
  </form>
</li>
</ul>
  </li>

  
    


  
</ul>

  <div class="outro"></div>
</div>


</body>
</html>