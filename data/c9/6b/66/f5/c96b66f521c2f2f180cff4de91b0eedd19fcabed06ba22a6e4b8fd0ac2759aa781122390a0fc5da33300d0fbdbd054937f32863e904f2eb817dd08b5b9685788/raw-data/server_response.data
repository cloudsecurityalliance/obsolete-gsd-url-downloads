
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>
Issue 29778: [CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath - Python tracker

</title>
<link rel="shortcut icon" href="@@file/favicon.ico" />
<link rel="stylesheet" type="text/css" href="@@file/main.css" />
<link rel="stylesheet" type="text/css" href="@@file/style.css" />
<link rel="search" type="application/opensearchdescription+xml" href="@@file/osd.xml" title="Python bug tracker search" />
<meta http-equiv="Content-Type"
      content="text/html; charset=utf-8" />

<script nonce="5d34c042dd9aa13590d90c07d2aa1238efc5384310e8f972fb4a8ea8f743e6ec" type="text/javascript">
submitted = false;
function submit_once() {
    if (submitted) {
        alert("Your request is being processed.\nPlease be patient.");
        return false;
    }
    submitted = true;
    return true;
}

function help_window(helpurl, width, height) {
    HelpWin = window.open('https://bugs.python.org/' + helpurl, 'RoundupHelpWindow', 'scrollbars=yes,resizable=yes,toolbar=no,height='+height+',width='+width);
    HelpWin.focus ()
}
</script>


<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.15/jquery-ui.js"></script>
<script type="text/javascript" src="@@file/issue.item.js"></script>
<link rel="stylesheet" type="text/css" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/smoothness/jquery-ui.css" />


</head>
<body>
  <!--  Logo  -->
  <h1 id="logoheader">
    <a accesskey="1" href="." id="logolink">
       <img src="@@file/python-logo.gif" alt="homepage" border="0" id="logo" /></a>
  </h1>

<div id="utility-menu">
<!-- Search Box -->
<div id="searchbox">
    <form name="searchform" method="get" action="issue" id="searchform">
      <div id="search">
       <input type="hidden" name="@columns"
              value="id,activity,title,creator,assignee,status,type" />
       <input type="hidden" name="@sort" value="-activity" />
       <input type="hidden" name="@filter" value="status" />
       <input type="hidden" name="@action" value="searchid" />
       <input type="hidden" name="ignore" value="file:content" />
       <input class="input-text" id="search-text"
              name="@search_text" size="10" />
       <input type="submit" id="submit" value="search" name="submit" class="input-button" />
       <input type="radio" name="status"
              id="status_notresolved" value="-1,1,3" />
       <label for="status_notresolved">open</label>
       <input type="radio" name="status" checked="checked"
              id="status_all" value="-1,1,2,3" />
       <label for="status_all">all</label>
      </div>
     </form>
</div>
</div>


<div id="left-hand-navigation">
<!--  Main Menu NEED LEVEL TWO HEADER AND FOOTER -->
<div id="menu">
  <ul class="level-one">
    <li><a href="https://www.python.org/" title="Go to the Python homepage">Python Home</a></li>
    <li><a href="https://www.python.org/about/" title="About The Python Language">About</a></li>
    <li><a href="https://www.python.org/blogs/" title="">News</a></li>
    <li><a href="https://www.python.org/doc/" title="">Documentation</a></li>
    <li><a href="https://www.python.org/downloads/" title="">Downloads</a></li>
    <li><a href="https://www.python.org/community/" title="">Community</a></li>
    <li><a href="https://www.python.org/psf/" title="Python Software Foundation">Foundation</a></li>
    <li><a href="https://devguide.python.org/" title="Python Developer's Guide">Developer's Guide</a></li>
    <li class="selected"><a href="." class="selected" title="Python Issue Tracker">Issue Tracker</a>
      <ul class="level-two">
        <li>
          <strong>Issues</strong>
          <ul class="level-three">
            
            <li><a href="issue?@template=search&amp;status=1">Search</a></li>
            <li><a href="issue?@action=random">Random Issue</a></li>
            <li>
              <form method="post" action="issue29778">
                <input type="submit" class="form-small"
                       value="Show issue:" />
                <input class="form-small" size="4" type="text" name="@number" />
                <input type="hidden" name="@type" value="issue" />
                <input type="hidden" name="@action" value="show" />
              </form>
            </li>
          </ul>
        </li>


        <li>
          <strong>Summaries</strong>
          <ul class="level-three">
            

            

            

            <li>
              <a href="issue?status=1&amp;@sort=-activity&amp;@columns=id%2Cactivity%2Ctitle%2Ccreator%2Cstatus&amp;@dispname=Issues%20with%20patch&amp;@startwith=0&amp;@group=priority&amp;keywords=2&amp;@action=search&amp;@filter=&amp;@pagesize=50">Issues with patch</a>
            </li>

            <li>
              <a href="issue?status=1&amp;@sort=-activity&amp;@columns=id%2Cactivity%2Ctitle%2Ccreator%2Cstatus&amp;@dispname=Easy%20issues&amp;@startwith=0&amp;@group=priority&amp;keywords=6&amp;@action=search&amp;@filter=&amp;@pagesize=50">Easy issues</a>
            </li>

            <li>
              <a href="issue?@template=stats">Stats</a>
            </li>

          </ul>
        </li>


        <li>
          <strong>User</strong>
          <form method="post" action="issue29778">
          <ul class="level-three">
            <li>
                Login&nbsp;(OpenID&nbsp;possible)<br />
	         <a style="display:inline;width:0;margin:0"
             href="issue29778?@action=oic_login&amp;provider=Google">
                  <img hspace="0" vspace="0" width="16"
                       height="16"
                       src="https://www.google.com/favicon.ico"
                       alt="Google" title="Google" /></a>
	         <a style="display:inline;width:0;margin:0"
             href="issue29778?@action=oic_login&amp;provider=GitHub">
                  <img hspace="0" vspace="0" width="16"
                       height="16"
                       src="https://www.github.com/favicon.ico"
                       alt="GitHub" title="GitHub" /></a>
	         <a style="display:inline;width:0;margin:0"
             href="issue29778?@action=openid_login&amp;provider=Launchpad">
                  <img hspace="0" vspace="0" width="16"
                       height="16"
                       src="https://launchpad.net/favicon.ico"
                       alt="Launchpad" title="Launchpad" /></a>
                <input size="10" name="openid_identifier" style="background:url(@@file/openid-16x16.gif)
                  center left no-repeat;padding-left:16px" /><br />
                <input size="10" type="password" name="__login_password" /><br />
                <input type="hidden" name="@action" value="Login" />
                <input type="checkbox" name="remember" id="remember" />
                <label for="remember">Remember me?</label><br />
                <input class="form-small" type="submit"
                       value="Login" /><br />
                <input type="hidden" name="__came_from"
                       value="https://bugs.python.org/issue29778?">
                
                <input type="hidden" name="@sort" value=""/>
<input type="hidden" name="@group" value=""/>
<input type="hidden" name="@pagesize" value="50"/>
<input type="hidden" name="@startwith" value="0"/>
            </li>
            <li>
                <a href="user?@template=register">Register</a>
            </li>
            <li><a href="user?@template=forgotten">Lost&nbsp;your&nbsp;login?</a></li>
          </ul>
          </form>
        </li>

        

        

        <li>
          <strong>Administration</strong>
          <ul class="level-three">
            
            <li>
                <a href="user?@sort=username">User List</a></li>
            <li>
                <a href="user?iscommitter=1&amp;@action=search&amp;@sort=username&amp;@pagesize=300">Committer List</a></li>
            
            
            
          </ul>
        </li>

        <li>
          <strong>Help</strong>
          <ul class="level-three">
            <li><a href="http://docs.python.org/devguide/triaging.html">
                Tracker Documentation</a></li>
            <li><a href="http://wiki.python.org/moin/TrackerDevelopment">
                Tracker Development</a></li>
            <li><a href="https://github.com/python/psf-infra-meta/issues">
                Report Tracker Problem</a></li>
          </ul>
        </li>

      </ul>
    </li>
  </ul>
</div> <!-- menu -->
</div> <!-- left-hand-navigation -->

<div id="content-body">
<div id="body-main">
<div id="content">
<div id="breadcrumb">
 
 
 Issue29778
 
</div>
 
 





<div>

<form method="post" name="itemSynopsis"
      onsubmit="return submit_once()"
      enctype="multipart/form-data" action="issue29778">

<fieldset><legend>classification</legend>
<table class="form">
<tr>
 <th class="required"><a href="http://docs.python.org/devguide/triaging.html#title" target="_blank">Title</a>:</th>
 
 <td colspan="3">
  <span>[CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath</span>
  <input type="hidden" name="title"
         value="[CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath">
 </td>
</tr>

<tr>
 <th class="required"><a href="http://docs.python.org/devguide/triaging.html#type" target="_blank">Type</a>:</th>
 <td>security</td>
 <th><a href="http://docs.python.org/devguide/triaging.html#stage" target="_blank">Stage</a>:</th>
 <td>resolved</td>
</tr>

<tr>
 <th><a href="http://docs.python.org/devguide/triaging.html#components" target="_blank">Components</a>:</th>
 <td>Windows</td>
 <th><a href="http://docs.python.org/devguide/triaging.html#versions" target="_blank">Versions</a>:</th>
 <td>Python 3.10, Python 3.9, Python 3.8, Python 3.7, Python 3.6, Python 3.5</td>
</tr>
</table>
</fieldset>

<fieldset><legend>process</legend>
<table class="form">
<tr>
  <th><a href="http://docs.python.org/devguide/triaging.html#status" target="_blank">Status</a>:</th>
  <td>closed</td>
  <th><a href="http://docs.python.org/devguide/triaging.html#resolution" target="_blank">Resolution</a>:</th>
  <td>fixed</td>
</tr>

<tr>
 <th>
    <a href="http://docs.python.org/devguide/triaging.html#dependencies"
       target="_blank">Dependencies</a>:
 </th>
 <td>
  
  
 </td>
 <th><a href="http://docs.python.org/devguide/triaging.html#superseder" target="_blank">Superseder</a>:</th>
 <td>
  
 
 </td>
 </tr>
 <tr>
 <th>
   <a href="http://docs.python.org/devguide/triaging.html#assigned-to"
      target="_blank">Assigned To</a>:
 </th>
 
 <td>
  steve.dower
 </td>
 <th>
   <a href="http://docs.python.org/devguide/triaging.html#nosy-list"
      target="_blank">Nosy List</a><!--
        <span tal:condition="context/nosy_count" tal:replace="python: ' (%d)' % context.nosy_count" /> -->:
 </th>
 <td>
     Tibor Csonka, anthonywee, eryksun, larry, lukasz.langa, miss-islington, ned.deily, paul.moore, steve.dower, tim.golden, vstinner, zach.ware
     
 </td>
</tr>
<tr>
 <th>
   <a href="http://docs.python.org/devguide/triaging.html#priority"
      target="_blank">Priority</a>:
 </th>
 <td>release blocker</td>
 <th>
    <a href="http://docs.python.org/devguide/triaging.html#keywords"
       target="_blank">Keywords</a>:
 </th>
 <td>patch</td>


</tr>









</table>
</fieldset>

</form>

<p>Created on <strong>2017-03-10 04:58</strong> by <strong>Tibor Csonka</strong>, last changed <strong>2020-08-04 02:16</strong> by <strong>larry</strong>. This issue is now <strong style="color:#00F; background-color:inherit;">closed</strong>.</p>



<table class="files">
 <tr><th class="header" colspan="4">Pull Requests</th></tr>
 <tr>
  <th>URL</th>
  <th>Status</th>
  <th>Linked</th>
  <th>Edit</th>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/17818" title="bpo-29778: Fix incorrect NULL check">PR 17818</a></td>
  <td>merged</td>
  <td>
   <span>anthonywee</span>,
   <span>2020-01-04 02:13</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/17871" title="[3.8] bpo-29778: Fix incorrect NULL check in _PyPathConfig_InitDLLPath() (GH-17818)">PR 17871</a></td>
  <td>merged</td>
  <td>
   <span>miss-islington</span>,
   <span>2020-01-06 16:59</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/21297" title="bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded">PR 21297</a></td>
  <td>merged</td>
  <td>
   <span>steve.dower</span>,
   <span>2020-07-03 17:48</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/21298" title="[3.7] bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded (GH-21297)">PR 21298</a></td>
  <td>merged</td>
  <td>
   <span>steve.dower</span>,
   <span>2020-07-03 19:54</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/21306" title="bpo-29778: test_embed tests the path configuration">PR 21306</a></td>
  <td>merged</td>
  <td>
   <span>vstinner</span>,
   <span>2020-07-03 23:04</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/21351" title="[3.9] bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded (GH-21297)">PR 21351</a></td>
  <td>merged</td>
  <td>
   <span>miss-islington</span>,
   <span>2020-07-06 16:32</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/21352" title="[3.8] bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded (GH-21297)">PR 21352</a></td>
  <td>merged</td>
  <td>
   <span>miss-islington</span>,
   <span>2020-07-06 16:32</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/21354" title="[3.6] bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded (GH-21298)">PR 21354</a></td>
  <td>merged</td>
  <td>
   <span>steve.dower</span>,
   <span>2020-07-06 18:35</span>
  </td>
  <td>
    
  </td>
 </tr>
 <tr>
  <td><a href="https://github.com/python/cpython/pull/21377" title="[3.5] bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded (GH-21297)">PR 21377</a></td>
  <td>merged</td>
  <td>
   <span>steve.dower</span>,
   <span>2020-07-07 17:07</span>
  </td>
  <td>
    
  </td>
 </tr>
</table>





<table class="messages">
 <tr><th colspan="4" class="header">Messages (37)</th></tr>
 
  <tr>
    <th>
     <a href="#msg289334" id="msg289334">msg289334</a> - <a
    href="msg289334">(view)</a></th>
   <th>Author: Tibor Csonka (Tibor Csonka)</th>
   <th>Date: 2017-03-10 04:58</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>When Py_SetPath is used to set up module path at initialization, the Py_SetPath causes getpathp.c::calculate_path not to be called. However, calculate path is the only function calling getpathp.c::get_progpath which initializes the local dllpath static variable.

Later the interpreter tries to load python3.dll and uses dllpath which is empty by default. This empty path gets joined with \python3.dll and \DLLs\python3.dll which is used in the LoadLibraryExW resulting in loading python3.dll from the root location of the windows drive the application is running from.

The behavior was reproduced using PyInstaller but it is present in any embedding application which uses Py_SetPath.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg289364" id="msg289364">msg289364</a> - <a
    href="msg289364">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2017-03-10 14:23</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I thought we'd documented that if you set the path when embedding you should also set the program name, but perhaps not (didn't check just now). If not, we should do that.

We shouldn't be loading python3.dll anywhere. Are you sure that's in CPython? Do you have a reference to the source file?</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg289412" id="msg289412">msg289412</a> - <a
    href="msg289412">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2017-03-10 21:50</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Ah, I see. We force load it in <a href="https://github.com/python/cpython/blob/master/PC/getpathp.c">PC/getpathp.c</a> to ensure that it's ours and not another version's python3.dll.

We should probably refactor the GetModuleFileNameW call into its own function so we can call it from anywhere we need.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg343638" id="msg343638">msg343638</a> - <a
    href="msg343638">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2019-05-27 15:11</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>&gt; When Py_SetPath is used to set up module path at initialization, the Py_SetPath causes getpathp.c::calculate_path not to be called. However, calculate path is the only function calling getpathp.c::get_progpath which initializes the local dllpath static variable.

I fixed this issue in Python 3.8 with this commit:

commit <a href="https://hg.python.org/lookup/410759fba80aded5247b693c60745aa16906f3bb">410759fba80aded5247b693c60745aa16906f3bb</a>
Author: Victor Stinner &lt;<a href="mailto:vstinner@redhat.com">vstinner@redhat.com</a>&gt;
Date:   Sat May 18 04:17:01 2019 +0200

    <a class="closed" title="[closed] Implementation of the PEP 587" href="issue36763">bpo-36763</a>: Remove _PyCoreConfig.dll_path (<a href="https://github.com/python/cpython/pull/13402" class="closed" title="GitHub PR 13402: [merged] bpo-36763: Remove _PyCoreConfig.dll_path">GH-13402</a>)

I modified Py_SetPath() like that:

-    new_config.dll_path = _PyMem_RawWcsdup(L"");
+    new_config.dll_path = _Py_GetDLLPath();

Py_SetPath() no longer sets dll_path to an empty string.

Since we only got one bug report and I believe that Tibor Csonka found a way to workaround the issue since he reported it, I close the issue.

Please reopen/comment the issue if you would like to get this issue fixed in Python 3.7 as well.

--

Moreover, the <a href="https://www.python.org/dev/peps/pep-0587/">PEP 587</a> now has a better API to configure embedded Python. I just implemented this PEP in <a class="closed" title="[closed] Implementation of the PEP 587" href="issue36763">bpo-36763</a>.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg359136" id="msg359136">msg359136</a> - <a
    href="msg359136">(view)</a></th>
   <th>Author: Anthony Wee (anthonywee) <span title="Contributor form received">*</span></th>
   <th>Date: 2020-01-01 00:00</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>It looks like there has been a regression in the fix for this issue. 

The commit below introduced a NULL check which causes a call to _PyPathConfig_Init() to be skipped if _Py_dll_path == NULL. It seems like the check should be "if (_Py_dll_path != NULL)"?

<a href="https://github.com/python/cpython/commit/c422167749f92d4170203e996a2c619c818335ea#diff-87aed37b4704d4e1513be6378c9c7fe6R169">https://github.com/python/cpython/commit/c422167749f92d4170203e996a2c619c818335ea#diff-87aed37b4704d4e1513be6378c9c7fe6R169</a></pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg359245" id="msg359245">msg359245</a> - <a
    href="msg359245">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-01-03 18:33</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>&gt; It looks like there has been a regression in the fix for this issue.

You're right. Care to create a pull request to fix it?</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg359438" id="msg359438">msg359438</a> - <a
    href="msg359438">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-01-06 16:57</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/7b79dc9200a19ecbac667111dffd58e314be02a8">7b79dc9200a19ecbac667111dffd58e314be02a8</a> by Steve Dower (Anthony Wee) in branch 'master':
<a class="closed" title="[closed] [CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath" href="issue29778">bpo-29778</a>: Fix incorrect NULL check in _PyPathConfig_InitDLLPath() (<a href="https://github.com/python/cpython/pull/17818" class="closed" title="GitHub PR 17818: [merged] bpo-29778: Fix incorrect NULL check">GH-17818</a>)
<a href="https://github.com/python/cpython/commit/7b79dc9200a19ecbac667111dffd58e314be02a8">https://github.com/python/cpython/commit/7b79dc9200a19ecbac667111dffd58e314be02a8</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg359439" id="msg359439">msg359439</a> - <a
    href="msg359439">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-01-06 16:58</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Thanks, Anthony! And congratulations on becoming a CPython contributor!</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg359440" id="msg359440">msg359440</a> - <a
    href="msg359440">(view)</a></th>
   <th>Author: miss-islington (miss-islington)</th>
   <th>Date: 2020-01-06 17:17</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/a9a43c221bf3896ed1d1c2eee2531b7121cf78e4">a9a43c221bf3896ed1d1c2eee2531b7121cf78e4</a> by Miss Islington (bot) in branch '3.8':
<a class="closed" title="[closed] [CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath" href="issue29778">bpo-29778</a>: Fix incorrect NULL check in _PyPathConfig_InitDLLPath() (<a href="https://github.com/python/cpython/pull/17818" class="closed" title="GitHub PR 17818: [merged] bpo-29778: Fix incorrect NULL check">GH-17818</a>)
<a href="https://github.com/python/cpython/commit/a9a43c221bf3896ed1d1c2eee2531b7121cf78e4">https://github.com/python/cpython/commit/a9a43c221bf3896ed1d1c2eee2531b7121cf78e4</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg359441" id="msg359441">msg359441</a> - <a
    href="msg359441">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-01-06 17:22</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Oops, I'm guilty of pushing this change! Sorry &amp; thanks for the fix.

    if (_Py_dll_path == NULL) {
        /* Already set: nothing to do */
        return _PyStatus_OK();
    }</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg359498" id="msg359498">msg359498</a> - <a
    href="msg359498">(view)</a></th>
   <th>Author: Anthony Wee (anthonywee) <span title="Contributor form received">*</span></th>
   <th>Date: 2020-01-07 09:01</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Thank you Steve!

I'm still seeing python3.dll being loaded from \DLLs\python3.dll.

_Py_CheckPython3() uses Py_GetPrefix() as a prefix for \DLLs\python3.dll.

It looks like Py_SetPath() sets the _Py_path_config.prefix to "", but I'm not seeing anything else set it to a real value?

<a href="https://github.com/python/cpython/blob/7b79dc9200a19ecbac667111dffd58e314be02a8/Python/pathconfig.c#L508">https://github.com/python/cpython/blob/7b79dc9200a19ecbac667111dffd58e314be02a8/Python/pathconfig.c#L508</a></pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg359544" id="msg359544">msg359544</a> - <a
    href="msg359544">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-01-07 20:56</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>&gt; It looks like Py_SetPath() sets the _Py_path_config.prefix to "", but I'm not seeing anything else set it to a real value?

In the master branch, _Py_CheckPython3() doesn't use _Py_path_config.prefix.

_PyPathConfig_InitDLLPath() calls GetModuleFileNameW(PyWin_DLLhModule, dll_path, MAXPATHLEN) if PyWin_DLLhModule is initialized.

For example, _PyPathConfig_InitDLLPath() is called by Py_Initialize() and Py_SetPath().

PyWin_DLLhModule is initialized by DllMain().

The code in the 3.8 branch looks very similar (I backported my "Remove _PyPathConfig.dll_path" change to 3.8: commit <a href="https://hg.python.org/lookup/9f3dcf802eefeb5ab821ce3c7204ab46557d53d7">9f3dcf802eefeb5ab821ce3c7204ab46557d53d7</a>).</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg359549" id="msg359549">msg359549</a> - <a
    href="msg359549">(view)</a></th>
   <th>Author: Anthony Wee (anthonywee) <span title="Contributor form received">*</span></th>
   <th>Date: 2020-01-07 21:22</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Hm, I'm seeing _Py_CheckPython3() use Py_GetPrefix(), which uses _Py_path_config.prefix?

<a href="https://github.com/python/cpython/blob/c02b41b1fb115c87693530ea6a480b2e15460424/PC/getpathp.c#L1185">https://github.com/python/cpython/blob/c02b41b1fb115c87693530ea6a480b2e15460424/PC/getpathp.c#L1185</a></pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg359550" id="msg359550">msg359550</a> - <a
    href="msg359550">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-01-07 21:29</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>&gt; Hm, I'm seeing _Py_CheckPython3() use Py_GetPrefix(), which uses _Py_path_config.prefix?

Oh right, that's the initial issue:

&gt; Later the interpreter tries to load python3.dll and uses dllpath which is empty by default. This empty path gets joined with \python3.dll and \DLLs\python3.dll which is used in the LoadLibraryExW resulting in loading python3.dll from the root location of the windows drive the application is running from.

I reopen the issue.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg372555" id="msg372555">msg372555</a> - <a
    href="msg372555">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-06-29 09:05</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>_Py_CheckPython3() tries to load "python3.dll" from two directories:

* first one based on _Py_dll_path
* second one based on Py_GetPrefix()

I understand that LoadLibraryExW() must not be attempted if _Py_dll_path is empty, or if Py_GetPrefix() is empty. Am I right?</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg372556" id="msg372556">msg372556</a> - <a
    href="msg372556">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-06-29 09:09</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I understand that Python 3.5, 3.6 and 3.7 are also affected. It's not a regression.

On Python 3.5, 3.6 and 3.7, when Py_SetPath(path) is called, Py_GetPrefix() also returns an empty path. So at least the directory based on Py_GetPrefix() should also be skipped on Python 3.5-3.7 if Py_GetPrefix() is empty, right?</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg372595" id="msg372595">msg372595</a> - <a
    href="msg372595">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-06-29 15:56</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>&gt; I understand that LoadLibraryExW() must not be attempted if _Py_dll_path is empty, or if Py_GetPrefix() is empty. Am I right?

More likely those should never be empty. Perhaps sys.prefix is optional, but the DLL path is the current executing module, and should always be set.

I suspect you're right, that 3.7 is also affected. But earlier versions would only _not_ fill the DLL path for static (non-shared) builds.

It looks like Py_SetPath in 3.7 started clearing it unnecessarily, so that may be the cause.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg372596" id="msg372596">msg372596</a> - <a
    href="msg372596">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-06-29 16:02</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Sorry, I take that back. Earlier versions would indeed skip initialization in some cases.

I propose we deprecate the dll_path field in PathConfig and just get the path directly in the three places it's necessary. The path calculations have security exposure, so let's just avoid trying to manage additional state around it unnecessarily.

I'll work on a patch this week unless someone else gets to it first.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg372961" id="msg372961">msg372961</a> - <a
    href="msg372961">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-03 21:24</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Bumping to release blocker and adding RMs. Should definitely get this fix merged within the next week, and I don't want the next round of releases to go out without it.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373138" id="msg373138">msg373138</a> - <a
    href="msg373138">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-06 16:32</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/dcbaa1b49cd9062fb9ba2b9d49555ac6cd8c60b5">dcbaa1b49cd9062fb9ba2b9d49555ac6cd8c60b5</a> by Steve Dower in branch 'master':
<a class="closed" title="[closed] [CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath" href="issue29778">bpo-29778</a>: Ensure python3.dll is loaded from correct locations when Python is embedded (<a href="https://github.com/python/cpython/pull/21297" class="closed" title="GitHub PR 21297: [merged] bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded">GH-21297</a>)
<a href="https://github.com/python/cpython/commit/dcbaa1b49cd9062fb9ba2b9d49555ac6cd8c60b5">https://github.com/python/cpython/commit/dcbaa1b49cd9062fb9ba2b9d49555ac6cd8c60b5</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373142" id="msg373142">msg373142</a> - <a
    href="msg373142">(view)</a></th>
   <th>Author: miss-islington (miss-islington)</th>
   <th>Date: 2020-07-06 16:52</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/4981fe36c7477303de830e8dca929a02caaaffe4">4981fe36c7477303de830e8dca929a02caaaffe4</a> by Miss Islington (bot) in branch '3.9':
<a class="closed" title="[closed] [CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath" href="issue29778">bpo-29778</a>: Ensure python3.dll is loaded from correct locations when Python is embedded (<a href="https://github.com/python/cpython/pull/21297" class="closed" title="GitHub PR 21297: [merged] bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded">GH-21297</a>)
<a href="https://github.com/python/cpython/commit/4981fe36c7477303de830e8dca929a02caaaffe4">https://github.com/python/cpython/commit/4981fe36c7477303de830e8dca929a02caaaffe4</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373147" id="msg373147">msg373147</a> - <a
    href="msg373147">(view)</a></th>
   <th>Author: Łukasz Langa (lukasz.langa) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-06 17:12</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/aa7f7756149a10c64d01f583b71e91814db886ab">aa7f7756149a10c64d01f583b71e91814db886ab</a> by Miss Islington (bot) in branch '3.8':
<a class="closed" title="[closed] [CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath" href="issue29778">bpo-29778</a>: Ensure python3.dll is loaded from correct locations when Python is embedded (<a href="https://github.com/python/cpython/pull/21297" class="closed" title="GitHub PR 21297: [merged] bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded">GH-21297</a>) (<a href="https://github.com/python/cpython/pull/21352" class="closed" title="GitHub PR 21352: [merged] [3.8] bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded (GH-21297)">GH-21352</a>)
<a href="https://github.com/python/cpython/commit/aa7f7756149a10c64d01f583b71e91814db886ab">https://github.com/python/cpython/commit/aa7f7756149a10c64d01f583b71e91814db886ab</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373150" id="msg373150">msg373150</a> - <a
    href="msg373150">(view)</a></th>
   <th>Author: Ned Deily (ned.deily) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-06 17:25</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/110dd153662a13b8ae1bb06348e5b1f118ab26d7">110dd153662a13b8ae1bb06348e5b1f118ab26d7</a> by Steve Dower in branch '3.7':
[3.7] <a class="closed" title="[closed] [CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath" href="issue29778">bpo-29778</a>: Ensure python3.dll is loaded from correct locations when Python is embedded (<a href="https://github.com/python/cpython/pull/21297" class="closed" title="GitHub PR 21297: [merged] bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded">GH-21297</a>) (<a class="closed" title="[closed] Cheese shop registration stopped working for me recently" href="issue21298">#21298</a>)
<a href="https://github.com/python/cpython/commit/110dd153662a13b8ae1bb06348e5b1f118ab26d7">https://github.com/python/cpython/commit/110dd153662a13b8ae1bb06348e5b1f118ab26d7</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373155" id="msg373155">msg373155</a> - <a
    href="msg373155">(view)</a></th>
   <th>Author: Ned Deily (ned.deily) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-06 18:55</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/46cbf6148a46883110883488d3e9febbe46ba861">46cbf6148a46883110883488d3e9febbe46ba861</a> by Steve Dower in branch '3.6':
[3.6] <a class="closed" title="[closed] [CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath" href="issue29778">bpo-29778</a>: Ensure python3.dll is loaded from correct locations when Python is embedded (<a href="https://github.com/python/cpython/pull/21298" class="closed" title="GitHub PR 21298: [merged] [3.7] bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded (GH-21297)">GH-21298</a>) (<a class="closed" title="[closed] PyCFunction_New no longer exposed by python DLL breaking bdist_wininst installers" href="issue21354">#21354</a>)
<a href="https://github.com/python/cpython/commit/46cbf6148a46883110883488d3e9febbe46ba861">https://github.com/python/cpython/commit/46cbf6148a46883110883488d3e9febbe46ba861</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373156" id="msg373156">msg373156</a> - <a
    href="msg373156">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-06 18:57</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Fixes are in. Also adding the CVE number to the bug title.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373164" id="msg373164">msg373164</a> - <a
    href="msg373164">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-06 19:46</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Announcement post: <a href="https://mail.python.org/archives/list/security-announce@python.org/thread/C5RIXC2ZIML3NOEIOGFPA6ISGU5L2QXL/">https://mail.python.org/archives/list/security-announce@python.org/thread/C5RIXC2ZIML3NOEIOGFPA6ISGU5L2QXL/</a>

CVE-2020-15523 is an invalid search path in Python 3.6 and later on 
Windows. It occurs during Py_Initialize() when the runtime attempts to 
pre-load python3.dll. If Py_SetPath() has been called, the expected 
location is not set, and locations elsewhere on the user's system will 
be searched.

This issue is not triggered when running python.exe. It only applies 
when CPython has been embedded in another application.

Issue: <a href="https://bugs.python.org/issue29778">https://bugs.python.org/issue29778</a>
Patch: <a href="https://github.com/python/cpython/pull/21297">https://github.com/python/cpython/pull/21297</a>

The next patched releases will be: 3.9.0b5, 3.8.4, 3.7.9 (source only), 
3.6.12 (source only)

Other than applying the patch, applications may mitigate the 
vulnerability by explicitly calling LoadLibrary() on their copy of 
python3.dll before calling Py_Initialize(). Even with the patch applied, 
applications should include a copy of python3.dll alongside their main 
Python DLL.

Thanks to Eric Gantumur for detecting and reporting the issue to the 
Python Security Response Team.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373213" id="msg373213">msg373213</a> - <a
    href="msg373213">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-07 09:31</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>FYI this vulnerability is now tracked by:
<a href="https://python-security.readthedocs.io/vuln/pysetpath-python-dll-path.html">https://python-security.readthedocs.io/vuln/pysetpath-python-dll-path.html</a></pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373214" id="msg373214">msg373214</a> - <a
    href="msg373214">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-07 09:33</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Steve: Python 3.5 is also vulnerable, no? This branch still gets security fixes, do you plan to backport the fix? I can do it if you are not available.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373228" id="msg373228">msg373228</a> - <a
    href="msg373228">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-07 16:08</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>&gt; Python 3.5 is also vulnerable, no? This branch still gets security fixes, do you plan to backport the fix?

You're right. I thought because the backport tag was gone on GitHub that it was EOL already.

I can do the backport.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373257" id="msg373257">msg373257</a> - <a
    href="msg373257">(view)</a></th>
   <th>Author: STINNER Victor (vstinner) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-07 22:20</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/8f42748ded5e978fe8a924115179d45a74a6363b">8f42748ded5e978fe8a924115179d45a74a6363b</a> by Victor Stinner in branch 'master':
<a class="closed" title="[closed] [CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath" href="issue29778">bpo-29778</a>: test_embed tests the path configuration (<a href="https://github.com/python/cpython/pull/21306" class="closed" title="GitHub PR 21306: [merged] bpo-29778: test_embed tests the path configuration">GH-21306</a>)
<a href="https://github.com/python/cpython/commit/8f42748ded5e978fe8a924115179d45a74a6363b">https://github.com/python/cpython/commit/8f42748ded5e978fe8a924115179d45a74a6363b</a>
</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373618" id="msg373618">msg373618</a> - <a
    href="msg373618">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-13 18:20</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>Correction: the original discovery credit goes to Eran Shimony &lt;<a href="mailto:Eran.Shimony@cyberark.com">Eran.Shimony@cyberark.com</a>&gt; and Ido Hoorvitch  &lt;<a href="mailto:Ido.Hoorvitch@cyberark.com">Ido.Hoorvitch@cyberark.com</a>&gt; from CyberArk.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373757" id="msg373757">msg373757</a> - <a
    href="msg373757">(view)</a></th>
   <th>Author: Steve Dower (steve.dower) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-16 17:08</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>FYI, <a class="closed" title="[closed] [CVE-2020-15801] python 38 embed ignore python38._pth file on windows" href="issue41304">issue41304</a> fixed a regression in this patch in 3.7 and later. The regression shipped in 3.8.4 and 3.9.0b4, but will be fixed in the subsequent releases.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373789" id="msg373789">msg373789</a> - <a
    href="msg373789">(view)</a></th>
   <th>Author: Larry Hastings (larry) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-17 01:54</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I must have taken my stupid pills today.  Why is this considered a "security" "release blocker"?  If you can put files in the root of the hard drive where Windows was installed, surely you have other, easier attack vectors.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg373919" id="msg373919">msg373919</a> - <a
    href="msg373919">(view)</a></th>
   <th>Author: Eryk Sun (eryksun) <span title="Contributor form received">*</span> <img src="@@file/triager.png" title="Python triager" alt="(Python triager)" /></th>
   <th>Date: 2020-07-18 21:01</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>&gt; If you can put files in the root of the hard drive where Windows was
&gt; installed, surely you have other, easier attack vectors.

A rooted path is resolved relative to the process working directory, and Python can be started with any current working directory. 

The default access control set on the root directory of a filesystem allows any authenticated user to create files or directories, such as "D:\python3.dll". That's if a filesystem even supports security. Removable drives are often formatted as FAT32 or exFAT, and FAT filesystems have no security.

The system drive (almost always "C:") has to be an NTFS filesystem, and its root directory is locked down a bit more. It's at high integrity level with a no-write-up rule for files, but not for directories. Only a logon at elevated integrity level (high or system level) can create "C:\python3.dll". OTOH, any authenticated user is still allowed to create a directory, such as "C:\DLLs", and is granted the right to create files in it such as "C:\DLLs\python3.dll".</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg374024" id="msg374024">msg374024</a> - <a
    href="msg374024">(view)</a></th>
   <th>Author: Larry Hastings (larry) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-07-20 20:18</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>I still don't understand why this is considered a Python security problem.  If the user can put a malicious "python3.dll" at some arbitrary spot in the filesystem (e.g. a USB flash drive), and fool Python.exe into loading it, then surely they could put an arbitrary executable at that same spot and launch it directly.  And that seems way more straightforward.  Why would anyone bother with this?</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg374029" id="msg374029">msg374029</a> - <a
    href="msg374029">(view)</a></th>
   <th>Author: Eryk Sun (eryksun) <span title="Contributor form received">*</span> <img src="@@file/triager.png" title="Python triager" alt="(Python triager)" /></th>
   <th>Date: 2020-07-20 21:27</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>&gt; I still don't understand why this is considered a Python security problem.
&gt; If the user can put a malicious "python3.dll" at some arbitrary spot in 
&gt; the filesystem (e.g. a USB flash drive), and fool Python.exe into loading
&gt; it, then surely they could put an arbitrary executable at that same spot 
&gt; and launch it directly.

What would be the point of adding an arbitrary executable in "C:\spam" or "D:\"? It's not in the system PATH, "App Paths", or any file-association template command. But if you can inject code into vulnerable processes that embed Python by simply creating "C:\DLLs\python3.dll", that seems like low-hanging fruit to me. Just wait for it to be run with administrator access, and then you can own the entire system.</pre>
   </td>
  </tr>
 
 
  <tr>
    <th>
     <a href="#msg374785" id="msg374785">msg374785</a> - <a
    href="msg374785">(view)</a></th>
   <th>Author: Larry Hastings (larry) <span title="Contributor form received">*</span> <img src="@@file/committer.png" title="Python committer" alt="(Python committer)" /></th>
   <th>Date: 2020-08-04 02:16</th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    
    <pre>
New changeset <a href="https://hg.python.org/lookup/f205f1000a2d7f8b044caf281041b3705f293480">f205f1000a2d7f8b044caf281041b3705f293480</a> by Steve Dower in branch '3.5':
[3.5] <a class="closed" title="[closed] [CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath" href="issue29778">bpo-29778</a>: Ensure python3.dll is loaded from correct locations when Python is embedded (<a href="https://github.com/python/cpython/pull/21297" class="closed" title="GitHub PR 21297: [merged] bpo-29778: Ensure python3.dll is loaded from correct locations when Python is embedded">GH-21297</a>) (<a class="closed" title="[closed] PyBytes_Concat could try to concat in-place" href="issue21377">#21377</a>)
<a href="https://github.com/python/cpython/commit/f205f1000a2d7f8b044caf281041b3705f293480">https://github.com/python/cpython/commit/f205f1000a2d7f8b044caf281041b3705f293480</a>
</pre>
   </td>
  </tr>
 
</table>

<table class="history table table-condensed table-striped"><tr><th colspan="4" class="header">
History
</th></tr><tr>
<th>Date</th>
<th>User</th>
<th>Action</th>
<th>Args</th>
</tr>
<tr><td>2020-08-04&nbsp;02:16:28</td><td>larry</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg374785">msg374785</a></td></tr>
<tr><td>2020-07-20&nbsp;21:27:31</td><td>eryksun</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg374029">msg374029</a></td></tr>
<tr><td>2020-07-20&nbsp;20:18:22</td><td>larry</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg374024">msg374024</a></td></tr>
<tr><td>2020-07-18&nbsp;21:01:03</td><td>eryksun</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user16413">eryksun</a><br />messages:
  + <a rel="nofollow" href="msg373919">msg373919</a><br /></td></tr>
<tr><td>2020-07-17&nbsp;01:54:45</td><td>larry</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg373789">msg373789</a></td></tr>
<tr><td>2020-07-16&nbsp;17:08:49</td><td>steve.dower</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg373757">msg373757</a></td></tr>
<tr><td>2020-07-13&nbsp;18:20:13</td><td>steve.dower</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg373618">msg373618</a></td></tr>
<tr><td>2020-07-07&nbsp;22:20:44</td><td>vstinner</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg373257">msg373257</a></td></tr>
<tr><td>2020-07-07&nbsp;17:07:31</td><td>steve.dower</td><td>set</td><td>pull_requests:
  + <a rel="nofollow" href="pull_request20520">pull_request20520</a></td></tr>
<tr><td>2020-07-07&nbsp;16:08:25</td><td>steve.dower</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user2731">larry</a><br /><br />messages:
  + <a rel="nofollow" href="msg373228">msg373228</a><br />versions:
  + Python 3.5</td></tr>
<tr><td>2020-07-07&nbsp;09:33:05</td><td>vstinner</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg373214">msg373214</a></td></tr>
<tr><td>2020-07-07&nbsp;09:31:32</td><td>vstinner</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg373213">msg373213</a></td></tr>
<tr><td>2020-07-06&nbsp;19:46:06</td><td>steve.dower</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg373164">msg373164</a></td></tr>
<tr><td>2020-07-06&nbsp;18:57:21</td><td>steve.dower</td><td>set</td><td>status: open -> closed<br />title: _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath -> [CVE-2020-15523] _Py_CheckPython3 uses uninitialized dllpath when embedder sets module path with Py_SetPath<br />messages:
  + <a rel="nofollow" href="msg373156">msg373156</a><br /><br />resolution: fixed<br />stage: patch review -> resolved</td></tr>
<tr><td>2020-07-06&nbsp;18:55:47</td><td>ned.deily</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg373155">msg373155</a></td></tr>
<tr><td>2020-07-06&nbsp;18:35:29</td><td>steve.dower</td><td>set</td><td>pull_requests:
  + <a rel="nofollow" href="pull_request20500">pull_request20500</a></td></tr>
<tr><td>2020-07-06&nbsp;17:25:03</td><td>ned.deily</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg373150">msg373150</a></td></tr>
<tr><td>2020-07-06&nbsp;17:12:23</td><td>lukasz.langa</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg373147">msg373147</a></td></tr>
<tr><td>2020-07-06&nbsp;16:52:17</td><td>miss-islington</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg373142">msg373142</a></td></tr>
<tr><td>2020-07-06&nbsp;16:32:23</td><td>miss-islington</td><td>set</td><td>pull_requests:
  + <a rel="nofollow" href="pull_request20498">pull_request20498</a></td></tr>
<tr><td>2020-07-06&nbsp;16:32:15</td><td>miss-islington</td><td>set</td><td>pull_requests:
  + <a rel="nofollow" href="pull_request20497">pull_request20497</a></td></tr>
<tr><td>2020-07-06&nbsp;16:32:03</td><td>steve.dower</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg373138">msg373138</a></td></tr>
<tr><td>2020-07-03&nbsp;23:04:47</td><td>vstinner</td><td>set</td><td>pull_requests:
  + <a rel="nofollow" href="pull_request20458">pull_request20458</a></td></tr>
<tr><td>2020-07-03&nbsp;22:34:38</td><td>steve.dower</td><td>set</td><td>pull_requests:
  - <a rel="nofollow" href="pull_request20454">pull_request20454</a></td></tr>
<tr><td>2020-07-03&nbsp;22:33:21</td><td>steve.dower</td><td>set</td><td>pull_requests:
  + <a rel="nofollow" href="pull_request20454">pull_request20454</a></td></tr>
<tr><td>2020-07-03&nbsp;21:24:37</td><td>steve.dower</td><td>set</td><td>priority: normal -> release blocker<br />versions:
  - Python 3.5<br />nosy:
  + <a rel="nofollow" href="user5248">ned.deily</a>, <a rel="nofollow" href="user12704">lukasz.langa</a><br /><br />messages:
  + <a rel="nofollow" href="msg372961">msg372961</a><br /></td></tr>
<tr><td>2020-07-03&nbsp;19:54:50</td><td>steve.dower</td><td>set</td><td>pull_requests:
  + <a rel="nofollow" href="pull_request20447">pull_request20447</a></td></tr>
<tr><td>2020-07-03&nbsp;17:48:30</td><td>steve.dower</td><td>set</td><td>keywords:
  + <a rel="nofollow" href="keyword2">patch</a><br />stage: needs patch -> patch review<br />pull_requests:
  + <a rel="nofollow" href="pull_request20446">pull_request20446</a></td></tr>
<tr><td>2020-07-03&nbsp;16:08:24</td><td>steve.dower</td><td>set</td><td>assignee: <a rel="nofollow" href="user16632">steve.dower</a></td></tr>
<tr><td>2020-06-29&nbsp;16:02:57</td><td>steve.dower</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg372596">msg372596</a></td></tr>
<tr><td>2020-06-29&nbsp;15:56:29</td><td>steve.dower</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg372595">msg372595</a><br />stage: resolved -> needs patch</td></tr>
<tr><td>2020-06-29&nbsp;09:09:59</td><td>vstinner</td><td>set</td><td>type: behavior -> security<br />messages:
  + <a rel="nofollow" href="msg372556">msg372556</a><br />versions:
  + Python 3.5, Python 3.6, Python 3.7, Python 3.10</td></tr>
<tr><td>2020-06-29&nbsp;09:05:57</td><td>vstinner</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg372555">msg372555</a></td></tr>
<tr><td>2020-01-07&nbsp;21:29:23</td><td>vstinner</td><td>set</td><td>status: closed -> open<br />resolution: fixed -> (no value)<br />messages:
  + <a rel="nofollow" href="msg359550">msg359550</a><br /></td></tr>
<tr><td>2020-01-07&nbsp;21:22:58</td><td>anthonywee</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg359549">msg359549</a></td></tr>
<tr><td>2020-01-07&nbsp;20:56:18</td><td>vstinner</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg359544">msg359544</a></td></tr>
<tr><td>2020-01-07&nbsp;09:01:14</td><td>anthonywee</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg359498">msg359498</a></td></tr>
<tr><td>2020-01-06&nbsp;17:22:26</td><td>vstinner</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg359441">msg359441</a></td></tr>
<tr><td>2020-01-06&nbsp;17:17:43</td><td>miss-islington</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user27838">miss-islington</a><br />messages:
  + <a rel="nofollow" href="msg359440">msg359440</a><br /></td></tr>
<tr><td>2020-01-06&nbsp;16:59:02</td><td>miss-islington</td><td>set</td><td>pull_requests:
  + <a rel="nofollow" href="pull_request17287">pull_request17287</a></td></tr>
<tr><td>2020-01-06&nbsp;16:58:32</td><td>steve.dower</td><td>set</td><td>versions:
  + Python 3.9</td></tr>
<tr><td>2020-01-06&nbsp;16:58:20</td><td>steve.dower</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg359439">msg359439</a></td></tr>
<tr><td>2020-01-06&nbsp;16:57:38</td><td>steve.dower</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg359438">msg359438</a></td></tr>
<tr><td>2020-01-04&nbsp;02:13:52</td><td>anthonywee</td><td>set</td><td>pull_requests:
  + <a rel="nofollow" href="pull_request17244">pull_request17244</a></td></tr>
<tr><td>2020-01-03&nbsp;18:33:45</td><td>steve.dower</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg359245">msg359245</a></td></tr>
<tr><td>2020-01-01&nbsp;00:00:46</td><td>anthonywee</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user33193">anthonywee</a><br />messages:
  + <a rel="nofollow" href="msg359136">msg359136</a><br /></td></tr>
<tr><td>2019-05-27&nbsp;15:11:15</td><td>vstinner</td><td>set</td><td>status: open -> closed<br />stage: needs patch -> resolved<br />resolution: fixed<br />versions:
  + Python 3.8, - Python 3.5, Python 3.6, Python 3.7</td></tr>
<tr><td>2019-05-27&nbsp;15:11:06</td><td>vstinner</td><td>set</td><td>nosy:
  + <a rel="nofollow" href="user2377">vstinner</a><br />messages:
  + <a rel="nofollow" href="msg343638">msg343638</a><br /></td></tr>
<tr><td>2017-03-10&nbsp;21:50:35</td><td>steve.dower</td><td>set</td><td>stage: needs patch<br />type: behavior<br />versions:
  + Python 3.6, Python 3.7</td></tr>
<tr><td>2017-03-10&nbsp;21:50:21</td><td>steve.dower</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg289412">msg289412</a></td></tr>
<tr><td>2017-03-10&nbsp;14:23:36</td><td>steve.dower</td><td>set</td><td>messages:
  + <a rel="nofollow" href="msg289364">msg289364</a></td></tr>
<tr><td>2017-03-10&nbsp;04:58:18</td><td>Tibor Csonka</td><td>create</td><td></td></tr>
</table>

</div>


</div> <!-- content-body -->
<div id="footer">
<div id="credits">
  Hosted on <a href="https://m.do.co/c/783434964889" title="Hosted on DigitalOcean">DigitalOcean</a>,
  <br>
  Supported by <a href="https://python.org/psf-landing/" title="The Python Software Foundation">The Python Software Foundation</a>,
  <br>
  Powered by <a href="http://roundup.sourceforge.net" title="Powered by the Roundup Issue Tracker">Roundup</a>
</div> <!-- credits -->
Copyright &copy; 1990-2020, <a href="http://python.org/psf">Python Software Foundation</a><br />
<a href="http://python.org/about/legal">Legal Statements</a>
</div> <!-- footer -->
</div> <!-- body-main -->
</div> <!-- content -->



</body>
</html>

