<!DOCTYPE html>
<html lang="en">
  <head>
      <meta charset="UTF-8">

      <meta name="referrer" content="origin">
<script type="text/javascript" src="page.cgi?1635552585&amp;id=bayotbase/fielddefs.js"></script>




<script type="text/javascript">var BB_CONFIG = ({"user":{"groups":[],"logged_in":false,"enterable_products":[]},"defaults":{"severity":"Unspecified","op_sys":"Unspecified","bugentry_fields":["summary","product","component","rh_sub_components","severity","priority","comment"],"platform":"Unspecified","priority":"Unspecified"}});</script><script type="text/javascript">
var classifications = '[ { "name": "Red Hat", "description": "Red Hat Products"},{ "name": "Workflows", "description": "User driven workflows"},{ "name": "JBoss", "description": "JBoss Products"},{ "name": "CentOS", "description": "CentOS Projects"},{ "name": "Fedora", "description": "Fedora Products"},{ "name": "Community", "description": "Community Projects"},{ "name": "oVirt", "description": "oVirt Virtualization Management Projects"},{ "name": "Internal", "description": "Internal Projects."},{ "name": "Other", "description": "Other Miscellaneous Products"},{ "name": "Unclassified", "description": "Not assigned to any classification"},{ "name": "Retired", "description": "Products that have reached end of life, or were never released."} ]';
var c_optgroups = JSON.parse(classifications);
</script>
    <title>962792 &ndash; (CVE-2013-2094) CVE-2013-2094 kernel: perf_swevent_enabled array out-of-bound access</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="js/yui/assets/skins/sam/autocomplete.css" rel="stylesheet" type="text/css"><link href="js/yui/assets/skins/sam/calendar.css" rel="stylesheet" type="text/css"><link href="skins/standard/global.css" rel="stylesheet" type="text/css"><link href="extensions/BayotBase/web/css/base.css" rel="stylesheet" type="text/css"><link href="extensions/BayotBase/web/jquery-ui-1.12.1.custom/jquery-ui.min.css" rel="stylesheet" type="text/css"><link href="skins/standard/bug.css" rel="stylesheet" type="text/css"><link href="extensions/Voting/web/style.css" rel="stylesheet" type="text/css"><link href="extensions/ExternalBugs/web/css/global.css" rel="stylesheet" type="text/css"><link href="extensions/FontAwesome/web/css/all.min.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/css/redhat.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/DataTables/datatables.min.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/alertify/css/alertify.min.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/alertify/css/themes/bootstrap.min.css" rel="stylesheet" type="text/css"><link href="extensions/SelectizeJS/web/css/selectize.bootstrap3.css" rel="stylesheet" type="text/css"><link href="extensions/SelectizeJS/web/css/SelectizeJS.css" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="js/yui/yahoo-dom-event/yahoo-dom-event.js"></script><script type="text/javascript" src="js/yui/cookie/cookie-min.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/jquery-3.6.0.min.js"></script><script type="text/javascript" src="extensions/BayotBase/web/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/jquery.cookie.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/jquery.jsonrpc.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/Base.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/bayot.util.js"></script><script type="text/javascript" src="js/yui/datasource/datasource-min.js"></script><script type="text/javascript" src="js/yui/connection/connection-min.js"></script><script type="text/javascript" src="js/yui/json/json-min.js"></script><script type="text/javascript" src="js/yui/autocomplete/autocomplete-min.js"></script><script type="text/javascript" src="js/yui/calendar/calendar-min.js"></script><script type="text/javascript" src="js/global.js"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 5,
                maxattachmentsize: 20000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug.",
                group_required:
                    "You must select at least one group for bugs in this product."
            }
            
              , api_token: ''
            
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "962792 – (CVE-2013-2094) CVE-2013-2094 kernel: perf_swevent_enabled array out-of-bound access",
                             "show_bug.cgi?id=962792" );
        document.title = "962792 – (CVE-2013-2094) CVE-2013-2094 kernel: perf_swevent_enabled array out-of-bound access";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "962792 – (CVE-2013-2094) CVE-2013-2094 kernel: perf_swevent_enabled array out-of-bound access", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="js/util.js"></script><script type="text/javascript" src="js/field.js"></script><script type="text/javascript" src="extensions/ExternalBugs/web/js/external_bugs.js"></script><script type="text/javascript" src="extensions/RedHat/web/DataTables/datatables.min.js"></script><script type="text/javascript" src="extensions/RedHat/web/alertify/alertify.min.js"></script><script type="text/javascript" src="extensions/RedHat/web/colResize/dataTables.colResize.js"></script><script type="text/javascript" src="extensions/RedHat/web/js/redhat.js"></script><script type="text/javascript" src="extensions/SelectizeJS/web/js/standalone/selectize.min.js"></script><script type="text/javascript" src="extensions/SelectizeJS/web/js/SelectizeJS.js"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Red Hat Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="/extensions/RedHat/web/css/favicons/production.ico?v=0">
  </head>

  <body 
        class="bugzilla-redhat-com status_colours_pastel
                 bz_bug
                 bz_status_CLOSED
                 bz_product_Security_Response
                 bz_component_vulnerability
                 bz_bug_962792 yui-skin-sam">

  <div id="header"><div id="banner">
   <ul id="loginin_launcher"><a href="#" onclick="$('#loginin_launcher').addClass('bz_default_hidden');$('#login_container').removeClass('bz_default_hidden');"><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;Login</a></ul>
   <ul id="login_container" class="bz_default_hidden">
    <a href="#" id="hide_mini_login" onclick="$('#login_container').addClass('bz_default_hidden');$('#loginin_launcher').removeClass('bz_default_hidden');">[x]</a>
     
    <li id="mini_login_container"><div id="saml2_container">
    Log in using an account from:
  <div id="saml2auth_login_Fedora Account System">
    <a href="saml2_login.cgi?idp=Fedora%20Account%20System&amp;target=show_bug.cgi%3Fid%3D962792"><i class="fa fa-cogs" aria-hidden="true"></i>&nbsp;&nbsp;Fedora Account System</a>
  </div>
  <div id="saml2auth_login_Red Hat Associate">
    <a href="saml2_login.cgi?idp=Red%20Hat%20Associate&amp;target=show_bug.cgi%3Fid%3D962792"><i class="fa fa-user-secret" aria-hidden="true"></i>&nbsp;&nbsp;Red Hat Associate</a>
  </div>
  <div id="saml2auth_login_Red Hat Customer">
    <a href="saml2_login.cgi?idp=Red%20Hat%20Customer&amp;target=show_bug.cgi%3Fid%3D962792"><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;Red Hat Customer</a>
  </div>
  Or login using a Red Hat Bugzilla account
  <div>

  <form action="show_bug.cgi?id=962792" method="POST"
        class="mini_login "
        id="mini_login">
    <input id="Bugzilla_login" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in">
  </form>
</li>
<li id="forgot_container">
  <a id="forgot_link" href="#forgot"
     onclick="return show_forgot_form('')"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>&nbsp;&nbsp;Forgot&nbsp;Password</a>
  <form action="token.cgi" method="post" id="forgot_form"
        class="mini_forgot bz_default_hidden">
    <label for="login">Login:</label>
    <input name="loginname" size="20" id="login" required
        type="email" placeholder="Your Email Address">
    <input id="forgot_button" value="Reset Password" 
           type="submit">
    <input type="hidden" name="a" value="reqpw">
    <input type="hidden" id="token" name="token"
           value="1635628896-FTrho77CK2rGY1iet-HXuV44Hn-ZYthclNwpDQUZOQ8">
    <p>
    <a href="#" onclick="return hide_forgot_form('')"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>&nbsp;&nbsp;Hide Forgot</a>
  </form>
</li>
<li>
  <a href="createaccount.cgi"><span><i class="fas fa-plus" aria-hidden="true"></i>&nbsp;&nbsp;Create an Account</span></a>
</li>
    
   </ul>
  </div>

    <div id="titles">
      <span id="title">Red Hat Bugzilla &ndash; Bug&nbsp;962792</span>


    </div>


    <div id="common_links"><ul class="links">
  <li class="form">
    
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>
  <li><a href="./" title="Home"><i class="fas fa-home"></i></a></li>
  <li><a href="enter_bug.cgi">New</a></li>
  <li class="submenu">
    <a href="#" title="Search"><i class="fas fa-search"></i> <span class="fa fa-caret-down"></span></a>
    <div>
      <ul>
        <li><a href="query.cgi?format=specific">Simple Search</a></li>
        <li><a href="query.cgi?format=advanced">Advanced Search</a></li>
      </ul>
    </div>
  </li>
  <li class="submenu">
   <a href="#">My Links <span class="fa fa-caret-down"></span></a>
   <div>
    <ul>
      <li><a href="describecomponents.cgi">Browse</a></li>
      <li>
            <a href="request.cgi">Requests</a></li>
      <li class="submenu">
        <a  href="report.cgi">Reports <span class="fa fa-caret-right"></span></a>
        <div>
          <ul>
            </li>
            <li class="submenu">
              <a  href="#">Current State <span class="fa fa-caret-right"></span></a>
              <div>
                <ul>
                  <li id="report_search">
                    <a href="query.cgi">Search</a>
                  </li>
                  <li id="report_tabular">
                      <a href="query.cgi?format=report-table">Tabular reports</a>
                  </li>
                    <li id="report_graphical">
                        <a href="query.cgi?format=report-graph">Graphical reports</a>
                    </li>
                  <li id="report_duplicates">
                    <a href="duplicates.cgi">Duplicates</a>
                  </li>
                </ul>
              </div>
            </li>
            <li class="submenu">
              <a  href="#">Other Reports <span class="fa fa-caret-right"></span></a>
              <div>
                <ul>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=user_activity.html">User Changes</a>
                  </li>
                </ul>
              </div>
            </li>
            <li class="submenu">
              <a  href="#">Plotly Reports <span class="fa fa-caret-right"></span></a>
              <div>
                <ul>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=bug_status.html">Bug Status</a>
                  </li>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=bug_severity.html">Bug Severity</a>
                  </li>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=non_defaults.html">Non-Defaults</a>
                  </li>
                </ul>
              </div>
            </li>
          </ul>
        </div>
      </li><li><span class="separator"> | </span><a href="page.cgi?id=productdashboard.html">Product Dashboard</a></li>
    </ul>
   </div>
  </li>

  <li class="submenu">
   <a href="#">Help <span class="fa fa-caret-down"></span></a>
   <div>
    <ul><li><a href="docs/en/html/using/understanding.html" >Page Help!</a></li>
      <li><a href="page.cgi?id=bug-writing.html">Bug Writing Guidelines</a></li> 
      <li><a href="page.cgi?id=whats-new.html">What's new</a></li>
      <li><a href="https://access.redhat.com/help/browsers">Browser Support Policy</a></li>
      <li><a href="page.cgi?id=release-notes.html">5.0.4.rh64 Release notes</a></li>
      <li><a href="page.cgi?id=faq.html">FAQ</a></li>
      <li><a href="docs/en/html/index.html">Guides index</a></li>
      <li><a href="docs/en/html/using/index.html">User guide</a></li>
      <li><a href="docs/en/html/integrating/api/Bugzilla/WebService/Bug.html">Web Services</a></li>
      <li><a href="page.cgi?id=redhat/contact.html" >Contact</a></li> 
      <li><a href="page.cgi?id=terms-conditions.html" >Legal</a></li> 
    </ul>
   </div>
  </li>



</ul>
    </div>
  </div>


  <div id="bugzilla-body">



<noscript>
      <div id="no-js-message">This site requires JavaScript to be enabled to function correctly, please enable it.</div>
</noscript>

<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=962792" title="Format For Printing"><i class="fa fa-print"></i></a></li>
    <li><a href="show_bug.cgi?ctype=xml&amp;id=962792" title="Export as XML"><i class="far fa-file-excel"></i></a></li>
    <li><a href="enter_bug.cgi?cloned_bug_id=962792" title="Clone This Bug"><i class="fa fa-clone"></i></a></li>
    <li>
      <a href="enter_bug.cgi?cloned_bug_id=962792&lite=1" title="Copy is a lite weight clone that only copies the summary &amp; description">
       <i class="far fa-clone"></i>
      </a>
    </li>


          
    <li>
      <a href="#c80" title="Last Comment">
         <i class="fas fa-arrow-down" aria-hidden="true"></i>
      </a>
    </li><li>
  <a href="buglist.cgi?bug_id=962792&amp;bug_id_type=anddependson&amp;format=tvp" title="TreeView+">
    <i class="fa fa-tree"></i>
  </a>
</li>
    </ul>
<script type="text/javascript">
<!--

//-->
</script>




<form name="changeform" id="changeform" method="post" action="process_bug.cgi">





  <input type="hidden" name="delta_ts" value="2021-02-17 07:41:49">
  <input type="hidden" name="id" value="962792">
  <input type="hidden" name="token" value="1635628896-IS9CRry9sdYNYmeD_FH7ZiOD1ZsFzQjh5RBMfOYKutc">
<div class="bz_short_desc_container edit_form">
    
    

     <a href="show_bug.cgi?id=962792"><b>Bug&nbsp;962792</b></a> <span id="summary_container" class="bz_default_hidden">
        (<span id="alias_nonedit_display">CVE-2013-2094</span>)
      - <span id="short_desc_nonedit_display"><a href="https://access.redhat.com/security/cve/CVE-2013-2094">CVE-2013-2094</a> kernel: perf_swevent_enabled array out-of-bound access</span>
     </span>

    
    

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

  
  
</span>CVE-2013-2094 kernel: perf_swevent_enabled array out-of-bound access
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'CVE-2013-2094 kernel: perf_swevent_enabled array out-of-bound access' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
      <th class="field_label">
        <a href="describekeywords.cgi">Keywords</a>:
      </th>
      <td>
        <div class="keywords_select">
          <select id="keywords" name="keywords"  disabled="disabled" multiple="multiple">
              <option value="Security"
                      title="Bugs with the &quot;Security&quot; keyword are those that relate to a security vulnerability with a Red Hat product or service. For further information on how to report a security vulnerability to Red Hat please see the &quot;Security Contacts and Procedures&quot; page at http://www.redhat.com/security/team/contact/"
                      selected="selected"
              >Security
              </option>
          </select>
        </div>
      </td>
    </tr>

  <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">CLOSED
          ERRATA
      </span>
    </td>
  </tr>

<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

  
  
</th>
    <td>CVE-2013-2094
    </td>
  </tr>

<tr>

<th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components. Select a Classification to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_product" >Security Response

</td>


    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_classification" >Other

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Security Response"
  >Component:</a>

  
  
</th>
      <td>
        

            <input type="hidden" id="component" name="component" value="vulnerability">vulnerability
        
        
        <span class="show_others">
          <a href="buglist.cgi?component=vulnerability&amp;product=Security%20Response"
            title="Show other bugs for this component"><i class="fas fa-th-list"></i></a>
        
        
          <a href="enter_bug.cgi?component=vulnerability&amp;product=Security%20Response&amp;version=unspecified"
            title="Create a new bug for this component"><i class="fas fa-plus-circle"></i></a>
        
        </span>
      </td>
    </tr>
    <tr>
        <th id="bz_rh_sub_component_input_th"
            class="field_label bz_default_hidden">
          <label for="rh_sub_component">
            <a class="field_help_link" href="page.cgi?id=fields.html#rh_sub_components" title="The sub component of a specific component">Sub Component:</a>
          </label>
        </th>
        <td id="bz_rh_sub_component_input_td" class="bz_default_hidden">
          <input type="hidden" name="defined_rh_sub_component" id="defined_rh_sub_component" value="0">
          <select name="rh_sub_component" id="rh_sub_component"  disabled="disabled" onchange="assign_to_default();" >
            <option value="">---</option>
          </select>
          <script>
            $(document).ready(function () {
              init_sub_components();
            });
          </script>
        
          <span class="show_others">
            <a href="buglist.cgi?component=vulnerability&amp;product=Security%20Response" title="Show other bugs for this sub-component"><i class="fas fa-th-list"></i></a>
          
          </span>
        </td>
      </tr>

<script>
  function rh_check_sub_components () {
    var ret = '';
      var sub_comp_obj = document.getElementById('rh_sub_component');
        if ($('#defined_rh_sub_component').val() == 1 && !$("#rh_sub_component").selectize()[0].selectize.getValue()) {
          if (!ret) ret = sub_comp_obj;
          _sub_comps_errorFor(
            sub_comp_obj,
            "You must specify the sub component"
          );
      }

    return ret;
  }

  function _sub_comps_errorFor(field, error_text) {
      var new_node = document.createElement('div');
      YAHOO.util.Dom.addClass(new_node, 'validation_error_text');
      new_node.innerHTML = error_text;
      YAHOO.util.Dom.insertAfter(new_node, field);
      YAHOO.util.Dom.addClass(field, 'validation_error_field');
      new_node.scrollIntoView();
  }
</script>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

  
  
</th>
<td>
      <span id="version">unspecified
      </span></td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

  
  
</th>
      <td class="field_value">All
      </td>
    </tr>
    <tr><th class="field_label "
    id="field_label_op_sys">


  <a 
      title="The operating system the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#op_sys"
  >OS:</a>

  
  
</th>
      <td class="field_value">
        Linux
      </td>
    </tr>
          
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#priority">Priority:</a></label>
      </th>
      <td>high
      </td>
    </tr>
    <tr>
      <th class="field_label">
        <label ><a href="page.cgi?id=fields.html#bug_severity">Severity:</a>
        </label>
      </th>
      <td>
       high
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

  
  
</th><td>
      <span id="target_milestone">---
      </span></td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

  
  
</th>
      <td><span class="vcard redhat_user"><span class="fn">Red Hat Product Security</span>
</span>
      </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_qa_contact">


  <a 
      title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#qa_contact"
  >QA Contact:</a>

  
  
</th>
      <td><span class="vcard ">
</span>
      </td>
    </tr>
    
    <tr><th class="field_label "
    id="field_label_docs_contact">

    <label for="docs_contact" accesskey="q">

  <a 
      title="The person responsible for documenting once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#docs_contact"
  >Docs Contact:</a>
</label>
  
  
</th>
      <td><span class="vcard ">
</span>
      </td>
    </tr>
    
    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'security-response-team\x40redhat.com',
        '',
        '');
    </script>
          
          
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

  
  
</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>

    <tr><th class="field_label "
    id="field_label_status_whiteboard">


  <a 
      title="Each bug has a free-form single line text entry box for adding tags and status information."
      class="field_help_link"
      href="page.cgi?id=fields.html#status_whiteboard"
  >Whiteboard:</a>

  
  
</th><td>  
  </td>
    </tr>
          

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends On:</a>

  
  
</th>

  <td>
    <span id="dependson_input_area">
    </span>
<a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=962793">962793</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=962794">962794</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=962795">962795</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=962796">962796</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=962797">962797</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=962798">962798</a> <a class="bz_bug_link
          
          bz_status_CLOSED  bz_closed
                              
    "
   title="CLOSED CURRENTRELEASE - CVE-2013-2094 kernel: perf_swevent_enabled array out-of-bound access [fedora-all]"
   href="show_bug.cgi?id=962799">962799</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=962812">962812</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=964225">964225</a> 
  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

  
  
</th>

  <td>
    <span id="blocked_input_area">
    </span>
<a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=962949">962949</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=963009">963009</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=963010">963010</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=963108">963108</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=963115">963115</a> 
  </td>
  </tr>

          <tr>
    <th class="field_label">TreeView+</th>
    <td>
        <a href="buglist.cgi?bug_id=962792&amp;bug_id_type=anddependson&amp;format=tvp">
        depends on</a> /
        <a href="buglist.cgi?bug_id=962792&amp;bug_id_type=andblocked&amp;format=tvp&amp;tvp_dir=blocked">
        blocked</a>
    </td>
    <td></td>
</tr>
          
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#reporter">Reported:</a>
    </th>
    <td>2013-05-14 13:01 UTC by <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#modified">Modified:</a>
    </th>
    <td>2021-02-17 07:41 UTC
      (<a href="show_activity.cgi?id=962792">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          <a href="page.cgi?id=fields.html#cclist">CC List:</a>
        </label>
      </th>
      <td>127 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="adamw">adamw</option>
                <option value="afeldt">afeldt</option>
                <option value="agajania">agajania</option>
                <option value="agordeev">agordeev</option>
                <option value="ajb">ajb</option>
                <option value="alexa.gerancho">alexa.gerancho</option>
                <option value="anton">anton</option>
                <option value="arusso">arusso</option>
                <option value="bandrmail">bandrmail</option>
                <option value="b.de.boer">b.de.boer</option>
                <option value="bhu">bhu</option>
                <option value="bmourelo">bmourelo</option>
                <option value="bugzilla-redhat">bugzilla-redhat</option>
                <option value="cameron.kerr">cameron.kerr</option>
                <option value="carnil">carnil</option>
                <option value="chensongzheng">chensongzheng</option>
                <option value="coggy+redhat">coggy+redhat</option>
                <option value="cwawak">cwawak</option>
                <option value="davej">davej</option>
                <option value="ddm">ddm</option>
                <option value="dgherman">dgherman</option>
                <option value="dhoward">dhoward</option>
                <option value="dkovalsk">dkovalsk</option>
                <option value="d-krstic">d-krstic</option>
                <option value="dslehman">dslehman</option>
                <option value="esammons">esammons</option>
                <option value="fche">fche</option>
                <option value="felipe">felipe</option>
                <option value="fhrbata">fhrbata</option>
                <option value="gansalmon">gansalmon</option>
                <option value="gbailey">gbailey</option>
                <option value="gholms">gholms</option>
                <option value="greg.t">greg.t</option>
                <option value="hansecke">hansecke</option>
                <option value="hanzhin.stas">hanzhin.stas</option>
                <option value="hayato.suzuki">hayato.suzuki</option>
                <option value="herrold">herrold</option>
                <option value="iamdexpl">iamdexpl</option>
                <option value="iboverma">iboverma</option>
                <option value="icon">icon</option>
                <option value="itamar">itamar</option>
                <option value="james.hogarth">james.hogarth</option>
                <option value="Jan.van.Eldik">Jan.van.Eldik</option>
                <option value="jbrouer">jbrouer</option>
                <option value="jcpunk">jcpunk</option>
                <option value="jeder">jeder</option>
                <option value="jforbes">jforbes</option>
                <option value="jjneely">jjneely</option>
                <option value="jkacur">jkacur</option>
                <option value="johan-fedora">johan-fedora</option>
                <option value="john.mora">john.mora</option>
                <option value="johnny">johnny</option>
                <option value="jonathan">jonathan</option>
                <option value="jpazdziora">jpazdziora</option>
                <option value="jsimonel">jsimonel</option>
                <option value="junk">junk</option>
                <option value="jwboyer">jwboyer</option>
                <option value="karlamrhein">karlamrhein</option>
                <option value="kcbnac">kcbnac</option>
                <option value="kernel-mgr">kernel-mgr</option>
                <option value="khorenko">khorenko</option>
                <option value="kpatterson">kpatterson</option>
                <option value="leskomw">leskomw</option>
                <option value="lgoncalv">lgoncalv</option>
                <option value="lloyd.cobb">lloyd.cobb</option>
                <option value="lmacken">lmacken</option>
                <option value="logan">logan</option>
                <option value="lwang">lwang</option>
                <option value="lwhatley">lwhatley</option>
                <option value="madhu.chinakonda">madhu.chinakonda</option>
                <option value="magnawave">magnawave</option>
                <option value="masanari_iida">masanari_iida</option>
                <option value="mattdm">mattdm</option>
                <option value="matti">matti</option>
                <option value="maxim">maxim</option>
                <option value="mchappel">mchappel</option>
                <option value="mcoffey">mcoffey</option>
                <option value="mcressma">mcressma</option>
                <option value="michele">michele</option>
                <option value="mjc">mjc</option>
                <option value="mk">mk</option>
                <option value="mkarg">mkarg</option>
                <option value="mosorio">mosorio</option>
                <option value="mstevens">mstevens</option>
                <option value="npajkovs">npajkovs</option>
                <option value="nux">nux</option>
                <option value="paulds">paulds</option>
                <option value="pep">pep</option>
                <option value="philip.cheung">philip.cheung</option>
                <option value="pkoro">pkoro</option>
                <option value="plazonic">plazonic</option>
                <option value="plougher">plougher</option>
                <option value="rbarlow">rbarlow</option>
                <option value="rcvalle">rcvalle</option>
                <option value="rebus">rebus</option>
                <option value="redhat">redhat</option>
                <option value="rg">rg</option>
                <option value="rik.theys">rik.theys</option>
                <option value="ripleymj">ripleymj</option>
                <option value="rsteiger">rsteiger</option>
                <option value="rt-maint">rt-maint</option>
                <option value="rvrbovsk">rvrbovsk</option>
                <option value="shyam">shyam</option>
                <option value="simon.croome">simon.croome</option>
                <option value="srhode">srhode</option>
                <option value="stephan.wiesand">stephan.wiesand</option>
                <option value="stephenf">stephenf</option>
                <option value="sydelko">sydelko</option>
                <option value="tema">tema</option>
                <option value="t.h.amundsen">t.h.amundsen</option>
                <option value="thomas.oulevey">thomas.oulevey</option>
                <option value="timc">timc</option>
                <option value="tis">tis</option>
                <option value="tkramer">tkramer</option>
                <option value="tobias.dussa">tobias.dussa</option>
                <option value="toracat">toracat</option>
                <option value="tristan.santore">tristan.santore</option>
                <option value="tru">tru</option>
                <option value="ville">ville</option>
                <option value="williams">williams</option>
                <option value="wmealing">wmealing</option>
                <option value="wolfy">wolfy</option>
                <option value="xtian">xtian</option>
                <option value="yaplik">yaplik</option>
                <option value="yersinia.spiros">yersinia.spiros</option>
                <option value="ykawada">ykawada</option>
                <option value="zdenek">zdenek</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>


 
<tr>
      <th class="field_label "
    id="field_label_cf_fixed_in">


  <a 
      title="The full package version. PGM uses to check if brew ..."
  >Fixed In Version:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_fixed_in"  colspan="2">

</td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_doc_type">


  <a 
      title="Click the information icon to the right to see the description"
  >Doc Type:</a>

  
  <i class="fas fa-info-circle pop-text" onclick="alertify.alert('Doc Type', BB_FIELDS['cf_doc_type'].long_desc)" title="Click to see full description"></i>

  
</th>
  <td class="field_value "
      id="field_container_cf_doc_type"  colspan="2">Bug Fix

<span id="cf_doc_warn"></span></td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_release_notes">


  <a 
      title="Click the information icon to the right to see the description"
  >Doc Text:</a>

  
  <i class="fas fa-info-circle pop-text" onclick="alertify.alert('Doc Text', BB_FIELDS['cf_release_notes'].long_desc)" title="Click to see full description"></i>

  
</th>
  <td class="field_value "
      id="field_container_cf_release_notes"  colspan="2">
      <div class="uneditable_textarea"></div>

</td>
    </tr>
    
    

    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_clone_of">


  <a 
      title="The bug listed here was the bug cloned to create thi..."
  >Clone Of:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_clone_of"  colspan="2">

</td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_environment">


  <a 
      title="This field is used for unformatted text that helps t..."
  >Environment:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_environment"  colspan="2">
      <div class="uneditable_textarea"></div>

</td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_last_closed">


  <a 
      title="When this bug was last marked as closed. Used for st..."
  >Last Closed:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_last_closed"  colspan="2">2013-05-21 07:56:14 UTC
    

</td>
    </tr>




        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    
    <th align="left">
      Attachments
    </th>
    <th colspan="2" align="right">
      <a href="page.cgi?id=terms-conditions.html">(Terms of Use)</a>
    </th>
    
  </tr>



  <tr class="bz_attach_footer">
    <td colspan="3">
        <a href="attachment.cgi?bugid=962792&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>

    

    <script>
  YAHOO.ExternalBugs.sUrlYUI = 'https://bugzilla.redhat.com/jsonrpc.cgi';
  YAHOO.ExternalBugs.sUrlRPC = 'https://bugzilla.redhat.com/xmlrpc.cgi';
  YAHOO.ExternalBugs.extRefreshList = [];
function _extbz_errorFor(field, error_text) {
    var new_node = document.createElement('div');
    YAHOO.util.Dom.addClass(new_node, 'validation_error_text');
    new_node.innerHTML = error_text;
    YAHOO.util.Dom.insertAfter(new_node, field);
    YAHOO.util.Dom.addClass(field, 'validation_error_field');
    return new_node;
}

function check_external_bugs (f) {
    var focus_me;
    var external_bugs = YAHOO.util.Dom.getElementsByClassName(
        'external_bug_id', null, f);
    for (var i = 0; i < external_bugs.length; i++) {
        var bug_id_key   = external_bugs[i].name;
        var bug_type_key = 'external_' + bug_id_key.substr(13);
        if($('#' + bug_id_key).length > 0) {
            var bug_id       = document.getElementById(bug_id_key).value;
            var bug_type     = document.getElementById(bug_type_key).value;
            if ((bug_type == '' || bug_type == '0') && bug_id != '') {
                focus_me = _extbz_errorFor(
                    document.getElementById(bug_type_key),
                    'You specified the external tracker id, but not the type'
                );
            }
            else if (bug_type != '' && bug_type != '0' && bug_id == '') {
                focus_me = _extbz_errorFor(
                    external_bugs[i],
                    'You specified the external tracker type, but not the id'
                );
            }
            else if (bug_type != '' && bug_id != '') {
            }
        }
    }

    return focus_me;
}

var bz_no_validate_enter_bug = false;
function validateChangeBug(changeform) {
    // This is for the "bookmarkable templates" button.
    if (bz_no_validate_enter_bug) {
        // Set it back to false for people who hit the "back" button
        bz_no_validate_enter_bug = false;
        return true;
    }

    var current_errors = YAHOO.util.Dom.getElementsByClassName(
        'validation_error_text', null, changeform);
    for (var i = 0; i < current_errors.length; i++) {
        current_errors[i].parentNode.removeChild(current_errors[i]);
    }
    var current_error_fields = YAHOO.util.Dom.getElementsByClassName(
        'validation_error_field', null, changeform);
    for (var i = 0; i < current_error_fields.length; i++) {
        var field = current_error_fields[i];
        YAHOO.util.Dom.removeClass(field, 'validation_error_field');
    }

    var focus_me;

    // REDHAT EXTENSION 1000743
    focus_me = check_external_bugs(changeform);

    if (focus_me) {
        focus_me.scrollIntoView(false);
        return false;
    }

    return true;
}

changeform.onsubmit = function() { return validateChangeBug(changeform)};
</script>

<br>
<table id="external_bugs_table" cellspacing="0" cellpadding="4">
  <caption name="et0" id="et0">Links</caption>
    <tr>
      <th>System</th>
      <th>ID</th>
      <th>Private</th>
      <th>Priority</th>
      <th>Status</th>
      <th>Summary</th>
      <th>Last Updated</th>
    </tr>

    
    <tr id="ext_row_702471" >
      <td>Red Hat Product Errata
      </td>
      <td>
        <a href="https://access.redhat.com/errata/RHSA-2013:0829">RHSA-2013:0829</a>
      </td>
      <td>
        <span id="ext_is_private_702471">0
        </span>
      </td>
      <td>
        <span id="ext_priority_702471">normal
        </span>
      </td>
      <td>
        <span id="ext_status_702471">SHIPPED_LIVE
        </span>
      </td>
      <td>
        <span id="ext_description_702471"
              title="Important: kernel-rt security and bug fix update">Important: kernel-rt security and bug fix update
        </span>
      </td>
      <td>
        <span id="ext_last_updated_702471">2013-05-20 20:47:02 UTC
        </span>
      </td>
    </tr>
    
    <tr id="ext_row_702473" >
      <td>Red Hat Product Errata
      </td>
      <td>
        <a href="https://access.redhat.com/errata/RHSA-2013:0830">RHSA-2013:0830</a>
      </td>
      <td>
        <span id="ext_is_private_702473">0
        </span>
      </td>
      <td>
        <span id="ext_priority_702473">normal
        </span>
      </td>
      <td>
        <span id="ext_status_702473">SHIPPED_LIVE
        </span>
      </td>
      <td>
        <span id="ext_description_702473"
              title="Important: kernel security update">Important: kernel security update
        </span>
      </td>
      <td>
        <span id="ext_last_updated_702473">2013-05-16 19:23:56 UTC
        </span>
      </td>
    </tr>
    
    <tr id="ext_row_702479" >
      <td>Red Hat Product Errata
      </td>
      <td>
        <a href="https://access.redhat.com/errata/RHSA-2013:0832">RHSA-2013:0832</a>
      </td>
      <td>
        <span id="ext_is_private_702479">0
        </span>
      </td>
      <td>
        <span id="ext_priority_702479">normal
        </span>
      </td>
      <td>
        <span id="ext_status_702479">SHIPPED_LIVE
        </span>
      </td>
      <td>
        <span id="ext_description_702479"
              title="Important: kernel security update">Important: kernel security update
        </span>
      </td>
      <td>
        <span id="ext_last_updated_702479">2013-05-17 19:17:16 UTC
        </span>
      </td>
    </tr>
    
    <tr id="ext_row_702500" >
      <td>Red Hat Product Errata
      </td>
      <td>
        <a href="https://access.redhat.com/errata/RHSA-2013:0840">RHSA-2013:0840</a>
      </td>
      <td>
        <span id="ext_is_private_702500">0
        </span>
      </td>
      <td>
        <span id="ext_priority_702500">normal
        </span>
      </td>
      <td>
        <span id="ext_status_702500">SHIPPED_LIVE
        </span>
      </td>
      <td>
        <span id="ext_description_702500"
              title="Important: kernel security update">Important: kernel security update
        </span>
      </td>
      <td>
        <span id="ext_last_updated_702500">2013-05-20 20:26:04 UTC
        </span>
      </td>
    </tr>
    
    <tr id="ext_row_702502" >
      <td>Red Hat Product Errata
      </td>
      <td>
        <a href="https://access.redhat.com/errata/RHSA-2013:0841">RHSA-2013:0841</a>
      </td>
      <td>
        <span id="ext_is_private_702502">0
        </span>
      </td>
      <td>
        <span id="ext_priority_702502">normal
        </span>
      </td>
      <td>
        <span id="ext_status_702502">SHIPPED_LIVE
        </span>
      </td>
      <td>
        <span id="ext_description_702502"
              title="Important: kernel security update">Important: kernel security update
        </span>
      </td>
      <td>
        <span id="ext_last_updated_702502">2013-05-20 20:25:55 UTC
        </span>
      </td>
    </tr>

</table>

<br>
    

  </td>

  <td class="groups">
  </td>
  </tr></table>

  
  <div id="comments"><script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>






<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment
            "
    >

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-14 13:01:40 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">A flaw was found in the way index into perf_swevent_enabled array was sanitized.

A local unprivileged user can use this flaw to increase their privileges on the system.

Introduced by:
<a href="http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=b0a873ebbf87bf38bf70b5e39a7cadc96099fa13">http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=b0a873ebbf87bf38bf70b5e39a7cadc96099fa13</a>

Upstream fix:
<a href="http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=8176cced706b5e5d15887584150764894e94e02f">http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=8176cced706b5e5d15887584150764894e94e02f</a>

References:
<a href="http://lkml.indiana.edu/hypermail/linux/kernel/1304.1/03652.html">http://lkml.indiana.edu/hypermail/linux/kernel/1304.1/03652.html</a>
<a href="https://news.ycombinator.com/item?id=5703758">https://news.ycombinator.com/item?id=5703758</a>
<a href="http://packetstormsecurity.com/files/121616/semtex.c">http://packetstormsecurity.com/files/121616/semtex.c</a>

</pre>
    </div>

    <div id="c3" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-14 13:06:18 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Created kernel tracking bugs for this issue

Affects: fedora-all [<a class="bz_bug_link
          
          bz_status_CLOSED  bz_closed
                              
    "
   title="CLOSED CURRENTRELEASE - CVE-2013-2094 kernel: perf_swevent_enabled array out-of-bound access [fedora-all]"
   href="show_bug.cgi?id=962799">bug 962799</a>]

</pre>
    </div>

    <div id="c6" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-14 13:29:29 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Statement:

This issue does not affect the kernel packages as shipped with Red Hat Enterprise Linux 5 because we did not backport upstream commit b0a873eb that introduced this issue.

This issue was addressed in Red Hat Enterprise Linux 6 via RHSA-2013:0830 (<a href="https://rhn.redhat.com/errata/RHSA-2013-0830.html">https://rhn.redhat.com/errata/RHSA-2013-0830.html</a>), Red Hat Enterprise Linux 6.1 Extended update support via RHSA-2013:0841 (<a href="https://rhn.redhat.com/errata/RHSA-2013-0841.html">https://rhn.redhat.com/errata/RHSA-2013-0841.html</a>), Red Hat Enterprise Linux 6.2 Extended update support via RHSA-2013:0840 (<a href="https://rhn.redhat.com/errata/RHSA-2013-0840.html">https://rhn.redhat.com/errata/RHSA-2013-0840.html</a>), Red Hat Enterprise Linux 6.3 Extended Update Support via RHSA-2013:0832 (<a href="https://rhn.redhat.com/errata/RHSA-2013-0832.html">https://rhn.redhat.com/errata/RHSA-2013-0832.html</a>), and Red Hat Enterprise MRG 2 via RHSA-2013:0829 (<a href="https://rhn.redhat.com/errata/RHSA-2013-0829.html">https://rhn.redhat.com/errata/RHSA-2013-0829.html</a>).

Red Hat Enterprise Linux 6.0 was not affected by this flaw.

Refer to <a href="https://access.redhat.com/site/solutions/373743">https://access.redhat.com/site/solutions/373743</a> for further information.

</pre>
    </div>

    <div id="c7" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Thomas Oulevey</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-14 13:31:03 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hi,

Can you confirm that :
sysctl kernel.perf_event_paranoid=2

is a good enough solution for our users in short term ?

cheers,
-- 
Thomas

</pre>
    </div>

    <div id="c10" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-14 14:23:38 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hello, Thomas.

(In reply to <a href="show_bug.cgi?id=962792#c7">comment #7</a>)
<span class="quote">&gt; Can you confirm that :
&gt; sysctl kernel.perf_event_paranoid=2
&gt; 
&gt; is a good enough solution for our users in short term ?</span >

Our testing shows that this is not sufficient to avoid the issue in general, but it is currently sufficient mitigation against the publicly available (unmodified) exploits.

Best regards,
--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c13" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-14 16:48:25 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">To mitigate the issue:

1) On the host, save the following in a file with the &quot;.stp&quot; extension:

%{

#include &lt;linux/perf_event.h&gt;

%}

function sanitize_config:long (event:long) %{
        struct perf_event *event;

#if STAP_COMPAT_VERSION &gt;= STAP_VERSION(1,8)
        event = (struct perf_event *) (unsigned long) STAP_ARG_event;
#else
        event = (struct perf_event *) (unsigned long) THIS-&gt;event;
#endif

        event-&gt;attr.config &amp;= INT_MAX;

%}

probe kernel.function(&quot;perf_swevent_init&quot;).call {
        sanitize_config($event);
}

2) Install the &quot;systemtap&quot; package and any required dependencies. Refer to
the &quot;2. Using SystemTap&quot; chapter in the Red Hat Enterprise Linux 6
&quot;SystemTap Beginners Guide&quot; document, available from docs.redhat.com, for
information on installing the required -debuginfo packages.

3) Run the &quot;stap -g [filename-from-step-1].stp&quot; command as root.

If the host is rebooted, the changes will be lost and the script must be
run again.


Alternatively, build the systemtap script on a development system with
&quot;stap -g -p 4 [filename-from-step-1].stp&quot;, distribute the resulting kernel
module to all affected systems, and run &quot;staprun -L &lt;module&gt;&quot; on those.
When using this approach only systemtap-runtime package is required on the
affected systems. Please notice that the kernel version must be the same across all systems.

</pre>
    </div>

    <div id="c14" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard ">jcpunk
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-14 17:59:57 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">What is the overall risk on this exploit for systems with selinux in Enforcing mode?

</pre>
    </div>

    <div id="c15" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-14 18:40:34 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c14">comment #14</a>)
<span class="quote">&gt; What is the overall risk on this exploit for systems with selinux in
&gt; Enforcing mode?</span >

According to our testing, SELinux does not help to mitigate this issue.

Best regards,
--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c16" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-14 23:36:43 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">How the public exploit in <a href="show_bug.cgi?id=962792#c0">comment #0</a> (x86_64) works:

The problem is that event_id index in perf_swevent_init is signed and
checked only for it's upper bound. When assigning event-&gt;attr.config value
to event_id at the beginning of the function, any attr.config value
which has the 31st bit set will result in negative event_id.
Negative event_id will pass the &gt;= PERF_COUNT_SW_MAX check later in the
code.

Later in the code, write in the form of

  atomic_inc(&amp;perf_swevent_enabled[event_id]);

is present.

perf_swevent_enabled is defined as

atomic_t perf_swevent_enabled[PERF_COUNT_SW_MAX];

so on RHEL (which does not have jump labels) it is basically array of ints.

When accessing the perf_swevent_enabled array with event_id being int,
event_id is sign extended to 64-bit. In the case of event_id being -1
(0xffffffff), it is sign extended to 0xffffffffffffffff. Because
perf_swevent_enabled is an array of ints (32-bit), the 64-bit value is
multiplied by 4 (32 / 8) and then added to the perf_swevent_enabled
address.

Let's assume

[cynique&#64;intel-d3ce1-01 ~]$ cat /boot/System.map-2.6.32-358.el6.x86_64 | grep perf_swevent_enabled
ffffffff81f360c0 B perf_swevent_enabled

and event-&gt;attr.config == 0xffffffff --&gt;

0xffffffffffffffff * 4 + 0xffffffff81f360c0 == 0xFFFFFFFF81F360BC

similarly when event-&gt;attr.config == 0xfffffffe --&gt;

0xfffffffffffffffe * 4 + 0xffffffff81f360c0 == 0xFFFFFFFF81F360B8

So in the perf_swevent_init code path we will end up incrementing kernel
mode addresses.

The interesting thing happens in the destroy path, which gets called
when the file descriptor returned by the perf_event_open (invoking this
syscall with the correct parameters will trigger the perf_swevent_init
code path) is being closed:

static void sw_perf_event_destroy(struct perf_event *event)
{
        u64 event_id = event-&gt;attr.config;

        WARN_ON(event-&gt;parent);

        atomic_dec(&amp;perf_swevent_enabled[event_id]);
        swevent_hlist_put(event);
}

Now event_id is u64, so it's taken from userspace as is.

Let's assume again event-&gt;attr.config == 0xffffffff --&gt;

0xffffffff * 4 + 0xffffffff81f360c0 == 0x0000000381F360BC

similarly when event-&gt;attr.config == 0xfffffffe --&gt;

0xfffffffe * 4 + 0xffffffff81f360c0 == 0x0000000381F360B8

So in the sw_perf_event_destroy path, we will end up decrementing
userspace addresses for the same values as in the perf_swevent_init code
path.

Now let's take this knowledge and see what the exploit does:

#define BASE  0x380000000
#define SIZE  0x010000000

  assert((map = mmap((void*)BASE, SIZE, 3, 0x32, 0,0)) == (void*)BASE);
  memset(map, 0, SIZE);
  sheep(-1); sheep(-2);    // sheep will just invoke perf_event_open
                           // syscall with attr.config set to the param
  for (i = 0; i &lt; SIZE/4; i++) if (map[i]) {
    assert(map[i+1]);
    break;
  }

So we will map memory region starting at 0x380000000 (see how the 
addresses looked like when accessing perf_swevent_enabled in the
sw_perf_event_destroy code path above) and perform perf_even_open twice
with attr.config values of 0xffffffff and 0xfffffffe. This will result
in two increments on addresses 0xFFFFFFFF81F360BC and 0xFFFFFFFF81F360B8
and two decrements on addresses 0x0000000381F360BC and 0x0000000381F360B8.
The for loop then finds the addresses where the sw_perf_event_destroy
actually landed. That is important for us because this way we can find
out the address of perf_swevent_enabled as we know (from our testing)

0xfffffffe * 4 + 0xXXXXXXXXXXXXXXXX == 0x0000000381F360B8
0xfffffffe * 4 + 0xffffffffZZZZZZYY == 0x00000003ZZZZZZ(YY - 8)

ZZZZZZ   -&gt; 81F360
(YY - 8) -&gt; B8
YY       -&gt; B8 + 8 (+ 8 because we're looking at -2 index to an array of 32bit
                    element size)
YY       -&gt; C0

0xffffffffZZZZZZYY -&gt; 0xffffffff81F360C0

On RHEL we can simply (even as unprivileged user) grep system map for the
address of perf_swevent_enabled, but there are hardened distros that it's
not possible this way.

Knowing the perf_swevent_enabled we move to the real exploitation part.
Because of the properties of the bug, that allows us to increment 32-bit
values, we can in one step change any kernel mode address to user space
one -- for example taking 0xffffffff81f360c0. If we increment the high
32-bits of this address by one, we end with 0x0000000081f360c0.

For this purposes, we choose interrupt descriptor table. An array of
16-byte descriptors:

Offset 	Size 	Description
0 	2 	Offset low bits (0..15)
2 	2 	Selector (Code segment selector)
4 	1 	Zero
5 	1 	Type and Attributes (same as before)
6 	2 	Offset middle bits (16..31)
8 	4 	Offset high bits (32..63)
12 	4 	Zero

The interesting value is at offset 8, on x86_64 it will be 0xffffffff.

The exploit author chose interrupt descriptor corresponding to interrupt
0x4, so the offset is 0x48 from the start of interrupt descriptor table.
We can actually see the offset in the code,

   *p = j?((g&lt;&lt;32)|u):(idt.addr + 0x48);

which setups the needed values for cleanup.

The interrupt descriptor table was chosen because it is very easy to get it's
address even on hardened builds -- using sidt instruction.

So what we do is setup the landing area with the code that just looks up
credentials of the current task, replaces uid/gids to 0, thus granting
full capabilities and also restores the value in idt + 0x48 to 0xffffffff
(*fixptr = -1;).

Once this is done, we are ready to increment the high bits of interrupt
descriptor offset of int 0x4, taking into account the address of
perf_swevent_enabled (distance from it):

  sheep(-i + (((idt.addr&amp;0xffffffff)-0x80000000)/4) + 16);

In this case we do not care about the decrement, which will again land
in our previously prepared memory region, but in the increment.

Invoking asm(&quot;int $0x4&quot;); will finally run our shellcode with ring0
privileges. Our &quot;interrupt handler&quot; will increase our task's privileges,
do the idt cleanup as presented above and return back to userspace.

And now we can run /bin/bash as root:

 return execl(&quot;/bin/bash&quot;, &quot;-sh&quot;, NULL);

</pre>
    </div>

    <div id="c20" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Elia Pinto</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 10:30:53 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Selinux  can block instead if the user is a confined user (user_u), and not unconfined_u

<a href="http://danwalsh.livejournal.com/16368.html">http://danwalsh.livejournal.com/16368.html</a>


example

id
uid=504(pippo) gid=504(pippo) groups=504(pippo) context=user_u:user_r:user_t:s0
[pippo&#64;esil780 ex]$ ./uu
2.6.37-3.x x86_64
<a href="mailto:sd&#64;fucksheep.org">sd&#64;fucksheep.org</a> 2010
-sh: /home/pippo/.profile: Permission denied
-sh-4.1# ^C
-sh-4.1# kill -9 19457
-sh: kill: (19457) - Operation not permitted
-sh-4.1# init 6
-sh: init: command not found
-sh-4.1# su
-sh: su: command not found

</pre>
    </div>

    <div id="c21" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 10:45:43 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c20">comment #20</a>)

SELinux does not block the exploitation because the attacker's provided shellcode is still executed with ring0 permissions. The public exploit is not targeted against SELinux, but it would be rather easy to adapt it to disable SELinux completely from the ring0 shellcode.

Unfortunately, in this case SELinux blocks just the symptoms, not the real attack vector.

--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c22" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Elia Pinto</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 12:42:41 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c21">comment #21</a>)
You are right naturally
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=962792#c20">comment #20</a>)
&gt; 
&gt; SELinux does not block the exploitation because the attacker's provided
&gt; shellcode is still executed with ring0 permissions. The public exploit is
&gt; not targeted against SELinux, but it would be rather easy to adapt it to
&gt; disable SELinux completely from the ring0 shellcode.
&gt; 
&gt; Unfortunately, in this case SELinux blocks just the symptoms, not the real
&gt; attack vector.
&gt; 
&gt; --
&gt; Petr Matousek / Red Hat Security Response Team</span >

</pre>
    </div>

    <div id="c24" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c24">Comment 24</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 13:26:03 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">To detect the original unmodified &quot;semtex&quot; <a href="https://access.redhat.com/security/cve/CVE-2013-2094">CVE-2013-2094</a> public exploit on Red Hat Enterprise Linux 6&#64;x86_64 systems:

1) On the host, save the following in a file with the &quot;.stp&quot; extension:

global PSE_ADDR=0

probe begin {

        printf(&quot;--------------------------------------------------------------------------\n&quot;);

        if ((kernel_int(PSE_ADDR-4) != 0) || (kernel_int(PSE_ADDR-8) != 0)) {
                printf(&quot;%lx -- %x, %lx -- %x\n&quot;, PSE_ADDR-4, kernel_int(PSE_ADDR-4), PSE_ADDR-8, kernel_int(PSE_ADDR-8));

                if (kernel_int(PSE_ADDR-4) == kernel_int(PSE_ADDR-8))
                        printf(&quot;CVE-2013-2094 semtex local privilege escalation exploit residue detected!\n&quot;);
                else
                        printf(&quot;CVE-2013-2094 relevant suspicious value combination detected.\n&quot;);

        } else
                printf(&quot;CVE-2013-2094 semtex local privilege escalation exploit residue NOT detected!\n&quot;);

        printf(&quot;--------------------------------------------------------------------------\n&quot;);

        exit();
}

2) Install the &quot;systemtap&quot; package and any required dependencies. Refer to
the &quot;2. Using SystemTap&quot; chapter in the Red Hat Enterprise Linux 6
&quot;SystemTap Beginners Guide&quot; document, available from docs.redhat.com, for
information on installing the required packages.

3) Run the &quot;stap [filename-from-step-1].stp -G PSE_ADDR=0x`grep perf_swevent_enabled /proc/kallsyms | awk '{print $1}'`&quot; command as root.

4) See the message printed

Please note that when the script does not detect the &quot;semtex&quot; exploit
residue it does not mean the server is/was not hacked. It just means that
the unmodified original public exploit was not run on this server (or
something went wrong). Considering that most of the exploits used in the
wild now will be either based on or are the same as the original public
&quot;semtex&quot; exploit, this script can be used to at least give a clue whether
the original unmodified &quot;semtex&quot; exploit was exercised on the system.

Also please note, that it is trivial to modify the exploit to cleanup
after the exploitation and as such, this detection script cannot be used
as a proof that the server was not hacked.

</pre>
    </div>

    <div id="c27" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c27">Comment 27</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Lee Whatley</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 15:30:05 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hi,

Has upstream commit b0a873eb been in every RHEL6 kernel, or was it introduced by a particular errata?  I guess my question really is, is there an older RHEL6 kernel that is not vulnerable?

Thanks!
-Lee

</pre>
    </div>

    <div id="c28" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c28">Comment 28</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tristan Santore</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 16:02:04 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">We have been playing with this exploit for a while now. I would like to know if this exploit works for anyone running an i7/i5 range Intel CPU. For some reason this sploit doesn't seem to work on those, which is a good thing for me/us. However, I got somebody to try on an AMD system and it works there. Can somebody enlighten me if the new Intel CPU have some form of protection mechanism, AMD lacks ?

Thank you.

Tristan

</pre>
    </div>

    <div id="c29" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c29">Comment 29</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 16:24:46 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hello, Lee.

(In reply to <a href="show_bug.cgi?id=962792#c27">comment #27</a>)
<span class="quote">&gt; Has upstream commit b0a873eb been in every RHEL6 kernel, or was it
&gt; introduced by a particular errata?  I guess my question really is, is there
&gt; an older RHEL6 kernel that is not vulnerable?</span >

This issue was introduced by <a href="http://rhn.redhat.com/errata/RHSA-2011-0542.html">http://rhn.redhat.com/errata/RHSA-2011-0542.html</a>, and is present in all Red Hat Enterprise Linux 6 kernels starting with Red Hat Enterprise Linux 6.1 (kernel-2.6.32-131.0.15.el6).

Best regards,
--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c30" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c30">Comment 30</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 16:39:31 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hello, Tristan.

(In reply to <a href="show_bug.cgi?id=962792#c28">comment #28</a>)
<span class="quote">&gt; We have been playing with this exploit for a while now. I would like to know
&gt; if this exploit works for anyone running an i7/i5 range Intel CPU. For some
&gt; reason this sploit doesn't seem to work on those, which is a good thing for
&gt; me/us. However, I got somebody to try on an AMD system and it works there.
&gt; Can somebody enlighten me if the new Intel CPU have some form of protection
&gt; mechanism, AMD lacks ?</span >

It might be SMEP (Supervisor Mode Execution Protection). SMEP is enabled in Red Hat Enterprise Linux since version 6.2. Can you please be more specific in what happens when you run the exploit on the i7/i5 range Intel CPU? Is there any output (even from dmesg)?

Does &quot;grep smep /proc/cpuinfo&quot; print any result?

Best regards,
--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c31" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c31">Comment 31</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Murray McAllister</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 16:50:09 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Knowledgebase article for this issue: <a href="https://access.redhat.com/site/solutions/373743">https://access.redhat.com/site/solutions/373743</a>

</pre>
    </div>

    <div id="c32" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c32">Comment 32</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tristan Santore</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 17:46:02 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Petr,

As per request:

uname -r
2.6.32-358.6.1.el6.x86_64
semtex: semtex.c:81: main: Assertion `p = memmem(code, 1024, &amp;needle, 8)' failed.
Aborted

sestatus 
SELinux status:                 enabled
SELinuxfs mount:                /selinux
Current mode:                   enforcing
cpuinfo
excerpt:

flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat epb xsaveopt pln pts dts tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms

Regards,

Tristan

</pre>
    </div>

    <div id="c33" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c33">Comment 33</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tristan Santore</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 17:47:03 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Petr,

As per request:

uname -r
2.6.32-358.6.1.el6.x86_64
semtex: semtex.c:81: main: Assertion `p = memmem(code, 1024, &amp;needle, 8)' failed.
Aborted

sestatus 
SELinux status:                 enabled
SELinuxfs mount:                /selinux
Current mode:                   enforcing
cpuinfo
excerpt:

flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat epb xsaveopt pln pts dts tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms

So it appears smep is there and enabled.
Regards,

Tristan

</pre>
    </div>

    <div id="c34" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c34">Comment 34</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Joshua Baker-LePain</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 17:49:38 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Does this affect 32bit kernels as well as 64bit?  It's not specified anywhere, and the systemtap script from <a href="show_bug.cgi?id=962792#c13">comment 13</a> fails to build on 32bit:

$ stap -g -p 4 -m fix_CVE_2013_2094 fix-CVE-2013-2094.stp 
cc1: warnings being treated as errors
/tmp/stapvT7siX/fix_CVE_2013_2094_src.c: In function ‘function_sanitize_config’:
/tmp/stapvT7siX/fix_CVE_2013_2094_src.c:140: error: cast to pointer from integer of different size
make[1]: *** [/tmp/stapvT7siX/fix_CVE_2013_2094_src.o] Error 1
make: *** [_module_/tmp/stapvT7siX] Error 2
WARNING: kbuild exited with status: 2
Pass 4: compilation failed.  Try again with another '--vp 0001' option.

</pre>
    </div>

    <div id="c35" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c35">Comment 35</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 17:50:58 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c32">comment #32</a>)
<span class="quote">&gt; uname -r
&gt; 2.6.32-358.6.1.el6.x86_64
&gt; semtex: semtex.c:81: main: Assertion `p = memmem(code, 1024, &amp;needle, 8)'
&gt; failed.
&gt; Aborted</span >

Please try to build with -O2 -- gcc -O2 -o semtex semtex.c -- and rerun.

--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c36" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c36">Comment 36</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tristan Santore</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 17:54:03 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I would rather not mate, I did that yesterday, and it crashed the machine.
;-p

</pre>
    </div>

    <div id="c37" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c37">Comment 37</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">manuel wolfshant</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 19:18:37 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c34">comment #34</a>)
<span class="quote">&gt; Does this affect 32bit kernels as well as 64bit?  It's not specified
&gt; anywhere, and the systemtap script from <a href="show_bug.cgi?id=962792#c13">comment 13</a> fails to build on 32bit:</span >
[...]

The unmodified exploit failed on all my 32bit instances. I have tested on real iron ( HS20, Athlon XP 2200+, Athlon II 455 X3 ) and VMware WS 7. OTOH it worked on all 64bit instances ( Athlon X2 250, VMware WS 7, Intel Xeon X3440)

</pre>
    </div>

    <div id="c38" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c38">Comment 38</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Akemi Yagi</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 19:40:18 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c34">comment #34</a>)
<span class="quote">&gt; Does this affect 32bit kernels as well as 64bit?  It's not specified
&gt; anywhere, and the systemtap script from <a href="show_bug.cgi?id=962792#c13">comment 13</a> fails to build on 32bit:</span >

This KB article:

<a href="https://access.redhat.com/site/solutions/372873">https://access.redhat.com/site/solutions/372873</a>

refers to x86_64 only:

Environment

    Red Hat Enterprise Linux 6 up to kernel-2.6.32-358.6.1.el6, x86_64
    Red Hat MRG Realtime, up to kernel-rt-3.6.11-rt30.25.el6rt, x86_64

</pre>
    </div>

    <div id="c39" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c39">Comment 39</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Akemi Yagi</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 19:45:32 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">There is yet another way to mitigate the issue. That is to install kmod-tpe from ELRepo:

<a href="http://elrepo.org/tiki/kmod-tpe">http://elrepo.org/tiki/kmod-tpe</a>

&quot;This package provides the tpe kernel module. Trusted Path Execution (TPE) is a security feature that denies users from executing programs that are not owned by root, or are writable. This closes the door on a whole category of exploits where a malicious user tries to execute his or her own code to hack the system. Since this kernel module does not use any kind of ACLs, it works out of the box with no configuration.&quot;

To the best of my knowledge, this actually blocks the known exploit.

</pre>
    </div>

    <div id="c40" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c40">Comment 40</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Frank Ch. Eigler</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 19:54:06 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text"><span class="quote">&gt; &quot;This package provides the tpe kernel module. Trusted Path Execution (TPE)
&gt; is a security feature that denies users from executing programs that are not
&gt; owned by root, or are writable. [...]</span >

Would that do anything against exploits running via an interpreter like perl?

</pre>
    </div>

    <div id="c41" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c41">Comment 41</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Akemi Yagi</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 20:08:41 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c40">comment #40</a>)
<span class="quote">&gt; &gt; &quot;This package provides the tpe kernel module. Trusted Path Execution (TPE)
&gt; &gt; is a security feature that denies users from executing programs that are not
&gt; &gt; owned by root, or are writable. [...]
&gt; 
&gt; Would that do anything against exploits running via an interpreter like perl?</span >

Questions/comments regarding the TPE kernel module are best directed to the author/source at:

<a href="https://github.com/cormander/tpe-lkm">https://github.com/cormander/tpe-lkm</a>

</pre>
    </div>

    <div id="c42" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c42">Comment 42</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 20:27:44 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c34">comment #34</a>)
<span class="quote">&gt; Does this affect 32bit kernels as well as 64bit?</span >

Yes, both 32bit and 64bit kernels are affected but the publicly available exploit only targets x86_64 architecture.

<span class="quote">&gt; It's not specified
&gt; anywhere</span >

Unless explicitly specified, all architectures are affected.

<span class="quote">&gt; and the systemtap script from <a href="show_bug.cgi?id=962792#c13">comment 13</a> fails to build on 32bit:
&gt; 
&gt; $ stap -g -p 4 -m fix_CVE_2013_2094 fix-CVE-2013-2094.stp 
&gt; cc1: warnings being treated as errors
&gt; /tmp/stapvT7siX/fix_CVE_2013_2094_src.c: In function
&gt; ‘function_sanitize_config’:
&gt; /tmp/stapvT7siX/fix_CVE_2013_2094_src.c:140: error: cast to pointer from
&gt; integer of different size
&gt; make[1]: *** [/tmp/stapvT7siX/fix_CVE_2013_2094_src.o] Error 1
&gt; make: *** [_module_/tmp/stapvT7siX] Error 2
&gt; WARNING: kbuild exited with status: 2
&gt; Pass 4: compilation failed.  Try again with another '--vp 0001' option.</span >

I am very sorry for the trouble. I've updated the system script in <a href="show_bug.cgi?id=962792#c13">comment #13</a>, it should now work on both 32-bit and 64-bit kernels.

Best regards,
--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c43" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c43">Comment 43</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 20:30:01 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c38">comment #38</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=962792#c34">comment #34</a>)
&gt; &gt; Does this affect 32bit kernels as well as 64bit?  It's not specified
&gt; &gt; anywhere, and the systemtap script from <a href="show_bug.cgi?id=962792#c13">comment 13</a> fails to build on 32bit:
&gt; 
&gt; This KB article:
&gt; 
&gt; <a href="https://access.redhat.com/site/solutions/372873">https://access.redhat.com/site/solutions/372873</a>
&gt; 
&gt; refers to x86_64 only:
&gt; 
&gt; Environment
&gt; 
&gt;     Red Hat Enterprise Linux 6 up to kernel-2.6.32-358.6.1.el6, x86_64
&gt;     Red Hat MRG Realtime, up to kernel-rt-3.6.11-rt30.25.el6rt, x86_64</span >

Please see the referenced KB article from <a href="show_bug.cgi?id=962792#c31">comment #31</a>. The article you point to only lists some of the affected configurations, not all.

</pre>
    </div>

    <div id="c44" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c44">Comment 44</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 20:31:28 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c37">comment #37</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=962792#c34">comment #34</a>)
&gt; &gt; Does this affect 32bit kernels as well as 64bit?  It's not specified
&gt; &gt; anywhere, and the systemtap script from <a href="show_bug.cgi?id=962792#c13">comment 13</a> fails to build on 32bit:
&gt; [...]
&gt; 
&gt; The unmodified exploit failed on all my 32bit instances. I have tested on
&gt; real iron ( HS20, Athlon XP 2200+, Athlon II 455 X3 ) and VMware WS 7. OTOH
&gt; it worked on all 64bit instances ( Athlon X2 250, VMware WS 7, Intel Xeon
&gt; X3440)</span >

The original &quot;semtex&quot; exploit works only on x86_64 systems, but generally this issue does affect x86 as well.

</pre>
    </div>

    <div id="c45" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c45">Comment 45</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Johnny Hughes</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 20:43:52 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">The CentOS team has released an interim kernel that is the latest EL6 kernel plus only the patch in <a href="show_bug.cgi?id=962792#c0">comment 0</a> and it is available here:

<a href="http://people.centos.org/hughesjr/c6kernel/2.6.32-358.6.1.el6.cve20132094/">http://people.centos.org/hughesjr/c6kernel/2.6.32-358.6.1.el6.cve20132094/</a>

</pre>
    </div>

    <div id="c46" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c46">Comment 46</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Vadim Raskhozhev</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 21:04:24 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c45">comment #45</a>)
<span class="quote">&gt; The CentOS team has released an interim kernel that is the latest EL6 kernel
&gt; plus only the patch in <a href="show_bug.cgi?id=962792#c0">comment 0</a> and it is available here:
&gt; 
&gt; <a href="http://people.centos.org/hughesjr/c6kernel/2.6.32-358.6.1.el6.cve20132094/">http://people.centos.org/hughesjr/c6kernel/2.6.32-358.6.1.el6.cve20132094/</a></span >

$ gcc -o semtex -O2 semtex.c &amp;&amp; ./semtex ; cat /etc/redhat-release ; uname -r
semtex: semtex.c:51: sheep: Assertion `!close(fd)' failed.
Aborted
CentOS release 6.4 (Final)
2.6.32-358.6.1.el6.cve20132094.x86_64

</pre>
    </div>

    <div id="c47" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c47">Comment 47</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 21:42:39 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c36">comment #36</a>)
<span class="quote">&gt; I would rather not mate, I did that yesterday, and it crashed the machine.
&gt; ;-p</span >

The only difference -O2 parameter brings is that the mov instructions with the 64-bit displacements and/or immediate operands are used instead of building the 64bit values on the stack when -O2 parameter is not used.

In the former case the values are consecutive in memory and can be searched in memory directly. In the latter case this is not possible and thus memmem fails.

The crash you are seeing when building with -O2 might very well be SMEP (because of the access right violation page fault) when transferring control to userspace via int 0x4.

Best regards,
--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c48" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c48">Comment 48</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Nux</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-15 22:51:26 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c40">comment #40</a>)
<span class="quote">&gt; &gt; &quot;This package provides the tpe kernel module. Trusted Path Execution (TPE)
&gt; &gt; is a security feature that denies users from executing programs that are not
&gt; &gt; owned by root, or are writable. [...]
&gt; 
&gt; Would that do anything against exploits running via an interpreter like perl?</span >

AFAIK it will work against `./test.pl` if test.pl is in a 777 dir or not owned by root. It does not protect against `perl test.pl`, though.
It would have helped perfectly in this case.

</pre>
    </div>

    <div id="c49" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c49">Comment 49</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">masanari iida</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 02:41:56 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c31">comment #31</a>)
<span class="quote">&gt; Knowledgebase article for this issue:
&gt; <a href="https://access.redhat.com/site/solutions/373743">https://access.redhat.com/site/solutions/373743</a></span >

Reporting minor issue.

In case of RHEL6.1(2.6.32-131.0.15), perf_swevent_init() exist 
in kernel/perf_event.c.  So the sample systemtap script in KB
doesn't work.

RHEL6.2 or later, the perf_swevent_init() exist in kernel/events/core.c.

Why don't we just specify kernel.function(&quot;perf_swevent_init&quot;)
without code path?

</pre>
    </div>

    <div id="c50" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c50">Comment 50</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 07:38:57 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Masanari-san,

(In reply to <a href="show_bug.cgi?id=962792#c49">comment #49</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=962792#c31">comment #31</a>)
&gt; &gt; Knowledgebase article for this issue:
&gt; &gt; <a href="https://access.redhat.com/site/solutions/373743">https://access.redhat.com/site/solutions/373743</a>
&gt; 
&gt; Reporting minor issue.
&gt; 
&gt; In case of RHEL6.1(2.6.32-131.0.15), perf_swevent_init() exist 
&gt; in kernel/perf_event.c.  So the sample systemtap script in KB
&gt; doesn't work.
&gt; 
&gt; RHEL6.2 or later, the perf_swevent_init() exist in kernel/events/core.c.
&gt; 
&gt; Why don't we just specify kernel.function(&quot;perf_swevent_init&quot;)
&gt; without code path?</span >

thank you very much for your report! The issue should be fixed now.

Best regards,
--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c53" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c53">Comment 53</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Rados Gregoric</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 10:15:22 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">How long does it take to complete script?

Tried script from #13 and also from: 
<a href="https://access.redhat.com/site/solutions/373743">https://access.redhat.com/site/solutions/373743</a>
(slightly different)

but stap command never ends

# stap -g sanitize1.stp

# ps aux | grep stap
root      9666  0.0  2.1 373452 84460 pts/0    S+   11:34   0:01 stap -g sanitize1.stp
root      9878  0.0  0.0 123588   792 pts/0    Sl+  11:34   0:00 /usr/libexec/systemtap/stapio -R stap_fa58fdb9be5354a95c81bd681b6795e3_9878

# uname -r
2.6.32-220.17.1.el6.x86_64

Thanks

(In reply to <a href="show_bug.cgi?id=962792#c13">comment #13</a>)
<span class="quote">&gt; To mitigate the issue:
&gt; 
&gt; 
&gt; 3) Run the &quot;stap -g [filename-from-step-1].stp&quot; command as root.</span >
&gt;

</pre>
    </div>

    <div id="c54" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c54">Comment 54</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Jesper Brouer</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 11:01:11 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c50">comment #50</a>)
<span class="quote">&gt; thank you very much for your report! The issue should be fixed now.</span >

Just to spell it out, the work-around systemtap script that disables the exploit runtime is available here:

  <a href="https://access.redhat.com/site/solutions/373743">https://access.redhat.com/site/solutions/373743</a>


And systemtap dependency install instructions here:
 <a href="https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/SystemTap_Beginners_Guide/using-systemtap.html">https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/SystemTap_Beginners_Guide/using-systemtap.html</a>

</pre>
    </div>

    <div id="c55" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c55">Comment 55</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 11:12:30 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hello, Rados.

(In reply to <a href="show_bug.cgi?id=962792#c53">comment #53</a>)
<span class="quote">&gt; How long does it take to complete script?</span >

<span class="quote">&gt; Tried script from #13 and also from: 
&gt; <a href="https://access.redhat.com/site/solutions/373743">https://access.redhat.com/site/solutions/373743</a>
&gt; (slightly different)</span >

We try to keep all the sources that contain the script in sync.

<span class="quote">&gt; 
&gt; but stap command never ends</span >

What you see is correct behaviour. The script does not end without being forcibly stopped when ran the way presented.

If you want to detach from the running script, please use the -F option as follows:

stap -F -g sanitize1.stp

Best regards,
--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c56" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c56">Comment 56</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tobias Dussa</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 13:04:10 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hi,

(In reply to <a href="show_bug.cgi?id=962792#c52">comment #52</a> <a class="bz_bug_link
          
          bz_status_CLOSED  bz_closed
                              
    "
   title="CLOSED ERRATA - CVE-2013-2094 kernel: perf_swevent_enabled array out-of-bound access"
   href="show_bug.cgi?id=962792#c52">https://bugzilla.redhat.com/show_bug.cgi?id=962792#c52</a>)
<span class="quote">&gt; We are working on testing the updated packages to correct this issue in Red Hat &gt; Enterprise Linux 6 and will release them ASAP.</span >

Is there any estimate at all as to what &quot;ASAP&quot; might mean?  Are we talking hours, days, weeks?

THX &amp; Cheers,
Toby.

</pre>
    </div>

    <div id="c57" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c57">Comment 57</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Shawn Rhode</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 13:33:30 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I was testing the original, in the wild exploit on various systems and noticed that attempting to perform this on a RHEL6 x86_64 domU (Xen Hypervisor, full PV) caused that domU to panic.  The same binary worked on bare metal RHEL6 x86-64, so I know the binary works and this is specific to being a domU.

This is the flags on the CPUs in cpuinfo:
flags           : fpu de tsc msr pae cx8 cmov pat clflush mmx fxsr sse sse2 ss ht syscall nx lm rep_good aperfmperf unfair_spinlock pni ssse3 cx16 sse4_1 hypervisor lahf_lm dts 

Shawn

</pre>
    </div>

    <div id="c58" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c58">Comment 58</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 13:39:44 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hello, Tobias.

(In reply to <a href="show_bug.cgi?id=962792#c56">comment #56</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=962792#c52">comment #52</a>
&gt; <a class="bz_bug_link
          
          bz_status_CLOSED  bz_closed
                              
    "
   title="CLOSED ERRATA - CVE-2013-2094 kernel: perf_swevent_enabled array out-of-bound access"
   href="show_bug.cgi?id=962792#c52">https://bugzilla.redhat.com/show_bug.cgi?id=962792#c52</a>)
&gt; &gt; We are working on testing the updated packages to correct this issue in Red Hat &gt; Enterprise Linux 6 and will release them ASAP.
&gt; 
&gt; Is there any estimate at all as to what &quot;ASAP&quot; might mean?  Are we talking
&gt; hours, days, weeks?</span >

Hour(s). We just started the process of releasing the kernel errata for Red Hat Enterprise Linux 6.

Best regards,
--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c59" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c59">Comment 59</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tobias Dussa</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 13:43:26 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Petr,

thanks a lot for the quick reply.

Cheers,
Toby.

</pre>
    </div>

    <div id="c60" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c60">Comment 60</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">errata-xmlrpc</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 15:24:38 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">This issue has been addressed in following products:

  Red Hat Enterprise Linux 6

Via RHSA-2013:0830 <a href="https://rhn.redhat.com/errata/RHSA-2013-0830.html">https://rhn.redhat.com/errata/RHSA-2013-0830.html</a>

</pre>
    </div>

    <div id="c61" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c61">Comment 61</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 16:47:06 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hello, Shawn.

(In reply to <a href="show_bug.cgi?id=962792#c57">comment #57</a>)
<span class="quote">&gt; I was testing the original, in the wild exploit on various systems and
&gt; noticed that attempting to perform this on a RHEL6 x86_64 domU (Xen
&gt; Hypervisor, full PV) caused that domU to panic.  The same binary worked on
&gt; bare metal RHEL6 x86-64, so I know the binary works and this is specific to
&gt; being a domU.</span >

Yes, Xen PV DomUs don't have direct access to harware IDT (Interrupt descriptor table) and use hypercalls to register virtual IDT entries with the hypervisor.

The original &quot;semtex&quot; exploit expects IDT to be in (to point to) the DomU kernel memory region and not the Xen hypervisor memory region and that is not true for PV domains. The result is invalid memory access and DomU crash.

The exploit should work as is in HVM domain.

Please note that the security issue could still be exploited on PV domains, but not with the public exploit (except for the user triggered DomU crash).

Best regards,
--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c62" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c62">Comment 62</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Shawn Rhode</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 19:12:32 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Thank you for the response Petr.  That makes complete sense.  Will the fix that has been made available prevent the crash from occurring or does that issue still need to be addressed?  Even though it doesn't give a user root access, having the server crash causes a DOS effect to the end server.

</pre>
    </div>

    <div id="c63" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c63">Comment 63</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Yves-Alexis Perez</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-16 19:58:31 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c36">comment #36</a>)
<span class="quote">&gt; I would rather not mate, I did that yesterday, and it crashed the machine.
&gt; ;-p</span >

That's because SMEP only prevents the code execution by the kernel in userland address space.

The vulnerability is triggered by overwriting the interrupt handler for int 0x4 to the shellcode address, then calling int 0x4. With SMEP, the last step fails but the IDT overwrite is not prevented.

So you now have an interrupt handler address which will trigger SMEP each time it happens and indeed it's not pretty: it page faults, the exception is handled in the kernel, another overflow happens, page faults etc.

</pre>
    </div>

    <div id="c64" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c64">Comment 64</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-17 06:52:12 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hello, Shawn.

(In reply to <a href="show_bug.cgi?id=962792#c62">comment #62</a>)
<span class="quote">&gt; Thank you for the response Petr.  That makes complete sense.  Will the fix
&gt; that has been made available prevent the crash from occurring or does that
&gt; issue still need to be addressed?  Even though it doesn't give a user root
&gt; access, having the server crash causes a DOS effect to the end server.</span >

The fix addresses the DoS effect you are seeing too.

Best regards,
--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c65" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c65">Comment 65</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">errata-xmlrpc</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-17 15:17:44 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">This issue has been addressed in following products:

  Red Hat Enterprise Linux 6.3 EUS - Server Only

Via RHSA-2013:0832 <a href="https://rhn.redhat.com/errata/RHSA-2013-0832.html">https://rhn.redhat.com/errata/RHSA-2013-0832.html</a>

</pre>
    </div>

    <div id="c68" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c68">Comment 68</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Peccary Chen</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-19 03:41:57 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Can kernel ASLR prevent this exploit?

</pre>
    </div>

    <div id="c69" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c69">Comment 69</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Petr Matousek</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-19 08:33:26 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=962792#c68">comment #68</a>)
<span class="quote">&gt; Can kernel ASLR prevent this exploit?</span >

Kernel ASLR cannot prevent this bug from being exploited.

Best regards,
--
Petr Matousek / Red Hat Security Response Team

</pre>
    </div>

    <div id="c70" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c70">Comment 70</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">errata-xmlrpc</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-20 16:26:38 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">This issue has been addressed in following products:

  Red Hat Enterprise Linux 6.1 EUS - Server Only

Via RHSA-2013:0841 <a href="https://rhn.redhat.com/errata/RHSA-2013-0841.html">https://rhn.redhat.com/errata/RHSA-2013-0841.html</a>

</pre>
    </div>

    <div id="c71" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c71">Comment 71</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">errata-xmlrpc</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-20 16:28:38 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">This issue has been addressed in following products:

  Red Hat Enterprise Linux 6.2 EUS - Server Only

Via RHSA-2013:0840 <a href="https://rhn.redhat.com/errata/RHSA-2013-0840.html">https://rhn.redhat.com/errata/RHSA-2013-0840.html</a>

</pre>
    </div>

    <div id="c72" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c72">Comment 72</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">errata-xmlrpc</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-05-20 16:59:37 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">This issue has been addressed in following products:

  MRG for RHEL-6 v.2

Via RHSA-2013:0829 <a href="https://rhn.redhat.com/errata/RHSA-2013-0829.html">https://rhn.redhat.com/errata/RHSA-2013-0829.html</a>

</pre>
    </div>

    <div id="c80" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=962792#c80">Comment 80</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Wade Mealing</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-08-04 04:06:00 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Changing <a href="show_bug.cgi?id=962792#c78">comment #78</a> to private, don't need adult links/spam from bz entries.

</pre>
    </div>


  <script>
$(document).ready(function() {
  var mysel = document.getElementsByClassName('flag_type-415')[0];
  var relnotes = document.getElementById('cf_release_notes');
  if ( mysel && relnotes &&
      relnotes.value != '' &&
      relnotes.value != cf_doc_type_text[document.getElementById('cf_doc_type').value] &&
      mysel.options[mysel.selectedIndex].value != '+'
    )
      document.getElementById('cf_doc_warn').innerHTML = '<div class="warning "><b>Warning: Doc Text is not yet verified as correct</b></div>';
});
</script>

</td>
<td>
</td>
</tr></table>
  </div>

    <hr><div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=962792&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=962792" title="Format For Printing"><i class="fa fa-print"></i></a></li>
    <li><a href="show_bug.cgi?ctype=xml&amp;id=962792" title="Export as XML"><i class="far fa-file-excel"></i></a></li>
    <li><a href="enter_bug.cgi?cloned_bug_id=962792" title="Clone This Bug"><i class="fa fa-clone"></i></a></li>
    <li>
      <a href="enter_bug.cgi?cloned_bug_id=962792&lite=1" title="Copy is a lite weight clone that only copies the summary &amp; description">
       <i class="far fa-clone"></i>
      </a>
    </li><li>
  <a href="buglist.cgi?bug_id=962792&amp;bug_id_type=anddependson&amp;format=tvp" title="TreeView+">
    <i class="fa fa-tree"></i>
  </a>
</li>
    <li>
      <a href="#" title="Top of page">
        <i class="fa fa-arrow-up" aria-hidden="true"></i>
      </a>
    </li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li class="form">
    
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>
<script type="text/javascript">
function dt_submit() {
  var tables = $.fn.dataTable.tables( { visible: true, api: true } );
  $.each(tables.context, function() {
    var $myform = this.nTable.closest('form');

    // Checked checkboxes
    $.each(this.oInstance.$('input:checked'), function() {
      add_hidden(this.name, this.value, $myform)
    });

    // Inputs in selected rows
    $.each(this.oInstance.$('tr.selected'), function() {
      $(this).find('input').each( function() {
        add_hidden(this.name, this.value, $myform)
      });
    });

    // select boxes
    $.each(this.oInstance.$('select'), function() {
      if(($(this).val()!=="") && ($(this).val() !== 0)) {
        add_hidden(this.name, this.value, $myform);
      }
    });
  });
}

function add_hidden(nm, val, $frm) {
        $('<input />').attr('type', 'hidden')
          .attr('name', nm)
          .attr('value', val)
          .appendTo($frm);
}

$(document).ready(function() {
    $('form').submit(function( event ) {
        dt_submit();
        if( $(this).attr('id') === 'changeform') {
          return(validateEnterBug(this));
        }
    });
});

if (window.self !== window.top) {
    $('#header').addClass('bz_default_hidden');
    $('#footer').addClass('bz_default_hidden');
    $('.navigation').addClass('bz_default_hidden');
    $('body').css('background-image', 'none');
}
</script><script type="text/javascript">
$(document).ready(function() {
    $('select').not('.custom_search_condition select, #member_template select, #available_columns, #p2_component, #select_user_verify_class, #inclusion_to_remove, #exclusion_to_remove, #cc, #hide, #ack_col_edit #show, .noselectize, #j_top').each(function() {
        if(! $(this).hasClass('selectized')) {
            $(this).selectize({
                plugins: ['remove_button', 'minimum_search_length', 'extra_keys_control', 'related_fields', 'load_from_js'],
                selectOnTab: true,
                maxOptions: 'nolimit',
                minimum_search_length: 2,
                render: {
                    option: function(item, escape) {
                        var classes = "option";
                        var selected = this.items.indexOf(item.value) !== -1;
                        if(item.disabled) {
                            classes = classes + " bz_default_hidden" ;
                        }

                        return '<div class="' +  classes  + '" title="' + escape(item.title) + '" id="' + escape(item.id) + '" data-value="' + escape(item.value) + '">' +
                                    '<span>' + escape(item.text) + '</span>' +
                                '</div>';
                    }
                },
            });
        }
    });
});
</script>
  </body>
</html>