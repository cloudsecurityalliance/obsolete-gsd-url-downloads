<!DOCTYPE html>
<html lang="en">

  <head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <!-- Begin Jekyll SEO tag v2.7.1 -->
<title>Analyzing PHPKB v9: Part two | Antonio Cannito</title>
<meta name="generator" content="Jekyll v3.9.0" />
<meta property="og:title" content="Analyzing PHPKB v9: Part two" />
<meta name="author" content="Antonio" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="The second part of a series where I will talk about vulnerabilities found in a knowledge-base software written in PHP. Vulnerabilities analyzed: Cross-Site Scripting." />
<meta property="og:description" content="The second part of a series where I will talk about vulnerabilities found in a knowledge-base software written in PHP. Vulnerabilities analyzed: Cross-Site Scripting." />
<link rel="canonical" href="https://antoniocannito.it/phpkb2" />
<meta property="og:url" content="https://antoniocannito.it/phpkb2" />
<meta property="og:site_name" content="Antonio Cannito" />
<meta property="og:type" content="article" />
<meta property="article:published_time" content="2019-03-27T00:00:00+00:00" />
<meta name="twitter:card" content="summary" />
<meta property="twitter:title" content="Analyzing PHPKB v9: Part two" />
<script type="application/ld+json">
{"description":"The second part of a series where I will talk about vulnerabilities found in a knowledge-base software written in PHP. Vulnerabilities analyzed: Cross-Site Scripting.","url":"https://antoniocannito.it/phpkb2","@type":"BlogPosting","headline":"Analyzing PHPKB v9: Part two","dateModified":"2019-03-27T00:00:00+00:00","datePublished":"2019-03-27T00:00:00+00:00","mainEntityOfPage":{"@type":"WebPage","@id":"https://antoniocannito.it/phpkb2"},"author":{"@type":"Person","name":"Antonio"},"@context":"https://schema.org"}</script>
<!-- End Jekyll SEO tag -->


  <!-- CSS -->
  <link rel="stylesheet" href="/assets/main.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Libre+Baskerville:400,400i,700">

  <!-- Favicon -->
  <link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon-16x16.png">
  <link rel="apple-touch-icon" sizes="180x180" href="/assets/apple-touch-icon.png">

  <!-- RSS -->
  <link type="application/atom+xml" rel="alternate" href="https://antoniocannito.it/feed.xml" title="Antonio Cannito" />

  <!-- Google Analytics-->
  
  <script>
  window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
  ga('create', 'UA—XXXXXXXX-X', 'auto');
  ga('send', 'pageview');
</script>
<script async src='https://www.google-analytics.com/analytics.js'></script>

  
</head>


  <body>

    <nav class="nav">
  <div class="nav-container">
    <a href="/">
      <h2 class="nav-title">Antonio Cannito</h2>
    </a>
    <ul>
      <li><a href="/">Home</a></li>
      <li><a href="https://it.linkedin.com/in/antonio-cannito">Linkedin</a></li>
            <li><a href="https://github.com/nitokhantonio">Github</a></li>
      <li><a href="/pgp/">PGP Key</a></li>
    </ul>
  </div>
</nav>


    <main>
      <div class="post">
  <div class="post-info">
    <span>Written by</span>
    
        Antonio
    

    
      <br>
      <span>on&nbsp;</span><time datetime="2019-03-27 00:00:00 +0000">March 27, 2019</time>
    
  </div>

  <h1 class="post-title">Analyzing PHPKB v9: Part two</h1>
  <div class="post-line"></div>

  <p>This article has been split into three parts; other parts can be found below:</p>

<p>Part 1: <a href="/phpkb1">Part 1</a></p>

<p>Part 3: <a href="/phpkb3">Part 3</a></p>

<p>UPDATE: the vulnerabilities have been fixed in PHPKB v9 P1-202005.</p>

<h2 id="reflected-cross-site-scripting-when-editing-a-custom-field-cve-2020-10462">Reflected Cross-Site Scripting when editing a custom field (CVE-2020-10462)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/edit-field.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in as a Superuser;</li>
  <li>go under “articles” and then on “custom fields”;</li>
  <li>click on “add new”, fill random parameters and click on “save custom field”;</li>
  <li>select the “custom field” and click on “edit”.</li>
</ul>

<p>The vulnerability lies in the &amp;p= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/edit-field.php?id=2&amp;p="'/&gt;&lt;marquee/onstart=confirm(1)&gt;</code></p>

<p><img src="/assets/1.png" alt="XSS 1" title="XSS 1" /></p>

<h2 id="reflected-cross-site-scripting-when-editing-a-template-cve-2020-10463">Reflected Cross-Site Scripting when editing a template (CVE-2020-10463)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/edit-template.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in as a Superuser;</li>
  <li>go under “articles” and then on “article templates”;</li>
  <li>click on “add new” fill random parameters and click on “save article template”;</li>
  <li>select the “article template” and click on “edit”.</li>
</ul>

<p>The vulnerability lies in the &amp;p= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/edit-template.php?id=1&amp;p="'/&gt;&lt;marquee/onstart=confirm(1)&gt;</code></p>

<p><img src="/assets/2.png" alt="XSS 2" title="XSS 2" /></p>

<h2 id="reflected-cross-site-scripting-when-editing-an-article-cve-2020-10464">Reflected Cross-Site Scripting when editing an article (CVE-2020-10464)</h2>
<p>Exploitable by: Superuser/Editor</p>

<p>Vulnerable file: admin/edit-article.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in as a Superuser/Editor;</li>
  <li>go under “articles” and then on “add article”;</li>
  <li>fill random parameters and click on “save article”;</li>
  <li>select the “article” and click on “edit”.</li>
</ul>

<p>The vulnerability lies in the &amp;p= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/edit-article.php?aid=1&amp;p="'/&gt;&lt;marquee/onstart=confirm(1)&gt;</code></p>

<p><img src="/assets/3.png" alt="XSS 3" title="XSS 3" /></p>

<h2 id="reflected-cross-site-scripting-when-editing-a-category-cve-2020-10465">Reflected Cross-Site Scripting when editing a category (CVE-2020-10465)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/edit-category.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in as a Superuser;</li>
  <li>go under “categories” and click on “add new”;</li>
  <li>fill random parameters and click “save category”;</li>
  <li>click on manage categories”;</li>
  <li>slect the “category” and click on “edit”.</li>
</ul>

<p>The vulnerability lies in the &amp;p= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/edit-category.php?id=1&amp;p=ciao"/&gt;&lt;marquee/onstart=confirm("1")&gt;</code></p>

<p><img src="/assets/4.png" alt="XSS 4" title="XSS 4" /></p>

<h2 id="reflected-cross-site-scripting-when-editing-a-glossary-term-cve-2020-10466">Reflected Cross-Site scripting when editing a glossary term (CVE-2020-10466)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/edit-glossary.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in as a Superuser;</li>
  <li>go under “glossary” and click on “add new”;</li>
  <li>fill random parameters and click “save”;</li>
  <li>click on “manage”;</li>
  <li>click on “edit”.</li>
</ul>

<p>The vulnerability lies in the &amp;p= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/edit-glossary.php?id=5&amp;p= "'/&gt;&lt;marquee/onstart=confirm(1)&gt;</code></p>

<p><img src="/assets/5.png" alt="XSS 5" title="XSS 5" /></p>

<h2 id="reflected-cross-site-scripting-when-editing-a-comment-cve-2020-10467">Reflected Cross-Site Scripting when editing a comment (CVE-2020-10467)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/edit-comment.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>post a comment on a random article;</li>
  <li>log-in as a Superuser;</li>
  <li>go under “comments”;</li>
  <li>click on “pending”;</li>
  <li>select the “comment” and click on “edit”.</li>
</ul>

<p>The vulnerability lies in the &amp;p= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/edit-comment.php?cid=1&amp;p="'/&gt;&lt;marquee/onstart=confirm("XSS+HERE")&gt;</code></p>

<p><img src="/assets/6.png" alt="XSS 6" title="XSS 6" /></p>

<h2 id="reflected-cross-site-scripting-when-editing-a-news-article-cve-2020-10468">Reflected Cross-Site Scripting when editing a news article (CVE-2020-10468)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/edit-news.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in a Superuser;</li>
  <li>go under “news” and click on “add new”;</li>
  <li>fill random parameters and click on “save”;</li>
  <li>click on “manage”;</li>
  <li>click on “edit”.</li>
</ul>

<p>The vulnerability lies in the &amp;p= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/edit-news.php?id=6&amp;p="'/&gt;&lt;marquee/onstart=confirm(1)&gt;</code></p>

<p><img src="/assets/7.png" alt="XSS 7" title="XSS 7" /></p>

<h2 id="reflected-cross-site-scripting-when-editing-a-department-cve-2020-10469">Reflected Cross-Site Scripting when editing a department (CVE-2020-10469)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/manage-departments.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in as a Superuser;</li>
  <li>go under “tickets” and click on “departments”;</li>
  <li>fill random parameters and click on “save”;</li>
  <li>click on “edit”.</li>
</ul>

<p>The vulnerability lies in the &amp;sort= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/manage-departments.php?sort="'/&gt;&lt;marquee/onstart=confirm(1)&gt;&amp;order=</code></p>

<p><img src="/assets/8.png" alt="XSS 8" title="XSS 8" /></p>

<h2 id="reflected-cross-site-scripting-when-sorting-custom-fields-cve-2020-10470">Reflected Cross-Site Scripting when sorting custom fields (CVE-2020-10470)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/manage-fields.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in as a Superuser;</li>
  <li>go under “articles” and click on “custom fields”;</li>
  <li>add a new “field” and then click on the dropbox, used to show 10 or 25 or 50 or 100 results.</li>
</ul>

<p>The vulnerability lies in the &amp;sort= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/manage-fields.php?sort="'/&gt;&lt;marquee/onstart=confirm(1)&gt;&amp;order=</code></p>

<p><img src="/assets/9.png" alt="XSS 9" title="XSS 9" /></p>

<h2 id="reflected-cross-site-scripting-when-sorting-articles-cve-2020-10471">Reflected Cross-Site Scripting when sorting articles (CVE-2020-10471)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/manage-articles.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in as a Superuser;</li>
  <li>go under “articles” and click on “my articles”;</li>
  <li>add a new “article” and then click on the dropbox, used to show 10 or 25 or 50 or 100 results.</li>
</ul>

<p>The vulnerability lies in the &amp;sort= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/manage-articles.php?sort="'/&gt;&lt;marquee/onstart=confirm(1)&gt;</code></p>

<p><img src="/assets/10.png" alt="XSS 10" title="XSS 10" /></p>

<h2 id="reflected-cross-site-scripting-when-sorting-templates-cve-2020-10472">Reflected Cross-Site Scripting when sorting templates (CVE-2020-10472)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/manage-templates.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in as a Superuser;</li>
  <li>go under “articles” and click on “article templates”;</li>
  <li>add a new field and then click on the dropbox, used to show 10 or 25 or 50 or 100 results.</li>
</ul>

<p>The vulnerability lies in the &amp;sort= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/manage-templates.php?sort="'/&gt;&lt;marquee/onstart=confirm(1)&gt;</code></p>

<p><img src="/assets/11.png" alt="XSS 11" title="XSS 11" /></p>

<h2 id="reflected-cross-site-scripting-when-deleting-a-category-cve-2020-10473">Reflected Cross-Site Scripting when deleting a category (CVE-2020-10473)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/manage-categories.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in as a Superuser;</li>
  <li>go under “categories” and click on “add new”;</li>
  <li>fill random parameters and click on “save category”;</li>
  <li>click on “manage categories”;</li>
  <li>click on “delete category”.</li>
</ul>

<p>The vulnerability lies in the &amp;sort= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/manage-categories.php?sort="'/&gt;&lt;marquee/onstart=confirm("XSS")&gt;&amp;order=&amp;status=public&amp;action=status&amp;status=public&amp;id=1&amp;action=delete</code></p>

<p><img src="/assets/12.png" alt="XSS 12" title="XSS 12" /></p>

<h2 id="reflected-cross-site-scripting-when-deleting-a-comment-cve-2020-10474">Reflected Cross-Site Scripting when deleting a comment (CVE-2020-10474)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/manage-comments.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>post a comment on a random article;</li>
  <li>log-in as a Superuser;</li>
  <li>go under “comments”;</li>
  <li>click on “pending”;</li>
  <li>select the “comment” and click on “delete”.</li>
</ul>

<p>The vulnerability lies in the &amp;sort= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/manage-comments.php?status=pending&amp;cid=2&amp;action=del&amp;status=pending&amp;sort="'/&gt;&lt;marquee/onstart=confirm(1)&gt;&amp;order=</code></p>

<p><img src="/assets/13.png" alt="XSS 13" title="XSS 13" /></p>

<h2 id="reflected-cross-site-scripting-when-deleting-a-ticket-cve-2020-10475">Reflected Cross-Site Scripting when deleting a ticket (CVE-2020-10475)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/manage-tickets.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>ask a question on the PHPKB website;</li>
  <li>log-in as a Superuser;</li>
  <li>go under “tickets” and click on “delete”.</li>
</ul>

<p>The vulnerability lies in the &amp;sort= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/manage-tickets.php?sort="'/&gt;&lt;marquee/onstart=confirm(1)&gt;</code></p>

<p><img src="/assets/14.png" alt="XSS 14" title="XSS 14" /></p>

<h2 id="reflected-cross-site-scripting-when-editing-a-glossary-term-2-cve-2020-10476">Reflected Cross-Site Scripting when editing a glossary term #2 (CVE-2020-10476)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: manage-glossary.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in as a Superuser;</li>
  <li>go under “glossary” and click on “add new”;</li>
  <li>fill random parameters and click “save”;</li>
  <li>click on “edit”;</li>
  <li>click on “save”.</li>
</ul>

<p>The vulnerability lies in the &amp;sort= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/manage-glossary.php?sort="'/&gt;&lt;marquee/onstart=confirm(1)&gt;&amp;order=</code></p>

<p><img src="/assets/15.png" alt="XSS 15" title="XSS 15" /></p>

<h2 id="reflected-cross-site-scripting-when-editing-a-news-article-cve-2020-10477">Reflected Cross-Site Scripting when editing a news article (CVE-2020-10477)</h2>
<p>Exploitable by: Superuser</p>

<p>Vulnerable file: admin/manage-news.php</p>

<p>Steps required in order to find the injection point:</p>
<ul>
  <li>log-in as a Superuser;</li>
  <li>go under “news” and click on “add new”;</li>
  <li>fill random parameters and click “save”;</li>
  <li>click on “edit”;</li>
  <li>click on “save”.</li>
</ul>

<p>The vulnerability lies in the &amp;sort= parameter; proof of concept:</p>

<p><code class="language-plaintext highlighter-rouge">[PHPKB]/admin/manage-news.php?sort="'/&gt;&lt;marquee/onstart=confirm(1)&gt;&amp;order=</code></p>

<p><img src="/assets/16.png" alt="XSS 16" title="XSS 16" /></p>

<p>That’s all for part two!</p>

</div>



<div class="pagination">
  
    <a href="/phpkb3" class="left arrow">&#8592;</a>
  
  
    <a href="/phpkb1" class="right arrow">&#8594;</a>
  

  <a href="#" class="top">Top</a>
</div>
    </main>

    <footer>
  <span>
    2019 - <time datetime="2021-06-18 19:25:00 +0000">2021 </time>Antonio Cannito &copy;
  </span>
</footer>

  </body>
</html>
