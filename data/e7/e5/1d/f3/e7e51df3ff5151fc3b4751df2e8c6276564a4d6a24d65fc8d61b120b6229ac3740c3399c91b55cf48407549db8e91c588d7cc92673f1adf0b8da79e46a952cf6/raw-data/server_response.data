<!DOCTYPE html>

<!--[if lt IE 7]>    <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>     <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>     <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->
<head>
<meta charset="utf-8"/>
<meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"/>
<title>pam-u2f</title>
<meta content="" name="description"/>
<meta content="width=device-width, initial-scale=1" name="viewport"/>
<link href="/vendor/font-awesome/css/font-awesome.min.css" rel="stylesheet"/>
<link href="/css/bootstrap.min.css" rel="stylesheet"/>
<link href="/css/main.css" rel="stylesheet"/>
<link href="/css/pygments.css" rel="stylesheet"/>
<link href="/css/asciidoc.css" rel="stylesheet"/>
<link href="/favicon-192x192.png" rel="icon" sizes="192x192"/>
<link href="Releases/atom.xml" rel="alternate" title="Releases" type="application/atom+xml">
<script src="/vendor/modernizr/modernizr.js"></script>
<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer','GTM-KRP726L');</script>
<!-- End Google Tag Manager -->
</link></head>
<body>
<!-- Google Tag Manager (noscript) -->
<noscript><iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-KRP726L" style="display:none;visibility:hidden" width="0"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
<!--[if lt IE 7]>
      <p class="browsehappy">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
    <![endif]-->
<div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
<div class="container">
<div class="navbar-header">
<button class="navbar-toggle" data-target=".navbar-collapse" data-toggle="collapse" type="button">
<span class="sr-only">Toggle navigation</span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
<span class="icon-bar"></span>
</button>
<a class="navbar-brand" href="/"><img src="/logo.png"/></a>
</div>
<div class="navbar-collapse collapse">
<ul class="nav navbar-nav">
<li><a href="/WebAuthn">WebAuthn</a></li><li><a href="/OTP">OTP</a></li><li><a href="/U2F">U2F</a></li><li><a href="/OATH">OATH</a></li><li><a href="/PGP">PGP</a></li><li><a href="/PIV">PIV</a></li><li><a href="/YubiHSM2">YubiHSM2</a></li><li><a href="/Software_Projects">Software Projects</a></li>
</ul>
<!-- Google Custom Search Engine -->
<div class="navbar-form navbar-right" id="search-box">
<script>
          (function() {
            var cx = '017198492754729237489:tcnraf8md8a';
            var gcse = document.createElement('script');
            gcse.type = 'text/javascript';
            gcse.async = true;
            gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
            '//www.google.com/cse/cse.js?cx=' + cx;
            var s = document.getElementsByTagName('script')[0];
            s.parentNode.insertBefore(gcse, s);
          })();
          </script>
<gcse:searchbox-only></gcse:searchbox-only>
</div>
<!-- End Google Custom Search Engine -->
</div><!--/.navbar-collapse -->
</div>
</div>
<div class="container">
<div class="row">
<ol class="breadcrumb">
<li><a href="/">Home</a></li>
<li class="active">pam-u2f</li>
</ol>
</div>
<div class="row">
<div class="col-md-4" style="padding-left: 0;">
<!-- Sidebar -->
<ul class="nav nav-side well well-sm">
<li class="active"><a href="/pam-u2f">pam-u2f</a><ul class="">
<li><a href="/pam-u2f/Releases">Releases</a></li>
<li><a href="/pam-u2f/Release_Notes.html">Release Notes</a></li>
<li><a href="/pam-u2f/Manuals">Manuals</a></li>
</ul>
</li></ul>
<!-- End sidebar -->
</div>
<div class="col-md-8">
<!-- Main content -->
<div class="sidelinks">
<ul>
<li><a href="https://github.com/Yubico/pam-u2f" rel="noopener noreferrer" target="_blank"><i class="fa fa-github fa-lg"></i> Github</a></li>
</ul>
</div>
<div id="page-content"><h1>pam-u2f</h1>
<div id="preamble">
<div class="sectionbody">
<div class="paragraph"><p><span class="image">
<a class="image" href="https://github.com/Yubico/pam-u2f/actions" rel="noopener noreferrer" target="_blank">
<img alt="Linux Build Status (github actions)" src="https://github.com/yubico/pam-u2f/workflows/linux/badge.svg">
</img></a>
</span>
<span class="image">
<a class="image" href="https://github.com/Yubico/pam-u2f/actions" rel="noopener noreferrer" target="_blank">
<img alt="macOS Build Status (github actions)" src="https://github.com/yubico/pam-u2f/workflows/macos/badge.svg"/>
</a>
</span>
<span class="image">
<a class="image" href="https://github.com/Yubico/pam-u2f/actions" rel="noopener noreferrer" target="_blank">
<img alt="Fuzz Status (github actions)" src="https://github.com/yubico/pam-u2f/workflows/fuzzer/badge.svg"/>
</a>
</span></p></div>
<div class="paragraph"><p>This module implements PAM over U2F and FIDO2, providing an easy way to integrate the
YubiKey (or other U2F/FIDO2 compliant authenticators) into your existing
infrastructure.</p></div>
</div>
</div>
<div class="sect1">
<h2 id="building">Building</h2>
<div class="sectionbody">
<div class="paragraph"><p>This project uses <em>autoconf</em>, <em>automake</em>, <em>pkg-config</em> and <em>libtool</em>
to achieve portability and ease of use.</p></div>
<div class="paragraph"><p>In addition, <a href="https://developers.yubico.com/libfido2"><em>libfido2</em></a> (&gt;=
1.3.0) is needed. Versions of this project up to 1.0.8 used
<code>libu2f-host</code> and <code>libu2f-server</code>. On Ubuntu, the necessary dependencies can be
installed using</p></div>
<div class="listingblock">
<div class="content"><div class="highlight"><pre><span></span><span class="gp">#</span> apt install --no-install-recommends autoconf automake libtool pkg-config <span class="se">\</span>
    libfido2-dev libpam-dev libssl-dev
</pre></div></div></div>
<div class="paragraph"><p>If you downloaded a tarball, build it as follows.</p></div>
<div class="listingblock">
<div class="content"><div class="highlight"><pre><span></span><span class="gp">$</span> ./configure
<span class="gp">$</span> make
</pre></div></div></div>
</div>
</div>
<div class="sect1">
<h2 id="_building_from_git">Building from Git</h2>
<div class="sectionbody">
<div class="paragraph"><p>You may check out the sources using Git with the following command:</p></div>
<div class="listingblock">
<div class="content"><div class="highlight"><pre><span></span><span class="gp">$</span> git clone git://github.com/Yubico/pam-u2f.git
</pre></div></div></div>
<div class="paragraph"><p>This will create a directory <em>pam-u2f</em>. Enter the directory:</p></div>
<div class="listingblock">
<div class="content"><div class="highlight"><pre><span></span><span class="gp">$</span> <span class="nb">cd</span> pam-u2f
</pre></div></div></div>
<div class="paragraph"><p><code>autoconf</code>, <code>automake</code>, <code>gengetopt</code>, <code>libtool</code>, and <code>libpam</code> must be installed.
<code>AsciiDoc</code> and <code>xsltproc</code> are used to generate the manpages. On Ubuntu, the
necessary dependencies can be installed using</p></div>
<div class="listingblock">
<div class="content"><div class="highlight"><pre><span></span><span class="gp">#</span> apt install --no-install-recommends autoconf automake libtool gengetopt <span class="se">\</span>
    pkg-config libfido2-dev libpam-dev libssl-dev asciidoc xsltproc <span class="se">\</span>
    libxml2-utils docbook-xml
</pre></div></div></div>
<div class="paragraph"><p>On Fedora, the necessary dependencies can be installed using</p></div>
<div class="listingblock">
<div class="content"><div class="highlight"><pre><span></span><span class="gp">#</span> dnf -y install autoconf automake libtool gengetopt libfido2-devel pam-devel <span class="se">\</span>
    openssl-devel asciidoc
</pre></div></div></div>
<div class="paragraph"><p>Generate the build system using:</p></div>
<div class="listingblock">
<div class="content"><div class="highlight"><pre><span></span><span class="gp">$</span> autoreconf --install
</pre></div></div></div>
<div class="paragraph"><p>Then build as usual, see above under <a href="#building">Building</a>.</p></div>
</div>
</div>
<div class="sect1">
<h2 id="_installation">Installation</h2>
<div class="sectionbody">
<div class="paragraph"><p>Once the module is built, copy the file <code>pam_u2f.so</code> to the correct
directory for your system. Typically <code>/lib/security/</code> or
<code>/lib/x86_64-linux-gnu/security/</code>. This is automated by <code>make install</code>
assuming that the pam directory chosen by <code>configure</code> is correct. If
that is not the case it can be specified with <code>./configure
--with-pam-dir=</code>.</p></div>
<div class="paragraph"><p>Create a file for a new service in <code>/etc/pam.d/</code> or edit an already
existing one by adding a line similar to this:</p></div>
<div class="listingblock">
<div class="content monospaced">
<pre>auth sufficient pam_u2f.so debug</pre>
</div></div>
<div class="paragraph"><p>For more information about the syntax of PAM configuration files, please
see the manual page for pam.conf(5).</p></div>
<div class="admonitionblock">
<table><tr>
<td class="icon">
<div class="title">Important</div>
</td>
<td class="content">An erroneous PAM configuration may lock some or all users
out of the system or prevent you from gaining root privileges. It is
recommended that you start a separate shell with root privileges while
configuring PAM to be able to revert changes if something goes wrong.
Test your configuration thoroughly before closing the root shell.</td>
</tr></table>
</div>
<div class="paragraph"><p>Supported parameters for the module are:</p></div>
<div class="hdlist"><table>
<tr>
<td class="hdlist1">
debug
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Enables debug output
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
debug_file
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Filename to write debugging messages to. <strong>If this file is missing,
nothing will be logged</strong>. This regular file <strong>has to be created by the
user</strong> or <strong>must exist and be a regular file</strong> for anything getting
logged to it. It is not created by pam-u2f on purpose (for security
considerations). This filename may be alternatively set to "stderr"
(default), "stdout", or "syslog".
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
origin=origin
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Set the relying party ID for the FIDO authentication procedure. If no
value is specified, the identifier "pam://$HOSTNAME" is used.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
appid=appid
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Set the <a href="https://developers.yubico.com/U2F/App_ID.html">application ID</a>
for the FIDO authentication procedure. If no value is specified, the
same value used for origin is taken ("pam://$HOSTNAME" if also origin
is not specified). This setting is only applicable for U2F credentials
created with pamu2fcfg versions v1.0.8 or earlier. Note that on v1.1.0
and v1.1.1 of pam-u2f, handling of this setting was temporarily broken
if the value was not the same as the value of origin.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
authfile=file
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Set the location of the <a href="#authMappingFiles">file that holds the mappings of user names to keyHandles and user keys</a>. An <a href="#individualAuth">individual (per user) file</a> may be configured relative to the users' home dirs, e.g.
".ssh/u2f_keys". If not specified, the location defaults to
$XDG_CONFIG_HOME/Yubico/u2f_keys. If $XDG_CONFIG_HOME is not set,
$HOME/.config/Yubico/u2f_keys is used.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
authpending_file=file
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Set the location of the file that is used for touch request
notifications. This file will be opened when pam-u2f starts waiting
for a user to touch the device, and will be closed when it no longer
waits for a touch. Use inotify to listen on these events, or a more
high-level tool like
<a href="https://github.com/maximbaz/yubikey-touch-detector" rel="noopener noreferrer" target="_blank">yubikey-touch-detector</a>.
Set an empty value in order to disable this functionality, like so:
<code>authpending_file=</code>. Default value:
/var/run/user/$UID/pam-u2f-authpending
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
nouserok
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Set to enable authentication attempts to succeed even if the user
trying to authenticate is not found inside <code>authfile</code> or if <code>authfile</code>
is missing/malformed.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
openasuser
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Setuid to the authenticating user when opening the authfile. Useful
when the user’s home is stored on an NFS volume mounted with the
<code>root_squash</code> option (which maps root to nobody which will not be able
to read the file). Note that after release 1.0.8 this is done by
default when no global authfile or XDG_CONFIG_HOME environment
variable has been set.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
alwaysok
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Set to enable all authentication attempts to succeed (aka presentation
mode).
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
max_devices=n_devices
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Maximum number of devices allowed per user (default is 24). Devices
specified in the authentication file that exceed this value will be
ignored.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
interactive
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Set to prompt a message and wait before testing the presence of a FIDO
device. Recommended if your device doesn’t have a tactile trigger.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
[prompt=your prompt here]
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Set individual prompt message for interactive mode. Watch the square
brackets around this parameter to get spaces correctly recognized by
PAM.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
manual
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Set to drop to a manual console where challenges are printed on screen
and response read from standard input. Useful for debugging and SSH
sessions without U2F-support from the SSH client/server. If enabled,
interactive mode becomes redundant and has no effect.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
cue
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Set to prompt a message to remind to touch the device.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
[cue_prompt=your prompt here]
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Set individual prompt message for the cue option. Watch the square
brackets around this parameter to get spaces correctly recognized by
PAM.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
nodetect
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Set to skip detecting if a suitable FIDO token is inserted before
performing the full tactile authentication. This detection was created
to avoid emitting the "cue" message if no suitable token exists,
because doing so leaks information about the authentication stack if a
token is inserted but not configured for the authenticating user.
However, it was found that versions of <code>libu2f-host</code> 1.1.5 or less has
buggy iteration/sleep behavior which causes a 1-second delay to occur
for this initial detection. For this reason, as well as the
possibility of hypothetical tokens that do not tolerate this double
authentication, the "nodetect" option was added.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
userpresence=int
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
If 1, request user presence during authentication. If 0, do not
request user presence during authentication. Otherwise, fallback to
the authenticator’s default behaviour.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
userverification=int
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
If 1, request user verification during authentication. If 0, do not
request user verification during authentication. Otherwise, fallback
to the authenticator’s default behaviour.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
pinverification=int
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
If 1, request PIN verification during authentication. If 0, do not
request PIN verification during authentication. Otherwise, fallback to
the authenticator’s default behaviour.
</p>
</td>
</tr>
<tr>
<td class="hdlist1">
sshformat
<br/>
</td>
<td class="hdlist2">
<p style="margin-top: 0;">
Use credentials produced by versions of OpenSSH that have support for
FIDO devices. It is not possible to mix native credentials and SSH
credentials. Once this option is enabled all credentials will be parsed
as SSH.
</p>
</td>
</tr>
</table></div>
</div>
</div>
<div class="sect1">
<h2 id="authMappingFiles">Authorization Mapping Files</h2>
<div class="sectionbody">
<div class="paragraph"><p>A mapping must be made between the YubiKey token and the user name,
see <a href="#registration">here</a> for details on how to perform the
registration using the bundled tool.</p></div>
<div class="paragraph"><p>There are two ways to do this, either centrally in one file, or
individually, where users can create the mapping in their home
directories. If the central authorization mapping file is being used,
user home directory mappings will not be used and the opposite applies
if user home directory mappings are being used, the central
authorization mappings file will not be used.</p></div>
<div class="paragraph"><p>By default the mapping file inside a home directory will be opened as
the target user, whereas the central file will be opened as <code>root</code>. If
the <code>XDG_CONFIG_HOME</code> variable is set, privileges will not be dropped
unless the <code>openasuser</code> configuration setting is set.</p></div>
<div class="admonitionblock">
<table><tr>
<td class="icon">
<div class="title">Important</div>
</td>
<td class="content">Using pam-u2f to secure the login to a computer while
storing the mapping file in an encrypted home directory, will result
in the impossibility of logging into the system. The partition is
decrypted after login and the mapping file can not be accessed.</td>
</tr></table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_central_authorization_mapping">Central Authorization Mapping</h2>
<div class="sectionbody">
<div class="paragraph"><p>Create a file e.g. <code>/etc/u2f_mappings</code>. The file must contain a user
name, and the information obtained during the registration procedure.</p></div>
<div class="paragraph"><p>The mappings should look like this, one per line:</p></div>
<div class="literalblock">
<div class="content monospaced">
<pre>&lt;username1&gt;:&lt;KeyHandle1&gt;,&lt;UserKey1&gt;,&lt;CoseType1&gt;,&lt;Options1&gt;:&lt;KeyHandle2&gt;,&lt;UserKey2&gt;,&lt;CoseType2&gt;,&lt;Options2&gt;:...
&lt;username2&gt;:&lt;KeyHandle1&gt;,&lt;UserKey1&gt;,&lt;CoseType1&gt;,&lt;Options1&gt;:&lt;KeyHandle2&gt;,&lt;UserKey2&gt;,&lt;CoseType2&gt;,&lt;Options2&gt;:...</pre>
</div></div>
<div class="paragraph"><p>Now add <code>authfile=/etc/u2f_mappings</code> to your PAM configuration line,
so it looks like:</p></div>
<div class="literalblock">
<div class="content monospaced">
<pre>auth sufficient pam_u2f.so authfile=/etc/u2f_mappings</pre>
</div></div>
<div class="paragraph"><p>If you do not set the <code>openasuser</code> setting, the authfile will be
opened and parsed as <code>root</code> so make sure it has the correct owner and
permissions set.</p></div>
<div class="admonitionblock">
<table><tr>
<td class="icon">
<div class="title">Important</div>
</td>
<td class="content">On dynamic networks (e.g. where hostnames are set by DHCP),
users should not rely on the default origin and appid
("pam://$HOSTNAME") but set those parameters explicitly to the same
value.</td>
</tr></table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="individualAuth">Individual Authorization Mapping by User</h2>
<div class="sectionbody">
<div class="paragraph"><p>Each user creates a ‘.config/Yubico/u2f_keys` (default) file inside
their home directory and places the mapping in that file. You may want
to specify a different per-user file (relative to the users’ home
directory), i.e. <code>.ssh/u2f_keys</code>. Bear in mind, setting an absolute path
here is possible although very likely a fragile setup, and probably
not exhibiting the intended behaviour.</p></div>
<div class="paragraph"><p>The file must have only one line:</p></div>
<div class="literalblock">
<div class="content monospaced">
<pre>&lt;username&gt;:&lt;KeyHandle1&gt;,&lt;UserKey1&gt;,&lt;CoseType1&gt;,&lt;Options1&gt;:&lt;KeyHandle2&gt;,&lt;UserKey2&gt;,&lt;CoseType2&gt;,&lt;Options2&gt;:...</pre>
</div></div>
<div class="paragraph"><p>This is much the same concept as the SSH authorized_keys file.</p></div>
<div class="paragraph"><p>In this case, pam-u2f will drop privileges and read the mapping file
as that user. This happens regardless of the <code>openasuser</code> option being
set.</p></div>
<div class="paragraph"><p>Note that if you set the <code>XDG_CONFIG_HOME</code> variable, privileges will not
be dropped by default. Consider also setting <code>openasuser</code> in that
case.</p></div>
</div>
</div>
<div class="sect1">
<h2 id="registration">Obtaining key-handles and Public Keys</h2>
<div class="sectionbody">
<div class="paragraph"><p>In order to obtain the required information for the authentication procedure,
a token should be first registered. This can be done by using the command line
configuration tool provided with the module:</p></div>
<div class="listingblock">
<div class="content"><div class="highlight"><pre><span></span><span class="gp">$</span> pamu2fcfg -uusername -opam://myorigin -ipam://myappid
</pre></div></div></div>
<div class="paragraph"><p>the tool will register a connected token by using the specified origin
and appid. If neither are specified they will default to
<code>pam://$HOSTNAME</code>. Additionally, it is possible to set other options
to require user presence (touch), PIN verification and resident
credentials. On success the tool prints to standard output a
configuration line that can be directly used with the module. For
additional information on the tool read the relative manpage (<code>man
pamu2fcfg</code>).</p></div>
</div>
</div>
<div class="sect1">
<h2 id="_ssh_credentials">SSH Credentials</h2>
<div class="sectionbody">
<div class="paragraph"><p>To generate SSH credentials OpenSSH version 8.2 or later is required.
It is then possible to generate a credential file with:</p></div>
<div class="listingblock">
<div class="content"><div class="highlight"><pre><span></span><span class="gp">$</span> ssh-keygen -t ecdsa-sk -f ./credential.ssh
</pre></div></div></div>
<div class="paragraph"><p>Supported key types are ecdsa-sk and ed25519-sk. Note that passphrase protected
credentials are currently not supported.</p></div>
<div class="paragraph"><p>To use this credential the <code>authfile</code> parameter should be set to the path of
the file <code>credential.ssh</code> and the <code>sshformat</code> option should also be set. If the
<code>authfile</code> parameter is not set, it defaults to <code>~/.ssh/id_ecdsa_sk</code>.</p></div>
</div>
</div>
<div class="sect1">
<h2 id="devices">Multiple Devices</h2>
<div class="sectionbody">
<div class="paragraph"><p>Multiple devices are supported. If more than one device is specified,
authentication against them is attempted sequentially as they are defined
in the configuration file of the module. If during an authentication
attempt a connected device is removed or a new device is plugged in,
the authentication restarts from the top of the list.</p></div>
</div>
</div>
<div class="sect1">
<h2 id="_selinux_note">SELinux Note</h2>
<div class="sectionbody">
<div class="paragraph"><p>Due to an issue with Fedora Linux, and possibly with other
distributions that use SELinux, a system configured with pam-u2f may
end up in a situation where access to the credentials file is denied.
If the <code>nouserok</code> option is also set, this will result in a successful
authentication within the module, without using the FIDO
authenticator.</p></div>
<div class="paragraph"><p>In order to correctly update the security context the command
<code>fixfiles onboot</code> should be used on existing installations</p></div>
<div class="paragraph"><p>Moreover, to allow read access to an authfile or directory placed in a
non-standard location, the command</p></div>
<div class="listingblock">
<div class="content"><div class="highlight"><pre><span></span><span class="gp">#</span> chcon -R -t auth_home_t /path/to/target
</pre></div></div></div>
<div class="paragraph"><p>should be used.</p></div>
<div class="paragraph"><p>For more information see
<a href="https://access.redhat.com/security/cve/CVE-2020-24612" rel="noopener noreferrer" target="_blank">HERE</a>.</p></div>
</div>
</div>
</div>
<!-- End main content -->
</div>
</div>
</div>
<footer class="container">
<div class="row" style="margin-top:30px;padding-top:20px;border-top:1px solid #eee;">
<div class="col-md-3">
<p style="line-height:2em;font-size:90%">
<strong><a href="https://developers.yubico.com/" style="color:#000">DEV.YUBICO</a></strong><br/>
<a href="/WebAuthn">WebAuthn</a><br/>
<a href="/OTP">OTP</a><br/>
<a href="/U2F">U2F</a><br/>
<a href="/OATH">OATH</a><br/>
<a href="/PGP">PGP</a><br/>
<a href="/PIV">PIV</a><br/>
<a href="/YubiHSM2">YubiHSM2</a><br/>
<a href="/Software_Projects">Software Projects</a><br/>
</p>
</div>
<div class="col-md-3">
<p style="line-height:2em;font-size:90%"><strong>RESOURCES</strong><br/>
<a href="https://www.yubico.com/store/" rel="noopener noreferrer" target="_blank">Buy YubiKeys</a><br/>
<a href="https://www.yubico.com/blog/" rel="noopener noreferrer" target="_blank">Blog</a><br/>
<a href="https://www.yubico.com/newsletter/" rel="noopener noreferrer" target="_blank">Newsletter</a><br/>
<a href="https://forum.yubico.com/" rel="noopener noreferrer" target="_blank">Yubico Forum Archive</a></p>
</div>
<div class="col-md-3">
<p style="line-height:2em;font-size:90%"><strong><a href="https://www.yubico.com/" rel="noopener noreferrer" style="color:#000" target="_blank">YUBICO.COM</a></strong><br/>
<a href="https://www.yubico.com/why-yubico/" rel="noopener noreferrer" target="_blank">Why Yubico</a><br/>
<a href="https://www.yubico.com/about/about-us/" rel="noopener noreferrer" target="_blank">About Yubico</a></p>
</div>
<div class="col-md-3">
<p style="line-height:1em;font-size:90%"> </p>
<table align="right" cellpadding="0" cellspacing="0" style="color:#9aca3c">
<tbody>
<tr>
<td style="padding:10px"><a href="https://www.yubico.com/feed/" rel="noopener noreferrer" target="_blank" title="Blog RSS"><i class="fa fa-rss"></i></a></td>
<td style="padding:10px"><a href="https://twitter.com/yubico" rel="noopener noreferrer" target="_blank" title="Twitter"><i class="fa fa-twitter"></i></a></td>
<td style="padding:10px"><a href="https://www.facebook.com/Yubikey" rel="noopener noreferrer" target="_blank" title="Facebook"><i class="fa fa-facebook"></i></a></td>
<td style="padding:10px"><a href="https://www.youtube.com/c/Yubico" rel="noopener noreferrer" target="_blank" title="YouTube"><i class="fa fa-youtube"></i></a></td>
<td style="padding:10px 0 10px 10px"><a href="https://github.com/Yubico" rel="noopener noreferrer" target="_blank" title="GitHub"><i class="fa fa-github"></i></a></td>
</tr>
</tbody>
</table>
</div>
</div>
</footer>
<!-- Offset anchor links for navbar -->
<script>
    var shiftWindow = function() { scrollBy(0, -50) };
    if (location.hash) shiftWindow();
    window.addEventListener("hashchange", shiftWindow);
  </script>
<script src="/vendor/jquery/dist/jquery.min.js"></script>
<script src="/vendor/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="/js/main.js"></script>
</body>
</html>