

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
	

	<title>Binary Ninja</title>

	<meta name="description" content="Binary Ninja: a modern reverse engineering platform featuring a scriptable and extensible decompiler" />
	<meta name="author" content="Vector 35 Inc" />

	<meta name="twitter:card" content="summary" />
	<meta name="twitter:site" content="@vector35" />
	<meta name="twitter:creator" content="@vector35" />

	
	<meta property="og:url" content="https://binary.ninja/2021/06/03/2.4-release.html" />
	
	
	<meta property="og:title" content="Binary Ninja &gt; 2.4 Release" />
	
	<meta property="og:description" content="Binary Ninja : A Reverse Engineering Platform" />
	
	<meta property="og:image" content="https://binary.ninja/ico/apple-icon-180x180.png" />
	

	<link rel="stylesheet" href="/css/style.css" media="screen" />
        <link href="https://fonts.googleapis.com/css?family=Libre+Franklin|Open+Sans&display=swap" rel="stylesheet">
	<link rel="apple-touch-icon" sizes="57x57" href="/ico/apple-icon-57x57.png">
	<link rel="apple-touch-icon" sizes="60x60" href="/ico/apple-icon-60x60.png">
	<link rel="apple-touch-icon" sizes="72x72" href="/ico/apple-icon-72x72.png">
	<link rel="apple-touch-icon" sizes="76x76" href="/ico/apple-icon-76x76.png">
	<link rel="apple-touch-icon" sizes="114x114" href="/ico/apple-icon-114x114.png">
	<link rel="apple-touch-icon" sizes="120x120" href="/ico/apple-icon-120x120.png">
	<link rel="apple-touch-icon" sizes="144x144" href="/ico/apple-icon-144x144.png">
	<link rel="apple-touch-icon" sizes="152x152" href="/ico/apple-icon-152x152.png">
	<link rel="apple-touch-icon" sizes="180x180" href="/ico/apple-icon-180x180.png">
	<link rel="icon" type="image/png" sizes="192x192"  href="/ico/android-icon-192x192.png">
	<link rel="icon" type="image/x-icon" href="/ico/favicon.ico">
	<link rel="shortcut icon" href="/icon/android-icon-32x32.png" />
	<link rel="alternate" type="application/rss+xml" title="Binary Ninja Blog RSS" href="/feed.xml">

	<meta name="msapplication-TileColor" content="#ffffff">
	<meta name="msapplication-TileImage" content="/ms-icon-144x144.png">
	<meta name="theme-color" content="#ffffff">

	<script src="https://cdn.paddle.com/paddle/paddle.js"></script>
	<script src="/js/jquery-3.4.1.min.js"></script>
	<script src="/js/bootstrap.min.js"></script>
	<script src="/js/noty/packaged/jquery.noty.packaged.min.js"></script>
	<script src="/js/noty/themes/vector35.js"></script>

	<link rel="stylesheet" href="/css/luminous-basic.min.css">
	<script src="/js/Luminous.min.js"></script>

	<script src="/js/custom.js"></script>

	<!--[if (gte IE 6)&(lte IE 8)]>
		<script type="text/javascript" src="js/selectivizr-min.js"></script>
		<noscript><link rel="stylesheet" href="[fallback css]" /></noscript>
	<![endif]-->
	
	
</head>
<body class="d-flex flex-column">

		<nav id="header" class="navbar sticky-top navbar-expand-md navbar-dark bg-secondary py-0">
	<div class="container">
		<button class="navbar-toggler border-0" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
		<a class="navbar-brand mr-3" href="/">
			<img src="/images/logo-white.png" alt="Find out why our customers love us so much!" width="140px" alt="" />
		</a>
		<a class="navbar-brand mr-5" href="/love">
			<img src="/images/binjalove.png" height="30px" alt="" />
		</a>
		<div class="collapse navbar-collapse" id="navbarTogglerDemo02">
			<ul class="navbar-nav mt-2 mt-md-0 mr-auto">
				<li class="nav-item">
                    <a class="nav-link" href="/demo/">
						Demo
					</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" href="https://cloud.binary.ninja">
						Cloud
					</a>
				</li>
				<li class="nav-item">
                    <a class="nav-link" href="/blog/">
						Blog
					</a>
				</li>
				<li class="nav-item dropdown">
					<a class="nav-link" href="/support/#documentation" id="documentationDropdown">
						Docs
					</a>
					<div class="dropdown-menu bg-dark" aria-labelledby="documentationDropdown">
						<a class="dropdown-item" href="https://docs.binary.ninja/">User Docs</a>
						<a class="dropdown-item" href="https://api.binary.ninja/">API Reference</a>
						<a class="dropdown-item" href="https://scc.binary.ninja/">Shell Code Compiler (SCC) Reference</a>
						<a class="dropdown-item" href="/changelog/">Stable Version Changelog</a>
					</div>
				</li>
				<li class="nav-item dropdown">
					<a class="nav-link" href="/support/" id="supportDropdown">
						Support
					</a>
					<div class="dropdown-menu bg-dark" aria-labelledby="supportDropdown">
						<a class="dropdown-item" href="/recover/">License/Download Recovery</a>
						<a class="dropdown-item" href="/renew/">Renew Current License</a>
						<a class="dropdown-item" href="https://slack.binary.ninja/">Slack Signup</a>
						<a class="dropdown-item" href="/support/">Training</a>
						<a class="dropdown-item" href="/faq/">FAQ</a>
						<a class="dropdown-item" href="/support/">Contact Us</a>
					</div>
				</li>
				<li class="nav-item">
					<a class="nav-link" href="https://shop.binary.ninja">
						Gear
					</a>
				</li>
			</ul>
			<a class="nav-link btn btn-primary font-weight-bold rounded-0 mb-2 mb-md-0" href="/purchase">
				Purchase
			</a>
		</div>
	</div>
  </nav>
  <section class="container-fluid mb-5 text-light" id="banner">
	<div class="row py-2">
		<div class="col text-center">
			Check out all of the <a href="/2021/06/03/2.4-release.html">fixes, features and improvements</a> that just landed in the 2.4 (build 2846) release.
		</div>
	</div>
</section>

		<div id="container" class="flex-grow-2 flex-fill">


<div class="container">

	<div class="row text-center mb-3">
		<h1 class="col">Binary Ninja Blog</h1>
	</div>

	<div id="main">
		<div class='post single clear-fix'>
			<h2>2.4 Release</h2>
			<ul class="post-meta">
				
					<li class="author">By <a href="https://github.com/psifertex" target="_blank">Jordan Wiens</a></li>
				
				<li class="date">2021-06-03</li>
				<li class="tags">| <a href="/tag/meta">meta</a> | </li>
				<!-- <li class="comments"><a href="">35 Comments</a></li> -->
			</ul>
			<div class='post-entry'>
			<div class='content'>
				<p>It’s that time again – we’ve just released another stable version, 2.4. This is the last in our line of 2.x updates, with our next stable update 3.0 coming next. While 3.0 contains a brand new UI overhaul, even this 2.4 release is chock-full of fantastic features, bug-fixes and improvements alike. The most notable new features include:</p>

<ul>
  <li><a href="/2021/06/03/2.4-release.html#enhanced-decompiler-array-support">Enhanced decompiler array support</a></li>
  <li><a href="/2021/06/03/2.4-release.html#search-improvements">Search improvements</a></li>
  <li><a href="/2021/06/03/2.4-release.html#type-view-improvements">Filtering and collapsing of types</a></li>
  <li><a href="/2021/06/03/2.4-release.html#plugin-dependency-installation">Plugin Manager dependency installation</a></li>
  <li><a href="/2021/06/03/2.4-release.html#automatic-structures">Automatic structure creation</a></li>
  <li><a href="/2021/06/03/2.4-release.html#function-properties-dialog">Function properties dialog</a></li>
</ul>

<!--more-->

<h2 id="major-changes">Major Changes</h2>

<h3 id="enhanced-decompiler-array-support">Enhanced Decompiler Array Support</h3>

<p>While our decompiler (HLIL) has had some level of support for array types from the beginning, the 2.4 release dramatically improves the capabilities. Not only does the type parser now include better support for multidimensional arrays, pointers to arrays, and arrays of structs, but the decompilation will show the results beautifully. Check out the before and after for a sample binary below:</p>

<p><img src="/images/feature-screenshots/24-hlil-before-after.png" alt="Before and After Array Support" class="image" /></p>

<h3 id="search-improvements">Search Improvements</h3>

<p>Many major changes to how searching works in Binary Ninja have landed in 2.4:</p>

<ul>
  <li>IL-Based Search</li>
  <li>Range Searching (including specific addresses or a single function)</li>
  <li>Persistent Search Results</li>
  <li>Secondary Filtering (of persistent results)</li>
  <li>Improved Constant searching (matches signed/unsigned values)</li>
</ul>

<p><img src="/images/feature-screenshots/24-new-find-dialog.png" alt="New Find Dialog" class="image max-height-600" /></p>

<p>The new find dialog has a number of features to make searching binaries more powerful. You can search the current IL view or constants in the current IL view, have the ability to restrict the search to specific ranges, and most importantly, a new persistent search feature (“Find all”) lets you save a list of search results. This saved search result list allows now only for easier navigation but also additional filtering that supports regular expressions!</p>

<p><img src="/images/feature-screenshots/24-new-find-search-results.png" alt="Persistent Search Results" class="image max-height-400" /></p>

<h3 id="type-view-improvements">Type View Improvements</h3>

<p>The two biggest changes to the Type view are the ability to collapse types and the ability to filter types:</p>

<p><img src="/images/feature-screenshots/24-types-view.png" alt="Type View Improvements" class="image max-height-400" /></p>

<p>Note that the filter drop-down can also be used to only show User Types or Auto Types which is convenient for files that contain large amounts of debug information when you’re adding your own types.</p>

<h3 id="plugin-dependency-installation">Plugin Dependency Installation</h3>

<p>Python plugins installed via the <a href="https://docs.binary.ninja/guide/plugins.html#plugin-manager">Plugin Manager</a> will now automatically attempt to install any python dependencies specified in a <a href="https://pip.pypa.io/en/stable/user_guide/#requirements-files"><code class="highlighter-rouge">requirements.txt</code></a>. Note that this feature relies on having <code class="highlighter-rouge">pip</code> installed. If the requirements installation fails you can always install the <a href="https://github.com/Vector35/snippets/blob/master/requirements.txt#L1">requirements</a> manually if needed.</p>

<p><img src="/images/feature-screenshots/24-auto-plugin-deps.png" alt="Plugin Dependency Installation" class="image max-height-400" /></p>

<h3 id="automatic-structures">Automatic Structures</h3>

<p>If you’re working with many structures, our existing <a href="https://docs.binary.ninja/guide/type.html#smart-structures-workflow">smart structure workflow</a> made creating structures and members a breeze. Just hit <code class="highlighter-rouge">s</code> at the creation of a variable from an allocation and an appropriately sized structure is created and applied. Next, you can press <code class="highlighter-rouge">s</code> any time you see an access at an offset and a field would be created. With 2.4, this process is even easier. Simply create an empty structure (via types view or a single <code class="highlighter-rouge">s</code> as described above) and apply it as appropriate. Next, right-click on the structure and select <code class="highlighter-rouge">Create Members at Accessed Offsets</code>:</p>

<p><img src="/images/feature-screenshots/24-auto-create-members-before.png" alt="Auto Structure" class="image" /></p>

<p>Once that’s done, all accesses with the appropriate size will be found and individual members will be created:</p>

<p><img src="/images/feature-screenshots/24-auto-create-members-after.png" alt="Auto Structure After Creating Members" class="image" /></p>

<p>Note that this analysis is cross-function. Any reference to that structure throughout the binary will inform the creation of the members so any place you apply that structure will help complete the list even more accurately.</p>

<h3 id="function-properties-dialog">Function Properties Dialog</h3>

<p>While everything is available via the <a href="https://api.binary.ninja/">api</a>, it’s always helpful to have convenient dialogs to change even advanced attributes of objects and analysis when working in the UI. And with 2.4, there’s now a UI for editing several features of functions:</p>

<p><img src="/images/feature-screenshots/24-edit-function-properties-dialog.png" alt="Function Edit Dialog" class="image max-height-800" /></p>

<p>The function properties dialog offers a number of new UI capabilities. Check out the <a href="https://docs.binary.ninja/getting-started.html#edit-function-properties-dialog">user documentation</a> for more information.</p>

<h2 id="security-advisories">Security Advisories</h2>

<p>Before we get to the remainder of our 2.4 features, we wanted to thank <a href="https://www.zerodayinitiative.com/">Mat Powell of Trend Micro Zero Day Initiative (ZDI)</a> for several notices:</p>

<ul>
  <li><a href="https://www.zerodayinitiative.com/advisories/ZDI-21-677/">ZDI-21-677 / ZDI-CAN-13670</a> / <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31516">CVE-2021-31516</a>: This notice covered an OOB read (though it was originally triggered via two different paths).</li>
  <li><a href="https://www.zerodayinitiative.com/advisories/ZDI-21-678/">ZDI-21-678 / ZDI-CAN-13668</a> / <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-31515">CVE-2021-31515</a>: This is a UAF that we consider very unlikely to be exploitable (if not impossible) given the state of processing in BNDB loading at this point in execution.</li>
</ul>

<p>We received these notices from ZDI on April 27th and had fixes on our development branch available later the same day. We’re coordinating with ZDI on the disclosure now as these fixes have landed on the stable branch and therefore all users should be protected whether they are on the latest stable or latest dev branch.</p>

<p>Note that because these vulnerabilities exist in the parsing of existing BNDB databases and not raw file formats we held off releasing an immediate stable release with those fixes as we deemed the risk to our users running only the stable build as relatively small. That said, we always encourage any users analyzing potentially malicious files to do so only in a protected environment such as sandbox or detonation VM. Likewise, our dev branch will always have the most up-to-date fixes whether they be for bugs or security issues.</p>

<p>One note about the ZDI notices (though this may have changed from earlier drafts) – though they do mention malicious websites causing exploitation, we do not consider the risk of browsing to a malicious website to be high with these vulnerabilities. Though Binary Ninja does install a <a href="https://docs.binary.ninja/getting-started.html#loading-files">URL handler</a> that allows files to be opened directly into BN, it always prompts the user before opening any files via the URL handler. This prevents automated drive-by exploitation of any file formats that BN supports and requires specific user action to approve opening any files or URLs.</p>

<p>Thanks again to ZDI for their work in helping us make Binary Ninja even more secure and for their quick communication throughout the process.</p>

<h2 id="architectures">Architectures</h2>

<p>Thanks to our <a href="https://github.com/Vector35/?q=arch_&amp;type=&amp;language=&amp;sort=">open sourced</a> architectures, you can check out any of the improvements to each architecture during the last release in their respective repositories:</p>

<ul>
  <li><a href="https://github.com/Vector35/arch-arm64/commits/master">arm64</a></li>
  <li><a href="https://github.com/Vector35/arch-armv7/commits/master">armv7</a></li>
  <li><a href="https://github.com/Vector35/arch-mips/commit/a893f065229f0ec81747219df3058f257fe12591">mips</a></li>
  <li><a href="https://github.com/Vector35/arch-x86/commits/master">x86/x64</a></li>
</ul>

<p>Note that other architectures are included with Binary Ninja that had no changes during this release and are not listed above.</p>

<h2 id="ui-updates">UI Updates</h2>

<ul>
  <li><em>Feature</em>: Themes can now specify colors in hex strings (<a href="https://github.com/Vector35/binaryninja-api/issues/2477">2477</a>)</li>
  <li><em>Feature</em>: New theme, “Reflection” (thanks Jon!) (<a href="https://github.com/Vector35/binaryninja-api/issues/2466">2466</a>)</li>
  <li><em>Feature</em>: Go to File Offset (available via command-palette) (<a href="https://github.com/Vector35/binaryninja-api/issues/2157">2157</a>)</li>
  <li><em>Feature</em>: UI Font now configurable via settings (ui.font.app) (<a href="https://github.com/Vector35/binaryninja-api/issues/2424">2424</a>)</li>
  <li><em>Feature</em>: Additional graph padding can be added via the ui.view.graph.padding setting for extra space around Flow Graphs (<a href="https://github.com/Vector35/binaryninja-api/issues/196">196</a>)</li>
  <li><em>Feature</em>: <code class="highlighter-rouge">f</code> hotkey sets/toggles float types (<a href="https://github.com/Vector35/binaryninja-api/issues/2069">2069</a>)</li>
  <li><em>Feature</em>: Save/Load window layouts (using the command-palette) (<a href="https://github.com/Vector35/binaryninja-api/issues/1592">1592</a>)</li>
  <li><em>Feature</em>: Hovering variables now show storage and type information (<a href="https://github.com/Vector35/binaryninja-api/issues/2148">2148</a>)</li>
  <li><em>Feature</em>: Double clicking types (including <code class="highlighter-rouge">__offset(N)</code> references) navigates to appropriate type in type view (<a href="https://github.com/Vector35/binaryninja-api/issues/2412">2412</a>)</li>
  <li><em>Feature</em>: Navigation history now saved in the BNDB (<a href="https://github.com/Vector35/binaryninja-api/issues/2410">2410</a>)</li>
  <li><em>Improved</em>: The symbol auto-completion UI has an improved experience (<a href="https://github.com/Vector35/binaryninja-api/issues/2448">2448</a>)</li>
  <li><em>Improved</em>: Up arrow in the scripting console behaves more naturally between history and current entry (<a href="https://github.com/Vector35/binaryninja-api/issues/2467">2467</a>)</li>
  <li><em>Improved</em>: More consistent font use throughout the UI and updates when fonts are changed (<a href="https://github.com/Vector35/binaryninja-api/issues/2424">2424</a>)</li>
  <li><em>Improved</em>: Tags are now displayed before bookmarks (<a href="https://github.com/Vector35/binaryninja-api/issues/2351">2351</a>)</li>
  <li><em>Improved</em>: Transform dialog is now non-modal (<a href="https://github.com/Vector35/binaryninja-api/issues/2108">2108</a>)</li>
  <li><em>Fix</em>: Show/Hide tag types correctly handles locations with multiple tags (<a href="https://github.com/Vector35/binaryninja-api/issues/1992">1992</a>)</li>
  <li><em>Fix</em>: Addresses that were sometimes shown as signed values are now always shown as unsigned</li>
  <li><em>Fix</em>: Switching between graph and linear properly maintains selection (<a href="https://github.com/Vector35/binaryninja-api/issues/2343">2343</a>)</li>
  <li><em>Fix</em>: Navigation history maintains preferred IL view and history is correctly maintained (<a href="https://github.com/Vector35/binaryninja-api/issues/2349">2349</a>)</li>
  <li><em>Fix</em>: Missing analysis updates caused some types to not refresh when changed</li>
  <li><em>Fix</em>: Multiple references to the same variable in the same instruction no longer create duplicate cross-references</li>
</ul>

<h2 id="binary-views">Binary Views</h2>
<ul>
  <li><em>Feature</em>: Support for Mach-O local relocations (<a href="https://github.com/Vector35/binaryninja-api/issues/1610">1610</a>)</li>
  <li><em>Improved</em>: Open With Options allows overriding platforms for built-in Binary Views (ELF, Mach-O, PE, etc.) (<a href="https://github.com/Vector35/binaryninja-api/issues/2291">2291</a>)</li>
  <li><em>Fix</em>: ARM ELF imports with mapping symbols now load correctly (<a href="https://github.com/Vector35/binaryninja-api/issues/2300">2300</a>)</li>
  <li><em>Fix</em>: More robust PE parsing for size 0 importTableEntries (<a href="https://github.com/Vector35/binaryninja-api/issues/2142">2142</a>)</li>
</ul>

<h2 id="analysis">Analysis</h2>
<ul>
  <li><em>Feature</em>: Allows support for calling conventions (Apple ARM64) which force all variadic arguments onto the stack (<a href="https://github.com/Vector35/binaryninja-api/issues/2121">2121</a>)</li>
  <li><em>Improved</em>: Duplicate symbols with the same name are possible as well as multiple symbols at the same address (<a href="https://github.com/Vector35/binaryninja-api/issues/611">611</a>)</li>
  <li><em>Improved</em>: HLIL translation of conditional <code class="highlighter-rouge">NORETURN</code> calls (<a href="https://github.com/Vector35/binaryninja-api/issues/2320">2320</a>)</li>
  <li><em>Improved</em>: analysis.experimental.alternateTypePropagation now enabled by default which improves type propagation (<a href="https://github.com/Vector35/binaryninja-api/issues/1456">1456</a>)</li>
  <li><em>Improved</em>: Performance of applying PDBs with many types (<a href="https://github.com/Vector35/binaryninja-api/issues/834">834</a>)</li>
  <li><em>Fix</em>: Data references to members were not correctly created (<a href="https://github.com/Vector35/binaryninja-api/issues/2313">2313</a>)</li>
  <li><em>Fix</em>: Function type information is properly propagated when typedefs are involved (<a href="https://github.com/Vector35/binaryninja-api/issues/2404">2404</a>)</li>
</ul>

<h2 id="api">API</h2>
<ul>
  <li><em>Feature</em>: <code class="highlighter-rouge">user_directory()</code> added to API (<a href="https://github.com/Vector35/binaryninja-api/issues/2358">2358</a>)</li>
  <li><em>Feature</em>: <code class="highlighter-rouge">Function.parameter_vars</code> now have setters in Python (<a href="https://github.com/Vector35/binaryninja-api/issues/1873">1873</a>)</li>
  <li><em>Improved</em>: Many additional MLIL and LLIL instructions are now documented (<a href="https://github.com/Vector35/binaryninja-api/issues/2441">2441</a>)</li>
  <li><em>Improved</em>: Metadata APIs now taint a BNDB so the save prompt will come up when changed (<a href="https://github.com/Vector35/binaryninja-api/issues/1174">1174</a>)</li>
  <li><em>Improved</em>: Documentation for <code class="highlighter-rouge">request_debug_report()</code> now lists possible report types (<a href="https://github.com/Vector35/binaryninja-api/issues/2447">2447</a>)</li>
  <li><em>Improved</em>: <code class="highlighter-rouge">create_user_function()</code> now returns the function created instead of None (<a href="https://github.com/Vector35/binaryninja-api/issues/1318">1318</a>)</li>
  <li><em>Improved</em>: Attempting to modify a console variable will trigger a <code class="highlighter-rouge">log_error</code> instead of <code class="highlighter-rouge">log_warn</code> (<a href="https://github.com/Vector35/binaryninja-api/issues/2206">2206</a>)</li>
  <li><em>Fix</em>: <code class="highlighter-rouge">register_for_*il_instruction</code> APIs now work in linear view in addition to graph view (<a href="https://github.com/Vector35/binaryninja-api/issues/2386">2386</a>)</li>
</ul>

<h2 id="types">Types</h2>
<ul>
  <li><em>Feature</em>: Type view now shows function calling conventions (<a href="https://github.com/Vector35/binaryninja-api/issues/903">903</a>)</li>
  <li><em>Feature</em>: Accesses in code to invalid offsets now shown for structs in type view (<a href="https://github.com/Vector35/binaryninja-api/issues/2279">2279</a>)</li>
  <li><em>Feature</em>: Type parser now supports many features related to arrays such as multidimensional arrays, arrays of structs, pointers to arrays (<a href="https://github.com/Vector35/binaryninja-api/issues/766">756</a>)</li>
  <li><em>Improved</em>: Creating a new type with the same name as an existing type now warns (<a href="https://github.com/Vector35/binaryninja-api/issues/2465">2465</a>)</li>
  <li><em>Improved</em>: Width of enums shown in the type view (<a href="https://github.com/Vector35/binaryninja-api/issues/2326">2326</a>)</li>
  <li><em>Fix</em>: Structure of width 0 no longer triggers a crash (<a href="https://github.com/Vector35/binaryninja-api/issues/2356">2356</a>)</li>
  <li><em>Fix</em>: Resolved a crash in variadic arg functions (<a href="https://github.com/Vector35/binaryninja-api/issues/2469">2469</a>)</li>
</ul>

<h2 id="pluginsplugin-manager">Plugins/Plugin Manager</h2>
<ul>
  <li><em>Feature</em>: Native virtualenv support (settings <code class="highlighter-rouge">python.virtualenv</code>)</li>
  <li><em>Feature</em>: Plugin Manager search box hints show filters along with the search tool-tip (<a href="https://github.com/Vector35/binaryninja-api/issues/2417">2417</a>)</li>
  <li><em>Improved</em>: Official and Community plugins visibility different (<a href="https://github.com/Vector35/binaryninja-api/issues/1763">1763</a>)</li>
  <li><em>Improved</em>: Date of last update shown in plugin header (<a href="https://github.com/Vector35/binaryninja-api/issues/2314">2314</a>)</li>
  <li><em>Improved</em>: Better logging for failed plugin installation</li>
</ul>

<h2 id="misc">Misc</h2>
<ul>
  <li><em>Improved</em>: BNDB save and load times improved</li>
  <li><em>Improved</em>: When opening a file with an existing BNDB, user is now prompted to open the database instead (<a href="https://github.com/Vector35/binaryninja-api/issues/101">101</a>)</li>
  <li><em>Improved</em>: QT DownloadProvider removed in favor of default Rust provider and optional Python provider (<a href="https://github.com/Vector35/binaryninja-api/issues/2138">2138</a></li>
  <li><em>Fix</em>: <code class="highlighter-rouge">-p</code> on the command-line now correctly disables all plugins (previously Plugin Manager installed architectures were not disabled) (<a href="https://github.com/Vector35/binaryninja-api/issues/2452">2452</a>)</li>
</ul>

<p>And of course you can view all the other issues, fixes, and features at: <a href="https://github.com/Vector35/binaryninja-api/milestone/12?closed=1">https://github.com/Vector35/binaryninja-api/milestone/12?closed=1</a>.</p>


				<div id="disqus_thread"></div>
	<script>
	var disqus_config = function () {
	this.page.url = "https://binary.ninja/2021/06/03/2.4-release.html";
	this.page.identifier = "/2021/06/03/2.4-release";
	};

	$("table").wrap('<div style="overflow-x: auto"></div>');

	(function() { // DON'T EDIT BELOW THIS LINE
	var d = document, s = d.createElement('script');
	s.src = '//binary-ninja.disqus.com/embed.js';
	s.setAttribute('data-timestamp', +new Date());
	(d.head || d.body).appendChild(s);
	})();
	</script>
			</div>
			</div>
		</div>
	</div>
</div>

</div>
<footer class="pt-4 border-top px-5 mt-5 bg-secondary text-light">
	<div class="container">
		<div class="row justify-content-between">
			<div class="col-md-4">
				<div>
					<p>Binary Ninja is brought to you by Vector 35, a group of hackers who started to make games and reversing tools. Or maybe they're game developers who still think they can hack? Either way, they're having fun doing it.</p>
				</div>
				<p>
					© 2021 VECTOR 35 Inc. All rights reserved<br />
					BinaryNinja® is a registered trademark of VECTOR 35 Inc
					<br />

				</p>
			</div>
			<div class="col-md-4">
				<div>
					<p class="address">Vector 35 Inc<br />PO Box 971<br />Melbourne, FL 32902</p>
					<p class="email"><a href="/cdn-cgi/l/email-protection#abc9c2c5cad9d2c5c2c5c1caebddcec8dfc4d9989e85c8c4c6"><span class="__cf_email__" data-cfemail="0f6d66616e7d76616661656e4f796a6c7b607d3c3a216c6062">[email&#160;protected]</span></a></p>
					<p class="phone">+1-866-983-3135</p>
					<p class="phone"><span class="slack-button "><a class="slack-btn" href="https://join.slack.com/t/binaryninja/shared_invite/zt-3u4vu3ja-IGUF4ZWNlD7ER2ulvICvuQ" target="_blank"><span class="slack-ico"></span><span class="slack-text">Slack</span></a></span></p>
				</div>

			</div>
			<div class="col-md-4 changelog">
				<h3>
					<a href="/changelog/">Changelog</a>
				</h3>
			</div>
		</div>

		<div class="row justify-content-between text-center">
			<div class="col-md-4">
				<a href="https://docs.binary.ninja/about/license.html">Software EULA</a>
			</div>

			<div class="col-md-4">
				<a href="/privacy/">Privacy Policy</a>
			</div>
			<div class="col-md-4">
					<a class="fab fa-slack px-1" href="https://slack.binary.ninja/"></a>
					<a class="fab fa-twitter px-1" href="https://twitter.com/vector35"></a>
					<a class="fab fa-youtube px-1" href="https://youtube.com/c/Vector35"></a>
					<a class="fab fa-linkedin px-1" href="https://www.linkedin.com/company/vector-35"></a>
					<a class="fab fa-facebook px-1" href="https://www.facebook.com/TheRealBinaryNinja/"></a>
			</div>
		</div>
		<br>
		<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script>
			(function(d,t) {
				var BASE_URL="https://chatwoot-bn.herokuapp.com";
				var g=d.createElement(t),s=d.getElementsByTagName(t)[0];
				g.src=BASE_URL+"/packs/js/sdk.js";
				s.parentNode.insertBefore(g,s);
				g.onload=function(){
					window.chatwootSDK.run({
						websiteToken: 'saXGxpqVpsmERCnbPDCwVnsu',
						baseUrl: BASE_URL
					})
				}
			})(document,"script");
		</script>

		<script>
			(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
					(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
				m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
			})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

			ga('create', 'UA-72420552-2', 'auto');
			ga('send', 'pageview');
		</script>
	</div>
</footer>
</body>
</html>

