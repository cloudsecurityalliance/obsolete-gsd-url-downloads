<!doctype html>
<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!-- Consider adding a manifest.appcache: h5bp.com/d/Offline -->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en" xmlns="http://www.w3.org/1999/xhtml">
 <!--<![endif]-->
 <head> 
  <meta charset="utf-8"> 
  <!-- Use the .htaccess and remove these lines to avoid edge case issues. More info: h5bp.com/i/378 --> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
  <meta name="description" content="REDCap Community platform for the REDCap consortium. REDCap is a mature, secure web application for building and managing online surveys and databases. http://projectredcap.org"> 
  <!-- Mobile viewport optimized: h5bp.com/viewport --> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <title>        Sign in - REDCap Community
</title> 
  <script type="text/javascript">
    var askFormURL = '/questions/ask.html';
    var logoutURL = '/users/logout.html';
    var voteUpJsonURL = '/commands/0/voteup.json';
    var voteDownJsonURL = '/commands/0/votedown.json';
    var getVotesJsonUrl = '/%7Bnode%7D/getVotes.json';
    var related_questions_url = '/search.json';
    var emailCheckerURL = '/users/temporaryLogin/dupsUserEmailCheck.json';

    var authorizedFileTypes = 'pdf,csv,txt,zip,doc,docx,xls,xlsx,ppt,pptx,css,php,html,js,htm,gif,png,jpg,jpeg,7z,ini,xml,patch,diff'.split(",");
    var authorizedImageTypes = 'gif,png,jpg,jpeg'.split(",");

    var flashMessages = [];

    var pageContext = {
        currentUser: {
            id: '',
            username: 'Anonymous',
            url: '#',
            avatar: '',
            reputation: '',
            follows: null,
            canCreateTopics: false,
            haveAlterEgoRole:false,
            canHideModeratorEdit:false,
            canViewUserProfile: false
        },
        i18n: {
            editor: {
                tabShortcut: "Tab to the formatting toolbar with the Alt or Option key plus F10.",
                defaultLabel: "Add some details...",
                usersFound:"$n users found available for tagging. Press up or down to navigate through available users.",
                userSelected:"User $n selected. Press enter to tag user.",
                userTagged:"User $n tagged."
            },
            wmdPopover: {
                title: "Markdown Basics",
                text: '&bull; *italic* or _italic_<br/>&bull; **bold** or __bold__<br/>&bull; <b>link</b>:[text](http://url.com/ "title")<br/>&bull; <b>image</b>?![alt text](/path/img.jpg "title")<br/>&bull; numbered list:  1.  Foo  2.  Bar<br/>&bull; to add a line break simply add two spaces to where you would like the new line to be and hit enter/return.<br/>'.replace(/\n/g, '<br />')
            },
            publishSuccess: "This post was successfully published.",
            spamSuccess: "This post has been rejected as spam.",
            rejectSuccess: "This post has been rejected.",
            cancelRejectSuccess: "This post has been moved to the moderation queue.",
            cancelReportSuccess: "The report on this post has been successfully canceled.",
            userAvatar: "avatar image",
            userSuspended:"Suspended",
            userDeactivated:"Deactivated",
            confirm: "Are you sure?",
            spaceLabel: 'space',
            yes: "Yes",
            no: "No",
            isDeleted: "This %%postType%% has been deleted.",
            isUndeleted: "This %%postType%% has been undeleted.",
            save: "Save Changes",
            cancel: "Cancel",
            submit: "Submit",
            disabled: "Disabled",
            close: "Close",
            edit: "Edit",
            insert: "Insert",
            upload: "Upload",
            sticky: "Sticky",
            redirectSuccess: "This question has been successfully redirected.",
            redirectMessage: "This question was redirected from <b>%%redirectLink%%</b>",
            cancelRedirect: "Cancel Redirect",
            srSticky: "Sticky 0",
            SiteSticky: "Site Sticky",
            srSiteSticky: "Site Sticky %%postType%%",
            isSticky: "This %%postType%% is sticky.",
            isUnsticky: "This %%postType%% is no longer sticky.",
            isSiteSticky: "This %%postType%% is site sticky.",
            isSiteUnsticky: "This %%postType%% is site no longer sticky.",
            download: "Download",
            choose: "Choose",
            replyLinkLocked: "Comments Locked",
            commentsLocked: "Locked",
            srCommentsLocked: "Locked %%postType%%",
            commentsUnlocked: "Unlocked",
            postLocked: "This %%postType%% has been locked.",
            postUnlocked: "This %%postType%% has been unlocked.",
            idea: "Idea",
            kbentry: "article",
            deleted: "Deleted",
            srDeleted: "Deleted %%postType%%",
            deleteAllPosts: "Delete all user's posts",
            makeSuperUser: "Make super user",
            undeleted: "Undeleted",
            srUndeleted: "post undeleted",
            ok: "Ok",
            generalError: 'An error occurred',
            by: "by",
            ideaStatusLabel: "Idea Status",
            ideaStatusAlert: "This idea's status has been updated to $n",
            word: "word",
            words: "words",
            character: "character",
            characters: "characters",
            login: "Sign in",
            register: "Register",
            timeAgo: "{0} ago",
            timeAt: "at",
            day: "day",
            days: "days",
            hour: "hour",
            hours: "hours",
            minute: "minute",
            minutes: "minutes",
            second: "sec",
            seconds: "secs",
            justNow: "just now",
            retag: "retag",
            comment: "Comment",
            comments: "label.comments",
            showOneComment: "<i class='fa fa-comments-o' aria-hidden='true'></i> Show",
            hideOneComment: "<i class='fa fa-comments' aria-hidden='true'></i> Hide",
            showNComments: "<i class='fa fa-comments-o' aria-hidden='true'></i> Show",
            hideNComments: "<i class='fa fa-comments' aria-hidden='true'></i> Hide",
            question: "question",
            questions: "Questions",
            answerLabel: "Answer",
            answers: "Answers",
            posts: "Posts",
            post: "Post",
            wiki: "Wiki",
            srWiki: "Wikified %%postType%%",
            wikifiedAlert: "This post has been wikified, any user with enough reputation can edit it.",
            unwikifiedAlert: "This post has been unwikified.",
            reputation: "Reputation",
            unlike: "Unlike",
            srUnlike: "Click to unlike.",
            like: "Like",
            srLike: "Click to like.",
            likes: "Likes",
            currentNumberOfLikes: "Current number of likes",
            cancelVote: "Click to cancel vote",
            cancelDownVote: "Click to cancel downvote",
            cancelUpVote: "Click to cancel upvote",
            voteDown: "Click to down vote",
            voteUp: "Click to up vote",
            contentDownVoted: "Content downvoted.",
            contentUpVoted: "Content upvoted.",
            voteCancelled: "Vote cancelled.",
            favourite: "Favorite",
            favourited: "This %%postType%% has been added to favorites. Click to remove from favorites.",
            unfavourite: "Favorited",
            unfavourited: "This %%postType%% has been removed from favorites. Click to add to favorites.",
            follow: "Follow",
            unfollow: "Unfollow",
            following: "Following",
            followers: "Followers",
            awarded: "Awarded",
            completedBy: "Recently completed by",
            joined: "Joined",
            revisionLoaded: "Revision nrevisions has been loaded into the form below.",
            authorizedTypes: "Allowed Upload Types",
            uploadDialog: {
                uploadFile: "Choose a file to upload",
                selectedFile: "File selected $selectedFile for upload",
                doUpload: "Upload",
                fileTooBig: "Your attachment must be $size or smaller.",
                invalidAttachmentType: "Your attachment must be one of: attachmentTypes",
                invalidImageType: "Your image must be one of: imageTypes",
                allowedTypes: "Allowed Upload Types",
                maxSizeBytes: "Maximum Allowable Image Size",
                bytes: "Mb",
                uploadFromComputer: "Upload from Computer",
                uploadButtonDescription: "Drop file (or Click) to upload a file from your computer",
                selectFile: "Select File",
                uploadFailed: "Upload failed",
                imageUploadFailed: "Image upload failed"
            },
            previewAndCropDialog: {
                previewAndResize: "Preview and resize",
                accept: "Accept",
                croppedSelection: "Cropped Selection"
            },
            removeAttachment: "Remove attachment",
            removeSuspension: "Remove suspension",
            confirmMakeModerator: "Make moderator",
            askSimilarQuestionsScreenreader: "questions found that may already have your answer. Press tab or continue editing.",
            ssoReAuthenticateTitle: "sso.reauth.title",
            closeQuestionTitle: "Close or Flag",
            lockPostModalTitle: "Lock",
            reportQuestionModalTitle: "Report",
            confirmModalTitle: "Please confirm",
            convertToAnswerText: "Are you sure you want to convert this comment to answer?",
            convertToAnswerLabel: "Convert to answer",
            unlockPostModalText: "Are you sure you want to allow comments on this post?",
            cancelReportModalText: "Are you sure you want to undo reporting this post?",

            reportSuccessText: "This post has been successfully reported.",
            reportCancelText: "Your report on this post has been successfully canceled.",

            commandsMoveToSpace: "Move",
            commandsGiveReputation: "Reward user",
            commandsGiveReputationSuccess: "Points awarded successfully",
            commandsConvertToCommentTitle: "Select comment location",
            uploadProfilePictureSelectButton: "Select photo from your computer",
            changeAvatarSelectButton: "Select photo from your computer",
            changeAvatarSelectNoPhoto: "No photo selected",
            postControlsRedirectTitle: "Redirect",
            WMDToolbarLabel: "Formatting Toolbar",
            WMDEditorTabHint: "Tab to the formatting toolbar with Alt/Option + T.",
            WMDEditorSRTabHint: "Tab to the formatting toolbar with the Alt or Option key plus F10.",
            WMDCodeEditorText: "enter code here",
            WMDAddCodeText: "Add code to your post",
            WMDImageDialogText: "Enter image url",
            WMDLinkDialogText: "Enter url",
            WMDUploadImage: "upload image",
            WMDBold: "Strong <strong> Ctrl+B",
            WMDSRBold: "Strong",
            WMDSRBoldDesc: "Add Strong to text by clicking or by using Control plus B inside the text area.",
            WMDItalic: "Emphasis <em> Ctrl+I",
            WMDSRItalic: "Emphasis",
            WMDSRItalicDesc: "Add Emphasis to text by clicking or by using Control plus I inside the text area.",
            WMDLink: "Hyperlink <a> Ctrl+L",
            WMDSRLink: "Hyperlink",
            WMDSRLinkDesc: "Add a Hyperlink by clicking or by using Control plus L inside the text area.",
            WMDQuote: "Blockquote <blockquote> Ctrl+Q",
            WMDSRQuote: "Blockquote",
            WMDSRQuoteDesc: "Add a Blockquote by clicking or by using Control plus Q inside the text area.",
            WMDCode: "Code Sample <pre><code> Ctrl+K",
            WMDSRCode: "Code Sample",
            WMDSRCodeDesc: "Add a Code Sample by clicking or by using Control plus K inside the text area.",
            WMDImage: "Image <img> Ctrl+G",
            WMDSRImage: "Image",
            WMDSRImageDesc: "Add an Image by clicking or by using Control plus G inside the text area.",
            WMDAttachment: "Attachment",
            WMDSRAttachment: "Attachment",
            WMDSRAttachmentDesc: "Click to add an Attachment.",
            WMDOrderedList: "Numbered List <ol> Ctrl+O",
            WMDSROrderedList: "Numbered List",
            WMDSROrderedListDesc: "Add a Numbered List by clicking or by using Control plus O inside the text area.",
            WMDUnorderedList: "Bulleted List <ul> Ctrl+U",
            WMDSRUnorderedList: "Bulleted List",
            WMDSRUnorderedListDesc: "Add a Bulleted List by clicking or by using Control plus U inside the text area.",
            WMDHeading: "Heading <h1>/<h2> Ctrl+H",
            WMDSRHeading: "Heading",
            WMDSRHeadingDesc: "Add a Heading to text by clicking or by using Control plus H inside the text area.",
            WMDHorizontalRule: "Horizontal Rule <hr> Ctrl+R",
            WMDSRHorizontalRule: "Horizontal Rule",
            WMDSRHorizontalRuleDesc: "Add a Horizontal Rule to text by clicking or by using Control plus R inside the text area.",
            WMDUndo: "Undo - Ctrl+Z",
            WMDSRUndo: "Undo",
            WMDSRUndoDesc: "Click to Undo or use Control plus Z inside the text area.",
            WMDRedoWin: "Redo - Ctrl+Y",
            WMDSRRedoWin: "Redo",
            WMDSRRedoWinDesc: "Click to Redo or use Control plus Y inside the text area.",
            WMDRedoOther: "Redo - Ctrl+Shift+Z",
            WMDSRRedoOther: "Redo",
            WMDSRRedoOtherDesc: "Click to Redo or use Control plus Shift plus Y inside the text area.",
            WMDHelp: "Markdown Help",
            WMDSRHelp: "Markdown Help",
            WMDSRHelpDesc: "Markdown Help. This will redirect you to a new tab.",
            WMDPreviewMode: "This content is in preview mode and cannot be edited.",
            WMDImageUploadOnly: "Only images can be uploaded via copy and paste.",

            draftMessage: "We noticed that you were previously working on TYPO. What would you like to do now?",
            draftSaveMessage: "Saving Draft...",
            draftLoadButton: "Load Draft",
            draftDeleteButton: "Delete Draft",

            linkMenuInsertLink: "Insert link",
            linkMenuEditLink: "Edit link",
            linkMenuUnlink: "Remove link",
            linkMenuAnchor: "Anchor",
            linkMenuMailto: "Email",
            inputTextPrompt: "Text",
            inputWebPrompt: "URL",
            inputLinkNewTab: "Open link in a new tab",
            inputImageForm: "Update Image",
            inputImageTitle: "Title",
            inputImagePosition: "Position",
            inputImagePositionNone: "None",
            inputImagePositionLeft: "Left",
            inputImagePositionRight: "Right",

            formattingLabel: "Formatting",
            formattingParagraph: "Normal Text",
            formattingQuote: "Quote",
            formattingCode: "Code",
            formattingHeader: "Header",
            formattingBold: "Bold",
            formattingItalic: "Italic",
            formattingUnderline: "Underline",
            formattingFontColor: "Font Color",
            formattingBackColor: "Back Color",
            formattingIndent: "Indent",
            formattingOutdent: "Outdent",
            formattingAlignment: "Alignment",
            formattingAlignLeft: "Align text to the left",
            formattingAlignCenter: "Center text",
            formattingAlignRight: "Align text to the right",
            formattingAlignJustify: "Justify text",
            formattingHorizontalRule: "Insert Horizontal Rule",

            toolTipsInsertImage: "Insert Image",
            toolTipsInsertFile: "Insert File",
            toolTipsInsertCode: "Insert Code",
            toolTipsInsertVideo: "Insert Video",
            toolTipsInsertTable: "Insert Table",
            toolTipsorderedList: "Ordered List",
            toolTipsunorderedList: "Unordered List",
            toolTipLink: "Link",

            tableInsert: "Insert Table",
            tableRows: "Rows",
            tableColumns: "Columns",
            tableInsertRowAbove: "Add Row Above",
            tableInsertRowBelow: "Add Row Below",
            tableInsertColumnLeft: "Add Column Left",
            tableInsertColumnRight: "Add Column Right",
            tableDelete: "Delete Table",
            tableDeleteColumn: "Delete Column",
            tableDeleteRow: "Delete Row",
            tableAddHead: "Add Header",
            tableDeleteHead: "Delete Header",

            uploadOrChoose: "Or Choose",
            uploadDropFileHere: "Drop file here",
            uploadFilenameOptional: "Name (optional)",
            emailValidationPrompt: "Resend validation email",
            emailValidationPromptBody: "Do you want to resend email validation?",
            invalidReputation: "Error: You must enter a valid Integer without commas.",
            editorDifferentFromPreference: {
                msg: "This post was created with LANGUAGE, which is different from your editor language preference.",
                question: "Do you want to edit the post body in this markup language?",
                yes: "Edit Post",
                no: "Cancel"
            },
            uploadPhotoError: "There was an error uploading the user photo.",
            froalaTabHint: "Tab to the formatting toolbar with Alt/Option + F10. If inside toolbar, press ESC to return to editor.",
            froalaSrTabHint: "Tab to the formatting toolbar with the Alt or Option key plus F10. If inside toolbar, press ESC to return to editor.",
            froalaSourceHint: "In Source mode, press ESC to bring focus outside the textarea. Press Enter to bring focus in the textarea.",
            coverImage: {
              imageGalleryLabel: "Select Cover Image",
              imageGalleryAria: "Showing page curPage of totalPage."
            },
            showNMore:  "Show $n more...",
            showNLess:  "Show $n less...",
            makeNodePrivate: {
                modal: "Are you sure you want to make this post private? Only you and users with special permissions will be able to see it.",
                success: "This post has been made private.",
                error: "Something went wrong trying to switch post privacy.",
            },
            makeNodePublic: {
                modal: "Are you sure you want to make this post public? All users will be able to see it.",
                success: "This post has been made public.",
            },
            share: {
                msgMaximumSelected: "You may only share with up to maximumSelected users at once",
                msgMinimumInputLength: "At least minimumInputLength user is required to share.",
                msgSuccess: "Shared",
                msgError: "Something went wrong"
            }
        },
        answer: {
            edit: {
                revisionLoaded: "Revision nrevisions has been loaded into the form below."
            }
        },
        url: {
            base: "",
            login: "/users/login.html",
            register: "/users/register.html",
            getRevision: "/revisions/get-revision.json",
            getComments: "/comments/%25ID%25/list.json",
            authorizeAttachments: "/authorizeAttachment.json",
            uploadFile: "/uploadFile.html",
            uploadFileJson: "/uploadFile.json",
            uploadProgress: "/uploadProgress.json",
            uploadPreview: "/uploadPreview.html",
            cropUpload: "/cropUpload.json",
            cancelUpload: "/cancelUpload.json",
            profile: "/users/{id}/{plug}.html",
            extractKeywords: "/extract-keywords.json",
            follow: "/follow/%7BobjId%7D/%7Btype%7D.json",
            unfollow: "/unfollow/%7BobjId%7D/%7Btype%7D.json",
            getUserFollows: "/%7Buser%7D/getUserFollows.json",
            condensedProfileUrl: "/users/%7Buser%7D/condensedProfile.json",
            viewTopicJSON: "/topics/%7Btopic%7D/view.json",
            topicIcon: "/topics/%7Btopic%7D/icon.html",
            topic: "/topics/%7Btopic%7D/%7Btopic.title%7D.html",
            topicSearch: "/search/topics.json",
            awardListUrl: "/badge/%7BawardType%7D/%7Bdesc%7D.json",
            usersSearch: "/users/list.json",
            removeAsk: '/questions/%7Bquestion%7D/%7BaskedToAnswer%7D/removeAskToAnswer.json',
            usersLookup: "/users/lookup.json",
            mentionsSearch: "/users/mentionsSearch.json",
            searchJson: "/search.json",
            trackJs: "/static/trackJs.json",
            userAvatar: "/users/%7BuserId%7D/photo/view.html",
            reloadAskList: "/questions/%7Bquestion%7D/askedToAnswerList.html?unstyled=true",
            revisionView: "/revisions/{nodeId}.html",
            authorizeAttachmentsUrl: "/authorizeAttachment.json",
            authorizeUploadCoverImage: "/authorizeUploadCoverImage.json",
            saveCoverImage: "/saveCoverImage.json",
            getCoverImages: "/getCoverImages.json",
            shareInternal: "/share/shareInternal.json",
            userShareList: "/share/userShareList.json",
        },
        extraScripts: {
            jcrop: {
                js: '/themes/thub/scripts/jcrop/js/jquery.Jcrop.js',
                css: '/themes/thub/scripts/jcrop/css/jquery.Jcrop.css'
            }
        },
        options: {
        	maxTopics: '5',
            gravatarEnabled: true,
            extractKeywordsEnabled: true,
	       	attachments: {
	               'comment': {
                       enabled: true,
                       maxSizeBytes: 31457280,
                       maxSizeBytesTotal: 1048576000
                   },
	               'kbentry': {
                       enabled: true,
                       maxSizeBytes: 31457280,
                       maxSizeBytesTotal: 1048576000
                   },
	               'answer': {
                       enabled: true,
                       maxSizeBytes: 31457280,
                       maxSizeBytesTotal: 1048576000
                   },
	               'question': {
                       enabled: true,
                       maxSizeBytes: 31457280,
                       maxSizeBytesTotal: 1048576000
                   },
	               'idea-comment': {
                       enabled: true,
                       maxSizeBytes: 31457280,
                       maxSizeBytesTotal: 1048576000
                   },
	               'idea': {
                       enabled: true,
                       maxSizeBytes: 31457280,
                       maxSizeBytesTotal: 1048576000
                   }
            },
            coverImages: {
                    maxSizeBytes:'5242880',
                    minSizeBytes:'1',
                    allowedTypes:'gif,png,jpg,jpeg'.split(','),
            },
            keepAliveTimeout: 60,
            isAutoSaveEnabled: false,
            autoSaveDialogTitle: "{0} previous version",
            autoSaveDialogBody: "There is a previous version saved, do you want to load or discard it ?",
            topicImageUploadContext: {
                authorizedImageTypes: 'jpg,gif,png,jpg,jpeg,svg'.split(','),
                maxSizeBytes: 5242880
            },
            userImageUploadContext: {
                authorizedImageTypes: 'jpg,gif,png,jpg,jpeg,svg'.split(','),
                maxSizeBytes: 5242880
            },
            charCommentMaxBodyLength: 65000,
            siteNotificationsImageMaxSizeBytes: 512000,
            share: {
                maximumSelectionLength: 10,
                minimumInputLength: 1
            }
        },
        authorizedImageTypes: authorizedImageTypes,
        sanitizationProfile: {
            "dd": [
            ],
            "small": [
            ],
            "sub": [
            ],
            "img": [
            	"src",
            	"alt",
            	"style"
            ],
            "strong": [
            ],
            "code": [
            ],
            "dl": [
            ],
            "h1": [
            ],
            "hr": [
            ],
            "del": [
            ],
            "h2": [
            ],
            "h3": [
            ],
            "h4": [
            ],
            "sup": [
            ],
            "dt": [
            ],
            "div": [
            	"class",
            	"id",
            	"style"
            ],
            "br": [
            ],
            "param": [
            ],
            "ul": [
            ],
            "embed": [
            	"src",
            	"version",
            	"type",
            	"width",
            	"height",
            	"allowscriptaccess",
            	"allowfullscreen"
            ],
            "iframe": [
            	"width",
            	"height",
            	"src",
            	"frameborder",
            	"marginheight",
            	"marginwidth",
            	"allowfullscreen"
            ],
            "ol": [
            ],
            "table": [
            ],
            "a": [
            	"rel",
            	"nodeid",
            	"href",
            	"target"
            ],
            "b": [
            ],
            "blockquote": [
            ],
            "pre": [
            ],
            "strike": [
            ],
            "em": [
            ],
            "i": [
            ],
            "td": [
            ],
            "p": [
            	"style"
            ],
            "q": [
            ],
            "th": [
            ],
            "u": [
            ],
            "cite": [
            ],
            "li": [
            ],
            "tr": [
            ],
            "object": [
            ],
            "font": [
            	"color"
            ]
        },
        searchListableTypes: [
	        "question",
	        "idea",
	        "kbentry"
        ],
        additional: {},
        useRelativeTime: true,
        userRealName: false,
        csrf: {
            parameter: '_csrf',
            header: 'X-CSRF-TOKEN',
            setToken: function(value) {
                sessionStorage["AH" + '_csrf'] = value;
            },
            getToken: function() {
                return sessionStorage["AH" + '_csrf'];
            }
        },
        locale: 'en',
        currentEditor: {
            name: 'froala',
            label: 'HTML Editor',
            helpLink: '',
            helpLinkAriaLabel: "Open help documentation in a new tab",
            previewAriaLabel: "Show Preview in the text editor",
            sourceAriaLabel: "Show HTML source in the text editor",
            enableLineNum: false
        },
        markupLanguageObjects: {
            'text': {
                label: 'Plain Text',
                helpLink: ''
            },
            'froala': {
                label: 'HTML Editor',
                helpLink: ''
            }
        },
        sanitizationEscapeHtml: false,
        survey: {
            deadlineButton: {
                ariaLabel : "Click or press the Enter key or the spacebar to open the calendar"
            }
        }

    };
    pageContext.i18n["delete"] = "Delete";
    pageContext.csrf.setToken('67dc3ca1-a964-4ab8-a289-6ee4f7f3cab4');

</script> 
  <!--[if lte IE 10]>
    <script src="/themes/thub/scripts/compatibility/indexOf.js" type="text/javascript"></script>
    <![endif]--> 
  <!--[if lt IE 9]>
    <script src="/themes/thub/scripts/compatibility/document.getSelection.js" type="text/javascript"></script>
    <script src="/themes/thub/scripts/compatibility/ierange-m2-packed.js" type="text/javascript"></script>
    <style type="text/css">
        input[type="password"] {
            font-family: Arial;
        }
    </style>
    <![endif]--> 
  <script type="text/javascript" src="/themes/redcap-theme/pack/542dd20e93e1dbf5165b29427b17941b.pack.js" charset="utf-8"></script>
  <script type="text/javascript" src="/themes/redcap-theme/pack/8b7b52133fedd3fe9f5bfb480ba436c4.pack.js" charset="utf-8"></script> 
  <script type="text/javascript">
(function ($) {
    "use strict";

    $.extend($.fn.select2.defaults, {
        formatNoMatches: function () {
            return 'No matches found';
        },
        formatInputTooShort: function (input, min) {
            var n = min - input.length;
            if (n == 1) {
                return 'Please enter 1 more character.';
            }
            else {
                var return_str = "Please enter $n more characters.";
                return return_str.replace("$n", n.toString());
            }
        },
        formatInputTooLong: function (input, max) {
            var n = input.length - max;
            if (n == 1)
                return 'Please delete 1 character.';
            else {
                var return_str = 'Please delete $n characters.';
                return return_str.replace("$n", n.toString());
            }
        },
        formatSelectionTooBig: function (limit) {
            if (limit == 1)
                return 'You can only select 1 item.';
            else {
                var return_str = 'You can only select $n items.';
                return return_str.replace("$n", limit.toString());
            }
        },
        formatLoadMore: function (pageNumber) {
            return 'Loading more results...';
        },
        formatSearching: function () {
            return 'Searching...';
        }
    });
})(jQuery);
</script> 
  <link rel="shortcut icon" href="/themes/thub/images/favicon.ico"> 
  <!-- Core Bootstrap css + Kickstrap styles --> 
  <link rel="stylesheet" type="text/css" href="/themes/redcap-theme/pack/3be46f713ff0e2661f9af759937743a3.pack.css" charset="utf-8">
  <link rel="stylesheet" type="text/css" href="/themes/redcap-theme/pack/48cb1efc4387a33b6a517c8307d1ea8e.pack.css" charset="utf-8"> 
  <!--[if lt IE 9]>
    <script type="text/javascript">
        $(document).ready(function() {
            var $style;
            $style = $('<style type="text/css">:before,:after{content:none !important}</style>');
            $('head').append($style);
            return setTimeout((function() {
                return $style.remove();
            }), 0);
        });
    </script>
    <![endif]--> 
  <style type="text/css">
.navbar-fixed-top .navbar-inner {
  background: #070707;
  border-color: #070707;
}
.btn-success {
  background:#ad242d !important;
}
.btn-primary {
  background: #ad242d !important;
}
a {
  text-decoration: none;
}
a {
  color: #070707;
}
a:hover {
  color: #ad242d;
}
.nav-pills > .active > a, .nav-pills > .active > a:hover, .nav-pills > .active > a:focus {
  background-color: #070707
}
.nav-tabs > li > a, .nav-pills > li > a { color: #ad242d }
.social-login, .seperate-or { display: none; }

/* REDCap changes */
/* .post-container li, .fr-wrapper li { text-indent: -20px; margin-left:10px; } */
.fr-view ul, .fr-view ol { list-style-position: initial !important; }
.post-container .node-body a:link, .post-container .node-body a:visited, .post-container .node-body a:active, .post-container .node-body a:hover { text-decoration: underline; color:#ad242d; }
.post-container .question-body a:link, .post-container .question-body a:visited, .post-container .question-body a:active, .post-container .question-body a:hover { text-decoration: underline; color:#ad242d; }
.post-container .reply-body a:link, .post-container .reply-body a:visited, .post-container .reply-body a:active, .post-container .reply-body a:hover { text-decoration: underline; color:#ad242d; }
.post-container .answer-body a:link, .post-container .answer-body a:visited, .post-container .answer-body a:active, .post-container .answer-body a:hover { text-decoration: underline; color:#ad242d; }
.comments-container .comment-text a:link, .comments-container .comment-text a:visited, .comments-container .comment-text a:active, .comments-container .comment-text a:hover { text-decoration: underline; color:#ad242d; }
/* .question-list-item { margin-left: 38px !important; } */
.node-title ul.dropdown-menu li.item { font-size: 14px; }
.node-list-item .title a:visited { color: #AE9092; }
.comments-container { display: block; }
.show-comments-container { display:none; }
.comment-text { font-size: 14px; color: #333333; }
.ui-menu {z-index: 3000 !important;}
.vote-widget-controls { display: none !important; }

/* tighten up the code blocks */
/* 
pre.prettyprint {font-size: 11px; line-height: 1.0; background-color: #fafafa;}
pre.prettyprint ol {margin-left: -10px; }
pre.prettyprint ol li {line-height: 1.0; padding: 0; margin: 1px 0; list-style-type:none;}
li.L1, li.L3, li.L5, li.L7, li.L9 { background-color: #f5f5f5;  }
.redactor_editor pre { font-size: 75% !important; line-height: 1rem; }  
*/
/* remove code line numbers in code blocks */
/* 
pre.prettyprint.linenums li { list-style-type: none; word-break: break-word; }
*/
pre.prettyprint.linenums.no-num ol li { text-indent: 0px; }

/* remove the side bar to take advantage of real-estate in all but very wide windows */
/* .sidebarTwo {display:none;} */
/* .mainContent {width: 80%;} */
@media (min-width: 1200px) {
  .sidebarTwo {display:inherit; width: 15%; }
  .mainContent {width: 80%; margin-left: 2px; }
  .container { width: 90%; }
}
/* .sticky-posts-list div {display:list-item;margin-bottom:3px;margin-left: 10px;line-height: 1.3;} */
#main-navbar .navbar-inner.brand-nav img { padding: 3px 0; }
</style> 
  <script type="text/javascript">
var currentUrl = window.location.href;
var onBugReportPage = (currentUrl.indexOf('/questions/ask.html?') > -1 && currentUrl.indexOf('space=26') > -1);
$(function(){

	setTimeout(function(){ $('.comments-container').show();$('.comments-expand:visible').click(); }, 500);
	setTimeout(function(){ $('.comments-container').show();$('.comments-expand:visible').click(); }, 1000);
	setTimeout(function(){ $('.comments-container').show();$('.comments-expand:visible').click(); }, 2000);
	
	// When click the caret next to question/article title, make sure the drop-down is positioned properly (previously would go off page)
	$('.dropdown-toggle.list-level-entries').click(function(){
		$('.node-title ul.dropdown-menu').css('left','0px');
	});
	
	// Submit bug
	if (onBugReportPage) {
		document.getElementsByClassName('widget-header')[0].innerHTML = '<div style="font-size:24px;font-weight:bold;padding:10px 0 20px;">Report a Bug</div>'
			+ '<div style="padding:5px 0 20px;">This page is used for reporting software bugs that exist in the REDCap software. '
			+ 'In the description box below, please be sure to <u><b>provide your REDCap version</b></u>, and also attach any files or screenshots that will be helpful in troubleshooting this bug. '
			+ 'Thank you for helping us improve REDCap!</div>';
		document.getElementById('title').setAttribute('placeholder','Enter title of your bug report...');
		document.getElementsByClassName('controls')[0].getElementsByTagName('label')[0].innerHTML = '<b style="color:#C00000;">Bug title:</b>';
		document.getElementById('submit-question').value = 'Submit bug report';	
		document.getElementById('space-selector').style.display = 'none';
		document.getElementsByClassName('body-hints')[0].style.display = 'none';
		$('#body-label').html('<div style="padding:3px 0;font-weight:bold;color:#C00000;">Bug description:</div>');
		$('.required-asterisk, .denotes-required').hide();
	}
	// Viewing the Bug Report space
	if (onBugReportPage || currentUrl.indexOf('/spaces/26/index.html') > -1) {
		document.getElementsByClassName('btn-group')[0].innerHTML = '<button class="btn btn-success" onclick=\'window.location.href="/questions/ask.html?space=26&topics=bug";\'><a style="font-family: Gotham, Helvetica, sans-serif; font-weight: 20; font-size: 14px; color: #FFFFFF;" '
			+ 'href="javascript:;">Report a bug</a> </button>';
	}
	// Hide "Parent Article" option
	if (currentUrl.indexOf('/articles/create.html') > -1) {
		$('#s2id_parentEntry').parent().hide();
	}
	// Add underline to all links
	if (currentUrl.indexOf('/articles/create.html') > -1) {
		$('#s2id_parentEntry').parent().hide();
	}
});

// Reroute to community.projectredcap.org if on the wrong domain
if (currentUrl.indexOf('//redcap.cloud.answerhub.com') > -1) {
	alert('REDIRECTING: You will now be redirected to https://community.projectredcap.org, which is the correct site that you should go to in the future. Note: You may need to log in again after this.');
	window.location.href = 'https://community.projectredcap.org';
}
</script> 
  <script>
$(document).ready(function(){
$('.post-body p > a, .comment-text p > a').attr('target','_blank');

});
</script> 
  <script type="text/javascript">
        $(document).ready(function(){pageContext.options.commentsAttachmentsEnabled = true});
    </script> 
 </head> 
 <body> 
  <div> 
  </div> 
  <div id="not-footer"> 
   <div class="off-canvas-nav" id="sidr" role="navigation" aria-label="Mobile Navigation"> 
    <ul class="nav nav-list"> 
     <li> <a tabindex="-1" href="/"><i class="fa fa-home"></i> Home</a> </li> 
     <li class="nav-header"> Anonymous </li> 
     <li> <a tabindex="-1" href="/users/login.html">Sign in</a> </li> 
     <li class="nav-header">Create</li> 
     <li class="nav-header">Spaces</li> 
     <li class="nav-header">Explore</li> 
     <li> <a href="https://community.projectredcap.org/topics.html">Topics</a> </li> 
    </ul> 
   </div> 
   <div role="banner"> 
    <a id="skip-navigation " href="#middle" class="sr-only sr-only-focusable skip-navigation">Skip to main content</a> 
    <div id="main-navbar" role="navigation" aria-label="Main Navigation" class="navbar navbar-fixed-top"> 
     <div class="navbar-inner brand-nav"> 
      <div class="container brand-container"> 
       <a class="brand" href="/"> <img src="/themes/thub/images/logo.png?1,629,206,609,677" alt="REDCap Community"> </a> 
      </div> 
     </div> 
    </div> 
   </div> 
   <section role="main" id="middle"> 
    <div class="main"> 
     <div class="main-inner"> 
      <div class="container"> 
       <div class="row"> 
        <div class="span12"> 
         <div class="login row-fluid"> 
          <div class="login-info span6"> 
           <h3>Expert knowledge sharing on REDCap Community</h3> 
           <ul class="icons-ul"> 
            <li><i class="icon-bolt icon-2x icon-li"></i> Find answers to your questions in a flash</li> 
            <li><i class="icon-thumbs-up icon-2x icon-li"></i> Vote and comment on other people's questions</li> 
            <li><i class="icon-group icon-2x icon-li"></i> Collaborate with other teams and departments</li> 
           </ul> 
          </div> 
          <div class="login-modes span6"> 
           <h2>Sign in</h2> 
           <form class="form" action="/login" method="post"> 
            <div class="control-group"> 
             <div class="controls"> 
              <div class="input-prepend"> 
               <span class="add-on"><i class="icon-user"></i></span> 
               <input type="text" id="username" aria-label="Username" name="username" value="" placeholder="Username or email" class="username-field" autocomplete="off"> 
              </div> 
             </div> 
            </div> 
            <div class="control-group"> 
             <div class="controls"> 
              <div class="input-prepend"> 
               <span class="add-on"><i class="icon-key"></i></span> 
               <input type="password" id="password" aria-label="Password" name="password" value="" placeholder="Password" class="password-field" autocomplete="off"> 
              </div> 
              <input type="submit" value="Sign in" class="pull-right btn btn-primary"> 
             </div> 
            </div> 
            <div class="actions clearfix"> 
             <div class="forgot-password-wrap">
              <a href="/users/temporaryLogin/request.html">Forgot your password?</a> 
             </div> 
             <label class="keepMeLoggedIn checkbox pull-left"> <input name="remember-me" type="checkbox" value="true" checked tabindex="0"> Keep me signed in </label> 
            </div> 
            <input type="hidden" name="_csrf" value="67dc3ca1-a964-4ab8-a289-6ee4f7f3cab4">
           </form> 
           <div class="seperate-or"> 
            <span class="or">Or connect with</span> 
           </div> 
           <div class="social-login clearfix"> 
            <form action="/j_spring_openid_security_check" id="openid_aol" method="post"> 
             <button class="button-to-link no-pad" onclick="$('#openid_placeholder').hide(); $('#openid_placeholder').html($('#input_area_aol').html()); $('#openid_placeholder').show(); return false;"> <img src="/themes/thub/images/openid/aol.png" class="login_img_aol" border="0" alt="AOL"> </button> 
             <div class="openid_input_area" style="display: none;" id="input_area_aol"> 
              <p>Enter your AOL username</p> 
              <input class="openid_identifier_aol" name="openid_identifier" type="hidden" value="http://openid.aol.com/%s"> 
              <input class="openid_entry_aol" name="openid_entry" type="text" value="" size="40"> 
              <div class="social-actions"> 
               <button class="btn btn-light" value="cancel" onclick="$('#openid_placeholder').hide();">Cancel</button> 
               <button class="btn btn-primary" value="Login" onclick="updateAndSubmitOpenID('aol'); return false;">Sign in</button> 
              </div> 
              <script type="text/javascript">
                $(".openid_entry_aol").keyup(function(e) {
                    if (e.keyCode == 13) {
                        updateAndSubmitOpenID('aol'); return false;
                    }
                });
            </script> 
             </div> 
             <input type="hidden" name="_csrf" value="67dc3ca1-a964-4ab8-a289-6ee4f7f3cab4">
            </form>
            <form action="/j_spring_openid_security_check" id="openid_flickr" method="post"> 
             <button class="button-to-link no-pad" onclick="$('#openid_placeholder').hide(); $('#openid_placeholder').html($('#input_area_flickr').html()); $('#openid_placeholder').show(); return false;"> <img src="/themes/thub/images/openid/flickr.png" class="login_img_flickr" border="0" alt="Flickr"> </button> 
             <div class="openid_input_area" style="display: none;" id="input_area_flickr"> 
              <p>Enter your Flickr username</p> 
              <input class="openid_identifier_flickr" name="openid_identifier" type="hidden" value="http://flickr.com/%s/"> 
              <input class="openid_entry_flickr" name="openid_entry" type="text" value="" size="40"> 
              <div class="social-actions"> 
               <button class="btn btn-light" value="cancel" onclick="$('#openid_placeholder').hide();">Cancel</button> 
               <button class="btn btn-primary" value="Login" onclick="updateAndSubmitOpenID('flickr'); return false;">Sign in</button> 
              </div> 
              <script type="text/javascript">
                $(".openid_entry_flickr").keyup(function(e) {
                    if (e.keyCode == 13) {
                        updateAndSubmitOpenID('flickr'); return false;
                    }
                });
            </script> 
             </div> 
             <input type="hidden" name="_csrf" value="67dc3ca1-a964-4ab8-a289-6ee4f7f3cab4">
            </form>
            <form action="/j_spring_openid_security_check" id="openid_technorati" method="post"> 
             <button class="button-to-link no-pad" onclick="$('#openid_placeholder').hide(); $('#openid_placeholder').html($('#input_area_technorati').html()); $('#openid_placeholder').show(); return false;"> <img src="/themes/thub/images/openid/technorati.png" class="login_img_technorati" border="0" alt="Technorati"> </button> 
             <div class="openid_input_area" style="display: none;" id="input_area_technorati"> 
              <p>Enter your Technorati username</p> 
              <input class="openid_identifier_technorati" name="openid_identifier" type="hidden" value="http://technorati.com/people/technorati/%s/"> 
              <input class="openid_entry_technorati" name="openid_entry" type="text" value="" size="40"> 
              <div class="social-actions"> 
               <button class="btn btn-light" value="cancel" onclick="$('#openid_placeholder').hide();">Cancel</button> 
               <button class="btn btn-primary" value="Login" onclick="updateAndSubmitOpenID('technorati'); return false;">Sign in</button> 
              </div> 
              <script type="text/javascript">
                $(".openid_entry_technorati").keyup(function(e) {
                    if (e.keyCode == 13) {
                        updateAndSubmitOpenID('technorati'); return false;
                    }
                });
            </script> 
             </div> 
             <input type="hidden" name="_csrf" value="67dc3ca1-a964-4ab8-a289-6ee4f7f3cab4">
            </form>
            <form action="/j_spring_openid_security_check" id="openid_claimid" method="post"> 
             <button class="button-to-link no-pad" onclick="$('#openid_placeholder').hide(); $('#openid_placeholder').html($('#input_area_claimid').html()); $('#openid_placeholder').show(); return false;"> <img src="/themes/thub/images/openid/claimid.png" class="login_img_claimid" border="0" alt="ClaimID"> </button> 
             <div class="openid_input_area" style="display: none;" id="input_area_claimid"> 
              <p>Enter your ClaimID username</p> 
              <input class="openid_identifier_claimid" name="openid_identifier" type="hidden" value="http://claimid.com/%s"> 
              <input class="openid_entry_claimid" name="openid_entry" type="text" value="" size="40"> 
              <div class="social-actions"> 
               <button class="btn btn-light" value="cancel" onclick="$('#openid_placeholder').hide();">Cancel</button> 
               <button class="btn btn-primary" value="Login" onclick="updateAndSubmitOpenID('claimid'); return false;">Sign in</button> 
              </div> 
              <script type="text/javascript">
                $(".openid_entry_claimid").keyup(function(e) {
                    if (e.keyCode == 13) {
                        updateAndSubmitOpenID('claimid'); return false;
                    }
                });
            </script> 
             </div> 
             <input type="hidden" name="_csrf" value="67dc3ca1-a964-4ab8-a289-6ee4f7f3cab4">
            </form>
            <form action="/j_spring_openid_security_check" id="openid_livejournal" method="post"> 
             <button class="button-to-link no-pad" onclick="$('#openid_placeholder').hide(); $('#openid_placeholder').html($('#input_area_livejournal').html()); $('#openid_placeholder').show(); return false;"> <img src="/themes/thub/images/openid/livejournal.png" class="login_img_livejournal" border="0" alt="Livejournal"> </button> 
             <div class="openid_input_area" style="display: none;" id="input_area_livejournal"> 
              <p>Enter your Livejournal username</p> 
              <input class="openid_identifier_livejournal" name="openid_identifier" type="hidden" value="http://%s.livejournal.com/"> 
              <input class="openid_entry_livejournal" name="openid_entry" type="text" value="" size="40"> 
              <div class="social-actions"> 
               <button class="btn btn-light" value="cancel" onclick="$('#openid_placeholder').hide();">Cancel</button> 
               <button class="btn btn-primary" value="Login" onclick="updateAndSubmitOpenID('livejournal'); return false;">Sign in</button> 
              </div> 
              <script type="text/javascript">
                $(".openid_entry_livejournal").keyup(function(e) {
                    if (e.keyCode == 13) {
                        updateAndSubmitOpenID('livejournal'); return false;
                    }
                });
            </script> 
             </div> 
             <input type="hidden" name="_csrf" value="67dc3ca1-a964-4ab8-a289-6ee4f7f3cab4">
            </form>
            <form action="/j_spring_openid_security_check" id="openid_openid" method="post"> 
             <button class="button-to-link no-pad" onclick="$('#openid_placeholder').hide(); $('#openid_placeholder').html($('#input_area_openid').html()); $('#openid_placeholder').show(); return false;"> <img src="/themes/thub/images/openid/openid.png" class="login_img_openid" border="0" alt="OpenID"> </button> 
             <div class="openid_input_area" style="display: none;" id="input_area_openid"> 
              <p>Enter your OpenID username</p> 
              <input class="openid_identifier_openid" name="openid_identifier" type="hidden" value="%s"> 
              <input class="openid_entry_openid" name="openid_entry" type="text" value="" size="40"> 
              <div class="social-actions"> 
               <button class="btn btn-light" value="cancel" onclick="$('#openid_placeholder').hide();">Cancel</button> 
               <button class="btn btn-primary" value="Login" onclick="updateAndSubmitOpenID('openid'); return false;">Sign in</button> 
              </div> 
              <script type="text/javascript">
                $(".openid_entry_openid").keyup(function(e) {
                    if (e.keyCode == 13) {
                        updateAndSubmitOpenID('openid'); return false;
                    }
                });
            </script> 
             </div> 
             <input type="hidden" name="_csrf" value="67dc3ca1-a964-4ab8-a289-6ee4f7f3cab4">
            </form>
            <form action="/j_spring_openid_security_check" id="openid_wordpress" method="post"> 
             <button class="button-to-link no-pad" onclick="$('#openid_placeholder').hide(); $('#openid_placeholder').html($('#input_area_wordpress').html()); $('#openid_placeholder').show(); return false;"> <img src="/themes/thub/images/openid/wordpress.png" class="login_img_wordpress" border="0" alt="Wordpress"> </button> 
             <div class="openid_input_area" style="display: none;" id="input_area_wordpress"> 
              <p>Enter your Wordpress username</p> 
              <input class="openid_identifier_wordpress" name="openid_identifier" type="hidden" value="http://%s.wordpress.com/"> 
              <input class="openid_entry_wordpress" name="openid_entry" type="text" value="" size="40"> 
              <div class="social-actions"> 
               <button class="btn btn-light" value="cancel" onclick="$('#openid_placeholder').hide();">Cancel</button> 
               <button class="btn btn-primary" value="Login" onclick="updateAndSubmitOpenID('wordpress'); return false;">Sign in</button> 
              </div> 
              <script type="text/javascript">
                $(".openid_entry_wordpress").keyup(function(e) {
                    if (e.keyCode == 13) {
                        updateAndSubmitOpenID('wordpress'); return false;
                    }
                });
            </script> 
             </div> 
             <input type="hidden" name="_csrf" value="67dc3ca1-a964-4ab8-a289-6ee4f7f3cab4">
            </form>
            <form action="/j_spring_openid_security_check" id="openid_verisign" method="post"> 
             <button class="button-to-link no-pad" onclick="$('#openid_placeholder').hide(); $('#openid_placeholder').html($('#input_area_verisign').html()); $('#openid_placeholder').show(); return false;"> <img src="/themes/thub/images/openid/verisign.png" class="login_img_verisign" border="0" alt="Verisign"> </button> 
             <div class="openid_input_area" style="display: none;" id="input_area_verisign"> 
              <p>Enter your Verisign username</p> 
              <input class="openid_identifier_verisign" name="openid_identifier" type="hidden" value="http://%s.pip.verisignlabs.com/"> 
              <input class="openid_entry_verisign" name="openid_entry" type="text" value="" size="40"> 
              <div class="social-actions"> 
               <button class="btn btn-light" value="cancel" onclick="$('#openid_placeholder').hide();">Cancel</button> 
               <button class="btn btn-primary" value="Login" onclick="updateAndSubmitOpenID('verisign'); return false;">Sign in</button> 
              </div> 
              <script type="text/javascript">
                $(".openid_entry_verisign").keyup(function(e) {
                    if (e.keyCode == 13) {
                        updateAndSubmitOpenID('verisign'); return false;
                    }
                });
            </script> 
             </div> 
             <input type="hidden" name="_csrf" value="67dc3ca1-a964-4ab8-a289-6ee4f7f3cab4">
            </form> 
            <div id="openid_placeholder" class="bright-form"></div> 
           </div> 
          </div> 
         </div> 
         <script type="text/javascript">
    function updateAndSubmitOpenID(openid) {
        if ($('#openid_placeholder .openid_entry_' + openid).val()) {
            $('#openid_' + openid + ' .openid_identifier_' + openid).val($('#openid_placeholder .openid_identifier_' + openid).val().replace('%s', $('#openid_placeholder .openid_entry_' + openid).val().replace(" ", "%20")));
            $('#openid_' + openid).submit();
        }                    
        return false;
    }
    $(document).ready(function () {
        if ($('.login-error-alert').length) $('.login-error-alert')[0].focus();
    });
</script> 
        </div> 
       </div> 
      </div> 
     </div> 
    </div> 
   </section> 
   <div class="push"></div> 
  </div> 
  <section role="contentinfo" id="bottom"> 
   <div class="extra"> 
    <div class="extra-inner"> 
     <div class="container"> 
      <div class="col-xs-12 col-sm-3 footer-logo"> 
       <img src="/themes/thub/images/logo.png" alt="Answerhub Logo"> 
      </div> 
      <div class="col-xs-12 col-sm-9 right-side"> 
       <div class="pull-right"> 
        <ul class="inline"> 
         <li> <a href="/page/about.html">About</a> </li> 
         <li aria-hidden="true">·</li> 
         <li> <a href="/page/faq.html">FAQ</a> </li> 
         <li aria-hidden="true">·</li> 
         <li> <a href="/page/privacy.html">Privacy</a> </li> 
         <li aria-hidden="true">·</li> 
         <li> <span class="copy-right">Copyright © 2010-21 </span> <a class="dzone-inc" href="http://dzonesoftware.com">DZone, Inc.</a> </li> 
        </ul> 
       </div> 
      </div> 
     </div> 
    </div> 
   </div> 
  </section> 
  <script type="text/x-jquery-tmpl" id="user-popover">
    <div class="user-popover ahub-popover">
        <div class="ahub-popover-content">
            <div class="header">
                <div class="popover-gravatar">
                    <a href="${profileUser.profileUrl}" rel="user" class="gravatar">
                        <img id="" class="gravatar " height="84" width="84" title="${profileUser.displayName}" alt="${profileUser.displayName} ${pageContext.i18n.userAvatar}"  src="${pageContext.url.userAvatar.replace("%7BuserId%7D",profileUser.id)}?s=84">
                    </a>
                </div>
                <p class="name">
                    {{if profileUser.suspended}}
                        <span class="badge badge-warning">
                            <i class="icon-lock"></i>
                            ${pageContext.i18n.userSuspended}
                        </span>
                    {{/if}}
                    {{if profileUser.deactivated}}
                        <span class="badge badge-important">
                            <i class="icon-lock"></i>
                            ${pageContext.i18n.userDeactivated}
                        </span>
                    {{/if}}
                    <a href="${profileUser.profileUrl}" class="username">${profileUser.displayName}</a>
                </p>
                {{if currentUser.id != profileUser.id}}
                    {{if currentUserFollowing}}
                        <button class="btn btn-success on btn-follow" command="follow" data-node-type="user" nodeId="${profileUser.id}" data-follow-id="${profileUser.id}"></button>
                    {{else}}
                        <button class="btn btn-outline btn-outline-success btn-follow" command="follow" data-node-type="user" nodeId="${profileUser.id}" data-follow-id="${profileUser.id}"></button>
                    {{/if}}
                {{/if}}
            </div>
            <div class="body">
                <div class="stats-wrapper">
                    <ul class="stats unstyled">
                        <li><a href="${profileUser.profileUrl}"><span class="count d-block">${profileUser.reputation}</span>${i18n.reputation}</a></li>
                        <li><a href="${profileUser.profileUrl}"><span class="count d-block">${profileUser.postCount}</span>${i18n.posts}</a></li>
                        <li><a href="${profileUser.profileUrl}"><span class="count d-block">${profileUser.userFollowCount}</span>${i18n.following}</a></li>
                        <li><a href="${profileUser.profileUrl}"><span class="count d-block" data-follow-widget-id="${profileUser.id}">${profileUser.followerCount}</span>${i18n.followers}</a></li>
                        <li><a href="${profileUser.profileUrl}"><span class="count d-block">${profileUser.creationDateObj.getMonth() + 1 + "/" + profileUser.creationDateObj.getFullYear().toString().substring(2,4)}</span>${i18n.joined}</a></li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
            </div>
        </div>
    </div>
</script> 
  <script type="text/x-jquery-tmpl" id="topic-popover">
    <div class="topic-popover ahub-popover">
        <div class="ahub-popover-content">
            <div class="header">
                <div class="popover-icon">
                    <a href="${topic.url}" class="gravatar">
                        <img id="" class="gravatar " height="84" width="84" title="${topic.name}" alt="${topic.name} icon" src="${topic.icon}">
                    </a>
                </div>
                <div class="name-and-follow">
                    <p class="name"><a href="${topic.url}">${topic.name}</a></p>
                    <div class="follow-button">
                    {{if currentUserCanFollow}}<button class="btn btn-follow {{if currentUserFollowing}}on btn-info{{/if}}" command="follow" data-node-type="topic" nodeId="${topic.name}" data-follow-id="${topic.id}"></button>{{/if}}
                    </div>
                </div>
            </div>
            <div class="body">
                <div class="stats-wrapper">
                    <ul class="stats unstyled">
                        <li><a href="${topic.url}"><span class="count d-block" data-follow-widget-id="${topic.id}">${followerCount}</span>${i18n.followers}</a></li>
                        <li><a href="${topic.url}"><span class="count d-block">${questionCount}</span>${i18n.questions}</a></li>
                        <li><a href="${topic.url}"><span class="count d-block">${answerCount}</span>${i18n.answers}</a></li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
                {{if description}}<div class="description">{{html description}}</div>{{/if}}
            </div>
        </div>
    </div>
</script> 
  <script type="text/x-jquery-tmpl" id="badge-popover">
    <div class="badge-popover ahub-popover">
        <div class="ahub-popover-content">
            <div class="header">
                <div class="pull-left">
                    <img class="gravatar award-icon" height="84" width="84" title="${awardType.name}" alt="${awardType.name} icon" src="${awardType.awardIconSrc}">
                </div>
                <p class="nameAndTagline">
                    <a href="${awardType.awardUrl}" class="name d-block">${awardType.name}</a>
                    <span class="tagline">${awardType.description}</span>
                </p>
            </div>
            <div class="body">
                	<div class="stats-wrapper">
	                	<ul class="stats unstyled">
							<li><a href="${awardType.awardUrl}"><span class="count d-block">${awardPager.totalCount}</span>${i18n.awarded}</a></li>
	                		<li>
	                			<ul class="users unstyled">
	                				<li><span class="user-list-title">${i18n.completedBy}:</span></li>
			                		{{each awardPager.list}}
				                		<li>
					                		<a href="${$value.user.profileUrl}" title="${$value.user.username}" class="gravatar">
					                			<img class="gravatar " alt="${$value.user.username} ${pageContext.i18n.userAvatar}" width="32" height="32" src="${$value.user.avatar}?s=32">
					                		</a>
					                	</li>
				                	{{/each}}
				                	<div class="clearfix"></div>
		                		</ul>
	                		</li>
	                		<div class="clearfix"></div>
	                	</ul>
	                </div>
            </div>
        </div>
    </div>
</script> 
  <script type="text/javascript">
$(document).ready(function () {
    var searchItemMouseDown = false;
    var $searchAuto = $("#search-query").autocomplete({
        open: function () {
            $('#search-query').popover('hide');
            $('#search-query').attr("aria-expanded", true);
            $searchAuto.addClass("open");
            $("#searchResultsAutoComplete").find("a").mousedown(function (e) {
                searchItemMouseDown = true;
            });
        },
        close: function (e) {
            $('#search-query').attr("aria-expanded", false);
            $('#searchResultsAutoComplete #search-query').attr('aria-describedby', 'advanced-tips-title');
            $searchAuto.removeClass("open");
            $('.icon-search').css('color', '#999');
            $('#searchResultsAutoComplete #search-query').removeAttr('aria-activedescendant');
        },
        appendTo: '#autoCompleteContents',
        autoFocus: false,
        highlight: function (match, keywords) {
            keywords = keywords.split(' ').join('|');
            return match.replace(new RegExp("(" + keywords + ")", "gi"), '<b>$1</b>');
        },
        source: function (request, response) {
            var query = request.term;
            var labelText = $('<div/>').text(request.term).html();
            if (!/\s/.test(query)) {
                query += "*";
            }
            $.ajax({
                url: '/search.json',
                dataType: 'json',
                minLength: 0,
                delay: 30,
                data: { q: query, page: 1, pageSize: 7, type: "object", compact: 'true' },
                success: function (data) {
                    if (data.searchResults) {
                        var allResults = data.searchResults.results.concat(data.externalSearchResults.results);
                        var $results = $.map(allResults, function (item, index) {
                        if (item != null) {
                            if (item.username) {
                                var name = item.username;
                                if(item.realname){
                                    name += " | " + item.realname;
                                }
                                return {
                                    label: name.replace(
                                            new RegExp(
                                                            "(?![^&;]+;)(?!<[^<>]*)(" +
                                                            $.ui.autocomplete.escapeRegex(request.term) +
                                                            ")(?![^<>]*>)(?![^&;]+;)", "gi"
                                            ), "<strong>$1</strong>"),
                                    url: "/users/%7Bid%7D/%7Bplug%7D.html",
                                    value: name,
                                    id: item.id,
                                    plug: item.plug,
                                    type: "user",
                                    avatar: item.avatar
                                };
                            }
                            switch (item.type) {
                                case 'topic':
                                    return {
                                        label: item.name.replace(
                                                new RegExp(
                                                        "(?![^&;]+;)(?!<[^<>]*)(" +
                                                                $.ui.autocomplete.escapeRegex(request.term) +
                                                                ")(?![^<>]*>)(?![^&;]+;)", "gi"
                                                ), "<strong>$1</strong>"),
                                        url: "/topics/%7Bid%7D/%7Bplug%7D.html",
                                        value: item.name,
                                        id: item.id,
                                        plug: item.name,
                                        type: "Topic"
                                    };
                                case 'user':
                                    var name = item.username;
                                    if(item.realname){
                                        name += " | " + item.realname;
                                    }
                                    return {
                                        label: name.replace(
                                                new RegExp(
                                                        "(?![^&;]+;)(?!<[^<>]*)(" +
                                                                $.ui.autocomplete.escapeRegex(request.term) +
                                                                ")(?![^<>]*>)(?![^&;]+;)", "gi"
                                                ), "<strong>$1</strong>"),
                                        url: "/users/%7Bid%7D/%7Bplug%7D.html",
                                        value: name,
                                        id: item.id,
                                        plug: item.plug,
                                        type: "User",
                                        avatar: item.avatar
                                    };
                                case 'question':
                                    return {
                                        label: item.title.replace(
                                                new RegExp(
                                                        "(?![^&;]+;)(?!<[^<>]*)(" +
                                                                $.ui.autocomplete.escapeRegex(request.term) +
                                                                ")(?![^<>]*>)(?![^&;]+;)", "gi"
                                                ), "<strong>$1</strong>"),
                                        url: "/questions/%7Bid%7D/%7Bplug%7D.html",
                                        value: item.title,
                                        id: item.id,
                                        plug: item.plug,
                                        type: item.type
                                    };
                                default:
                                    if (item.title) {
	                                    return {
	                                        label: item.title.replace(
	                                                new RegExp(
	                                                        "(?![^&;]+;)(?!<[^<>]*)(" +
	                                                                $.ui.autocomplete.escapeRegex(request.term) +
	                                                                ")(?![^<>]*>)(?![^&;]+;)", "gi"
	                                                ), "<strong>$1</strong>"),
	                                        url: item.url,
	                                        value: item.title,
	                                        id: item.id,
	                                        plug: item.plug,
	                                        type: item.type
	                                    };
                                    }
                                    return null;
                                }
                            }
                        });

                        response($results);
                        $('.icon-search').css('color', '#1c84c6');
                        $('#searchResultsAutoComplete .ui-helper-hidden-accessible').attr('id', 'search-result-status').attr('aria-live','polite').attr('aria-atomic', true).attr('aria-relevant', 'text');
                        $('#searchResultsAutoComplete #search-query').attr('aria-describedby', 'search-result-status');
                        $("#search-query").attr("aria-haspopup", "listbox");
                        $("#search-query").attr("aria-owns", "search_results_list");
                    }
                }
            });
        },
        select: function (event, ui) {
            if(event.key=='Enter') {
                var url = ui.item.url.replace("%7Bid%7D", ui.item.id);
                url = url.replace("%7Bplug%7D", ui.item.plug);
                url = url.replace("{query}", ui.item.query);
                url = url.replace("%7Btype%7D", ui.item.type);
                window.location = url;
                return false;
            }
        },
        focus: function(event, ui) {
            $('#search-query').attr('aria-activedescendant', ('option_' + (ui.item.index || ui.item.id || "search")));
        }
    }).keydown(function () {
        $(this).css('color', '#000');
    });
    if ($searchAuto.length) {
        $searchAuto.data("uiAutocomplete")._renderMenu = function(ul, items) {
            var that = this;
            $.each(items, function(index, item) {
                item.index = index;
                that._renderItemData(ul, item);
            });
            $(ul).find("li").attr("role", "presentation").addClass("ui-menu-item");
        };
        $searchAuto.data("uiAutocomplete")._renderItem = function (ul, item) {
            var type_str = "";
            var searchListItemLinkTextImage = $('<i />');
            searchListItemLinkTextImage.attr('aria-hidden','true');
            var searchListItemLinkTextImageSpan = $('<span />');
            searchListItemLinkTextImageSpan.attr('class','sr-only');

            if (item.type == "Topic") {
                type_str = "<span class='autocomplete-type'>Topic</span>";
                var image = '<img class="search-icon topic-icon" alt="' + item.value + ' topic icon" src="/themes/base/images/topic_placeholder.png">';
            } else if (item.type == "user") {
                type_str = "<span class='autocomplete-type'>User</span>";
                var image = '<img class="search-icon user-icon" alt="' + item.value + ' user icon" src="/themes/base/images/user_placeholder.png">';
                searchListItemLinkTextImage = null;
            } else if (item.type == "question") {
                searchListItemLinkTextImage.attr('class','icon-question-sign');
                searchListItemLinkTextImageSpan.append("question");
                searchListItemLinkTextImage.append(searchListItemLinkTextImageSpan);
            } else if (item.type == "idea") {
                searchListItemLinkTextImage.attr('class','icon-lightbulb');
                searchListItemLinkTextImageSpan.append("idea");
                searchListItemLinkTextImage.append(searchListItemLinkTextImageSpan);
            } else if (item.type == "kbentry") {
                searchListItemLinkTextImage.attr('class','icon-book');
                searchListItemLinkTextImageSpan.append("article");
                searchListItemLinkTextImage.append(searchListItemLinkTextImageSpan);
            }

            var url = item.url.replace("%7Bid%7D", item.id);
            url = url.replace("%7Bplug%7D", item.plug);
            url = url.replace("{query}", item.query);
            url = url.replace("%7Btype%7D", item.type);

            //prevent xss attribute injection attacks
            url = url.replace(/'/g,"%27");
            url = url.replace(/"/g,"%22");
            url = url.replace(/\\/g,"%5C");

            var describedby = 'Press enter to search for ' + item.query;
            if (item.type) {
                var type;
                if (item.type == "Topic") {
                    type = 'Topic'
                } else if (item.type == "question") {
                    type = 'question';
                } else if (item.type == "idea") {
                    type = 'idea';
                } else if (item.type == "kbentry") {
                    type = 'article';
                } else if (item.type == "user") {
                    type = 'user';
                    var $gravatar = $('<img />').addClass("gravatar")
                                                .attr("alt", item.value + 'avatar image' )
                                                .attr("src", item.avatar);

                }
                describedby = 'Press enter to navigate to ' + type;
            }
            ul
            .attr('role', 'listbox')
            .attr('id', 'search_results_list')
            .attr('aria-label', 'Search Suggestions');

            let spanIdStr = item.index || item.id || 'search';

            let $searchListItemLink = $('<a />')
                .addClass("none")
                .attr('aria-label', (item.type? (type + ": ") : '') + commandUtils.escapeHtml2(item.value))
                .attr('id', "option_" + spanIdStr)
                .attr('aria-describedby', "instructions_" + spanIdStr)
                .attr('role', 'option')
                .attr('href', url)
                .append($gravatar, searchListItemLinkTextImage, item.label + " " + type_str);

            let $searchListItemSpan = $('<span />')
                .attr('id',"instructions_" + + spanIdStr)
                .attr('class','sr-only')
                .text(describedby);

            let searchListItem = $('<li />')
                .data("item.autocomplete", item)
                .append($searchListItemLink, $searchListItemSpan)
                .appendTo(ul);

            return searchListItem;
        };
    }
});
</script> 
  <script type="text/javascript">

    $(document).ready(function () {
        $bottom = $("#bottom");
        $notFooter = $("#not-footer");
        $push = $(".push");
        $push.css("height", $bottom.outerHeight() + "px");
        $notFooter.css("margin-bottom", "-" + $bottom.outerHeight() + "px");

        $("#sidrLink").sidr({
            onOpen: function() {
                if($('#sidr').outerHeight() ==0) {
                    $('#sidr').css({'height': '100%', 'visibility': 'visible'});
                }
                $(document.body).prepend("<div class='cover'></div>");
                $('#sidrLink').attr("aria-expanded", "true");
                $('#sidr a').attr("tabindex", "0");
                var firstChild = $('#sidr ul').find('li a')[0];
                if(firstChild) {
                    firstChild.focus();
                }
                $(".cover").fadeIn().on("click", function() {
                    $(this).remove();
                    $.sidr('close');
                });
                $("#sidr").keyup(function(e) {
                    // if key pressed is ESC
                    if(e.key === "Escape") {
                        $.sidr('close');
                    }
                });

                $("#sidr").on('focusout', function(e) {
                    if ($("#sidr").is(":visible") && !$("#sidr").has(e.relatedTarget).length > 0)
                        $.sidr('close');
                });
            },
            onClose: function() {
                $('#sidrLink').attr("aria-expanded", "false").focus();
                $('#sidr a').attr("tabindex", "-1");
            }
        });

        $(".search-button").click(function(){
            $(".navbar-search").submit();
        });
    });

    //Pretty print code blocks, some of them might be escaped, we need to unescape in order to pretty print them.
    //TODO: Find a better place to this code.
    var evaluateLineNum = function() {
      let $codeBlocks = $(".answer-body, .node-body, .question-body, .reply-body, .comment-text, .wmd-previewer");
      $.each($codeBlocks, function(indexI, elementI) {
          $.each($(elementI).find('pre'), function(indexJ, elementJ) {
              $(elementJ).addClass("prettyprint").addClass("linenums");

              if(!pageContext.currentEditor.enableLineNum) {
                $(elementJ).addClass('no-num');
              }

              if($(elementI).attr('data-markup-language') === 'wmd' && ! /[<>]/g.test($(elementJ).text())) {
                  $(elementJ).text(commandUtils.unescapeHtml($(elementJ).text()));
              }
          });
      });
    }

    evaluateLineNum();
    prettyPrint();
    objectFitImages();

    if(commandUtils.getUrlVars()['sort'] && commandUtils.getUrlVars()['sort'].length) {
      let targetHref = "?sort=" + commandUtils.getUrlVars()['sort'];
      $('a[href="' + targetHref + '"]').focus();
    }

</script> 
  <script type="text/javascript">(function(){(function(a,b){if("undefined"!==typeof module&&module.exports)return module.exports=b();if("function"===typeof define&&define.amd)define([],function(){return a.TimeMe=b()});else return a.TimeMe=b()})(this,function(){var a={startStopTimes:{},idleTimeoutMs:6E4,currentIdleTimeMs:0,checkStateRateMs:250,active:!1,idle:!1,currentPageName:"default-page-name",timeElapsedCallbacks:[],userLeftCallbacks:[],userReturnCallbacks:[],startTimer:function(){var b=a.currentPageName;if(void 0===a.startStopTimes[b])a.startStopTimes[b]=
[];else{var c=a.startStopTimes[b];c=c[c.length-1];if(void 0!==c&&void 0===c.stopTime)return}a.startStopTimes[b].push({startTime:new Date,stopTime:void 0});a.active=!0},stopTimer:function(){var b=a.startStopTimes[a.currentPageName];void 0!==b&&0!==b.length&&(void 0===b[b.length-1].stopTime&&(b[b.length-1].stopTime=new Date),a.active=!1)},getTimeOnCurrentPageInSeconds:function(){return a.getTimeOnPageInSeconds(a.currentPageName)},getTimeOnPageInSeconds:function(b){if(void 0!==a.getTimeOnPageInMilliseconds(b))return a.getTimeOnPageInMilliseconds(b)/
1E3},getTimeOnCurrentPageInMilliseconds:function(){return a.getTimeOnPageInMilliseconds(a.currentPageName)},getTimeOnPageInMilliseconds:function(b){b=a.startStopTimes[b];if(void 0!==b){for(var c=0,d=0;d<b.length;d++){var e=b[d].startTime,f=b[d].stopTime;void 0===f&&(f=new Date);c+=f-e}return b=Number(c)}},getTimeOnAllPagesInSeconds:function(){for(var b=[],c=Object.keys(a.startStopTimes),d=0;d<c.length;d++){var e=c[d],f=a.getTimeOnPageInSeconds(e);b.push({pageName:e,timeOnPage:f})}return b},setIdleDurationInSeconds:function(b){var c=
parseFloat(b);if(!1===isNaN(c))a.idleTimeoutMs=1E3*b;else throw{name:"InvalidDurationException",message:"An invalid duration time ("+b+") was provided."};return this},setCurrentPageName:function(b){a.currentPageName=b;return this},resetRecordedPageTime:function(b){delete a.startStopTimes[b]},resetAllRecordedPageTimes:function(){for(var b=Object.keys(a.startStopTimes),c=0;c<b.length;c++)a.resetRecordedPageTime(b[c])},resetIdleCountdown:function(){a.idle&&a.triggerUserHasReturned();a.idle=!1;a.currentIdleTimeMs=
0},callWhenUserLeaves:function(a,c){this.userLeftCallbacks.push({callback:a,numberOfTimesToInvoke:c})},callWhenUserReturns:function(a,c){this.userReturnCallbacks.push({callback:a,numberOfTimesToInvoke:c})},triggerUserHasReturned:function(){if(!a.active)for(var b=0;b<this.userReturnCallbacks.length;b++){var c=this.userReturnCallbacks[b],d=c.numberOfTimesToInvoke;if(isNaN(d)||void 0===d||0<d)--c.numberOfTimesToInvoke,c.callback()}a.startTimer()},triggerUserHasLeftPage:function(){if(a.active)for(var b=
0;b<this.userLeftCallbacks.length;b++){var c=this.userLeftCallbacks[b],d=c.numberOfTimesToInvoke;if(isNaN(d)||void 0===d||0<d)--c.numberOfTimesToInvoke,c.callback()}a.stopTimer()},callAfterTimeElapsedInSeconds:function(b,c){a.timeElapsedCallbacks.push({timeInSeconds:b,callback:c,pending:!0})},checkState:function(){for(var b=0;b<a.timeElapsedCallbacks.length;b++)a.timeElapsedCallbacks[b].pending&&a.getTimeOnCurrentPageInSeconds()>a.timeElapsedCallbacks[b].timeInSeconds&&(a.timeElapsedCallbacks[b].callback(),
a.timeElapsedCallbacks[b].pending=!1);!1===a.idle&&a.currentIdleTimeMs>a.idleTimeoutMs?(a.idle=!0,a.triggerUserHasLeftPage()):a.currentIdleTimeMs+=a.checkStateRateMs},visibilityChangeEventName:void 0,hiddenPropName:void 0,listenForVisibilityEvents:function(){"undefined"!==typeof document.hidden?(a.hiddenPropName="hidden",a.visibilityChangeEventName="visibilitychange"):"undefined"!==typeof doc.mozHidden?(a.hiddenPropName="mozHidden",a.visibilityChangeEventName="mozvisibilitychange"):"undefined"!==
typeof document.msHidden?(a.hiddenPropName="msHidden",a.visibilityChangeEventName="msvisibilitychange"):"undefined"!==typeof document.webkitHidden&&(a.hiddenPropName="webkitHidden",a.visibilityChangeEventName="webkitvisibilitychange");document.addEventListener(a.visibilityChangeEventName,function(){document[a.hiddenPropName]?a.triggerUserHasLeftPage():a.triggerUserHasReturned()},!1);window.addEventListener("blur",function(){a.triggerUserHasLeftPage()});window.addEventListener("focus",function(){a.triggerUserHasReturned()});
document.addEventListener("mousemove",function(){a.resetIdleCountdown()});document.addEventListener("keyup",function(){a.resetIdleCountdown()});document.addEventListener("touchstart",function(){a.resetIdleCountdown()});window.addEventListener("scroll",function(){a.resetIdleCountdown()});setInterval(function(){a.checkState()},a.checkStateRateMs)},websocket:void 0,websocketHost:void 0,setUpWebsocket:function(b){if(window.WebSocket&&b){var c=b.websocketHost;try{a.websocket=new WebSocket(c),window.onbeforeunload=
function(c){a.sendCurrentTime(b.appId)},a.websocket.onopen=function(){a.sendInitWsRequest(b.appId)},a.websocket.onerror=function(a){console&&console.log("Error occurred in websocket connection: "+a)},a.websocket.onmessage=function(a){console&&console.log(a.data)}}catch(d){console&&console.error("Failed to connect to websocket host.  Error:"+d)}}return this},websocketSend:function(b){a.websocket.send(JSON.stringify(b))},sendCurrentTime:function(b){var c=a.getTimeOnCurrentPageInMilliseconds();a.websocketSend({type:"INSERT_TIME",
appId:b,timeOnPageMs:c,pageName:a.currentPageName})},sendInitWsRequest:function(b){a.websocketSend({type:"INIT",appId:b})},initialize:function(b){var c=a.idleTimeoutMs||30,d=a.currentPageName||"default-page-name",e=void 0;b&&(c=b.idleTimeoutInSeconds||c,d=b.currentPageName||d,e=b.websocktOptions);a.setIdleDurationInSeconds(c).setCurrentPageName(d).setUpWebsocket(e).listenForVisibilityEvents();a.startTimer()}};return a})}).call(this);
(function(){function a(a){return function(){$.ajax({method:"POST",url:c,data:{code:b,duration:parseInt(1E3*TimeMe.getTimeOnPageInSeconds(b)),done:a}})}}var b=null,d=1E4,c="/tracker/track.json";$(document).ready(function(){b&&(TimeMe.initialize({currentPageName:b,idleTimeoutInSeconds:2*d}),window.setInterval(a(),d),$(window).unload(a(!0)),a()())});window.__trackPageView=function(a,e,f){b=a;d=e;c&&(c=f)}})();
window.__trackPageView('731db6fc-0c11-4d3e-aa26-a62afabd0716', 10000, '/page-view/track.json');</script>  
 </body>
</html>