<!DOCTYPE html>
<html lang="en">
  <head>
    <title>15130 &ndash; Buildbot crash output: fuzz-2018-09-10-4123.pcap</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link href="data/assets/64b49332a92937374625c24ed9a89c85.css?1635022386" rel="stylesheet" type="text/css">

<link href="data/assets/f6911ed8e5a97f108734d9324cb6bd67.css?1635022386" rel="stylesheet" type="text/css">

    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1635022386"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "15130 – Buildbot crash output: fuzz-2018-09-10-4123.pcap",
                             "show_bug.cgi?id=15130" );
        document.title = "15130 – Buildbot crash output: fuzz-2018-09-10-4123.pcap";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "15130 – Buildbot crash output: fuzz-2018-09-10-4123.pcap", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1635022386"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-wireshark-org-bugzilla
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_Wireshark
                 bz_component_Dissection_engine_&#X28;libwireshark&#X29;
                 bz_bug_15130 yui-skin-sam">

  <div id="header"><div id="banner">
      <a href="/bugzilla/"><img id="badge" src="/image/wsbadge-bug@186x57.png"></a>
      <span id="banner-text">
        Wireshark Bug Database &ndash; Bug&nbsp;15130
      </span>
      <div id="subtitle">
        <p class="subheader">Buildbot crash output: fuzz-2018-09-10-4123.pcap</p>
      </div>

       <div id="motd_yellow">

<p>
This Bugzilla instance was migrated to <a href="https://gitlab.com/wireshark/wireshark">GitLab</a> on Sunday, August 23.
</p>


<p>
This bug has been migrated to <a href="https://gitlab.com/wireshark/wireshark/-/issues/15130">issue 15130</a> in the <a href="https://gitlab.com/wireshark/wireshark/-/issues">GitLab issue tracker</a>.
It can be viewed and updated there.
</p>


</p>

<p>
See the <a href="https://gitlab.com/wireshark/gitlab-migration/wikis/home">migration wiki</a> for more details.
</p>

       </div>


    </div>

<!-- WS: Title info is in the banner
    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;15130</span>
  
        <span id="subtitle" class="subheader">Buildbot crash output: fuzz-2018-09-10-4123.pcap</span>

        <span id="information" class="header_addl_info">Last modified: 2018-11-28 16:46:57 UTC</span>
    </div>
  -->


    <div id="common_links"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=15130&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=15130" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=15130&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635621461-6n4ImFfObVViJHSwkZj3vk-ekuEnHksi_Rgz6UkvhGo">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2018-11-28 16:46:57">
  <input type="hidden" name="id" value="15130">
  <input type="hidden" name="token" value="1635621461-UVr0bRQZGlNWThUtbzglN95iZ87aEWhw1ZWkKojEob0">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=15130"><b>Bug&nbsp;15130</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">Buildbot crash output: fuzz-2018-09-10-4123.pcap</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>Buildbot crash output: fuzz-2018-09-10-4123.pcap
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'Buildbot crash output: fuzz-2018-09-10-4123.pcap' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Wireshark

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Wireshark"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >Dissection engine (libwireshark)

  (<a href="buglist.cgi?component=Dissection%20engine%20(libwireshark)&amp;product=Wireshark&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>unspecified
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">x86-64
        Ubuntu
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>High
       Major<span id="votes_container">
    (<a href="page.cgi?id=voting/user.html&amp;bug_id=15130#vote_15130">vote</a>)
  </span>
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Bugzilla Administrator</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'bugzilla-admin\x40wireshark.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2018-09-11 13:30 UTC by <span class="vcard"><span class="fn">Buildbot Builder</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2018-11-28 16:46 UTC
      (<a href="show_activity.cgi?id=15130">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>1 
          user
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="peter">peter</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" ><ul class="bug_urls">
          <li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19626">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19626</a>
          </li></ul>

</td>
    </tr> 

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>



  <tr class="bz_attach_footer">
    <td colspan="2">
        <a href="attachment.cgi?bugid=15130&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=15130&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1490378926" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15130#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Buildbot Builder</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-09-11 13:30:02 UTC
        </span>

      </div>




<pre class="bz_comment_text">Problems have been found with the following capture file:

<a href="https://www.wireshark.org/download/automated/captures/fuzz-2018-09-10-4123.pcap">https://www.wireshark.org/download/automated/captures/fuzz-2018-09-10-4123.pcap</a>

stderr:
Input file: /home/wireshark/menagerie/menagerie/testserver2.cap

Build host information:
Linux wsbb04 4.15.0-32-generic #35-Ubuntu SMP Fri Aug 10 17:58:07 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
Distributor ID:	Ubuntu
Description:	Ubuntu 18.04.1 LTS
Release:	18.04
Codename:	bionic

Buildbot information:
BUILDBOT_WORKERNAME=fuzz-test
BUILDBOT_BUILDNUMBER=115
BUILDBOT_BUILDERNAME=Fuzz Test
BUILDBOT_URL=<a href="http://buildbot.wireshark.org/wireshark-2.4/">http://buildbot.wireshark.org/wireshark-2.4/</a>
BUILDBOT_REPOSITORY=ssh://<a href="/cdn-cgi/l/email-protection#c3b4aab1a6b0aba2b1a8eea1b6aaafa7a1acb7e5e0f5f7f8a0aca7a6edb4aab1a6b0aba2b1a8edacb1a4">wireshark-buildbot&#64;code.wireshark.org</a>:29418/wireshark
BUILDBOT_GOT_REVISION=bcabcdcaf0707ecbdde6aa62fe2e9b487153c752

Return value:  0

Dissector bug:  0

Valgrind error count:  9



Git commit
<a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=bcabcdcaf0707ecbdde6aa62fe2e9b487153c752">commit bcabcdcaf0707ecbdde6aa62fe2e9b487153c752</a>
Author: Guy Harris &lt;<a href="/cdn-cgi/l/email-protection#6205171b4441545659030e170f4c0f0b164c070617">guy&#64;alum.mit.edu</a>&gt;
Date:   Sun Sep 9 13:15:52 2018 -0700

    The 2.4 version of licensecheck.pl doesn't support SPDX, so don't use it.
    
    Change-Id: <a href="https://code.wireshark.org/review/#/q/I61179b2d883755236be36fe21a342a97fcce95f1">I61179b2d883755236be36fe21a342a97fcce95f1</a>
    Reviewed-on: <a href="https://code.wireshark.org/review/29520">https://code.wireshark.org/review/29520</a>
    Reviewed-by: Guy Harris &lt;<a href="/cdn-cgi/l/email-protection#b1d6c4c8979287858ad0ddc4dc9fdcd8c59fd4d5c4">guy&#64;alum.mit.edu</a>&gt;


Command and args: ./tools/valgrind-wireshark.sh -b /home/wireshark/builders/wireshark-2.4-fuzz/fuzztest/install/bin  

==13199== Memcheck, a memory error detector
==13199== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13199== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==13199== Command: /home/wireshark/builders/wireshark-2.4-fuzz/fuzztest/install/bin/tshark -nr /fuzz/buildbot/fuzztest/valgrind-fuzz-2.4/fuzz-2018-09-10-4123.pcap
==13199== 
==13199== Conditional jump or move depends on uninitialised value(s)
==13199==    at 0x135DCA2C: dissect_ICBAPhysicalDevice_get_LogicalDevice_rqst (packet-dcom-cba.c:574)
==13199==    by 0x6CBDF61: dissect_dcerpc_guid (packet-dcerpc.c:1594)
==13199==    by 0x6A75ED7: call_dissector_through_handle (packet.c:684)
==13199==    by 0x6A75ED7: call_dissector_work (packet.c:759)
==13199==    by 0x6CBA5BE: dcerpc_try_handoff (packet-dcerpc.c:3643)
==13199==    by 0x6CBAD62: dissect_dcerpc_cn_stub.isra.13 (packet-dcerpc.c:4234)
==13199==    by 0x6CC0749: dissect_dcerpc_cn_rqst (packet-dcerpc.c:4536)
==13199==    by 0x6CC0749: dissect_dcerpc_cn (packet-dcerpc.c:5450)
==13199==    by 0x6CC1C80: dissect_dcerpc_pdu (packet-dcerpc.c:5652)
==13199==    by 0x7287DB3: tcp_dissect_pdus (packet-tcp.c:3531)
==13199==    by 0x6CB898F: dissect_dcerpc_tcp_heur (packet-dcerpc.c:5670)
==13199==    by 0x6A774C9: dissector_try_heuristic (packet.c:2624)
==13199==    by 0x7288500: decode_tcp_ports (packet-tcp.c:5493)
==13199==    by 0x7288791: process_tcp_payload (packet-tcp.c:5548)
==13199== 
==13199== Conditional jump or move depends on uninitialised value(s)
==13199==    at 0x4C32CF9: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13199==    by 0x76E6066: wmem_strdup (wmem_strutl.c:47)
==13199==    by 0x135DCA4B: dissect_ICBAPhysicalDevice_get_LogicalDevice_rqst (packet-dcom-cba.c:575)
==13199==    by 0x6CBDF61: dissect_dcerpc_guid (packet-dcerpc.c:1594)
==13199==    by 0x6A75ED7: call_dissector_through_handle (packet.c:684)
==13199==    by 0x6A75ED7: call_dissector_work (packet.c:759)
==13199==    by 0x6CBA5BE: dcerpc_try_handoff (packet-dcerpc.c:3643)
==13199==    by 0x6CBAD62: dissect_dcerpc_cn_stub.isra.13 (packet-dcerpc.c:4234)
==13199==    by 0x6CC0749: dissect_dcerpc_cn_rqst (packet-dcerpc.c:4536)
==13199==    by 0x6CC0749: dissect_dcerpc_cn (packet-dcerpc.c:5450)
==13199==    by 0x6CC1C80: dissect_dcerpc_pdu (packet-dcerpc.c:5652)
==13199==    by 0x7287DB3: tcp_dissect_pdus (packet-tcp.c:3531)
==13199==    by 0x6CB898F: dissect_dcerpc_tcp_heur (packet-dcerpc.c:5670)
==13199==    by 0x6A774C9: dissector_try_heuristic (packet.c:2624)
==13199== 
==13199== Conditional jump or move depends on uninitialised value(s)
==13199==    at 0x4C32D08: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13199==    by 0x76E6066: wmem_strdup (wmem_strutl.c:47)
==13199==    by 0x135DCA4B: dissect_ICBAPhysicalDevice_get_LogicalDevice_rqst (packet-dcom-cba.c:575)
==13199==    by 0x6CBDF61: dissect_dcerpc_guid (packet-dcerpc.c:1594)
==13199==    by 0x6A75ED7: call_dissector_through_handle (packet.c:684)
==13199==    by 0x6A75ED7: call_dissector_work (packet.c:759)
==13199==    by 0x6CBA5BE: dcerpc_try_handoff (packet-dcerpc.c:3643)
==13199==    by 0x6CBAD62: dissect_dcerpc_cn_stub.isra.13 (packet-dcerpc.c:4234)
==13199==    by 0x6CC0749: dissect_dcerpc_cn_rqst (packet-dcerpc.c:4536)
==13199==    by 0x6CC0749: dissect_dcerpc_cn (packet-dcerpc.c:5450)
==13199==    by 0x6CC1C80: dissect_dcerpc_pdu (packet-dcerpc.c:5652)
==13199==    by 0x7287DB3: tcp_dissect_pdus (packet-tcp.c:3531)
==13199==    by 0x6CB898F: dissect_dcerpc_tcp_heur (packet-dcerpc.c:5670)
==13199==    by 0x6A774C9: dissector_try_heuristic (packet.c:2624)
==13199== 
==13199== Conditional jump or move depends on uninitialised value(s)
==13199==    at 0x4C32CF9: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13199==    by 0xB3BC4D2: vfprintf (vfprintf.c:1643)
==13199==    by 0xB491168: __vsnprintf_chk (vsnprintf_chk.c:63)
==13199==    by 0x6A600EC: ws_vsnprintf (ws_printf.h:78)
==13199==    by 0x6A600EC: col_do_append_fstr (column-utils.c:507)
==13199==    by 0x6A62BDF: col_append_fstr (column-utils.c:524)
==13199==    by 0x135DC9B8: dissect_ICBAPhysicalDevice_get_LogicalDevice_rqst (packet-dcom-cba.c:579)
==13199==    by 0x6CBDF61: dissect_dcerpc_guid (packet-dcerpc.c:1594)
==13199==    by 0x6A75ED7: call_dissector_through_handle (packet.c:684)
==13199==    by 0x6A75ED7: call_dissector_work (packet.c:759)
==13199==    by 0x6CBA5BE: dcerpc_try_handoff (packet-dcerpc.c:3643)
==13199==    by 0x6CBAD62: dissect_dcerpc_cn_stub.isra.13 (packet-dcerpc.c:4234)
==13199==    by 0x6CC0749: dissect_dcerpc_cn_rqst (packet-dcerpc.c:4536)
==13199==    by 0x6CC0749: dissect_dcerpc_cn (packet-dcerpc.c:5450)
==13199==    by 0x6CC1C80: dissect_dcerpc_pdu (packet-dcerpc.c:5652)
==13199== 
==13199== Conditional jump or move depends on uninitialised value(s)
==13199==    at 0x4C32D08: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13199==    by 0xB3BC4D2: vfprintf (vfprintf.c:1643)
==13199==    by 0xB491168: __vsnprintf_chk (vsnprintf_chk.c:63)
==13199==    by 0x6A600EC: ws_vsnprintf (ws_printf.h:78)
==13199==    by 0x6A600EC: col_do_append_fstr (column-utils.c:507)
==13199==    by 0x6A62BDF: col_append_fstr (column-utils.c:524)
==13199==    by 0x135DC9B8: dissect_ICBAPhysicalDevice_get_LogicalDevice_rqst (packet-dcom-cba.c:579)
==13199==    by 0x6CBDF61: dissect_dcerpc_guid (packet-dcerpc.c:1594)
==13199==    by 0x6A75ED7: call_dissector_through_handle (packet.c:684)
==13199==    by 0x6A75ED7: call_dissector_work (packet.c:759)
==13199==    by 0x6CBA5BE: dcerpc_try_handoff (packet-dcerpc.c:3643)
==13199==    by 0x6CBAD62: dissect_dcerpc_cn_stub.isra.13 (packet-dcerpc.c:4234)
==13199==    by 0x6CC0749: dissect_dcerpc_cn_rqst (packet-dcerpc.c:4536)
==13199==    by 0x6CC0749: dissect_dcerpc_cn (packet-dcerpc.c:5450)
==13199==    by 0x6CC1C80: dissect_dcerpc_pdu (packet-dcerpc.c:5652)
==13199== 
==13199== Conditional jump or move depends on uninitialised value(s)
==13199==    at 0x4C32D08: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13199==    by 0x6A60086: col_do_append_fstr (column-utils.c:493)
==13199==    by 0x6A62BDF: col_append_fstr (column-utils.c:524)
==13199==    by 0x6CBDFEE: dissect_dcerpc_guid (packet-dcerpc.c:1618)
==13199==    by 0x6A75ED7: call_dissector_through_handle (packet.c:684)
==13199==    by 0x6A75ED7: call_dissector_work (packet.c:759)
==13199==    by 0x6CBA5BE: dcerpc_try_handoff (packet-dcerpc.c:3643)
==13199==    by 0x6CBAD62: dissect_dcerpc_cn_stub.isra.13 (packet-dcerpc.c:4234)
==13199==    by 0x6CC0749: dissect_dcerpc_cn_rqst (packet-dcerpc.c:4536)
==13199==    by 0x6CC0749: dissect_dcerpc_cn (packet-dcerpc.c:5450)
==13199==    by 0x6CC1C80: dissect_dcerpc_pdu (packet-dcerpc.c:5652)
==13199==    by 0x7287DB3: tcp_dissect_pdus (packet-tcp.c:3531)
==13199==    by 0x6CB898F: dissect_dcerpc_tcp_heur (packet-dcerpc.c:5670)
==13199==    by 0x6A774C9: dissector_try_heuristic (packet.c:2624)
==13199== 
==13199== Conditional jump or move depends on uninitialised value(s)
==13199==    at 0x4C32D08: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13199==    by 0x120EE2: print_columns (tshark.c:3607)
==13199==    by 0x120EE2: print_packet (tshark.c:3834)
==13199==    by 0x1217C2: process_packet_single_pass (tshark.c:3478)
==13199==    by 0x118245: process_cap_file (tshark.c:3300)
==13199==    by 0x118245: main (tshark.c:1994)
==13199== 
==13199== Conditional jump or move depends on uninitialised value(s)
==13199==    at 0x4C32D08: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13199==    by 0xB3DE204: fputs (iofputs.c:33)
==13199==    by 0x6A8821C: print_line_text (print_stream.c:154)
==13199==    by 0x121331: print_columns (tshark.c:3819)
==13199==    by 0x121331: print_packet (tshark.c:3834)
==13199==    by 0x1217C2: process_packet_single_pass (tshark.c:3478)
==13199==    by 0x118245: process_cap_file (tshark.c:3300)
==13199==    by 0x118245: main (tshark.c:1994)
==13199== 
==13199== Syscall param write(buf) points to uninitialised byte(s)
==13199==    at 0xB46F154: write (write.c:27)
==13199==    by 0xB3EA1BC: _IO_file_write&#64;&#64;GLIBC_2.2.5 (fileops.c:1203)
==13199==    by 0xB3EBF50: new_do_write (fileops.c:457)
==13199==    by 0xB3EBF50: _IO_do_write&#64;&#64;GLIBC_2.2.5 (fileops.c:433)
==13199==    by 0xB3EA9EC: _IO_file_xsputn&#64;&#64;GLIBC_2.2.5 (fileops.c:1266)
==13199==    by 0xB3DE2AE: fputs (iofputs.c:38)
==13199==    by 0x6A8821C: print_line_text (print_stream.c:154)
==13199==    by 0x121331: print_columns (tshark.c:3819)
==13199==    by 0x121331: print_packet (tshark.c:3834)
==13199==    by 0x1217C2: process_packet_single_pass (tshark.c:3478)
==13199==    by 0x118245: process_cap_file (tshark.c:3300)
==13199==    by 0x118245: main (tshark.c:1994)
==13199==  Address 0x1762694a is 3,978 bytes inside a block of size 4,096 alloc'd
==13199==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13199==    by 0xB3DD18B: _IO_file_doallocate (filedoalloc.c:101)
==13199==    by 0xB3ED378: _IO_doallocbuf (genops.c:365)
==13199==    by 0xB3EC497: _IO_file_overflow&#64;&#64;GLIBC_2.2.5 (fileops.c:759)
==13199==    by 0xB3EA9EC: _IO_file_xsputn&#64;&#64;GLIBC_2.2.5 (fileops.c:1266)
==13199==    by 0xB3DE2AE: fputs (iofputs.c:38)
==13199==    by 0x6A8821C: print_line_text (print_stream.c:154)
==13199==    by 0x121331: print_columns (tshark.c:3819)
==13199==    by 0x121331: print_packet (tshark.c:3834)
==13199==    by 0x1217C2: process_packet_single_pass (tshark.c:3478)
==13199==    by 0x118245: process_cap_file (tshark.c:3300)
==13199==    by 0x118245: main (tshark.c:1994)
==13199== 
==13199== 
==13199== HEAP SUMMARY:
==13199==     in use at exit: 47,608 bytes in 160 blocks
==13199==   total heap usage: 290,990 allocs, 290,830 frees, 39,720,707 bytes allocated
==13199== 
==13199== LEAK SUMMARY:
==13199==    definitely lost: 40 bytes in 1 blocks
==13199==    indirectly lost: 16 bytes in 1 blocks
==13199==      possibly lost: 0 bytes in 0 blocks
==13199==    still reachable: 39,367 bytes in 75 blocks
==13199==         suppressed: 8,185 bytes in 83 blocks
==13199== Rerun with --leak-check=full to see details of leaked memory
==13199== 
==13199== For counts of detected and suppressed errors, rerun with: -v
==13199== Use --track-origins=yes to see where uninitialised values come from
==13199== ERROR SUMMARY: 9 errors from 9 contexts (suppressed: 1 from 1)

[ no debug trace ]</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15130#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Peter Wu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-10-09 22:19:51 UTC
        </span>

      </div>




<pre class="bz_comment_text">Reproducible on master (<a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=94b1d90020">v2.9.0rc0-2157-g94b1d90020</a>) as well, but requires the profinet plugin to be built.

The problem is within this piece of code:

    static int
    dissect_ICBAPhysicalDevice_get_LogicalDevice_rqst(tvbuff_t *tvb, int offset,
        packet_info *pinfo, proto_tree *tree, dcerpc_info *di, guint8 *drep)
    {
        guint32      u32Pointer;
        gchar        szStr[1000];
        guint32      u32MaxStr = sizeof(szStr);
        gchar       *call;

        offset = dissect_dcom_this(tvb, offset, pinfo, tree, di, drep);

        offset = dissect_dcom_dcerpc_pointer(tvb, offset, pinfo, tree, di, drep,
                            &amp;u32Pointer);

        if (u32Pointer) {
            offset = dissect_dcom_BSTR(tvb, offset, pinfo, tree, di, drep,
                hf_cba_name, szStr, u32MaxStr);
        } else {
            szStr[0] = '\0';
        }

        if (strlen(szStr) &gt; 0) {

Assuming u32Pointer non-NULL, then dissect_dcom_BSTR should initialize szStr.
That does happen in dcom_tvb_get_nwstringz0, but there is one edge case where that is not called:

	if ((guint32)offset + u32ArraySize*2 &gt; G_MAXINT)
		return offset;

by doing so, szStr remains uninitialized. There are many more cases like this. Always initializing szStr is one option. The other is to check whether it is possible to make functions like dissect_dcom_BSTR always initialize the pszStr parameter.</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15130#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-10-11 11:10:01 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 30128 had a related patch set uploaded by Peter Wu:
DCOM: always NUL-terminate dissect_dcom_BSTR results

<a href="https://code.wireshark.org/review/30128">https://code.wireshark.org/review/30128</a></pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15130#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-10-12 05:09:03 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 30128 merged by Anders Broman:
DCOM: always NUL-terminate dissect_dcom_BSTR results

<a href="https://code.wireshark.org/review/30128">https://code.wireshark.org/review/30128</a></pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15130#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-10-12 08:52:16 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 30158 had a related patch set uploaded by Peter Wu:
DCOM: always NUL-terminate dissect_dcom_BSTR results

<a href="https://code.wireshark.org/review/30158">https://code.wireshark.org/review/30158</a></pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15130#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-10-12 08:52:27 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 30158 merged by Peter Wu:
DCOM: always NUL-terminate dissect_dcom_BSTR results

<a href="https://code.wireshark.org/review/30158">https://code.wireshark.org/review/30158</a></pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15130#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-10-12 08:52:39 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 30159 had a related patch set uploaded by Peter Wu:
DCOM: always NUL-terminate dissect_dcom_BSTR results

<a href="https://code.wireshark.org/review/30159">https://code.wireshark.org/review/30159</a></pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15130#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-10-12 08:52:45 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 30159 merged by Peter Wu:
DCOM: always NUL-terminate dissect_dcom_BSTR results

<a href="https://code.wireshark.org/review/30159">https://code.wireshark.org/review/30159</a></pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15130#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Peter Wu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-10-12 09:05:13 UTC
        </span>

      </div>




<pre class="bz_comment_text">Fixed information leak (stack memory disclosure) issue in
<a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=ec6ace066a">v2.9.0rc0-2184-gec6ace066a</a>
<a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=26c6460e3c">v2.6.5rc0-9-g26c6460e3c</a>
<a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=c5a65115eb">v2.4.11rc0-7-gc5a65115eb</a>

(Affects earlier versions as well, since the introduction in <a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=ea0baf468e778706c40e2fb0337fc65cd3e27ea5">commit ea0baf468e778706c40e2fb0337fc65cd3e27ea5</a>.)

Impact: the contents of uninitialized stack memory could be leaked through the Info column (as was observed with the attached capture file).
Worst case (very, very unlikely), if no NUL terminator is present within the first 1000 bytes, it could overrun the buffer, *reading* past the buffer contents.</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=15130">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=15130">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=15130">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=15130&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=15130" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=15130&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635621461-6n4ImFfObVViJHSwkZj3vk-ekuEnHksi_Rgz6UkvhGo">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>