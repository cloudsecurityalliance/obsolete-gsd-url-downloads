<!DOCTYPE html>
<html lang="en">
<head>
    <title>SSH-MITM Docs - CVE-2020-14145</title>

    <!-- Meta -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="google-site-verification" content="Mos9VsYAjVSwkkLf9UmxLDE_IeVmFOO3ChGGRAPn-eA" />

	<meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />

    <meta name="author" content="SSH-MITM Dev-Team">
    <link rel="shortcut icon" href="favicon.ico">
    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700&display=swap" rel="stylesheet">

    <script src="https://kit.fontawesome.com/df034fdb97.js" crossorigin="anonymous"></script>

    <!-- Theme CSS -->
	<link id="theme-style" rel="stylesheet" href="_static/pygments.css?1634826075">
    <link id="theme-style" rel="stylesheet" href="https://www.ssh-mitm.at/assets/css/theme.css?1634826075">
    <link id="theme-style" rel="stylesheet" href="_static/assets/css/sphinx.css?1634826075">
	<link id="theme-style" rel="stylesheet" href="_static/assets/css/theme2.css?1634826075">
	<link id="theme-style" rel="stylesheet" href="_static/assets/css/toctree-icons.css?1634826075"> 

<!-- RTD Extra Head -->

<link rel="stylesheet" href="https://assets.readthedocs.org/static/css/readthedocs-doc-embed.css" type="text/css" />

<script type="application/json" id="READTHEDOCS_DATA">{"ad_free": false, "api_host": "https://readthedocs.org", "build_date": "2021-10-21T14:21:16Z", "builder": "sphinx", "canonical_url": null, "commit": "e67975cd", "docroot": "/doc/", "features": {"docsearch_disabled": false}, "global_analytics_code": null, "language": "en", "page": "CVE-2020-14145", "programming_language": "py", "project": "ssh-mitm", "proxied_api_host": "/_", "source_suffix": ".rst", "subprojects": {}, "theme": "sphinx_rtd_theme", "user_analytics_code": "", "version": "latest"}</script>

<!--
Using this variable directly instead of using `JSON.parse` is deprecated.
The READTHEDOCS_DATA global variable will be removed in the future.
-->
<script type="text/javascript">
READTHEDOCS_DATA = JSON.parse(document.getElementById('READTHEDOCS_DATA').innerHTML);
</script>

<script type="text/javascript" src="https://assets.readthedocs.org/static/javascript/readthedocs-analytics.js" async="async"></script>

<!-- end RTD <extrahead> -->
</head>

<body>
	<header class="header fixed-top">
    <div class="branding">
        <div class="container-fluid position-relative">
            <nav class="navbar navbar-expand-lg" >
                <button id="docs-sidebar-toggler" class="docs-sidebar-toggler docs-sidebar-visible mr-2 d-xl-none" type="button">
                    <span></span>
                    <span></span>
                    <span></span>
                </button>
                <div class="site-logo">
                    <a class="navbar-brand" href="https://www.ssh-mitm.at"><img class="logo-icon mr-2" src="https://www.ssh-mitm.at/assets/images/site-logo.svg" alt="logo"><span class="logo-text">SSH-MITM <span class="text-alt">Docs</span></span></a>
                </div>

                <button class="navbar-toggler collapsed" type="button" data-toggle="collapse" data-target="#navigation" aria-controls="navigation" aria-expanded="false" aria-label="Toggle navigation">
                    <span> </span>
                    <span> </span>
                    <span> </span>
                </button>

                <div class="collapse navbar-collapse py-3 py-lg-0" id="navigation">
                    <ul class="navbar-nav ml-lg-auto">
                        <li class="nav-item mr-lg-4">
    <a class="nav-link" href="https://docs.ssh-mitm.at">Docs<i class="fas fa-book ml-2"></i></a>
</li>
<li class="nav-item mr-lg-4">
    <a class="nav-link" href="https://www.ssh-mitm.at/projects.html">Projects<i class="fas fa-tasks ml-2"></i></a>
</li>
<li class="nav-item mr-lg-4">
    <a class="nav-link" href="https://www.ssh-mitm.at/contact.html">Contact<i class="far fa-address-card ml-2"></i></a>
</li>
<li class="nav-item mr-lg-0 mt-3 mt-lg-0">
   <a class="btn btn-primary text-white" href="https://github.com/ssh-mitm/ssh-mitm">Checkout on GitHub<i class="fab fa-github ml-2"></i></a>
</li>
                    </ul>
                </div>
            </nav>

        </div><!--//container-->
    </div><!--//branding-->
</header><!--//header-->
	
		<div class="docs-wrapper">
			<div id="docs-sidebar" class="docs-sidebar">

    <nav id="docs-nav" class="docs-nav navbar">

        <div class="top-search-box d-none d-lg-flex ">
            <form class="search-form" action="search.html" method="get">
                <input type="text" placeholder="Search the docs..." name="q" class="form-control search-input">
                <input type="hidden" name="check_keywords" value="yes">
                <input type="hidden" name="area" value="default">
                <button type="submit" class="btn search-btn" value="Search"><i class="fas fa-search"></i></button>
            </form>
        </div>

    
        
        <p class="caption" role="heading"><span class="caption-text">Contents:</span></p>
<ul class="current">
<li class="toctree-l1 toctree-item"><a class="reference internal" href="quickstart.html">Quickstart</a></li>
<li class="toctree-l1 toctree-item"><a class="reference internal" href="fingerprint.html">SSH Fingerprints</a></li>
<li class="toctree-l1 toctree-item"><a class="reference internal" href="authentication.html">Authentication</a></li>
<li class="toctree-l1 toctree-item"><a class="reference internal" href="sshagent.html">SSH Agent</a></li>
<li class="toctree-l1 toctree-item"><a class="reference internal" href="filetransfer.html">SCP/SFTP Filetransfers</a></li>
<li class="toctree-l1 toctree-item"><a class="reference internal" href="portforwarding.html">Port Forwarding</a></li>
<li class="toctree-l1 toctree-item"><a class="reference internal" href="advanced-usage.html">Advanced usage cases</a></li>
<li class="toctree-l1 toctree-item current"><a class="reference internal" href="ssh_vulnerabilities.html">SSH Vurnabilities</a></li>
</ul>

    

    </nav><!--//docs-nav-->
</div><!--//docs-sidebar-->
			<div class="docs-content">
				<div class="container">
					<article class="docs-article" id="section-1">
                        <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
                        
  <section id="cve-2020-14145">
<h1>CVE-2020-14145</h1>
<div class="card card-margin">
    <div class="card-header no-border">
        <h5 class="card-title cve-title">CVE-2020-14145</h5>
    </div>
    <div class="card-body pt-0">
        <div class="widget-49">
            <div class="widget-49-title-wrapper">
                <div class="widget-49-date-primary">
                    <span class="widget-49-date-day">5.9</span>
                    <span class="widget-49-date-month">CVSS</span>
                </div>
                <div class="widget-49-meeting-info">
                    <span class="widget-49-pro-title"><b>Vector:</b> CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N</span>
                    <span class="widget-49-meeting-time">
                        <a href="https://nvd.nist.gov/vuln/detail/CVE-2020-14145">https://nvd.nist.gov/vuln/detail/CVE-2020-14145</a>
                    </span>
                </div>
            </div>
            <p class="widget-49-meeting-integration">
                <i class="fas fa-check"></i> integrated in <a href="https://github.com/ssh-mitm/ssh-mitm/blob/master/ssh_proxy_server/plugins/session/cve202014145.py">SSH-MITM server</a>
            </p>
            <p class="widget-49-meeting-text">
                The client side in OpenSSH 5.7 through 8.6 has an Observable Discrepancy
                leading to an information leak in the algorithm negotiation.
                This allows man-in-the-middle attackers to target initial connection
                attempts (where no host key for the server has been cached by the client).
            </p>
            <span class="widget-49-pro-title"><b>Affected Software:</b></span>
            <ul class="widget-49-meeting-points">
                <li class="widget-49-meeting-item"><b>OpenSSH</b> 5.7-8.6</li>
            </ul>
        </div>
    </div>
</div><section id="description">
<h2>Description</h2>
<p>An information leak in OpenSSH &lt;= 8.6 allows a man in the middle attack to determine, if a client already has
prior knowledge of the remote hosts fingerprint.</p>
<p>Using this information leak it is possible to ignore clients, which will show an error message during an man in the middle attack,
while new clients can be intercepted without alerting them of the man in the middle attack.</p>
<section id="ssh-host-keys">
<h3>SSH Host Keys</h3>
<p>According to <a class="reference external" href="https://tools.ietf.org/html/rfc4251">RFC-4251</a>,
SSH clients keep track of trusted servers by verifying a fingerprint with the user, storing
identity and public key material in the <code class="docutils literal notranslate"><span class="pre">known_hosts</span></code> file (or any other decentralized local database)
when connecting for the first time.</p>
<div class="admonition warning">
<p class="admonition-title">Warning</p>
<p>The ssh trust on first use concept is an artifact dating back to a more simpler time. Then it was
considered a definite step up to its counterparts in terms of security. Now it is frowned upon by
many people who value their security dearly. With the now readily available Public Key Infrastructure (PKI)
of the internet, there is no need to verify the identity of the server against fingerprints.</p>
</div>
<p>This way of handling trust can have multiple implications for an operating mitm server which is trying to audit
ssh connections:</p>
<ul class="simple">
<li><p>the mitm server wants the user to associate his public key with the identity of the actual remote host</p></li>
</ul>
<p>OR if the remote host is already known</p>
<ul class="simple">
<li><p>it wants to pass through the connection to the remote host and not alert the user of the mitm operation</p></li>
</ul>
</section>
</section>
<section id="cve-2020-14145-openssh-client-information-leak">
<h2>CVE-2020-14145: OpenSSH Client Information Leak</h2>
<p>Using this information leak a ssh server can figure out if a connecting client has prior knowledge
of the remote hosts public key fingerprint during algorithm negotiations.</p>
<p>The reasoning behind this ability to extract information about client to server association lies in the
algorithm negotiation itself. Particularly in the way the <code class="docutils literal notranslate"><span class="pre">server_host_key_algorithms</span></code> are sent.
The official <a class="reference external" href="https://tools.ietf.org/html/rfc4253#section-7">SSH Transport RFC 4253</a> <strong>requires</strong>
each named list in the algorithm negotiation to make the first item a guessed preference.
This is understandable for Key Exchange, Crypto or MAC algorithms but leads
to exactly this information leak when also applied to the <code class="docutils literal notranslate"><span class="pre">server_host_key_algorithms</span></code>. This named list is used
to negotiate which public key associated with the corresponding key generation algorithm should be used
to authenticate the identity of the server.</p>
<p>Following comparison will make the described anomaly in question more clear:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span>New Fingerprint
server key:
ecdsa-sha2-nistp256
ecdsa-sha2-nistp384
ecdsa-sha2-nistp521
ssh-ed25519
rsa-sha2-512
rsa-sha2-256
ssh-rsa

Known Fingerprint
server key:
rsa-sha2-512
rsa-sha2-256
ssh-rsa
ecdsa-sha2-nistp256
ecdsa-sha2-nistp384
ecdsa-sha2-nistp521
ssh-ed25519
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>This is a shortened list of the actual output when using the default host key algorithms list.</p>
</div>
<p>With no prior knowledge of the remote host
the OpenSSH Client will send a pre-defined default list of server host key algorithms to choose from.
If the remote host is known i.e. an entry in the local database matches the remote,
the key information of the entry will be used to change the order of the list being sent.</p>
<p>Knowing this a mitm server can simply compare the list of server host key algorithms to a default list
and determine if the client is connecting for the first time or not, then process them accordingly.</p>
<p>OpenSSH 8.4 has implemented a patch that will not alter the named list of server host key algorithms
if the default algorithm (ecdsa-sha2) is locally stored for the remote host, this can partially be worked around
by not actively choosing that algorithm as option on the ssh server.</p>
</section>
<section id="test-with-ssh-mitm">
<h2>Test with SSH-MITM</h2>
<p>The check against CVE-2020-14145 will be executed as soon, as a client connects.</p>
<p>When the client connects for the first time or the first time it will be show in the log output:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>[INFO]  CVE-2020-14145: Client connecting for the FIRST time!
</pre></div>
</div>
<p>If a client has a already stored fingerprint, SSH-MITM will generate following log message:</p>
<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>[INFO]  CVE-2020-14145: Client has a locally cached remote fingerprint!
</pre></div>
</div>
</section>
<section id="response-from-damien-miller">
<h2>Response from  Damien Miller</h2>
<p>On 2021-05-27 Damien Miller answered a question in the <a class="reference external" href="https://bugzilla.mindrot.org/show_bug.cgi?id=3313">OpenSSH Bugtracker</a> , regarding this information leak.</p>
<div class="admonition note">
<p class="admonition-title">Note</p>
<p>First, we consider the automatic ordering of host key algorithms an important feature for security.
It provides continuity of trust by clients across changes in default algorithm preference in ssh and servers
offering hostkeys of different types.</p>
<p>Disabling this feature wholesale would IMO result in a net <em>loss</em> of security as it would force more connections
that already have learned a hostkey to accept a new one of a different algorithm, thereby needlessly exposing them to MITM risk.</p>
<p>That being said, commit <a class="reference external" href="https://github.com/openssh/openssh-portable/commit/b3855ff">b3855ff</a> (shipped in openssh-8.4) adjusted the ordering to always use the default if the client has
learned a hostkey matching the best-preference algorithm. openssh-8.5 enabled UpdateHostkeys by default (with some restrictions)
so most users will automatically learn a best-preference hostkey if one is available at the server. Between these, most users should
end up using the default algorithm list.</p>
<p>Speaking for myself - I plan to relax the restrictions around UpdateHostkeys’ activation, but do not plan to take other action around
this “vulnerability”. In particular, I do not intend to offer an option to force the use of the default cipher list. IMO too many users
would flip it thinking it solved a security problem when the situation is actually far more subtle and the reverse is likely the case.</p>
</div>
</section>
<section id="mitigation">
<h2>Mitigation</h2>
<p>Mitigation of this information leak is a risk assessment. As Damien Miller stated, due to changes in the order, a client could get another public key
from the server, which might result in a key changed warning. Most SSH servers have different keys (RSA, elliptic curve, …) and the server will respond with your preferred algorithm.</p>
<p>If you want to mitigate the described behavior and you are aware of possible changing host keys due to different algorithms, there are two recommended methods:</p>
<section id="certificate-based-host-key-algorithms-recommended">
<h3>Certificate based host key algorithms (recommended)</h3>
<p>Using certificate based host key algorithms are not always possible, but they are the recommended way of mitigating this information leak.</p>
<p>According to research done by the <a class="reference external" href="https://www.fzi.de/fileadmin/user_upload/2020-12-02-FSA-2020-2v1.1.pdf">FZI</a>
this will not alter the order of the server host key algorithms and therefore no information will be leaked.</p>
</section>
<section id="manually-setting-hostkeyalgorithms">
<h3>Manually setting <code class="docutils literal notranslate"><span class="pre">HostKeyAlgorithms</span></code></h3>
<p><strong>Warning:</strong> Only use this method, if the risk of the information leak is higher than the risk of accepting different fingerprints types.</p>
<p>When setting <code class="docutils literal notranslate"><span class="pre">HostKeyAlgorithms</span></code> as an ssh option manually this described anomaly will not occur
because the given list of algorithms will always be used as-is. This can be used to mitigate the
information leak.</p>
<p>You should use the default order matching your client version. If you use a default order with unknown algorithms, this could break your ssh client.</p>
<p>To get the client version, simply run: <code class="docutils literal notranslate"><span class="pre">ssh</span> <span class="pre">-V</span></code></p>
<p>The default order four your ssh client version can be found in <a class="reference external" href="https://github.com/ssh-mitm/ssh-mitm/blob/master/ssh_proxy_server/plugins/session/cve202014145.py">https://github.com/ssh-mitm/ssh-mitm/blob/master/ssh_proxy_server/plugins/session/cve202014145.py</a></p>
</section>
</section>
<section id="references">
<h2>References</h2>
<ul class="simple">
<li><p><a class="reference external" href="https://www.fzi.de/fileadmin/user_upload/2020-12-02-FSA-2020-2v1.1.pdf">https://www.fzi.de/fileadmin/user_upload/2020-12-02-FSA-2020-2v1.1.pdf</a></p></li>
</ul>
</section>
</section>


                        </div>
					</article>

					<footer class="footer">
    <div class="container">
        <hr>
    </div>
    <div class="container text-center pb-5">
        <ul class="social-list list-unstyled pt-4 mb-0">
            <li class="list-inline-item"><a href="https://github.com/ssh-mitm/ssh-mitm"><i class="fab fa-github fa-fw"></i></a></li>
<li class="list-inline-item"><a href="https://pypi.org/project/ssh-mitm/"><i class="fab fa-python fa-fw"></i></a></li>
<li class="list-inline-item"><a href="https://twitter.com/SshMitm"><i class="fab fa-twitter fa-fw"></i></a></li>
<li class="list-inline-item"><a href="https://www.linkedin.com/in/manfred-kaiser"><i class="fab fa-linkedin fa-fw"></i></a></li>
        </ul>
        <small class="copyright">
            &#169; Copyright 2021, <a href="https://github.com/ssh-mitm/ssh-mitm/graphs/contributors">SSH-MITM Dev-Team</a>
        </small>
    </div>
</footer>
				</div>
			</div>
		</div><!--//docs-wrapper-->
	

    <!-- Javascript -->
		<script id="documentation_options" data-url_root="" src="_static/documentation_options.js"></script>
		<script data-url_root="./" id="documentation_options" src="_static/documentation_options.js"></script>
		<script src="_static/jquery.js"></script>
		<script src="_static/underscore.js"></script>
		<script src="_static/doctools.js"></script>
		<script async="async" src="https://assets.readthedocs.org/static/javascript/readthedocs-doc-embed.js"></script>

		<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
		<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

		<!-- Page Specific JS -->
		<script src="_static/assets/js/docs.js"></script>
	
	
</body>
</html>