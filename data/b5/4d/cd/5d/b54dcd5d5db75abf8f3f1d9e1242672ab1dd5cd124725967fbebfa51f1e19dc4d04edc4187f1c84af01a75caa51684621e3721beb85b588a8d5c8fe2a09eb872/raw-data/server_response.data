<!DOCTYPE html>
<html lang="en">
<head>
  <!-- META DATA -->
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="preload" href="/assets/css/index.css" as="style">
  <link rel="preload" href="/assets/js/main.js" as="script">
  <!--[if IE]><meta http-equiv="cleartype" content="on" /><![endif]-->
  <link rel="canonical" href="https://securitylab.github.com/research/uboot-rce-nfs-vulnerability/">
  <link rel="alternate" type="application/rss+xml" title="GitHub Security Lab" href="/feed.xml">
  <link rel="stylesheet" media="screen" href="/assets/css/index.css" />
  <script async src="https://js.maxmind.com/js/apis/geoip2/v2.1/geoip2.js"></script>
  <script src="/assets/js/jquery.js"></script>
  <link id="favicon" rel="shortcut icon" type="image/ico" href="/assets/img/favicons/favicon.png" />
  <link rel="apple-touch-icon" href="/assets/img/favicons/apple-touch-icon.png" />
  <link rel="icon" href="/assets/img/favicons/android-favicon.png">
  <!-- Begin Jekyll SEO tag v2.7.1 -->
<title>U-Boot NFS RCE Vulnerabilities (CVE-2019-14192) | GitHub Security Lab</title>
<meta name="generator" content="Jekyll v3.9.0" />
<meta property="og:title" content="U-Boot NFS RCE Vulnerabilities (CVE-2019-14192)" />
<meta name="author" content="fjserna" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="Semmle’s security research team discovers 13 U-Boot RCE vulnerabilities in its bootloader, which is commonly used by IoT, Kindle, and ARM ChromeOS devices." />
<meta property="og:description" content="Semmle’s security research team discovers 13 U-Boot RCE vulnerabilities in its bootloader, which is commonly used by IoT, Kindle, and ARM ChromeOS devices." />
<link rel="canonical" href="https://securitylab.github.com/research/uboot-rce-nfs-vulnerability/" />
<meta property="og:url" content="https://securitylab.github.com/research/uboot-rce-nfs-vulnerability/" />
<meta property="og:site_name" content="GitHub Security Lab" />
<meta property="og:image" content="https://securitylab.github.com/images/uboot-device.jpg" />
<meta property="og:type" content="article" />
<meta property="article:published_time" content="2019-07-24T00:00:00+00:00" />
<meta name="twitter:card" content="summary_large_image" />
<meta property="twitter:image" content="https://securitylab.github.com/images/uboot-device.jpg" />
<meta property="twitter:title" content="U-Boot NFS RCE Vulnerabilities (CVE-2019-14192)" />
<meta name="twitter:site" content="@GHSecurityLab" />
<meta name="twitter:creator" content="@fjserna" />
<script type="application/ld+json">
{"description":"Semmle’s security research team discovers 13 U-Boot RCE vulnerabilities in its bootloader, which is commonly used by IoT, Kindle, and ARM ChromeOS devices.","url":"https://securitylab.github.com/research/uboot-rce-nfs-vulnerability/","@type":"BlogPosting","image":"https://securitylab.github.com/images/uboot-device.jpg","headline":"U-Boot NFS RCE Vulnerabilities (CVE-2019-14192)","dateModified":"2019-07-24T00:00:00+00:00","datePublished":"2019-07-24T00:00:00+00:00","mainEntityOfPage":{"@type":"WebPage","@id":"https://securitylab.github.com/research/uboot-rce-nfs-vulnerability/"},"author":{"@type":"Person","name":"fjserna"},"@context":"https://schema.org"}</script>
<!-- End Jekyll SEO tag -->

</head>

<body class="no-js page-/research/uboot-rce-nfs-vulnerability">
  <a class="skip-to-content" href="#content">skip to content</a>

  <div class="d-none d-md-block py-2 bg-gray-dark">
  <div class="container-lg p-responsive d-flex flex-md-justify-between"><a class="d-block text-white no-underline" href="https://github.com" data-ga-click="Top bar, go to github, text:Back to GitHub.com">Back to GitHub.com</a></div>
</div>
<nav class="site-navigation UnderlineNav d-block">
  <div class="container-lg d-flex flex-items-center px-3 px-md-6 px-lg-3 py-0">
    <svg height="32" class="octicon octicon-mark-github mr-2" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true">
      <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path>
    </svg>
    <a aria-current="page" role="tab" title="Security Lab" class="UnderlineNav-item UnderlineNav-item--logo" href="/">Security Lab</a>
    <div class="UnderlineNav-body flex-auto flex-justify-end hide-sm hide-md" role="tablist">
      <a role="tab" title="Bounties" class="UnderlineNav-item " href="/bounties/">Bounties</a>
      <a role="tab" title="Research" class="UnderlineNav-item " href="/research/">Research</a>
      <a role="tab" title="Advisories" class="UnderlineNav-item " href="/advisories/">Advisories</a>
      <a role="tab" title="Get Involved" class="UnderlineNav-item " href="/get-involved/">Get Involved</a>
      <a role="tab" title="Events" class="UnderlineNav-item " href="/events/">Events</a>
		</div>
    <div class="flex-auto d-flex flex-justify-end hide-lg hide-xl"><button aria-label="Menu" aria-expanded="false" class="sc-VigVT sc-jzJRlG facTgp js-menu-trigger"><svg aria-hidden="true" class="sc-dxgOiQ hTjMfW" height="16" role="img" viewBox="0 0 12 16" width="12" style="display:inline-block;fill:currentColor;user-select:none;vertical-align:text-bottom"><path fill-rule="evenodd" d="M11.41 9H.59C0 9 0 8.59 0 8c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zm0-4H.59C0 5 0 4.59 0 4c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zM.59 11H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1H.59C0 13 0 12.59 0 12c0-.59 0-1 .59-1z"></path></svg></button><div></div></div>
  </div>
</nav>

<div class="mobile-nav">
  <div>
    <a role="tab" title="Bounties" class="UnderlineNav-item " href="/">Home</a>
    <a role="tab" title="Bounties" class="UnderlineNav-item " href="/bounties/">Bounties</a>
    <a role="tab" title="Research" class="UnderlineNav-item " href="/research/">Research</a>
    <a role="tab" title="Advisories" class="UnderlineNav-item " href="/advisories/">Advisories</a>
    <a role="tab" title="Get Involved" class="UnderlineNav-item " href="/get-involved/">Get Involved</a>
    <a role="tab" title="Events" class="UnderlineNav-item " href="/events/">Events</a>
  </div>
</div>
<span class="mobile-nav-screen js-menu-trigger"></span>


  <div class="container-md p-responsive mt-7 mb-8 mt-md-10 pt-md-10">
    <header class="post-header d-block mb-6">
      <div class="date text-mono f5 my-3">July 24, 2019</div>
      <h1 class="my-2 h00-mktg lh-condensed">U-Boot NFS RCE Vulnerabilities (CVE-2019-14192)</h1>

      
      
      
      
      

      

      <a target="_blank" class="sc-frDJqD SgxRc d-inline-flex flex-row flex-items-center text-gray" href="https://github.com/fjserna">
        <img class="mr-3" src="https://avatars.githubusercontent.com/u/8508934?s=35" height="35" width="35">
        <span>Fermin J. Serna</span>
      </a>
    </header>

    <main id="content" class="markdown-body" aria-label="Content">
      <p>This post is about 13 remote-code-execution vulnerabilities in the <a href="https://en.wikipedia.org/wiki/Das_U-Boot">U-Boot boot loader</a>, which I found with my colleagues Pavel Avgustinov and Kevin Backhouse. The vulnerabilities can be triggered when U-Boot is configured to use the network for fetching the next stage boot resources.</p>

<p>Please note that the vulnerability is not yet patched at <a href="https://gitlab.denx.de/u-boot/u-boot">https://gitlab.denx.de/u-boot/u-boot</a>, and that I am making these vulnerabilities public at the request of U-Boot’s master custodian Tom Rini. For more information, check the timeline below.</p>

<p>MITRE has issued the following CVEs for the 13 vulnerabilities: CVE-2019-14192, CVE-2019-14193, CVE-2019-14194, CVE-2019-14195, CVE-2019-14196, CVE-2019-14197, CVE-2019-14198, CVE-2019-14199, CVE-2019-14200, CVE-2019-14201, CVE-2019-14202, CVE-2019-14203 and CVE-2019-14204</p>

<h2 id="what-is-u-boot">What is U-Boot?</h2>

<p><a href="https://en.wikipedia.org/wiki/Das_U-Boot">Das U-Boot</a> (commonly known as “the universal boot loader”) is a popular primary bootloader widely used in embedded devices to fetch data from different sources and run the next stage code, commonly (but not limited to) a Linux Kernel. It is commonly used by IoT, Kindle, and ARM ChromeOS devices.</p>

<p>U-Boot supports fetching the next stage code from different file partition formats (ext4 as an example), but also from the network (TFTP and NFS). Please note, U-boot supports <a href="https://github.com/u-boot/u-boot/blob/master/doc/uImage.FIT/verified-boot.txt">verified boot</a>, where the image fetched is checked for tampering. This mitigates the risks of using insecure cleartext protocols such as TFTP and NFS. so any vulnerability before the signature check could mean a device jailbreak.</p>

<h2 id="i-am-using-u-boot-am-i-affected">I am using U-boot, am I affected?</h2>

<p>These vulnerabilities affect a very specific U-Boot configuration, where U-Boot is instructed to use networking. Some of these vulnerabilities exist in the NFS parsing code but some others exist in the generic TCP/IP stack.</p>

<p>This configuration is commonly used on diskless IoT deployment and during rapid development.</p>

<h2 id="what-is-the-impact">What is the impact?</h2>

<p>Through these vulnerabilities an attacker in the same network (or controlling a malicious NFS server) could gain code execution at the U-Boot powered device. Due to the nature of this vulnerability, exploitation does not seem extremely complicated, although it could be made more challenging by using stack cookies, ASLR or other memory protection runtime and compile time mitigations.</p>

<h2 id="understood-what-are-the-vulnerabilities">Understood, what are the vulnerabilities?</h2>

<p>The first vulnerability was found in 2 very similar occurrences via source code review and we used Semmle’s <a href="https://lgtm.com/">LGTM.com</a> and <a href="https://semmle.com/codeql">CodeQL</a> to find the others. It is a plain <code class="language-plaintext highlighter-rouge">memcpy</code> overflow with an attacker-controlled size coming from the network packet without any validation.</p>

<p>The problem exists in the <a href="https://github.com/u-boot/u-boot/blob/11e409284ee593c980e16d93d12c5e19c99b62c0/net/nfs.c#L608"><code class="language-plaintext highlighter-rouge">nfs_readlink_reply</code></a> function that parses an nfs reply coming from the network. It parses 4 bytes and, without any further validation, it uses them as length for a <code class="language-plaintext highlighter-rouge">memcpy</code> in two different locations.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">static</span> <span class="kt">int</span> <span class="nf">nfs_readlink_reply</span><span class="p">(</span><span class="n">uchar</span> <span class="o">*</span><span class="n">pkt</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="n">len</span><span class="p">)</span>
<span class="p">{</span>
	<span class="p">[...]</span>

	<span class="cm">/* new path length */</span>
	<span class="n">rlen</span> <span class="o">=</span> <span class="n">ntohl</span><span class="p">(</span><span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">reply</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">1</span> <span class="o">+</span> <span class="n">nfsv3_data_offset</span><span class="p">]);</span>

	<span class="k">if</span> <span class="p">(</span><span class="o">*</span><span class="p">((</span><span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">reply</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">2</span> <span class="o">+</span> <span class="n">nfsv3_data_offset</span><span class="p">]))</span> <span class="o">!=</span> <span class="sc">'/'</span><span class="p">)</span> <span class="p">{</span>
		<span class="kt">int</span> <span class="n">pathlen</span><span class="p">;</span>

		<span class="n">strcat</span><span class="p">(</span><span class="n">nfs_path</span><span class="p">,</span> <span class="s">"/"</span><span class="p">);</span>
		<span class="n">pathlen</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">nfs_path</span><span class="p">);</span>
		<span class="n">memcpy</span><span class="p">(</span><span class="n">nfs_path</span> <span class="o">+</span> <span class="n">pathlen</span><span class="p">,</span>
		       <span class="p">(</span><span class="n">uchar</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">reply</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">2</span> <span class="o">+</span> <span class="n">nfsv3_data_offset</span><span class="p">]),</span>
		       <span class="n">rlen</span><span class="p">);</span>
		<span class="n">nfs_path</span><span class="p">[</span><span class="n">pathlen</span> <span class="o">+</span> <span class="n">rlen</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
		<span class="n">memcpy</span><span class="p">(</span><span class="n">nfs_path</span><span class="p">,</span>
		       <span class="p">(</span><span class="n">uchar</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">reply</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">2</span> <span class="o">+</span> <span class="n">nfsv3_data_offset</span><span class="p">]),</span>
		       <span class="n">rlen</span><span class="p">);</span>
		<span class="n">nfs_path</span><span class="p">[</span><span class="n">rlen</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>The destination buffer <a href="https://github.com/u-boot/u-boot/blob/11e409284ee593c980e16d93d12c5e19c99b62c0/net/nfs.c#L75"><code class="language-plaintext highlighter-rouge">nfs_path</code></a> is a global one that can hold up to 2048 bytes.</p>

<h2 id="variant-analysis-using-codeql">Variant Analysis using CodeQL</h2>

<p>We used <a href="https://lgtm.com/query/7709901104691588335/">the following query</a> that gave us a very manageable list of 9 results to follow up manually. The idea behind the query is to perform a data flow analysis from any helper functions such as <code class="language-plaintext highlighter-rouge">ntohl()</code>/<code class="language-plaintext highlighter-rouge">ntohs()</code>/…to the size argument of <code class="language-plaintext highlighter-rouge">memcpy</code>.</p>

<pre><code class="language-ql">import cpp

import semmle.code.cpp.dataflow.TaintTracking
import semmle.code.cpp.rangeanalysis.SimpleRangeAnalysis

class NetworkByteOrderTranslation extends Expr {
  NetworkByteOrderTranslation() {
    // On Windows, there are ntoh* functions.
    this.(Call).getTarget().getName().regexpMatch("ntoh(l|ll|s)")
    or
    // On Linux, and in some code bases, these are defined as macros.
    this = any(MacroInvocation mi |
        mi.getOutermostMacroAccess().getMacroName().regexpMatch("(?i)(^|.*_)ntoh(l|ll|s)")
      ).getExpr()
  }
}

class NetworkToMemFuncLength extends TaintTracking::Configuration {
  NetworkToMemFuncLength() { this = "NetworkToMemFuncLength" }

  override predicate isSource(DataFlow::Node source) {
       source.asExpr() instanceof NetworkByteOrderTranslation
  }
  
  override predicate isSink(DataFlow::Node sink) {
    exists (FunctionCall fc |
        fc.getTarget().getName().regexpMatch("memcpy|memmove") and
        fc.getArgument(2) = sink.asExpr() )
  } 
 
}

from Expr ntoh, Expr sizeArg, NetworkToMemFuncLength config
where config.hasFlow(DataFlow::exprNode(ntoh), DataFlow::exprNode(sizeArg))
select ntoh.getLocation(), sizeArg
</code></pre>

<h2 id="did-we-find-any-variants">Did we find any variants?</h2>

<p>We went through the results and while some have the size checked in between the data flow from source to sink, some were found to be exploitable. Additionally, we found some other variants through source code review.</p>

<h2 id="unbound-memcpy-with-a-failed-length-check-at-nfs_lookup_reply">Unbound memcpy with a failed length check at <code class="language-plaintext highlighter-rouge">nfs_lookup_reply</code></h2>

<p>This problem exists in the <a href="https://github.com/u-boot/u-boot/blob/5b4b680cfe29a67171ccbe439c66374cb31faca3/net/nfs.c#L571-L574"><code class="language-plaintext highlighter-rouge">nfs_lookup_reply</code></a> function that again parses an nfs reply coming from the network. It parses 4 bytes and uses them as length for a <code class="language-plaintext highlighter-rouge">memcpy</code> in two different locations.</p>

<p>A length check happens to make sure it is not bigger than the allocated buffer. Unfortunately, this check can be bypassed with a negative value that would lead later to a large buffer overflow.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">filefh3_length</span> <span class="o">=</span> <span class="n">ntohl</span><span class="p">(</span><span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">reply</span><span class="p">.</span><span class="n">data</span><span class="err">\</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
<span class="k">if</span> <span class="p">(</span><span class="n">filefh3_length</span> <span class="o">&gt;</span> <span class="n">NFS3_FHSIZE</span><span class="p">)</span>
    <span class="n">filefh3_length</span>  <span class="o">=</span> <span class="n">NFS3_FHSIZE</span><span class="p">;</span>

<span class="n">memcpy</span><span class="p">(</span><span class="n">filefh</span><span class="p">,</span> <span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">reply</span><span class="p">.</span><span class="n">data</span> <span class="o">+</span> <span class="mi">2</span><span class="p">,</span> <span class="n">filefh3_length</span><span class="p">);</span>
</code></pre></div></div>

<p>The destination buffer <a href="https://github.com/u-boot/u-boot/blob/5b4b680cfe29a67171ccbe439c66374cb31faca3/net/nfs.c#L55"><code class="language-plaintext highlighter-rouge">filefh</code></a> is a global one that can hold up to 64 bytes.</p>

<h2 id="unbound-memcpy-with-a-failed-length-check-at-nfs_read_replystore_block">Unbound memcpy with a failed length check at <code class="language-plaintext highlighter-rouge">nfs_read_reply</code>/<code class="language-plaintext highlighter-rouge">store_block</code></h2>

<p>This problem exists in the <code class="language-plaintext highlighter-rouge">nfs_read_reply</code> function when reading a file and storing it into another medium (flash or physical memory) for later processing. Again, the data and length is fully controlled by the attacker and never validated.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">static</span> <span class="kt">int</span> <span class="nf">nfs_read_reply</span><span class="p">(</span><span class="n">uchar</span> <span class="o">*</span><span class="n">pkt</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="n">len</span><span class="p">)</span>
<span class="p">{</span>        <span class="p">[...]</span>

	<span class="k">if</span> <span class="p">(</span><span class="n">supported_nfs_versions</span> <span class="o">&amp;</span> <span class="n">NFSV2_FLAG</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">rlen</span> <span class="o">=</span> <span class="n">ntohl</span><span class="p">(</span><span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">reply</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">18</span><span class="p">]);</span> <span class="c1">// &lt;-- rlen is attacker-controlled could be 0xFFFFFFFF</span>
		<span class="n">data_ptr</span> <span class="o">=</span> <span class="p">(</span><span class="n">uchar</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="p">(</span><span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">reply</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">19</span><span class="p">]);</span>
	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>  <span class="cm">/* NFSV3_FLAG */</span>
		<span class="kt">int</span> <span class="n">nfsv3_data_offset</span> <span class="o">=</span>
			<span class="n">nfs3_get_attributes_offset</span><span class="p">(</span><span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">reply</span><span class="p">.</span><span class="n">data</span><span class="p">);</span>

		<span class="cm">/* count value */</span>
		<span class="n">rlen</span> <span class="o">=</span> <span class="n">ntohl</span><span class="p">(</span><span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">reply</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">1</span> <span class="o">+</span> <span class="n">nfsv3_data_offset</span><span class="p">]);</span> <span class="c1">// &lt;-- rlen is attacker-controlled</span>
		<span class="cm">/* Skip unused values :
			EOF:		32 bits value,
			data_size:	32 bits value,
		*/</span>
		<span class="n">data_ptr</span> <span class="o">=</span> <span class="p">(</span><span class="n">uchar</span> <span class="o">*</span><span class="p">)</span>
			<span class="o">&amp;</span><span class="p">(</span><span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">reply</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">4</span> <span class="o">+</span> <span class="n">nfsv3_data_offset</span><span class="p">]);</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="p">(</span><span class="n">store_block</span><span class="p">(</span><span class="n">data_ptr</span><span class="p">,</span> <span class="n">nfs_offset</span><span class="p">,</span> <span class="n">rlen</span><span class="p">))</span> <span class="c1">// &lt;-- We pass to store_block source and length controlled by the attacker</span>
			<span class="k">return</span> <span class="o">-</span><span class="mi">9999</span><span class="p">;</span>

	<span class="p">[...]</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Focusing on physical memory part of the <a href="https://github.com/u-boot/u-boot/blob/5b4b680cfe29a67171ccbe439c66374cb31faca3/net/nfs.c#L81"><code class="language-plaintext highlighter-rouge">store_block</code></a> function, it attempts to reserve some memory using the arch specific function <code class="language-plaintext highlighter-rouge">map_physmem</code>, ending up calling <code class="language-plaintext highlighter-rouge">phys_to_virt</code>. As you can see <a href="https://github.com/u-boot/u-boot/blob/94905e1db8d8d42c4f39f14dbee2f9788390db5e/include/asm-generic/io.h#L30">in the x86 implementation</a>, when reserving physical memory it clearly ignores length and gives you a raw pointer without checking if surrounding areas are reserved (or not) for other purposes.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">static</span> <span class="kr">inline</span> <span class="kt">void</span> <span class="o">*</span><span class="nf">phys_to_virt</span><span class="p">(</span><span class="n">phys_addr_t</span> <span class="n">paddr</span><span class="p">)</span>
<span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)(</span><span class="kt">unsigned</span> <span class="kt">long</span><span class="p">)</span><span class="n">paddr</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Later at <code class="language-plaintext highlighter-rouge">store_block</code> there is a <code class="language-plaintext highlighter-rouge">memcpy</code> buffer overrun with attacker-controlled source and length.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">static</span> <span class="kr">inline</span> <span class="kt">int</span> <span class="nf">store_block</span><span class="p">(</span><span class="n">uchar</span> <span class="o">*</span><span class="n">src</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="n">offset</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="n">len</span><span class="p">)</span>
<span class="p">{</span>

<span class="p">[...]</span>

 <span class="kt">void</span> <span class="o">*</span><span class="n">ptr</span> <span class="o">=</span> <span class="n">map_sysmem</span><span class="p">(</span><span class="n">load_addr</span> <span class="o">+</span> <span class="n">offset</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span> <span class="c1">// &lt;-- essentially this is ptr = load_addr + offset</span>
 <span class="n">memcpy</span><span class="p">(</span><span class="n">ptr</span><span class="p">,</span> <span class="n">src</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span> <span class="c1">// &lt;-- unrestricted overflow happens here</span>
 <span class="n">unmap_sysmem</span><span class="p">(</span><span class="n">ptr</span><span class="p">);</span>

<span class="p">[...]</span>

<span class="p">}</span>
</code></pre></div></div>

<p>Potentially, similar problems may exist with the <code class="language-plaintext highlighter-rouge">flash_write</code> code path.</p>

<h2 id="unbound-memcpy-when-parsing-a-udp-packet-due-to-integer-underflow">Unbound memcpy when parsing a UDP packet due to integer underflow</h2>

<p>The function <code class="language-plaintext highlighter-rouge">net_process_received_packet</code> is subject to an integer underflow when <a href="https://github.com/u-boot/u-boot/blob/5b4b680cfe29a67171ccbe439c66374cb31faca3/net/net.c#L1302-L1314">using <code class="language-plaintext highlighter-rouge">ip-&gt;udp_len</code> without validation</a>. Later this field is used in a <a href="https://github.com/u-boot/u-boot/blob/94905e1db8d8d42c4f39f14dbee2f9788390db5e/drivers/net/netconsole.c#L134"><code class="language-plaintext highlighter-rouge">memcpy</code> at <code class="language-plaintext highlighter-rouge">nc_input_packet</code></a> and any udp packet handlers that are set via <code class="language-plaintext highlighter-rouge">net_set_udp_handler</code> (DNS, dhcp, …).</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#if defined(CONFIG_NETCONSOLE) &amp;&amp; !defined(CONFIG_SPL_BUILD)
</span>                <span class="n">nc_input_packet</span><span class="p">((</span><span class="n">uchar</span> <span class="o">*</span><span class="p">)</span><span class="n">ip</span> <span class="o">+</span> <span class="n">IP_UDP_HDR_SIZE</span><span class="p">,</span>
                                <span class="n">src_ip</span><span class="p">,</span>
                                <span class="n">ntohs</span><span class="p">(</span><span class="n">ip</span><span class="o">-&gt;</span><span class="n">udp_dst</span><span class="p">),</span>
                                <span class="n">ntohs</span><span class="p">(</span><span class="n">ip</span><span class="o">-&gt;</span><span class="n">udp_src</span><span class="p">),</span>
                                <span class="n">ntohs</span><span class="p">(</span><span class="n">ip</span><span class="o">-&gt;</span><span class="n">udp_len</span><span class="p">)</span> <span class="o">-</span> <span class="n">UDP_HDR_SIZE</span><span class="p">);</span> <span class="c1">// &lt;- integer underflow</span>
<span class="cp">#endif
</span>                <span class="cm">/*
                 * IP header OK.  Pass the packet to the current handler.
                 */</span>
                <span class="p">(</span><span class="o">*</span><span class="n">udp_packet_handler</span><span class="p">)((</span><span class="n">uchar</span> <span class="o">*</span><span class="p">)</span><span class="n">ip</span> <span class="o">+</span> <span class="n">IP_UDP_HDR_SIZE</span><span class="p">,</span>
                                      <span class="n">ntohs</span><span class="p">(</span><span class="n">ip</span><span class="o">-&gt;</span><span class="n">udp_dst</span><span class="p">),</span>
                                      <span class="n">src_ip</span><span class="p">,</span>
                                      <span class="n">ntohs</span><span class="p">(</span><span class="n">ip</span><span class="o">-&gt;</span><span class="n">udp_src</span><span class="p">),</span>
                                      <span class="n">ntohs</span><span class="p">(</span><span class="n">ip</span><span class="o">-&gt;</span><span class="n">udp_len</span><span class="p">)</span> <span class="o">-</span> <span class="n">UDP_HDR_SIZE</span><span class="p">);</span> <span class="c1">// &lt;- integer underflow</span>
</code></pre></div></div>

<p>Please note, we did not audit all potential udp handlers that are set for different purposes (DNS, DHCP, …). However, we did fully audit the <code class="language-plaintext highlighter-rouge">nfs_handler</code>, as discussed below.</p>

<h2 id="multiple-stack-based-buffer-overflow-in-nfs_handler-reply-helper-functions">Multiple stack-based buffer overflow in <code class="language-plaintext highlighter-rouge">nfs_handler</code> reply helper functions</h2>

<p>This is a code review variant of the above vulnerability. Here, the integer underflows when parsing a udp packet with a large <code class="language-plaintext highlighter-rouge">ip-&gt;udp_len</code> later calling the <code class="language-plaintext highlighter-rouge">nfs_handler</code>. In this function, again there is no validation of the length and we call helper functions such as <code class="language-plaintext highlighter-rouge">nfs_readlink_reply</code>. This function blindly uses the length without validation, causing a stack-based buffer overflow.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">static</span> <span class="kt">int</span> <span class="nf">nfs_readlink_reply</span><span class="p">(</span><span class="n">uchar</span> <span class="o">*</span><span class="n">pkt</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="n">len</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">struct</span> <span class="n">rpc_t</span> <span class="n">rpc_pkt</span><span class="p">;</span>

    <span class="p">[...]</span>

        <span class="n">memcpy</span><span class="p">((</span><span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">rpc_pkt</span><span class="p">,</span> <span class="n">pkt</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</code></pre></div></div>

<p>We identified 5 different vulnerable functions subject to the same code pattern, which leads to a stack-based buffer overflow. In addition to <code class="language-plaintext highlighter-rouge">nfs_readlink_reply</code>:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">rpc_lookup_reply</code></li>
  <li><code class="language-plaintext highlighter-rouge">nfs_mount_reply</code></li>
  <li><code class="language-plaintext highlighter-rouge">nfs_umountall_reply</code></li>
  <li><code class="language-plaintext highlighter-rouge">nfs_lookup_reply</code></li>
</ul>

<h2 id="read-out-of-bound-data-at-nfs_read_reply">Read out-of-bound data at <code class="language-plaintext highlighter-rouge">nfs_read_reply</code></h2>

<p>This is very similar to the previous vulnerabilities.The developers have tried to be careful by performing size checks while copying the data that come from the socket. While they checked to prevent the buffer overflow they did not check there was enough data in the source buffer, leading to a potential read out-of-bounds access violation.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">static</span> <span class="kt">int</span> <span class="nf">nfs_read_reply</span><span class="p">(</span><span class="n">uchar</span> <span class="o">*</span><span class="n">pkt</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="n">len</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">struct</span> <span class="n">rpc_t</span> <span class="n">rpc_pkt</span><span class="p">;</span>

    <span class="p">[...]</span>

        <span class="n">memcpy</span><span class="p">(</span><span class="o">&amp;</span><span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">pkt</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">rpc_pkt</span><span class="p">.</span><span class="n">u</span><span class="p">.</span><span class="n">reply</span><span class="p">));</span>
</code></pre></div></div>

<p>An attacker could supply an NFS packet with a read request and with a small packet request sent to the socket.</p>

<h2 id="any-recommendations">Any recommendations?</h2>

<p>In order to mitigate these vulnerabilities, there are only two options:</p>

<ul>
  <li>Apply patches as soon as they are released, or</li>
  <li>While vulnerable, do not use mounting filesystems via NFS or any U-Boot networking functionality</li>
</ul>

<h2 id="disclosure-timeline">Disclosure timeline</h2>

<p>This vulnerability report was subject to our disclosure policy available at <a href="https://lgtm.com/security/#disclosure_policy">https://lgtm.com/security/#disclosure_policy</a></p>

<ul>
  <li>May 15, 2019 - Fermín Serna initially finds two vulnerabilities and writes a query that uncovers three more problematic call sites.</li>
  <li>May 16, 2019 - Pavel Avgustinov brings some CodeQL magic, generalizes the query, and finds some more parsing ip and udp headers.</li>
  <li>May 23, 2019 - Kevin Backhouse alerts Pavel and Fermín about an oversight regarding a stack-based buffer overflow via nfs_handler.</li>
  <li>May 23, 2019 - Semmle security team concludes the investigation and contacts maintainers via email.</li>
  <li>May 24, 2019 - Tom Rini (U-Boot’s master custodian) acknowledges receiving the security report.</li>
  <li>July 19, 2019 - Tom Rini requests to make this report public at their public mailing list u-boot@lists.denx.de.</li>
  <li>July 22, 2019 - To avoid a weekend disclosure, Fermin makes the report public at u-boot@lists.denx.de.</li>
</ul>

    </main>
  </div>



  <footer class="sc-dVhcbM cBEMHy footer mt-6">
  <div class="container-xl p-responsive">
    <div class="d-flex flex-wrap py-5 mb-5">
      <div class="col-12 col-lg-4 mb-5">
        <a href="https://github.com/" data-ga-click="Footer, go to home, text:home" class="text-gray-dark" aria-label="Go to GitHub homepage">
          <svg height="30" class="octicon octicon-logo-github" viewBox="0 0 45 16" version="1.1" width="84" aria-hidden="true">
            <path fill-rule="evenodd" d="M18.53 12.03h-.02c.009 0 .015.01.024.011h.006l-.01-.01zm.004.011c-.093.001-.327.05-.574.05-.78 0-1.05-.36-1.05-.83V8.13h1.59c.09 0 .16-.08.16-.19v-1.7c0-.09-.08-.17-.16-.17h-1.59V3.96c0-.08-.05-.13-.14-.13h-2.16c-.09 0-.14.05-.14.13v2.17s-1.09.27-1.16.28c-.08.02-.13.09-.13.17v1.36c0 .11.08.19.17.19h1.11v3.28c0 2.44 1.7 2.69 2.86 2.69.53 0 1.17-.17 1.27-.22.06-.02.09-.09.09-.16v-1.5a.177.177 0 00-.146-.18zM42.23 9.84c0-1.81-.73-2.05-1.5-1.97-.6.04-1.08.34-1.08.34v3.52s.49.34 1.22.36c1.03.03 1.36-.34 1.36-2.25zm2.43-.16c0 3.43-1.11 4.41-3.05 4.41-1.64 0-2.52-.83-2.52-.83s-.04.46-.09.52c-.03.06-.08.08-.14.08h-1.48c-.1 0-.19-.08-.19-.17l.02-11.11c0-.09.08-.17.17-.17h2.13c.09 0 .17.08.17.17v3.77s.82-.53 2.02-.53l-.01-.02c1.2 0 2.97.45 2.97 3.88zm-8.72-3.61h-2.1c-.11 0-.17.08-.17.19v5.44s-.55.39-1.3.39-.97-.34-.97-1.09V6.25c0-.09-.08-.17-.17-.17h-2.14c-.09 0-.17.08-.17.17v5.11c0 2.2 1.23 2.75 2.92 2.75 1.39 0 2.52-.77 2.52-.77s.05.39.08.45c.02.05.09.09.16.09h1.34c.11 0 .17-.08.17-.17l.02-7.47c0-.09-.08-.17-.19-.17zm-23.7-.01h-2.13c-.09 0-.17.09-.17.2v7.34c0 .2.13.27.3.27h1.92c.2 0 .25-.09.25-.27V6.23c0-.09-.08-.17-.17-.17zm-1.05-3.38c-.77 0-1.38.61-1.38 1.38 0 .77.61 1.38 1.38 1.38.75 0 1.36-.61 1.36-1.38 0-.77-.61-1.38-1.36-1.38zm16.49-.25h-2.11c-.09 0-.17.08-.17.17v4.09h-3.31V2.6c0-.09-.08-.17-.17-.17h-2.13c-.09 0-.17.08-.17.17v11.11c0 .09.09.17.17.17h2.13c.09 0 .17-.08.17-.17V8.96h3.31l-.02 4.75c0 .09.08.17.17.17h2.13c.09 0 .17-.08.17-.17V2.6c0-.09-.08-.17-.17-.17zM8.81 7.35v5.74c0 .04-.01.11-.06.13 0 0-1.25.89-3.31.89-2.49 0-5.44-.78-5.44-5.92S2.58 1.99 5.1 2c2.18 0 3.06.49 3.2.58.04.05.06.09.06.14L7.94 4.5c0 .09-.09.2-.2.17-.36-.11-.9-.33-2.17-.33-1.47 0-3.05.42-3.05 3.73s1.5 3.7 2.58 3.7c.92 0 1.25-.11 1.25-.11v-2.3H4.88c-.11 0-.19-.08-.19-.17V7.35c0-.09.08-.17.19-.17h3.74c.11 0 .19.08.19.17z"></path>
          </svg>
        </a>
      </div>
      <div class="col-6 col-sm-3 col-lg-2 mb-6 mb-md-2 pr-3 pr-lg-0 pl-lg-4">
        <h2 class="h5 mb-3 text-mono text-gray-light text-normal">Product</h2>
        <ul class="list-style-none text-gray f5">
          <li class="lh-condensed mb-3"><a href="https://github.com/features" data-ga-click="Footer, go to features, text:features" class="link-gray">Features</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security" class="link-gray">Security</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.com/enterprise" data-ga-click="Footer, go to enterprise, text:enterprise" class="link-gray">Enterprise</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.com/customer-stories?type=enterprise" data-ga-click="Footer, go to customer stories, text:customer stories" class="link-gray">Customer stories</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.com/pricing" data-ga-click="Footer, go to pricing, text:pricing" class="link-gray">Pricing</a></li>
          <li class="lh-condensed mb-3"><a href="https://resources.github.com" data-ga-click="Footer, go to resources, text:resources" class="link-gray">Resources</a></li>
        </ul>
      </div>
      <div class="col-6 col-sm-3 col-lg-2 mb-6 mb-md-2 pr-3 pr-md-0 pl-md-4">
        <h2 class="h5 mb-3 text-mono text-gray-light text-normal">Platform</h2>
        <ul class="list-style-none f5">
          <li class="lh-condensed mb-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api" class="link-gray">Developer API</a></li>
          <li class="lh-condensed mb-3"><a href="http://partner.github.com/" data-ga-click="Footer, go to partner, text:partner" class="link-gray ">Partners</a></li>
          <li class="lh-condensed mb-3"><a href="https://atom.io" data-ga-click="Footer, go to atom, text:atom" class="link-gray ">Atom</a></li>
          <li class="lh-condensed mb-3"><a href="http://electron.atom.io/" data-ga-click="Footer, go to electron, text:electron" class="link-gray ">Electron</a></li>
          <li class="lh-condensed mb-3"><a href="https://desktop.github.com/" data-ga-click="Footer, go to desktop, text:desktop" class="link-gray ">GitHub Desktop</a></li>
        </ul>
      </div>
      <div class="col-6 col-sm-3 col-lg-2 mb-6 mb-md-2 pr-3 pr-md-0 pl-md-4">
        <h2 class="h5 mb-3 text-mono text-gray-light text-normal">Support</h2>
        <ul class="list-style-none f5">
          <li class="lh-condensed mb-3"><a data-ga-click="Footer, go to help, text:docs" class="link-gray " href="https://docs.github.com">Docs</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.community" data-ga-click="Footer, go to community, text:community" class="link-gray ">Community Forum</a></li>
          <li class="lh-condensed mb-3"><a href="https://services.github.com/" data-ga-click="Footer, go to professional services, text:professional services" class="link-gray ">Professional Services</a></li>
          <li class="lh-condensed mb-3"><a href="https://lab.github.com/" data-ga-click="Footer, go to learning lab, text:learning lab" class="link-gray ">Learning Lab</a></li>
          <li class="lh-condensed mb-3"><a href="https://githubstatus.com/" data-ga-click="Footer, go to status, text:status" class="link-gray ">Status</a></li>
          <li class="lh-condensed mb-3"><a data-ga-click="Footer, go to contact, text:contact" class="link-gray " href="https://support.github.com">Contact GitHub</a></li>
        </ul>
      </div>
      <div class="col-6 col-sm-3 col-lg-2 mb-6 mb-md-2 pr-3 pr-md-0 pl-md-4">
        <h2 class="h5 mb-3 text-mono text-gray-light text-normal">Company</h2>
        <ul class="list-style-none f5">
          <li class="lh-condensed mb-3"><a data-ga-click="Footer, go to about, text:about" class="link-gray " href="https://github.com/about">About</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.blog" data-ga-click="Footer, go to blog, text:blog" class="link-gray">Blog</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.com/about/careers" data-ga-click="Footer, go to careers, text:careers" class="link-gray">Careers</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.com/about/press" data-ga-click="Footer, go to press, text:press" class="link-gray">Press</a></li>
          <li class="lh-condensed mb-3"><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop" class="link-gray">Shop</a></li>
        </ul>
      </div>
    </div>
  </div>
  <div class="bg-gray-light">
    <div class="container-xl p-responsive f6 py-4 d-sm-flex flex-justify-between flex-row-reverse flex-items-center">
      <ul class="list-style-none d-flex flex-items-center mb-3 mb-sm-0 lh-condensed-ultra social-icons">
        <li class="mr-3">
          <a href="https://twitter.com/github" data-ga-click="Footer, go to Twitter, text:twitter" title="GitHub on Twitter">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 273.5 222.3" class="d-block" height="18">
              <path d="M273.5 26.3a109.77 109.77 0 0 1-32.2 8.8 56.07 56.07 0 0 0 24.7-31 113.39 113.39 0 0 1-35.7 13.6 56.1 56.1 0 0 0-97 38.4 54 54 0 0 0 1.5 12.8A159.68 159.68 0 0 1 19.1 10.3a56.12 56.12 0 0 0 17.4 74.9 56.06 56.06 0 0 1-25.4-7v.7a56.11 56.11 0 0 0 45 55 55.65 55.65 0 0 1-14.8 2 62.39 62.39 0 0 1-10.6-1 56.24 56.24 0 0 0 52.4 39 112.87 112.87 0 0 1-69.7 24 119 119 0 0 1-13.4-.8 158.83 158.83 0 0 0 86 25.2c103.2 0 159.6-85.5 159.6-159.6 0-2.4-.1-4.9-.2-7.3a114.25 114.25 0 0 0 28.1-29.1" fill="currentColor"></path>
            </svg>
          </a>
        </li>
        <li class="mr-3">
          <a href="https://www.facebook.com/GitHub" data-ga-click="Footer, go to Facebook, text:facebook" title="GitHub on Facebook">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15.3 15.4" class="d-block" height="18">
              <path d="M14.5 0H.8a.88.88 0 0 0-.8.9v13.6a.88.88 0 0 0 .8.9h7.3v-6h-2V7.1h2V5.4a2.87 2.87 0 0 1 2.5-3.1h.5a10.87 10.87 0 0 1 1.8.1v2.1h-1.3c-1 0-1.1.5-1.1 1.1v1.5h2.3l-.3 2.3h-2v5.9h3.9a.88.88 0 0 0 .9-.8V.8a.86.86 0 0 0-.8-.8z" fill="currentColor"></path>
            </svg>
          </a>
        </li>
        <li class="mr-3">
          <a href="https://www.youtube.com/github" data-ga-click="Footer, go to YouTube, text:youtube" title="GitHub on YouTube">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 19.17 13.6" class="d-block" height="16">
              <path d="M18.77 2.13A2.4 2.4 0 0 0 17.09.42C15.59 0 9.58 0 9.58 0a57.55 57.55 0 0 0-7.5.4A2.49 2.49 0 0 0 .39 2.13 26.27 26.27 0 0 0 0 6.8a26.15 26.15 0 0 0 .39 4.67 2.43 2.43 0 0 0 1.69 1.71c1.52.42 7.5.42 7.5.42a57.69 57.69 0 0 0 7.51-.4 2.4 2.4 0 0 0 1.68-1.71 25.63 25.63 0 0 0 .4-4.67 24 24 0 0 0-.4-4.69zM7.67 9.71V3.89l5 2.91z" fill="currentColor"></path>
            </svg>
          </a>
        </li>
        <li class="mr-3 flex-self-start">
          <a href="https://www.linkedin.com/company/github" data-ga-click="Footer, go to Linkedin, text:linkedin" title="GitHub on Linkedin">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 19 18" class="d-block" height="18">
              <path d="M3.94 2A2 2 0 1 1 2 0a2 2 0 0 1 1.94 2zM4 5.48H0V18h4zm6.32 0H6.34V18h3.94v-6.57c0-3.66 4.77-4 4.77 0V18H19v-7.93c0-6.17-7.06-5.94-8.72-2.91z" fill="currentColor"></path>
            </svg>
          </a>
        </li>
        <li>
          <a href="https://github.com/github" data-ga-click="Footer, go to github's org, text:github" title="GitHub's organization">
            <svg height="20" class="octicon octicon-mark-github d-block" viewBox="0 0 16 16" version="1.1" width="20" aria-hidden="true">
              <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
            </svg>
          </a>
        </li>
      </ul>
      <ul class="list-style-none d-flex text-gray">
        <li class="mr-3">
          © <!-- -->2021<!-- --> GitHub, Inc.
        </li>
        <li class="mr-3"><a href="https://docs.github.com/en/github/site-policy/github-terms-of-service" data-ga-click="Footer, go to terms, text:terms" class="link-gray">Terms</a></li>
        <li class="mr-3"><a href="https://docs.github.com/en/github/site-policy/github-privacy-statement" data-ga-click="Footer, go to privacy, text:privacy" class="link-gray">Privacy</a></li>
        <li><a href="#" class="link-gray">Cookie settings</a></li>
      </ul>
    </div>
  </div>
</footer>


  <!-- JAVASCRIPT -->
  <script src="/assets/js/main.js"></script>
</body>
</html>
