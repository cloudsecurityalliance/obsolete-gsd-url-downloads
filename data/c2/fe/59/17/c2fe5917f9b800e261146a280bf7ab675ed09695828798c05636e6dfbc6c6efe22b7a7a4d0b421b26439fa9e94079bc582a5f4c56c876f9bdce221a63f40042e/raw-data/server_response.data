<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <meta name="viewport" content="width=device-width">

        <title>BigBlueButton : Privacy</title>
        <meta name="description" content="Open Source Web Conferencing">

		<link href="https://fonts.googleapis.com/css?family=Roboto:400,400i,700,700i&display=swap" rel="stylesheet">
        <link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.no-icons.min.css" rel="stylesheet">
        <link rel="stylesheet" href="/css/syntax.css">
        <link rel="stylesheet" href="/css/main.css">
        <link rel="stylesheet" href="/css/anchor.css">

	<script src="/js/anchor.js"></script>
<script>
 addAnchors('h1, h2, h3');
</script>

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
        <script src="/js/jquery.toc.min.js"></script>
    </head>
    <body>

        <div class="container">
            <div class=row-fluid>
                <div id=header class=span12>
                    <h4><a class=brand href="/">BigBlueButton</a>
     &#8278; <small>Open Source Web Conferencing</small>
</h4>


                </div>
            </div>

            <div class=row-fluid>
                
                
                    <div id=navigation class=span2>
                        <ul class="nav nav-list">
    <li><a href="/">Home</a></li>
    
        
        

        
    
        
        

        
            
                <li class=nav-header>2.3 Latest Version</li>
            
            <li data-order="6"><a href="/2.3/release-tests.html">Testing a release</a></li>
        
            
            <li data-order="3"><a href="/2.3/dev.html">Development</a></li>
        
            
            <li data-order="1"><a href="/2.3/new.html">What's New</a></li>
        
            
            <li data-order="2"><a href="/2.3/install.html">Install</a></li>
        
            
            <li data-order="4"><a href="/2.3/architecture.html">Architecture</a></li>
        
            
            <li data-order=""><a href="/2.3/html5-tests.html">HTML5 Tests</a></li>
        
            
            <li data-order="9"><a href="/2.3/html5-accessibility.html">Accessibility</a></li>
        
    
        
        

        
            
                <li class=nav-header>Develop</li>
            
            <li data-order="7"><a href="/dev/design.html">Design</a></li>
        
            
            <li data-order=""><a href="/dev/webhooks.html">WebHooks</a></li>
        
            
            <li data-order=""><a href="/dev/localization.html">Localization</a></li>
        
            
            <li data-order=""><a href="/dev/api.html">API</a></li>
        
            
            <li data-order=""><a href="/dev/recording.html">Recording</a></li>
        
    
        
        

        
            
                <li class=nav-header>Administration</li>
            
            <li data-order=""><a href="/admin/monitoring.html">Monitoring</a></li>
        
            
            <li data-order=""><a href="/admin/privacy.html">Privacy</a></li>
        
            
            <li data-order="4"><a href="/admin/setup-turn-server.html">Configure TURN</a></li>
        
            
            <li data-order="3"><a href="/admin/customize.html">Customize</a></li>
        
            
            <li data-order="5"><a href="/admin/configure-firewall.html">Configure Firewall</a></li>
        
            
            <li data-order=""><a href="/admin/bbb-conf.html">bbb-conf</a></li>
        
            
            <li data-order="11"><a href="/admin/lti.html">LTI</a></li>
        
            
            <li data-order=""><a href="/admin/configuration-files.html">Configuration Files</a></li>
        
    
        
        

        
            
                <li class=nav-header>Greenlight</li>
            
            <li data-order=""><a href="/greenlight/gl-overview.html">Overview</a></li>
        
            
            <li data-order=""><a href="/greenlight/gl-install.html">Install</a></li>
        
            
            <li data-order=""><a href="/greenlight/gl-customize.html">Customize</a></li>
        
            
            <li data-order=""><a href="/greenlight/gl-config.html">Configure</a></li>
        
            
            <li data-order=""><a href="/greenlight/gl-admin.html">Admin</a></li>
        
    
        
        

        
            
                <li class=nav-header>2.4 Under Development</li>
            
            <li data-order="2"><a href="/2.4/install.html">Install</a></li>
        
            
            <li data-order="3"><a href="/2.4/dev.html">Development</a></li>
        
            
            <li data-order="6"><a href="/2.4/release-tests.html">Testing a release</a></li>
        
            
            <li data-order="1"><a href="/2.4/new.html">What's New</a></li>
        
    
        
        

        
            
                <li class=nav-header>Support</li>
            
            <li data-order="2"><a href="/support/getting-help.html">Getting help</a></li>
        
            
            <li data-order="10"><a href="/support/troubleshooting.html">Troubleshooting</a></li>
        
            
            <li data-order=""><a href="/support/road-map.html">Road Map</a></li>
        
            
            <li data-order=""><a href="/support/faq.html">FAQ</a></li>
        
            
            <li data-order=""><a href="/support/release-notes.html">Release Notes</a></li>
        
    
        
        

        
    
        
        

        
            
                <li class=nav-header>2.2 Legacy</li>
            
            <li data-order="1"><a href="/2.2/install.html">Install</a></li>
        
            
            <li data-order="2"><a href="/2.2/dev.html">Development</a></li>
        
            
            <li data-order=""><a href="/2.2/html5-tests.html">HTML5 Tests</a></li>
        
            
            <li data-order="3"><a href="/2.2/architecture.html">Architecture</a></li>
        
            
            <li data-order="9"><a href="/2.2/html5-accessibility.html">Accessibility</a></li>
        
    
        
        

        
    
        
        

        
    
        
        

        
    
        
        

        
    
        
        

        
    
        
        

        
    
        
        

        
    
<!-- List additional links. It is recommended to add a divider
    e.g. <li class=divider></li> first to break up the content. -->
</ul>

                    </div>

                    <div id=content class=span10>
                        <div class=page-header>
    <h2>Privacy
        
    </h2>
</div>

<ul data-toc></ul>
<h1 id="overview">Overview</h1>

<p>In many countries there exist regulation of data protection. For operators of BigBlueButton services, especially private data protection regulations are an important topic.
In the European Union the relevant regulation is the <a href="https://en.wikipedia.org/wiki/General_Data_Protection_Regulation">General Data Protection Regulation (GDPR)</a>. Many other countries also adopted similar regulations (for example the <a href="https://en.wikipedia.org/wiki/California_Consumer_Privacy_Act">California Consumer Privacy Act (CCPA)</a> in California USA or the <a href="https://pt.wikipedia.org/wiki/Lei_Geral_de_Prote%C3%A7%C3%A3o_de_Dados_Pessoais">Lei Geral de Proteção de Dados (LGPD)</a> in Brazil) and some of these regulation even have to be complied with outside of these countries under certain conditions. The following documentation is supposed to help understand where private data gets processed and stored in a typical setup of BigBlueButton, and what configuration options there are.</p>

<p>Disclaimer: the following documentation is neither legal advice, nor complete. This is work-in-progress.</p>

<h1 id="bigbluebutton">BigBlueButton</h1>

<p>This section documents privacy related settings, defaults, and configuration options in BigBlueButton itself. Keep in mind that your configration changes here may be silently overwritten upon upgrades via apt, see <a href="https://github.com/bigbluebutton/bigbluebutton/issues/9111">https://github.com/bigbluebutton/bigbluebutton/issues/9111</a>
To prevent this, make sure to use the <a href="http://docs.bigbluebutton.org/admin/customize.html#automatically-apply-configuration-changes-on-restart"><code class="language-plaintext highlighter-rouge">apply-config.sh</code> script</a> to ensure changes are retained upon upgrades and restarts.</p>

<h2 id="recordings">Recordings</h2>

<h3 id="bigbluebutton-either-records-all-of-a-session-or-does-not-record-at-all">BigBlueButton either records all of a session or does not record at all</h3>

<p>When a room is created in BigBlueButton that allows recordings (i.e., the recording button is visible) BigBlueButton will record the entire session. This is independent of the recording-button actually being pressed or not. The technical reason behind this is that parts of the recordings (esp. the SVG files for the Whiteboard) depend on earlier state to be properly processed, see: <a href="https://docs.bigbluebutton.org/dev/recording.html">https://docs.bigbluebutton.org/dev/recording.html</a>
By default these files are stored for two weeks (see ‘Retention of Cache Files’ below). Furthermore, depending on the use-case and jurisdiction it might be prudent to retain the
option to create ‘retroactive’ recordings, e.g., when users forgot to click the recording button.</p>

<p>If the frontend (which uses the BigBlueButton API to create/start a room) specifies <code class="language-plaintext highlighter-rouge">record=true</code>, the entire session will be recorded, unless recording is disabled for all rooms in BigBlueButton. If the frontend specifies <code class="language-plaintext highlighter-rouge">record=false</code> or does not specify this parameter, then the session will not be recorded and the “start”/”stop” recording button will not be available during the session.</p>

<h4 id="resolution">Resolution</h4>

<p>Operators have at least these two options for handling this:</p>

<h5 id="globally-disable-recordings-in-bigbluebutton">Globally disable recordings in BigBlueButton</h5>

<p>Server operators can change <code class="language-plaintext highlighter-rouge">/usr/share/bbb-web/WEB-INF/classes/bigbluebutton.properties</code> and change <code class="language-plaintext highlighter-rouge">disableRecordingDefault=false</code> to <code class="language-plaintext highlighter-rouge">disableRecordingDefault=true</code> for globally disabling recordings. Furthermore, recording of breakout rooms should be disabled by setting <code class="language-plaintext highlighter-rouge">breakoutRoomsRecord=false</code>. In general, this is an advisable idea (independently of <code class="language-plaintext highlighter-rouge">disableRecordingDefault=true</code>, because break-out rooms might imply a certain level of privacy for typical users.</p>

<h5 id="post-recording-script-to-remove-recordings-without-any-recording-markers">Post-recording script to remove recordings without any recording markers</h5>

<p>Server operators can deploy a custom script which purges recordings and cache-files of recordings for which no recording markers were created.</p>

<p>Simple version:
<code class="language-plaintext highlighter-rouge">/etc/sudoers:</code><br />
<code class="language-plaintext highlighter-rouge">bigbluebutton ALL = NOPASSWD: /usr/bin/bbb-record</code></p>

<p>and</p>

<p><code class="language-plaintext highlighter-rouge">/usr/local/bigbluebutton/core/scripts/archive/archive.rb (after line 242):</code><br />
` BigBlueButton.logger.info(“There are no recording marks for #{meeting_id}, deleting the recording.”)<code class="language-plaintext highlighter-rouge">  
</code> system(‘sudo’, ‘bbb-record’, ‘–delete’, “#{meeting_id}”) || raise(‘Failed to delete local recording’)`</p>

<p>For a more complete version that also explicitly deletes cache files of recordings for freeswitch/kurento, please see:
<a href="https://github.com/Kalagon/bbb-recording-archive-workaround">https://github.com/Kalagon/bbb-recording-archive-workaround</a></p>

<h3 id="bigbluebutton-stores-presentations-uploaded-during-sessions">BigBlueButton stores presentations uploaded during sessions</h3>

<p>BigBlueButton stores the presentations of sessions in <code class="language-plaintext highlighter-rouge">/var/bigbluebutton</code> even if the room is started with record=false.</p>

<h4 id="resolution-1">Resolution</h4>

<p>Unknown, unclear which post-recording actions are triggered if no recording is created.
TODO: add some best practices here</p>

<h3 id="bigbluebutton-stores-full-raw-recording-data">BigBlueButton stores full raw recording data</h3>

<p>BigBlueButton stores the raw recording data for meetings that have recording markers indefinitely. This includes parts of the session where the presenter/moderator did not yet click the recording button.</p>

<h4 id="resolution-2">Resolution</h4>

<p>This can be resolved by deleting raw recording data after a meeting has been successfully archived. For deployments using scalelite, this can be achieved by the following changes:</p>

<p><code class="language-plaintext highlighter-rouge">/etc/sudoers:</code><br />
<code class="language-plaintext highlighter-rouge">bigbluebutton ALL = NOPASSWD: /usr/bin/bbb-record</code></p>

<p><code class="language-plaintext highlighter-rouge">/usr/local/bigbluebutton/core/scripts/post_publish/scalelite_post_publish.rb</code>, after line 66:<br />
<code class="language-plaintext highlighter-rouge">system('sudo', 'bbb-record', '--delete', "#{meeting_id}") || raise('Failed to delete local recording')</code></p>

<p>For other deployments, removal of <code class="language-plaintext highlighter-rouge">/var/bigbluebutton/recording/raw/$meeting/</code> should be added to the post-archive script.</p>

<p>This data can also be removed periodically, see <code class="language-plaintext highlighter-rouge">Retention of cache files</code></p>

<h3 id="all-recordings-are-always-accessible">All recordings are always accessible</h3>

<p>By default, BigBlueButton recordings are accessible, see e.g., <a href="https://github.com/bigbluebutton/bigbluebutton/issues/8505">https://github.com/bigbluebutton/bigbluebutton/issues/8505</a></p>

<p>Additionally, the URLs for recordings are easily enumerable, see <a href="https://github.com/bigbluebutton/greenlight/issues/1466">https://github.com/bigbluebutton/greenlight/issues/1466</a> and <a href="https://github.com/bigbluebutton/bigbluebutton/issues/9443">https://github.com/bigbluebutton/bigbluebutton/issues/9443</a></p>

<h4 id="resolution-3">Resolution</h4>

<p>Server administrators can change the nginx configuration to restrict access to the recording URLs. Depending on the use-case, the auth statement in nginx can interact with the used frontend to enforce further restrictions (e.g., requesting the same credentials as the frontend). For example configuration options and an authentication callback to a Greenlight frontend, see: <a href="https://github.com/ichdasich/bbb-rec-perm">https://github.com/ichdasich/bbb-rec-perm</a></p>

<h3 id="cache-files">Cache files</h3>

<p>The stack of BigBlueButton creates various cache files when recordings are enabled.
Specifically in:</p>

<p><code class="language-plaintext highlighter-rouge">/var/bigbluebutton/recording/raw/</code><br />
<code class="language-plaintext highlighter-rouge">/var/bigbluebutton/unpublished/</code><br />
<code class="language-plaintext highlighter-rouge">/var/bigbluebutton/published/presentation/</code><br />
<code class="language-plaintext highlighter-rouge">/usr/share/red5/webapps/video/streams/</code><br />
<code class="language-plaintext highlighter-rouge">/usr/share/red5/webapps/screenshare/streams/</code><br />
<code class="language-plaintext highlighter-rouge">/usr/share/red5/webapps/video-broadcast/streams/</code><br />
<code class="language-plaintext highlighter-rouge">/var/kurento/recordings/</code><br />
<code class="language-plaintext highlighter-rouge">/var/kurento/screenshare/</code><br />
<code class="language-plaintext highlighter-rouge">/var/freeswitch/meetings/</code></p>

<h4 id="resolution-4">Resolution</h4>

<p>For automatically cleaning up these files after recordings, see <code class="language-plaintext highlighter-rouge">BigBlueButton always records when recording of a room is enabled</code>. In addition, to prevent this data to be written to disk, these files can be mounted with tmpfs to keep recording caches in-memory.
For this, the following lines have to be added to <code class="language-plaintext highlighter-rouge">/etc/fstab</code>:</p>

<p><code class="language-plaintext highlighter-rouge">tmpfs /var/bigbluebutton/recording/raw/ tmpfs rw,nosuid,noatime,uid=998,gid=998,size=16G,mode=0755 0 0</code><br />
<code class="language-plaintext highlighter-rouge">tmpfs /var/bigbluebutton/unpublished/ tmpfs rw,nosuid,noatime,uid=998,gid=998,size=16G,mode=0755 0 0</code><br />
<code class="language-plaintext highlighter-rouge">tmpfs /var/bigbluebutton/published/presentation/ tmpfs rw,nosuid,noatime,uid=998,gid=998,size=16G,mode=0755 0 0</code><br />
<code class="language-plaintext highlighter-rouge">tmpfs /usr/share/red5/webapps/video/streams/ tmpfs rw,nosuid,noatime,uid=999,gid=999,size=16G,mode=0755 0 0</code><br />
<code class="language-plaintext highlighter-rouge">tmpfs /usr/share/red5/webapps/screenshare/streams/ tmpfs rw,nosuid,noatime,uid=999,gid=999,size=16G,mode=0755 0 0</code><br />
<code class="language-plaintext highlighter-rouge">tmpfs /usr/share/red5/webapps/video-broadcast/streams/ tmpfs rw,nosuid,noatime,uid=999,gid=999,size=16G,mode=0755 0 0</code><br />
<code class="language-plaintext highlighter-rouge">tmpfs /var/kurento/recordings/ tmpfs rw,nosuid,noatime,uid=996,gid=996,size=16G,mode=0755 0 0</code><br />
<code class="language-plaintext highlighter-rouge">tmpfs /var/kurento/screenshare/ tmpfs rw,nosuid,noatime,uid=996,gid=996,size=16G,mode=0755 0 0</code><br />
<code class="language-plaintext highlighter-rouge">tmpfs /var/freeswitch/meetings/ tmpfs rw,nosuid,noatime,uid=997,gid=997,size=16G,mode=0755 0 0</code></p>

<p>After applying that, the server administrator has to execute <code class="language-plaintext highlighter-rouge">bbb-conf --stop; mount -a; bbb-conf --start</code>.</p>

<p>Furthermore, the uid/gid values have to be adjusted to the local installation.
The above example assumes:</p>

<p><code class="language-plaintext highlighter-rouge">red5:x:999:999:red5 user-daemon:/usr/share/red5:/bin/false</code><br />
<code class="language-plaintext highlighter-rouge">bigbluebutton:x:998:998:bigbluebutton:/home/bigbluebutton:/bin/false</code><br />
<code class="language-plaintext highlighter-rouge">freeswitch:x:997:997:freeswitch:/opt/freeswitch:/bin/bash</code><br />
<code class="language-plaintext highlighter-rouge">kurento:x:996:996::/var/lib/kurento:</code></p>

<p>TODO: explain what these uid/gid values are and how to get the correct ones</p>

<h3 id="retention-of-cache-files">Retention of cache files</h3>

<p>BigBlueButton retains various cache and log files. The general retention period for these files can be configured in <code class="language-plaintext highlighter-rouge">/etc/cron.daily/bigbluebutton</code>.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">history</code> is the retention period for presentations, red5 caches, kurento caches, and freeswitch caches in days</li>
  <li><code class="language-plaintext highlighter-rouge">unrecorded_days</code> the retention periods of recordings for meetings which have no recording markers set (user expectation: Were not recorded)</li>
  <li><code class="language-plaintext highlighter-rouge">publised_days</code> the retention period of recordings’ raw data, if these got published. To enable this, the line <code class="language-plaintext highlighter-rouge">#remove_raw_of_published_recordings</code> also has to be uncommented</li>
</ul>

<p>For directly deleting these caches, please see
‘Post-recording script to remove recordings without any recording markers’</p>

<h2 id="logs">Logs</h2>

<h3 id="general-log-rotation">General log rotation</h3>

<p>If server operators opt to keep recording files and logs, they should know and change:</p>

<ul>
  <li>the duration for which to keep the recording files in <code class="language-plaintext highlighter-rouge">/etc/cron.daily/bigluebutton</code>, using the <code class="language-plaintext highlighter-rouge">log_history</code> setting</li>
  <li>the logrotate settings in <code class="language-plaintext highlighter-rouge">/etc/logrotate.d/(bbb-record-core.logrotate|bbb-webrtc-sfu.logrotate)</code> which rotate logs in <code class="language-plaintext highlighter-rouge">/var/log/bbb-webrtc-sfu/</code> every 7 days, and <code class="language-plaintext highlighter-rouge">/var/log/bigbluebutton/(bbb-rap-worker.log|sanity.log)</code> every 8 days</li>
  <li>the logrotate settings in <code class="language-plaintext highlighter-rouge">/usr/share/bbb-web/WEB-INF/classes/logback.xml</code> which rotate logs at <code class="language-plaintext highlighter-rouge">/var/log/bigbluebutton/bbb-web.log</code> daily and keep them for 14 days</li>
</ul>

<h3 id="bigbluebutton-logging">BigBlueButton logging</h3>

<p>BigBlueButton logs all interactions with rooms, i.e., when they were created, who joined when, and when they left in <code class="language-plaintext highlighter-rouge">/var/log/bigbluebutton/bbb-web.log</code></p>

<p>The log verbosity of the core application can be reduced by setting
<code class="language-plaintext highlighter-rouge">appLogLevel=Error</code> in
<code class="language-plaintext highlighter-rouge">/usr/share/bbb-web/WEB-INF/classes/bigbluebutton.properties</code>
and by adjusting the individual settings in <code class="language-plaintext highlighter-rouge">/usr/share/bbb-web/WEB-INF/classes/logback.xml</code>.</p>

<p>To avoid logging ip-addresses in bbb-webrtc-sfu, set
<code class="language-plaintext highlighter-rouge">level: error</code> in
<code class="language-plaintext highlighter-rouge">/usr/local/bigbluebutton/bbb-webrtc-sfu/config/default.yml</code>.</p>

<p>Also these files contain log levels regarding chat usage and chat messages:</p>

<ul>
  <li>/etc/bbb-transcode-akka/application.conf and /etc/bbb-transcode-akka/logback.xml</li>
  <li>/etc/bbb-apps-akka/application.conf and /etc/bbb-apps-akka/logback.xml</li>
</ul>

<h3 id="nginx">nginx</h3>

<p>By default BigBlueButton has “full access logs” enabled for nginx. This includes users IP addresses, usernames, joined meetings, etc.
This can be disable by switching the loglevel to ‘ERROR’ only in <code class="language-plaintext highlighter-rouge">/etc/nginx/sites-available/bigbluebutton</code> and <code class="language-plaintext highlighter-rouge">/etc/nginx/nginx.conf</code>:</p>

<p><code class="language-plaintext highlighter-rouge">error_log /var/log/nginx/bigbluebutton.error.log;</code><br />
<code class="language-plaintext highlighter-rouge">access_log /dev/null;</code></p>

<h3 id="freeswitch">freeswitch</h3>

<p>The default installation of FreeSWITCH by default logs with loglevel DEBUG. This can be changed in <code class="language-plaintext highlighter-rouge">/etc/bbb-fsesl-akka/application.conf</code> and <code class="language-plaintext highlighter-rouge">/etc/bbb-fsesl-akka/logback.xml</code>. The default configuration stores usernames, joined sessions and timestamps.</p>

<h3 id="red5">red5</h3>

<p>Red5 seems to only log meeting IDs and timestamps of when video feeds are started. Still it is configured for log-level ‘info’, which spills the disk. This can be adjusted in <code class="language-plaintext highlighter-rouge">/etc/red5/logback.xml</code>.</p>

<h3 id="kurento">kurento</h3>

<p>Logs session names and timestamps, as well as user IP addresses. This also includes user IP addresses behind NATs, i.e., the actual client addresses, potentially making users identifiable accross sessions. This can be configured in <code class="language-plaintext highlighter-rouge">/etc/default/kurento-media-server</code>, see <a href="https://doc-kurento.readthedocs.io/en/latest/features/logging.html">https://doc-kurento.readthedocs.io/en/latest/features/logging.html</a></p>

<p>Note that this can most likely be overridden by kurento’s systemd unit file. Hence, <code class="language-plaintext highlighter-rouge">--gst-debug-level=1</code> should also be set in <code class="language-plaintext highlighter-rouge">/usr/lib/systemd/system/kurento-media-server.service</code>.</p>

<h2 id="integrations">Integrations</h2>

<h3 id="turn-server">TURN server</h3>

<p>BigBlueButton uses a TURN server for NAT traversal. By default, a STUN server from freeswitch.org is configured for BigBlueButton. Set up your own TURN/STUN server, and configure it in <code class="language-plaintext highlighter-rouge">/usr/share/bbb-web/WEB-INF/classes/spring/turn-stun-servers.xml</code>, see <a href="https://docs.bigbluebutton.org/2.2/setup-turn-server.html">https://docs.bigbluebutton.org/2.2/setup-turn-server.html</a></p>

<h3 id="sipjs">sip.js</h3>

<p>There is a hardcoded google STUN server in <code class="language-plaintext highlighter-rouge">/usr/share/meteor/bundle/programs/web.browser/app/compatibility/sip.js</code>.
However, this should not be a problem because the hardcoded STUN server will not be used: a failed <code class="language-plaintext highlighter-rouge">GET</code> of the TURN/STUN settings in BBB-web should return an empty array, overwriting this setting. Nonetheless, careful server administrators may want to replace this default.</p>

<h3 id="hardcoded-google-stun-server-for-kurento">Hardcoded Google STUN server for kurento</h3>

<p>On the server, Kurento uses a Google STUN server to identify its own external IP address on each ICE connect. This can be changed in <code class="language-plaintext highlighter-rouge">/etc/kurento/modules/kurento/WebRtcEndpoint.conf.ini</code> by statically setting the IP address of the external interface and disabling the stun server if the kurento system itself does not sit behind NAT.</p>

<h3 id="kurento-client-side-defaults">Kurento client side defaults</h3>

<p>For client side kurento activities (listen only, screenshare, video) there is a public fallback STUN server pool which is used if the bbb-web GET request fails. There is work in progress on removing this default.</p>

<h1 id="greenlight">Greenlight</h1>

<h2 id="greenlight-always-starts-new-rooms-with-recordingtrue">Greenlight always starts new rooms with recording=true</h2>

<p>By default, when Greenlight creates a conference, the value ‘record=true’ is passed to BigBlueButton. These conferences will be recorded even if the record button is not pressed. See also: <a href="https://docs.bigbluebutton.org/admin/privacy.html#bigbluebutton-either-records-all-of-a-session-or-does-not-record-at-all">Recording</a></p>

<h3 id="resolution-5">Resolution</h3>

<p>You can disable the recording globally in the Greenlight room settings for everyone or optinally for everyone in their room. see: <a href="https://github.com/bigbluebutton/greenlight/pull/1296">https://github.com/bigbluebutton/greenlight/pull/1296</a> Alternatively, if necessary, completely disable the recording feature in the BigBlueButton server configuration.</p>

<h2 id="greenlight-does-not-request-consent-to-a-privacy-policy-andor-recording-of-a-session-when-joining-a-room-as-a-guest">Greenlight does not request consent to a privacy policy and/or recording of a session when joining a room as a guest.</h2>

<p>BigBlueButton has no feature that forces participants to consent to a privacy policy or being recorded prior to joining a room. Greenlight has an optional feature that you have to switch on in the basic settings: “Requires the consent of the room initiator and the participants for recording”. This gives all participants a warning text before entering the conference that this room will be recorded.</p>

<h3 id="resolution-6">Resolution</h3>

<p>In <a href="https://github.com/bigbluebutton/greenlight/issues/1163">https://github.com/bigbluebutton/greenlight/issues/1163</a> it is discussed how the required changed can be addressed.
<a href="https://github.com/bigbluebutton/greenlight/blob/52ed7150f68c6c66c0488374ccc3457d30fd09d4/app/views/rooms/components/_room_event.html.erb#L21">https://github.com/bigbluebutton/greenlight/blob/52ed7150f68c6c66c0488374ccc3457d30fd09d4/app/views/rooms/components/_room_event.html.erb#L21</a>
adds a disclaimer. The code could be extended to provide a link to the privacy policy, and a checkbox which users have to press to acknowledge that the meeting they are about to join will be recorded, and that they consent to this; The join button should only be enabled when that checkmark is set.</p>

<p>A more substantial change to BigBlueButton and Greenlight would be selective recording, i.e., excluding video, audio, chat and drawing input from users that did not consent to a recording.</p>

<h2 id="greenlight-includes-user-names-in-room-urls">Greenlight includes user-names in room URLs</h2>

<p>In Greenlight, room URLs contain the username of the owner, which might also be private data depending on local laws. Solving this depends on <a href="https://github.com/bigbluebutton/greenlight/issues/1057">https://github.com/bigbluebutton/greenlight/issues/1057</a></p>

<h2 id="terms-of-service">Terms of Service</h2>

<p>Greenlight supports displaying of terms and conditions for registered users or upon registration. See <a href="http://docs.bigbluebutton.org/greenlight/gl-config.html#adding-terms-and-conditions">http://docs.bigbluebutton.org/greenlight/gl-config.html#adding-terms-and-conditions</a></p>

<h2 id="all-recordings-are-always-accessible-1">All recordings are always accessible</h2>

<p>By default, BigBlueButton recordings are accessible, see e.g.,
<a href="https://github.com/bigbluebutton/bigbluebutton/issues/8505">https://github.com/bigbluebutton/bigbluebutton/issues/8505</a> . Additionally, the URLs for recordings are easily enumerable, see <a href="https://github.com/bigbluebutton/greenlight/issues/1466">https://github.com/bigbluebutton/greenlight/issues/1466</a> and <a href="https://github.com/bigbluebutton/bigbluebutton/issues/9443">https://github.com/bigbluebutton/bigbluebutton/issues/9443</a> .</p>

<p>Greenlight, by default provides two settings for recordings: public, i.e., the recording is listed on the room page, and unlisted, i.e., the recording is only accessible via the (enumerable) direct link.</p>

<h4 id="resolution-7">Resolution</h4>

<p>Greenlight can be patched to allow more fine-grained control of recording visibility and publications. With <a href="https://github.com/ichdasich/greenlight/tree/rec_restrictions">https://github.com/ichdasich/greenlight/tree/rec_restrictions</a> a third value is added to the recording visibility pull-down menu (public/unlisted/private), which leads to corresponding recording metadata being set (gl-listed=true/unlisted/false) in the recording either in scalelite or on the BigBlueButton host.</p>

<p><a href="https://github.com/ichdasich/bbb-rec-perm">https://github.com/ichdasich/bbb-rec-perm</a> can then be used to check requests for recordings against that metadata, returning a 403 if the recording is set to private, and returning the recording if it is set to unlisted or public.</p>

<h2 id="logs-1">Logs</h2>

<h3 id="rails-logs">Rails Logs</h3>

<p>By default, Greenlight logs to <code class="language-plaintext highlighter-rouge">$GREENLIGHTDIR/logs/production.log</code>. Removing that line from .env does keep the logs, but does not expose them to the docker host. The easiest solution is linking <code class="language-plaintext highlighter-rouge">$GREENLIGHTDIR/logs/production.log</code> to <code class="language-plaintext highlighter-rouge">/dev/null</code></p>

<h3 id="nginx-logs">nginx Logs</h3>

<p>By default Greenlight has full access logs enabled for nginx. This includes users IP addresses, usernames, joined meetings, etc. This can be disable by switching the loglevel to ‘ERROR’ only in <code class="language-plaintext highlighter-rouge">/etc/nginx/sites-available/bigbluebutton</code> and <code class="language-plaintext highlighter-rouge">/etc/nginx/nginx.conf</code>:</p>

<p><code class="language-plaintext highlighter-rouge">error_log /var/log/nginx/bigbluebutton.error.log;</code><br />
<code class="language-plaintext highlighter-rouge">access_log /dev/null;</code></p>

<h1 id="coturn">coturn</h1>

<p>By default, coturn logs to <code class="language-plaintext highlighter-rouge">/var/log/coturn.log</code>, with regular log-rotation. This logfile includes IP addresses of users using the TURN server, and the ports they use. Together with other BigBlueButton logs this enables identification of the sessions these users joined.</p>

<p>coturn has no option of restricting logging. The best option here is linking
<code class="language-plaintext highlighter-rouge">/var/log/coturn.log</code> to <code class="language-plaintext highlighter-rouge">/dev/null</code></p>

<h1 id="scalelite">scalelite</h1>

<h2 id="logs-2">Logs</h2>

<h3 id="nginx-logs-1">Nginx logs</h3>

<p>Scalelite uses a container running nginx as frontend, which accumulates standard access logs. By default scalelite has full access logs enabled for nginx. This includes users IP addresses, usernames, joined meetings, watched meetings etc. The easiest way to address this is migrating the nginx to the host, thus getting rid of Docker.</p>

<p>Then the logging can be disable by switching the loglevel to ‘ERROR’ in <code class="language-plaintext highlighter-rouge">/etc/nginx/sites-available/bigbluebutton</code> and <code class="language-plaintext highlighter-rouge">/etc/nginx/nginx.conf</code>:</p>

<p><code class="language-plaintext highlighter-rouge">error_log /var/log/nginx/bigbluebutton.error.log;</code><br />
<code class="language-plaintext highlighter-rouge">access_log /dev/null;</code></p>

<h3 id="scalelite-api-container-logs">Scalelite-API-Container logs</h3>

<p>The container of the scalelite-API-Image (blindsidenetwks/scalelite:v1-api) is also logging user activities. For example:
Who joined which meeting:</p>

<p><code class="language-plaintext highlighter-rouge">{"log":"I, [&lt;timestamp&gt;] INFO -- : [&lt;some_identifier&gt;] Redirected to https://&lt;URL&gt;/bigbluebutton/api/join?meetingID=&lt;meeting_ID&gt;\u0026fullName=&lt;name&gt;\u0026password=&lt;hashed_pw&gt;... }</code></p>

<p>With the Scalelite version 1.0.9 a rotating of the logs was implemented. These are automatically deleted after one day.</p>

<h1 id="general-gdpr-considerations">General GDPR Considerations</h1>

<p>The GDPR lists several important considerations, especially:</p>

<ul>
  <li>The right to request a (machine readable) aggregate of all private data stored</li>
  <li>The right to have all personal data be erased</li>
  <li>Purpose limitation</li>
  <li>Data minimisation</li>
  <li>Storage limitation</li>
</ul>

<p>These pose challenges in the context of BigBlueButton, especially when considering that rooms can be joined anonymously. This means that an operator may not be able to easily identify all stored private information connected to a user, even though it is consider personal/private data, e.g., webcam recordings of a room joined to as a guest with a
pseudonym.</p>

<p>For many use cases the easiest solution is to not store any private data of users at all. This includes reducing log levels or disabling logging (log to <code class="language-plaintext highlighter-rouge">/dev/null</code>), storing temporary data only im memory (tmpfs) instead of on disk, and disabling the session recording feature. Even after all this is done, the BigBlueButton server still processes all this data. Thus, usually a data processing agreement from the server hosting company is needed and also information about private data processing has to be provided to the users of the service.</p>


                    </div>
                
            </div>

            

            <div class=row-fluid>
                <div id=footer class=span12>
                    <!-- Documentation for <a href="https://github.com/bruth/jekyll-docs-template">BigBlueButton</a> -->
&copy; 2021 <a href="http://bigbluebutton.org/">BigBlueButton Inc.</a> &middot; <a href="http://bigbluebutton.org/trademark/">Trademark</a> &middot; <a href="http://bigbluebutton.org/open-source-license/">License<a/>

                </div>
            </div>
        </div>

        <script>
            function orderNav() {
                var list,
                    section,
                    header,
                    sections = [],
                    lists = {},
                    headers = {};

                var navUl = document.querySelectorAll('#navigation ul')[0],
                    navLis = document.querySelectorAll('#navigation ul li');

                if (!navUl) return;

                for (var i = 0; i < navLis.length; i++) {
                    var order, li = navLis[i];

                    if (li.classList.contains('nav-header')) {
                        section = li.textContent || li.innerText;
                        sections.push(section);
                        headers[section] = li;
                        continue;
                    }

                    if (!lists[section]) {
                        lists[section] = [];
                    }

                    order = parseFloat(li.getAttribute('data-order'))
                    lists[section].push([order, li]);
                }

                for (var i = 0; i < sections.length; i++) {
                    section = sections[i];
                    list = lists[section].sort(function(a, b) {
                        return a[0] - b[0];
                    });

                    if (header = headers[section]) {
                        navUl.appendChild(header);
                    }
                    for (var j = 0; j < list.length; j++) {
                        navUl.appendChild(list[j][1]);
                    }
                }
            }

            if (document.querySelectorAll) orderNav();
	    // addAnchors('h1, h2, h3');
        </script>
        
        <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-4901813-1', 'auto');
  ga('send', 'pageview');
</script>

        

	<script>
	$( document ).ready(function() {
  		addAnchors('h1, h2, h3');
	});
	</script>

    </body>
</html>
