<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
<title>Bug 341323 – [ENH] Verify subject of remote certificate</title>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
<link href="https://bugzilla.gnome.org/" rel="Top"/>
<link href="showdependencytree.cgi?id=341323&amp;hide_resolved=1" rel="Show" title="Dependency Tree"/>
<link href="show_bug.cgi?format=multiple&amp;id=341323" rel="Show" title="Printer-Friendly Version"/>
<link href="skins/standard/global.css" rel="alternate stylesheet" title="Classic"/><link href="js/yui/assets/skins/sam/autocomplete.css" rel="stylesheet" type="text/css"/><link href="js/yui/assets/skins/sam/calendar.css" rel="stylesheet" type="text/css"/><link href="skins/standard/global.css" rel="stylesheet" type="text/css"/><link href="skins/standard/show_bug.css" rel="stylesheet" type="text/css"/><!--[if lte IE 7]>
      


  <link href="skins/standard/IE-fixes.css" rel="stylesheet"
        type="text/css" >
<![endif]-->
<link href="skins/contrib/Gnome/global.css" rel="stylesheet" title="Gnome" type="text/css"/>
<script src="js/yui/yahoo-dom-event/yahoo-dom-event.js" type="text/javascript"></script><script src="js/yui/cookie/cookie-min.js" type="text/javascript"></script><script src="js/yui/datasource/datasource-min.js" type="text/javascript"></script><script src="js/yui/connection/connection-min.js" type="text/javascript"></script><script src="js/yui/json/json-min.js" type="text/javascript"></script><script src="js/yui/autocomplete/autocomplete-min.js" type="text/javascript"></script><script src="js/yui/calendar/calendar-min.js" type="text/javascript"></script><script src="js/global.js" type="text/javascript"></script>
<script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 50
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    'You must enter a Description for this attachment.',
                component_required:
                    'You must select a Component for this bug.',
                description_required:
                    'You must enter a Description for this bug.',
                short_desc_required:
                    'You must enter a Summary for this bug.',
                version_required:
                    'You must select a Version for this bug.'
            }
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null, 
                             "Bug 341323 – [ENH] Verify subject of remote certificate",  
                             "show_bug.cgi?id=341323" );
        document.title = "Bug 341323 – [ENH] Verify subject of remote certificate";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "Bug 341323 – [ENH] Verify subject of remote certificate", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();
    });
    // -->
    </script>
<script src="js/util.js" type="text/javascript"></script><script src="js/field.js" type="text/javascript"></script>
<link href="./search_plugin.cgi" rel="search" title="GNOME Bugzilla" type="application/opensearchdescription+xml"/>
<link href="images/favicon.ico" rel="shortcut icon"/><link href="extensions/TraceParser/web/style.css" rel="stylesheet" type="text/css"/>
</head>
<body class="bugzilla-gnome-org bz_bug bz_status_RESOLVED bz_product_NetworkManager bz_component_Wi-Fi bz_bug_341323 yui-skin-sam" onload="">
<div id="header">
<div id="banner">
</div>
<table border="0" cellpadding="0" cellspacing="0" id="titles">
<tr>
<td id="title">
<p>GNOME Bugzilla – Bug 341323</p>
</td>
<td id="subtitle">
<p class="subheader">[ENH] Verify subject of remote certificate</p>
</td>
<td id="information">
<p class="header_addl_info">Last modified: 2017-01-13 17:01:57 UTC</p>
</td>
</tr>
</table>
<table cellpadding="0" cellspacing="0" class="bz_default_hidden" id="lang_links_container"><tr><td>
</td></tr></table>
<ul class="links"><li><a href="./">Home</a></li></ul>
</div>
<div id="bugzilla-body">
<div style="margin-bottom: 50px; margin-top: 50px; padding: 40px; text-align: center; background-color: rgb(74,134,207); border: rgb(57,104,161); color: rgb(255,255,255); line-height: 300%;">After an <a href="https://wiki.gnome.org/Initiatives/DevelopmentInfrastructure" style="color: rgb(255,255,255);">evaluation</a>, GNOME has moved from Bugzilla to <a href="https://gitlab.gnome.org/" style="color: rgb(255,255,255);">GitLab</a>. <a href="https://wiki.gnome.org/GitLab" style="color: rgb(255,255,255);">Learn more about GitLab</a>. <br/><span style="background-color: #EE0000; font-size: xx-large;"><b>No new issues can be reported in GNOME Bugzilla anymore.</b></span>
<br/><span style="background-color: #EE0000; font-size: xx-large;"><b>To report an issue in a GNOME project, <a href="https://gitlab.gnome.org/GNOME" style="color: rgb(255,255,255);">go to GNOME GitLab</a></b>.</span><br/>Do <b>not</b> go to GNOME Gitlab for: <a href="https://sourceforge.net/p/bluefish/tickets" style="color: rgb(255,255,255);">Bluefish</a>, <a href="https://github.com/doxygen/doxygen/issues" style="color: rgb(255,255,255);">Doxygen</a>, <a href="https://bugs.gnucash.org/" style="color: rgb(255,255,255);">GnuCash</a>, <a href="https://gitlab.freedesktop.org/gstreamer/" style="color: rgb(255,255,255);">GStreamer</a>, <a href="https://github.com/afcowie/java-gnome/issues" style="color: rgb(255,255,255);">java-gnome</a>, <a href="https://github.com/ldtp/ldtp2/issues" style="color: rgb(255,255,255);">LDTP</a>, <a href="https://gitlab.freedesktop.org/NetworkManager/NetworkManager/issues" style="color: rgb(255,255,255);">NetworkManager</a>, <a href="https://github.com/tomboy-notes/tomboy/issues" style="color: rgb(255,255,255);">Tomboy</a>.</div>
<script type="text/javascript">
<!--

//-->
</script>
<form action="process_bug.cgi" id="changeform" method="post" name="changeform">
<input name="delta_ts" type="hidden" value="2017-01-13 17:01:57"/>
<input name="longdesclength" type="hidden" value="47"/>
<input name="id" type="hidden" value="341323"/>
<input name="token" type="hidden" value="1626107137-bbfEdSBqVxwBarPxV-WT86Zf5rQkzfwEOBqdVUpltVA"/>
<div class="bz_alias_short_desc_container edit_form">
<a href="show_bug.cgi?id=341323"><b>Bug 341323</b></a> -<span class="bz_default_hidden" id="summary_alias_container">
<span id="short_desc_nonedit_display">[ENH] Verify subject of remote certificate</span>
</span>
<div id="summary_alias_input">
<table id="summary">
<tr>
<td colspan="2">
</td>
</tr>
<tr><th class="field_label" id="field_label_short_desc">
<label accesskey="s" for="short_desc">
<a class="field_help_link" href="page.cgi?id=fields.html#short_desc" title="The bug summary is a short sentence which succinctly describes what the bug is about.">Summary:</a>
</label>
</th>
<td>[ENH] Verify subject of remote certificate
          </td>
</tr>
</table>
</div>
</div>
<script type="text/javascript">
    hideAliasAndSummary('[ENH] Verify subject of remote certificate', '');
  </script>
<table class="edit_form">
<tr>
<td class="bz_show_bug_column" id="bz_show_bug_column_1">
<table>
<tr>
<th class="field_label">
<a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
<td id="bz_field_status">
<span id="static_bug_status">RESOLVED
          FIXED
      </span>
</td>
</tr>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_product">
<a class="field_help_link" href="describecomponents.cgi" title="Bugs are categorised into Products and Components. Select a Classification to narrow down this list.">Product:</a>
</th>
<td class="field_value" id="field_container_product">NetworkManager</td>
</tr>
<tr class="bz_default_hidden"><th class="field_label" id="field_label_classification">
<a class="field_help_link" href="page.cgi?id=fields.html#classification" title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation.">Classification:</a>
</th>
<td class="field_value" id="field_container_classification">Platform</td>
</tr>
<tr><th class="field_label" id="field_label_component">
<a class="field_help_link" href="describecomponents.cgi?product=NetworkManager" title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list.">Component:</a>
</th>
<td class="field_value" id="field_container_component">Wi-Fi</td>
</tr>
<tr><th class="field_label" id="field_label_version">
<label for="version">
<a class="field_help_link" href="page.cgi?id=fields.html#version" title="The version field defines the version of the software the bug was found in.">Version:</a>
</label>
</th>
<td>0.9.x
  </td>
</tr>
<tr><th class="field_label" id="field_label_rep_platform">
<label accesskey="h" for="rep_platform">
<a class="field_help_link" href="page.cgi?id=fields.html#rep_platform" title='The hardware platform the bug was observed on. Note: When searching, selecting the option "All" only finds bugs whose value for this field is literally the word "All".'>Hardware:</a>
</label>
</th>
<td class="field_value">Other
       All
      </td>
</tr>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr>
<th class="field_label">
<label accesskey="i" for="priority">
<a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
<td>Normal
       major
      </td>
</tr>
<tr>
<th class="field_label">
<label for="target_milestone">
<a href="page.cgi?id=fields.html#target_milestone">
            Target Milestone</a></label>:
        </th><td>---
  </td>
</tr>
<tr>
<th class="field_label">
<a href="page.cgi?id=fields.html#assigned_to">Assigned To</a>:
      </th>
<td><span class="vcard"><span class="fn">Beniamino Galvani</span>
</span>
</td>
</tr>
<tr><th class="field_label" id="field_label_qa_contact">
<label accesskey="q" for="qa_contact">
<a class="field_help_link" href="page.cgi?id=fields.html#qa_contact" title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved.">QA Contact:</a>
</label>
</th>
<td><span class="vcard"><span class="fn">NetworkManager maintainer(s)</span>
</span>
</td>
</tr>
<script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'networkmanager-maint\x40gnome.bugs',
        'networkmanager-maint\x40gnome.bugs');
    </script>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_bug_file_loc">
<label accesskey="u" for="bug_file_loc">
<a class="field_help_link" href="page.cgi?id=fields.html#bug_file_loc" title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen.">URL:</a>
</label>
</th>
<td>
<span id="bz_url_input_area">
</span>
</td>
</tr>
<tr><th class="field_label" id="field_label_status_whiteboard">
<label accesskey="w" for="status_whiteboard">
<a class="field_help_link" href="page.cgi?id=fields.html#status_whiteboard" title="Each bug has a free-form single line text entry box for adding tags and status information.">Whiteboard:</a>
</label>
</th><td colspan="2">
</td>
</tr>

<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr>
<th class="field_label">
<label for="duplicates">Duplicates</label>:
    </th>
<td class="field_value" colspan="2">
<span id="duplicates"><a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=580534" title="RESOLVED DUPLICATE - GUI lacks the capability for verify the radius server name">580534</a> <a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=621484" title="RESOLVED DUPLICATE - 802.1X Configurability Issues with MITM Consequences">621484</a> <a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=654597" title='RESOLVED DUPLICATE - make 802.1X property "subject_match" a configurable option'>654597</a>
</span>
      (<a href="buglist.cgi?bug_id=580534,621484,654597">view as bug list</a>)
    </td>
</tr>
<tr><th class="field_label" id="field_label_dependson">
<a class="field_help_link" href="page.cgi?id=fields.html#dependson" title="The bugs listed here must be resolved before this bug can be resolved.">Depends on:</a>
</th>
<td>
<span id="dependson_input_area">
</span>
</td>
</tr>
<tr><th class="field_label" id="field_label_blocked">
<a class="field_help_link" href="page.cgi?id=fields.html#blocked" title="This bug must be resolved before the bugs listed in this field can be resolved.">Blocks:</a>
</th>
<td>
<span id="blocked_input_area">
</span>
<a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=741886" title="RESOLVED OBSOLETE - [nm-1-2] tracker for NetworkManager 1.2">nm-1-2</a>
</td>
</tr>
<tr>
<th> </th>

</tr>
</table>
</td>
<td>
<div class="bz_column_spacer"> </div>
</td>
<td class="bz_show_bug_column" id="bz_show_bug_column_2">
<table cellpadding="3" cellspacing="1">
<tr>
<th class="field_label">
      Reported:
    </th>
<td>2006-05-10 20:05 UTC by <span class="vcard"><span class="fn">Scott James Remnant</span>
</span>
</td>
</tr>
<tr>
<th class="field_label">
      Modified:
    </th>
<td>2017-01-13 17:01 UTC 
    </td>
</tr>

<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_see_also">
<a class="field_help_link" href="page.cgi?id=fields.html#see_also" title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with a comma. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields.">See Also:</a>
</th>
<td class="field_value" id="field_container_see_also"></td>
</tr>
<tr><th class="field_label" id="field_label_cf_gnome_target">
<a class="field_help_link" href="page.cgi?id=fields.html#cf_gnome_target" title="A custom Drop Down field in this installation of GNOME Bugzilla.">GNOME target:</a>
</th>
<td class="field_value" colspan="2" id="field_container_cf_gnome_target">---</td>
</tr>
<tr><th class="field_label" id="field_label_cf_gnome_version">
<a class="field_help_link" href="page.cgi?id=fields.html#cf_gnome_version" title="A custom Drop Down field in this installation of GNOME Bugzilla.">GNOME version:</a>
</th>
<td class="field_value" colspan="2" id="field_container_cf_gnome_version">---</td>
</tr>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td colspan="3">
<hr id="bz_top_half_spacer"/>
</td>
</tr>
</table>
<table cellpadding="0" cellspacing="0" id="bz_big_form_parts"><tr>
<td>
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>
<br/>
<table cellpadding="4" cellspacing="0" id="attachment_table">
<tr id="a0">
<th align="left" colspan="3">
      Attachments
    </th>
</tr>
<tr class="bz_contenttype_image_png" id="a1">
<td valign="top">
<a href="attachment.cgi?id=149724" title="View the content of the attachment">
<b>This is the functionaly that MUST be implemented as soon as possible.</b></a>
<span class="bz_attach_extra_info">
              (15.14 KB,
                image/png)

            <br/>
<a href="#attach_149724" title="Go to the comment associated with the attachment">2009-12-14 20:48 UTC</a>,

            <span class="vcard"><span class="fn">Tamás Németh</span>
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">
             
          </td>
<td valign="top">
<a href="attachment.cgi?id=149724&amp;action=edit">Details</a>
</td>
</tr>
<tr class="bz_contenttype_text_plain bz_patch" id="a2">
<td valign="top">
<a href="attachment.cgi?id=197220" title="View the content of the attachment">
<b>NM Patch to probe CA certificate</b></a>
<span class="bz_attach_extra_info">
              (23.52 KB,
                patch)

            <br/>
<a href="#attach_197220" title="Go to the comment associated with the attachment">2011-09-22 09:40 UTC</a>,

            <span class="vcard"><span class="fn">Gary Ching-Pang Lin</span>
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">none
          </td>
<td valign="top">
<a href="attachment.cgi?id=197220&amp;action=edit">Details</a>  |
    <a href="review?bug=341323&amp;attachment=197220">Review</a>
</td>
</tr>

</table>
<br/>
</td>
<td>
</td>
</tr></table>
<div id="comments"><script src="js/comments.js" type="text/javascript">
</script>
<script type="text/javascript">
<!--
  /* Adds the reply text to the `comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>
<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table cellpadding="0" cellspacing="0" class="bz_comment_table"><tr>
<td>
<div class="bz_comment bz_first_comment" id="c0">
<div class="bz_first_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c0">Description</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Scott James Remnant</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2006-05-10 20:05:41 UTC
        </span>
</div>
<pre class="bz_comment_text">Please describe the problem:
From: <a href="https://launchpad.net/distros/ubuntu/+source/network-manager/+bug/41135">https://launchpad.net/distros/ubuntu/+source/network-manager/+bug/41135</a>

An option to just verify that the certificate is from a trusted CA
(/etc/ssl/certs/*) and matches a specific subject (ie: wireless.bigcorp.com)
would be a nice feature to ensure that users configure mutual authentication
with WPA-Enterprise.

Steps to reproduce:
1. 
2. 
3. 


Actual results:


Expected results:


Does this happen every time?


Other information:</pre>
</div><div class="bz_comment" id="c1">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c1">Comment 1</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Dan Williams</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2008-08-17 23:14:38 UTC
        </span>
</div>
<pre class="bz_comment_text">We should figure out how to add this for additional security.  The UI is pretty crowded for TLS, TTLS, and PEAP as it is, but this is something that's good to have.</pre>
</div><div class="bz_comment" id="c2">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c2">Comment 2</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Dan Williams</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2009-04-30 18:58:49 UTC
        </span>
</div>
<pre class="bz_comment_text">*** <a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=580534" title="RESOLVED DUPLICATE - GUI lacks the capability for verify the radius server name">Bug 580534</a> has been marked as a duplicate of this bug. ***</pre>
</div><div class="bz_comment" id="c3">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c3">Comment 3</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Simon Lundström</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2009-12-04 14:21:56 UTC
        </span>
</div>
<pre class="bz_comment_text">It would be nice if NetworkManager could act like the Network.prefPane in OS X;

* Has the possibility to require a Common Name in the certificate that the RADIUS server present OR
* Have the user to supply supply an certificate and find out CN from it.

wpa_supplicant already supports this so the "only thing needed" is the GUI to configure it. The option is called subject_match and is used like 'subject_match="CN=radius.my.tld"'.

There is also an possible security flaw here when NM doesn't have this feature. 

Imagine that a person could get an certificate from the same CA as we use, then that person could set up an Rouge AP and an Rouge RADIUS-server with an certificate with the same CA as our RADIUS-server uses and our clients that use NM would trust every certificate in that CA so they would happily give their password (or hash depending on that method you use) to the Rouge RADIUS-server.

See this paper for more information: <a href="http://airsnarf.shmoo.com/rogue_squadron.pdf">http://airsnarf.shmoo.com/rogue_squadron.pdf</a>

Thanks,
- Simon Lundström
System Administrator
IT Services, Stockholm University, Sweden</pre>
</div><div class="bz_comment" id="c4">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c4">Comment 4</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Tamás Németh</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2009-12-14 20:47:10 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=341323#c3">comment #3</a>)
<span class="quote">&gt; Imagine that a person could get an certificate from the same CA as we use, then
&gt; that person could set up an Rouge AP and an Rouge RADIUS-server with an
&gt; certificate with the same CA as our RADIUS-server uses and our clients that use
&gt; NM would trust every certificate in that CA so they would happily give their
&gt; password (or hash depending on that method you use) to the Rouge RADIUS-server.</span>

Yes, you are absolutely right. We, at the hungarian eduroam community, realized, that the lack of this capability in NetworkManager is a VERY SERIOUS threat. In the Eduroam infrastructure it's quite possible that you home radius server's certificate is signed by the same CA as one or some of the numerous radius servers proxying your request, so any of these servers can easily (even accidentally!) open your SSL encrypted TTLS or PEAP tunnel, for example.

The problem gets even worse if you don't specify exactly the CA, which signed you certificate, but you trust every CA cert in /etc/ssl/certs (a very common scenario).

However, since your home radius server's certificate is transmitted as cleartext in the beginning of the PEAP/TTLS communication, it can be easily sniffed wireshark, and a relatively desperate attacker can purchase his own certificate from you CA.

If this attacker deploys his own AP/router/radius server, he can easily read your passwords (in case of TTLS/PAP authentication), or your NTLM password hashes (in case of TTLS/MSCHAPv2 or PEAP/MSCHAPv2). And the sad thing is that this MSCHAPv2 can cracked VERY EASILY by john ( <a href="http://www.openwall.com/john/">http://www.openwall.com/john/</a> ). According my experiences it can be cracked five times faster than old Unix crypt password hashes :((( I managed to crack three out of four real-life passords in an hour without advanced dicionaries of specific options. One password (consisting of eight digits) was cracked by simple brute force within an hour! ( <a href="http://forums.remote-exploit.org/tutorials-guides/13728-tutorial-cracking-leap-networks-asleap-john.html">http://forums.remote-exploit.org/tutorials-guides/13728-tutorial-cracking-leap-networks-asleap-john.html</a> )


So, to sum it up: NetworkManager MUST support certificate subject/altsubject validation, as Windows does.</pre>
</div><div class="bz_comment" id="c5">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c5">Comment 5</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Tamás Németh</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2009-12-14 20:48:55 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=149724" name="attach_149724" title="This is the functionaly that MUST be implemented as soon as possible.">attachment 149724</a> <a href="attachment.cgi?id=149724&amp;action=edit" title="This is the functionaly that MUST be implemented as soon as possible.">[details]</a></span>
This is the functionaly that MUST be implemented as soon as possible.</pre>
</div><div class="bz_comment" id="c6">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c6">Comment 6</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Nick Lowe</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2010-06-15 15:49:07 UTC
        </span>
</div>
<pre class="bz_comment_text">I've reported the same bug but in a wider context under:

<a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=621484" title="RESOLVED DUPLICATE - 802.1X Configurability Issues with MITM Consequences">Bug 621484</a> - 802.1X Configurability Issues with MITM Consequences
<a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=621484" title="RESOLVED DUPLICATE - 802.1X Configurability Issues with MITM Consequences">https://bugzilla.gnome.org/show_bug.cgi?id=621484</a></pre>
</div><div class="bz_comment" id="c7">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c7">Comment 7</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Stefan Winter</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2011-07-15 05:58:04 UTC
        </span>
</div>
<pre class="bz_comment_text">*** <a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=654597" title='RESOLVED DUPLICATE - make 802.1X property "subject_match" a configurable option'>Bug 654597</a> has been marked as a duplicate of this bug. ***</pre>
</div><div class="bz_comment" id="c8">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c8">Comment 8</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Stefan Winter</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2011-07-15 06:02:38 UTC
        </span>
</div>
<pre class="bz_comment_text">I can't believe this is pending since 2006 already. We are suffering from the lack of this more and more in eduroam. I would really appreciate to get this in.

Regarding the UI question: you could take a look at virtually every other supplicant on various platforms. True: UIs look crowded for 802.1X settings. But these parameters are needed for security; one can't just leave them out.

On the plus side, even if the manual config UI is complex: we are working on site installers that contain all the relevant settings and can be executed on a click by the user (would be via DBUS with 0.9). In that case, the bootstrap UI isn't all that important and could even look slightly cluttered.</pre>
</div><div class="bz_comment" id="c9">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c9">Comment 9</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Dan Williams</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2011-07-19 21:37:38 UTC
        </span>
</div>
<pre class="bz_comment_text">*** <a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=621484" title="RESOLVED DUPLICATE - 802.1X Configurability Issues with MITM Consequences">Bug 621484</a> has been marked as a duplicate of this bug. ***</pre>
</div><div class="bz_comment" id="c10">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c10">Comment 10</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Dan Williams</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2011-07-19 21:40:50 UTC
        </span>
</div>
<pre class="bz_comment_text">There's been some discussion on this recently and there may be patches coming.  At least that's my hope.

One way to get over the UI issues is to move to a checkbox list of EAP methods like Apple has done in Mac OS X, allowing each method to be configured independently.  It's actually possible to have multiple EAP methods configured at the same time such that if you roam to a location that only supports say TTLS while your normal location only supports PEAP (stupid network management but hey, whatever) that can work.</pre>
</div><div class="bz_comment" id="c11">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c11">Comment 11</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Stefan Winter</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2011-07-20 05:39:47 UTC
        </span>
</div>
<pre class="bz_comment_text">Short clarification about roaming: when doing roaming with EAP *right*, a user will *always* be presented with his home EAP type, by his home server.

That is, even when roaming to a very remote place, the EAP method will establish a TLS tunnel with the configured server-side credentials, i.e. the same server that the user configured at home. That server from home will then negotiate the EAP type with the user; there is no interaction with the visited place.

So you don't need to support negotiating multiple EAP types even in a roaming scenario. Supporting multiple EAP types is more a convenience thing - a home server might offer multiple EAP types because some client devices support one type, some other client devices another. And a client which supports several types has the choice which one to take.

All of what I wrote above of course depends that the expected home server is indeed configurable fine-grained enough. This definitely includes the server name (subject_match): Imagine your home server has a VeriSign certificate with the name "auth.example.com". You have configured that at home and are a happy user.
Now you roam to some other place. The other place also has an EAP server, with a certificate from VeriSign, and the server name being "haha.evil.com".
If the user has configured his supplicant to trust only the tuple "VeriSign+auth.example.com", then everything is fine - it will refuse to send its credentials to haha.evil.com.
If the user has only configured VeriSign - then the evil server could try to terminate the user's TLS tunnel, and ask for the user's credentials. No alarm bells will go off, because the subject_match isn't checked against the expectations. The user's supplicant will merrily send the user's credentials to haha.evil.com.

That makes subject_match *IMPORTANT*.

(And BTW: if the supplicant is then configured to do TTLS-PAP, his credentials will end up in clear text at haha.evil.com; if it does PEAP, there is at least an admittedly weak MSCHAPv2 encryption in place still. That makes PEAP arguably a bit more secure, with its second line of defence if you got the server-side verification wrong)</pre>
</div><div class="bz_comment" id="c12">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c12">Comment 12</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Gary Ching-Pang Lin</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2011-09-22 09:40:29 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=197220" name="attach_197220" title="NM Patch to probe CA certificate">attachment 197220</a> <a href="attachment.cgi?id=197220&amp;action=edit" title="NM Patch to probe CA certificate">[details]</a></span> <a href="review?bug=341323&amp;attachment=197220">[review]</a>
NM Patch to probe CA certificate

I've made a test patch for NM 0.9.2-beta1 to probe the server certificate. The patch utilizes the wpa_supplicant git commits 00468b4650998144f794762206c695c962c54734 and ade74830b45466abb41b8e8dbc2f595d8bacb793 to probe the server and send out the server certificate through a dbus signal. My goal is to set the subject automatically and replace cert_path with ca_cert="hash://server/sha256/&lt;cert_hash&gt;" if the user didn't provide any CA certificate.

The patch for nm-applet is still under working, and there are 2 plans for the applet.

Plan A:
Add 2 new entries, "subject" and "cert hash", and a "probe" button to the ui files of EAP-TTLS and PEAP.

Plan B:
Probe and set "subject" and "cert hash" silently after clicking "Connect".

As mentioned in the previous comment, Plan A will make the dialog even more crowded and this is bad for the machine with small screen, especially netbooks.

I tried to implement Plan B in applet-device-wifi.c:more_info_wifi_dialog_response_cb(), and it turned out the wifi dialog always blows away the 802.1x settings including my additional settings before starting the connection.

Any suggestion?</pre>
</div><div class="bz_comment" id="c13">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c13">Comment 13</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Stefan Winter</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2011-10-13 11:44:03 UTC
        </span>
</div>
<pre class="bz_comment_text">Hi,

one clarification first. You write it's a patch to probe the CA certificate. That's conceptually wrong (but maybe just a typo :-) )

The CA certificate is set in the supplicant by out-of-band action. It is not usually sent during the EAP handshake.

The *server* certificate is sent during the handshake. It is supposed to be issued by the configured CA.

So you can't probe the CA certificate, you can probe the server certificate only.

Ideally, a user didn't just set the CA certificate, he should also have set the subject_match - that way, the presented certificate is nailed to exactly the one server the user expects.

-&gt; UI consequence: a string input field for subject_match needs to be present.

If a user did only specify the CA, not the subject_match, then your probing of the subject can help indeed by suggesting that name to the user.
Probing and setting silently is not very good because it doesn't make the user aware that there is something he's supposed to check. Supplicants typically show the presented server certificate to the user on first use, asking "is this what you expect".

-&gt; UI consequence 1: provide a probe button which fills the string input field if solicited (=pushed) by the user
-&gt; UI consequence 2: don't be silent - I'm undecided whether filling the string input field is alerty enough, or whether popup is more appropriate. Mac OS goes for a popup.

As per cert_hash or subject_match... these two are mutually exclusive options to verify the server:

1) issuing CA + subject of server cert = uniquely identifies the *server* perpetually (renewal of cert doesn't change this combination)

2) cert_hash = uniquely identifies *this particular certificate* until expiry
this is regularly annoying: a renewed certificate will create verification problems because its hash is different

Both paths can be implemented, but it doesn't make sense to have both in the same UI form. It's either a UI pane with two questions: 1) CA 2) subject
- or - it's just the question: is this particular certificate okay

So my ultimate suggestion is: *before* connecting, give user the opportunity to set CA and subject, or to probe the subject if he's lazy
*if* user connects without having set both, present him the certificate that came in the handshake, and ask if this particular certificate is okay.

That should enable both modes of operation, in the most unintrusive way I can come up with right now.

Greetings,

Stefan Winter</pre>
</div><div class="bz_comment" id="c14">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c14">Comment 14</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Gary Ching-Pang Lin</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2011-10-14 06:44:28 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=341323#c13">comment #13</a>)
<span class="quote">&gt; Hi,
&gt; 
&gt; one clarification first. You write it's a patch to probe the CA certificate.
&gt; That's conceptually wrong (but maybe just a typo :-) )
&gt; 
&gt; The CA certificate is set in the supplicant by out-of-band action. It is not
&gt; usually sent during the EAP handshake.
&gt; 
&gt; The *server* certificate is sent during the handshake. It is supposed to be
&gt; issued by the configured CA.
&gt; 
&gt; So you can't probe the CA certificate, you can probe the server certificate
&gt; only.
&gt; 
&gt; Ideally, a user didn't just set the CA certificate, he should also have set the
&gt; subject_match - that way, the presented certificate is nailed to exactly the
&gt; one server the user expects.
&gt; </span>
The patch description might be misleading. The goal of the patch is to probe the *server* certificate. More precisely, it's for the subject and the hash of the server.

<span class="quote">&gt; -&gt; UI consequence: a string input field for subject_match needs to be present.
&gt; 
&gt; If a user did only specify the CA, not the subject_match, then your probing of
&gt; the subject can help indeed by suggesting that name to the user.
&gt; Probing and setting silently is not very good because it doesn't make the user
&gt; aware that there is something he's supposed to check. Supplicants typically
&gt; show the presented server certificate to the user on first use, asking "is this
&gt; what you expect".
&gt; 
&gt; -&gt; UI consequence 1: provide a probe button which fills the string input field
&gt; if solicited (=pushed) by the user
&gt; -&gt; UI consequence 2: don't be silent - I'm undecided whether filling the string
&gt; input field is alerty enough, or whether popup is more appropriate. Mac OS goes
&gt; for a popup.
&gt; 
&gt; As per cert_hash or subject_match... these two are mutually exclusive options
&gt; to verify the server:
&gt; 
&gt; 1) issuing CA + subject of server cert = uniquely identifies the *server*
&gt; perpetually (renewal of cert doesn't change this combination)
&gt; 
&gt; 2) cert_hash = uniquely identifies *this particular certificate* until expiry
&gt; this is regularly annoying: a renewed certificate will create verification
&gt; problems because its hash is different
&gt; </span>
The first case is the ideal case. The cert_hash is actually a fallback option in my plan. If the user cannot set the CA properly, e.g. the RADIUS server is self-signed or the CA certificate is not available in the client system, the cert_hash will be used to identify the server. It's not perfect but better than nothing.

<span class="quote">&gt; Both paths can be implemented, but it doesn't make sense to have both in the
&gt; same UI form. It's either a UI pane with two questions: 1) CA 2) subject
&gt; - or - it's just the question: is this particular certificate okay
&gt; </span>
Alright, so at least the subject entry must show.

<span class="quote">&gt; So my ultimate suggestion is: *before* connecting, give user the opportunity to
&gt; set CA and subject, or to probe the subject if he's lazy
&gt; *if* user connects without having set both, present him the certificate that
&gt; came in the handshake, and ask if this particular certificate is okay.
&gt; 
&gt; That should enable both modes of operation, in the most unintrusive way I can
&gt; come up with right now.
&gt; </span>

How about this: I add the subject entry to the dialog and do a check after the user clicks "Connect". If the subject or the ca_cert is empty, nm-applet/g-c-c network panel issues a probe and then presents the user what it gets from the probe in a popup. If the user is OK for the server certificate, the related fields will be filled and the connection goes on. Otherwise, back to the settings dialog. The user can still change the subject and ca_cert later.</pre>
</div><div class="bz_comment" id="c15">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c15">Comment 15</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Stefan Winter</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2011-10-14 08:55:38 UTC
        </span>
</div>
<pre class="bz_comment_text"><span class="quote">&gt; How about this: I add the subject entry to the dialog and do a check after the
&gt; user clicks "Connect". If the subject or the ca_cert is empty, nm-applet/g-c-c
&gt; network panel issues a probe and then presents the user what it gets from the
&gt; probe in a popup. If the user is OK for the server certificate, the related
&gt; fields will be filled and the connection goes on. Otherwise, back to the
&gt; settings dialog. The user can still change the subject and ca_cert later.</span>

That sounds very good! I'm not sure where the cert_hash could come into play here though.

My take on it is:

- user has specified CA, but not subject, and clicks connect, probe happens

-&gt; UI asks him "A certificate which matches your CA has been presented, and the subject is $subject - is that okay with you?"
-&gt; if ok, subject_match will be added to config; the server will in the future be identified with the CA/subject combo

- user has not specified CA nor subject, and clicks connect, probe happens

-&gt; UI asks user "Do you like this certificate?"
-&gt; if ok, cert_hash will be added to config; the server will in the future be identified with that hash (CA and subject are then insignificant)

Is that in line with your thinking?</pre>
</div><div class="bz_comment" id="c16">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c16">Comment 16</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Gary Ching-Pang Lin</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2011-10-14 09:02:50 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=341323#c15">comment #15</a>)
<span class="quote">&gt; My take on it is:
&gt; 
&gt; - user has specified CA, but not subject, and clicks connect, probe happens
&gt; 
&gt; -&gt; UI asks him "A certificate which matches your CA has been presented, and the
&gt; subject is $subject - is that okay with you?"
&gt; -&gt; if ok, subject_match will be added to config; the server will in the future
&gt; be identified with the CA/subject combo
&gt; 
&gt; - user has not specified CA nor subject, and clicks connect, probe happens
&gt; 
&gt; -&gt; UI asks user "Do you like this certificate?"
&gt; -&gt; if ok, cert_hash will be added to config; the server will in the future be
&gt; identified with that hash (CA and subject are then insignificant)
&gt; 
&gt; Is that in line with your thinking?</span>

Yes, exactly :-)
The UI modification is minimized (just one more entry) and the user is also notified.</pre>
</div><div class="bz_comment" id="c17">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c17">Comment 17</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Stefan Winter</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2011-10-14 09:24:22 UTC
        </span>
</div>
<pre class="bz_comment_text">Excellent!

I guess when that's implemented, the feature req can be closed. I do have a couple comments on the UI design in general, but they are not so urgent. If you care enough, read on :-)

EAP authentication is always mutual, and most supplicants make the distinction between "server side auth" and "client side auth" in their UI.

This is helpful especially in the case of EAP-TLS. There's two certificates involved, one of them needing a private key, the other not, plus add the CA of the server-side. Putting all this into one simple widget is a bit confusing.

In an HTML form, I would probably do two &lt;fieldset&gt;s in the form: One for server side, which basically contains CA and subject of the server (it may contain more exotic things with other EAP types), and one for the client side. Or two consecutive dialogs, first server, then on a next page client.

The client side widget would ideally be dynamic with respect to which EAP type the user chooses. TTLS and PEAP have an *optional* client-side cert, and a *mandatory* username+password field. EAP-TLS only has the - then mandatory - client cert, but no username+password.

Conveying all that visually in a nice way is certainly not trivial, but IMHO it would do a lot of good for users. When I come across NM (well, KNM more often), I'm sometimes confused myself, and I tend to think I have a good grasp on all the concepts involved. Not sure how an innocent user will perceive that "option bloat".</pre>
</div><div class="bz_comment" id="c18">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c18">Comment 18</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Ludwig Nussel</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2011-10-21 08:48:24 UTC
        </span>
</div>
<pre class="bz_comment_text">CVE-2006-7246</pre>
</div><div class="bz_comment" id="c19">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c19">Comment 19</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Anders Kaseorg</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2013-08-19 05:44:40 UTC
        </span>
</div>
<pre class="bz_comment_text">I just discovered that wpa_supplicant only uses subject_match to check a _substring_ of the certificate’s name, which is rather useless security-wise.  If I configure subject_match to ‘wireless-radius-2.mit.edu’, wpa_supplicant will accept a valid certificate for ‘wireless-radius-2.mit.edu.evildomain.biz’.

We really need this to check against list of complete names, not just a substring.

<a href="http://w1.fi/bugz/show_bug.cgi?id=490">http://w1.fi/bugz/show_bug.cgi?id=490</a></pre>
</div><div class="bz_comment" id="c20">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c20">Comment 20</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Michael Catanzaro</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2013-10-19 02:10:36 UTC
        </span>
</div>
<pre class="bz_comment_text">openSUSE is still carrying (updated) patches for this; is anything blocking their acceptance?

(In reply to <a href="show_bug.cgi?id=341323#c19">comment #19</a>)
<span class="quote">&gt; I just discovered that wpa_supplicant only uses subject_match to check a
&gt; _substring_ of the certificate’s name, which is rather useless security-wise. 
&gt; If I configure subject_match to ‘wireless-radius-2.mit.edu’, wpa_supplicant
&gt; will accept a valid certificate for ‘wireless-radius-2.mit.edu.evildomain.biz’.
&gt; 
&gt; We really need this to check against list of complete names, not just a
&gt; substring.
&gt; 
&gt; <a href="http://w1.fi/bugz/show_bug.cgi?id=490">http://w1.fi/bugz/show_bug.cgi?id=490</a></span>

Is there a bug in a NetworkManager or is this "just" a wpa_supplicant issue (that should probably be tracked here regardless)?</pre>
</div><div class="bz_comment" id="c21">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c21">Comment 21</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Anders Kaseorg</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2013-12-04 00:17:18 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=341323#c20">comment #20</a>)
<span class="quote">&gt; Is there a bug in a NetworkManager or is this "just" a wpa_supplicant issue
&gt; (that should probably be tracked here regardless)?</span>

NetworkManager is at least going to need changes to expose whatever new API wpa_supplicant comes up with.

Ideally, there would also be a UI for prompting on new certificates or certificate names and remembering approvals, to help the 99% of users who don’t know they should care.  The requirements of such a UI might influence the API we need from wpa_supplicant.</pre>
</div><div class="bz_comment" id="c22">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c22">Comment 22</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Stefan Winter</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2013-12-04 06:46:00 UTC
        </span>
</div>
<pre class="bz_comment_text">The #20 commenter's note was only about the substring matching for cases where certs get "properly" verified using a CA hierarchy and the server name, right?

There, the regex matching without enforcing end-of-string is IMHO a bug in wpa_supplicant. It might be mitigatable in NetworkManager, worth a try: whatever the user puts into the UI field could be suffixed with a $ to indicate that this is required to be the end of the string.

The #21 commenter's note seems to aim in a different direction; this would be about certificate pinning, where the user is prompted whether he likes the cert or not. This mode of operation really should not operate with the string that is the presented name. Names can be faked arbitrarily. It's the cert's fingerprint which is unique, and it's the only persistent handle. That mode of operation first needs to be supported and exposed by wpa_supoplicant before diving into more details. Suffice to say one thing: In order for cert pinning to work, UI must first ask the user for at least his username; the username is used for request routing purposes and will determine *which* certificate gets shown to the user. So it's a UI first (username) -&gt; wpa_supplicant doing something -&gt; UI comes back (ask password). Most UIs still ask for both beforehand, and release the details to the protocol when needed. I.e. release the username immediately, then wait for cert pinning confirmation by the user, and then release the password.</pre>
</div><div class="bz_comment" id="c23">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c23">Comment 23</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Wilco Baan Hofman</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-01-11 10:25:32 UTC
        </span>
</div>
<pre class="bz_comment_text">This issue is exploited in the wild and should be fixed. There is no way to implement secure WPA2 enterprise with these settings, so it is definitely more than enhancement.

wpa_supplicant has altsubject_match functionality which should be implemented for this. This matches the altSubjectName components, so specifying 'DNS:wireless.nikhef.nl' should be enough to check the subject of the certificate you're trying to connect to.

Indeed, subject_match should be deprecated, as a substring match is useless for security, but altsubject_match in wpa_supplicant does an exact altSubjectName component match.

The UI should always accomodate specifying who to connect to, as with any TLS session, one should ALWAYS check:

1. Is this certificate from the person I'm trying to connect to (subject)
2. Is the signature valid
3. Is the certificate not expired.

The absense of this field does not allow a secure configuration.

It is current best practise to implement public certificates on WPA2 enterprise, because this allows pinning of the CA and subject information on new devices. Especially on a large public network such as eduroam, this is extremely important.

At this point I recommend pinning the CA and subject on first connect to the RADIUS server. If there is only one altSubjectName, that should be pinned, if there are more or if the certificate is self-signed the certificate fingerprint could be pinned.

Do not pin the certificate fingerprint for valid signed signatures where the subject can be pinned, as this prohibits replacing the certificate with a new valid one and leads to problems every replacement. (Imagine 10k users having problems with the network at the same time).


-- Wilco Baan Hofman</pre>
</div><div class="bz_comment" id="c24">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c24">Comment 24</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Wilco Baan Hofman</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-01-11 10:32:19 UTC
        </span>
</div>
<pre class="bz_comment_text">To clarify Windows &gt;= Vista behaviour:

If the certificate is signed by a public CA, upon first connect, the CA is pinned to the profile along with the CN from the subject.

This makes sure that Windows will not connect to networks it does not trust, nor will it leak it's credentials.

OS X's and IOS strategy depends on pinning the fingerprint, this works mostly, it has the benefit of putting the user in charge of at least clicking OK, but when the certificate is replaced because it is no longer valid. Everybody will need to click OK. In my view this is nice for self-signed certificates, but for public certificates there are better options (like pinning the CA + altSubjectName dNSName)</pre>
</div><div class="bz_comment" id="c25">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c25">Comment 25</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Wilco Baan Hofman</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-01-11 10:41:50 UTC
        </span>
</div>
<pre class="bz_comment_text">I also recommend dropping all support for subject_match. This only leads to insecure configurations.

In summary:
1. Add an option in the dialog for Connect only to these servers, using altsubject_match
2. Maybe add a checkbox for use System CAs (it's easier to configure)
3. If no CA and no subject is given, pin these at the first connection attempt. If the certificate is self-signed, pin the fingerprint.

Please fix this widely exploited security bug.

-- Wilco Baan Hofman</pre>
</div><div class="bz_comment" id="c26">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c26">Comment 26</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Stefan Winter</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-01-12 07:27:05 UTC
        </span>
</div>
<pre class="bz_comment_text">Dropping all support for subject_match is NOT a good idea. Some EAP methods lean towards using the Subject/CN rather than sAN:DNS. See for example Microsoft's guidance on issuing PEAP server certificates here:

<a href="http://msdn.microsoft.com/en-us/library/cc731363.aspx">http://msdn.microsoft.com/en-us/library/cc731363.aspx</a>

Note how the Subject field is mandatory, while the sAN field is optional.

Like it or not, it is protocol-wise acceptable to create a deployment with a certificate which does not have a sAN configured. Blindly making NetworkManager UI bind the server name to altsubject_match will leave users of such deployed servers DoSed.

In eduroam, we do recommend to have the name both in Subject/CN and in sAN:DNS for maximum compatibility, so those of our identity providers (and their users) who follow our guidelines could live with the deprecation of subject_match; but there's more to WPA2 Enterprise than just eduroam.

I don't have a suggestion for NM UI; you are stuck between a rock and a hard place here.

IMHO, the better fix would be to improve wpa_supplicant by making the subject_match check more strict:

- only check inside the CN part of subject
- consider the configured string an /exact/ match of CN

This makes the substring match + evil suffix appended problem go away. It is something to take up with the wpa_supplicant authors though.</pre>
</div><div class="bz_comment" id="c27">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c27">Comment 27</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Wilco Baan Hofman</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-01-12 08:45:42 UTC
        </span>
</div>
<pre class="bz_comment_text">I was talking about subject_match as it is implemented now. 

I fully support matching the dNSName from subjectAltName with a CN fallback and only support *exact* matches.

subject_match as it is implemented now is nothing but dangerous.</pre>
</div><div class="bz_comment" id="c28">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c28">Comment 28</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Wilco Baan Hofman</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-01-12 08:54:41 UTC
        </span>
</div>
<pre class="bz_comment_text">I am already in contact with Jouni Malinen (wpa_supplicant author), about this issue (subject_match CVE-2015-0210). He tells me subject_match was never intended to be used for this purpose.

altsubject_match is, but he prefers the use of domain_suffix_match, which is already implemented, which unfortunately does not do an exact match, but a suffix match on the dNSName, both in CN and altSubjectName.

I believe we need something that does an exact match on both and have API that allows it to be pinned.

Regarding the UI, it is unacceptable that there is no GUI component which allows the checking of the identity of the other party. Any such configuration will be insecure and it is the main reason eduroam and others are vulnerable to attack.</pre>
</div><div class="bz_comment" id="c29">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c29">Comment 29</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Wilco Baan Hofman</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-01-14 17:56:57 UTC
        </span>
</div>
<pre class="bz_comment_text">Hi,

wpa_supplicant just committed a fix.

There is a new parameter called domain_match, which has the following behaviour:
It exact-matches against the DNS parts of subjectAltName and falls back to an exact CN match.

For the pinning behaviour, via dbus is now exposed the variable 'altsubject'. This makes sure that network-manager does not have to parse the certificate itself.

The following logic can thus be applied upon first connect:

1. Use provided CA. If no CA is provided, use the CA bundle.
2. Attempt to connect
3. If a server DNS name is provided, match it. Fail when it does not match.
4. If the CA is trusted, pin that CA. If not, fail. Warn the user if no CA was provided and the system CA store does not trust it.
5. If no server DNS name was provided, pin the one that was returned by the RADIUS server.

To be implemented to fix the security bug:
- a GUI component for server DNS name
- Pinning behaviour in Network Manager

-- Wilco</pre>
</div><div class="bz_comment" id="c30">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c30">Comment 30</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Wilco Baan Hofman</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-01-14 17:59:47 UTC
        </span>
</div>
<pre class="bz_comment_text">I forgot step 6: Pin the certificate fingerprint if the user does not provide a CA and it is not trusted.

-- Wilco</pre>
</div><div class="bz_comment" id="c31">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c31">Comment 31</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Dan Winship</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-01-26 15:19:57 UTC
        </span>
</div>
<pre class="bz_comment_text">OK...

It sounds like we want to deprecate NMSetting8021x:subject-match and :phase2-subject-match, and add :domain-match and :phase2-domain-match.

We don't necessarily want to make everyone depend on the super-newest wpa_supplicant, so rather than actually using the new wpa_supplicant functionality, perhaps it makes more sense to use "ca_cert=probe://" and then have NM check the CA and/or server subject/domain/altsubject/hash/whatever itself. (Having the checking code in NM will also potentially make it easier to support the same verification options with VPN certificates later.)

I'm not totally sure where pinning belongs (in particular, how much of it should be in the UI vs the daemon).</pre>
</div><div class="bz_comment" id="c32">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c32">Comment 32</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Dan Winship</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2015-01-26 19:34:34 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=341323#c31">comment #31</a>)
<span class="quote">&gt; We don't necessarily want to make everyone depend on the super-newest
&gt; wpa_supplicant, so rather than actually using the new wpa_supplicant
&gt; functionality, perhaps it makes more sense to use "ca_cert=probe://" and then
&gt; have NM check the CA and/or server subject/domain/altsubject/hash/whatever
&gt; itself.</span>

Actually, it looks like that won't work because it doesn't wait for a response from the cert callback. So in particular in the TTLS case, it would likely end up sending the tunneled credentials before the cert callback had a chance to say "it's a trap!".</pre>
</div><div class="bz_comment" id="c33">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c33">Comment 33</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Daniel Feuchtinger</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-02-01 12:10:31 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to Wilco Baan Hofman from <a href="show_bug.cgi?id=341323#c28">comment #28</a>)
<span class="quote">&gt; I am already in contact with Jouni Malinen (wpa_supplicant author), about
&gt; this issue (subject_match CVE-2015-0210). He tells me subject_match was
&gt; never intended to be used for this purpose.
&gt; 
&gt; altsubject_match is, but he prefers the use of domain_suffix_match, </span>

That's perfect because you can use more than 1 radius server, you just have to control the domain and make it specific (e.g. 1.radius.example.com and 2.radius.example.com, radius1.example.com would not work obviously).

<span class="quote">&gt; I believe we need something that does an exact match on both and have API
&gt; that allows it to be pinned.</span>
Exact match is fine but don't replace domain_suffix with it, we need both, it's common to have 2 radius servers.</pre>
</div><div class="bz_comment" id="c34">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c34">Comment 34</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Anders Kaseorg</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-02-01 17:10:02 UTC
        </span>
</div>
<pre class="bz_comment_text">A single domain_suffix_match would not work for the MIT SECURE wireless network, which uses

wireless-radius-1.mit.edu
wireless-radius-2.mit.edu

[1], but also gives out foo.mit.edu names and certificates to arbitrary affiliates including students [2].  I have no idea why they can’t just use two RADIUS servers configured with the same certificate, but in any event, neither of these points is likely to change.  And I don’t think this kind of setup is uncommon.

So we need to support configuring a list of domains.  Windows supports a semicolon-separated list [3].

[1] <a href="http://kb.mit.edu/confluence/x/YwBABw">http://kb.mit.edu/confluence/x/YwBABw</a>
[2] <a href="http://web.mit.edu/apache-ssl/www/README.certificate">http://web.mit.edu/apache-ssl/www/README.certificate</a>
[3] <a href="https://msdn.microsoft.com/en-us/library/dd759219.aspx">https://msdn.microsoft.com/en-us/library/dd759219.aspx</a></pre>
</div><div class="bz_comment" id="c35">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c35">Comment 35</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Daniel Feuchtinger</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-02-02 09:02:57 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to Anders Kaseorg from <a href="show_bug.cgi?id=341323#c34">comment #34</a>)
<span class="quote">&gt; A single domain_suffix_match would not work for the MIT SECURE wireless
&gt; network, which uses
&gt; 
&gt; wireless-radius-1.mit.edu
&gt; wireless-radius-2.mit.edu</span>

They could either change the names to radius{1,2}.wireless.mit.edu or use just one certificate for both (we do the latter), the problem is, that a secure configuration is impossible with boht solutions at the moment. With domain_suffix_match that would be possible if you choose your domains accordingly. domain_suffix_match is already available for wpa_supplicant, why is it hard to make it available for the NetworkManager? At least via a file in /etc/NetworkManager/systemconnections? That would enable scripts like CAT (see cat.eduroam.org) to create secure configuration files. 

The other suggested solutions (list of domains, exact match) are fine too, but why don't implement domain_suffix_match first, since it is available in wpa_supplicant?

I'm astonished, that this bug is going back to 2006, does nobody care about passwords?
Since subject-match is useless against man in the middle attacks, the fix should be almost as simple as search and replace subject-match with domain-suffix-match. 

Millions of students are using TTLS-PAP or PEAP-MSCHAP for WLAN authentication and they need something like domain_suffix_match to prevent man in the middle attacks. Please give that bug a higher priority, linux (together with android) is the last common operating system, that makes a secure configuration really hard (for most users impossible) and that's sad...</pre>
</div><div class="bz_comment" id="c36">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c36">Comment 36</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Anders Kaseorg</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-02-02 17:45:18 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to Daniel Feuchtinger from <a href="show_bug.cgi?id=341323#c35">comment #35</a>)
<span class="quote">&gt; They could either change the names to radius{1,2}.wireless.mit.edu or use
&gt; just one certificate for both (we do the latter),</span>

How would you suggest I go about convincing them to make such a change?  Especially if it means all the Windows and Mac users on campus would need to go reconfigure their wireless settings again?  And even if they could do it without that (perhaps by simply dropping the wireless-radius-2 name), they’re probably just going to claim that such a change is too risky and benefits too few users, if they even say anything at all.</pre>
</div><div class="bz_comment" id="c37">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c37">Comment 37</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Beniamino Galvani</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-03-05 17:10:38 UTC
        </span>
</div>
<pre class="bz_comment_text">Branch bg/8021x-domain-suffix-match-bgo341323 implements two new properties 'domain-suffix-match' and 'phase2-domain-suffix-match' of NMSetting8021x which can be used to match a suffix of dNSName elements of altSubject or the SubjectName CN.</pre>
</div><div class="bz_comment" id="c38">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c38">Comment 38</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Thomas Haller</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-03-07 14:00:05 UTC
        </span>
</div>
<pre class="bz_comment_text"><span class="quote">&gt;&gt; libnm-core: add domain-suffix-match properties to NMSetting8021x</span>
    
maybe verify() should reject values of ""? At the very least, because ifcfg cannot distinguish them from NULL. (How does keyfile react on "")?

It seems that also nmcli is unable to read "". E.g. nmc_readline_helper() returns NULL instead of "".




     { "altsubject_match2",  TYPE_BYTES,   0, 0, FALSE,  NULL },
+    { "domain_suffix_match2", TYPE_BYTES,   0, 0, FALSE,  NULL },
                                           ^^
alignment? :) 



<span class="quote">&gt;&gt; libnm-core: deprecate NMSetting8021x subject-match properties</span>
    
commit message: "specify a a substring to be"


+NM_DEPRECATED_IN_1_2
 const char *      nm_setting_802_1x_get_subject_match...

This deprecates the API itself. I am not sure that is what we want. We want to discourage the usage of this property, not client applications to stop using the property. Seems a note in the documentation is sufficient.


Rest LGTM</pre>
</div><div class="bz_comment" id="c39">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c39">Comment 39</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Thomas Haller</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-03-07 14:01:24 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to Thomas Haller from <a href="show_bug.cgi?id=341323#c38">comment #38</a>)
<span class="quote">&gt; &gt;&gt; libnm-core: add domain-suffix-match properties to NMSetting8021x
&gt;     
&gt; maybe verify() should reject values of ""? At the very least, because ifcfg
&gt; cannot distinguish them from NULL. (How does keyfile react on "")?
&gt; 
&gt; It seems that also nmcli is unable to read "". E.g. nmc_readline_helper()
&gt; returns NULL instead of "".
&gt; Rest LGTM</span>

Or just coerce the values?

+    case PROP_DOMAIN_SUFFIX_MATCH:
+         g_free (priv-&gt;domain_suffix_match);
+         priv-&gt;domain_suffix_match = value &amp;&amp; value[0] ? g_value_dup_string (value) : NULL;
+         break;</pre>
</div><div class="bz_comment" id="c40">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c40">Comment 40</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Beniamino Galvani</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-03-08 14:56:02 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to Thomas Haller from <a href="show_bug.cgi?id=341323#c38">comment #38</a>)
<span class="quote">&gt;      { "altsubject_match2",  TYPE_BYTES,   0, 0, FALSE,  NULL },
&gt; +    { "domain_suffix_match2", TYPE_BYTES,   0, 0, FALSE,  NULL },
&gt;                                            ^^
&gt; alignment? :) </span>

Fixed.

<span class="quote">&gt; &gt;&gt; libnm-core: deprecate NMSetting8021x subject-match properties
&gt; +NM_DEPRECATED_IN_1_2
&gt;  const char *      nm_setting_802_1x_get_subject_match...
&gt; 
&gt; This deprecates the API itself. I am not sure that is what we want. We want
&gt; to discourage the usage of this property, not client applications to stop
&gt; using the property. Seems a note in the documentation is sufficient.</span>

Ok, maybe deprecating the API is a bit drastic, but the property shouldn't be really used because it provides little security.

Anyway, I've dropped the commit and added a comment.

(In reply to Thomas Haller from <a href="show_bug.cgi?id=341323#c39">comment #39</a>)
<span class="quote">&gt; Or just coerce the values?</span>

Fixed and repushed, thanks.</pre>
</div><div class="bz_comment" id="c41">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c41">Comment 41</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Thomas Haller</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-03-08 15:21:36 UTC
        </span>
</div>
<pre class="bz_comment_text">lgtm now</pre>
</div><div class="bz_comment" id="c42">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c42">Comment 42</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Daniel Feuchtinger</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-03-15 14:45:57 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to Anders Kaseorg from <a href="show_bug.cgi?id=341323#c36">comment #36</a>)
<span class="quote">&gt; (In reply to Daniel Feuchtinger from <a href="show_bug.cgi?id=341323#c35">comment #35</a>)
&gt; &gt; They could either change the names to radius{1,2}.wireless.mit.edu or use
&gt; &gt; just one certificate for both (we do the latter),
&gt; 
&gt; How would you suggest I go about convincing them to make such a change? </span>

There's no need to convince anyone, they can decide for themselves. My point is, that you can not use NetworkManager to create a secure EAP-Connection without using a dedicated CA, even though wpa_supplicant has the required capabilities and the changes to NetworkManager would be small. 

Thanks a lot for the branch, I'll give it a try.</pre>
</div><div class="bz_comment" id="c43">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c43">Comment 43</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Dan Williams</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-03-16 01:43:15 UTC
        </span>
</div>
<pre class="bz_comment_text"><span class="quote">&gt; libnm-core: add domain-suffix-match properties to NMSetting8021x</span>

In the code doc for 'subject-match' and 'phase2-subject-match' I'd use "NMSetting8021x:domain-suffix-match" instead of just 'domain-suffix-match' to get nice gtkdoc links in the generated docs.

Also, for the phase2-subject-match property I think it was just C&amp;P, but you probably want "NMSetting8021x:phase2-domain-suffix-match' when referring to the newer/better property.

The rest LGTM.</pre>
</div><div class="bz_comment" id="c44">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c44">Comment 44</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Beniamino Galvani</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-03-16 16:58:15 UTC
        </span>
</div>
<pre class="bz_comment_text">(In reply to Dan Williams from <a href="show_bug.cgi?id=341323#c43">comment #43</a>)
<span class="quote">&gt; In the code doc for 'subject-match' and 'phase2-subject-match' I'd use
&gt; "NMSetting8021x:domain-suffix-match" instead of just 'domain-suffix-match'
&gt; to get nice gtkdoc links in the generated docs.
&gt; 
&gt; Also, for the phase2-subject-match property I think it was just C&amp;P, but you
&gt; probably want "NMSetting8021x:phase2-domain-suffix-match' when referring to
&gt; the newer/better property.</span>

Fixed and merged to master:

<a href="https://cgit.freedesktop.org/NetworkManager/NetworkManager/commit/?id=e2040e5ebeae8e50e3f3b5a0e724fc9211866972">https://cgit.freedesktop.org/NetworkManager/NetworkManager/commit/?id=e2040e5ebeae8e50e3f3b5a0e724fc9211866972</a></pre>
</div><div class="bz_comment" id="c45">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c45">Comment 45</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Matt McCutchen</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-01-12 22:54:58 UTC
        </span>
</div>
<pre class="bz_comment_text">To clarify for anyone who finds this bug report, it looks like the new properties "altsubject-matches" and "domain-suffix-match" are supported in the configuration API but not exposed in the connection editor UI.  NetworkManager does not expose wpa_supplicant's "domain_match" parameter, but "altsubject-matches" is good enough as long as all RADIUS servers use modern certificates with a subject alternative name.

The easiest way to set the properties is probably from the command line:

nmcli connection modify CONNECTION_NAME +802-1x.altsubject-matches DNS:radius.example.com
nmcli connection modify CONNECTION_NAME 802-1x.domain-suffix-match example.com

(In fact, it looks like altsubject-matches was implemented back in 2011 (<a href="https://cgit.freedesktop.org/NetworkManager/NetworkManager/commit/?id=0b8097a26a59ef0b2c0ab78f9ec3656e5681404b">https://cgit.freedesktop.org/NetworkManager/NetworkManager/commit/?id=0b8097a26a59ef0b2c0ab78f9ec3656e5681404b</a>) but never announced in this bug thread!)</pre>
</div><div class="bz_comment" id="c46">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=341323#c46">Comment 46</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Matt McCutchen</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-01-13 17:01:57 UTC
        </span>
</div>
<pre class="bz_comment_text">Correction: As pointed out at <a href="https://blog.wirelessmoves.com/2016/02/eduroam-wifi-with-a-certificate-and-cool-roaming-features.html">https://blog.wirelessmoves.com/2016/02/eduroam-wifi-with-a-certificate-and-cool-roaming-features.html</a>, editing the connection using nm-connection-editor silently loses the new properties, so IMO we haven't provided a reliable solution to the original security problem for an end user who might be inclined to change some other property using the connection editor.  I filed <a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=777225" title="RESOLVED FIXED - [review] nm-connection-editor silently clears WPA Enterprise subject-match properties, reintroducing MITM risk [bg/unsupported-properties-bgo777225]">bug 777225</a>.  Regrets for the double post.</pre>
</div>
<script type="text/javascript">
  function traceparser_toggle_trace(link, trace_id) {
    var trace = document.getElementById('trace_' + trace_id);
    bz_toggleClass(trace, 'bz_default_hidden');
    if (link.innerHTML == '+') { link.innerHTML = '&mdash;'; }
    else { link.innerHTML = '+'; }
  }
</script>
</td>
<td>
</td>
</tr></table>
</div>
<hr/>
</form>
<hr/>

<br/>
</div>
<div id="footer">
<div class="intro"></div>
<ul id="useful-links">
<li id="links-actions"><ul class="links">
<li><a href="./">Home</a></li>
<li><span class="separator">| </span><span style="text-decoration:line-through"><a href="">New</a></span></li>
<li><span class="separator">| </span><a href="page.cgi?id=browse.html&amp;product=NetworkManager">Browse</a></li>
<li><span class="separator">| </span><a href="query.cgi">Search</a></li>
<li class="form">
<span class="separator">| </span>
<form action="buglist.cgi" method="get" onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
<input id="no_redirect_bottom" name="no_redirect" type="hidden" value="0"/>
<script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
<input class="txt" id="quicksearch_bottom" name="quicksearch" title="Quick Search" type="text" value=""/>
<input class="btn" id="find_bottom" type="submit" value="Search"/></form>
<a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>
<li><span class="separator">| </span><a href="page.cgi?id=reports.html">Reports</a></li>
<li>
<span class="separator">| </span>
<a href="http://www.bugzilla.org/docs/4.4/en/html/bug_page.html" target="_blank">Help</a>
</li>
<li id="mini_login_container_bottom">
<span class="separator">| </span>
<a href="show_bug.cgi?id=341323&amp;GoAheadAndLogIn=1" id="login_link_bottom" onclick="return show_mini_login_form('_bottom')">Log In</a>
<form action="show_bug.cgi?id=341323" class="mini_login bz_default_hidden" id="mini_login_bottom" method="POST" onsubmit="return check_mini_login_fields( '_bottom' );">
<input class="bz_login" id="Bugzilla_login_bottom" name="Bugzilla_login" onfocus="mini_login_on_focus('_bottom')" title="Login"/>
<input class="bz_password" id="Bugzilla_password_bottom" name="Bugzilla_password" title="Password" type="password"/>
<input class="bz_password bz_default_hidden bz_mini_login_help" id="Bugzilla_password_dummy_bottom" onfocus="mini_login_on_focus('_bottom')" title="Password" type="text" value="password"/>
<input checked="" class="bz_remember" id="Bugzilla_remember_bottom" name="Bugzilla_remember" type="checkbox" value="on"/>
<label for="Bugzilla_remember_bottom">Remember</label>
<input name="Bugzilla_login_token" type="hidden" value=""/>
<input id="log_in_bottom" name="GoAheadAndLogIn" type="submit" value="Log in"/>
<script type="text/javascript">
      mini_login_constants = {
          "login" : "login",
          "warning" : "You must set the login and password before logging in."
      };
      
      if (YAHOO.env.ua.gecko || YAHOO.env.ua.ie || YAHOO.env.ua.opera) {
          YAHOO.util.Event.onDOMReady(function() {
              init_mini_login_form('_bottom');
          });
      }
      else {
          YAHOO.util.Event.on(window, 'load', function () {
              window.setTimeout(function() {
                  init_mini_login_form('_bottom');
              }, 200);
          });
    }
    </script>
<a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
</form>
</li>
<li id="forgot_container_bottom">
<span class="separator">| </span>
<a href="show_bug.cgi?id=341323&amp;GoAheadAndLogIn=1#forgot" id="forgot_link_bottom" onclick="return show_forgot_form('_bottom')">Forgot Password</a>
<form action="token.cgi" class="mini_forgot bz_default_hidden" id="forgot_form_bottom" method="post">
<label for="login_bottom">Login:</label>
<input id="login_bottom" name="loginname" size="20" type="text"/>
<input id="forgot_button_bottom" type="submit" value="Reset Password"/>
<input name="a" type="hidden" value="reqpw"/>
<input id="token_bottom" name="token" type="hidden" value="1626107137-oXo8qUahbLww7z0fPb7BOA5409lqKZvEOdnbmCnN9qY"/>
<a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
</form>
</li>
</ul>
</li>
</ul>
<div class="outro"></div>
</div>
</body>
</html>