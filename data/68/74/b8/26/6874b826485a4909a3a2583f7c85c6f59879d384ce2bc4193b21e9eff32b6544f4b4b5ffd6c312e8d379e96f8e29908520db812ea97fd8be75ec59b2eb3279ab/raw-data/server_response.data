<!DOCTYPE html>
<html lang="en">
  <head>
    <title>1816 &ndash; (CVE-2021-28211) Possible heap corruption with LzmaUefiDecompressGetInfo</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="data/assets/75609f26e54e89ee3ae27c8744d7baad.css?1532037811" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1532037772"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "1816 – (CVE-2021-28211) Possible heap corruption with LzmaUefiDecompressGetInfo",
                             "show_bug.cgi?id=1816" );
        document.title = "1816 – (CVE-2021-28211) Possible heap corruption with LzmaUefiDecompressGetInfo";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "1816 – (CVE-2021-28211) Possible heap corruption with LzmaUefiDecompressGetInfo", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1532039702"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="TianoCore TianoCore Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugzilla-tianocore-org
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_Tianocore_Security_Issues
                 bz_component_Security_Issue
                 bz_bug_1816 yui-skin-sam">

  <div id="header"><div id="banner">
  </div>

    <div id="titles">
      <span id="title">TianoCore Bugzilla &ndash; Bug&nbsp;1816</span>

        <span id="subtitle" class="subheader">Possible heap corruption with LzmaUefiDecompressGetInfo</span>

        <span id="information" class="header_addl_info">Last modified: 2021-09-22 15:47:43 EDT</span>
    </div>


    <div id="common_links"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=1816&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=1816" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
      <input type="checkbox" id="Bugzilla_remember_top" 
             name="Bugzilla_remember" value="on" class="bz_remember"
             >
      <label for="Bugzilla_remember_top">Remember</label>
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=1816&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635630772-lKo6Z1MK46SAX8vxUXjeRgIXlTFRR7Su7XNUmnlD4bU">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2021-09-22 15:47:43">
  <input type="hidden" name="id" value="1816">
  <input type="hidden" name="token" value="1635630772-I9yaboke26aseg74t89HaLJuzXGXqOcOVJw-vR9H58I">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=1816"><b>Bug&nbsp;1816</b></a> <span id="summary_container" class="bz_default_hidden">
        (<span id="alias_nonedit_display">CVE-2021-28211</span>)
      - <span id="short_desc_nonedit_display">Possible heap corruption with LzmaUefiDecompressGetInfo</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>Possible heap corruption with LzmaUefiDecompressGetInfo
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'Possible heap corruption with LzmaUefiDecompressGetInfo' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>CVE-2021-28211
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Tianocore Security Issues

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Tianocore Security Issues"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >Security Issue

  (<a href="buglist.cgi?component=Security%20Issue&amp;product=Tianocore%20Security%20Issues&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>Current
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">All
        All
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>Normal
       normal
      </td>
    </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'unassigned\x40tianocore.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>


    <tr><th class="field_label "
    id="field_label_keywords">


  <a 
      title="You can add keywords from a defined list to bugs, in order to easily identify and group them."
      class="field_help_link"
      href="describekeywords.cgi"
  >Keywords:</a>

</th>
  <td class="field_value "
      id="field_container_keywords" >

</td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2019-05-15 13:55 EDT by <span class="vcard"><span class="fn">Satoshi Tanda</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2021-09-22 15:47 EDT
      (<a href="show_activity.cgi?id=1816">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>16 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="aionescu+efi">aionescu+efi</option>
                <option value="bret.barkelew">bret.barkelew</option>
                <option value="dandan.bi">dandan.bi</option>
                <option value="ericj">ericj</option>
                <option value="gaoliming">gaoliming</option>
                <option value="gsuckevi">gsuckevi</option>
                <option value="hao.a.wu">hao.a.wu</option>
                <option value="jian.j.wang">jian.j.wang</option>
                <option value="john.mathews">john.mathews</option>
                <option value="kevinj">kevinj</option>
                <option value="kimolsun2020">kimolsun2020</option>
                <option value="lersek">lersek</option>
                <option value="nathaniel.p.mitchell">nathaniel.p.mitchell</option>
                <option value="philmd">philmd</option>
                <option value="rschiron">rschiron</option>
                <option value="tanda.sat">tanda.sat</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr> 
<tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_industrystandardspecifications">


  <a 
      title="A custom Drop Down field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_industrystandardspecifications"
  >EDK II Code First industry standard specifications:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_industrystandardspecifications" >---

</td>
    </tr>
    <tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_branch">


  <a 
      title="Which github repository?"
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_branch"
  >Branch URL:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_branch" >

</td>
    </tr>
    <tr>
      <th class="field_label "
    id="field_label_cf_release_observed">


  <a 
      title="Release(s) the issue is observed"
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_release_observed"
  >Release(s) the issue is observed:</a>

</th>
  <td class="field_value "
      id="field_container_cf_release_observed" >edk2-stable202008

</td>
    </tr>
    <tr>
      <th class="field_label "
    id="field_label_cf_target_os">


  <a 
      title="The operating system the target platform is running when the issue is observed. If the issue is observed before an OS is booted, then use default '---'. Provide the detailed OS version information in the Description."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_target_os"
  >The OS the target platform is running:</a>

</th>
  <td class="field_value "
      id="field_container_cf_target_os" >---

</td>
    </tr>
    <tr>
      <th class="field_label "
    id="field_label_cf_package">


  <a 
      title="A custom Multiple-Selection Box field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_package"
  >Package:</a>

</th>
  <td class="field_value "
      id="field_container_cf_package" >IntelFrameworkModulePkg, MdeModulePkg

</td>
    </tr>
    <tr>
      <th class="field_label "
    id="field_label_cf_releases_to_fix">


  <a 
      title="Release(s) the issues must be fixed"
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_releases_to_fix"
  >Release(s) the issues must be fixed:</a>

</th>
  <td class="field_value "
      id="field_container_cf_releases_to_fix" >edk2-stable202011

</td>
    </tr>
    <tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_documents">


  <a 
      title="A custom Multiple-Selection Box field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_documents"
  >Tianocore documents:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_documents" >

</td>
    </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=564"
               title="View the content of the attachment">
          <b>[PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer sizes</b></a>

          <span class="bz_attach_extra_info">
              (3.85 KB,
                patch)

            <br>
            <a href="#attach_564"
               title="Go to the comment associated with the attachment">2020-09-28 12:22 EDT</a>,

            <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=564&amp;action=edit">Details</a>
            | <a href="attachment.cgi?id=564&amp;action=diff">Diff</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_application_json bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=658"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">CVE .json file</span></b></a>

          <span class="bz_attach_extra_info">
              (873 bytes,
                application/json)

            <br>
            <a href="#attach_658"
               title="Go to the comment associated with the attachment">2021-03-03 11:46 EST</a>,

            <span class="vcard">kevinj
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=658&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a3" class="bz_contenttype_application_json">
        <td>
            <a href="attachment.cgi?id=666"
               title="View the content of the attachment">
          <b>CVE .json file_2</b></a>

          <span class="bz_attach_extra_info">
              (907 bytes,
                application/json)

            <br>
            <a href="#attach_666"
               title="Go to the comment associated with the attachment">2021-03-04 14:29 EST</a>,

            <span class="vcard">kevinj
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=666&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
            <a href="#a0" onclick="return toggle_display(this);">Show
              Obsolete</a> (1)
        </span>
        <a href="attachment.cgi?bugid=1816&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=1816&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1458056812" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Satoshi Tanda</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-05-15 13:55:17 EDT
        </span>

      </div>




<pre class="bz_comment_text">The LzmaUefiDecompressGetInfo function fetches 8 bytes (64bit-wide) of the uncompressed data size from the LZMA header then silently drops the upper 32bit by casting it to UINT32. 

<a href="https://github.com/tianocore/edk2/blob/master/MdeModulePkg/Library/LzmaCustomDecompressLib/LzmaDecompress.c#L146">https://github.com/tianocore/edk2/blob/master/MdeModulePkg/Library/LzmaCustomDecompressLib/LzmaDecompress.c#L146</a>

Since the caller of the function typically allocates heap based on the reported size by this function to subsequently decompress data, the caller may allocate smaller buffer than necessary when the input LZMA headers is greater than 32bit-wide. For example, when the uncompressed size claimed in the header is 0x1_00000100, the LzmaUefiDecompressGetInfo function reports 0x100 to the caller. The caller would allocate that heap and call the LzmaUefiDecompress function. Because the LzmaUefiDecompress function fetches an uncompressed size from the header again which will be 0x1_00000100 and decompresses data accordingly (without taking the size of allocated buffer), it is possible to overflow the allocated heap during the decompression process. 

It is probably challenging to exploit this in code compiled into firmware as you need to control input in the first place, but the LzmaUefiDecompressGetInfo function may be used to 3rd party software that parses UEFI firmware image files. For example, UEFITool has its own copy of this function (and fixed it by themselves
<a href="https://github.com/LongSoft/UEFITool/commit/f507d71ead4dcc516d6be1b5b3cd61f900abb4a4#diff-fa8944f45e026a9e683e0f552b418626">https://github.com/LongSoft/UEFITool/commit/f507d71ead4dcc516d6be1b5b3cd61f900abb4a4#diff-fa8944f45e026a9e683e0f552b418626</a>).

I do not have an PoC firmware image and a standalone parser to demonstrate the issue handy, but hopefully, the issue is clear.</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Vincent Zimmer</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-05-29 12:46:37 EDT
        </span>

      </div>




<pre class="bz_comment_text">5/29/19 tianocore infosec bugscrub - brent h. to dig in further.
Kinney - looks like &gt; 4gb input data would cause issue
Brett - ok if 32-bit everywhere.  mixing would be an issue</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Bret Barkelew</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-05-29 12:47:14 EDT
        </span>

      </div>




<pre class="bz_comment_text">Bret*
;)</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">brent.holtsclaw
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-05-29 17:41:05 EDT
        </span>

      </div>




<pre class="bz_comment_text">It appears to be a security issue if using compilers size_t on a 64bit system. Suggest either casting to SizeT within LzmaUefiDecompressGetInfo or casting to UINT32 within LzmaUefiDecompress.

LzmaUefiDecompressGetInfo function casts DestinationSize to UINT32
..
DecodedSize = GetDecodedSizeOfBuf((UINT8*)Source);
*DestinationSize = (UINT32)DecodedSize;

LzmaUefiDecompress function casts DecodedBufSize to SizeT which appears to also be defined as UINTN
DecodedBufSize = (SizeT)GetDecodedSizeOfBuf((UINT8*)Source);
It then uses the DecodedBufSize in call to LzmaDecode
  LzmaResult = LzmaDecode(
    Destination,
    &amp;DecodedBufSize,
    (Byte*)((UINT8*)Source + LZMA_HEADER_SIZE),
    &amp;EncodedDataSize,
    Source,
    LZMA_PROPS_SIZE,
    LZMA_FINISH_END,
    &amp;Status,
    &amp;(AllocFuncs.Functions)
    )

Function LzmaDecode uses DecodedBufSize as the size of the destination buffer and also treats it as SizeT
SRes LzmaDecode(Byte *dest, SizeT *destLen, const Byte *src, SizeT *srcLen,
    const Byte *propData, unsigned propSize, ELzmaFinishMode finishMode,
    ELzmaStatus *status, ISzAlloc *alloc)

SizeT outSize = *destLen
p.dicBufSize = outSize;
res = LzmaDec_DecodeToDic(&amp;p, outSize, src, srcLen, finishMode, status);</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Bret Barkelew</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-06-25 16:48:12 EDT
        </span>

      </div>




<pre class="bz_comment_text">Agree with Brent about explicitly casting consistently in this library.</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-08-01 19:19:02 EDT
        </span>

      </div>




<pre class="bz_comment_text">(comment made against edk2 &#64; 3d34b5f32692)

I think I disagree about both impact (<a href="show_bug.cgi?id=1816#c0">comment 0</a>) and mitigation
(comments 3-4).

Regarding impact: 3rd party UEFI binaries may be LZMA compressed. They
are decompressed before e.g. secure boot image verification. This means
that a crafted EFI binary can look small but cause buffer overflow in
section extraction, before validation. A similar issue was <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - Improper bounds checking within Tianocompress and Ueficompress leads to heap and stack based overflow"
   href="show_bug.cgi?id=686">bug 686</a>,
which merited multiple CVE numbers.

(In particular, see:
- <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - Improper bounds checking within Tianocompress and Ueficompress leads to heap and stack based overflow"
   href="show_bug.cgi?id=686#c13">https://bugzilla.tianocore.org/show_bug.cgi?id=686#c13</a>
- <a href="https://lists.01.org/pipermail/edk2-devel/2018-October/031095.html">https://lists.01.org/pipermail/edk2-devel/2018-October/031095.html</a>
- <a href="https://lists.01.org/pipermail/edk2-devel/2018-October/031138.html">https://lists.01.org/pipermail/edk2-devel/2018-October/031138.html</a>
)

Regarding mitigation:

- I don't think we should ever truncate to UINT32 if he input is
  provided as UINT64. (As a special case, I don't think we should
  truncate to UINT32 within LzmaUefiDecompress().)

- Outputting UINT64 from LzmaUefiDecompressGetInfo() is theoretically
  safe, but messy in practice. While LzmaUefiDecompressGetInfo() is
  indeed an internal function, declared in:

    MdeModulePkg/Library/LzmaCustomDecompressLib/LzmaDecompressLibInternal.h

  its output parameter called &quot;DestinationSize&quot; is directly propagated
  out of two public functions. Namely (all pathnames relative to
  &quot;MdeModulePkg/Library/LzmaCustomDecompressLib&quot;):

  - LzmaGuidedSectionGetInfo()   [GuidedSectionExtraction.c]
  - LzmaArchGuidedSectionGetInfo [F86GuidedSectionExtraction.c]

  Both of these functions are registered with the
  ExtractGuidedSectionRegisterHandlers() API of the
  ExtractGuidedSectionLib class.

  The registered functions need to conform to the
  EXTRACT_GUIDED_SECTION_GET_INFO_HANDLER type.

  The registered functions are searched for, and called, through the
  public ExtractGuidedSectionGetInfo() API, from:

    MdePkg/Include/Library/ExtractGuidedSectionLib.h

  The ExtractGuidedSectionGetInfo() function is called from several
  places in edk2. I guess the most important could be that the DXE Core
  uses ExtractGuidedSectionGetInfo() for implementing
  EFI_GUIDED_SECTION_EXTRACTION_PROTOCOL -- see
  &quot;MdeModulePkg/Core/Dxe/SectionExtraction/CoreSectionExtraction.c&quot;.

  This protocol comes from the PI spec, and the &quot;OutputSize&quot; output
  parameter has type UINTN. Therefore, even if all the internal
  propagation of the original &quot;DecodedSize&quot; were widened correctly to
  64-bit, the PI protocol would still be a bottleneck on 32-bit
  architectures.

  Therefore, I would catch &gt;= 4GB DestinationSize values right in
  LzmaUefiDecompressGetInfo(), and return an error. The function's
  return type is already RETURN_STATUS, and all of the call sites
  correctly propagate errors. This wouldn't enable edk2 to extract
  GUIDed (LZMA) sections larger than 4GB, but we'd replace the potential
  buffer overflow with clean errors, at minimal cost to dependent code.
  (4GB+ GUIDed sections are clearly not needed in practice.)</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-08-09 09:42:31 EDT
        </span>

      </div>




<pre class="bz_comment_text">The CustomGuidedSectionExtract() function in &quot;MdeModulePkg/Core/Dxe/SectionExtraction/CoreSectionExtraction.c&quot; at commit 4b1b7c191309 is vulnerable to the exact issue described in <a href="show_bug.cgi?id=1816#c0">comment 0</a>; therefore I'm marking this as CONFIRMED.

  UINT32          OutputBufferSize;
...
  Status = ExtractGuidedSectionGetInfo (
             InputSection,
             &amp;OutputBufferSize,
             &amp;ScratchBufferSize,
             &amp;SectionAttribute
             );
...
  if (OutputBufferSize &gt; 0) {
    //
    // Allocate output buffer
    //
    AllocatedOutputBuffer = AllocatePool (OutputBufferSize);
...
    *OutputBuffer = AllocatedOutputBuffer;
  }
...
  Status = ExtractGuidedSectionDecode (
             InputSection,
             OutputBuffer,
             ScratchBuffer,
             AuthenticationStatus
             );

and see <a href="show_bug.cgi?id=1816#c3">comment 3</a> for where the last function call quoted above ends.</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alex Ionescu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-07-01 16:29:05 EDT
        </span>

      </div>




<pre class="bz_comment_text">Any plan on actually fixing this issue? It seems to be bouncing around. Since it seems to have real security merit, perhaps we should plan a disclosure timeline since many 3rd party libraries are affected.</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-25 11:30:39 EDT
        </span>

      </div>




<pre class="bz_comment_text">I'll try to propose a patch (as an attachment) next week.</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-28 12:22:25 EDT
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=564&amp;action=diff" name="attach_564" title="[PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer sizes">attachment 564</a> <a href="attachment.cgi?id=564&amp;action=edit" title="[PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer sizes">[details]</a></span>
[PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer sizes

Proposed patch, applies on top of commit 1d058c3e86b0 (&quot;IntelFsp2Pkg GenCfgOpt.py: Initialize IncLines as empty list&quot;, 2020-09-25).</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-28 12:26:06 EDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Laszlo Ersek from <a href="show_bug.cgi?id=1816#c9">comment #9</a>)
<span class="quote">&gt; Created <span class=""><a href="attachment.cgi?id=564&amp;action=diff" name="attach_564" title="[PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer sizes">attachment 564</a> <a href="attachment.cgi?id=564&amp;action=edit" title="[PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer sizes">[details]</a></span>
&gt; [PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer
&gt; sizes
&gt; 
&gt; Proposed patch, applies on top of commit 1d058c3e86b0 (&quot;IntelFsp2Pkg
&gt; GenCfgOpt.py: Initialize IncLines as empty list&quot;, 2020-09-25).</span >

Cc: Dandan Bi &lt;<a href="mailto:dandan.bi&#64;intel.com">dandan.bi&#64;intel.com</a>&gt;
Cc: Hao A Wu &lt;<a href="mailto:hao.a.wu&#64;intel.com">hao.a.wu&#64;intel.com</a>&gt;
Cc: Jian J Wang &lt;<a href="mailto:jian.j.wang&#64;intel.com">jian.j.wang&#64;intel.com</a>&gt;
Cc: Liming Gao &lt;<a href="mailto:gaoliming&#64;byosoft.com.cn">gaoliming&#64;byosoft.com.cn</a>&gt;
Cc: Philippe Mathieu-Daudé &lt;<a href="mailto:philmd&#64;redhat.com">philmd&#64;redhat.com</a>&gt;

Please review.

Note: I have only regression-tested this patch, using OVMF's automatic LZMA decompression (covering PEIFV and DXEFV) during boot, and S3 resume. (See the message on commit b24fca05751f for a few more details on PEIFV and DXEFV.)</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alex Ionescu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-28 14:46:34 EDT
        </span>

      </div>




<pre class="bz_comment_text">Thanks for the patch.

Team/Vincent -- would it help to get a CVE assigned? I can work with MITRE on that...</pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">gaoliming
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-28 21:29:37 EDT
        </span>

      </div>




<pre class="bz_comment_text">I agree this fix. Reviewed-by: Liming Gao &lt;<a href="mailto:gaoliming&#64;byosoft.com.cn">gaoliming&#64;byosoft.com.cn</a>&gt;</pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-29 14:56:01 EDT
        </span>

      </div>




<pre class="bz_comment_text">Hi Alex,

(In reply to Alex Ionescu from <a href="show_bug.cgi?id=1816#c11">comment #11</a>)
<span class="quote">&gt; Thanks for the patch.
&gt; 
&gt; Team/Vincent -- would it help to get a CVE assigned? I can work with MITRE
&gt; on that...</span >

I agree that a CVE should be assigned (see my reference to <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - Improper bounds checking within Tianocompress and Ueficompress leads to heap and stack based overflow"
   href="show_bug.cgi?id=686">bug#686</a> in <a href="show_bug.cgi?id=1816#c5">comment#5</a> above).

Luckily, TianoCore has recently become a CNA &lt;<a href="https://cve.mitre.org/cve/request_id.html#t">https://cve.mitre.org/cve/request_id.html#t</a>&gt; thanks to the work of the infosec group. From Vincent's announcement on the edk2-infosec mailing list, &quot;Points of contact for infosec and CVE's will include Kevin Davis from Insyde, Eric Johnson from AMI, Dick Wilkins from Phoenix, and Vincent Zimmer from Intel&quot;. So (I think?) we need not contact an external org for assigning a CVE.

Thanks.</pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-29 14:58:27 EDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to gaoliming from <a href="show_bug.cgi?id=1816#c12">comment #12</a>)
<span class="quote">&gt; I agree this fix. Reviewed-by: Liming Gao &lt;<a href="mailto:gaoliming&#64;byosoft.com.cn">gaoliming&#64;byosoft.com.cn</a>&gt;</span >

Thank you, Liming!

So if there are no more comments on the patch, I think we should set up an embargo end date, so that people can start applying the patch.

Once the embargo elapses, I'll post the patch to edk2-devel for public review, with your R-b from <a href="show_bug.cgi?id=1816#c12">comment#12</a> included. Thanks!</pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alex Ionescu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-29 17:23:31 EDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Laszlo Ersek from <a href="show_bug.cgi?id=1816#c13">comment #13</a>)
<span class="quote">&gt; Hi Alex,
&gt; 
&gt; (In reply to Alex Ionescu from <a href="show_bug.cgi?id=1816#c11">comment #11</a>)
&gt; &gt; Thanks for the patch.
&gt; &gt; 
&gt; &gt; Team/Vincent -- would it help to get a CVE assigned? I can work with MITRE
&gt; &gt; on that...
&gt; 
&gt; I agree that a CVE should be assigned (see my reference to <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - Improper bounds checking within Tianocompress and Ueficompress leads to heap and stack based overflow"
   href="show_bug.cgi?id=686">bug#686</a> in
&gt; <a href="show_bug.cgi?id=1816#c5">comment#5</a> above).
&gt; 
&gt; Luckily, TianoCore has recently become a CNA
&gt; &lt;<a href="https://cve.mitre.org/cve/request_id.html#t">https://cve.mitre.org/cve/request_id.html#t</a>&gt; thanks to the work of the
&gt; infosec group. From Vincent's announcement on the edk2-infosec mailing list,
&gt; &quot;Points of contact for infosec and CVE's will include Kevin Davis from
&gt; Insyde, Eric Johnson from AMI, Dick Wilkins from Phoenix, and Vincent Zimmer
&gt; from Intel&quot;. So (I think?) we need not contact an external org for assigning
&gt; a CVE.
&gt; 
&gt; Thanks.</span >

That's awesome. Let me know if this is something I need to ping Vincent on or if it will be handled automatically as part of the bug/triage process. I want to make sure the bug will be correctly credited to Satoshi Tanda -- CrowdStrike and to be aware of disclosure timeline so that we can also absorb the patch in our own product -- for now we used a workaround to avoid showcasing the issue (it's a closed-source component).</pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-10-01 03:33:42 EDT
        </span>

      </div>




<pre class="bz_comment_text">According to the flowchart at

<a href="https://github.com/tianocore/tianocore.github.io/wiki/Reporting-Security-Issues">https://github.com/tianocore/tianocore.github.io/wiki/Reporting-Security-Issues</a>

(direct link: &lt;<a href="https://raw.githubusercontent.com/jwang36/tianocore.github.io/master/security/flowchart.svg">https://raw.githubusercontent.com/jwang36/tianocore.github.io/master/security/flowchart.svg</a>&gt;)

from phase 2, we're still missing the CVSS evaluation step on this BZ. Once that is done (or may in parallel to it), we should indeed figure out the embargo length (phase 3), and get a CVE number (for phase 4).

I'm going to send an email to the edk2-infosec mailing list now, CC'ing the CVE contacts, about this BZ. Thanks.</pre>
    </div>

    <div id="c17" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Philippe Mathieu-Daudé</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-10-07 07:17:09 EDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Laszlo Ersek from <a href="show_bug.cgi?id=1816#c9">comment #9</a>)
<span class="quote">&gt; Created <span class=""><a href="attachment.cgi?id=564&amp;action=diff" name="attach_564" title="[PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer sizes">attachment 564</a> <a href="attachment.cgi?id=564&amp;action=edit" title="[PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer sizes">[details]</a></span>
&gt; [PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer
&gt; sizes
&gt; 
&gt; Proposed patch, applies on top of commit 1d058c3e86b0 (&quot;IntelFsp2Pkg
&gt; GenCfgOpt.py: Initialize IncLines as empty list&quot;, 2020-09-25).</span >

Reviewed-by: Philippe Mathieu-Daude &lt;<a href="mailto:philmd&#64;redhat.com">philmd&#64;redhat.com</a>&gt;</pre>
    </div>

    <div id="c18" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-10-07 11:52:56 EDT
        </span>

      </div>




<pre class="bz_comment_text">Thank you, Phil!</pre>
    </div>

    <div id="c19" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-11-12 12:16:52 EST
        </span>

      </div>




<pre class="bz_comment_text">PROPOSED PUBLIC DATE (opening up the BZ and posting the patch to edk2-devel):

  Thursday 2020-Nov-19 07:00 UTC

in order to get the fix into edk2-stable202011.</pre>
    </div>

    <div id="c20" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Riccardo Schirone</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-11-13 06:14:53 EST
        </span>

      </div>




<pre class="bz_comment_text">Is this going to have a CVE before it goes public?</pre>
    </div>

    <div id="c21" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-11-13 15:21:13 EST
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Riccardo Schirone from <a href="show_bug.cgi?id=1816#c20">comment #20</a>)
<span class="quote">&gt; Is this going to have a CVE before it goes public?</span >

CC'ing Eric.</pre>
    </div>

    <div id="c22" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-11-19 06:53:01 EST
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Laszlo Ersek from <a href="show_bug.cgi?id=1816#c9">comment #9</a>)
<span class="quote">&gt; Created <span class=""><a href="attachment.cgi?id=564&amp;action=diff" name="attach_564" title="[PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer sizes">attachment 564</a> <a href="attachment.cgi?id=564&amp;action=edit" title="[PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer sizes">[details]</a></span>
&gt; [PATCH] MdeModulePkg/LzmaCustomDecompressLib: catch 4GB+ uncompressed buffer
&gt; sizes
&gt; 
&gt; Proposed patch, applies on top of commit 1d058c3e86b0 (&quot;IntelFsp2Pkg
&gt; GenCfgOpt.py: Initialize IncLines as empty list&quot;, 2020-09-25).</span >

Public posting:

* [edk2-devel] [PATCH RESEND 0/1]
  security fix: possible heap corruption with LzmaUefiDecompressGetInfo

msgid &lt;<a href="mailto:20201119115034.12897-1-lersek&#64;redhat.com">20201119115034.12897-1-lersek&#64;redhat.com</a>&gt;
<a href="https://edk2.groups.io/g/devel/message/67708">https://edk2.groups.io/g/devel/message/67708</a>
<a href="https://www.redhat.com/archives/edk2-devel-archive/2020-November/msg00866.html">https://www.redhat.com/archives/edk2-devel-archive/2020-November/msg00866.html</a></pre>
    </div>

    <div id="c23" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alex Ionescu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-11-19 11:25:12 EST
        </span>

      </div>




<pre class="bz_comment_text">&#64;Ericj -- what's the CVE/Ack for this? I see this is now public.</pre>
    </div>

    <div id="c24" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c24">Comment 24</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-11-20 21:06:10 EST
        </span>

      </div>




<pre class="bz_comment_text">Merged as commit e7bd0dd26db7, via &lt;<a href="https://github.com/tianocore/edk2/pull/1138">https://github.com/tianocore/edk2/pull/1138</a>&gt;.</pre>
    </div>

    <div id="c25" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c25">Comment 25</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">kevinj
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-03 11:46:54 EST
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=658" name="attach_658" title="CVE .json file">attachment 658</a> <a href="attachment.cgi?id=658&amp;action=edit" title="CVE .json file">[details]</a></span>
CVE .json file

I have attached the .json file for CVE classification. Please review and provide feedback, especially for the version.</pre>
    </div>

    <div id="c26" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c26">Comment 26</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-03 12:02:57 EST
        </span>

      </div>




<pre class="bz_comment_text">Hello Kevin,

last vulnerable release: edk2-stable202008
first fixed release:     edk2-stable202011

$ git tag --contains e7bd0dd26db7
edk2-stable202011</pre>
    </div>

    <div id="c27" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c27">Comment 27</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-03 12:05:23 EST
        </span>

      </div>




<pre class="bz_comment_text">Upon reviewing commit e7bd0dd26db7, I think CWE-122 is a good match.</pre>
    </div>

    <div id="c28" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c28">Comment 28</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">kevinj
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-04 14:29:59 EST
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=666" name="attach_666" title="CVE .json file_2">attachment 666</a> <a href="attachment.cgi?id=666&amp;action=edit" title="CVE .json file_2">[details]</a></span>
CVE .json file_2

Thank you Laszlo for your feedback. I have updated the version in the .json file and re-uploaded it.</pre>
    </div>

    <div id="c29" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c29">Comment 29</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alex Ionescu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-10 09:26:36 EST
        </span>

      </div>




<pre class="bz_comment_text">Hi,

Still wondering when it's possible to have the CVE assigned? This has almost taken two years now since reporting.</pre>
    </div>

    <div id="c30" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c30">Comment 30</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">kevinj
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-11 16:59:03 EST
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Alex Ionescu from <a href="show_bug.cgi?id=1816#c29">comment #29</a>)
<span class="quote">&gt; Hi,
&gt; 
&gt; Still wondering when it's possible to have the CVE assigned? This has almost
&gt; taken two years now since reporting.</span >

We have requested CVE-IDs from MITRE. We are still waiting to receive said ID number from them.</pre>
    </div>

    <div id="c31" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c31">Comment 31</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-12 16:03:49 EST
        </span>

      </div>




<pre class="bz_comment_text">Thanks for the CVE number, Kevin!</pre>
    </div>

    <div id="c32" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c32">Comment 32</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">kevinj
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-12 16:05:15 EST
        </span>

      </div>




<pre class="bz_comment_text">Laszlo,

Please review the .json file again, especially the version this bug is observed in and inform me when you plan to publicly disclose this bug, so we know when to submit this CVE back to MITRE. Thank you!</pre>
    </div>

    <div id="c33" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c33">Comment 33</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-12 16:56:54 EST
        </span>

      </div>




<pre class="bz_comment_text">The release info (edk2-stable202008) in the JSON from <a href="show_bug.cgi?id=1816#c28">comment 28</a> seems OK, matching my <a href="show_bug.cgi?id=1816#c26">comment 26</a>.

Regarding public disclosure, we're past that -- please see <a href="show_bug.cgi?id=1816#c19">comment 19</a> and <a href="show_bug.cgi?id=1816#c22">comment 22</a>. The issue was disclosed on November 19, 2020.</pre>
    </div>

    <div id="c34" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c34">Comment 34</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alex Ionescu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-12 17:09:26 EST
        </span>

      </div>




<pre class="bz_comment_text">Since TianoCore is a CNA, I'm unclear why you're contacting MITRE to get a CVE -- can't Tiano issue one directly?

Additionally, when will the information be published here:

<a href="https://edk2-docs.gitbook.io/security-advisory/">https://edk2-docs.gitbook.io/security-advisory/</a></pre>
    </div>

    <div id="c35" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c35">Comment 35</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Satoshi Tanda</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-04-18 14:27:24 EDT
        </span>

      </div>




<pre class="bz_comment_text">Just noticed CVE-2021-28211 was assigned. It is still reserved in MITRE, but some vendors have public info 
<a href="https://access.redhat.com/security/cve/CVE-2021-28211">https://access.redhat.com/security/cve/CVE-2021-28211</a></pre>
    </div>

    <div id="c36" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1816#c36">Comment 36</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Kim Olsun</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-09-22 15:47:43 EDT
        </span>

      </div>




<pre class="bz_comment_text"><a href="http://www.compilatori.com/tech/nvidia-and-samsung/">http://www.compilatori.com/tech/nvidia-and-samsung/</a>	<a href="http://www.wearelondonmade.com/tech/nvidia-and-samsung/">http://www.wearelondonmade.com/tech/nvidia-and-samsung/</a>	<a href="http://www.jopspeech.com/tech/nvidia-and-samsung/">http://www.jopspeech.com/tech/nvidia-and-samsung/</a>	<a href="http://joerg.li/tech/nvidia-and-samsung/">http://joerg.li/tech/nvidia-and-samsung/</a>	<a href="http://connstr.net/tech/nvidia-and-samsung/">http://connstr.net/tech/nvidia-and-samsung/</a>	<a href="http://embermanchester.uk/tech/nvidia-and-samsung/">http://embermanchester.uk/tech/nvidia-and-samsung/</a>	<a href="http://www.slipstone.co.uk/tech/nvidia-and-samsung/">http://www.slipstone.co.uk/tech/nvidia-and-samsung/</a>	<a href="http://www.logoarts.co.uk/tech/nvidia-and-samsung/">http://www.logoarts.co.uk/tech/nvidia-and-samsung/</a>	<a href="http://www.acpirateradio.co.uk/health/covid-and-tech/">http://www.acpirateradio.co.uk/health/covid-and-tech/</a>	<a href="https://waytowhatsnext.com/category/services/">https://waytowhatsnext.com/category/services/</a>	<a href="https://www.webb-dev.co.uk/category/shopping/">https://www.webb-dev.co.uk/category/shopping/</a>	<a href="http://www.iu-bloomington.com/category/services/">http://www.iu-bloomington.com/category/services/</a>	<a href="http://www-look-4.com/tech/nvidia-and-samsung/">http://www-look-4.com/tech/nvidia-and-samsung/</a></pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=1816">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=1816">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=1816">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=1816&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=1816" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
      <input type="checkbox" id="Bugzilla_remember_bottom" 
             name="Bugzilla_remember" value="on" class="bz_remember"
             >
      <label for="Bugzilla_remember_bottom">Remember</label>
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=1816&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635630772-lKo6Z1MK46SAX8vxUXjeRgIXlTFRR7Su7XNUmnlD4bU">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>