<!DOCTYPE html>
<html lang="en">
  <head>
    <title>14472 &ndash; Crafted HTTP traffic causes tshark to abort</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link href="data/assets/64b49332a92937374625c24ed9a89c85.css?1635022386" rel="stylesheet" type="text/css">

<link href="data/assets/f6911ed8e5a97f108734d9324cb6bd67.css?1635022386" rel="stylesheet" type="text/css">

    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1635022386"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "14472 – Crafted HTTP traffic causes tshark to abort",
                             "show_bug.cgi?id=14472" );
        document.title = "14472 – Crafted HTTP traffic causes tshark to abort";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "14472 – Crafted HTTP traffic causes tshark to abort", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1635022386"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-wireshark-org-bugzilla
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_Wireshark
                 bz_component_Dissection_engine_&#X28;libwireshark&#X29;
                 bz_bug_14472 yui-skin-sam">

  <div id="header"><div id="banner">
      <a href="/bugzilla/"><img id="badge" src="/image/wsbadge-bug@186x57.png"></a>
      <span id="banner-text">
        Wireshark Bug Database &ndash; Bug&nbsp;14472
      </span>
      <div id="subtitle">
        <p class="subheader">Crafted HTTP traffic causes tshark to abort</p>
      </div>

       <div id="motd_yellow">

<p>
This Bugzilla instance was migrated to <a href="https://gitlab.com/wireshark/wireshark">GitLab</a> on Sunday, August 23.
</p>


<p>
This bug has been migrated to <a href="https://gitlab.com/wireshark/wireshark/-/issues/14472">issue 14472</a> in the <a href="https://gitlab.com/wireshark/wireshark/-/issues">GitLab issue tracker</a>.
It can be viewed and updated there.
</p>


</p>

<p>
See the <a href="https://gitlab.com/wireshark/gitlab-migration/wikis/home">migration wiki</a> for more details.
</p>

       </div>


    </div>

<!-- WS: Title info is in the banner
    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;14472</span>
  
        <span id="subtitle" class="subheader">Crafted HTTP traffic causes tshark to abort</span>

        <span id="information" class="header_addl_info">Last modified: 2018-03-21 10:47:26 UTC</span>
    </div>
  -->


    <div id="common_links"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=14472&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=14472" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=14472&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635621377-S_Svh0k2x2fWk2MxH8v2isO3PD9-8LNdkvboEQAcprg">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2018-03-21 10:47:26">
  <input type="hidden" name="id" value="14472">
  <input type="hidden" name="token" value="1635621377-IHfvOCzLrrNAhl3g_Zb2WFqQdW4EVvo2DnmsWqJilT0">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=14472"><b>Bug&nbsp;14472</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">Crafted HTTP traffic causes tshark to abort</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>Crafted HTTP traffic causes tshark to abort
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'Crafted HTTP traffic causes tshark to abort' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Wireshark

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Wireshark"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >Dissection engine (libwireshark)

  (<a href="buglist.cgi?component=Dissection%20engine%20(libwireshark)&amp;product=Wireshark&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>Git
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">x86
        Linux
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>Low
       Major<span id="votes_container">
    (<a href="page.cgi?id=voting/user.html&amp;bug_id=14472#vote_14472">vote</a>)
  </span>
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Bugzilla Administrator</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'bugzilla-admin\x40wireshark.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2018-03-02 09:31 UTC by <span class="vcard">otto.airamo
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2018-03-21 10:47 UTC
      (<a href="show_activity.cgi?id=14472">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>2 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="pascal">pascal</option>
                <option value="peter">peter</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr> 

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_application_vnd.tcpdump.pcap">
        <td>
            <a href="attachment.cgi?id=16180"
               title="View the content of the attachment">
          <b>recording</b></a>

          <span class="bz_attach_extra_info">
              (2.58 KB,
                application/vnd.tcpdump.pcap)

            <br>
            <a href="#attach_16180"
               title="Go to the comment associated with the attachment">2018-03-02 09:31 UTC</a>,

            <span class="vcard">otto.airamo
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=16180&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_application_vnd.tcpdump.pcap">
        <td>
            <a href="attachment.cgi?id=16210"
               title="View the content of the attachment">
          <b>Crafted crash reproducer</b></a>

          <span class="bz_attach_extra_info">
              (261 bytes,
                application/vnd.tcpdump.pcap)

            <br>
            <a href="#attach_16210"
               title="Go to the comment associated with the attachment">2018-03-11 15:21 UTC</a>,

            <span class="vcard"><span class="fn">Peter Wu</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=16210&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
        </span>
        <a href="attachment.cgi?bugid=14472&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=14472&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1490378926" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">otto.airamo
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-02 09:31:14 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=16180" name="attach_16180" title="recording">attachment 16180</a> <a href="attachment.cgi?id=16180&amp;action=edit" title="recording">[details]</a></span>
recording

Build Information:
TShark (Wireshark) 2.5.1 (<a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=24b5a553">v2.5.1rc0-417-g24b5a553</a>)
Built using clang 4.2.1 Compatible Clang 3.8.0 (tags/RELEASE_380/final).
--
gdb output:

ERROR:print.c:1758:get_field_data: code should not be reached

Thread 1 &quot;tshark&quot; received signal SIGABRT, Aborted.
0x00007fffe1c31428 in __GI_raise (sig=sig&#64;entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54
54	../sysdeps/unix/sysv/linux/raise.c: No such file or directory.
(gdb) bt
#0  0x00007fffe1c31428 in __GI_raise (sig=sig&#64;entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54
#1  0x00007fffe1c3302a in __GI_abort () at abort.c:89
#2  0x00007fffe2fd9d65 in g_assertion_message () from /lib/x86_64-linux-gnu/libglib-2.0.so.0
#3  0x00007fffe2fd9dfa in g_assertion_message_expr () from /lib/x86_64-linux-gnu/libglib-2.0.so.0
#4  0x00007fffeb3e3192 in get_field_data (src_list=&lt;optimized out&gt;, fi=&lt;optimized out&gt;) at print.c:1758
#5  0x00007fffeb3d0faa in proto_tree_print_node (node=&lt;optimized out&gt;, data=&lt;optimized out&gt;) at print.c:218
#6  0x00007fffeb3f0b7d in proto_tree_children_foreach (tree=&lt;optimized out&gt;, func=&lt;optimized out&gt;, data=&lt;optimized out&gt;) at proto.c:691
#7  0x00007fffeb3d12b2 in proto_tree_print_node (node=&lt;optimized out&gt;, data=&lt;optimized out&gt;) at print.c:241
#8  0x00007fffeb3f0b7d in proto_tree_children_foreach (tree=&lt;optimized out&gt;, func=&lt;optimized out&gt;, data=&lt;optimized out&gt;) at proto.c:691
#9  0x00007fffeb3d06c8 in proto_tree_print (print_dissections=print_dissections_expanded, print_hex=0, edt=&lt;optimized out&gt;, output_only_tables=0x0, stream=0x7fffffffd630) at print.c:155
#10 0x000000000052432e in print_packet (cf=&lt;optimized out&gt;, edt=&lt;optimized out&gt;) at tshark.c:3910
#11 0x000000000051932e in process_packet_second_pass (cf=&lt;optimized out&gt;, edt=&lt;optimized out&gt;, fdata=&lt;optimized out&gt;, rec=&lt;optimized out&gt;, buf=&lt;optimized out&gt;, tap_flags=&lt;optimized out&gt;) at tshark.c:3024
#12 process_cap_file (cf=&lt;optimized out&gt;, save_file=&lt;optimized out&gt;, out_file_type=&lt;optimized out&gt;, out_file_name_res=&lt;optimized out&gt;, max_packet_count=&lt;optimized out&gt;, max_byte_count=&lt;optimized out&gt;)
    at tshark.c:3268
#13 main (argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;) at tshark.c:2033
(gdb)

Credit goes to: Otto Airamo and Antti Levomäki, Forcepoint</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Pascal Quantin</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-04 20:17:11 UTC
        </span>

      </div>




<pre class="bz_comment_text">I cannot reproduce it with <a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=b99b9b81">v2.5.1rc0-451-gb99b9b81</a>.
Could you please verify if you can reproduce it with current top of tree, and if yes could you share your Wireshark user profile?</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">otto.airamo
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-05 07:13:13 UTC
        </span>

      </div>




<pre class="bz_comment_text">I pulled latest changes:
<a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=dd21b8130c6470d2d5076fcc46d5e9c3866f4609">commit dd21b8130c6470d2d5076fcc46d5e9c3866f4609</a>

Compiled:
export CC=clang
export CXX=clang++
export CFLAGS=&quot;-g -O2 -fsanitize=address -fsanitize-coverage=edge -fno-omit-frame-pointer&quot;
export CXXFLAGS=&quot;-g -O2 -fsanitize=address -fsanitize-coverage=edge -fno-omit-frame-pointer&quot;
export CPPFLAGS=&quot;-g -O2 -fsanitize=address -fsanitize-coverage=edge -fno-omit-frame-pointer&quot;
export LDFLAGS=&quot;-g -fsanitize=address -fsanitize-coverage=edge&quot;

./autogen.sh
./configure --enable-static=no --enable-shared=yes --enable-wireshark=no --enable-editcap=no --enable-capinfos=no --enable-mergecap=no --enable-reordercap=no --enable-text2pcap=no --enable-dftest=no --enable-randpkt=no --enable-dumpcap=yes --enable-rawshark=no
make

Executed command:
tshark -2 -V -r 565c34461815a4dc3ec8d603ad273bb5.pcap

Sorry, original post was missing tshark command.</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Pascal Quantin</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-05 15:58:07 UTC
        </span>

      </div>




<pre class="bz_comment_text">Using clang (instead of gcc) with the options provided allows to reproduce the issue.</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Peter Wu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-09 15:58:53 UTC
        </span>

      </div>




<pre class="bz_comment_text">Reproduced with <a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=1ac90d5254">v2.5.1rc0-544-g1ac90d5254</a> using Clang 5.0.1 and:
tshark -r 565c34461815a4dc3ec8d603ad273bb5.pcap -V

Possible relevant information about the capture:
Frame 1 has seqno 1, len = 1206, nextseq=1207
Frame 2 has seqno 4261299399 (0xfdfe44c7), len=0 (marked as out-of-order)
Frame 3 has seqno 1207 (len=1204)

For some weird reason, &quot;src_list&quot; contains only one data source (Frame) while &quot;fi-&gt;ds_tvb&quot; was allocated via desegmented TCP data:

(gdb) down
#4  0x00007fffecc3a4eb in get_field_data (src_list=0x60200044b1f0 = {...}, fi=0x60800003bc20) at epan/print.c:1758
1758        g_assert_not_reached();
(gdb) p fi-&gt;ds_tvb
$5 = (tvbuff_t *) 0x6070000d3980
(gdb) p (void)__asan_describe_address (0x6070000d3980)
0x6070000d3980 is located 0 bytes inside of 72-byte region [0x6070000d3980,0x6070000d39c8)
allocated by thread T0 here:
    #0 0x5555556ef771 in malloc (run/tshark+0x19b771)
    #1 0x7fffdebf35a9 in g_malloc /build/src/glib/glib/gmem.c:94
    #2 0x7fffece37e73 in tvb_new_with_subset epan/tvbuff_subset.c:101:18
    #3 0x7fffece3948c in tvb_new_proxy epan/tvbuff_subset.c:214:9
    #4 0x7fffece188c5 in tvb_new_chain epan/tvbuff.c:131:18
    #5 0x7fffeb242306 in desegment_tcp epan/dissectors/packet-tcp.c:3183:24
    #6 0x7fffeb23ef8b in dissect_tcp_payload epan/dissectors/packet-tcp.c:5684:9
    #7 0x7fffeb2610fa in dissect_tcp epan/dissectors/packet-tcp.c:6522:13
...
(gdb) p src_list
$10 = 0x60200044b1f0 = {0x60200044b1b0}
(gdb) p *(struct data_source*)src_list[0]-&gt;data
$14 = {tvb = 0x6080000383a0, name = 0x60200044b1d0 &quot;Frame&quot;}
(gdb) p (void) __asan_describe_address (0x6080000383a0)
0x6080000383a0 is located 0 bytes inside of 88-byte region [0x6080000383a0,0x6080000383f8)
allocated by thread T0 here:
    #0 0x5555556ef771 in malloc (run/tshark+0x19b771)
    #1 0x7fffdebf35a9 in g_malloc /build/src/glib/glib/gmem.c:94
    #2 0x555555802b02 in frame_tvbuff_new frame_tvbuff.c:169:8
    #3 0x55555575789d in process_packet_single_pass tshark.c:3523:32
    #4 0x555555750bd7 in process_cap_file tshark.c:3348:11
    #5 0x555555748586 in main tshark.c:2029:17

Since the TCP tvb is not added as data source, I would have expected it to use the frame tvb instead but clearly that is not happening. The data source was not visible because &quot;remove_last_data_source&quot; actually removed it.

Initial guess: to fix this issue, we must ensure that the tvb that was removed by remove_last_data_source is not used anywhere.</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Peter Wu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-09 17:31:22 UTC
        </span>

      </div>




<pre class="bz_comment_text">More details:
remove_last_data_source was added in <a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=21e0a63b29">v1.11.3-rc1-1525-g21e0a63b29</a> to resolve <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED"
   href="show_bug.cgi?id=9169">bug 9169</a>.

If you disable TCP reassembly for subdissectors, you'll actually find a full HTTP response in packet 1. In packet 3, there is no Content-Length header, so the HTTP dissector tries reassembly via
desegment_len=DESEGMENT_ONE_MORE_SEGMENT and
desegment_offset=1206 (the length of TCP segment in frame 1?!)

Also confirmed that none of trigger the crash:
- The order is important, packets 2-1-3 do not trigger the problem.
- Changing seqno of packet 2 (to match packet 1).
- Removal of packet 1 or 2, each packet seems significant.
- Removing SYN from packet 2 (and on top of that, changing seqno to match packet 1).

Further investigation showed the following that explains why packet 1 does not have a HTTP message:
In frame 1, dissect_hl7 is called because port 2575 (hl7) &lt; 8080 (http), that dissector sets desegment_len=DESEGMENT_ONE_MORE_SEGMENT. TCP starts reassembly.
In frame 2, dissect_tcp (packet-tcp.c:6122) sees SYN+ACK and assume that this source port (8080) is actually the server port.
In frame 3, the dissector for port 8080 (http) takes precedence and finds two HTTP messages in the reassembled TCP data.

And finally it becomes clear why TCP branches into this:

            /* call subdissector */
            process_tcp_payload(...);
            // ...
            old_len = (int)(tvb_reported_length(next_tvb) - last_fragment_len);
            if (pinfo-&gt;desegment_len &amp;&amp;
                pinfo-&gt;desegment_offset&lt;=old_len) {
                // ...
                remove_last_data_source(pinfo);

last_fragment_len (i.e. the length of the first TCP segment from packet 1) is 1206. That contained exactly one HTTP message. The last segment however does not have a Content-Length header and thus HTTP requests one more segment, starting right after desegment_offset=1206. And thus, the condition passes:

    if (DESEGMENT_ONE_MORE_SEGMENT &amp;&amp;
        1206 &lt;= 1206) {

However, what TCP did not know is that HTTP actually added fields based on the first 1206 bytes of the &quot;reassembled&quot; TCP data. I think that if desegment_offset == old_len, then it means that the last segment in fact contained a full PDU and thus the data source must not be removed.</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-09 17:58:32 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 26397 had a related patch set uploaded by Peter Wu:
tcp: preserve data source if a PDU uses it

<a href="https://code.wireshark.org/review/26397">https://code.wireshark.org/review/26397</a></pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Peter Wu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-11 15:21:30 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=16210" name="attach_16210" title="Crafted crash reproducer">attachment 16210</a> <a href="attachment.cgi?id=16210&amp;action=edit" title="Crafted crash reproducer">[details]</a></span>
Crafted crash reproducer

The previously proposed patch is insufficient, if the first TCP segment contains the full HTTP message (+ a bit more), then the same crash would occur. See attached pcap, crafted with the following script:

from scapy.all import *
data1 = b&quot;HTTP/1.1 200 OK\r\nContent-Length: 5\r\n\r\nTest\n&quot;
data2 = b&quot;HTTP/1.1 400 Bad Request\r\n&quot;     # note: missing \r\n
data1, data2 = data1 + data2[:1], data2[1:]
p = [
IP()/TCP(sport=8080, dport=2575, flags=&quot;A&quot;, seq=1)/data1,
IP()/TCP(sport=8080, dport=2575, flags=&quot;SA&quot;, seq=1),
IP()/TCP(sport=8080, dport=2575, flags=&quot;A&quot;, seq=1+len(data1))/data2,]
wrpcap(&quot;<a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - Crafted HTTP traffic causes tshark to abort"
   href="show_bug.cgi?id=14472">bug14472</a>-badhttp.pcap&quot;, p)

Note that both the original and this capture requires the default configuration (TCP and possibly HTTP headers reassembly must be enabled)</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Peter Wu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-11 15:31:11 UTC
        </span>

      </div>




<pre class="bz_comment_text">In fact, two packets are sufficient to trigger the issue:

IP()/TCP(sport=8080, dport=2575, flags=&quot;A&quot;, seq=1)/data1,
IP()/TCP(sport=8080, dport=2575, flags=&quot;SA&quot;, seq=1+len(data1))/data2,

The first packet is decoded as hl7 (because port 2575 (hl7) &lt; 8080 (http)),
the second packet is decoded as http (because SYN/ACK selects port 8080).</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-21 10:35:23 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 26397 merged by Peter Wu:
tcp: preserve data source if a PDU uses it

<a href="https://code.wireshark.org/review/26397">https://code.wireshark.org/review/26397</a></pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-21 10:40:47 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 26586 had a related patch set uploaded by Peter Wu:
tcp: preserve data source if a PDU uses it

<a href="https://code.wireshark.org/review/26586">https://code.wireshark.org/review/26586</a></pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-21 10:41:10 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 26586 merged by Peter Wu:
tcp: preserve data source if a PDU uses it

<a href="https://code.wireshark.org/review/26586">https://code.wireshark.org/review/26586</a></pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=14472#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Peter Wu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-03-21 10:47:26 UTC
        </span>

      </div>




<pre class="bz_comment_text">Fixed in <a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=af8ac43a1f">v2.5.2rc0-60-gaf8ac43a1f</a> and <a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=2d4695de14">v2.4.6rc0-54-g2d4695de14</a>.

Could not reproduce the crash in master-2.2 though.</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=14472">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=14472">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=14472">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=14472&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=14472" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=14472&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635621377-S_Svh0k2x2fWk2MxH8v2isO3PD9-8LNdkvboEQAcprg">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>