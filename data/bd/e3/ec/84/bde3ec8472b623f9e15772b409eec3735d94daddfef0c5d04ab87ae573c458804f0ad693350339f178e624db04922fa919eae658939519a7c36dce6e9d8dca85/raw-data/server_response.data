<!DOCTYPE html>
<html lang="en">
  <head>
    <title>9952 &ndash; Buildbot crash output: fuzz-2014-04-02-7762.pcap</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link href="data/assets/64b49332a92937374625c24ed9a89c85.css?1635022386" rel="stylesheet" type="text/css">

<link href="data/assets/f6911ed8e5a97f108734d9324cb6bd67.css?1635022386" rel="stylesheet" type="text/css">

    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1635022386"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "9952 – Buildbot crash output: fuzz-2014-04-02-7762.pcap",
                             "show_bug.cgi?id=9952" );
        document.title = "9952 – Buildbot crash output: fuzz-2014-04-02-7762.pcap";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "9952 – Buildbot crash output: fuzz-2014-04-02-7762.pcap", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1635022386"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-wireshark-org-bugzilla
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_Wireshark
                 bz_component_Dissection_engine_&#X28;libwireshark&#X29;
                 bz_bug_9952 yui-skin-sam">

  <div id="header"><div id="banner">
      <a href="/bugzilla/"><img id="badge" src="/image/wsbadge-bug@186x57.png"></a>
      <span id="banner-text">
        Wireshark Bug Database &ndash; Bug&nbsp;9952
      </span>
      <div id="subtitle">
        <p class="subheader">Buildbot crash output: fuzz-2014-04-02-7762.pcap</p>
      </div>

       <div id="motd_yellow">

<p>
This Bugzilla instance was migrated to <a href="https://gitlab.com/wireshark/wireshark">GitLab</a> on Sunday, August 23.
</p>


<p>
This bug has been migrated to <a href="https://gitlab.com/wireshark/wireshark/-/issues/9952">issue 9952</a> in the <a href="https://gitlab.com/wireshark/wireshark/-/issues">GitLab issue tracker</a>.
It can be viewed and updated there.
</p>


</p>

<p>
See the <a href="https://gitlab.com/wireshark/gitlab-migration/wikis/home">migration wiki</a> for more details.
</p>

       </div>


    </div>

<!-- WS: Title info is in the banner
    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;9952</span>
  
        <span id="subtitle" class="subheader">Buildbot crash output: fuzz-2014-04-02-7762.pcap</span>

        <span id="information" class="header_addl_info">Last modified: 2015-03-17 13:57:37 UTC</span>
    </div>
  -->


    <div id="common_links"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=9952&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=9952" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=9952&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635622037-LzWfa5GuStJ7zc027LUfCHonk3ybmUiqWxtYc18lUqM">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2015-03-17 13:57:37">
  <input type="hidden" name="id" value="9952">
  <input type="hidden" name="token" value="1635622037-254QQUJKqtY1icwEtoGYYk-dIXoQ0MfranSii4DoZ4Q">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=9952"><b>Bug&nbsp;9952</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">Buildbot crash output: fuzz-2014-04-02-7762.pcap</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>Buildbot crash output: fuzz-2014-04-02-7762.pcap
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'Buildbot crash output: fuzz-2014-04-02-7762.pcap' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Wireshark

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Wireshark"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >Dissection engine (libwireshark)

  (<a href="buglist.cgi?component=Dissection%20engine%20(libwireshark)&amp;product=Wireshark&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>unspecified
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">x86-64
        Ubuntu
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>High
       Major<span id="votes_container">
    (<a href="page.cgi?id=voting/user.html&amp;bug_id=9952#vote_9952">vote</a>)
  </span>
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Bugzilla Administrator</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'bugzilla-admin\x40wireshark.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
          <a href="http://www.wireshark.org/download/automated/captures/fuzz-2014-04-02-7762.pcap"
             rel="noreferrer"><span title="http://www.wireshark.org/download/automated/captures/fuzz-2014-04-02-7762.pcap">http://www.wireshark.org/download/aut...
        </span></a>
      </span>
    </td>
  </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2014-04-04 08:40 UTC by <span class="vcard"><span class="fn">Buildbot Builder</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2015-03-17 13:57 UTC
      (<a href="show_activity.cgi?id=9952">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>5 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="alexis.lagoutte">alexis.lagoutte</option>
                <option value="eapache">eapache</option>
                <option value="jeff.morriss.ws">jeff.morriss.ws</option>
                <option value="pascal">pascal</option>
                <option value="peter">peter</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr> 

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_application_x-gzip-compressed">
        <td>
            <a href="attachment.cgi?id=13473"
               title="View the content of the attachment">
          <b>The frame that causes the Valgrind errors</b></a>

          <span class="bz_attach_extra_info">
              (300 bytes,
                application/x-gzip-compressed)

            <br>
            <a href="#attach_13473"
               title="Go to the comment associated with the attachment">2015-02-25 02:39 UTC</a>,

            <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=13473&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
        </span>
        <a href="attachment.cgi?bugid=9952&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=9952&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1490378926" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Buildbot Builder</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-04-04 08:40:04 UTC
        </span>

      </div>




<pre class="bz_comment_text">Problems have been found with the following capture file:

<a href="http://www.wireshark.org/download/automated/captures/fuzz-2014-04-02-7762.pcap">http://www.wireshark.org/download/automated/captures/fuzz-2014-04-02-7762.pcap</a>

stderr:
Input file: /home/wireshark/menagerie/menagerie/5809-2011-01-27-dump-atn-over-ip.pcap

Build host information:
Linux wsbb04 3.2.0-60-generic #91-Ubuntu SMP Wed Feb 19 03:54:44 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux
Distributor ID:	Ubuntu
Description:	Ubuntu 12.04.4 LTS
Release:	12.04
Codename:	precise

Buildbot information:
BUILDBOT_REPOSITORY=ssh://<a href="/cdn-cgi/l/email-protection#73041a0116001b1201185e11061a1f17111c075550454748101c17165d041a0116001b1201185d1c0114">wireshark-buildbot&#64;code.wireshark.org</a>:29418/wireshark
BUILDBOT_BUILDNUMBER=2663
BUILDBOT_URL=<a href="http://buildbot.wireshark.org/trunk/">http://buildbot.wireshark.org/trunk/</a>
BUILDBOT_BUILDERNAME=Clang Code Analysis
BUILDBOT_SLAVENAME=clang-code-analysis
BUILDBOT_GOT_REVISION=e982992f71b9e93d28ca3bf04d32105fa015949e

Return value:  139

Dissector bug:  0

Valgrind error count:  0



Git commit
<a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=e982992f71b9e93d28ca3bf04d32105fa015949e">commit e982992f71b9e93d28ca3bf04d32105fa015949e</a>
Author: Guy Harris &lt;<a href="/cdn-cgi/l/email-protection#11766468373227252a707d647c3f7c78653f747564">guy&#64;alum.mit.edu</a>&gt;
Date:   Wed Apr 2 20:18:50 2014 -0700

    For single-precision calculations, use single-precision constants.
    
    Otherwise the calculation is done in double precision, and some
    compilers complain of a double-precision value being assigned to a
    single-precision variable.
    
    Change-Id: <a href="https://code.wireshark.org/review/#/q/I78317a0e9b625ae4f34df3597fdb5eba711bcae2">I78317a0e9b625ae4f34df3597fdb5eba711bcae2</a>
    Reviewed-on: <a href="https://code.wireshark.org/review/934">https://code.wireshark.org/review/934</a>
    Reviewed-by: Guy Harris &lt;<a href="/cdn-cgi/l/email-protection#b2d5c7cb9491848689d3dec7df9cdfdbc69cd7d6c7">guy&#64;alum.mit.edu</a>&gt;


Command and args: /home/wireshark/builders/trunk-clang-ca/clangcodeanalysis/install/bin/tshark -nVxr


[ no debug trace ]</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-04-11 02:43:13 UTC
        </span>

      </div>




<pre class="bz_comment_text">Valgrind says:

~~~
==9984== Invalid read of size 8
==9984==    at 0x63708B7: except_pop (except.c:260)
==9984==    by 0x65E63AE: dissect_ethertype (packet-ethertype.c:327)
==9984==    by 0x637842E: call_dissector_through_handle (packet.c:591)
==9984==    by 0x6378CE4: call_dissector_work (packet.c:682)
==9984==    by 0x637A811: call_dissector_with_data (packet.c:2260)
==9984==    by 0x69AF69A: dissect_sll (packet-sll.c:310)
==9984==    by 0x63783F3: call_dissector_through_handle (packet.c:595)
==9984==    by 0x6378CE4: call_dissector_work (packet.c:682)
==9984==    by 0x637939B: dissector_try_uint_new (packet.c:1113)
==9984==    by 0x63793F6: dissector_try_uint (packet.c:1139)
==9984==    by 0x6619DD2: dissect_frame (packet-frame.c:488)
==9984==    by 0x63783F3: call_dissector_through_handle (packet.c:595)
==9984==  Address 0x7feffe000 is not stack'd, malloc'd or (recently) free'd
==9984== 
==9984== Invalid read of size 8
==9984==    at 0x63708B7: except_pop (except.c:260)
==9984==    by 0x6618E3E: dissect_frame (packet-frame.c:525)
==9984==    by 0x63783F3: call_dissector_through_handle (packet.c:595)
==9984==    by 0x6378CE4: call_dissector_work (packet.c:682)
==9984==    by 0x637A811: call_dissector_with_data (packet.c:2260)
==9984==    by 0x637AB72: dissect_packet (packet.c:468)
==9984==    by 0x637025D: epan_dissect_run_with_taps (epan.c:348)
==9984==    by 0x41360F: process_packet (tshark.c:3533)
==9984==    by 0x40BB21: main (tshark.c:3323)
==9984==  Address 0x7feffe000 is not stack'd, malloc'd or (recently) free'd
==9984== 
==9984== Invalid read of size 8
==9984==    at 0x63708B7: except_pop (except.c:260)
==9984==    by 0x637AA6B: dissect_packet (packet.c:478)
==9984==    by 0x637025D: epan_dissect_run_with_taps (epan.c:348)
==9984==    by 0x41360F: process_packet (tshark.c:3533)
==9984==    by 0x40BB21: main (tshark.c:3323)
==9984==  Address 0x7feffe000 is not stack'd, malloc'd or (recently) free'd
==9984== 
==9984== Invalid read of size 8
==9984==    at 0x63708B7: except_pop (except.c:260)
==9984==    by 0x40BCEB: main (tshark.c:2085)
==9984==  Address 0x7feffe000 is not stack'd, malloc'd or (recently) free'd
~~~

git bisect eventually leads to:

~~~
a6ae13dee97af192794a604f348a31b505926d47 is the first bad commit
<a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=a6ae13dee97af192794a604f348a31b505926d47">commit a6ae13dee97af192794a604f348a31b505926d47</a>
Author: Pascal Quantin &lt;<a href="/cdn-cgi/l/email-protection#8efeeffdedefe2a0fffbefe0fae7e0a8adb8bab5e9e3efe7e2a0ede1e3">pascal.quantin&#64;gmail.com</a>&gt;
Date:   Sun Sep 8 21:10:36 2013 +0000

    Slightly different fix for <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - Buildbot crash output: fuzz-2013-09-06-16952.pcap"
   href="show_bug.cgi?id=9117">https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=9117</a> :
    Check that tvb returned by dissect_per_bit_string is not null before trying to use it
    
    svn path=/trunk/; revision=51846
~~~

though honestly I don't understand what that commit has to do with those Valgrind errors.</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-17 13:13:31 UTC
        </span>

      </div>




<pre class="bz_comment_text">It's still a problem for me (tried master and master-1.12).</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-17 21:32:35 UTC
        </span>

      </div>




<pre class="bz_comment_text">I can't reproduce. Alexis, this looks like a potential stack corruption to me. Does ASAN give any more useful output?</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Peter Wu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-24 17:08:58 UTC
        </span>

      </div>




<pre class="bz_comment_text">Unable to reproduce this on dbd409d0410dff7f5d4b6bdd7f16d286accf01a5 + &quot;Workaround for ASAN failure in _ws_mempbrk_sse42&quot; (<a href="https://code.wireshark.org/review/2618/">https://code.wireshark.org/review/2618/</a>) with ASAN enabled (GCC).</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-24 19:24:54 UTC
        </span>

      </div>




<pre class="bz_comment_text">Still happens for me, even with change 2618 applied:

~~~
==24647== Memcheck, a memory error detector
==24647== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==24647== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==24647== Command: /home/morriss/Projects/wireshark/master/.libs/lt-tshark -nr /tmp/fuzz-9952.pcap
==24647== 
==24647== Invalid read of size 8
==24647==    at 0x63B7C87: except_pop (except.c:260)
==24647==    by 0x6634A7E: dissect_ethertype (packet-ethertype.c:327)
==24647==    by 0x63BF85E: call_dissector_through_handle (packet.c:622)
==24647==    by 0x63C0134: call_dissector_work (packet.c:713)
==24647==    by 0x63C1C71: call_dissector_with_data (packet.c:2297)
==24647==    by 0x6A1AE9A: dissect_sll (packet-sll.c:310)
==24647==    by 0x63BF823: call_dissector_through_handle (packet.c:626)
==24647==    by 0x63C0134: call_dissector_work (packet.c:713)
==24647==    by 0x63C07EB: dissector_try_uint_new (packet.c:1145)
==24647==    by 0x63C0846: dissector_try_uint (packet.c:1171)
==24647==    by 0x66684C8: dissect_frame (packet-frame.c:508)
==24647==    by 0x63BF823: call_dissector_through_handle (packet.c:626)
==24647==  Address 0x7feffdff0 is not stack'd, malloc'd or (recently) free'd
==24647== 
==24647== Invalid read of size 8
==24647==    at 0x63B7C87: except_pop (except.c:260)
==24647==    by 0x666743E: dissect_frame (packet-frame.c:559)
==24647==    by 0x63BF823: call_dissector_through_handle (packet.c:626)
==24647==    by 0x63C0134: call_dissector_work (packet.c:713)
==24647==    by 0x63C1C71: call_dissector_with_data (packet.c:2297)
==24647==    by 0x63C2060: dissect_record (packet.c:497)
==24647==    by 0x63B7653: epan_dissect_run_with_taps (epan.c:346)
==24647==    by 0x411133: process_packet (tshark.c:3544)
==24647==    by 0x40BCD6: main (tshark.c:3334)
==24647==  Address 0x7feffefe0 is just below the stack ptr.  To suppress, use: --workaround-gcc296-bugs=yes
==24647== 
==24647== Invalid read of size 8
==24647==    at 0x63B7C87: except_pop (except.c:260)
==24647==    by 0x63C1F3F: dissect_record (packet.c:508)
==24647==    by 0x63B7653: epan_dissect_run_with_taps (epan.c:346)
==24647==    by 0x411133: process_packet (tshark.c:3544)
==24647==    by 0x40BCD6: main (tshark.c:3334)
==24647==  Address 0x7fefff3c0 is just below the stack ptr.  To suppress, use: --workaround-gcc296-bugs=yes
==24647== 
==24647== Invalid read of size 8
==24647==    at 0x63B7C87: except_pop (except.c:260)
==24647==    by 0x40BE98: main (tshark.c:2096)
==24647==  Address 0x7fefff3c0 is not stack'd, malloc'd or (recently) free'd
==24647== 
==24647== 
==24647== HEAP SUMMARY:
==24647==     in use at exit: 1,226,353 bytes in 29,374 blocks
==24647==   total heap usage: 331,727 allocs, 302,353 frees, 34,513,790 bytes allocated
==24647== 
==24647== LEAK SUMMARY:
==24647==    definitely lost: 5,624 bytes in 169 blocks
==24647==    indirectly lost: 36,424 bytes in 49 blocks
==24647==      possibly lost: 0 bytes in 0 blocks
==24647==    still reachable: 1,184,305 bytes in 29,156 blocks
==24647==         suppressed: 0 bytes in 0 blocks
==24647== Rerun with --leak-check=full to see details of leaked memory
==24647== 
==24647== For counts of detected and suppressed errors, rerun with: -v
==24647== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 2 from 2)
chopin [~/Projects/wireshark/master/]&gt; git status
# On branch review/peter_wu/bug/10214
nothing to commit, working directory clean
~~~</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-24 19:26:53 UTC
        </span>

      </div>




<pre class="bz_comment_text">You have a magical system Jeff :P</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-24 19:35:20 UTC
        </span>

      </div>




<pre class="bz_comment_text">I'd think so too (or maybe that some local changes cause the problem) except that it happens both at home (Fedora 19) and at work (Fedora 20, probably with some of my own custom Wireshark code).

Valgrind versions are 3.8.1 and 3.9.0.

Sadly I haven't had time to dig into it again since doing that (weird) git bissect.</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Peter Wu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-18 09:54:51 UTC
        </span>

      </div>




<pre class="bz_comment_text">Jeff, is this still reproducible?</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-18 15:16:51 UTC
        </span>

      </div>




<pre class="bz_comment_text">Oh good grief.  Yes, it does.  This is now Fedora 21.

~~~
==26555== Invalid read of size 8
==26555==    at 0x64F7707: except_pop (except.c:260)
==26555==    by 0x6786D59: dissect_ethertype (packet-ethertype.c:319)
==26555==    by 0x64FFC7E: call_dissector_through_handle (packet.c:612)
==26555==    by 0x65005C4: call_dissector_work (packet.c:700)
==26555==    by 0x6502221: call_dissector_with_data (packet.c:2386)
==26555==    by 0x6B91135: dissect_sll (packet-sll.c:297)
==26555==    by 0x64FFC43: call_dissector_through_handle (packet.c:614)
==26555==    by 0x65005C4: call_dissector_work (packet.c:700)
==26555==    by 0x6500D0E: dissector_try_uint_new (packet.c:1132)
==26555==    by 0x6500D50: dissector_try_uint (packet.c:1158)
==26555==    by 0x67B93A8: dissect_frame (packet-frame.c:496)
==26555==    by 0x64FFC7E: call_dissector_through_handle (packet.c:612)
==26555==  Address 0xffeffe000 is on thread 1's stack
==26555==  4632 bytes below stack pointer
==26555== 
==26555== Invalid read of size 8
==26555==    at 0x64F7707: except_pop (except.c:260)
==26555==    by 0x67B82E3: dissect_frame (packet-frame.c:555)
==26555==    by 0x64FFC7E: call_dissector_through_handle (packet.c:612)
==26555==    by 0x65005C4: call_dissector_work (packet.c:700)
==26555==    by 0x6502221: call_dissector_with_data (packet.c:2386)
==26555==    by 0x65025FD: dissect_record (packet.c:492)
==26555==    by 0x64F70A3: epan_dissect_run_with_taps (epan.c:343)
==26555==    by 0x413203: process_packet (tshark.c:3619)
==26555==    by 0x40C492: load_cap_file (tshark.c:3380)
==26555==    by 0x40C492: main (tshark.c:2122)
==26555==  Address 0xffefff270 is on thread 1's stack
==26555==  888 bytes below stack pointer
==26555== 
==26555== Invalid read of size 8
==26555==    at 0x64F7707: except_pop (except.c:260)
==26555==    by 0x65024B0: dissect_record (packet.c:502)
==26555==    by 0x64F70A3: epan_dissect_run_with_taps (epan.c:343)
==26555==    by 0x413203: process_packet (tshark.c:3619)
==26555==    by 0x40C492: load_cap_file (tshark.c:3380)
==26555==    by 0x40C492: main (tshark.c:2122)
==26555==  Address 0xffefff670 is on thread 1's stack
==26555==  920 bytes below stack pointer
==26555== 
==26555== Invalid read of size 8
==26555==    at 0x64F7707: except_pop (except.c:260)
==26555==    by 0x40C1D0: main (tshark.c:2139)
==26555==  Address 0xffefffa40 is on thread 1's stack
==26555==  568 bytes below stack pointer
~~~

CPU info (in case that would make any difference):

~~~
processor	: 0
vendor_id	: GenuineIntel
cpu family	: 6
model		: 58
model name	: Intel(R) Core(TM) i7-3770 CPU &#64; 3.40GHz
stepping	: 9
microcode	: 0x1b
cpu MHz		: 2043.984
cache size	: 8192 KB
physical id	: 0
siblings	: 8
core id		: 0
cpu cores	: 4
apicid		: 0
initial apicid	: 0
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat epb pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms xsaveopt
bugs		:
bogomips	: 6784.46
clflush size	: 64
cache_alignment	: 64
address sizes	: 36 bits physical, 48 bits virtual
power management:
~~~</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Peter Wu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-24 23:55:30 UTC
        </span>

      </div>




<pre class="bz_comment_text">Jeff, can you reproduce it with an empty .wireshark dir? (by setting envvar HOME=/x). Can you attach a debugger and print pinfo-&gt;fd-&gt;num when the invalid read occurs?</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 02:39:43 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=13473" name="attach_13473" title="The frame that causes the Valgrind errors">attachment 13473</a> <a href="attachment.cgi?id=13473&amp;action=edit" title="The frame that causes the Valgrind errors">[details]</a></span>
The frame that causes the Valgrind errors

(In reply to Peter Wu from <a href="show_bug.cgi?id=9952#c10">comment #10</a>)
<span class="quote">&gt; Jeff, can you reproduce it with an empty .wireshark dir? (by setting envvar
&gt; HOME=/x). Can you attach a debugger and print pinfo-&gt;fd-&gt;num when the
&gt; invalid read occurs?</span >

Yes, I can.

The problem only shows up with Valgrind so the only way to find the offending packet was to split the capture into pieces until I got down to 1 frame. I attached that one frame.

What's really amusing is that that frame loads clean in Wireshark (no sign of an exception) yet Valgrind still complains.

I tried building with ASAN and it doesn't complain either.

It's quite possible it's a Valgrind bug.</pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 03:24:15 UTC
        </span>

      </div>




<pre class="bz_comment_text"><span class="quote">&gt; It's quite possible it's a Valgrind bug.</span >

Unlikely - the buildbot found this originally in a non-valgrind pass, so *something* is actually funny about this capture.</pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 03:36:02 UTC
        </span>

      </div>




<pre class="bz_comment_text">Jeff, what is does the dissection look like when you open it up in the GUI? For me it is:

Frame
Linux Cooked
IPv4
ISO 8473/X.233 CLNP
ISO 8073/X.224 COTP
Data (24 bytes)

Are there any differences? Is the data dissected perhaps? Are any exceptions thrown?</pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 03:50:12 UTC
        </span>

      </div>




<pre class="bz_comment_text">~~~
No.     Time                          Source                Destination           Protocol Length Info
      1 2010-10-28 04:33:01.271977    [47|00:27][81|83:44:45|00:01][44:44|01:00]4544.5555.0047[01] [47|00:27][41|41:49:42|00:3c][0d:5a|00:00]5341.4131.4100[21] CLNP     182    CR TPDU src-ref: 0x0001 dst-ref: 0x7000

Frame 1: 182 bytes on wire (1456 bits), 182 bytes captured (1456 bits) on interface 0
Linux cooked capture
Internet Protocol Version 4, Src: 10.232.82.132 (10.232.82.132), Dst: 10.232.82.13 (10.232.82.13)
ISO 8473/X.233 CLNP ConnectionLess Network Protocol
ISO 8073/X.224 COTP Connection-Oriented Transport Protocol
ICAO Doc9705 ULCS Session (ISO 8326/8327-1:1994)
ICAO Doc9705 ULCS Presentation (ISO 8822/8823-1:1994)
ICAO Doc9705 ULCS ACSE (ISO 8649/8650-1:1996)
~~~

The result is the same if I do it with HOME=/x (so it's not my preferences).</pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 03:53:27 UTC
        </span>

      </div>




<pre class="bz_comment_text">That's really odd, because I definitely do not see any dissection of the &quot;ICAO Doc9705 ULCS&quot; protocols</pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 14:15:46 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Evan Huus from <a href="show_bug.cgi?id=9952#c15">comment #15</a>)
<span class="quote">&gt; That's really odd, because I definitely do not see any dissection of the
&gt; &quot;ICAO Doc9705 ULCS&quot; protocols</span >

When in doubt, use autotools. :-)

<a href="https://code.wireshark.org/review/#/c/7386/">https://code.wireshark.org/review/#/c/7386/</a>

(I thought I set up the Ping-bug: field correctly but it's not showing up here...)</pre>
    </div>

    <div id="c17" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 14:21:34 UTC
        </span>

      </div>




<pre class="bz_comment_text">I think it might have to be `Ping-Bug`? Or perhaps the integration is broken right now. Regardless, it worked on my cmake build, so my dissection now matches yours at least.</pre>
    </div>

    <div id="c18" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Pascal Quantin</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 15:44:05 UTC
        </span>

      </div>




<pre class="bz_comment_text">When running GDB on Valgrind, you get the following callstack:
Program received signal SIGTRAP, Trace/breakpoint trap.
except_pop () at except.c:260
260	    set_top(top-&gt;except_down);
(gdb) bt
#0  except_pop () at except.c:260
#1  0x00000000069a595f in dissect_ethertype (tvb=0x0, pinfo=0x44, tree=0x1, data=0x0) at packet-ethertype.c:319
#2  0x000000000671199f in call_dissector_through_handle (handle=handle&#64;entry=0x10ec1260, tvb=tvb&#64;entry=0x124b1cf0, pinfo=pinfo&#64;entry=0x124a1958, 
    tree=tree&#64;entry=0x124b1c20, data=data&#64;entry=0xffeffeeb0) at packet.c:612
#3  0x0000000006712335 in call_dissector_work (handle=0x10ec1260, tvb=0x124b1cf0, pinfo_arg=0x124a1958, tree=0x124b1c20, add_proto_name=1, data=0xffeffeeb0)
    at packet.c:700
#4  0x00000000067140d2 in call_dissector_with_data (handle=&lt;optimized out&gt;, tvb=tvb&#64;entry=0x124b1cf0, pinfo=pinfo&#64;entry=0x124a1958, tree=tree&#64;entry=0x124b1c20, 
    data=data&#64;entry=0xffeffeeb0) at packet.c:2386
#5  0x0000000006db9d8a in dissect_sll (tvb=0x124b1cf0, pinfo=0x124a1958, tree=0x124b1c20) at packet-sll.c:297
#6  0x0000000006711964 in call_dissector_through_handle (handle=handle&#64;entry=0x1164a820, tvb=tvb&#64;entry=0x124b1cf0, pinfo=pinfo&#64;entry=0x124a1958, 
    tree=tree&#64;entry=0x124b1c20, data=data&#64;entry=0x0) at packet.c:614
#7  0x0000000006712335 in call_dissector_work (handle=0x1164a820, tvb=0x124b1cf0, pinfo_arg=0x124a1958, tree=0x124b1c20, add_proto_name=1, data=0x0)
    at packet.c:700
#8  0x0000000006712a7f in dissector_try_uint_new (sub_dissectors=&lt;optimized out&gt;, uint_val=25, tvb=0x124b1cf0, pinfo=0x124a1958, tree=0x124b1c20, 
    add_proto_name=add_proto_name&#64;entry=1, data=0x0) at packet.c:1132
#9  0x0000000006712ac1 in dissector_try_uint (sub_dissectors=&lt;optimized out&gt;, uint_val=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, 
    tree=&lt;optimized out&gt;) at packet.c:1158
#10 0x00000000069d88f9 in dissect_frame (tvb=0x0, pinfo=0x44, parent_tree=0x1, data=0x0) at packet-frame.c:496
#11 0x000000000671199f in call_dissector_through_handle (handle=handle&#64;entry=0x110291e0, tvb=tvb&#64;entry=0x124b1cf0, pinfo=pinfo&#64;entry=0x124a1958, 
    tree=tree&#64;entry=0x124b1c20, data=data&#64;entry=0xffefff470) at packet.c:612
#12 0x0000000006712335 in call_dissector_work (handle=0x110291e0, tvb=0x124b1cf0, pinfo_arg=0x124a1958, tree=0x124b1c20, add_proto_name=1, data=0xffefff470)
    at packet.c:700
#13 0x00000000067140d2 in call_dissector_with_data (handle=&lt;optimized out&gt;, tvb=0x124b1cf0, pinfo=0x124a1958, tree=0x124b1c20, data=&lt;optimized out&gt;)
    at packet.c:2386
#14 0x00000000067144de in dissect_record (edt=0x0, edt&#64;entry=0x124a1940, file_type_subtype=2, phdr=0x0, tvb=0x124b1cf0, fd=0x0, fd&#64;entry=0xffefff620, 
    cinfo=0x124a1958) at packet.c:492
#15 0x00000000067087f4 in epan_dissect_run_with_taps (edt=edt&#64;entry=0x124a1940, file_type_subtype=2, phdr=phdr&#64;entry=0x1244a000, tvb=0x124b1cf0, 
    fd=fd&#64;entry=0xffefff620, cinfo=cinfo&#64;entry=0x0) at epan.c:343
#16 0x00000000004136c7 in process_packet (cf=0x641e40 &lt;cfile&gt;, edt=0x124a1940, offset=&lt;optimized out&gt;, whdr=0x1244a000, pd=0x1244f390 &quot;&quot;, tap_flags=0)
    at tshark.c:3622
#17 0x000000000040c5f0 in load_cap_file (cf=&lt;optimized out&gt;, max_byte_count=&lt;optimized out&gt;, max_packet_count=6561344, out_file_name_res=&lt;optimized out&gt;, 
    out_file_type=&lt;optimized out&gt;, save_file=&lt;optimized out&gt;) at tshark.c:3383
#18 main (argc=2, argv=0x0) at tshark.c:2125</pre>
    </div>

    <div id="c19" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 16:51:22 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 7391 had a related patch set uploaded by Pascal Quantin:
ATN-CPDLC: never put a break in a TRY block

<a href="https://code.wireshark.org/review/7391">https://code.wireshark.org/review/7391</a></pre>
    </div>

    <div id="c20" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 18:14:24 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 7391 merged by Pascal Quantin:
ATN-CPDLC: never put a break in a TRY block

<a href="https://code.wireshark.org/review/7391">https://code.wireshark.org/review/7391</a></pre>
    </div>

    <div id="c21" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 18:27:28 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 7392 had a related patch set uploaded by Pascal Quantin:
ATN-CPDLC: never put a break in a TRY block

<a href="https://code.wireshark.org/review/7392">https://code.wireshark.org/review/7392</a></pre>
    </div>

    <div id="c22" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 18:27:47 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Gerrit Code Review from <a href="show_bug.cgi?id=9952#c19">comment #19</a>)
<span class="quote">&gt; Change 7391 had a related patch set uploaded by Pascal Quantin:
&gt; ATN-CPDLC: never put a break in a TRY block
&gt; 
&gt; <a href="https://code.wireshark.org/review/7391">https://code.wireshark.org/review/7391</a></span >

Funny, I looked for that kind of problem last night!  But I must have looked only in the first 2 ATN dissectors... &lt;sigh&gt;</pre>
    </div>

    <div id="c23" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 18:27:53 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 7392 merged by Pascal Quantin:
ATN-CPDLC: never put a break in a TRY block

<a href="https://code.wireshark.org/review/7392">https://code.wireshark.org/review/7392</a></pre>
    </div>

    <div id="c24" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c24">Comment 24</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Peter Wu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-02-25 23:50:56 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Jeff Morriss from <a href="show_bug.cgi?id=9952#c11">comment #11</a>)

<span class="quote">&gt; The problem only shows up with Valgrind so the only way to find the
&gt; offending packet was to split the capture into pieces until I got down to 1
&gt; frame. I attached that one frame.</span >

When using `valgrind --db-attach=yes`, you have the ability to start a debugger when a problem is detected. Very useful if you use valgrind in such cases!

Currently compiling with autotools and cmake to compare for other possible missing dissectors.</pre>
    </div>

    <div id="c25" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c25">Comment 25</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-03-16 14:20:23 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 7702 had a related patch set uploaded by Balint Reczey:
ATN-CPDLC: never put a break in a TRY block

<a href="https://code.wireshark.org/review/7702">https://code.wireshark.org/review/7702</a></pre>
    </div>

    <div id="c26" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9952#c26">Comment 26</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-03-17 13:57:37 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 7702 merged by Balint Reczey:
ATN-CPDLC: never put a break in a TRY block

<a href="https://code.wireshark.org/review/7702">https://code.wireshark.org/review/7702</a></pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=9952">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=9952">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=9952">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=9952&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=9952" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=9952&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635622038-sKBRt4OCSaKg4SVhWUZybq3JVlWkDk6nQ1Yq_ywnMtU">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>