<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
  <head>
<base href="https://bugs.launchpad.net/swift/+bug/1006414/+index" />

    <meta charset="UTF-8" />
    <title>Bug #1006414 “Insecure loads()” : Bugs : OpenStack Object Storage (swift)</title>
    <link rel="shortcut icon" href="/@@/launchpad.png" />
    <link rel="canonical" href="https://bugs.launchpad.net/bugs/1006414" />
    
      <link rel="alternate" type="application/atom+xml" href="http://feeds.launchpad.net/bugs/1006414/bug.atom" title="Bug 1006414 Feed" />
    

    
  
  <link type="text/css" rel="stylesheet" media="screen, print" href="/+icing/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/combo.css" />


    

    
      <meta name="description" content="Split from bug 1005903, from Sebastian Krahmer:

swift uses pickle to store and load meta data. pickle is insecure
and allows to execute arbitrary code in loads().
[...]
BTW, you can read more on executing code via pickle or cPickle here:
http://nadiana.com/python-pickle-insecure" />
      <meta property="og:description" content="Split from bug 1005903, from Sebastian Krahmer:

swift uses pickle to store and load meta data. pickle is insecure
and allows to execute arbitrary code in loads().
[...]
BTW, you can read more on executing code via pickle or cPickle here:
http://nadiana.com/python-pickle-insecure" />
    

    
    
      <meta property="og:title" content="Bug #1006414 “Insecure loads()” : Bugs : OpenStack Object Storage (swift)" />
      <meta property="og:type" content="website" />
      <meta property="og:image" content="/@@/launchpad.png" />
      <meta property="og:url" content="https://bugs.launchpad.net/bugs/1006414" />
      <meta property="og:site_name" content="Launchpad" />
    

    

    
  

  
  
  <script type="text/javascript">
    var LP = {
        cache: {},
        links: {}
    };
  </script>

  

  <script type="text/javascript">var cookie_scope = '; Path=/; Secure; Domain=.launchpad.net';</script>

   <script type="text/javascript" src="/+combo/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/?yui/yui/yui-min.js&amp;lp/meta.js&amp;yui/loader/loader-min.js"></script>
   <script type="text/javascript">
        var raw = null;
        if (LP.devmode) {
           raw = 'raw';
        }
        YUI.GlobalConfig = {
            combine: true,
            comboBase: '/+combo/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/?',
            root: 'yui/',
            filter: raw,
            debug: false,
            fetchCSS: false,
            maxURLLength: 2000,
            groups: {
                lp: {
                    combine: true,
                    base: '/+combo/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/?lp/',
                    comboBase: '/+combo/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/?',
                    root: 'lp/',
                    // comes from including lp/meta.js
                    modules: LP_MODULES,
                    fetchCSS: false
                }
            }
        }</script>

  <script type="text/javascript">
      // we need this to create a single YUI instance all events and code
      // talks across. All instances of YUI().use should be based off of
      // LPJS instead.
      var LPJS = new YUI();
  </script>



    <script id="base-layout-load-scripts" type="text/javascript">
        //<![CDATA[
        LPJS.use('base', 'node', 'console', 'event',
            'oop', 'lp', 'lp.app.foldables','lp.app.sorttable',
            'lp.app.inlinehelp', 'lp.app.links',
            'lp.bugs.bugtask_index', 'lp.bugs.subscribers',
            'lp.app.ellipsis', 'lp.code.branchmergeproposal.diff',
            'lp.views.global',
             function(Y) {

            Y.on("domready", function () {
                var global_view = new Y.lp.views.Global();
                global_view.render();

                Y.lp.app.sorttable.SortTable.init();
                Y.lp.app.inlinehelp.init_help();
                Y.lp.activate_collapsibles();
                Y.lp.app.foldables.activate();
                Y.lp.app.links.check_valid_lp_links();
            });

            Y.on('lp:context:web_link:changed', function(e) {
                  window.location = e.new_value;
            });
        });
        //]]>
    </script>
    <script id="base-helper-functions" type="text/javascript">
         //<![CDATA[
        // This code is pulled from lp.js that needs to be available on every
        // request. Pulling here to get it outside the scope of the YUI block.
        function setFocusByName(name) {
            // Focus the first element matching the given name which can be focused.
            var nodes = document.getElementsByName(name);
            var i, node;
            for (i = 0; i < nodes.length; i++) {
                node = nodes[i];
                if (node.focus) {
                    try {
                        // Trying to focus a hidden element throws an error in IE8.
                        if (node.offsetHeight !== 0) {
                            node.focus();
                        }
                    } catch (e) {
                        LPJS.use('console', function(Y) {
                            Y.log('In setFocusByName(<' +
                                node.tagName + ' type=' + node.type + '>): ' + e);
                        });
                    }
                    break;
                }
            }
        }

        function selectWidget(widget_name, event) {
          if (event && (event.keyCode === 9 || event.keyCode === 13)) {
              // Avoid firing if user is tabbing through or simply pressing
              // enter to submit the form.
              return;
          }
          document.getElementById(widget_name).checked = true;
        }
        //]]>
    </script>

    
      
      <script type="text/javascript" id="available-official-tags-js">var available_official_tags = ["account-server", "consistency-engine", "container-server", "documentation", "ec-erasure-coding", "flakey-test", "i18n", "low-hanging-fruit", "middleware", "object-server", "ops", "proxy-server", "python3", "security", "test"];</script>
      <script type="text/javascript">
        LPJS.use('base', 'node', 'oop', 'event', 'lp.bugs.bugtask_index',
                  'lp.bugs.subscribers', 'lp.code.branchmergeproposal.diff',
                  'lp.app.comment', 'lp.services.messages.edit', function(Y) {
            Y.on('domready', function() {
                Y.lp.code.branchmergeproposal.diff.connect_diff_links();
                Y.lp.bugs.bugtask_index.setup_bugtask_index();
                Y.lp.bugs.bugtask_index.setup_bugtask_table();
                LP.cache.comment_context = LP.cache.bug;
                var cl = new Y.lp.app.comment.CommentList();
                cl.render();
                var sl = new Y.lp.bugs.subscribers.createBugSubscribersLoader({
                    container_box: '#other-bug-subscribers',
                    subscribers_details_view:
                        '/+bug-portlet-subscribers-details',
                    subscribe_someone_else_link: '.menu-link-addsubscriber'
                }, window);

                Y.lp.services.messages.edit.setup();
            });
         });
      </script>
      <style type="text/css">
        /* Align the 'add comment' link to the right of the comment box. */
        #add-comment-form textarea { width: 100%; }
        #add-comment-form { max-width: 60em; padding-bottom: 4em; }
        #add-comment-form .actions {float: right;}
        .buglink-summary dd { font-size: 10px; }
        a#privacy-link:link:hover, a#privacy-link:visited:hover {text-decoration:none;}
      </style>
      <style type="text/css">
        .yui3-overlay .value label  {
          /* It normally makes sense for form labels to be bold, but since
          this form consists only of radio buttons, there's nothing but labels
          so we just get wall-to-wall bold. */
          font-weight: normal !important;
        }
      </style>
    
    
  </head>

  <body id="document" itemscope="" itemtype="http://schema.org/WebPage" class="tab-bugs
      main_side
      public
      yui3-skin-sam">
          
          
    <div class="yui-d0">
      <div id="locationbar" class="login-logout">
        

<div id="logincontrol"><a href="https://bugs.launchpad.net/swift/+bug/1006414/+login">Log in / Register</a></div>



      </div><!--id="locationbar"-->

      <div id="watermark" class="watermark-apps-portlet">
        <div>
          <a href="https://launchpad.net/swift"><img alt="" width="64" height="64" src="https://launchpadlibrarian.net/52141984/os64.png" /></a>
        </div>
        <div class="wide">
          <h2 id="watermark-heading"><a href="https://launchpad.net/swift">OpenStack Object Storage (swift)</a></h2>
        </div>
        
  <!-- Application Menu -->
  <ul class="facetmenu">
    
      
      <li class="overview"><a href="https://launchpad.net/swift">Overview</a></li>
      
    
    
      
      <li class="branches"><a href="https://code.launchpad.net/swift">Code</a></li>
      
    
    
      <li class="bugs active"><a href="https://bugs.launchpad.net/swift">Bugs</a></li>
      
      
    
    
      
      <li class="specifications"><a href="https://blueprints.launchpad.net/swift">Blueprints</a></li>
      
    
    
      
      <li class="translations"><a href="https://translations.launchpad.net/swift">Translations</a></li>
      
    
    
      
      <li class="answers"><a href="https://answers.launchpad.net/swift">Answers</a></li>
      
    
  </ul>

      </div>

      <div class="yui-t4">
        <div id="maincontent" class="yui-main">
          <div class="yui-b" dir="ltr">
            <div class="context-publication">
              
      <h1 id="edit-title">
<span class="yui3-editable_text-text ellipsis" style="max-width: 95%;">
    Insecure loads()
</span>
  
</h1>



    
              

              <div id="registration" class="registering">
                
      Bug #1006414 reported by
      <a href="https://launchpad.net/~ttx" class="sprite person">Thierry Carrez</a>
      <time title="2012-05-30 13:56:28 UTC" datetime="2012-05-30T13:56:28.104867+00:00">on 2012-05-30</time>
    
              </div>
            </div>

            
            <div id="request-notifications">
              
            </div>

            
              <div>

      

      <div id="bug-is-duplicate">
          
      </div>
      

      <div style="float: right;">
        <span><a href="/+help-bugs/bug-heat.html" target="help" class="sprite flame">22</a></span>
      </div>

      


  
  
    <div class="actions">
      <span id="affectsmetoo" style="display: inline">This bug affects 2 people</span>
    </div>
  



    <table id="affected-software" class="listing">
      <thead>
        <tr>
          <th colspan="2">Affects</th>
          <th>Status</th>
          <th>Importance</th>
          <th>Assigned to</th>
          <th>Milestone</th>
        </tr>
      </thead>

      <tbody>
        
          
  <tr class="highlight" id="tasksummary1208685">
    <td>
      <a class="bugtask-expander" href="https://bugs.launchpad.net/swift/+bug/1006414/+editstatus">
        &#8203;
      </a>
    </td>
    
    <td>
      <span id="bugtarget-picker-tasksummary1208685">
        <span class="yui3-activator-data-box">
            <a class="sprite product" href="https://bugs.launchpad.net/swift">OpenStack Object Storage (swift)</a>
        </span>
        <button class="lazr-btn yui3-activator-act yui3-activator-hidden">
          Edit
        </button>
        <div class="yui3-activator-message-box yui3-activator-hidden"></div>
        
      </span>
    </td>

    

    
    <td style="width: 20%; vertical-align: middle">
      <div class="status-content" style="width: 100%; float: left">
        
        
          <a href="https://bugs.launchpad.net/swift/+bug/1006414/+editstatus" style="float: left" class="value statusFIXRELEASED">Fix Released</a>
          <a href="https://bugs.launchpad.net/swift/+bug/1006414/+editstatus" style="margin-left: 3px">
            <img class="editicon" src="/@@/edit" />
          </a>
        
      </div>
    </td>

    
    <td style="width: 15em; vertical-align: middle">
      <div class="importance-content" style="width: 100%; float: left">
        <span style="float: left" class="value importanceUNDECIDED">Undecided</span>
      </div>
    </td>

    <td style="width:20%; margin: 0; padding: 0;
               vertical-align: middle; padding-left: 0.5em">
      

      
        <span id="assignee-picker-tasksummary1208685">
          <span class="yui3-activator-data-box">
            <a class="sprite person" href="https://launchpad.net/~vuntz">Vincent Untz</a>
            
          </span>
          
          <button class="lazr-btn yui3-activator-act yui3-activator-hidden">
            Edit
          </button>
          <div class="yui3-activator-message-box yui3-activator-hidden"></div>
        </span>
      
    </td>

    <td style="width: 20%; vertical-align: middle">
      <div class="milestone-content" style="width: 100%; float: left">
        
        <a class="value" href="https://launchpad.net/swift/+milestone/1.7.0">OpenStack Object Storage (swift) 1.7.0</a>
        
      </div>
    </td>

    
  </tr>

  
    <tr class="bugtask-collapsible-content hidden" id="task1208685">
     <td colspan="7"><form action="/swift/+bug/1006414/+editstatus" method="post" enctype="multipart/form-data">
  

  <p class="error message">
    You need to log in to change this bug's status.
  </p>
  
  <table class="summary" style="float: right; margin-left: 1em;">
    <tr>
      <th>Affecting:</th>
      <td><a href="/swift">OpenStack Object Storage (swift)</a></td>
    </tr>
    <tr>
      <th>Filed here by:</th>
      <td><a href="https://launchpad.net/~ttx" class="sprite person">Thierry Carrez</a></td>
    </tr>
    <tr>
      <th>When:</th>
      <td>
        <time title="2012-05-30 13:56:28 UTC" datetime="2012-05-30T13:56:28.104867+00:00">2012-05-30</time>
      </td>
    </tr>
    <tr>
      <th>Confirmed:</th>
      <td>
        <time title="2012-06-28 13:28:42 UTC" datetime="2012-06-28T13:28:42.957764+00:00">2012-06-28</time>
      </td>
    </tr>
    <tr>
      <th>Assigned:</th>
      <td>
        <time title="2012-06-28 13:28:42 UTC" datetime="2012-06-28T13:28:42.905721+00:00">2012-06-28</time>
      </td>
    </tr>
    <tr>
      <th>Started work:</th>
      <td>
        <time title="2012-06-28 13:28:42 UTC" datetime="2012-06-28T13:28:42.957764+00:00">2012-06-28</time>
      </td>
    </tr>
    <tr>
      <th>Completed:</th>
      <td>
        <time title="2012-09-04 20:31:08 UTC" datetime="2012-09-04T20:31:08.372330+00:00">2012-09-04</time>
      </td>
    </tr>
  </table>
  <div class="field">
    <table>
      <tr>
        <td>
          <label for="swift.target">Target</label>
        </td>
      </tr>
      <tr>
        <td>
          <table>
  <tr>
    <td>
      <label>
        <input class="radioType" id="swift.target.option.package" name="swift.target" type="radio" value="package" />
        Distribution
      </label>
    </td>
    <td>
      <select id="swift.target.distribution" name="swift.target.distribution" size="1" >
<option value="baltix">Baltix</option>
<option value="boss">BOSS</option>
<option value="charms">Juju Charms Collection</option>
<option value="elbuntu">Elbuntu</option>
<option value="guadalinex">Guadalinex</option>
<option value="guadalinexedu">Guadalinex Edu</option>
<option value="kiwilinux">Kiwi Linux</option>
<option value="nubuntu">nUbuntu</option>
<option value="pld-linux">PLD Linux</option>
<option value="tilix">Tilix</option>
<option value="tuxlab">tuXlab</option>
<option selected="selected" value="ubuntu">Ubuntu</option>
<option value="ubuntu-leb">Ubuntu Linaro Evaluation Build</option>
<option value="ubuntu-rtm">Ubuntu RTM</option>
</select>
<input name="swift.target.distribution-empty-marker" type="hidden" value="1" />
    </td>
  </tr>
  <tr>
    <td align="right">
      <label for="swift.target.option.package">
        Package
      </label>
    </td>
    <td>
      


    <input type="text" value="" id="swift.target.package"
                         name="swift.target.package" size="20"
                         maxlength=""
                         onKeyPress="selectWidget(&#x27;swift.target.option.package&#x27;, event)" style=""
                         class="" />

    
      
      <script type="text/javascript">
          LPJS.use('node', 'lp.app.picker', function(Y) {
              var text_input = Y.DOM.byId('swift.target.package');
              var select_menu = Y.DOM.byId('swift.target.package-suggestions');
              Y.lp.app.picker.connect_select_menu(
                  select_menu, text_input);
          });</script>
    

    <span class="hidden">(<a id="show-widget-swift-target-package" href="#">Find&hellip;</a>)</span>
    <script>
    LPJS.use('node', 'lp.app.picker', function(Y) {
        var config = {"remove_team_text": "Remove team", "header": "Select a package", "show_remove_button": false, "selected_value": null, "step_title": "Search by name", "show_assign_me_button": false, "vocabulary_filters": [], "vocabulary_name": "DistributionPackage", "input_element": "swift.target.package", "show_widget_id": "show-widget-swift-target-package", "assign_me_text": "Pick me", "show_create_team": false, "remove_person_text": "Remove person", "picker_type": "default", "extra_no_results_message": null, "selected_value_metadata": null};
        var show_widget_id = 'show-widget-swift-target-package';
        Y.lp.app.picker.addPicker(config, show_widget_id);
    });
    </script>
  



    </td>
  </tr>

  <tr>
    <td>
      <label>
        <input class="radioType" checked="checked" id="swift.target.option.product" name="swift.target" type="radio" value="product" />
       Project
      </label>
    </td>
    <td>
      


    <input type="text" value="swift" id="swift.target.product"
                         name="swift.target.product" size="20"
                         maxlength=""
                         onKeyPress="selectWidget(&#x27;swift.target.option.product&#x27;, event)" style=""
                         class="" />

    
      
      <script type="text/javascript">
          LPJS.use('node', 'lp.app.picker', function(Y) {
              var text_input = Y.DOM.byId('swift.target.product');
              var select_menu = Y.DOM.byId('swift.target.product-suggestions');
              Y.lp.app.picker.connect_select_menu(
                  select_menu, text_input);
          });</script>
    

    <span class="hidden">(<a id="show-widget-swift-target-product" href="#">Find&hellip;</a>)</span>
    <script>
    LPJS.use('node', 'lp.app.picker', function(Y) {
        var config = {"remove_team_text": "Remove team", "header": "Select a project", "show_remove_button": false, "selected_value": "swift", "step_title": "Search", "show_assign_me_button": false, "vocabulary_filters": [], "vocabulary_name": "Product", "input_element": "swift.target.product", "show_widget_id": "show-widget-swift-target-product", "assign_me_text": "Pick me", "show_create_team": false, "remove_person_text": "Remove person", "picker_type": "default", "extra_no_results_message": null, "selected_value_metadata": null};
        var show_widget_id = 'show-widget-swift-target-product';
        Y.lp.app.picker.addPicker(config, show_widget_id);
    });
    </script>
  



    </td>
  </tr>
</table>

          
        </td>
      </tr>
    </table>
    
    <table>
      <tr>
        <td>
          <label style="font-weight: bold" for="swift.status">Status</label>
        </td>
        <td>
          <label style="font-weight: bold" for="swift.importance">Importance</label>
        </td>
        <td>
          <label style="font-weight: bold" for="swift.milestone">Milestone</label>
        </td>
      </tr>
      <tr>
        <td><div>
<div class="value">
<select id="swift.status" name="swift.status" size="1" >
<option selected="selected" value="Fix Released">Fix Released</option>
</select>
</div>
<input name="swift.status-empty-marker" type="hidden" value="1" />
</div></td>
        <td title="Changeable only by a project maintainer or bug supervisor">
          <span class="sprite read-only"></span>
          <span class="importanceUNDECIDED">Undecided</span>
        </td>
        <td title="Changeable only by a project maintainer or bug supervisor">
          <span class="sprite read-only"></span>
          OpenStack Object Storage (swift) 1.7.0
        </td>
      </tr>
    </table>
    <table>
      <tr>
        <td>
          <label style="font-weight: bold" for="swift.assignee">Assigned to</label>
        </td>
      </tr>
      <tr>
        <td colspan="2" style="white-space: nowrap">

  <table>
    
    <tr>
      <td style="padding: 0 2px 2px 0">
        <input type="radio" id="swift.assignee.assign_to_me" name="swift.assignee.option" value="swift.assignee.assign_to_me" />
      </td>
      <td style="padding: 0">
        <label style="font-weight: normal" for="swift.assignee.assign_to_me">
          Me
        </label>
      </td>
    </tr>
    
      
        <tr>
          <td style="padding: 0 2px 2px 0">
              <input type="radio" checked="checked" id="swift.assignee.assigned_to" name="swift.assignee.option" value="swift.assignee.assigned_to" />
          </td>
          <td style="padding: 0">
            <label style="font-weight: normal" for="swift.assignee.assigned_to">
              Vincent Untz (vuntz)
            </label>
          </td>
        </tr>
      
    
    
  </table>


</td>
      </tr>
    </table>
    
  </div>
  <div class="field">
    <div>
      <label style="font-weight: bold" for="swift.comment_on_change">Comment on this change (optional)</label>
      <textarea cols="62" rows="4" id="swift.comment_on_change" name="swift.comment_on_change"></textarea>
    </div>
    <div>
      <label style="font-weight: normal">
        <input type="checkbox" name="subscribe" id="subscribe" value="Subscribe" />
        Email me about changes to this bug report
      </label>
    </div>
  </div>
  
</form>
</td>
    </tr>
  


        
      </tbody>

    </table>



<div class="actions">
  
    <span id="also-affects-product" class="">
    <a class="menu-link-addupstream sprite add" href="https://bugs.launchpad.net/swift/+bug/1006414/+choose-affected-product">Also affects project</a>
        <a href="/+help-bugs/also-affects-project-help.html" target="help" class="sprite maybe action-icon">(?)</a>
    </span>
    <span id="also-affects-package" class="">
    <a class="menu-link-adddistro sprite add" href="https://bugs.launchpad.net/swift/+bug/1006414/+distrotask">Also affects distribution/package</a>
    </span>
    <a class="menu-link-nominate sprite milestone" href="https://bugs.launchpad.net/swift/+bug/1006414/+nominate">Nominate for series</a>
    
  

</div>




      <div id="maincontentsub">
        <div class="top-portlet">

      <div itemprop="mainContentOfPage" class="report">
        

        <div>
  <div class="lazr-multiline-edit" id="edit-description">
  <div class="clearfix">
    

    <h3>Bug Description</h3>
  </div>

  <div class="yui3-editable_text-text"><p>Split from <a href="/bugs/1005903" class="bug-link">bug 1005903</a>, from Sebastian Krahmer:</p>
<p>swift uses pickle to store and load meta data. pickle is insecure<br />
and allows to execute arbitrary code in loads().<br />
[...]<br />
BTW, you can read more on executing code via pickle or cPickle here:<br />
<a rel="nofollow" href="http://nadiana.com/python-pickle-insecure">http://<wbr />nadiana.<wbr />com/python-<wbr />pickle-<wbr />insecure</a></p></div>
  </div>

  
</div>


        <div style="margin:-10px 0 20px 5px" class="clearfix">
          
        </div>

        <div id="bug-tags">
          <span id="tags-heading">
            Tags:
          </span>
          <span id="tag-list">
            <a class="official-tag" href="/swift/+bugs?field.tag=security">security</a>
            <a class="unofficial-tag" href="/swift/+bugs?field.tag=essex-backport">essex-backport</a>
          </span>
          
          <a href="+edit" title="Edit tags" id="tags-trigger" class="sprite edit action-icon">Edit</a>
          <a href="/+help-bugs/tag-help.html" target="help" class="sprite maybe action-icon">Tag help</a>
        </div>

        <script type="text/javascript">
          LPJS.use('event', 'node', 'lp.bugs.tags_entry', function(Y) {
              Y.on('domready',
                   function(e) {
                       Y.lp.bugs.tags_entry.setup_tag_entry(
                           available_official_tags);
                   },
                   window);
          });
        </script>

        <div class="clearfix"></div>
      </div>

      <div id="branches-and-cves">
        <div id="bug-branches-container" style="float: left">
          

            <div id="bug-branches">
              <h2>Related branches</h2>

              
                

 

 <div class="buglink-summary">

  <a href="https://code.launchpad.net/~ubuntu-branches/ubuntu/precise/swift/precise-security" class="sprite branch">lp:ubuntu/precise-security/swift</a>
  
  
</div>



              
            </div>
          
        </div><!-- bug-branch-container -->

        <div class="cves">
          <h2>CVE References</h2>
          <ul>
            <li class="sprite cve">
              <a href="/bugs/cve/2012-4406" title="OpenStack Object Storage (swift) befo...">2012-4406</a>
            </li>
          </ul>
        </div>

        <div class="clearfix"></div>
      </div> <!-- branches and CVEs -->

      </div>

      <div>
      
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/1" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~ttx" class="sprite person">Thierry Carrez (ttx)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-04T14:12:28.124874+00:00" title="2012-06-04 14:12:28 UTC">on 2012-06-04</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/1"> #1</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Pickle is insecure in a model where an untrusted user can provide the pickled data. In the Swift model the data is pickled by Swift itself and stored in memcache, so the attack vector would suppose direct write access by an untrusted user to memcached data ?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Pickle is insecure in a model where an untrusted user can provide the pickled data. In the Swift model the data is pickled by Swift itself and stored in memcache, so the attack vector would suppose direct write access by an untrusted user to memcached data ?</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in swift: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        New &#8594; Incomplete
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/2" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~krahmer-p" class="sprite person">Sebastian Krahmer (krahmer-p)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-05T09:03:05.956269+00:00" title="2012-06-05 09:03:05 UTC">on 2012-06-05</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/2"> #2</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Ok, however the metadata is constructed with user data, e.g. &#x27;self.name&#x27;. I hope its not possible<br />
to do inlining tricks with that.</p>
<p>(Its also used directly to loads from the replicator, but I guess someone should not be able to<br />
trigger such requests (but mind header injection attacks via proxy)).</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Ok, however the metadata is constructed with user data, e.g. 'self.name'. I hope its not possible
to do inlining tricks with that.

(Its also used directly to loads from the replicator, but I guess someone should not be able to
trigger such requests (but mind header injection attacks via proxy)).
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/3" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~ttx" class="sprite person">Thierry Carrez (ttx)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-05T10:11:17.711065+00:00" title="2012-06-05 10:11:17 UTC">on 2012-06-05</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/3"> #3</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Since we only unpickle data that was pickled by ourselves, I think we are safe from inlining. User-provided strings that get pickled+unpickled remain strings.</p>
<p>That said, I&#x27;d love to hear from Swift devs what type of complex data is actually stored pickled: depending on the answer we could use something a bit less powerful (like JSON), reducing the attack surface.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Since we only unpickle data that was pickled by ourselves, I think we are safe from inlining. User-provided strings that get pickled+unpickled remain strings.

That said, I'd love to hear from Swift devs what type of complex data is actually stored pickled: depending on the answer we could use something a bit less powerful (like JSON), reducing the attack surface.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/4" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~chmouel" class="sprite person">Chmouel Boudjnah (chmouel)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-07T11:05:24.115011+00:00" title="2012-06-07 11:05:24 UTC">on 2012-06-07</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/4"> #4</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>AFAIK most of the JSON usage in Swift are API interaction there is no objects marshalling via json  in Swift.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">AFAIK most of the JSON usage in Swift are API interaction there is no objects marshalling via json  in Swift.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/5" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~thomas-suse-deactivatedaccount" class="sprite person-inactive">Thomas Biege (thomas-suse-deactivatedaccount)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-12T07:42:51.086687+00:00" title="2012-06-12 07:42:51 UTC">on 2012-06-12</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/5"> #5</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Regarding the attack vector via memcache mentioned in comment #1, AFAIK every local user has access to memcached because there is not authC in place to stop her/him.<br />
I am not that familiar with the openstack architecture, so...<br />
- Where does the memcached run exactly?<br />
- And does it only listen to 127.0.0.1?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Regarding the attack vector via memcache mentioned in comment #1, AFAIK every local user has access to memcached because there is not authC in place to stop her/him.
I am not that familiar with the openstack architecture, so...
- Where does the memcached run exactly?
- And does it only listen to 127.0.0.1?</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/6" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~chmouel" class="sprite person">Chmouel Boudjnah (chmouel)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-14T11:28:08.621920+00:00" title="2012-06-14 11:28:08 UTC">on 2012-06-14</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/6"> #6</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>memcached on Swift runs on every proxy servers and shared a cache so it bind on the internal network ip. For swift we always assume that the internal network needs to be secure since Swift has been designed this way.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">memcached on Swift runs on every proxy servers and shared a cache so it bind on the internal network ip. For swift we always assume that the internal network needs to be secure since Swift has been designed this way.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/7" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~redbo" class="sprite person">Mike Barton (redbo)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-14T12:53:35.274825+00:00" title="2012-06-14 12:53:35 UTC">on 2012-06-14</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/7"> #7</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>It&#x27;s not an immediate security risk, since the pickle data can&#x27;t be modified by external users.  But it could let someone e.g. escalate a network compromise into arbitrary code execution.</p>
<p>I&#x27;ve looked at switching some of the pickle serialization to json, but it&#x27;s pretty fiddly and will take time to get right.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">It's not an immediate security risk, since the pickle data can't be modified by external users.  But it could let someone e.g. escalate a network compromise into arbitrary code execution.

I've looked at switching some of the pickle serialization to json, but it's pretty fiddly and will take time to get right.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/8" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~ttx" class="sprite person">Thierry Carrez (ttx)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-15T09:01:32.039197+00:00" title="2012-06-15 09:01:32 UTC">on 2012-06-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/8"> #8</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>So we all agree that this is not directly exploitable in Swift current security model, but it would be a very welcome improvement to serialize to something less potentially harmful ?</p>
<p>If yes, I&#x27;d suggest we open this bug to the public as a welcome security strengthening issue (rather than keep it as an embargoed exploitable vulnerability).</p>
<p>Thomas/Sebastian: do you agree ?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">So we all agree that this is not directly exploitable in Swift current security model, but it would be a very welcome improvement to serialize to something less potentially harmful ?

If yes, I'd suggest we open this bug to the public as a welcome security strengthening issue (rather than keep it as an embargoed exploitable vulnerability).

Thomas/Sebastian: do you agree ?</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/9" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~thomas-suse-deactivatedaccount" class="sprite person-inactive">Thomas Biege (thomas-suse-deactivatedaccount)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-15T09:38:18.567908+00:00" title="2012-06-15 09:38:18 UTC">on 2012-06-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/9"> #9</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>I can agree with the reduced severity due to the attack vector and the additional steps needed.<br />
I wish I could agree to the conclusion that this is not a vulnerability. It is a privilege escalation; an abuse is possible that crosses privilege boundaries to execute system commands.</p>
<p>The open question for me is only the level of impact. How likely is it to gain access to the internal network for an external attacker or an untrusted customer/user using a VM instance? What I heard from Sebastian is that it is really hard to separate the network if the attacker is an untrusted customer using a VM to execute network-level attacks.<br />
Additionally Sebastian mentioned some ideas about alternative attack vectors in comment #2.<br />
Sebastian, did you try to follow this ideas?<br />
I also would not trust the authenticated user because OpenStack, by default, supports only password-based authentication and is at least vulnerable to brute force attacks.<br />
So, for me it is a vulnerability with an yet unknown impact level.</p>
<p>The attack could be mitigated using authentication for memcached.</p>
<p><a rel="nofollow" href="http://code.google.com/p/memcached/wiki/SASLAuthProtocol">http://<wbr />code.google.<wbr />com/p/memcached<wbr />/wiki/SASLAuthP<wbr />rotocol</a><br />
<a rel="nofollow" href="http://dustin.github.com/2010/08/08/memcached-security.html">http://<wbr />dustin.<wbr />github.<wbr />com/2010/<wbr />08/08/memcached<wbr />-security.<wbr />html</a><br />
<a rel="nofollow" href="http://www.sensepost.com/blog/4873.html">http://<wbr />www.sensepost.<wbr />com/blog/<wbr />4873.html</a></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">I can agree with the reduced severity due to the attack vector and the additional steps needed.
I wish I could agree to the conclusion that this is not a vulnerability. It is a privilege escalation; an abuse is possible that crosses privilege boundaries to execute system commands. 

The open question for me is only the level of impact. How likely is it to gain access to the internal network for an external attacker or an untrusted customer/user using a VM instance? What I heard from Sebastian is that it is really hard to separate the network if the attacker is an untrusted customer using a VM to execute network-level attacks.
Additionally Sebastian mentioned some ideas about alternative attack vectors in comment #2.
Sebastian, did you try to follow this ideas?
I also would not trust the authenticated user because OpenStack, by default, supports only password-based authentication and is at least vulnerable to brute force attacks.
So, for me it is a vulnerability with an yet unknown impact level.

The attack could be mitigated using authentication for memcached.

http://code.google.com/p/memcached/wiki/SASLAuthProtocol
http://dustin.github.com/2010/08/08/memcached-security.html
http://www.sensepost.com/blog/4873.html</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/10" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~chmouel" class="sprite person">Chmouel Boudjnah (chmouel)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-15T10:24:17+00:00" title="2012-06-15 10:24:17 UTC">on 2012-06-15</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1006414/comments/10">
                <strong>Re: [Bug 1006414] Re: Insecure loads()</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/10"> #10</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>On Fri, Jun 15, 2012 at 10:38 AM, Thomas Biege &lt;email address hidden&gt; wrote:<br />
<span class="foldable-quoted">
&gt; The open question for me is only the level of impact. How likely is it to gain access to the internal network for an external attacker or an untrusted customer/user using a VM instance? What I heard from Sebastian is that it is really hard to separate the network if the attacker is an untrusted customer
</span></p>
<p>Are you speaking from nova to swift ? Usually the private networks<br />
would be on different networks between nova and swift only the proxy<br />
will be exposed to the VM and the memcached services will be only<br />
listening to the private interface on the Swift side and due not<br />
exposed to the VMs.</p>
<p>Chmouel,</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">On Fri, Jun 15, 2012 at 10:38 AM, Thomas Biege &lt;thomas@suse.de&gt; wrote:
&gt; The open question for me is only the level of impact. How likely is it to gain access to the internal network for an external attacker or an untrusted customer/user using a VM instance? What I heard from Sebastian is that it is really hard to separate the network if the attacker is an untrusted customer

Are you speaking from nova to swift ? Usually the private networks
would be on different networks between nova and swift only the proxy
will be exposed to the VM and the memcached services will be only
listening to the private interface on the Swift side and due not
exposed to the VMs.

Chmouel,
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/11" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~krahmer-p" class="sprite person">Sebastian Krahmer (krahmer-p)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-18T08:31:19.087291+00:00" title="2012-06-18 08:31:19 UTC">on 2012-06-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/11"> #11</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Ok, so theres no immediate impact, yet its probably still worth considering to replace pickle<br />
by something that cannot execute commands in de-serialization.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Ok, so theres no immediate impact, yet its probably still worth considering to replace pickle
by something that cannot execute commands in de-serialization.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/12" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~krahmer-p" class="sprite person">Sebastian Krahmer (krahmer-p)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-18T12:18:45.967222+00:00" title="2012-06-18 12:18:45 UTC">on 2012-06-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/12"> #12</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Um, I just realized that we talked about 2 different attack vectors.</p>
<p>First, pickle is used in the backend to store and load data to/from extended attributes from<br />
files inside read_metadata(). Thats not nice, but not a severe issue if nobody can mod the xattrs.</p>
<p>Then, I just realized that pickle is also used in the memcache part. As memcached is distributed<br />
over a lot of nodes and has no authentication, except your mentioned separation into<br />
a private LAN, this is worse than the above case.<br />
The swift proxy runs as root (is that necessary anyways, after binding to a low port?) and potentially<br />
unpickles anything that he gets. If just someone polluted the memcached with evil pickle data.<br />
I see your private LAN argument, but my experience in network consulting unfortunally shows me that<br />
there is often no such strict separation so that memcached cannot be accessed from the VM/cloud network.</p>
<p>However, I am not exactly sure how to handle that without too much efforts.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Um, I just realized that we talked about 2 different attack vectors.

First, pickle is used in the backend to store and load data to/from extended attributes from
files inside read_metadata(). Thats not nice, but not a severe issue if nobody can mod the xattrs.

Then, I just realized that pickle is also used in the memcache part. As memcached is distributed
over a lot of nodes and has no authentication, except your mentioned separation into
a private LAN, this is worse than the above case.
The swift proxy runs as root (is that necessary anyways, after binding to a low port?) and potentially
unpickles anything that he gets. If just someone polluted the memcached with evil pickle data.
I see your private LAN argument, but my experience in network consulting unfortunally shows me that
there is often no such strict separation so that memcached cannot be accessed from the VM/cloud network.

However, I am not exactly sure how to handle that without too much efforts.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/13" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~thomas-suse-deactivatedaccount" class="sprite person-inactive">Thomas Biege (thomas-suse-deactivatedaccount)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-18T12:31:53.578386+00:00" title="2012-06-18 12:31:53 UTC">on 2012-06-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/13"> #13</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>I would propose to use SASL for memcached to mitigate the issue.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">I would propose to use SASL for memcached to mitigate the issue.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/14" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~krahmer-p" class="sprite person">Sebastian Krahmer (krahmer-p)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-18T12:46:37.650315+00:00" title="2012-06-18 12:46:37 UTC">on 2012-06-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/14"> #14</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>E.g. an attacker from the VM or &#x27;outside network&#x27; could send bogus ARP packets to the swift proxy,<br />
polluting his ARP cache so that any connect() to an internal memcache IP will end at the attacker who can then<br />
send any response to proxie&#x27;s memcache.get() and trigger the pickle.</p>
<p>I think it will make a lot of headache to the network admin to nail down such things.</p>
<p>I am not really deep into the internals of WSGI, but would it be easily possible to drop<br />
UID to a nova-user and/or chroot to /var/run/nova once swift proxy started? Or is that a problem<br />
with python&#x27;s importings?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">E.g. an attacker from the VM or 'outside network' could send bogus ARP packets to the swift proxy,
polluting his ARP cache so that any connect() to an internal memcache IP will end at the attacker who can then
send any response to proxie's memcache.get() and trigger the pickle.

I think it will make a lot of headache to the network admin to nail down such things.

I am not really deep into the internals of WSGI, but would it be easily possible to drop
UID to a nova-user and/or chroot to /var/run/nova once swift proxy started? Or is that a problem
with python's importings?

</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/15" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~gholt" class="sprite person">gholt (gholt)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-18T13:56:11.459309+00:00" title="2012-06-18 13:56:11 UTC">on 2012-06-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/15"> #15</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>All the various Swift daemons support dropping privileges. For example, please see the &quot;user&quot; configuration variable at <a rel="nofollow" href="http://swift.openstack.org/deployment_guide.html#proxy-server-configuration">http://<wbr />swift.openstack<wbr />.org/deployment<wbr />_guide.<wbr />html#proxy-<wbr />server-<wbr />configuration</a></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">All the various Swift daemons support dropping privileges. For example, please see the "user" configuration variable at http://swift.openstack.org/deployment_guide.html#proxy-server-configuration</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/16" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~vuntz" class="sprite person">Vincent Untz (vuntz)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-20T13:07:26.715756+00:00" title="2012-06-20 13:07:26 UTC">on 2012-06-20</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/16"> #16</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>I&#x27;ve been looking at the use of pickle on the memcache side only, and it looks to me that moving to JSON there shouldn&#x27;t be an issue -- I don&#x27;t see any of the user calling it with really complex object types.</p>
<p>The only issue I can see with the default encoder/decoder is that some types will be changed after serialization/<wbr />deserialization (for instance, tuples become lists, str becomes unicode, etc.). But I don&#x27;t think it&#x27;s something that will be a problem in the code.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">I've been looking at the use of pickle on the memcache side only, and it looks to me that moving to JSON there shouldn't be an issue -- I don't see any of the user calling it with really complex object types.

The only issue I can see with the default encoder/decoder is that some types will be changed after serialization/deserialization (for instance, tuples become lists, str becomes unicode, etc.). But I don't think it's something that will be a problem in the code.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/17" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~vuntz" class="sprite person">Vincent Untz (vuntz)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-20T13:15:29.034669+00:00" title="2012-06-20 13:15:29 UTC">on 2012-06-20</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/17"> #17</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>As to the use of SASL for memcached: I&#x27;m not sure we want to implement that ourselves in our small memcache client : handling sasl, and moving to the binary protocal for memcache would have to be dealt with (not sure how easy it is to do sasl in python). We could instead use pylibmc (<a rel="nofollow" href="http://sendapatch.se/projects/pylibmc/">http://<wbr />sendapatch.<wbr />se/projects/<wbr />pylibmc/</a>) which wraps libmemcached and provides sasl support if the library was built with sasl.</p>
<p>What would be the preferred way here?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">As to the use of SASL for memcached: I'm not sure we want to implement that ourselves in our small memcache client : handling sasl, and moving to the binary protocal for memcache would have to be dealt with (not sure how easy it is to do sasl in python). We could instead use pylibmc (http://sendapatch.se/projects/pylibmc/) which wraps libmemcached and provides sasl support if the library was built with sasl.

What would be the preferred way here?</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/18" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~vuntz" class="sprite person">Vincent Untz (vuntz)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-21T14:15:17.474266+00:00" title="2012-06-21 14:15:17 UTC">on 2012-06-21</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/18"> #18</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1006414/+attachment/3198826/+files/0001-Do-not-use-pickle-for-serialization-in-memcache-but-.patch">0001-Do-not-use-pickle-for-serialization-in-memcache-but-.patch</a>
        <a class="sprite edit action-icon" href="/swift/+bug/1006414/+attachment/3198826">Edit</a>
        (7.1 KiB,
        text/plain)
      </li>
    </ul>

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Here&#x27;s a patch to use JSON instead of pickle for the memcache client. Moving to SASL will still be something worth the effort after that, but that&#x27;s a first step, I guess.</p>
<p>This needs some more serious testing, as I&#x27;m unsure I correctly checked that all users of memcache are using simple-enough object types.</p>
<p>Also, as I wasn&#x27;t sure that getting unicode when loading strings from json was good, I wrapped things to get str instead. I&#x27;m assuming we really always care only about utf8 (not sure this is a correct assumption, though).</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Here's a patch to use JSON instead of pickle for the memcache client. Moving to SASL will still be something worth the effort after that, but that's a first step, I guess.

This needs some more serious testing, as I'm unsure I correctly checked that all users of memcache are using simple-enough object types.

Also, as I wasn't sure that getting unicode when loading strings from json was good, I wrapped things to get str instead. I'm assuming we really always care only about utf8 (not sure this is a correct assumption, though).</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/19" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~ttx" class="sprite person">Thierry Carrez (ttx)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-25T09:51:25.152894+00:00" title="2012-06-25 09:51:25 UTC">on 2012-06-25</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/19"> #19</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Didn&#x27;t get a clear answer to my proposal of opening this bug to public.</p>
<p>The fact that access to Swift &quot;trusted&quot; internal network allows you to fully compromise Swift is well-known. The &quot;internal&quot; network in Swift is much less vulnerable than the Nova internal network, where VM network containment vulnerabilities are much more likely (that&#x27;s why Nova doesn&#x27;t rely on a trusted network). And if you drop privileges to the swift user (as you should), there is no particular escalation due to use of pickle.</p>
<p>So we are left with the fact that breaking into Swift &quot;trusted&quot; internal network allows you to compromise Swift. I&#x27;d welcome any change that prevents that (or gives you at least the option to run on untrusted internal network), but we are a bit far away from that: all Swift internal RPC also rely on a trusted internal network model. So I see no reason to keep the discussion on that closed. On the contrary, discussing it in a small group probably slows us down in improving that well-known state.</p>
<p>So unless someone disagrees in the next 48 hours, I will open up this bug to the public.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Didn't get a clear answer to my proposal of opening this bug to public.

The fact that access to Swift "trusted" internal network allows you to fully compromise Swift is well-known. The "internal" network in Swift is much less vulnerable than the Nova internal network, where VM network containment vulnerabilities are much more likely (that's why Nova doesn't rely on a trusted network). And if you drop privileges to the swift user (as you should), there is no particular escalation due to use of pickle.

So we are left with the fact that breaking into Swift "trusted" internal network allows you to compromise Swift. I'd welcome any change that prevents that (or gives you at least the option to run on untrusted internal network), but we are a bit far away from that: all Swift internal RPC also rely on a trusted internal network model. So I see no reason to keep the discussion on that closed. On the contrary, discussing it in a small group probably slows us down in improving that well-known state.

So unless someone disagrees in the next 48 hours, I will open up this bug to the public.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/20" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~krahmer-p" class="sprite person">Sebastian Krahmer (krahmer-p)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-25T10:17:13.434166+00:00" title="2012-06-25 10:17:13 UTC">on 2012-06-25</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/20"> #20</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>I see your point. But would be very nice to use Vincent&#x27;s json patch (pickle seems really overload<br />
for simple string dictionary storage anyway). For me its OK to<br />
make this bug public.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">I see your point. But would be very nice to use Vincent's json patch (pickle seems really overload
for simple string dictionary storage anyway). For me its OK to
make this bug public.


</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/21" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~ttx" class="sprite person">Thierry Carrez (ttx)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-28T10:15:16.038541+00:00" title="2012-06-28 10:15:16 UTC">on 2012-06-28</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/21"> #21</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Definitely in agreement that Vincent&#x27;s patch should be included ASAP. Opening :)</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Definitely in agreement that Vincent's patch should be included ASAP. Opening :)</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      
    
    <tr>
      <td style="text-align: right;">
        <b>security vulnerability</b>:
      </td>
      <td>
        yes &#8594; no
      </td>
    </tr>
    <tr>
      <td style="text-align: right;">
        <b>visibility</b>:
      </td>
      <td>
        private &#8594; public
      </td>
    </tr>
    <tr>
      <td style="text-align: right;">
        <b>tags</b>:
      </td>
      <td>
        added: security
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/22" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-06-28T13:28:44.835651+00:00" title="2012-06-28 13:28:44 UTC">on 2012-06-28</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1006414/comments/22">
                <strong>Fix proposed to swift (master)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/22"> #22</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Fix proposed to branch: master<br />
Review: <a rel="nofollow" href="https://review.openstack.org/9105">https:/<wbr />/review.<wbr />openstack.<wbr />org/9105</a></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Fix proposed to branch: master
Review: https://review.openstack.org/9105</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in swift: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>assignee</b>:
      </td>
      <td>
        nobody &#8594; Vincent Untz (vuntz)
      </td>
    </tr>
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        Incomplete &#8594; In Progress
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/23" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-08-28T21:40:04.342827+00:00" title="2012-08-28 21:40:04 UTC">on 2012-08-28</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1006414/comments/23">
                <strong>Fix merged to swift (master)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/23"> #23</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Reviewed:  <a rel="nofollow" href="https://review.openstack.org/9105">https:/<wbr />/review.<wbr />openstack.<wbr />org/9105</a><br />
Committed: <a rel="nofollow" href="http://github.com/openstack/swift/commit/e1ff51c04554d51616d2845f92ab726cb0e5831a">http://<wbr />github.<wbr />com/openstack/<wbr />swift/commit/<wbr />e1ff51c04554d51<wbr />616d2845f92ab72<wbr />6cb0e5831a</a><br />
Submitter: Jenkins<br />
Branch:    master</p>
<p>commit e1ff51c04554d51<wbr />616d2845f92ab72<wbr />6cb0e5831a<br />
Author: Vincent Untz &lt;email address hidden&gt;<br />
Date:   Thu Jun 21 14:37:41 2012 +0200</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Do not use pickle for serialization in memcache, but JSON</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;We don&#x27;t want to use pickle as it can execute arbitrary code. JSON is<br />
&nbsp;&nbsp;&nbsp;&nbsp;safer. However, note that it supports serialization for only some<br />
&nbsp;&nbsp;&nbsp;&nbsp;specific subset of object types; this should be enough for what we need,<br />
&nbsp;&nbsp;&nbsp;&nbsp;though.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;To avoid issues on upgrades (unability to read pickled values, and cache<br />
&nbsp;&nbsp;&nbsp;&nbsp;poisoning for old servers not understanding JSON), we add a<br />
&nbsp;&nbsp;&nbsp;&nbsp;memcache_<wbr />serialization_<wbr />support configuration option, with the following<br />
&nbsp;&nbsp;&nbsp;&nbsp;values:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 = older, insecure pickle serialization<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1 = json serialization but pickles can still be read (still insecure)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 = json serialization only (secure and the default)</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;To avoid an instant full cache flush, existing installations should<br />
&nbsp;&nbsp;&nbsp;&nbsp;upgrade with 0, then set to 1 and reload, then after some time (24<br />
&nbsp;&nbsp;&nbsp;&nbsp;hours) set to 2 and reload. Support for 0 and 1 will be removed in<br />
&nbsp;&nbsp;&nbsp;&nbsp;future versions.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Part of <a href="/bugs/1006414" class="bug-link">bug 1006414</a>.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: Id7d6d547b103b4<wbr />f23ebf5be98b88f<wbr />09ec6027ce4</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Reviewed:  https://review.openstack.org/9105
Committed: http://github.com/openstack/swift/commit/e1ff51c04554d51616d2845f92ab726cb0e5831a
Submitter: Jenkins
Branch:    master

commit e1ff51c04554d51616d2845f92ab726cb0e5831a
Author: Vincent Untz &lt;vuntz@suse.com&gt;
Date:   Thu Jun 21 14:37:41 2012 +0200

    Do not use pickle for serialization in memcache, but JSON
    
    We don't want to use pickle as it can execute arbitrary code. JSON is
    safer. However, note that it supports serialization for only some
    specific subset of object types; this should be enough for what we need,
    though.
    
    To avoid issues on upgrades (unability to read pickled values, and cache
    poisoning for old servers not understanding JSON), we add a
    memcache_serialization_support configuration option, with the following
    values:
    
     0 = older, insecure pickle serialization
     1 = json serialization but pickles can still be read (still insecure)
     2 = json serialization only (secure and the default)
    
    To avoid an instant full cache flush, existing installations should
    upgrade with 0, then set to 1 and reload, then after some time (24
    hours) set to 2 and reload. Support for 0 and 1 will be removed in
    future versions.
    
    Part of bug 1006414.
    
    Change-Id: Id7d6d547b103b4f23ebf5be98b88f09ec6027ce4
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in swift: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        In Progress &#8594; Fix Committed
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          

          
              <div class="boardComment">
  <div class="boardCommentDetails">
    
      <a href="https://launchpad.net/~ttx" class="sprite person">Thierry Carrez (ttx)</a>
    
    <time title="2012-09-04 20:31:07 UTC" datetime="2012-09-04T20:31:07.976494+00:00">on 2012-09-04</time>
  </div>
  <div class="boardCommentActivity">
    <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in swift: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>milestone</b>:
      </td>
      <td>
        none &#8594; 1.7.0
      </td>
    </tr>
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        Fix Committed &#8594; Fix Released
      </td>
    </tr>
  
</table>
  </div>
</div>
          

          

        
        
          

          
              <div class="boardComment">
  <div class="boardCommentDetails">
    
      <a href="https://launchpad.net/~ghe.rivero" class="sprite person">Ghe Rivero (ghe.rivero)</a>
    
    <time title="2012-09-06 07:31:36 UTC" datetime="2012-09-06T07:31:36.113509+00:00">on 2012-09-06</time>
  </div>
  <div class="boardCommentActivity">
    <table class="bug-activity">
  
    
      
    
    <tr>
      <td style="text-align: right;">
        <b>tags</b>:
      </td>
      <td>
        added: essex-backport
      </td>
    </tr>
  
</table>
  </div>
</div>
          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/24" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-09-06T08:33:29.271133+00:00" title="2012-09-06 08:33:29 UTC">on 2012-09-06</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1006414/comments/24">
                <strong>Fix proposed to swift (stable/essex)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/24"> #24</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Fix proposed to branch: stable/essex<br />
Review: <a rel="nofollow" href="https://review.openstack.org/12492">https:/<wbr />/review.<wbr />openstack.<wbr />org/12492</a></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Fix proposed to branch: stable/essex
Review: https://review.openstack.org/12492</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1006414/comments/25" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~apevec" class="sprite person">Alan Pevec (apevec)</a>
            wrote
            <time itemprop="commentTime" datetime="2012-09-06T09:04:15.369799+00:00" title="2012-09-06 09:04:15 UTC">on 2012-09-06</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1006414/comments/25"> #25</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>I don&#x27;t have a permission to see the proposed essex backport but IMHO patch as-is is not appropriate for the stable branch.<br />
It should at least be modified to have memcache_<wbr />serialization_<wbr />support=<wbr />0 as default to avoid surprises on upgrade!</p>
<p>BTW does Swift team maintain stable branch at all? Currently stable/essex branch == 1.4.8 tag and last I remember was that stable for Swift is not needed, quoting PTL from one stable/essex proposal: &quot;taking into account that swift releases are frequent, prod-ready, and there is a migration path for them&quot; <a rel="nofollow" href="https://review.openstack.org/#/c/6619/">https:/<wbr />/review.<wbr />openstack.<wbr />org/#/c/<wbr />6619/</a></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">I don't have a permission to see the proposed essex backport but IMHO patch as-is is not appropriate for the stable branch.
It should at least be modified to have memcache_serialization_support=0 as default to avoid surprises on upgrade!

BTW does Swift team maintain stable branch at all? Currently stable/essex branch == 1.4.8 tag and last I remember was that stable for Swift is not needed, quoting PTL from one stable/essex proposal: "taking into account that swift releases are frequent, prod-ready, and there is a migration path for them" https://review.openstack.org/#/c/6619/
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        <div style="float: right;">
          <a class="menu-link-activitylog" href="https://bugs.launchpad.net/swift/+bug/1006414/+activity">See full activity log</a>
        </div>
        <div class="clearfix"></div>

        
          

          
            <div align="center" id="add-comment-login-first">
              To post a comment you must <a href="+login?comments=all">log in</a>.
            </div>
          
        
        
      

      </div><!-- class="top-portlet" -->
      </div><!--- id="maincontentsub"-->
      <div>
        <div id="duplicate-form-container"></div>
        <div id="privacy-form-container"></div>
      </div>
    </div>
            
            
          </div><!-- yui-b -->
        </div><!-- yui-main -->

        
          <div id="side-portlets" class="yui-b side">
            
      <div id="involvement" class="portlet">
        <ul class="involvement">
          <li class="single">
            <a class="sprite bugs" href="/swift/+filebug">
              Report a bug
            </a>
          </li>
        </ul>
      </div>
      <div id="privacy" class="first portlet public">
  <div id="privacy-text">
     <span id="information-type-summary" class="sprite public">This report contains
         <strong id="information-type">Public</strong>
         information
     </span>&nbsp;<a class="sprite edit action-icon" id="privacy-link" href="/swift/+bug/1006414/+secrecy">Edit</a>

     <div id="information-type-description" style="padding-top: 5px">Everyone can see this information.
</div>
  </div>
</div>

      <div id="portlet-actions" class="portlet vertical">
  <ul id="duplicate-actions">
    <li class="sprite bug-dupe">
    <span id="mark-duplicate-text">
    <a class="menu-link-mark-dupe" href="/swift/+bug/1006414/+duplicate">Mark as duplicate</a>
    </span>
    </li>
    
    <li><a class="menu-link-createquestion sprite add" href="https://bugs.launchpad.net/swift/+bug/1006414/+create-question">Convert to a question</a></li>
    
    <li><a class="menu-link-addbranch sprite add" href="https://bugs.launchpad.net/swift/+bug/1006414/+addbranch">Link a related branch</a></li>
    <li><a class="menu-link-linktocve sprite add" href="https://bugs.launchpad.net/swift/+bug/1006414/+linkcve">Link to <abbr title="Common Vulnerabilities and Exposures Index">CVE</abbr></a></li>
    <li><a class="menu-link-unlinkcve sprite modify remove" href="https://bugs.launchpad.net/swift/+bug/1006414/+unlinkcve">Remove CVE link</a></li>
  </ul>
</div>

      

      <div class="portlet vertical" id="portlet-subscription">
  <div class="section">
    <div id="current_user_subscription" class="False">
      
        <span>You are</span>
        
        <a class="menu-link-subscription sprite modify edit" href="/swift/+bug/1006414/+subscribe">
           
           
           
           not directly subscribed to this bug's notifications.
        </a>
      
      
    </div>
    <div id="sub-unsub-spinner">Subscribing...</div>
    <ul>
      
      <li><a class="menu-link-editsubscriptions sprite modify edit" href="https://bugs.launchpad.net/swift/+bug/1006414/+subscriptions" title="View and change your subscriptions to this bug">Edit bug mail</a></li>
    </ul>
  </div>
  <script type="text/javascript">
    LPJS.use('io-base', 'node',
            'lp.bugs.bugtask_index.portlets.subscription', function(Y) {
        Y.on('domready', function() {
            Y.lp.bugs.bugtask_index.portlets.subscription.initialize();
        });
    });
  </script>
</div>

      <div class="portlet vertical" id="portlet-subscribers">
  <h2>Other bug subscribers</h2>
  <div>
    <div><a class="menu-link-addsubscriber sprite add" href="https://bugs.launchpad.net/swift/+bug/1006414/+addsubscriber" title="Launchpad will email that person whenever this bugs changes">Subscribe someone else</a></div>
  </div>
  <div id="other-bug-subscribers"></div>
</div>

      

      

      
  <div class="portlet" id="portlet-patches">
    <h2>Patches</h2>
    <ul>
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1006414/+attachment/3198826/+files/0001-Do-not-use-pickle-for-serialization-in-memcache-but-.patch">0001-Do-not-use-pickle-for-serialization-in-memcache-but-.patch</a>
        <small>
          (<a href="/swift/+bug/1006414/+attachment/3198826">edit</a>)
        </small>
      </li>
    </ul>
    <ul>
      <li>
        <a class="sprite add" href="/swift/+bug/1006414/+addcomment?field.patch=on">Add patch</a>
      </li>
    </ul>
  </div>
  


      

    
          </div><!-- yui-b side -->
        
      </div><!-- yui-t4 -->

      
  <div id="footer" class="footer">
    <div class="lp-arcana">
        <div class="lp-branding">
          <a href="https://launchpad.net/"><img src="/@@/launchpad-logo-and-name-hierarchy.png" alt="Launchpad" /></a>
          &nbsp;&bull;&nbsp;
          <a href="https://launchpad.net/+tour">Take the tour</a>
          &nbsp;&bull;&nbsp;
          <a href="https://help.launchpad.net/">Read the guide</a>
          &nbsp;
          <form id="globalsearch" method="get" accept-charset="UTF-8" action="https://launchpad.net/+search">
            <input type="search" id="search-text" name="field.text" />
            <input type="image" src="/@@/search" style="vertical-align:5%" alt="Search Launchpad" />
          </form>
        </div>
        
  

    </div>

    <div class="colophon">
      &copy; 2004-2021
      <a href="http://canonical.com/">Canonical&nbsp;Ltd.</a>
      &nbsp;&bull;&nbsp;
      <a href="https://launchpad.net/legal">Terms of use</a>
      &nbsp;&bull;&nbsp;
      <a href="https://www.ubuntu.com/legal/dataprivacy">Data privacy</a>
      &nbsp;&bull;&nbsp;
      <a href="/feedback">Contact Launchpad Support</a>
      
      &nbsp;&bull;&nbsp;
      <a href="http://blog.launchpad.net/">Blog</a>
      
	&nbsp;&bull;&nbsp;
	<a href="https://canonical.com/careers">Careers</a>
      
      &nbsp;&bull;&nbsp;
      <a href="https://twitter.com/launchpadstatus">System status</a>
      <span id="lp-version">
      &nbsp;&bull;&nbsp;
        r0d8de2b
        
        
        (<a href="https://dev.launchpad.net/">Get the code!</a>)
      </span>
    </div>
  </div>

    </div><!-- yui-d0-->

    
  
  
  <script id="json-cache-script">LP.cache = {"initial_comment_batch_offset": 41, "first visible_recent_comment": -15, "related_features": {}, "subscribers_portlet_url_data": {"web_link": "https://bugs.launchpad.net/bugs/1006414", "self_link": "https://bugs.launchpad.net/api/devel/bugs/1006414"}, "bug": {"self_link": "https://bugs.launchpad.net/api/devel/bugs/1006414", "web_link": "https://bugs.launchpad.net/bugs/1006414", "resource_type_link": "https://bugs.launchpad.net/api/devel/#bug", "id": 1006414, "private": false, "information_type": "Public", "name": null, "title": "Insecure loads()", "description": "Split from bug 1005903, from Sebastian Krahmer:\n\nswift uses pickle to store and load meta data. pickle is insecure\nand allows to execute arbitrary code in loads().\n[...]\nBTW, you can read more on executing code via pickle or cPickle here:\nhttp://nadiana.com/python-pickle-insecure", "owner_link": "https://bugs.launchpad.net/api/devel/~ttx", "bug_tasks_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/bug_tasks", "duplicate_of_link": null, "date_created": "2012-05-30T13:56:28.104867+00:00", "activity_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/activity", "subscriptions_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/subscriptions", "date_last_updated": "2013-06-20T02:39:20.111171+00:00", "who_made_private_link": null, "date_made_private": null, "heat": 22, "bug_watches_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/bug_watches", "cves_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/cves", "duplicates_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/duplicates", "attachments_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/attachments", "security_related": false, "latest_patch_uploaded": "2012-06-21T14:15:17.474266+00:00", "tags": ["essex-backport", "security"], "date_last_message": "2012-09-06T09:04:15.369799+00:00", "number_of_duplicates": 0, "message_count": 26, "users_affected_count": 2, "users_unaffected_count": 0, "users_affected_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/users_affected", "users_unaffected_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/users_unaffected", "users_affected_count_with_dupes": 2, "other_users_affected_count_with_dupes": 2, "users_affected_with_dupes_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/users_affected_with_dupes", "messages_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/messages", "linked_branches_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/linked_branches", "linked_merge_proposals_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1006414/linked_merge_proposals", "http_etag": "\"acac41226993226e7def5e204dd24d789507cf59-19d2269fcec9b8239493234eea3e348c03be6826\""}, "bugtask_data": {"1208685": {"milestone_widget_items": "[]", "status_widget_items": "[]", "delete_link": "https://bugs.launchpad.net/swift/+bug/1006414/+delete", "user_can_edit_status": true, "bugtask_path": "/swift/+bug/1006414", "row_id": "tasksummary1208685", "importance_value": "Undecided", "importance_widget_items": "[]", "id": 1208685, "user_can_delete": false, "targetname": "OpenStack Object Storage (swift)", "user_can_edit_importance": false, "assignee_vocabulary_filters": [], "bug_title": "Insecure loads()", "assignee_value": "vuntz", "hide_assignee_team_selection": true, "user_can_edit_assignee": false, "form_row_id": "task1208685", "target_is_product": true, "assignee_is_team": false, "status_value": "Fix Released", "user_can_unassign": false, "milestone_value": "https://bugs.launchpad.net/api/devel/swift/+milestone/1.7.0", "assignee_vocabulary": "AllUserTeamsParticipation", "user_can_edit_milestone": false, "prefix": "swift"}}, "bug_is_private": false, "context": {"self_link": "https://bugs.launchpad.net/api/devel/swift/+bug/1006414", "web_link": "https://bugs.launchpad.net/swift/+bug/1006414", "resource_type_link": "https://bugs.launchpad.net/api/devel/#bug_task", "bug_link": "https://bugs.launchpad.net/api/devel/bugs/1006414", "milestone_link": "https://bugs.launchpad.net/api/devel/swift/+milestone/1.7.0", "status": "Fix Released", "importance": "Undecided", "assignee_link": "https://bugs.launchpad.net/api/devel/~vuntz", "bug_target_display_name": "OpenStack Object Storage (swift)", "bug_target_name": "swift", "bug_watch_link": null, "date_assigned": "2012-06-28T13:28:42.905721+00:00", "date_created": "2012-05-30T13:56:28.104867+00:00", "date_confirmed": "2012-06-28T13:28:42.957764+00:00", "date_incomplete": null, "date_in_progress": "2012-06-28T13:28:42.957764+00:00", "date_closed": "2012-09-04T20:31:08.372330+00:00", "date_left_new": "2012-06-04T14:12:28.465406+00:00", "date_triaged": "2012-06-28T13:28:42.957764+00:00", "date_fix_committed": "2012-08-28T21:40:02.768310+00:00", "date_fix_released": "2012-09-04T20:31:08.372330+00:00", "date_left_closed": null, "owner_link": "https://bugs.launchpad.net/api/devel/~ttx", "target_link": "https://bugs.launchpad.net/api/devel/swift", "title": "Bug #1006414 in OpenStack Object Storage (swift): \"Insecure loads()\"", "related_tasks_collection_link": "https://bugs.launchpad.net/api/devel/swift/+bug/1006414/related_tasks", "is_complete": true, "http_etag": "\"bc8ab7a2076c580f033ed877c0b9439847408873-cacafcf90e87b3fffdc5037c369900aad1cd1b2b\""}, "information_type_data": {"PUBLIC": {"value": "PUBLIC", "is_private": false, "order": 0, "name": "Public", "description": "Everyone can see this information.\n", "description_css_class": "choice-description"}, "PRIVATESECURITY": {"value": "PRIVATESECURITY", "is_private": true, "order": 2, "name": "Private Security", "description": "Only the security group can see this information.\n ", "description_css_class": "choice-description"}, "USERDATA": {"value": "USERDATA", "is_private": true, "order": 3, "name": "Private", "description": "Only shared with users permitted to see private user information.\n", "description_css_class": "choice-description"}, "PUBLICSECURITY": {"value": "PUBLICSECURITY", "is_private": false, "order": 1, "name": "Public Security", "description": "Everyone can see this security related information.\n", "description_css_class": "choice-description"}}, "total_comments_and_activity": 45};</script>

    
  

    
  </body>


  <!--
    Facet name: bugs
    Page type: main_side
    Has global search: True
    Has application tabs: True
    Has side portlets: True

    At least 71 queries/external actions issued in 1.03 seconds

    Features: {'bugs.nominations.bug_supervisors_can_target': 'on', 'hard_timeout': '9000', 'visible_render_time': None, 'bugs.affected_count_includes_dupes.disabled': None, 'app.mainsite_only.canonical_url': None, 'app.maintenance_message': None, 'js.yui_version': None, 'disclosure.dsp_picker.enabled': 'on', 'profiling.enabled': None, 'baselayout.careers_link.disabled': None}

    r0d8de2b

    -->

</html>

