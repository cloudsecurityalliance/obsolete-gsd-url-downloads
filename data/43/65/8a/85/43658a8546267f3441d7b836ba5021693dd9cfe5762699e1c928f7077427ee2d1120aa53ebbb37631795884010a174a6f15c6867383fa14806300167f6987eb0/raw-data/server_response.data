<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head> <title>curl - curl overwrite local file with -J - CVE-2020-8177</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
<link rel="stylesheet" type="text/css" href="/curl.css">
<link rel="shortcut icon" href="/favicon.ico">
<link rel="icon" href="/logo/curl-symbol.svg" type="image/svg+xml">
<link rel="STYLESHEET" type="text/css" href="https://curl.se/manpage.css">
</head>
<body>
<div class="main">
<div class="menu">
<a href="/docs/" class="menuitem" title="Documentation Overview">Docs Overview</a>
<div class="dropdown">
  <a class="dropbtn" href="/docs/projdocs.html">Project</a>
  <div class="dropdown-content">
    <a href="/docs/bugbounty.html">Bug Bounty</a>
    <a href="/docs/bugs.html">Bug Report</a>
    <a href="/docs/code-of-conduct.html">Code of conduct</a>
    <a href="/docs/libs.html">Dependencies</a>
    <a href="/donation.html">Donate</a>
    <a href="/docs/faq.html">FAQ</a>
    <a href="/docs/features.html">Features</a>
    <a href="/docs/governance.html">Governance</a>
    <a href="/docs/history.html">History</a>
    <a href="/docs/install.html">Install</a>
    <a href="/docs/knownbugs.html">Known Bugs</a>
    <a href="/docs/todo.html">TODO</a>
    <a href="/about.html">Web Site Info</a>
  </div>
</div>
<div class="dropdown">
  <a class="dropbtn" href="/docs/protdocs.html">Protocols</a>
  <div class="dropdown-content">
    <a href="/docs/hsts.html">HSTS</a>
    <a href="/docs/http-cookies.html">HTTP cookies</a>
    <a href="/docs/http2.html">HTTP/2</a>
    <a href="/docs/http3.html">HTTP/3</a>
    <a href="/docs/mqtt.html">MQTT</a>
    <a href="/docs/sslcerts.html">SSL certs</a>
    <a href="/docs/caextract.html">CA Extract</a>
    <a href="/docs/ssl-compared.html">SSL libs compared</a>
    <a href="/docs/url-syntax.html">URL syntax</a>
  </div>
</div>
<div class="dropdown">
  <a class="dropbtn" href="/docs/reldocs.html">Releases</a>
  <div class="dropdown-content">
    <a href="/changes.html">Changelog</a>
    <a href="/docs/releases.html">Release Table</a>
    <a href="/docs/security.html">Security Problems</a>
    <a href="/docs/versions.html">Version Nums</a>
    <a href="/docs/vulnerabilities.html">Vulnerabilities</a>
  </div>
</div>
<div class="dropdown">
  <a class="dropbtn" href="/docs/tooldocs.html">Tool</a>
  <div class="dropdown-content">
    <a href="/docs/comparison-table.html">Comparison Table</a>
    <a href="/docs/manpage.html">curl man page</a>
    <a href="/docs/httpscripting.html">HTTP Scripting</a>
    <a href="/docs/mk-ca-bundle.html">mk-ca-bundle</a>
    <a href="/docs/manual.html">Tutorial</a>
  </div>
</div>
<div class="dropdown">
  <a class="dropbtn" href="/docs/whodocs.html">Who and Why</a>
  <div class="dropdown-content">
    <a href="/docs/companies.html">Companies</a>
    <a href="/docs/copyright.html">Copyright</a>
    <a href="/sponsors.html">Sponsors</a>
    <a href="/docs/thanks.html">Thanks</a>
    <a href="/docs/thename.html">The name</a>
  </div>
</div>
</div>
<div class="contents">
<div class="where"><a href="/">curl</a> / <a href="/docs/">Docs</a> / <a href="/docs/security.html">Security Problems</a> / <b>curl overwrite local file with -J</b></div>
<div class="relatedbox">
<b>Related:</b>
<br><a href="/docs/bugbounty.html">Bug Bounty</a>
<br><a href="/changes.html">Changelog</a>
<br><a href="/donation.html">Donate</a>
<br><a href="faq.html">FAQ</a>
<br><a href="security.html">Security Problems</a>
<br><a href="/dev/secprocess.html">Security Process</a>
<br><a href="vulnerabilities.html">Vulnerabilities Table</a>
</div>
<h1 id="curl-overwrite-local-file-with--j">curl overwrite local file with -J</h1>
<p>Project curl Security Advisory, June 24th 2020 - <a href="https://curl.se/docs/CVE-2020-8177.html">Permalink</a></p>
<h2 id="vulnerability">VULNERABILITY</h2>
<p>curl can be tricked by a malicious server to overwrite a local file when using <code>-J</code> (<code>--remote-header-name</code>) and <code>-i</code> (<code>--include</code>) in the same command line.</p>
<p>The command line tool offers the <code>-J</code> option that saves a remote file using the file name present in the <code>Content-Disposition:</code> response header. curl then refuses to overwrite an existing local file using the same name, if one already exists in the current directory.</p>
<p>The <code>-J</code> flag is designed to save a response body, and so it doesn't work together with <code>-i</code> and there's logic that forbids it. However, the check is flawed and doesn't properly check for when the options are used in the reversed order: first using <code>-J</code> and then <code>-i</code> were mistakenly accepted.</p>
<p>The result of this mistake was that incoming HTTP headers could overwrite a local file if one existed, as the check to avoid the local file was done first when body data was received, and due to the mistake mentioned above, it could already have received and saved headers by that time.</p>
<p>The saved file would only get response headers added to it, as it would abort the saving when the first body byte arrives. A malicious server could however still be made to send back virtually anything as headers and curl would save them like this, until the first CRLF-CRLF sequence appears.</p>
<p>(Also note that <code>-J</code> needs to be used in combination with <code>-O</code> to have any effect.)</p>
<p>We are not aware of any exploit of this flaw.</p>
<h2 id="info">INFO</h2>
<p>Users should be aware and <em>never</em> run curl with the <code>-J</code> option in their <code>$HOME</code> or other sensitive directories, independently of this flaw. Using curl that way allows curl to create any file name it likes (i.e. what the remote server suggests) and it can confuse or trick users if allowed to save files that can mistakenly be assumed to be &quot;locally made&quot; or part of the system rather than provided by a potentially malicious remote party.</p>
<p>This bug was brought in commit <a href="https://github.com/curl/curl/commit/80675818e0417b">80675818e0417b</a> when <code>-J</code> was introduced to curl, first shipped in curl <a href="vuln-7.20.0.html">7.20.0</a>.</p>
<p>This flaw can happen to users of the curl tool but <strong>not</strong> for applications using libcurl.</p>
<p>The Common Vulnerabilities and Exposures (CVE) project has assigned the name CVE-2020-8177 to this issue.</p>
<p>CWE-641: Improper Restriction of Names for Files and Other Resources</p>
<p>Severity: 4.7 (Medium)</p>
<h2 id="affected-versions">AFFECTED VERSIONS</h2>
<ul>
<li>Affected versions: curl <a href="vuln-7.20.0.html">7.20.0</a> to and including <a href="vuln-7.70.0.html">7.70.0</a></li>
<li>Not affected versions: curl &lt; <a href="vuln-7.20.0.html">7.20.0</a> and curl &gt;= <a href="vuln-7.71.0.html">7.71.0</a></li>
</ul>
<h2 id="the-solution">THE SOLUTION</h2>
<p>A <a href="https://github.com/curl/curl/commit/8236aba58542c5f.patch">fix for CVE-2020-8177</a></p>
<h2 id="recommendations">RECOMMENDATIONS</h2>
<p>We suggest you take one of the following actions immediately, in order of preference:</p>
<p>A - Upgrade curl to version <a href="vuln-7.71.0.html">7.71.0</a></p>
<p>B - Apply the patch on your curl version and rebuild</p>
<p>C - Do not use <code>-J</code> (in a directory with pre-existing files)</p>
<h2 id="timeline">TIMELINE</h2>
<p>This issue was first reported to the curl project on May 30, 2020.</p>
<p>This advisory was posted on June 24th 2020.</p>
<h2 id="credits">CREDITS</h2>
<p>This issue was reported by sn on hackerone. Patched by Daniel Stenberg.</p>
<p>Thanks a lot!</p>
</div>
</div>
<script defer src="https://www.fastly-insights.com/insights.js?k=8cb1247c-87c2-4af9-9229-768b1990f90b" type="text/javascript"></script>
</body> </html>
