<!DOCTYPE html>
<html lang="en">
  <head>
      <meta charset="UTF-8">

      <meta name="referrer" content="origin">
<script type="text/javascript" src="page.cgi?1635552453&amp;id=bayotbase/fielddefs.js"></script>




<script type="text/javascript">var BB_CONFIG = ({"user":{"logged_in":false,"groups":[],"enterable_products":[]},"defaults":{"severity":"Unspecified","priority":"Unspecified","platform":"Unspecified","op_sys":"Unspecified","bugentry_fields":["summary","product","component","rh_sub_components","severity","priority","comment"]}});</script><script type="text/javascript">
var classifications = '[ { "name": "Red Hat", "description": "Red Hat Products"},{ "name": "Workflows", "description": "User driven workflows"},{ "name": "JBoss", "description": "JBoss Products"},{ "name": "CentOS", "description": "CentOS Projects"},{ "name": "Fedora", "description": "Fedora Products"},{ "name": "Community", "description": "Community Projects"},{ "name": "oVirt", "description": "oVirt Virtualization Management Projects"},{ "name": "Internal", "description": "Internal Projects."},{ "name": "Other", "description": "Other Miscellaneous Products"},{ "name": "Unclassified", "description": "Not assigned to any classification"},{ "name": "Retired", "description": "Products that have reached end of life, or were never released."} ]';
var c_optgroups = JSON.parse(classifications);
</script>
    <title>633544 &ndash; (CVE-2011-1011) CVE-2011-1011 policycoreutils: insecure temporary directory handling in seunshare</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="js/yui/assets/skins/sam/autocomplete.css" rel="stylesheet" type="text/css"><link href="js/yui/assets/skins/sam/calendar.css" rel="stylesheet" type="text/css"><link href="skins/standard/global.css" rel="stylesheet" type="text/css"><link href="extensions/BayotBase/web/css/base.css" rel="stylesheet" type="text/css"><link href="extensions/BayotBase/web/jquery-ui-1.12.1.custom/jquery-ui.min.css" rel="stylesheet" type="text/css"><link href="skins/standard/bug.css" rel="stylesheet" type="text/css"><link href="extensions/Voting/web/style.css" rel="stylesheet" type="text/css"><link href="extensions/ExternalBugs/web/css/global.css" rel="stylesheet" type="text/css"><link href="extensions/FontAwesome/web/css/all.min.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/css/redhat.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/DataTables/datatables.min.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/alertify/css/alertify.min.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/alertify/css/themes/bootstrap.min.css" rel="stylesheet" type="text/css"><link href="extensions/SelectizeJS/web/css/selectize.bootstrap3.css" rel="stylesheet" type="text/css"><link href="extensions/SelectizeJS/web/css/SelectizeJS.css" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="js/yui/yahoo-dom-event/yahoo-dom-event.js"></script><script type="text/javascript" src="js/yui/cookie/cookie-min.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/jquery-3.6.0.min.js"></script><script type="text/javascript" src="extensions/BayotBase/web/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/jquery.cookie.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/jquery.jsonrpc.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/Base.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/bayot.util.js"></script><script type="text/javascript" src="js/yui/datasource/datasource-min.js"></script><script type="text/javascript" src="js/yui/connection/connection-min.js"></script><script type="text/javascript" src="js/yui/json/json-min.js"></script><script type="text/javascript" src="js/yui/autocomplete/autocomplete-min.js"></script><script type="text/javascript" src="js/yui/calendar/calendar-min.js"></script><script type="text/javascript" src="js/global.js"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 5,
                maxattachmentsize: 20000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug.",
                group_required:
                    "You must select at least one group for bugs in this product."
            }
            
              , api_token: ''
            
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "633544 – (CVE-2011-1011) CVE-2011-1011 policycoreutils: insecure temporary directory handling in seunshare",
                             "show_bug.cgi?id=633544" );
        document.title = "633544 – (CVE-2011-1011) CVE-2011-1011 policycoreutils: insecure temporary directory handling in seunshare";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "633544 – (CVE-2011-1011) CVE-2011-1011 policycoreutils: insecure temporary directory handling in seunshare", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="js/util.js"></script><script type="text/javascript" src="js/field.js"></script><script type="text/javascript" src="extensions/ExternalBugs/web/js/external_bugs.js"></script><script type="text/javascript" src="extensions/RedHat/web/DataTables/datatables.min.js"></script><script type="text/javascript" src="extensions/RedHat/web/alertify/alertify.min.js"></script><script type="text/javascript" src="extensions/RedHat/web/colResize/dataTables.colResize.js"></script><script type="text/javascript" src="extensions/RedHat/web/js/redhat.js"></script><script type="text/javascript" src="extensions/SelectizeJS/web/js/standalone/selectize.min.js"></script><script type="text/javascript" src="extensions/SelectizeJS/web/js/SelectizeJS.js"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Red Hat Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="/extensions/RedHat/web/css/favicons/production.ico?v=0">
  </head>

  <body 
        class="bugzilla-redhat-com status_colours_pastel
                 bz_bug
                 bz_status_CLOSED
                 bz_product_Security_Response
                 bz_component_vulnerability
                 bz_bug_633544 yui-skin-sam">

  <div id="header"><div id="banner">
   <ul id="loginin_launcher"><a href="#" onclick="$('#loginin_launcher').addClass('bz_default_hidden');$('#login_container').removeClass('bz_default_hidden');"><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;Login</a></ul>
   <ul id="login_container" class="bz_default_hidden">
    <a href="#" id="hide_mini_login" onclick="$('#login_container').addClass('bz_default_hidden');$('#loginin_launcher').removeClass('bz_default_hidden');">[x]</a>
     
    <li id="mini_login_container"><div id="saml2_container">
    Log in using an account from:
  <div id="saml2auth_login_Fedora Account System">
    <a href="saml2_login.cgi?idp=Fedora%20Account%20System&amp;target=show_bug.cgi%3Fid%3D633544"><i class="fa fa-cogs" aria-hidden="true"></i>&nbsp;&nbsp;Fedora Account System</a>
  </div>
  <div id="saml2auth_login_Red Hat Associate">
    <a href="saml2_login.cgi?idp=Red%20Hat%20Associate&amp;target=show_bug.cgi%3Fid%3D633544"><i class="fa fa-user-secret" aria-hidden="true"></i>&nbsp;&nbsp;Red Hat Associate</a>
  </div>
  <div id="saml2auth_login_Red Hat Customer">
    <a href="saml2_login.cgi?idp=Red%20Hat%20Customer&amp;target=show_bug.cgi%3Fid%3D633544"><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;Red Hat Customer</a>
  </div>
  Or login using a Red Hat Bugzilla account
  <div>

  <form action="show_bug.cgi?id=633544" method="POST"
        class="mini_login "
        id="mini_login">
    <input id="Bugzilla_login" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in">
  </form>
</li>
<li id="forgot_container">
  <a id="forgot_link" href="#forgot"
     onclick="return show_forgot_form('')"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>&nbsp;&nbsp;Forgot&nbsp;Password</a>
  <form action="token.cgi" method="post" id="forgot_form"
        class="mini_forgot bz_default_hidden">
    <label for="login">Login:</label>
    <input name="loginname" size="20" id="login" required
        type="email" placeholder="Your Email Address">
    <input id="forgot_button" value="Reset Password" 
           type="submit">
    <input type="hidden" name="a" value="reqpw">
    <input type="hidden" id="token" name="token"
           value="1635627700-gMbEK08qvnRSaFjnh-kHIjwQf6HO83HV4VuoyWS1I0k">
    <p>
    <a href="#" onclick="return hide_forgot_form('')"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>&nbsp;&nbsp;Hide Forgot</a>
  </form>
</li>
<li>
  <a href="createaccount.cgi"><span><i class="fas fa-plus" aria-hidden="true"></i>&nbsp;&nbsp;Create an Account</span></a>
</li>
    
   </ul>
  </div>

    <div id="titles">
      <span id="title">Red Hat Bugzilla &ndash; Bug&nbsp;633544</span>


    </div>


    <div id="common_links"><ul class="links">
  <li class="form">
    
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>
  <li><a href="./" title="Home"><i class="fas fa-home"></i></a></li>
  <li><a href="enter_bug.cgi">New</a></li>
  <li class="submenu">
    <a href="#" title="Search"><i class="fas fa-search"></i> <span class="fa fa-caret-down"></span></a>
    <div>
      <ul>
        <li><a href="query.cgi?format=specific">Simple Search</a></li>
        <li><a href="query.cgi?format=advanced">Advanced Search</a></li>
      </ul>
    </div>
  </li>
  <li class="submenu">
   <a href="#">My Links <span class="fa fa-caret-down"></span></a>
   <div>
    <ul>
      <li><a href="describecomponents.cgi">Browse</a></li>
      <li>
            <a href="request.cgi">Requests</a></li>
      <li class="submenu">
        <a  href="report.cgi">Reports <span class="fa fa-caret-right"></span></a>
        <div>
          <ul>
            </li>
            <li class="submenu">
              <a  href="#">Current State <span class="fa fa-caret-right"></span></a>
              <div>
                <ul>
                  <li id="report_search">
                    <a href="query.cgi">Search</a>
                  </li>
                  <li id="report_tabular">
                      <a href="query.cgi?format=report-table">Tabular reports</a>
                  </li>
                    <li id="report_graphical">
                        <a href="query.cgi?format=report-graph">Graphical reports</a>
                    </li>
                  <li id="report_duplicates">
                    <a href="duplicates.cgi">Duplicates</a>
                  </li>
                </ul>
              </div>
            </li>
            <li class="submenu">
              <a  href="#">Other Reports <span class="fa fa-caret-right"></span></a>
              <div>
                <ul>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=user_activity.html">User Changes</a>
                  </li>
                </ul>
              </div>
            </li>
            <li class="submenu">
              <a  href="#">Plotly Reports <span class="fa fa-caret-right"></span></a>
              <div>
                <ul>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=bug_status.html">Bug Status</a>
                  </li>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=bug_severity.html">Bug Severity</a>
                  </li>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=non_defaults.html">Non-Defaults</a>
                  </li>
                </ul>
              </div>
            </li>
          </ul>
        </div>
      </li><li><span class="separator"> | </span><a href="page.cgi?id=productdashboard.html">Product Dashboard</a></li>
    </ul>
   </div>
  </li>

  <li class="submenu">
   <a href="#">Help <span class="fa fa-caret-down"></span></a>
   <div>
    <ul><li><a href="docs/en/html/using/understanding.html" >Page Help!</a></li>
      <li><a href="page.cgi?id=bug-writing.html">Bug Writing Guidelines</a></li> 
      <li><a href="page.cgi?id=whats-new.html">What's new</a></li>
      <li><a href="https://access.redhat.com/help/browsers">Browser Support Policy</a></li>
      <li><a href="page.cgi?id=release-notes.html">5.0.4.rh64 Release notes</a></li>
      <li><a href="page.cgi?id=faq.html">FAQ</a></li>
      <li><a href="docs/en/html/index.html">Guides index</a></li>
      <li><a href="docs/en/html/using/index.html">User guide</a></li>
      <li><a href="docs/en/html/integrating/api/Bugzilla/WebService/Bug.html">Web Services</a></li>
      <li><a href="page.cgi?id=redhat/contact.html" >Contact</a></li> 
      <li><a href="page.cgi?id=terms-conditions.html" >Legal</a></li> 
    </ul>
   </div>
  </li>



</ul>
    </div>
  </div>


  <div id="bugzilla-body">



<noscript>
      <div id="no-js-message">This site requires JavaScript to be enabled to function correctly, please enable it.</div>
</noscript>

<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=633544" title="Format For Printing"><i class="fa fa-print"></i></a></li>
    <li><a href="show_bug.cgi?ctype=xml&amp;id=633544" title="Export as XML"><i class="far fa-file-excel"></i></a></li>
    <li><a href="enter_bug.cgi?cloned_bug_id=633544" title="Clone This Bug"><i class="fa fa-clone"></i></a></li>
    <li>
      <a href="enter_bug.cgi?cloned_bug_id=633544&lite=1" title="Copy is a lite weight clone that only copies the summary &amp; description">
       <i class="far fa-clone"></i>
      </a>
    </li>


          
    <li>
      <a href="#c69" title="Last Comment">
         <i class="fas fa-arrow-down" aria-hidden="true"></i>
      </a>
    </li><li>
  <a href="buglist.cgi?bug_id=633544&amp;bug_id_type=anddependson&amp;format=tvp" title="TreeView+">
    <i class="fa fa-tree"></i>
  </a>
</li>
    </ul>
<script type="text/javascript">
<!--

//-->
</script>




<form name="changeform" id="changeform" method="post" action="process_bug.cgi">





  <input type="hidden" name="delta_ts" value="2021-02-24 22:25:26">
  <input type="hidden" name="id" value="633544">
  <input type="hidden" name="token" value="1635627700-oab08ZBW3UnV5ePDMDh9-u7UM7v833ErqYcYuM1aJiA">
<div class="bz_short_desc_container edit_form">
    
    

     <a href="show_bug.cgi?id=633544"><b>Bug&nbsp;633544</b></a> <span id="summary_container" class="bz_default_hidden">
        (<span id="alias_nonedit_display">CVE-2011-1011</span>)
      - <span id="short_desc_nonedit_display"><a href="https://access.redhat.com/security/cve/CVE-2011-1011">CVE-2011-1011</a> policycoreutils: insecure temporary directory handling in seunshare</span>
     </span>

    
    

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

  
  
</span><span title="CVE-2011-1011 policycoreutils: insecure temporary directory handling in seunshare">CVE-2011-1011 policycoreutils: insecure temporary directory handling in seuns...
        </span>
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'CVE-2011-1011 policycoreutils: insecure temporary directory handling in seunshare' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
      <th class="field_label">
        <a href="describekeywords.cgi">Keywords</a>:
      </th>
      <td>
        <div class="keywords_select">
          <select id="keywords" name="keywords"  disabled="disabled" multiple="multiple">
              <option value="Security"
                      title="Bugs with the &quot;Security&quot; keyword are those that relate to a security vulnerability with a Red Hat product or service. For further information on how to report a security vulnerability to Red Hat please see the &quot;Security Contacts and Procedures&quot; page at http://www.redhat.com/security/team/contact/"
                      selected="selected"
              >Security
              </option>
          </select>
        </div>
      </td>
    </tr>

  <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">CLOSED
          CURRENTRELEASE
      </span>
    </td>
  </tr>

<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

  
  
</th>
    <td>CVE-2011-1011
    </td>
  </tr>

<tr>

<th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components. Select a Classification to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_product" >Security Response

</td>


    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_classification" >Other

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Security Response"
  >Component:</a>

  
  
</th>
      <td>
        

            <input type="hidden" id="component" name="component" value="vulnerability">vulnerability
        
        
        <span class="show_others">
          <a href="buglist.cgi?component=vulnerability&amp;product=Security%20Response"
            title="Show other bugs for this component"><i class="fas fa-th-list"></i></a>
        
        
          <a href="enter_bug.cgi?component=vulnerability&amp;product=Security%20Response&amp;version=unspecified"
            title="Create a new bug for this component"><i class="fas fa-plus-circle"></i></a>
        
        </span>
      </td>
    </tr>
    <tr>
        <th id="bz_rh_sub_component_input_th"
            class="field_label bz_default_hidden">
          <label for="rh_sub_component">
            <a class="field_help_link" href="page.cgi?id=fields.html#rh_sub_components" title="The sub component of a specific component">Sub Component:</a>
          </label>
        </th>
        <td id="bz_rh_sub_component_input_td" class="bz_default_hidden">
          <input type="hidden" name="defined_rh_sub_component" id="defined_rh_sub_component" value="0">
          <select name="rh_sub_component" id="rh_sub_component"  disabled="disabled" onchange="assign_to_default();" >
            <option value="">---</option>
          </select>
          <script>
            $(document).ready(function () {
              init_sub_components();
            });
          </script>
        
          <span class="show_others">
            <a href="buglist.cgi?component=vulnerability&amp;product=Security%20Response" title="Show other bugs for this sub-component"><i class="fas fa-th-list"></i></a>
          
          </span>
        </td>
      </tr>

<script>
  function rh_check_sub_components () {
    var ret = '';
      var sub_comp_obj = document.getElementById('rh_sub_component');
        if ($('#defined_rh_sub_component').val() == 1 && !$("#rh_sub_component").selectize()[0].selectize.getValue()) {
          if (!ret) ret = sub_comp_obj;
          _sub_comps_errorFor(
            sub_comp_obj,
            "You must specify the sub component"
          );
      }

    return ret;
  }

  function _sub_comps_errorFor(field, error_text) {
      var new_node = document.createElement('div');
      YAHOO.util.Dom.addClass(new_node, 'validation_error_text');
      new_node.innerHTML = error_text;
      YAHOO.util.Dom.insertAfter(new_node, field);
      YAHOO.util.Dom.addClass(field, 'validation_error_field');
      new_node.scrollIntoView();
  }
</script>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

  
  
</th>
<td>
      <span id="version">unspecified
      </span></td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

  
  
</th>
      <td class="field_value">All
      </td>
    </tr>
    <tr><th class="field_label "
    id="field_label_op_sys">


  <a 
      title="The operating system the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#op_sys"
  >OS:</a>

  
  
</th>
      <td class="field_value">
        Linux
      </td>
    </tr>
          
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#priority">Priority:</a></label>
      </th>
      <td>high
      </td>
    </tr>
    <tr>
      <th class="field_label">
        <label ><a href="page.cgi?id=fields.html#bug_severity">Severity:</a>
        </label>
      </th>
      <td>
       high
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

  
  
</th><td>
      <span id="target_milestone">---
      </span></td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

  
  
</th>
      <td><span class="vcard redhat_user"><span class="fn">Red Hat Product Security</span>
</span>
      </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_qa_contact">


  <a 
      title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#qa_contact"
  >QA Contact:</a>

  
  
</th>
      <td><span class="vcard ">
</span>
      </td>
    </tr>
    
    <tr><th class="field_label "
    id="field_label_docs_contact">

    <label for="docs_contact" accesskey="q">

  <a 
      title="The person responsible for documenting once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#docs_contact"
  >Docs Contact:</a>
</label>
  
  
</th>
      <td><span class="vcard ">
</span>
      </td>
    </tr>
    
    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'security-response-team\x40redhat.com',
        '',
        '');
    </script>
          
          
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

  
  
</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>

    <tr><th class="field_label "
    id="field_label_status_whiteboard">


  <a 
      title="Each bug has a free-form single line text entry box for adding tags and status information."
      class="field_help_link"
      href="page.cgi?id=fields.html#status_whiteboard"
  >Whiteboard:</a>

  
  
</th><td>  
  </td>
    </tr>
          

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends On:</a>

  
  
</th>

  <td>
    <span id="dependson_input_area">
    </span>
<a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=679689">679689</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=679690">679690</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=684918">684918</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=684919">684919</a> 
  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

  
  
</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>

          <tr>
    <th class="field_label">TreeView+</th>
    <td>
        <a href="buglist.cgi?bug_id=633544&amp;bug_id_type=anddependson&amp;format=tvp">
        depends on</a> /
        <a href="buglist.cgi?bug_id=633544&amp;bug_id_type=andblocked&amp;format=tvp&amp;tvp_dir=blocked">
        blocked</a>
    </td>
    <td></td>
</tr>
          
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#reporter">Reported:</a>
    </th>
    <td>2010-09-13 22:13 UTC by <span class="vcard redhat_user"><span class="fn">Vincent Danen</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#modified">Modified:</a>
    </th>
    <td>2021-02-24 22:25 UTC
      (<a href="show_activity.cgi?id=633544">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          <a href="page.cgi?id=fields.html#cclist">CC List:</a>
        </label>
      </th>
      <td>10 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="dwalsh">dwalsh</option>
                <option value="kees">kees</option>
                <option value="mads">mads</option>
                <option value="maurizio.antillon">maurizio.antillon</option>
                <option value="mgrepl">mgrepl</option>
                <option value="nalin">nalin</option>
                <option value="security-response-team">security-response-team</option>
                <option value="sgrubb">sgrubb</option>
                <option value="taviso">taviso</option>
                <option value="tmraz">tmraz</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>


 
<tr>
      <th class="field_label "
    id="field_label_cf_fixed_in">


  <a 
      title="The full package version. PGM uses to check if brew ..."
  >Fixed In Version:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_fixed_in"  colspan="2">

</td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_doc_type">


  <a 
      title="Click the information icon to the right to see the description"
  >Doc Type:</a>

  
  <i class="fas fa-info-circle pop-text" onclick="alertify.alert('Doc Type', BB_FIELDS['cf_doc_type'].long_desc)" title="Click to see full description"></i>

  
</th>
  <td class="field_value "
      id="field_container_cf_doc_type"  colspan="2">Bug Fix

<span id="cf_doc_warn"></span></td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_release_notes">


  <a 
      title="Click the information icon to the right to see the description"
  >Doc Text:</a>

  
  <i class="fas fa-info-circle pop-text" onclick="alertify.alert('Doc Text', BB_FIELDS['cf_release_notes'].long_desc)" title="Click to see full description"></i>

  
</th>
  <td class="field_value "
      id="field_container_cf_release_notes"  colspan="2">
      <div class="uneditable_textarea"></div>

</td>
    </tr>
    
    

    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_clone_of">


  <a 
      title="The bug listed here was the bug cloned to create thi..."
  >Clone Of:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_clone_of"  colspan="2">

</td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_environment">


  <a 
      title="This field is used for unformatted text that helps t..."
  >Environment:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_environment"  colspan="2">
      <div class="uneditable_textarea"></div>

</td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_last_closed">


  <a 
      title="When this bug was last marked as closed. Used for st..."
  >Last Closed:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_last_closed"  colspan="2">2014-09-02 12:27:30 UTC
    

</td>
    </tr>




        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    
    <th align="left">
      Attachments
    </th>
    <th colspan="2" align="right">
      <a href="page.cgi?id=terms-conditions.html">(Terms of Use)</a>
    </th>
    
  </tr>


      <tr id="a1" class="bz_contenttype_text_x-csrc bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=480587"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">Rewrote seunshare.c to create tmpfs /tmp and label it correctly.</span></b></a>

          <span class="bz_attach_extra_info">
              (13.85 KB,
                text/x-csrc)

            <br>
            <a href="#attach_480587"
               title="Go to the comment associated with the attachment">2011-02-23 22:03 UTC</a>,

            <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>
          <a href="attachment.cgi?id=480587&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=480816"
               title="View the content of the attachment">
          <b>Here is a patch to the original seunshare to fix some of the problems found</b></a>

          <span class="bz_attach_extra_info">
              (18.61 KB,
                patch)

            <br>
            <a href="#attach_480816"
               title="Go to the comment associated with the attachment">2011-02-24 17:17 UTC</a>,

            <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>
          <a href="attachment.cgi?id=480816&amp;action=edit">Details</a>
            | <a href="attachment.cgi?id=480816&amp;action=diff">Diff</a>
        </td>
      </tr>
      <tr id="a3" class="bz_contenttype_text_x-csrc">
        <td>
            <a href="attachment.cgi?id=480817"
               title="View the content of the attachment">
          <b>Updated code</b></a>

          <span class="bz_attach_extra_info">
              (15.01 KB,
                text/x-csrc)

            <br>
            <a href="#attach_480817"
               title="Go to the comment associated with the attachment">2011-02-24 17:19 UTC</a>,

            <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>
          <a href="attachment.cgi?id=480817&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a4" class="bz_contenttype_text_x-csrc">
        <td>
            <a href="attachment.cgi?id=482122"
               title="View the content of the attachment">
          <b>Ok this version allocates a directory in /tmp an labels it correctly</b></a>

          <span class="bz_attach_extra_info">
              (16.46 KB,
                text/x-csrc)

            <br>
            <a href="#attach_482122"
               title="Go to the comment associated with the attachment">2011-03-03 17:21 UTC</a>,

            <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>
          <a href="attachment.cgi?id=482122&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a5" class="bz_contenttype_text_x-csrc">
        <td>
            <a href="attachment.cgi?id=482153"
               title="View the content of the attachment">
          <b>Yet another version....  This one cleans up after itself.</b></a>

          <span class="bz_attach_extra_info">
              (17.02 KB,
                text/x-csrc)

            <br>
            <a href="#attach_482153"
               title="Go to the comment associated with the attachment">2011-03-03 20:38 UTC</a>,

            <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>
          <a href="attachment.cgi?id=482153&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a6" class="bz_contenttype_text_plain">
        <td>
            <a href="attachment.cgi?id=482691"
               title="View the content of the attachment">
          <b>seunshare with post-mount checks</b></a>

          <span class="bz_attach_extra_info">
              (21.33 KB,
                text/plain)

            <br>
            <a href="#attach_482691"
               title="Go to the comment associated with the attachment">2011-03-07 14:25 UTC</a>,

            <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
                  <span title="Tomas Hoger">thoger</span>:
                review?
                
                    (<span title="Daniel Walsh">dwalsh</span>)<br>
          </td>

        <td>
          <a href="attachment.cgi?id=482691&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="3">
        <span class="bz_attach_view_hide">
            <a href="#a0" onclick="return toggle_display(this);">Show
              Obsolete</a> (1)
            <a id="view_all" href="attachment.cgi?bugid=633544&amp;action=viewall&amp;hide_obsolete=1">View All</a>
        </span>
        <a href="attachment.cgi?bugid=633544&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>

    

    <script>
  YAHOO.ExternalBugs.sUrlYUI = 'https://bugzilla.redhat.com/jsonrpc.cgi';
  YAHOO.ExternalBugs.sUrlRPC = 'https://bugzilla.redhat.com/xmlrpc.cgi';
  YAHOO.ExternalBugs.extRefreshList = [];
function _extbz_errorFor(field, error_text) {
    var new_node = document.createElement('div');
    YAHOO.util.Dom.addClass(new_node, 'validation_error_text');
    new_node.innerHTML = error_text;
    YAHOO.util.Dom.insertAfter(new_node, field);
    YAHOO.util.Dom.addClass(field, 'validation_error_field');
    return new_node;
}

function check_external_bugs (f) {
    var focus_me;
    var external_bugs = YAHOO.util.Dom.getElementsByClassName(
        'external_bug_id', null, f);
    for (var i = 0; i < external_bugs.length; i++) {
        var bug_id_key   = external_bugs[i].name;
        var bug_type_key = 'external_' + bug_id_key.substr(13);
        if($('#' + bug_id_key).length > 0) {
            var bug_id       = document.getElementById(bug_id_key).value;
            var bug_type     = document.getElementById(bug_type_key).value;
            if ((bug_type == '' || bug_type == '0') && bug_id != '') {
                focus_me = _extbz_errorFor(
                    document.getElementById(bug_type_key),
                    'You specified the external tracker id, but not the type'
                );
            }
            else if (bug_type != '' && bug_type != '0' && bug_id == '') {
                focus_me = _extbz_errorFor(
                    external_bugs[i],
                    'You specified the external tracker type, but not the id'
                );
            }
            else if (bug_type != '' && bug_id != '') {
            }
        }
    }

    return focus_me;
}

var bz_no_validate_enter_bug = false;
function validateChangeBug(changeform) {
    // This is for the "bookmarkable templates" button.
    if (bz_no_validate_enter_bug) {
        // Set it back to false for people who hit the "back" button
        bz_no_validate_enter_bug = false;
        return true;
    }

    var current_errors = YAHOO.util.Dom.getElementsByClassName(
        'validation_error_text', null, changeform);
    for (var i = 0; i < current_errors.length; i++) {
        current_errors[i].parentNode.removeChild(current_errors[i]);
    }
    var current_error_fields = YAHOO.util.Dom.getElementsByClassName(
        'validation_error_field', null, changeform);
    for (var i = 0; i < current_error_fields.length; i++) {
        var field = current_error_fields[i];
        YAHOO.util.Dom.removeClass(field, 'validation_error_field');
    }

    var focus_me;

    // REDHAT EXTENSION 1000743
    focus_me = check_external_bugs(changeform);

    if (focus_me) {
        focus_me.scrollIntoView(false);
        return false;
    }

    return true;
}

changeform.onsubmit = function() { return validateChangeBug(changeform)};
</script>

<br>
<table id="external_bugs_table" cellspacing="0" cellpadding="4">
  <caption name="et0" id="et0">Links</caption>
    <tr>
      <th>System</th>
      <th>ID</th>
      <th>Private</th>
      <th>Priority</th>
      <th>Status</th>
      <th>Summary</th>
      <th>Last Updated</th>
    </tr>

    
    <tr id="ext_row_688786" >
      <td>Red Hat Product Errata
      </td>
      <td>
        <a href="https://access.redhat.com/errata/RHSA-2011:0414">RHSA-2011:0414</a>
      </td>
      <td>
        <span id="ext_is_private_688786">0
        </span>
      </td>
      <td>
        <span id="ext_priority_688786">normal
        </span>
      </td>
      <td>
        <span id="ext_status_688786">SHIPPED_LIVE
        </span>
      </td>
      <td>
        <span id="ext_description_688786"
              title="Important: policycoreutils security update">Important: policycoreutils security update
        </span>
      </td>
      <td>
        <span id="ext_last_updated_688786">2011-04-04 21:12:55 UTC
        </span>
      </td>
    </tr>

</table>

<br>
    

  </td>

  <td class="groups">
  </td>
  </tr></table>

  
  <div id="comments"><script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>






<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment
            "
    >

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vincent Danen</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-09-13 22:13:11 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Tavis Ormandy reported that seunshare, part of policycoreutils, was shipped setuid root and failed to enforce proper permissions on an alternate temporary directory mounted as /tmp.  This could potentially lead to privilege escalation in certain privileged applications that assume /tmp to be sticky and root-owned.

Acknowledgements:

Red Hat would like to thank Tavis Ormandy for reporting this issue.

</pre>
    </div>

    <div id="c9" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-10-13 13:19:57 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Just to summarize the situation as I see it here.  This is believed to be fixed now in the recent policycoreutils versions, such as policycoreutils-2.0.83-28.fc13, via this patch:

<a href="http://pkgs.fedoraproject.org/gitweb/?p=policycoreutils.git;a=blob;f=policycoreutils-rhat.patch;h=d4db5bc06027de23d12a4b3f18fa6f9b1517df27;hb=HEAD#l2197">http://pkgs.fedoraproject.org/gitweb/?p=policycoreutils.git;a=blob;f=policycoreutils-rhat.patch;h=d4db5bc06027de23d12a4b3f18fa6f9b1517df27;hb=HEAD#l2197</a>

It extends seunshare_mount() to mount with nosuid/nodev/noexec (this does not seem to make a difference for the problem reported by Tavis) and forces sticky bit on the /tmp directory upon mount.  However, there does not seem to be any change to prevent user from removing sticky bit right after it's added, and the sticky bit does not prevent non-privileged user from removing file from a directory he or she owns.

AFAIK, Tavis proposed two possible fixes:
- restrict seunshare to a dedicated group
- create temporary directory in some safe location and with safe ownership and permissions (which include sticky bit)

Note: Allowing user to specify arbitrary directory to bind-mount can also allow bypassing certain filesystem permissions restrictions (getting access to the directory that is not normally accessible to the user), but verify_mount() check makes this bypass fairly restricted and uninteresting.

</pre>
    </div>

    <div id="c10" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-10-13 14:23:26 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I guess the only solution to this would be to force the tmp directory to be either a tmpfs directory or on /tmp it self.  Would that satisfy the problem?

</pre>
    </div>

    <div id="c11" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-10-29 12:56:03 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Wouldn't the use of /tmp itself beat the purpose of seunshare-ing /tmp?  It also can not be done with current seunshare due to the verify_mount() ownership check:

$ seunshare -t /tmp -h $HOME /bin/bash
Invalid mount point, reporting to administrator: Operation not permitted

tmpfs should provide an easy way to have a run-specific directory that can be trashed as the end of the session easily, at the cost of memory use.  What is more important for intended sandbox use - have concurrently running instances not share the same directory as /tmp, or have /tmp content persist across sandbox runs?

</pre>
    </div>

    <div id="c12" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-10-29 13:49:20 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">No I was talking about seunshare enforcing that the user say

seunshare -t /tmp/mytmp -h $HOME/bin/bash

Meaning the user has to create the directory within /tmp to mount over /tmp.

</pre>
    </div>

    <div id="c13" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-10-29 13:50:43 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I think we should add tmpfs support, but I can see a use case for users having persistance.  (Of course this could be argued against.)

</pre>
    </div>

    <div id="c14" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-10-29 16:08:02 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=633544#c12">comment #12</a>)
<span class="quote">&gt; No I was talking about seunshare enforcing that the user say
&gt; 
&gt; seunshare -t /tmp/mytmp -h $HOME/bin/bash
&gt; 
&gt; Meaning the user has to create the directory within /tmp to mount over /tmp.</span >

You do not want mytmp to be user-owned, otherwise your new /tmp will be user-owned.

</pre>
    </div>

    <div id="c15" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-11-01 17:28:28 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">So Tomas you think the only valid/safe thing to do is to use tmpfs?

</pre>
    </div>

    <div id="c16" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-11-02 15:22:32 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Not really.  The approach Tavis proposed - to make seunshare create root-owned directory with safe permissions - should work as well.

Just a quick summary of the options, with some pros and cons listed:

- /var/sandbox/tmp-$USER, root:$USER, 1770
  - pro: directory to store per-user tmp directories is not world-writeable,
    hence it's easier to create per-user directories safely
  - pro: persistence
  - con: same directory shared between concurrent sandbox runs
  - con: another user-writeable directory (in addition to expected things as
    /home, /tmp, /var/tmp)

- the above can be changed to use existing temporary directory instead of /var/sandbox, which avoids unexpected user-writeable directory, but needs more sanity checks, other pros/cons are similar to the above; this can be &quot;DoS&quot;-ed (one unprivileged user pre-created tmp-$USER for some other user (when using /tmp/sandbox-tmp-$USER) or all users (when using /tmp/sandbox/tmp-$USER))

- per-run temporary directory similar to current /tmp/.sandboxXXXXXXXX,
  root:$USER, 1770 permissions
  - pro: new per-run temporary directory
  - pro: possible &quot;keep after run&quot; persistence
  - con: more work to remove it safely after run

- tmpfs use should be the variant of the previous, without &quot;keep after run&quot; persistence, but with easier clean-up

Neither of these preserves the flexibility of the current version, so we should pick the approach that is the most aligned with sandbox's intended use case.

</pre>
    </div>

    <div id="c17" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-11-16 17:19:49 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Dan, does any of the above option looks preferred wrt existing seunshare uses?

</pre>
    </div>

    <div id="c18" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-11-16 18:26:58 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I looked into using tmpfs rather then a directory the user controls, but that would break one of the use cases.   I have firefox setup to execute sandbox everytime it downloads a pdf or .doc file, but if it is setup to download to /tmp, this would break using tmpfs.

sandbox creates NEWHOME and NEWTMP and then copies all files in the command path to those directories.

sandbox -X evince /tmp/mydoc.pdf 

Copies /tmp/mydoc.pdf to NEWTMP and then mounts NEWTMP over /tmp

What about if we chown root:root NEWTMP and then mount.  

chown UID:UID NEWTMP 

when done.

</pre>
    </div>

    <div id="c19" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-11-19 12:56:50 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=633544#c18">comment #18</a>)
<span class="quote">&gt; What about if we chown root:root NEWTMP and then mount.  
&gt; 
&gt; chown UID:UID NEWTMP 
&gt; 
&gt; when done.</span >

Does &quot;when done&quot; refer to the end of seunshare run?  That may only work if there's a reliable way to delay that ownership restore (hence seunshare exit) until after all processes that may have been started from the process executed by seunshare exited.  seunshare currently does not ensure that, it exits once its child process terminates.  So the plain chmod back after waitpid won't help.

I see there's no clean up code in the current seunshare version at all.  Is it not needed to clean up the private mounts?  Does kernel do that automatically once no process that can see them exists?

</pre>
    </div>

    <div id="c20" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-11-19 13:25:33 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Yes.  Umount and destruction of the share happens automatically.  Not sure if there is a way for seunshare to know if all of the processes are exited.

</pre>
    </div>

    <div id="c21" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-11-24 14:09:09 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">One observation is that you can cd to /proc/&lt;seunshare child pid&gt;/root and check ./tmp there to see if it still has NEWTMP mounted.  Running on two terminals (noted as [1] and [2] below):

[1] ~ $ ls -lid /tmp /tmp/test-sandbox
65025 drwxrwxrwt. 32 root root 12288 Nov 24 14:41 /tmp
97564 drwxr-xr-x.  2 test test  4096 Nov 24 14:41 /tmp/test-sandbox

[1] ~ $ seunshare -v -t /tmp/test-sandbox -h $HOME /bin/bash
Mount /home/test on /home/test
Mount /tmp/test-sandbox on /tmp

[1-seunshare] ~ $ echo $$
5940

[2] ~ $ cd /proc/5940/root/

[2] /proc/5940/root $ ls -lid ./tmp/
97564 drwxr-xr-t. 2 test test 4096 Nov 24 14:41 ./tmp/

[1-seunshare] ~ $ cat blah.sh 
#!/bin/sh
echo &quot;Sleeping for $1 sec&quot;
sleep $1
echo &quot;Done with $1 sec sleep&quot;

[1-seunshare] ~ $ ./blah.sh 60 &amp; ./blah.sh 90 &amp; ./blah.sh 120 &amp;
[1] 6000
[2] 6001
[3] 6002

[1-seunshare] ~ $ exit               

[1] ~ $ ls -lid /proc/5940/root/tmp
ls: cannot access /proc/5940/root/tmp: No such file or directory

while [2] still sees it's root:

[2] /proc/5940/root $ ls -lid ./tmp/
97564 drwxr-xr-t. 2 test test 4096 Nov 24 14:41 ./tmp/

Once all processes are done:

[2] /proc/5940/root $ ls -lid ./tmp/
65025 drwxrwxrwt. 32 root root 12288 Nov 24 14:52 ./tmp/


Still chowning arbitrary user directory to root may prove problematic.

</pre>
    </div>

    <div id="c22" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-11-24 14:40:59 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Interesting, not sure if this is a problem or not.  Sandbox sends a signal to all of its subprocess to try to get them to exit.

The major sticking point then is trying to figure a way to update the contents of /tmp with files if it was a temporary file system.

One potential solution would be to create the tmp directory within the $HOME and then cp the contents over the tmpfs once it is created.

</pre>
    </div>

    <div id="c23" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-11-24 14:57:11 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Or only allow certain path to be used as NEWTMP, such as /var/tmp/&lt;something&gt;?

</pre>
    </div>

    <div id="c24" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c24">Comment 24</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-11-24 15:51:53 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">How does that help?

</pre>
    </div>

    <div id="c25" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c25">Comment 25</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2010-11-24 16:43:05 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">If using the chowning approach (chown to root:user at the beginning of the seunshare run and chown back once all child processes exited), this will limit which directories can get their ownership changed.  Also limiting where stale / left-over directories can be if seunshare is terminated before it can chown directory back.

</pre>
    </div>

    <div id="c26" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c26">Comment 26</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tavis Ormandy</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-18 22:26:01 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">is there any update on this issue, did you make a decision? (the solution I prefer is forcing the /tmp directory to be /var/sandbox/tmp-$USER root:root and 1777, and making /var/sandbox 700 root:root, I think this will work?)

I would consider this bug fairly urgent, I admit I dont have a working exploit to turn this into a root shell, but a quick search of suid binaries available shows that at least ksu assumes /tmp is sticky.

Right now an unprivileged user can destroy a system like this:

$ seunshare -v -t /tmp/seunshare/ -h /tmp/seunshare/ -- `which ksu` root
Mount /tmp/seunshare/ on /home/taviso
Mount /tmp/seunshare/ on /tmp
WARNING: Your password may be exposed if you enter it here and are logged 
         in remotely using an unsecure (non-encrypted) channel. 
Kerberos password for <a href="mailto:root&#64;EXAMPLE.COM">root&#64;EXAMPLE.COM</a>: : 
[1]+  Stopped                 seunshare -v -t /tmp/seunshare/ -h /tmp/seunshare/ -- `which ksu` root
$ ls -l /tmp/seunshare/
total 4.0K
-rw-------. 1 root taviso 35 Feb 18 23:21 krb5cc_0.1
$ rm -f /tmp/seunshare/krb5cc_0.1 
$ ln /etc/passwd /tmp/seunshare/krb5cc_0.1
$ fg
seunshare -v -t /tmp/seunshare/ -h /tmp/seunshare/ -- `which ksu` root

ksu: Cannot read password while reading password for '<a href="mailto:root&#64;EXAMPLE.COM">root&#64;EXAMPLE.COM</a>'

Authentication failed.

...and /etc/passwd just got nuked. Do you mind if I publish it so that administrators can remove seunshare if they're concerned about privilege escalation?

If I don't receive a response by Monday, I'll assume you don't mind.

</pre>
    </div>

    <div id="c27" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c27">Comment 27</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-21 10:05:41 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Dan, which of the current use cases are broken or negatively impacted by the proposed single NEWTMP for all seunchare runs approach?  Some pros/cons mentioned above.  I should probably add some issues with the first run, when user-specific sandbox-tmp directory has not been created yet.

</pre>
    </div>

    <div id="c28" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c28">Comment 28</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-21 19:48:18 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Tavis, how about we just go with removing -t PATH and just using -t, which will mount /dev/shm as 1777 root:root.

</pre>
    </div>

    <div id="c29" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c29">Comment 29</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-21 20:04:24 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">sandbox -X evince /tmp/download.pdf

Needs to work.

So the way this works now is, sandbox command creates the tmpdir, and then copies the content into it, then seunshare mounts the tmpdir over /tmp/

This will not work on tmpfs since the tmpdir will not exist until after seunshare executes.  

I could change the code to specify a tmpdir and have seunshare create its own tmpdir or tmpfs and copy the files from the local tmpdir into the tmpfs.

Would this satisfy the needs.

</pre>
    </div>

    <div id="c30" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c30">Comment 30</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tavis Ormandy</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-22 04:06:05 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Yes, that sounds okay to me so long as seunshare creates it.

</pre>
    </div>

    <div id="c31" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c31">Comment 31</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-22 15:03:08 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Tavis, it is a little more difficult, but I have tried to recreate the vulnerabilty and have failed.  Are you saying you ksu without the root password and desctroyed the /etc/passwd file or are you saying your ksu was successful and destroyed the file?

</pre>
    </div>

    <div id="c32" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c32">Comment 32</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tavis Ormandy</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-22 15:25:02 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Yes, ksu without the password destroys the file.

</pre>
    </div>

    <div id="c33" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c33">Comment 33</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-22 15:31:57 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I confirm that ksu steps above work on EL6 with default krb5 config.

</pre>
    </div>

    <div id="c34" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c34">Comment 34</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tavis Ormandy</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-22 17:20:15 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Tomas, I'd like to publish a warning about this, would you prefer I wait? (I don't mind waiting if you guys are planning to work on this quickly). However if not much progress has been made since September, I think it's fairer to administrators to publish a warning asap.

Even if the worst (that I can demonstrate) is destroying a system, I think it's a reasonable assumption that there is a configuration/package/customer software that relies on the stickyness of /tmp (perfectly reasonably) to prevent arbitrary code execution.

Tavis.

</pre>
    </div>

    <div id="c35" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c35">Comment 35</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tavis Ormandy</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-22 23:57:33 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Well, I waited an extra day because of the bank holiday in america, but there have been no objections, so I'm sending an advisory now.

</pre>
    </div>

    <div id="c36" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c36">Comment 36</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Eugene Teo (Security Response)</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-23 01:01:21 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hey Tavis, thanks.

<a href="http://lists.grok.org.uk/pipermail/full-disclosure/2011-February/079490.html">http://lists.grok.org.uk/pipermail/full-disclosure/2011-February/079490.html</a>

</pre>
    </div>

    <div id="c38" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c38">Comment 38</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-23 22:03:20 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=480587" name="attach_480587" title="Rewrote seunshare.c to create tmpfs /tmp and label it correctly.">attachment 480587</a> <a href="attachment.cgi?id=480587&amp;action=edit" title="Rewrote seunshare.c to create tmpfs /tmp and label it correctly.">[details]</a></span>
Rewrote seunshare.c to create tmpfs /tmp and label it correctly.

The program then copies the original /tmp files into the tmpfs.

One restriction on this version is that neither the home or tmp directories can actually be in /tmp.

</pre>
    </div>

    <div id="c39" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c39">Comment 39</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tavis Ormandy</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-23 22:44:33 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Maybe i'm reading it wrong, but you're running system() with euid=0?

If so, there is a command injection by specifying a temporary directory called `id` or something like that, as well as problems with inheriting an untrusted environment.

</pre>
    </div>

    <div id="c40" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c40">Comment 40</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Steve Grubb</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-23 23:02:46 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Tavis, I think the getfilecon() would have failed on a command injection. 

However, I think if you go this way, you want to validate that its a directory but you might be subject to a TOCTOU race. You might need to hand copy all files using the openat, mkdirat, fchmodat, fchownat syscalls.

Unless I am missing something, the current patch might allow concurrent use in which case the user will be consuming system memory with the tmpfs.

Also, if you have a malicious app that forks and calls setsid and tries to escape, will it be left holding resources when seunshare dies?

</pre>
    </div>

    <div id="c41" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c41">Comment 41</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tavis Ormandy</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-23 23:16:59 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Steve: Why do you say that? `id` is a valid filename. I tested it, and it works.

Regardless, running system() with euid != uid is hard to get right due to the untrusted environment.

</pre>
    </div>

    <div id="c42" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c42">Comment 42</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-24 11:55:26 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">bash tries to drop privs in such case.  It does not check set[ug]id return value, it seems, but the easy nproc limit trick to make that fail is not applicable here.

seunshare also got setfsuid call (too) early on, so it always fails on setfilecon(&quot;/tmp&quot;).

</pre>
    </div>

    <div id="c43" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c43">Comment 43</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-24 12:43:19 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=633544#c40">comment #40</a>)
<span class="quote">&gt; Also, if you have a malicious app that forks and calls setsid and tries to
&gt; escape, will it be left holding resources when seunshare dies?</span >

Yes.  They are also not well visible, as those private mounts don't show up in /proc/mounts.

</pre>
    </div>

    <div id="c44" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c44">Comment 44</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-24 17:17:30 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=480816&amp;action=diff" name="attach_480816" title="Here is a patch to the original seunshare to fix some of the problems found">attachment 480816</a> <a href="attachment.cgi?id=480816&amp;action=edit" title="Here is a patch to the original seunshare to fix some of the problems found">[details]</a></span>
Here is a patch to the original seunshare to fix some of the problems found

One it now opens the mntdir and uses the fd to checking access.
tmpdir is no longer an option for seunshare, if there is a subdir of the homedir named .sandboxtmp, then the contents of this directory will be copied to the /tmp directory after dropping capabilities.

Moved the setfsuid call lower in the program.  While still not checking if it was successful, code below will fail on NFS homedirs if it was not successful.

I also moved the large cgroups code block into its own function.

I am setting the context on the /tmp directory based on the context of the homedir after it was mounted.  

I also added a mount bind of /tmp on /var/tmp to allow the sandbox to write to /tmp and /var/tmp.

</pre>
    </div>

    <div id="c45" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c45">Comment 45</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-24 17:19:30 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=480817" name="attach_480817" title="Updated code">attachment 480817</a> <a href="attachment.cgi?id=480817&amp;action=edit" title="Updated code">[details]</a></span>
Updated code

</pre>
    </div>

    <div id="c46" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c46">Comment 46</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tavis Ormandy</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-24 17:56:41 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I looked at the code, there's a TOCTOU with verify mount I think.

You do verify_mount(); then mount(); so you can do something like:

# Create a legal mount directory
mkdir /home/foo/seunshare/bin

# give it to seunshare
seunshare -h ~/seunshare/bin &amp;

# between the verify() and the mount(), do:
$ rm -rf ~/seunshare; ln -s / ~/seunshare

If you win the TOCTOU, you get mount(&quot;/home/foo/seunshare/bin&quot;, &quot;/home&quot;), which is mount(&quot;/bin&quot;, &quot;/home&quot;). I'm not sure if that can be exploited, but it's worrying.

</pre>
    </div>

    <div id="c47" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c47">Comment 47</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-24 18:09:27 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">We also verify the mount after it is done, so you can not replace the mount with something now owned by the user.

</pre>
    </div>

    <div id="c48" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c48">Comment 48</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tavis Ormandy</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-24 18:23:40 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I tested it by adding a sleep() in verify_mount., it results in a weird state.

63 61 253:3 /taviso/testing/bin//deleted /home/taviso\040(deleted) rw,relatime - ext4 /dev/mapper/vg_thinkstation-lv_home rw,seclabel,barrier=1,data=ordered

</pre>
    </div>

    <div id="c49" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c49">Comment 49</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-24 18:27:08 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">And the second verify_mount does not fail.

</pre>
    </div>

    <div id="c50" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c50">Comment 50</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tavis Ormandy</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-24 18:46:06 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Yes, you're right, just stating that it's scary that the mount will succeed.

I do not have any specific attack against it.

</pre>
    </div>

    <div id="c51" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c51">Comment 51</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-24 18:55:38 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">We new about this race, but not much we can do about it other then verify the final directory is owned by the user.  Since fmount(fd) does not exist.

As far as the tmpfs wasting resources comments from Steve, I think we should separate them out.  

sandbox is intended to be run multiple times.  Every pdf/.doc file I download from the internet I run a sandbox on.  In the future I could think of people running sandboxes on different firefox instances.  I could even see people using sandbox for MLS desktops, rather then XACE.

</pre>
    </div>

    <div id="c52" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c52">Comment 52</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-25 11:47:53 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=633544#c45">comment #45</a>)
<span class="quote">&gt; Created <span class=""><a href="attachment.cgi?id=480817" name="attach_480817" title="Updated code">attachment 480817</a> <a href="attachment.cgi?id=480817&amp;action=edit" title="Updated code">[details]</a></span>
&gt; Updated code</span >

Needs an obvious fix for the asprintf line to compile.

Does it really need to restrict tmpdir to ~/.sandboxtmp?  Such restriction should also make verify_mount's strncmp(mntdir, &quot;/tmp&quot;, 4) check redundant, as home is mounted before tmp.

(In reply to <a href="show_bug.cgi?id=633544#c51">comment #51</a>)
<span class="quote">&gt; As far as the tmpfs wasting resources comments from Steve, I think we should
&gt; separate them out.  
&gt; 
&gt; sandbox is intended to be run multiple times.  Every pdf/.doc file I download
&gt; from the internet I run a sandbox on.  In the future I could think of people
&gt; running sandboxes on different firefox instances.</span >

sandbox randomizes categories range when generating contexts for the process to be run inside the sandbox.  If you currently run two concurrent sandbox instances with the same tmpdir, the last one's context is set on /tmp, making it unavailable to other instances.

Any suggestion on how to avoid memory hogging via seunshare?  tmpfs default size is 50% of RAM, hence 6 instances should allow user to hog all memory on systems that follow old SWAP = 2 * RAM recommendation.  That still doesn't sound good for something that's installed by default and hard to remove.

</pre>
    </div>

    <div id="c53" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c53">Comment 53</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-25 15:24:31 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I think we still need to make sure the user does not specify /tmp for the homedir, because /tmp will be mounted over.  Not sure if things would work correctly if /tmp/homedir is bind mounted on ~/ and then /tmp is mounted on with a tmpfs.  I guess we could hack this out and see if it works.

Please provide the asprintf fix needed for compile, since this is compiling on my box.

Mount options for tmpfs
       size=nbytes
              Override  default  maximum  size of the filesystem.  The size is
              given in bytes, and rounded up to entire pages.  The default  is
              half  of  the memory. The size parameter also accepts a suffix %
              to limit this tmpfs instance to that percentage of your physical
              RAM:  the default, when neither size nor nr_blocks is specified,
              is size=50%


We could give a number here.  

Steve has suggested that we have a config file for seunshare that can set limits, maybe even allow admins to specify which users are allowed to use it.  Secondly we could write to /var/run/seunshare/user and record the number of sandboxes that are running.  Then the admin could configure /etc/sandbox.conf with a max number of sandboxes.

max_tmp=1%
max_sessions=20
users=*
or 
users=dwalsh
users=

</pre>
    </div>

    <div id="c54" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c54">Comment 54</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-25 16:16:46 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=633544#c53">comment #53</a>)
<span class="quote">&gt; I think we still need to make sure the user does not specify /tmp for the
&gt; homedir, because /tmp will be mounted over.</span >

The same problem should affect released seunshare versions, right?  They have no problem with use as like: seunshare -h /tmp/a/home -t /tmp/a/tmp command

<span class="quote">&gt; Please provide the asprintf fix needed for compile, since this is compiling on
&gt; my box.</span >

Attached version contains:

    char *cpbuf=NULL;
    if (asprintf(&amp;buf, &quot;/bin/cp -RTp %s/.sandboxtmp /tmp 2&gt; /dev/null&quot;, pwd-&gt;pw_dir) &lt; 0) {
        fprintf(stderr, _(&quot;Failed to allocate copy command: %s\n&quot;), strerror(errno));
        return -1;
    }

    rc = system(cpbuf);

and fails to compile with:

  seunshare.c:549: error: ‘buf’ undeclared (first use in this function)

I suspect you already did &quot;asprintf(&amp;buf&quot; -&gt; &quot;asprintf(&amp;cpbuf&quot; change after attaching code to bugzilla.

<span class="quote">&gt; Steve has suggested that we have a config file for seunshare that can set
&gt; limits, maybe even allow admins to specify which users are allowed to use it. 
&gt; Secondly we could write to /var/run/seunshare/user and record the number of
&gt; sandboxes that are running.  Then the admin could configure /etc/sandbox.conf
&gt; with a max number of sandboxes.
&gt; 
&gt; max_tmp=1%
&gt; max_sessions=20</span >

I agree with max_tmp, but we've already discussed that session tracking needs more work as we can not decrement active session counter after wait()ing for the seunshare's child to exit.  With the robust session tracking in use, is tmpfs still attractive compared to chmoding/chowning directory at the beginning and at the end?


That setfilecon still fails for me, as it's reached after setfsuid call, and uncovers this use-after-free bug:

        rc =setfilecon(&quot;/tmp&quot;, filecon);
        freecon(filecon);
        if (rc &lt; 0) {
            fprintf(stderr, _(&quot;Failed to set context %s on /tmp: %s\n&quot;), filecon, strerror(errno));

</pre>
    </div>

    <div id="c55" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c55">Comment 55</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-25 20:32:39 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">seunshare -h /tmp/home -t /tmp/home/tmp command
seunshare -h /tmp/tmp/home -t /tmp/tmp command 

Is allowed in the release version with some hacky checks for overlaps.

Ok, yes I have fixed the code.  Sorry about that.

How about we dump tmpfs and go with making a tmpdir in /tmp and mount bind over /tmp.  Then I don't need to worry about memory use.  

Not sure why setfilecon works for me and not for you.

Might have something to do with the file system used for /tmp?

I could attempt to do the setfilecon before the setfsuid, but on a rootsquash file system it will not be able to get the file context of the user directory.

</pre>
    </div>

    <div id="c56" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c56">Comment 56</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-02-26 22:27:07 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=633544#c55">comment #55</a>)
<span class="quote">&gt; How about we dump tmpfs and go with making a tmpdir in /tmp and mount bind over
&gt; /tmp.  Then I don't need to worry about memory use.  </span >

What's the tmpdir above?  A directory passed to seunshare as -t argument?  This should work too, if the directory is chowned/chmoded at the beginning properly.  It can't be chowned back seunshare exit though, so sandbox won't have privileges to remove it.  It can remove most of its content though (in most cases, only root:$USER owned directory is expected to be left around), and tmpwatch should take care of the rest over the time.

This can be combined with some of the ideas from the version using tmpfs.  seunshare can accept arbitrary tmpdir as its argument.  It will create new temporary directory with proper permissions in /tmp, copy/move files to that new temporary directory and bind mount it.  At the end of run, move temporary files back to the original tmpdir (to provide persistence) and remove directory that was bind mounted.  Moving should be done with user privileges, delete with root privs, possibly reusing some of the tmpwatch code to do it safely.

Removing usable /tmp from the sandboxed processes that are running after seunshare's termination is not a concern, I believe.

</pre>
    </div>

    <div id="c57" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c57">Comment 57</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-03-03 17:21:05 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=482122" name="attach_482122" title="Ok this version allocates a directory in /tmp an labels it correctly">attachment 482122</a> <a href="attachment.cgi?id=482122&amp;action=edit" title="Ok this version allocates a directory in /tmp an labels it correctly">[details]</a></span>
Ok this version allocates a directory in /tmp an labels it correctly

It then rsyncs the homedir/.sandboxtmp direcory to /tmp and when it is done rsync's it back


The reason it has to be a subdir of homedir, is we want to drop capabilities before doing any of the &quot;rsyncing&quot;.  Since it mounts the tmpdir and the homedir, then drops capabilities, if the /tmp contents are not a subdir of homedir, I can no longer get to the contents.


This seems to work.  Since the /tmp is a subdir of the real /tmp, we end up using the same file system, and quota should work fine.  The only problem I see is around leaving the tmpdirectory in /tmp.  We can not delete it since we have dropped capabilities,  I attempt to remove all files from the directory.  This means we need to wait for tmpreaper to clean up the directories.

</pre>
    </div>

    <div id="c58" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c58">Comment 58</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-03-03 18:34:13 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Tomas has suggested on line that I change the tmpdir to be 

root,dwalsh,1770.

Tavis do you think there is risk in this?

</pre>
    </div>

    <div id="c59" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c59">Comment 59</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-03-03 19:00:49 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I made this change and created a file owned by root in my /tmp directory,  As dwalsh I tried to delete the file and got.

rm dan
rm: remove write-protected regular empty file `dan'? y
rm: cannot remove `dan': Operation not permitted

This seems like a better solution since a different user could stick a file into my tmpdir with the current patch.

</pre>
    </div>

    <div id="c60" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c60">Comment 60</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tavis Ormandy</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-03-03 20:04:25 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I think that sounds okay, but as Tomas says 1770 is definitely the right permissions.

</pre>
    </div>

    <div id="c61" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c61">Comment 61</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-03-03 20:38:54 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=482153" name="attach_482153" title="Yet another version....  This one cleans up after itself.">attachment 482153</a> <a href="attachment.cgi?id=482153&amp;action=edit" title="Yet another version....  This one cleans up after itself.">[details]</a></span>
Yet another version....  This one cleans up after itself.

seunshare now does

seteuid(root)
create the tmpdir,
forks,
Parent drops_capabilities with euid == 0,
waits for the child pid to exit,

	childprocess
        unshares,
        mounts,
        drops_capabilities and
	setresuid(dwalsh)
	rsync ~/.sandboxtmp to /tmp
	fork()
		Child execs program
	Parent waits for child to exit
	rsync /tmp to ~/.sandboxtmp
rmdir(tmpdir)

</pre>
    </div>

    <div id="c62" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c62">Comment 62</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tavis Ormandy</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-03-03 21:26:57 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I guess it will be okay, but only because you can't specify a subdirectory. Otherwise because ruid matches you can STOP it, wait for tmpwatch to clean everything up, then make a symlink.

I think it's a scary design. Is /var/sandbox/tmp-xxxxx with /var/sandbox 0700, not a possibility?

Tavis.

</pre>
    </div>

    <div id="c63" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c63">Comment 63</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-03-03 22:23:21 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">rmdir will not follow a symlink.   I am not doing a full cleanup.  just rmdir(tmpdir),  Which will fail if it is anything other then a directory.

Why do you think /var/sandbox/tmp-xxxx is better, 

It breaks quota.

You end up with a new random directory where you can dump files.

My mechanism maintains all files in your homedir. and /tmp.

Tomas suggested the 0770.

If you are running F15 you can download the latest policycoreutils and selinux-policy from brew.  If we get consensus I will push the packages to F13,F14,F15 and RHEL6

</pre>
    </div>

    <div id="c64" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c64">Comment 64</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-03-04 14:04:33 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=633544#c63">comment #63</a>)
<span class="quote">&gt; rmdir will not follow a symlink.   I am not doing a full cleanup.  just
&gt; rmdir(tmpdir),  Which will fail if it is anything other then a directory.</span >

What Tavis points out is that you can stop seunshare right after mkdtemp, leave it stopped for a couple of days so the temporary directory gets old enough to be removed by tmpwatch, create symlink with the same name and continue seunshare.  If you stop before chmod, seunshare will change permission of the wrong directory.  If you stop before mount, you can mount a directory that is not accessible to the user, or a directory that is user owned and non-sticky.

<span class="quote">&gt; Why do you think /var/sandbox/tmp-xxxx is better</span >

Not tmpwatch clean-up by default, even if tmpwatch is configured to look there too, user won't be able to create symlink with the name matching directory that was previously removed.

</pre>
    </div>

    <div id="c65" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c65">Comment 65</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-03-07 14:25:29 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=482691" name="attach_482691" title="seunshare with post-mount checks">attachment 482691</a> <a href="attachment.cgi?id=482691&amp;action=edit" title="seunshare with post-mount checks">[details]</a></span>
seunshare with post-mount checks

I've added pre-chmod and post-mount check to avoid using unintended directory.

I've also changed the code to fork + drop privs + execute command when needed, i.e. it copies files to a temporary directory before mounting it, so that removes restriction on where the user temporary directory can be located.

The way rsync is used is not ideal, as it won't preserve permissions and contexts.

I did some testing with seunshare.  sandbox -X evince /tmp/file.pdf works too.  sandbox -M bash does not work quite well in both old and new version, as sandbox_t does not seem to have permissions to access /home.

</pre>
    </div>

    <div id="c67" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c67">Comment 67</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-04-04 09:47:13 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">A quick summary of the changes that were done in response to this bugs:

seunshare now creates a runtime temporary directory owned by root and with the sticky bit set properly.  Files form the user-specified directory are copied to the runtime directory and the changes synced back (using rsync) at the end of the seunshare run.

seunshare was also moved from the policycoreutils subpackage (installed by default on all systems) to policycoreutils-sandbox subpackage.  This subpackage can be easily removed where sandbox functionality is not required, providing a cleaner mitigation for the case of possible future seunshare issues.

</pre>
    </div>

    <div id="c68" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c68">Comment 68</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Daniel Walsh</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-04-04 19:44:47 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Correct

</pre>
    </div>

    <div id="c69" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=633544#c69">Comment 69</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">errata-xmlrpc</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-04-04 21:13:01 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">This issue has been addressed in following products:

  Red Hat Enterprise Linux 6

Via RHSA-2011:0414 <a href="https://rhn.redhat.com/errata/RHSA-2011-0414.html">https://rhn.redhat.com/errata/RHSA-2011-0414.html</a>

</pre>
    </div>


  <script>
$(document).ready(function() {
  var mysel = document.getElementsByClassName('flag_type-415')[0];
  var relnotes = document.getElementById('cf_release_notes');
  if ( mysel && relnotes &&
      relnotes.value != '' &&
      relnotes.value != cf_doc_type_text[document.getElementById('cf_doc_type').value] &&
      mysel.options[mysel.selectedIndex].value != '+'
    )
      document.getElementById('cf_doc_warn').innerHTML = '<div class="warning "><b>Warning: Doc Text is not yet verified as correct</b></div>';
});
</script>

</td>
<td>
</td>
</tr></table>
  </div>

    <hr><div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=633544&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=633544" title="Format For Printing"><i class="fa fa-print"></i></a></li>
    <li><a href="show_bug.cgi?ctype=xml&amp;id=633544" title="Export as XML"><i class="far fa-file-excel"></i></a></li>
    <li><a href="enter_bug.cgi?cloned_bug_id=633544" title="Clone This Bug"><i class="fa fa-clone"></i></a></li>
    <li>
      <a href="enter_bug.cgi?cloned_bug_id=633544&lite=1" title="Copy is a lite weight clone that only copies the summary &amp; description">
       <i class="far fa-clone"></i>
      </a>
    </li><li>
  <a href="buglist.cgi?bug_id=633544&amp;bug_id_type=anddependson&amp;format=tvp" title="TreeView+">
    <i class="fa fa-tree"></i>
  </a>
</li>
    <li>
      <a href="#" title="Top of page">
        <i class="fa fa-arrow-up" aria-hidden="true"></i>
      </a>
    </li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li class="form">
    
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>
<script type="text/javascript">
function dt_submit() {
  var tables = $.fn.dataTable.tables( { visible: true, api: true } );
  $.each(tables.context, function() {
    var $myform = this.nTable.closest('form');

    // Checked checkboxes
    $.each(this.oInstance.$('input:checked'), function() {
      add_hidden(this.name, this.value, $myform)
    });

    // Inputs in selected rows
    $.each(this.oInstance.$('tr.selected'), function() {
      $(this).find('input').each( function() {
        add_hidden(this.name, this.value, $myform)
      });
    });

    // select boxes
    $.each(this.oInstance.$('select'), function() {
      if(($(this).val()!=="") && ($(this).val() !== 0)) {
        add_hidden(this.name, this.value, $myform);
      }
    });
  });
}

function add_hidden(nm, val, $frm) {
        $('<input />').attr('type', 'hidden')
          .attr('name', nm)
          .attr('value', val)
          .appendTo($frm);
}

$(document).ready(function() {
    $('form').submit(function( event ) {
        dt_submit();
        if( $(this).attr('id') === 'changeform') {
          return(validateEnterBug(this));
        }
    });
});

if (window.self !== window.top) {
    $('#header').addClass('bz_default_hidden');
    $('#footer').addClass('bz_default_hidden');
    $('.navigation').addClass('bz_default_hidden');
    $('body').css('background-image', 'none');
}
</script><script type="text/javascript">
$(document).ready(function() {
    $('select').not('.custom_search_condition select, #member_template select, #available_columns, #p2_component, #select_user_verify_class, #inclusion_to_remove, #exclusion_to_remove, #cc, #hide, #ack_col_edit #show, .noselectize, #j_top').each(function() {
        if(! $(this).hasClass('selectized')) {
            $(this).selectize({
                plugins: ['remove_button', 'minimum_search_length', 'extra_keys_control', 'related_fields', 'load_from_js'],
                selectOnTab: true,
                maxOptions: 'nolimit',
                minimum_search_length: 2,
                render: {
                    option: function(item, escape) {
                        var classes = "option";
                        var selected = this.items.indexOf(item.value) !== -1;
                        if(item.disabled) {
                            classes = classes + " bz_default_hidden" ;
                        }

                        return '<div class="' +  classes  + '" title="' + escape(item.title) + '" id="' + escape(item.id) + '" data-value="' + escape(item.value) + '">' +
                                    '<span>' + escape(item.text) + '</span>' +
                                '</div>';
                    }
                },
            });
        }
    });
});
</script>
  </body>
</html>