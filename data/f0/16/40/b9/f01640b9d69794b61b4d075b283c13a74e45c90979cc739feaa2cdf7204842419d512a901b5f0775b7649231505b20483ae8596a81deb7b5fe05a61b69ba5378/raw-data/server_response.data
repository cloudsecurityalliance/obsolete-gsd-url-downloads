<!DOCTYPE html>
<html lang="en">
  <head>
    <title>102969 &ndash; Gfx displaySlice() infinite loop vulnerability</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="data/assets/c60deb3d48830179eae269c9e65a7506.css?1462892334" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1462892331"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "102969 – Gfx displaySlice() infinite loop vulnerability",
                             "show_bug.cgi?id=102969" );
        document.title = "102969 – Gfx displaySlice() infinite loop vulnerability";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "102969 – Gfx displaySlice() infinite loop vulnerability", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1462892334"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-freedesktop-org
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_poppler
                 bz_component_general
                 bz_bug_102969 yui-skin-sam">

  <div id="header"><div id="banner">
  </div>

    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;102969</span>

        <span id="subtitle" class="subheader">Gfx displaySlice() infinite loop vulnerability</span>

        <span id="information" class="header_addl_info">Last modified: 2017-09-25 21:47:04 UTC</span>
    </div>


    <div id="common_links"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>


</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2017-09-25 21:47:04">
  <input type="hidden" name="id" value="102969">
  <input type="hidden" name="token" value="1635619141-rCnvx9lsgikH2aaqfFBr7oS1E-zTMfgeqisL2YFUJ7w">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=102969"><b>Bug&nbsp;102969</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">Gfx displaySlice() infinite loop vulnerability</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>Gfx displaySlice() infinite loop vulnerability
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'Gfx displaySlice() infinite loop vulnerability' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >poppler

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=poppler"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >general

  (<a href="buglist.cgi?component=general&amp;product=poppler&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>unspecified
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">All
        Linux (All)
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>medium
       major
      </td>
    </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">poppler-bugs</span>
</span>
      </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_qa_contact">


  <a 
      title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#qa_contact"
  >QA Contact:</a>

</th>
      <td><span class="vcard">
</span>
      </td>
    </tr>
    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'poppler-bugs\x40lists.freedesktop.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>

    <tr><th class="field_label "
    id="field_label_status_whiteboard">


  <a 
      title="Each bug has a free-form single line text entry box for adding tags and status information."
      class="field_help_link"
      href="page.cgi?id=fields.html#status_whiteboard"
  >Whiteboard:</a>

</th><td>  
  </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_keywords">


  <a 
      title="You can add keywords from a defined list to bugs, in order to easily identify and group them."
      class="field_help_link"
      href="describekeywords.cgi"
  >Keywords:</a>

</th>
  <td class="field_value "
      id="field_container_keywords" >

</td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2017-09-25 07:51 UTC by <span class="vcard"><span class="fn">Ziqiang Gu</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2017-09-25 21:47 UTC
      (<a href="show_activity.cgi?id=102969">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>0 
          users
        <div id="cc_edit_area">
          <br>
        </div>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr> 
<tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_i915_platform">


  <a 
      title="Intel platforms affected by the bug"
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_i915_platform"
  >i915 platform:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_i915_platform" >

</td>
    </tr>
    <tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_i915_features">


  <a 
      title="Features of the i915 driver affected by the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_i915_features"
  >i915 features:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_i915_features" >

</td>
    </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_application_pdf">
        <td>
            <a href="attachment.cgi?id=134457"
               title="View the content of the attachment">
          <b>POC</b></a>

          <span class="bz_attach_extra_info">
              (2.79 KB,
                application/pdf)

            <br>
            <a href="#attach_134457"
               title="Go to the comment associated with the attachment">2017-09-25 07:51 UTC</a>,

            <span class="vcard"><span class="fn">Ziqiang Gu</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=134457&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
            <a id="view_all" href="attachment.cgi?bugid=102969&amp;action=viewall">View All</a>
        </span>
    </td>
  </tr>
</table>
<br>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1462891770" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=102969#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Ziqiang Gu</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-09-25 07:51:03 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=134457" name="attach_134457" title="POC">attachment 134457</a> <a href="attachment.cgi?id=134457&amp;action=edit" title="POC">[details]</a></span>
POC

In Poppler 0.59.0, memory corruption occurs in a call to Object::dictLookup() in Object.h after a repeating series of Gfx::display, Gfx::go, Gfx::execOp, Gfx::opFill, Gfx::doPatternFill, Gfx::doTilingPatternFill and Gfx::drawForm calls (aka a Gfx.cc infinite loop), this is a different vulnerability than <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - Memory corruption vulnerability in Object::streamGetChar()"
   href="show_bug.cgi?id=102701">bug 102701</a>.

[Thread debugging using libthread_db enabled]
Using host libthread_db library &quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;.

Program received signal SIGSEGV, Segmentation fault.
0x00000000005497f1 in Lexer::getObj (this=&lt;optimized out&gt;, objNum=&lt;optimized out&gt;) at Lexer.cc:167
167	    if ((c = getChar()) == EOF) {
#0  0x00000000005497f1 in Lexer::getObj (this=&lt;optimized out&gt;, objNum=&lt;optimized out&gt;) at Lexer.cc:167
#1  0x000000000056baa6 in Parser::shift (this=&lt;optimized out&gt;, objNum=-1) at Parser.cc:291
#2  0x000000000056a498 in Parser::getObj (this=0xc8ca6c0, simpleOnly=&lt;optimized out&gt;, fileKey=&lt;optimized out&gt;, encAlgorithm=&lt;optimized out&gt;, keyLength=&lt;optimized out&gt;, objNum=0, objGen=&lt;optimized out&gt;, recursion=0, strict=&lt;optimized out&gt;) at Parser.cc:149
#3  0x0000000000569f9d in Parser::getObj (this=0x0, recursion=0) at Parser.cc:63
#4  0x00000000005bfad6 in XRef::fetch (this=0x9e1120, num=5, gen=&lt;optimized out&gt;, recursion=&lt;optimized out&gt;) at XRef.cc:1136
#5  0x000000000055ab11 in Object::fetch (this=0x9e53c8, xref=0x9e1120, recursion=0) at Object.cc:125
#6  0x000000000048b782 in Dict::lookup (this=0x9e5360, key=&lt;optimized out&gt;, recursion=0) at Dict.cc:259
#7  0x00000000004bbb28 in Object::dictLookup (key=0xc8c9ef0 &quot;P0&quot;, recursion=0, this=&lt;optimized out&gt;) at ./Object.h:362
#8  GfxResources::lookupPattern (this=&lt;optimized out&gt;, name=&lt;optimized out&gt;, out=&lt;optimized out&gt;, state=&lt;optimized out&gt;) at Gfx.cc:461
#9  0x00000000004b8fe4 in Gfx::opSetFillColorN (this=&lt;optimized out&gt;, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:1609
#10 0x00000000004bf8c6 in Gfx::execOp (this=&lt;optimized out&gt;, cmd=&lt;optimized out&gt;, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:880
#11 0x00000000004be541 in Gfx::go (this=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:744
#12 0x00000000004bdda5 in Gfx::display (this=&lt;optimized out&gt;, obj=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:706
#13 0x00000000004c1a23 in Gfx::drawForm (this=0x9e5120, str=&lt;optimized out&gt;, resDict=&lt;optimized out&gt;, matrix=&lt;optimized out&gt;, bbox=0xc8c0308, transpGroup=&lt;optimized out&gt;, softMask=&lt;optimized out&gt;, blendingColorSpace=&lt;optimized out&gt;, isolated=&lt;optimized out&gt;, knockout=&lt;optimized out&gt;, alpha=96, transferFunc=0x7fffff7ff9f0, backdropColor=0xc8c9540) at Gfx.cc:4828
#14 0x00000000004c3e80 in Gfx::doTilingPatternFill (this=&lt;optimized out&gt;, tPat=&lt;optimized out&gt;, stroke=&lt;optimized out&gt;, eoFill=&lt;optimized out&gt;, text=&lt;optimized out&gt;) at Gfx.cc:2234
#15 0x00000000004c244a in Gfx::doPatternFill (this=0x9e5120, eoFill=false) at Gfx.cc:1951
#16 0x00000000004a7679 in Gfx::opFill (this=0x9e5120, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:1820
#17 0x00000000004bf8c6 in Gfx::execOp (this=&lt;optimized out&gt;, cmd=&lt;optimized out&gt;, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:880
#18 0x00000000004be541 in Gfx::go (this=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:744
#19 0x00000000004bdda5 in Gfx::display (this=&lt;optimized out&gt;, obj=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:706
#20 0x00000000004c1a23 in Gfx::drawForm (this=0x9e5120, str=&lt;optimized out&gt;, resDict=&lt;optimized out&gt;, matrix=&lt;optimized out&gt;, bbox=0xc8b5f68, transpGroup=&lt;optimized out&gt;, softMask=&lt;optimized out&gt;, blendingColorSpace=&lt;optimized out&gt;, isolated=&lt;optimized out&gt;, knockout=&lt;optimized out&gt;, alpha=96, transferFunc=0x7fffff8000d0, backdropColor=0xc8bf1a0) at Gfx.cc:4828
#21 0x00000000004c3e80 in Gfx::doTilingPatternFill (this=&lt;optimized out&gt;, tPat=&lt;optimized out&gt;, stroke=&lt;optimized out&gt;, eoFill=&lt;optimized out&gt;, text=&lt;optimized out&gt;) at Gfx.cc:2234
#22 0x00000000004c244a in Gfx::doPatternFill (this=0x9e5120, eoFill=false) at Gfx.cc:1951
#23 0x00000000004a7679 in Gfx::opFill (this=0x9e5120, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:1820
#24 0x00000000004bf8c6 in Gfx::execOp (this=&lt;optimized out&gt;, cmd=&lt;optimized out&gt;, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:880
#25 0x00000000004be541 in Gfx::go (this=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:744
#26 0x00000000004bdda5 in Gfx::display (this=&lt;optimized out&gt;, obj=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:706
#27 0x00000000004c1a23 in Gfx::drawForm (this=0x9e5120, str=&lt;optimized out&gt;, resDict=&lt;optimized out&gt;, matrix=&lt;optimized out&gt;, bbox=0xc8abb28, transpGroup=&lt;optimized out&gt;, softMask=&lt;optimized out&gt;, blendingColorSpace=&lt;optimized out&gt;, isolated=&lt;optimized out&gt;, knockout=&lt;optimized out&gt;, alpha=240, transferFunc=0x7fffff8007b0, backdropColor=0xc8b4d80) at Gfx.cc:4828
#28 0x00000000004c3e80 in Gfx::doTilingPatternFill (this=&lt;optimized out&gt;, tPat=&lt;optimized out&gt;, stroke=&lt;optimized out&gt;, eoFill=&lt;optimized out&gt;, text=&lt;optimized out&gt;) at Gfx.cc:2234
#29 0x00000000004c244a in Gfx::doPatternFill (this=0x9e5120, eoFill=false) at Gfx.cc:1951
#30 0x00000000004a7679 in Gfx::opFill (this=0x9e5120, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:1820
#31 0x00000000004bf8c6 in Gfx::execOp (this=&lt;optimized out&gt;, cmd=&lt;optimized out&gt;, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:880
#32 0x00000000004be541 in Gfx::go (this=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:744
#33 0x00000000004bdda5 in Gfx::display (this=&lt;optimized out&gt;, obj=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:706
#34 0x00000000004c1a23 in Gfx::drawForm (this=0x9e5120, str=&lt;optimized out&gt;, resDict=&lt;optimized out&gt;, matrix=&lt;optimized out&gt;, bbox=0xc8a16e8, transpGroup=&lt;optimized out&gt;, softMask=&lt;optimized out&gt;, blendingColorSpace=&lt;optimized out&gt;, isolated=&lt;optimized out&gt;, knockout=&lt;optimized out&gt;, alpha=176, transferFunc=0x7fffff800e90, backdropColor=0xc8aa920) at Gfx.cc:4828
#35 0x00000000004c3e80 in Gfx::doTilingPatternFill (this=&lt;optimized out&gt;, tPat=&lt;optimized out&gt;, stroke=&lt;optimized out&gt;, eoFill=&lt;optimized out&gt;, text=&lt;optimized out&gt;) at Gfx.cc:2234
#36 0x00000000004c244a in Gfx::doPatternFill (this=0x9e5120, eoFill=false) at Gfx.cc:1951
#37 0x00000000004a7679 in Gfx::opFill (this=0x9e5120, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:1820
#38 0x00000000004bf8c6 in Gfx::execOp (this=&lt;optimized out&gt;, cmd=&lt;optimized out&gt;, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:880
#39 0x00000000004be541 in Gfx::go (this=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:744
#40 0x00000000004bdda5 in Gfx::display (this=&lt;optimized out&gt;, obj=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:706
#41 0x00000000004c1a23 in Gfx::drawForm (this=0x9e5120, str=&lt;optimized out&gt;, resDict=&lt;optimized out&gt;, matrix=&lt;optimized out&gt;, bbox=0xc8972c8, transpGroup=&lt;optimized out&gt;, softMask=&lt;optimized out&gt;, blendingColorSpace=&lt;optimized out&gt;, isolated=&lt;optimized out&gt;, knockout=&lt;optimized out&gt;, alpha=32, transferFunc=0x7fffff801570, backdropColor=0xc8a0500) at Gfx.cc:4828
#42 0x00000000004c3e80 in Gfx::doTilingPatternFill (this=&lt;optimized out&gt;, tPat=&lt;optimized out&gt;, stroke=&lt;optimized out&gt;, eoFill=&lt;optimized out&gt;, text=&lt;optimized out&gt;) at Gfx.cc:2234
#43 0x00000000004c244a in Gfx::doPatternFill (this=0x9e5120, eoFill=false) at Gfx.cc:1951
#44 0x00000000004a7679 in Gfx::opFill (this=0x9e5120, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:1820
#45 0x00000000004bf8c6 in Gfx::execOp (this=&lt;optimized out&gt;, cmd=&lt;optimized out&gt;, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:880
#46 0x00000000004be541 in Gfx::go (this=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:744
#47 0x00000000004bdda5 in Gfx::display (this=&lt;optimized out&gt;, obj=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:706
#48 0x00000000004c1a23 in Gfx::drawForm (this=0x9e5120, str=&lt;optimized out&gt;, resDict=&lt;optimized out&gt;, matrix=&lt;optimized out&gt;, bbox=0xc88cf28, transpGroup=&lt;optimized out&gt;, softMask=&lt;optimized out&gt;, blendingColorSpace=&lt;optimized out&gt;, isolated=&lt;optimized out&gt;, knockout=&lt;optimized out&gt;, alpha=32, transferFunc=0x7fffff801c50, backdropColor=0xc896160) at Gfx.cc:4828
#49 0x00000000004c3e80 in Gfx::doTilingPatternFill (this=&lt;optimized out&gt;, tPat=&lt;optimized out&gt;, stroke=&lt;optimized out&gt;, eoFill=&lt;optimized out&gt;, text=&lt;optimized out&gt;) at Gfx.cc:2234
#50 0x00000000004c244a in Gfx::doPatternFill (this=0x9e5120, eoFill=false) at Gfx.cc:1951
#51 0x00000000004a7679 in Gfx::opFill (this=0x9e5120, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:1820
#52 0x00000000004bf8c6 in Gfx::execOp (this=&lt;optimized out&gt;, cmd=&lt;optimized out&gt;, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:880
#53 0x00000000004be541 in Gfx::go (this=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:744
#54 0x00000000004bdda5 in Gfx::display (this=&lt;optimized out&gt;, obj=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:706
#55 0x00000000004c1a23 in Gfx::drawForm (this=0x9e5120, str=&lt;optimized out&gt;, resDict=&lt;optimized out&gt;, matrix=&lt;optimized out&gt;, bbox=0xc882ae8, transpGroup=&lt;optimized out&gt;, softMask=&lt;optimized out&gt;, blendingColorSpace=&lt;optimized out&gt;, isolated=&lt;optimized out&gt;, knockout=&lt;optimized out&gt;, alpha=176, transferFunc=0x7fffff802330, backdropColor=0xc88bd40) at Gfx.cc:4828
#56 0x00000000004c3e80 in Gfx::doTilingPatternFill (this=&lt;optimized out&gt;, tPat=&lt;optimized out&gt;, stroke=&lt;optimized out&gt;, eoFill=&lt;optimized out&gt;, text=&lt;optimized out&gt;) at Gfx.cc:2234
#57 0x00000000004c244a in Gfx::doPatternFill (this=0x9e5120, eoFill=false) at Gfx.cc:1951
#58 0x00000000004a7679 in Gfx::opFill (this=0x9e5120, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:1820
#59 0x00000000004bf8c6 in Gfx::execOp (this=&lt;optimized out&gt;, cmd=&lt;optimized out&gt;, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:880
#60 0x00000000004be541 in Gfx::go (this=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:744
#61 0x00000000004bdda5 in Gfx::display (this=&lt;optimized out&gt;, obj=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:706
#62 0x00000000004c1a23 in Gfx::drawForm (this=0x9e5120, str=&lt;optimized out&gt;, resDict=&lt;optimized out&gt;, matrix=&lt;optimized out&gt;, bbox=0xc8786a8, transpGroup=&lt;optimized out&gt;, softMask=&lt;optimized out&gt;, blendingColorSpace=&lt;optimized out&gt;, isolated=&lt;optimized out&gt;, knockout=&lt;optimized out&gt;, alpha=112, transferFunc=0x7fffff802a10, backdropColor=0xc8818e0) at Gfx.cc:4828
#63 0x00000000004c3e80 in Gfx::doTilingPatternFill (this=&lt;optimized out&gt;, tPat=&lt;optimized out&gt;, stroke=&lt;optimized out&gt;, eoFill=&lt;optimized out&gt;, text=&lt;optimized out&gt;) at Gfx.cc:2234
#64 0x00000000004c244a in Gfx::doPatternFill (this=0x9e5120, eoFill=false) at Gfx.cc:1951
#65 0x00000000004a7679 in Gfx::opFill (this=0x9e5120, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:1820
#66 0x00000000004bf8c6 in Gfx::execOp (this=&lt;optimized out&gt;, cmd=&lt;optimized out&gt;, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:880
#67 0x00000000004be541 in Gfx::go (this=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:744
#68 0x00000000004bdda5 in Gfx::display (this=&lt;optimized out&gt;, obj=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:706
......
......
......

#33340 0x00000000004c1a23 in Gfx::drawForm (this=0x9e5120, str=&lt;optimized out&gt;, resDict=&lt;optimized out&gt;, matrix=&lt;optimized out&gt;, bbox=0x9e86d8, transpGroup=&lt;optimized out&gt;, softMask=&lt;optimized out&gt;, blendingColorSpace=&lt;optimized out&gt;, isolated=&lt;optimized out&gt;, knockout=&lt;optimized out&gt;, alpha=160, transferFunc=0x7fffffffd5d0, backdropColor=0xa0f710) at Gfx.cc:4828
#33341 0x00000000004c3e80 in Gfx::doTilingPatternFill (this=&lt;optimized out&gt;, tPat=&lt;optimized out&gt;, stroke=&lt;optimized out&gt;, eoFill=&lt;optimized out&gt;, text=&lt;optimized out&gt;) at Gfx.cc:2234
#33342 0x00000000004c244a in Gfx::doPatternFill (this=0x9e5120, eoFill=false) at Gfx.cc:1951
#33343 0x00000000004a7679 in Gfx::opFill (this=0x9e5120, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:1820
#33344 0x00000000004bf8c6 in Gfx::execOp (this=&lt;optimized out&gt;, cmd=&lt;optimized out&gt;, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:880
#33345 0x00000000004be541 in Gfx::go (this=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:744
#33346 0x00000000004bdda5 in Gfx::display (this=&lt;optimized out&gt;, obj=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:706
#33347 0x00000000004c1a23 in Gfx::drawForm (this=0x9e5120, str=&lt;optimized out&gt;, resDict=&lt;optimized out&gt;, matrix=&lt;optimized out&gt;, bbox=0x9e6958, transpGroup=&lt;optimized out&gt;, softMask=&lt;optimized out&gt;, blendingColorSpace=&lt;optimized out&gt;, isolated=&lt;optimized out&gt;, knockout=&lt;optimized out&gt;, alpha=144, transferFunc=0x7fffffffdcb0, backdropColor=0x9e73d0) at Gfx.cc:4828
#33348 0x00000000004c3e80 in Gfx::doTilingPatternFill (this=&lt;optimized out&gt;, tPat=&lt;optimized out&gt;, stroke=&lt;optimized out&gt;, eoFill=&lt;optimized out&gt;, text=&lt;optimized out&gt;) at Gfx.cc:2234
#33349 0x00000000004c244a in Gfx::doPatternFill (this=0x9e5120, eoFill=false) at Gfx.cc:1951
#33350 0x00000000004a7679 in Gfx::opFill (this=0x9e5120, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:1820
#33351 0x00000000004bf8c6 in Gfx::execOp (this=&lt;optimized out&gt;, cmd=&lt;optimized out&gt;, args=&lt;optimized out&gt;, numArgs=&lt;optimized out&gt;) at Gfx.cc:880
#33352 0x00000000004be541 in Gfx::go (this=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:744
#33353 0x00000000004bdda5 in Gfx::display (this=&lt;optimized out&gt;, obj=&lt;optimized out&gt;, topLevel=&lt;optimized out&gt;) at Gfx.cc:706
#33354 0x0000000000567c25 in Page::displaySlice (this=0x9e4ce0, out=0x9e1d90, hDPI=&lt;optimized out&gt;, vDPI=&lt;optimized out&gt;, rotate=&lt;optimized out&gt;, useMediaBox=&lt;optimized out&gt;, crop=&lt;optimized out&gt;, sliceX=&lt;optimized out&gt;, sliceY=&lt;optimized out&gt;, sliceW=&lt;optimized out&gt;, sliceH=&lt;optimized out&gt;, printing=&lt;optimized out&gt;, abortCheckCbk=&lt;optimized out&gt;, abortCheckCbkData=&lt;optimized out&gt;, annotDisplayDecideCbk=&lt;optimized out&gt;, annotDisplayDecideCbkData=&lt;optimized out&gt;, copyXRef=&lt;optimized out&gt;) at Page.cc:560
#33355 0x000000000056795e in Page::display (this=0xc8ca710, out=0x0, hDPI=0, vDPI=0, rotate=10010656, useMediaBox=true, crop=false, printing=false, abortCheckCbk=0x0, abortCheckCbkData=0x0, annotDisplayDecideCbk=0x0, annotDisplayDecideCbkData=0x0, copyXRef=&lt;optimized out&gt;) at Page.cc:481
#33356 0x000000000056fef6 in PDFDoc::displayPage (this=0x9e0eb0, out=0x9e1d90, page=&lt;optimized out&gt;, hDPI=108, vDPI=108, rotate=0, abortCheckCbk=&lt;optimized out&gt;, abortCheckCbkData=&lt;optimized out&gt;, annotDisplayDecideCbk=&lt;optimized out&gt;, annotDisplayDecideCbkData=&lt;optimized out&gt;, copyXRef=false, useMediaBox=&lt;optimized out&gt;, crop=&lt;optimized out&gt;, printing=&lt;optimized out&gt;) at PDFDoc.cc:485
#33357 PDFDoc::displayPages (this=&lt;optimized out&gt;, out=&lt;optimized out&gt;, firstPage=&lt;optimized out&gt;, lastPage=&lt;optimized out&gt;, hDPI=&lt;optimized out&gt;, vDPI=&lt;optimized out&gt;, rotate=&lt;optimized out&gt;, useMediaBox=&lt;optimized out&gt;, crop=&lt;optimized out&gt;, printing=&lt;optimized out&gt;, abortCheckCbk=&lt;optimized out&gt;, abortCheckCbkData=&lt;optimized out&gt;, annotDisplayDecideCbk=&lt;optimized out&gt;, annotDisplayDecideCbkData=&lt;optimized out&gt;) at PDFDoc.cc:502
#33358 0x00000000004083df in main (argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;) at pdftohtml.cc:389

A full callstack and the POC file has been attached to help to reproduce this issue.</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=102969#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Albert Astals Cid</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-09-25 21:47:04 UTC
        </span>

      </div>




<pre class="bz_comment_text">Fix pushed</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=102969">Format For Printing</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>


</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>
<p align="center">
  Use of freedesktop.org services, including Bugzilla, is subject to our <a href="https://www.freedesktop.org/wiki/CodeOfConduct/">Code of Conduct</a>. How we collect and use information is described in our <a href="https://www.freedesktop.org/wiki/PrivacyPolicy">Privacy Policy</a>.
</p>
  </body>
</html>