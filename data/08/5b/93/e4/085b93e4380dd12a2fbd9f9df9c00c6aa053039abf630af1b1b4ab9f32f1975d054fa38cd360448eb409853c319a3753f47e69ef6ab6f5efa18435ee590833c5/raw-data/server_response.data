<!DOCTYPE html>
<html lang="en">
  <head>
    <title>11389 &ndash; Segmentation fault on malformed ZigBee packet</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link href="data/assets/64b49332a92937374625c24ed9a89c85.css?1635022386" rel="stylesheet" type="text/css">

<link href="data/assets/f6911ed8e5a97f108734d9324cb6bd67.css?1635022386" rel="stylesheet" type="text/css">

    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1635022386"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "11389 – Segmentation fault on malformed ZigBee packet",
                             "show_bug.cgi?id=11389" );
        document.title = "11389 – Segmentation fault on malformed ZigBee packet";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "11389 – Segmentation fault on malformed ZigBee packet", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1635022386"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-wireshark-org-bugzilla
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_Wireshark
                 bz_component_Dissection_engine_&#X28;libwireshark&#X29;
                 bz_bug_11389 yui-skin-sam">

  <div id="header"><div id="banner">
      <a href="/bugzilla/"><img id="badge" src="/image/wsbadge-bug@186x57.png"></a>
      <span id="banner-text">
        Wireshark Bug Database &ndash; Bug&nbsp;11389
      </span>
      <div id="subtitle">
        <p class="subheader">Segmentation fault on malformed ZigBee packet</p>
      </div>

       <div id="motd_yellow">

<p>
This Bugzilla instance was migrated to <a href="https://gitlab.com/wireshark/wireshark">GitLab</a> on Sunday, August 23.
</p>


<p>
This bug has been migrated to <a href="https://gitlab.com/wireshark/wireshark/-/issues/11389">issue 11389</a> in the <a href="https://gitlab.com/wireshark/wireshark/-/issues">GitLab issue tracker</a>.
It can be viewed and updated there.
</p>


</p>

<p>
See the <a href="https://gitlab.com/wireshark/gitlab-migration/wikis/home">migration wiki</a> for more details.
</p>

       </div>


    </div>

<!-- WS: Title info is in the banner
    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;11389</span>
  
        <span id="subtitle" class="subheader">Segmentation fault on malformed ZigBee packet</span>

        <span id="information" class="header_addl_info">Last modified: 2015-09-22 20:39:47 UTC</span>
    </div>
  -->


    <div id="common_links"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=11389&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=11389" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=11389&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635620944-Dfizz__yd42sfQAv50phbjuKpiAss1zgGeaIi1SOGcE">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2015-09-22 20:39:47">
  <input type="hidden" name="id" value="11389">
  <input type="hidden" name="token" value="1635620944-Ap0TpfCeWzKN-9_fIuXBch_wBTw7GDKjnsh-ShUM_aI">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=11389"><b>Bug&nbsp;11389</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">Segmentation fault on malformed ZigBee packet</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>Segmentation fault on malformed ZigBee packet
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'Segmentation fault on malformed ZigBee packet' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Wireshark

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Wireshark"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >Dissection engine (libwireshark)

  (<a href="buglist.cgi?component=Dissection%20engine%20(libwireshark)&amp;product=Wireshark&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>1.12.6
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">x86-64
        Debian
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>Low
       Major<span id="votes_container">
    (<a href="page.cgi?id=voting/user.html&amp;bug_id=11389#vote_11389">vote</a>)
  </span>
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Bugzilla Administrator</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'bugzilla-admin\x40wireshark.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2015-07-22 11:47 UTC by <span class="vcard"><span class="fn">Magnus Stubman</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2015-09-22 20:39 UTC
      (<a href="show_activity.cgi?id=11389">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>5 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="alexis.lagoutte">alexis.lagoutte</option>
                <option value="eapache">eapache</option>
                <option value="gharris">gharris</option>
                <option value="pascal">pascal</option>
                <option value="peter">peter</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr> 

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_application_vnd.tcpdump.pcap">
        <td>
            <a href="attachment.cgi?id=13755"
               title="View the content of the attachment">
          <b>zigbee packet capture</b></a>

          <span class="bz_attach_extra_info">
              (10.71 KB,
                application/vnd.tcpdump.pcap)

            <br>
            <a href="#attach_13755"
               title="Go to the comment associated with the attachment">2015-07-22 11:47 UTC</a>,

            <span class="vcard"><span class="fn">Magnus Stubman</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=13755&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
        </span>
        <a href="attachment.cgi?bugid=11389&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=11389&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1490378926" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Magnus Stubman</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-07-22 11:47:22 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=13755" name="attach_13755" title="zigbee packet capture">attachment 13755</a> <a href="attachment.cgi?id=13755&amp;action=edit" title="zigbee packet capture">[details]</a></span>
zigbee packet capture

Build Information:
TShark 1.12.6 (Git Rev Unknown from unknown)

Copyright 1998-2015 Gerald Combs &lt;<a href="/cdn-cgi/l/email-protection#7d1a180f1c11195b5e4b49460a140f180e151c0f1653120f1a">gerald&#64;wireshark.org</a>&gt; and contributors.
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Compiled (64-bit) with GLib 2.42.1, with libpcap, with libz 1.2.8, without POSIX
capabilities, without libnl, without SMI, with c-ares 1.10.0, without Lua,
without Python, without GnuTLS, with Gcrypt 1.6.3, without Kerberos, without
GeoIP.

Running on Linux 3.16.0-4-amd64, with locale en_US.utf8, with libpcap version
1.6.2, with libz 1.2.8.
Intel(R) Core(TM) i7-4900MQ CPU &#64; 2.80GHz

Built using gcc 4.9.2.
--
Reading a pcap file with tshark v1.12.6 with a malformed ZigBee pack causes tshark to crash with a segmentation fault. pcap file is attached.

$ tshark -r zigbee_segfault.pcap
...
137  29.006613       0x0000 -&gt; 0x6a6a       ZigBee 61 APS: Ack, Dst Endpt: 197, Src Endpt: 197
138  29.007576              -&gt;              IEEE 802.15.4 19 Ack
139  29.095575       0x0000 -&gt; 0x6a6a       ZigBee C4 84 APS: Data, Dst Endpt: 1, Src Endpt: 1
140  29.096600              -&gt;              IEEE 802.15.4 19 Ack
Segmentation fault</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alexis La Goutte</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-07-22 20:52:56 UTC
        </span>

      </div>




<pre class="bz_comment_text">No crash with last git master.. but

139  29.095575       0x0000 -&gt; 0x6a6a       ZigBee 84 Data, Dst: 0x6a6a, Src: 0x0000
140  29.096600              -&gt;              IEEE 802.15.4 19 Ack
141  29.119587       0x6a6a -&gt; 0x0000       ZigBee 16711739 Data, Dst: 0x0000, Src: 0x6a6a[Packet size limited during capture]
142  29.133592 b4:bd:8e:07:67:b0:40:37 -&gt; 0x654c       IEEE 802.15.4 131 Data, Dst: 0x654c, Src: b4:bd:8e:07:67:b0:40:37, Bad FCS
143  29.134571              -&gt;              IEEE 802.15.4 19 Ack
144  29.223599       0x0000 -&gt; 0x6a6a       IEEE 802.15.4 61 Data, Dst: 0x6a6a, Src: 0x0000, Bad FCS
tshark: The file &quot;zigbee_segfault.pcap&quot; appears to be damaged or corrupt.
(pcap: File has 1544507246-byte packet, bigger than maximum of 262144)</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Pascal Quantin</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-07-22 21:33:27 UTC
        </span>

      </div>




<pre class="bz_comment_text">Even if it does not crash on your PC, the ZigBee decrypting code is still doing nasty things on packet 141 which could lead to a crash depending on the machine used:

==7122== Invalid read of size 16
==7122==    at 0xB53CA36: ??? (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0xB523AA9: ??? (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0xB521685: ??? (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0xB516D7D: gcry_cipher_encrypt (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0x700B4DC: zbee_sec_ccm_decrypt (packet-zbee-security.c:975)
==7122==    by 0x700B90B: zbee_sec_decrypt_payload (packet-zbee-security.c:831)
==7122==    by 0x700BD08: dissect_zbee_secure (packet-zbee-security.c:699)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==  Address 0x142e1916 is 22 bytes inside a block of size 36 alloc'd
==7122==    at 0x4C2BBA0: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7122==    by 0xA0CC799: g_malloc (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.4400.1)
==7122==    by 0x7309C6B: wmem_simple_alloc (wmem_allocator_simple.c:55)
==7122==    by 0x67DC918: tvb_memdup (tvbuff.c:829)
==7122==    by 0x700BA7D: dissect_zbee_secure (packet-zbee-security.c:517)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122==    by 0x67ADD8E: dissector_try_uint_new (packet.c:1138)
==7122== 
==7122== Invalid read of size 16
==7122==    at 0xB53CA42: ??? (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0xB523AA9: ??? (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0xB521685: ??? (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0xB516D7D: gcry_cipher_encrypt (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0x700B4DC: zbee_sec_ccm_decrypt (packet-zbee-security.c:975)
==7122==    by 0x700B90B: zbee_sec_decrypt_payload (packet-zbee-security.c:831)
==7122==    by 0x700BD08: dissect_zbee_secure (packet-zbee-security.c:699)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==  Address 0x142e1926 is 2 bytes after a block of size 36 alloc'd
==7122==    at 0x4C2BBA0: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7122==    by 0xA0CC799: g_malloc (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.4400.1)
==7122==    by 0x7309C6B: wmem_simple_alloc (wmem_allocator_simple.c:55)
==7122==    by 0x67DC918: tvb_memdup (tvbuff.c:829)
==7122==    by 0x700BA7D: dissect_zbee_secure (packet-zbee-security.c:517)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122==    by 0x67ADD8E: dissector_try_uint_new (packet.c:1138)
==7122== 
==7122== Invalid read of size 16
==7122==    at 0xB53CA50: ??? (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0xB523AA9: ??? (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0xB521685: ??? (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0xB516D7D: gcry_cipher_encrypt (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0x700B4DC: zbee_sec_ccm_decrypt (packet-zbee-security.c:975)
==7122==    by 0x700B90B: zbee_sec_decrypt_payload (packet-zbee-security.c:831)
==7122==    by 0x700BD08: dissect_zbee_secure (packet-zbee-security.c:699)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==  Address 0x142e1936 is 18 bytes after a block of size 36 alloc'd
==7122==    at 0x4C2BBA0: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7122==    by 0xA0CC799: g_malloc (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.4400.1)
==7122==    by 0x7309C6B: wmem_simple_alloc (wmem_allocator_simple.c:55)
==7122==    by 0x67DC918: tvb_memdup (tvbuff.c:829)
==7122==    by 0x700BA7D: dissect_zbee_secure (packet-zbee-security.c:517)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122==    by 0x67ADD8E: dissector_try_uint_new (packet.c:1138)
==7122== 
==7122== Invalid read of size 16
==7122==    at 0xB53CA5E: ??? (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0xB523AA9: ??? (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0xB521685: ??? (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0xB516D7D: gcry_cipher_encrypt (in /lib/x86_64-linux-gnu/libgcrypt.so.20.0.2)
==7122==    by 0x700B4DC: zbee_sec_ccm_decrypt (packet-zbee-security.c:975)
==7122==    by 0x700B90B: zbee_sec_decrypt_payload (packet-zbee-security.c:831)
==7122==    by 0x700BD08: dissect_zbee_secure (packet-zbee-security.c:699)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==  Address 0x142e1946 is 22 bytes after a block of size 48 in arena &quot;client&quot;
==7122== 
==7122== Conditional jump or move depends on uninitialised value(s)
==7122==    at 0x4C31CB1: __memcmp_sse4_1 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7122==    by 0x700B7A0: zbee_sec_ccm_decrypt (packet-zbee-security.c:1096)
==7122==    by 0x700B90B: zbee_sec_decrypt_payload (packet-zbee-security.c:831)
==7122==    by 0x700BD08: dissect_zbee_secure (packet-zbee-security.c:699)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122==    by 0x67ADD8E: dissector_try_uint_new (packet.c:1138)
==7122==    by 0x67ADDD0: dissector_try_uint (packet.c:1164)
==7122== 
==7122== Conditional jump or move depends on uninitialised value(s)
==7122==    at 0x700BD0D: dissect_zbee_secure (packet-zbee-security.c:702)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122==    by 0x67ADD8E: dissector_try_uint_new (packet.c:1138)
==7122==    by 0x67ADDD0: dissector_try_uint (packet.c:1164)
==7122==    by 0x6A4A1D2: dissect_ethertype (packet-ethertype.c:306)
==7122==    by 0x67ACC6E: call_dissector_through_handle (packet.c:618)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122== 
==7122== Conditional jump or move depends on uninitialised value(s)
==7122==    at 0x700BD19: dissect_zbee_secure (packet-zbee-security.c:698)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122==    by 0x67ADD8E: dissector_try_uint_new (packet.c:1138)
==7122==    by 0x67ADDD0: dissector_try_uint (packet.c:1164)
==7122==    by 0x6A4A1D2: dissect_ethertype (packet-ethertype.c:306)
==7122==    by 0x67ACC6E: call_dissector_through_handle (packet.c:618)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122== 
==7122== Conditional jump or move depends on uninitialised value(s)
==7122==    at 0x700BD52: dissect_zbee_secure (packet-zbee-security.c:721)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122==    by 0x67ADD8E: dissector_try_uint_new (packet.c:1138)
==7122==    by 0x67ADDD0: dissector_try_uint (packet.c:1164)
==7122==    by 0x6A4A1D2: dissect_ethertype (packet-ethertype.c:306)
==7122==    by 0x67ACC6E: call_dissector_through_handle (packet.c:618)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122== 
==7122== Conditional jump or move depends on uninitialised value(s)
==7122==    at 0x4C31CB1: __memcmp_sse4_1 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7122==    by 0x700B7A0: zbee_sec_ccm_decrypt (packet-zbee-security.c:1096)
==7122==    by 0x700B90B: zbee_sec_decrypt_payload (packet-zbee-security.c:831)
==7122==    by 0x700BD80: dissect_zbee_secure (packet-zbee-security.c:722)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122==    by 0x67ADD8E: dissector_try_uint_new (packet.c:1138)
==7122==    by 0x67ADDD0: dissector_try_uint (packet.c:1164)
==7122== 
==7122== Conditional jump or move depends on uninitialised value(s)
==7122==    at 0x700BD85: dissect_zbee_secure (packet-zbee-security.c:725)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122==    by 0x67ADD8E: dissector_try_uint_new (packet.c:1138)
==7122==    by 0x67ADDD0: dissector_try_uint (packet.c:1164)
==7122==    by 0x6A4A1D2: dissect_ethertype (packet-ethertype.c:306)
==7122==    by 0x67ACC6E: call_dissector_through_handle (packet.c:618)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122== 
==7122== Conditional jump or move depends on uninitialised value(s)
==7122==    at 0x700BD91: dissect_zbee_secure (packet-zbee-security.c:721)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122==    by 0x67ADD8E: dissector_try_uint_new (packet.c:1138)
==7122==    by 0x67ADDD0: dissector_try_uint (packet.c:1164)
==7122==    by 0x6A4A1D2: dissect_ethertype (packet-ethertype.c:306)
==7122==    by 0x67ACC6E: call_dissector_through_handle (packet.c:618)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122== 
==7122== Conditional jump or move depends on uninitialised value(s)
==7122==    at 0x700BF1E: dissect_zbee_secure (packet-zbee-security.c:744)
==7122==    by 0x7007FC2: dissect_zbee_nwk_full (packet-zbee-nwk.c:648)
==7122==    by 0x7007FC2: dissect_zbee_nwk (packet-zbee-nwk.c:701)
==7122==    by 0x7009028: dissect_zbee_nwk_heur (packet-zbee-nwk.c:337)
==7122==    by 0x67AEFA9: dissector_try_heuristic (packet.c:2161)
==7122==    by 0x6B6CAC2: dissect_ieee802154_common (packet-ieee802154.c:1137)
==7122==    by 0x67ACC33: call_dissector_through_handle (packet.c:620)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)
==7122==    by 0x67ADD8E: dissector_try_uint_new (packet.c:1138)
==7122==    by 0x67ADDD0: dissector_try_uint (packet.c:1164)
==7122==    by 0x6A4A1D2: dissect_ethertype (packet-ethertype.c:306)
==7122==    by 0x67ACC6E: call_dissector_through_handle (packet.c:618)
==7122==    by 0x67AD604: call_dissector_work (packet.c:706)</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-07-23 16:57:00 UTC
        </span>

      </div>




<pre class="bz_comment_text">I think we may need to check that tvb_bytes_exist(tvb, offset, mic_len) before calling zbee_sec_decrypt_payload()?

I don't have a platform to check right now.</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Pascal Quantin</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-07-23 17:32:55 UTC
        </span>

      </div>




<pre class="bz_comment_text">Current top of tree on Windows also crashes with the following error:
** (tshark.exe:392): WARNING **: Dissector bug, protocol ZigBee, in packet 141:
STATUS_ACCESS_VIOLATION: dissector accessed an invalid memory address

(In reply to Evan Huus from <a href="show_bug.cgi?id=11389#c3">comment #3</a>)
<span class="quote">&gt; I think we may need to check that tvb_bytes_exist(tvb, offset, mic_len)
&gt; before calling zbee_sec_decrypt_payload()?
&gt; 
&gt; I don't have a platform to check right now.</span >

Just gave it a try and it does not help. I do not have the time to investigate it further for now.</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-08-09 22:06:26 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 9950 had a related patch set uploaded by Martin Kaiser:
use the captured length as payload length for zigbee decryption

<a href="https://code.wireshark.org/review/9950">https://code.wireshark.org/review/9950</a></pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-08-10 04:43:23 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 9950 merged by Anders Broman:
use the captured length as payload length for zigbee decryption

<a href="https://code.wireshark.org/review/9950">https://code.wireshark.org/review/9950</a></pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-08-10 06:56:32 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 9953 had a related patch set uploaded by Guy Harris:
Use the reported length where appropriate.

<a href="https://code.wireshark.org/review/9953">https://code.wireshark.org/review/9953</a></pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-08-10 06:57:27 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 9953 merged by Guy Harris:
Use the reported length where appropriate.

<a href="https://code.wireshark.org/review/9953">https://code.wireshark.org/review/9953</a></pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-08-10 07:30:42 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 9954 had a related patch set uploaded by Guy Harris:
Don't try to decrypt the payload if it was cut short by the snapshot length.

<a href="https://code.wireshark.org/review/9954">https://code.wireshark.org/review/9954</a></pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-08-10 07:31:30 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 9954 merged by Guy Harris:
Don't try to decrypt the payload if it was cut short by the snapshot length.

<a href="https://code.wireshark.org/review/9954">https://code.wireshark.org/review/9954</a></pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-08-10 07:34:46 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 9955 had a related patch set uploaded by Guy Harris:
use the captured length as payload length for zigbee decryption

<a href="https://code.wireshark.org/review/9955">https://code.wireshark.org/review/9955</a></pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-08-10 07:34:57 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 9955 merged by Guy Harris:
use the captured length as payload length for zigbee decryption

<a href="https://code.wireshark.org/review/9955">https://code.wireshark.org/review/9955</a></pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-08-10 07:47:29 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 9956 had a related patch set uploaded by Guy Harris:
Use the reported length where appropriate.

<a href="https://code.wireshark.org/review/9956">https://code.wireshark.org/review/9956</a></pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-08-10 07:47:49 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 9956 merged by Guy Harris:
Use the reported length where appropriate.

<a href="https://code.wireshark.org/review/9956">https://code.wireshark.org/review/9956</a></pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-08-10 07:50:40 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 9957 had a related patch set uploaded by Guy Harris:
Don't try to decrypt the payload if it was cut short by the snapshot length.

<a href="https://code.wireshark.org/review/9957">https://code.wireshark.org/review/9957</a></pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-08-10 07:50:59 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 9957 merged by Guy Harris:
Don't try to decrypt the payload if it was cut short by the snapshot length.

<a href="https://code.wireshark.org/review/9957">https://code.wireshark.org/review/9957</a></pre>
    </div>

    <div id="c17" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-09-22 20:38:41 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 10615 had a related patch set uploaded by Balint Reczey:
use the captured length as payload length for zigbee decryption

<a href="https://code.wireshark.org/review/10615">https://code.wireshark.org/review/10615</a></pre>
    </div>

    <div id="c18" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-09-22 20:38:55 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 10615 merged by Balint Reczey:
use the captured length as payload length for zigbee decryption

<a href="https://code.wireshark.org/review/10615">https://code.wireshark.org/review/10615</a></pre>
    </div>

    <div id="c19" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-09-22 20:39:10 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 10616 had a related patch set uploaded by Balint Reczey:
Use the reported length where appropriate.

<a href="https://code.wireshark.org/review/10616">https://code.wireshark.org/review/10616</a></pre>
    </div>

    <div id="c20" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-09-22 20:39:20 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 10616 merged by Balint Reczey:
Use the reported length where appropriate.

<a href="https://code.wireshark.org/review/10616">https://code.wireshark.org/review/10616</a></pre>
    </div>

    <div id="c21" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-09-22 20:39:37 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 10617 had a related patch set uploaded by Balint Reczey:
Don't try to decrypt the payload if it was cut short by the snapshot length.

<a href="https://code.wireshark.org/review/10617">https://code.wireshark.org/review/10617</a></pre>
    </div>

    <div id="c22" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=11389#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2015-09-22 20:39:47 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 10617 merged by Balint Reczey:
Don't try to decrypt the payload if it was cut short by the snapshot length.

<a href="https://code.wireshark.org/review/10617">https://code.wireshark.org/review/10617</a></pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=11389">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=11389">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=11389">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=11389&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=11389" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=11389&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635620944-Dfizz__yd42sfQAv50phbjuKpiAss1zgGeaIi1SOGcE">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>