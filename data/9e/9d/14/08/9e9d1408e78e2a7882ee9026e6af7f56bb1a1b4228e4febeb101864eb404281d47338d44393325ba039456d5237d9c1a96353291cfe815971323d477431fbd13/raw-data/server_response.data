


 












<html>
<head>
<!--SS_BEGIN_SNIPPET(fragment46,head_tags)-->
<meta name="Keywords" content="java bug reports">
<meta name="robots" content="INDEX, FOLLOW">
<meta name="country" content="USA">
<meta name="Language" content="en">
<LINK REL="SHORTCUT ICON" HREF="images/header/favicon.ico"/>    
<!--SS_END_SNIPPET(fragment46,head_tags)-->
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="viewport" content="width=device-width"/>

<meta name="description" content="Component: hotspot | Sub-Component: compiler"/>
<!-- Insert dynamic title value with Bug-ID and corresponding Synopsis -->

<title>Bug ID: JDK-7196857 Int array initializes with nonzero elements.</title>

<script language="JavaScript"
	src="/bugdatabase/bugdatabase-theme/js/jquery.min.js"></script>
<script language="JavaScript"
	src="/bugdatabase/bugdatabase-theme/js/bootstrap.min.js"></script>
<script language="JavaScript"
	src="/bugdatabase/bugdatabase-theme/js/bugsView.js"></script>
<script language="JavaScript"
	src="/bugdatabase/bugdatabase-theme/js/bugsDetails.js"></script>	
<script language="JavaScript"
	src="/bugdatabase/bugdatabase-theme/js/truste-oraclelib.js"></script>
<script async="async" type="text/javascript"
	src='//consent.truste.com/notice?domain=oracle.com&c=teconsent&js=bb&noticeType=bb&text=true&cdn=1&pcookie&gtm=1'
	crossorigin></script>
<script type="text/javascript">
if ( (oracle.truste.api.getGdprConsentDecision().consentDecision) &&
	     (oracle.truste.api.getGdprConsentDecision().consentDecision.indexOf(0) != -1 ||
		 oracle.truste.api.getGdprConsentDecision().consentDecision.indexOf(2) != -1 ||
	      oracle.truste.api.getGdprConsentDecision().consentDecision.indexOf(3) != -1) ) { 
	document.write('<script type="text/javascript" async src="https://c.oracleinfinity.io/acs/account/wh3g12c3gg/js/javabugs/odc.js?_ora.context=analytics:production">' +
		    '<\/script>');
}
</script>

<link href="/bugdatabase/bugdatabase-theme/css/header.css"
	type="text/css" rel="stylesheet" />
<link href="/bugdatabase/bugdatabase-theme/css/home.css"
	type="text/css" rel="stylesheet" />
<link href="/bugdatabase/bugdatabase-theme/css/footer.css"
	type="text/css" rel="stylesheet" />
<link href="/bugdatabase/bugdatabase-theme/css/bugsui.css"
	type="text/css" rel="stylesheet" />
<!-- <link href="/bugdatabase/bugdatabase-theme/css/faq.css"
	type="text/css" rel="stylesheet" />	 -->	

</head>
<body>
	<div class="container">

		<nav class="navbar navbar-default navbar-fixed-top">
		<div class="container">
			<div class="navbar-header">
				<button type="button" class="navbar-toggle collapsed"
					data-toggle="collapse" data-target="#common-navbar-collapse"
					aria-expanded="false">
					<span class="sr-only">Toggle navigation</span> <span
						class="icon-bar"></span> <span class="icon-bar"></span> <span
						class="icon-bar"></span>
				</button>
				<a class="navbar-brand" href="https://bugs.java.com"><img
					alt="Oracle Java Bug Database"
					src="/bugdatabase/bugdatabase-theme/images/header/bugs-logo.png"></a>
			</div>

			<div class="collapse navbar-collapse" id="common-navbar-collapse">
				<form class="nav navbar-nav navbar-form navbar-right"
					name="searchForm"  method="get"
					action="https://www.oracle.com/search/results" target="_blank" onsubmit="return runSearchBar();">
					<!-- Navbar Search with category=bugs -->
					<input type="hidden" name="cat" value="bugs" /> <input
						type="hidden" name="Ntk" value="S3" />
					<div class="input-group">
						<input type="text" class="form-control" name="Ntt"
						maxlength="100"	placeholder="Search" title="Search Java bugs" /> <span
							class="input-group-btn">
							<button type="submit" style="margin-top: -2px;"
								class="btn btn-mini glyphicon glyphicon-search"></button>
						</span>
					</div>
				</form>
			</div>
			<!-- End of navbar-collapse -->

		</div>
		<!-- End of container --> </nav>

<ul class="breadcrumbs">
<li><a href="https://www.oracle.com/technetwork/index.html" target="_blank">Oracle Technology Network</a></li>
<li><a href="https://www.oracle.com/technetwork/java/index.html" target="_blank">Java</a></li>
<li><a href="https://www.oracle.com/technetwork/java/javase/index.html" target="_blank">Java SE</a></li>
<li><a href="https://www.oracle.com/technetwork/java/javase/community/index.html" target="_blank">Community</a></li>
<li class="current">Bug Database</li>
</ul> <!-- End of class="breadcrumbs"-->
 
   

<div class="titleHeader">JDK-7196857 :  Int array initializes with nonzero elements.</div>


<div class="section row">

    <div class="subsection col-md-4">                                                   
        <!-- text block -->
        <ul class="detailsTable">
			
			 <li><span class="boldText">Type:</span> <span class="detailsText">Bug</span></li>  
				<!-- Backport Need to Include -->
                
            <li><span class="boldText">Component:</span> <span class="detailsText">hotspot</span></li>
                
            <li><span class="boldText">Sub-Component:</span> <span class="detailsText">compiler</span>
                
            </li>
            
            
            <li><span class="boldText">Affected Version:</span> <span class="detailsText">7 </span></li>
                                      
        </ul>
    </div>

<div class="subsection col-md-4">                                                   
<!-- text block -->
<ul class="detailsTable">
    <li><span class="boldText">Priority:</span> <span class="detailsText">P2</span></li>
    <li><span class="boldText">Status:</span> <span class="detailsText">Resolved</span></li>
        
    <li><span class="boldText">Resolution:</span> <span class="detailsText">Cannot Reproduce</span></li>
        
        
        
    <li><span class="boldText">OS:</span> <span class="detailsText">generic</span></li>
        

    
    
    <li><span class="boldText">CPU:</span> <span class="detailsText">generic</span> 
        
    </li>

    
</ul>
</div>
<div class="subsection col-md-4">                                                   
<!-- text block -->
<ul class="detailsTable">
<li><span class="boldText">Submitted:</span> <span class="detailsText">2012-09-07</span>  
<li><span class="boldText">Updated:</span> <span class="detailsText">2014-10-21</span>

<li><span class="boldText">Resolved:</span> <span class="detailsText">2014-10-21</span> 

</li>
</ul>
</div>
</div>

<!-- ppppp -->



<div class="sectionTitle">
    <label> Versions (Unresolved/Resolved/Fixed)</label>
    <div class="bscTooltip">
        <span class="glyphicon glyphicon-info-sign versionInfoTooltip"></span>
        <span class="bscTooltiptext" style="width: 350px !important;">The Version table provides details related to the release that this issue/RFE will be addressed.<br><br>
                    <strong>Unresolved</strong> : Release in which this issue/RFE will be addressed.<br><strong>Resolved</strong>: Release in which this issue/RFE has been resolved.<br>
                            <strong>Fixed</strong> : Release in which this issue/RFE has been fixed. The release containing this fix may be available for download as an Early Access Release or a General Availability Release.
                            <br><br> To download the current JDK release, click <a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank">here</a>. </span>
                                    </div>
                                    </div>
                                    <div class="section row"> <div class="subsection col-md-3">                                                   
                                            <!-- text block -->
                                            <table class="versionTable">
                                                <thead class="versionTableHeader">
                                                    <tr>
                                                        
                                                        <th>JDK 9</th>
                                                            
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr>
                                                        
                                                        <td ><span class="versionTableVal">9</span><span class="label round label-primary">Resolved </span><a  href="https://www.oracle.com/java/technologies/javase-jdk15-downloads.html?msgid=bugsview15" target="_blank"> <img src="/bugdatabase/bugdatabase-theme/images/download.gif"/></a></td>
                                                            
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    
                                    




<div class="sectionTitle">Description</div>
<div class="section row"> <div class="subsection col-md-12"><div class="descriptionText"><span id="linkDescriptionText"><PRE >FULL PRODUCT VERSION :
java version: all versions from 1.7.0_04 up to 1.7.0_10
Java HotSpot(TM) 64-Bit Server VM


FULL OS VERSION :
All amd64  Linux, Windows, MacOS distributions.  Not tested on x86 OSes.

A DESCRIPTION OF THE PROBLEM :
Primitive integer array has nonzero elements just after allocation. This situation is in the contradiction with JLS.  Such a behavior occurs after jvm performs the compilation of the corresponding place of the code and only if corresponding code contains Arrays.fill(..) statement somewhere after array initialization (but not just after initialization). For more details see simple code example below.

THE PROBLEM WAS REPRODUCIBLE WITH -Xint FLAG: No

THE PROBLEM WAS REPRODUCIBLE WITH -server FLAG: Yes

STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :
Just run the code listed below.

EXPECTED VERSUS ACTUAL BEHAVIOR :
Expected: Build success
Actual: RuntimeException
REPRODUCIBILITY :
This bug can be reproduced always.

---------- BEGIN SOURCE ----------
public class JvmBug {
public static void main(String[] args) {
        int[] a;
        int n = 0;
        for (int i = 0; i &lt; 100000000; ++i) {
            a = new int[10];
            for (int f : a)
                if (f != 0)
                    throw new RuntimeException(&#034;Array just after allocation: &#034;+  Arrays.toString(a));
            Arrays.fill(a, 0);
            for (int j = 0; j &lt; a.length; ++j)
                a[j] = (n - j)*i;
            for (int f : a)
                n += f;
        }
        System.out.println(n);
    }
}
---------- END SOURCE ----------

CUSTOMER SUBMITTED WORKAROUND :
Add Arrays.fill(a,0) just after array initialization.

</PRE></span></div></div></div>


<div class="sectionTitle">Comments</div>
<div class="section row">
<div class="subsection col-md-12">  
<table border="0" cellpadding="0" cellspacing="0" align="TOP" width="100%">
<tr><td valign="top" align="left">
<table align="left" bgcolor="#ffffff" border="0" cellpadding="5" cellspacing="2" width="100%">         <tbody>
                        
<tr><td align="left" width="80" class="grey5">
<div class="descriptionText"><span id="linkCommentText">This bug disappeared because of other changes that disabled an optimization; arguably, it is a duplicate.
Someone might want to file an RFE for the missing performance, but it-would-be-nice if any such RFE also included enough benchmarking to allow us to understand (or not) the potential gains.</span></div>
</td></tr>
<tr><td align="right" width="80" class="grey5">
<div class="commentDate">
21-10-2014 
</div><hr>
</td></tr>
                        
<tr><td align="left" width="80" class="grey5">
<div class="descriptionText"><span id="linkCommentText">@John: Ah, I didn&#039;t know about that one.  Thanks.  But the important point is to keep the allocation and the initialization together so that the runtime compiler doesn&#039;t have to work too hard to figure out that it doesn&#039;t need to zero the array before pointing parallelSetAll at the individual elements.  That is, I want a method in Arrays that combines the allocation and initialization so the compiler can know the semantics.</span></div>
</td></tr>
<tr><td align="right" width="80" class="grey5">
<div class="commentDate">
31-07-2014 
</div><hr>
</td></tr>
                        
<tr><td align="left" width="80" class="grey5">
<div class="descriptionText"><span id="linkCommentText">@Peter:  java.util.Arrays.parallelSetAll gives everything except the allocation part.</span></div>
</td></tr>
<tr><td align="right" width="80" class="grey5">
<div class="commentDate">
31-07-2014 
</div><hr>
</td></tr>
                        
<tr><td align="left" width="80" class="grey5">
<div class="descriptionText"><span id="linkCommentText">It would be nice if I could supply code to initialize arrays.  The problem, obviously, is not to allow the reference to the array to escape before the array is completely initialized, or to read the elements of the array before they are initialized.  Based on some discussions with David Leibs, the following might be workable.

Define a class, somewhere in the JRE, that is the default initializer.  E.g., for initializing an array of doubles

    class Initializer {
        // The default initializer returns 0.0 for every element.
        double apply(int i) {
            return 0.0;
        }
    }

(and I&#039;d need one of these for all the primitive types).  Then add a library method, e.g., to class Arrays

    public static double[] initializerDouble(int len, Initializer init) {
        final double[] result = new double[len];
        for (int i = 0; i &lt; len; i += 1) {
            result[i] = init.apply(i);
        }
        return result;
    }

whose jobs is to allocate the array, but not expose it or its elements, until all the elements have been initialized.  Then I can use that as in

    double[] iArray = initializerDouble(7,
                                        new Initializer() {
                                            double apply(int i) {
                                                return (double) i;
                                            }
                                        });

to get an array whose elements are initialized with their offset in the array.  The point is that Initializer.apply(int) does *not* get a reference to the array, so it can&#039;t peek into it, or leak it, and if the initialization code exits abruptly, the reference to the array is dropped on the floor and thus not exposed. This does not work for Object[], because the garbage collector needs to see nulls or valid references in all the elements.

Since the Initializer instance is a closure, it could do arbitrary computations, using (final) variables from its scope, etc.  If I have to reify a big array to be the result of a computation, I can construct an Initializer that does the computation, rather than initialize all the elements to 0.0 and then reassign them all with the value of the computation.  One trip through the cache, etc.

Then I would want the runtime compiler to identify calls to InitializerDouble() and generate good code for it.  In the default case generate the code we have now to set all the elements to 0.0, or in the easy cases inlining the call to Initializer.apply() and unrolling the loop, inserting non-temporal prefetches, wide registers, etc.  Identifying the call seems easier than the pattern-matching in PhaseIdealLoop::match_fill_loop().  In my dreams it would parallelize the initialization of the array, since otherwise initializing a big array is a serial piece of what might otherwise be an embarrassingly parallel bunch of math on the individual elements, and Amdahl will come and bite my ankle.</span></div>
</td></tr>
<tr><td align="right" width="80" class="grey5">
<div class="commentDate">
01-07-2013 
</div><hr>
</td></tr>
                        
<tr><td align="left" width="80" class="grey5">
<div class="descriptionText"><span id="linkCommentText">Peter B. Kessler wrote:

In src/share/vm/opto/loopTransform.cpp, the comment

     2404   // Process the loop looking for stores.  If there are multiple
     2405   // stores or extra control flow give at this point.

&#034;give at this point&#034; should say &#034;give up at this point&#034;.  I would move that sentence down to where the code gives up, e.g.,

     2410     if (n-&gt;is_Store()) {
     2411       if (store != NULL) {
     +            //If there are multiple  stores give up at this point.
     2412         msg = &#034;multiple stores&#034;;
     2413         break;
     2414       }
     ....
     2428     } else if (n-&gt;is_If() &amp;&amp; n != head-&gt;loopexit()) {
     +          // If there is extra control flow give up at this point.
     2429       msg = &#034;extra control flow&#034;;
     2430       msg_node = n;
     2431     }

There are several other reasons that code gives up (oop assignments, negative strides, etc.) that deserve equal documentation, which might mean not calling out these two specially.</span></div>
</td></tr>
<tr><td align="right" width="80" class="grey5">
<div class="commentDate">
28-06-2013 
</div><hr>
</td></tr>
                        
<tr><td align="left" width="80" class="grey5">
<div class="descriptionText"><span id="linkCommentText">(Lots of run/debug options here for future reference, and in case anyone wants to check my work)

Something has changed in the processing upstream of the bug, and (in the debugger) it no longer comes near the code that might commit this error in the bug itself.  Compiling the JDK library for a normal run (i.e., -Xcomp) the path is taken, but not for the bug itself (here, the test was reorganized slightly into main and test, within a package, because failure to trigger the bug caused doubts about corner cases in CompileOnly behavior):

-Xcomp -XX:+UnlockDiagnosticVMOptions -XX:CompileOnly=pack/JvmBug.main,pack.JvmBug.test pack.JvmBug)

Breakpoints that should have triggered but did not:
LibraryCallKit::tightly_coupled_allocation(Node*, RegionNode*) at library_call.cpp:4951
LibraryCallKit::generate_arraycopy(TypePtr const*, BasicType, Node*, Node*, Node*, Node*, Node*, bool, bool, RegionNode*)
(gdb) break LibraryCallKit::inline_arraycopy
Breakpoint 4 at 0x102192e29: file library_call.cpp, line 4410.

To verify compilation at all, I set this breakpoint, which was triggered:
C2Compiler::compile_method(ciEnv*, ciMethod*, int) at c2compiler.cpp:122

Stack traces compiling the library confirmed that the breakpoints listed above should all be triggered before a call to tightly_coupled_allocation.</span></div>
</td></tr>
<tr><td align="right" width="80" class="grey5">
<div class="commentDate">
19-06-2013 
</div><hr>
</td></tr>
                        
<tr><td align="left" width="80" class="grey5">
<div class="descriptionText"><span id="linkCommentText">Oddly enough, did not reproduce for me.  x86_64, Mac,

Java(TM) SE Runtime Environment (build 1.7.0_21-b12)
Java HotSpot(TM) 64-Bit Server VM (build 23.21-b01, mixed mode)

or with

java version &#034;1.8.0-internal-fastdebug&#034;
Java(TM) SE Runtime Environment (build 1.8.0-internal-fastdebug-dr2chase_2013_06_10_15_00-b00)
Java HotSpot(TM) 64-Bit Server VM (build 25.0-b37-fastdebug, mixed mode)

was this fixed accidentally?
I will continue to investigate.</span></div>
</td></tr>
<tr><td align="right" width="80" class="grey5">
<div class="commentDate">
11-06-2013 
</div><hr>
</td></tr>
                        
<tr><td align="left" width="80" class="grey5">
<div class="descriptionText"><span id="linkCommentText">The problem is caused by: when optimizing Arrays.fill() calls, C2 checks if that call is tightly coupled with an array allocation and omits the implicit zeroing if it is; but it&#039;s missing necessary checks of the use of the implicit zero&#039;d values, so it may mistakenly omit the zeroing even when there are uses of the array&#039;s contents in between the allocation site and the Arrays.fill() call.

The fix would have to enforce the check so that it respects the uses of implicit zero&#039;d values.</span></div>
</td></tr>
<tr><td align="right" width="80" class="grey5">
<div class="commentDate">
18-10-2012 
</div><hr>
</td></tr>
                        
<tr><td align="left" width="80" class="grey5">
<div class="descriptionText"><span id="linkCommentText">EVALUATION

The bug reproduces with the fill or with a zeroing for loop, but not without.

So compiler correctly matches a complete array fill, but the check for uses between the allocation and the fill is faulty.</span></div>
</td></tr>
<tr><td align="right" width="80" class="grey5">
<div class="commentDate">
07-09-2012 
</div><hr>
</td></tr>

</tbody></table>
</td></tr>
</table>
</div>
</div>


<br/><br/>






<!-- pppppppp -->

    </div>

<style>
/*CSS for Social-icons*/
.footer-icon, .footer-icon ul {
	text-align: right;
	padding-right: 0px;
	margin-right: 0px;
}

.footer-icon ul li {
	list-style: none;
	display: inline;
}

.footer-icon img.social-icon {
	width: 17px;
	height: 16px;
	margin-left: 4px;
	background-image:
		url(/bugdatabase/bugdatabase-theme/images/footer/social-icons.png);
	background-repeat: no-repeat;
	background-color: transparent;
}

.footer-icon img.social-icon.facebook {
	background-position: -163px 0;
}

.footer-icon img.social-icon.facebook:hover {
	background-position: -183px 0;
}

.footer-icon img.social-icon.linkedin {
	background-position: -203px 0;
}

.footer-icon img.social-icon.linkedin:hover {
	background-position: -223px 0;
}

.footer-icon img.social-icon.twitter {
	background-position: -243px 0;
}

.footer-icon img.social-icon.twitter:hover {
	background-position: -263px 0;
}

.footer-icon img.social-icon.googleplus {
	background-position: -43px 0;
}

.footer-icon img.social-icon.googleplus:hover {
	background-position: -63px 0;
}

.footer-icon img.social-icon.youtube {
	background-position: -123px 0;
}

.footer-icon img.social-icon.youtube:hover {
	background-position: -143px 0;
}

.footer-icon img.social-icon.rss {
	background-position: -283px 0;
}

.footer-icon img.social-icon.rss:hover {
	background-position: -303px 0;
}
</style>

		<footer class="footer">

		<div class="container">
			<div class="col-md-12">
				<!--Footer Row-->
				<div class="row">
					<h1 class="oracle-tag">
						<a href="https://www.oracle.com/us/corporate/index.html"><span><img
								src="/bugdatabase/bugdatabase-theme/images/footer/oracle-tagline.png" /></span></a>
					</h1>
					<!--Column-1-->
					<div class="col-md-8 footer-link">
						<ul>
							<li><a
								href="https://www.oracle.com/us/syndication/subscribe/index.html"
								target="_blank">Subscribe</a></li>
							<li><a href="https://www.oracle.com/us/corporate/index.html"
								target="_blank">About Oracle</a></li>
							<li><a
								href="https://www.oracle.com/us/corporate/careers/index.html"
								target="_blank">Careers</a></li>
							<li><a
								href="https://www.oracle.com/us/corporate/contact/index.html"
								target="_blank">Contact Us</a></li>
							<li><a href="https://www.oracle.com/us/sitemaps/index.html"
								target="_blank">Site Maps</a></li>
							<li><a href="https://www.oracle.com/us/legal/index.html"
								target="_blank">Legal Notices</a></li>
							<li><a
								href="https://www.oracle.com/us/legal/terms/index.html"
								target="_blank">Terms of Use</a></li>
							<li><a
								href="https://www.oracle.com/us/legal/privacy/index.html"
								target="_blank">Your Privacy Rights</a></li>
							<li><span id='teconsent'></span></li>
						</ul>
					</div>

					<!--Column-2-->
					<div class="col-md-4 footer-icon">
						<ul>
							<li><a
								href="https://www.oracle.com/us/social-media/facebook/index.html"
								title="Oracle on Facebook" target="_blank"><img
									alt="Facebook" border="0" class="social-icon facebook"
									src="/bugdatabase/bugdatabase-theme/images/footer/spacer.gif"></a>
							</li>
							<li><a data-lbl="linkedin"
								href="https://www.oracle.com/us/social-media/linkedin/index.html"
								target="_blank"><img alt="Linked In" border="0"
									class="social-icon linkedin"
									src="/bugdatabase/bugdatabase-theme/images/footer/spacer.gif"></a></li>
							<li><a data-lbl="twitter"
								href="https://www.oracle.com/us/social-media/twitter/index.html"
								target="_blank"><img alt="Twitter" border="0"
									class="social-icon twitter"
									src="/bugdatabase/bugdatabase-theme/images/footer/spacer.gif"></a></li>
							<li><a data-lbl="googleplus"
								href="https://plus.google.com/u/0/115607918987921226255"
								target="_blank"><img alt="Google+" border="0"
									class="social-icon googleplus"
									src="/bugdatabase/bugdatabase-theme/images/footer/spacer.gif"></a></li>
							<li><a data-lbl="youtube"
								href="https://www.youtube.com/oracle/" target="_blank"><img
									alt="YouTube" border="0" class="social-icon youtube"
									src="/bugdatabase/bugdatabase-theme/images/footer/spacer.gif"></a></li>
							<li><a data-lbl="rssfeeds"
								href="https://www.oracle.com/us/syndication/feeds/index.html"
								target="_blank"><img alt="RSS Feeds" border="0"
									class="social-icon rss"
									src="/bugdatabase/bugdatabase-theme/images/footer/spacer.gif"></a></li>
						</ul>
					</div>
					<!-- End of Col2 -->

					<!-- html for Go Top-->
					<div>
						<a id="scroll-top" class="hide" href="#"><i
							class="glyphicon glyphicon-chevron-up"></i></a>
					</div>

				</div>
				<!-- End of Col -->
			</div>
			<!-- End of Row -->
		</div>
		<!--End of class="container"--> </footer>
</body>   