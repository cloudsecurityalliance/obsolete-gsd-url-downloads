<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>#28350 - CVE-2017-14482: enriched.el code execution - GNU bug report logs</title>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<meta name="robots" content="noindex, nofollow">
<link rel="stylesheet" href="/css/bugs.css" type="text/css">

<script type="text/javascript">
function toggle_infmessages()
{
        allDivs=document.getElementsByTagName("div");
        for (var i = 0 ; i < allDivs.length ; i++ )
        {
                if (allDivs[i].className == "infmessage")
                {
                        allDivs[i].style.display=(allDivs[i].style.display == 'none' | allDivs[i].style.display == '') ? 'block' : 'none';
                }
        }
}
</script>
</head>
<body>
<h1>GNU bug report logs - 
#28350<br/>
CVE-2017-14482: enriched.el code execution</h1>
<p><a href="bugreport.cgi?bug=28349">Previous</a> <a href="bugreport.cgi?bug=28351">Next</a></p>
<div class="versiongraph"></div>
<div class="pkginfo">
  <p>Package:
     <a class="submitter" href="pkgreport.cgi?package=emacs">emacs</a>;
</p>
</div>

<div class="buginfo">
  <p>Reported by: <a href="pkgreport.cgi?submitter=charles%40aurox.ch">charles &lt;at&gt; aurox.ch (Charles A. Roelli)</a></p>
  <p>Date: Mon,  4 Sep 2017 19:26:01 UTC</p>

<p>Severity: important</p>
<p>Tags: security</p>

<p>Found in versions 25.1, 23.1, 21.4, 23.2, 21.2, 22.3, 24.3, 21.1, 21.3, 24.1, 24.5, 25.2, 24.2, 23.4, 22.1, 23.3, 24.4, 22.2</p>
<p>Fixed in version 25.3</p>

<p><strong>Done:</strong> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;</p>

<p>Bug is archived. No further changes may be made.<p></div>

<p>To add a comment to this bug, you must first <a href="/server-control.html">unarchive</a> it, by sending<br>
a message to control AT debbugs.gnu.org, with <em>unarchive 28350</em> in the body.<br>
You can then email your comments to 28350 AT debbugs.gnu.org in the normal way.
<p><a href="javascript:toggle_infmessages();">Toggle</a> the display of automated, internal messages from the tracker.</p><div class="msgreceived"><p>View this report as an <a href="bugreport.cgi?mbox=yes;bug=28350" title="Folder with messages as they arrived at the tracker">mbox folder</a>, <a href="bugreport.cgi?mboxstat=yes;bug=28350" title="Folder with a status summary message at the start">status mbox</a>, <a href="bugreport.cgi?mbox=yes;bug=28350;mboxmaint=yes" title="Folder of messages as sent from the tracker to the maintainers">maintainer mbox</a></p></div>

<div class="infmessage"><hr>
<a name="1"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1504553161 -->
<strong>Report forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Mon, 04 Sep 2017 19:26:01 GMT) <a href="bugreport.cgi?msg=2;bug=28350">Full text</a> and <a href="bugreport.cgi?msg=2;mbox=yes;bug=28350">rfc822 format</a> available.</div>

<div class="infmessage"><hr>
<a name="3"></a>
<!-- request_addr: charles &lt;at&gt; aurox.ch (Charles A. Roelli) -->
<!-- time:1504553162 -->
<strong>Acknowledgement sent</strong>
to <code>charles &lt;at&gt; aurox.ch (Charles A. Roelli)</code>:<br>
New bug report received and forwarded.  Copy sent to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>.
 (Mon, 04 Sep 2017 19:26:02 GMT) <a href="bugreport.cgi?msg=4;bug=28350">Full text</a> and <a href="bugreport.cgi?mbox=yes;msg=4;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="5"></a><a name="msg5"></a><a href="#5">Message #5</a> received at submit &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=5">full text</a>, <a href="bugreport.cgi?bug=28350;msg=5;mbox=yes">mbox</a>):</p>
<pre class="headers">
<b>From:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>To:</b> bug-gnu-emacs &lt;at&gt; gnu.org
<b>Subject:</b> enriched.el code execution
<b>Date:</b> Mon, 04 Sep 2017 21:24:42 +0200
</pre>
<pre class="mime">[<a href="bugreport.cgi?bug=28350;msg=5;att=0">Message part 1</a> (text/plain, inline)]</pre>
<pre class="message">Enriched mode implements an extension command to the text/enriched
format called &quot;x-display&quot;, which stores &quot;display&quot; text properties.
It was added awhile ago:

  commit d9e28c1ca1d95f51a05d052dcf1fe06888d52476
  Author: Gerd Moellmann &lt;gerd &lt;at&gt; gnu.org&gt;
  Date:   Wed Jul 21 21:43:03 1999 +0000

  (enriched-translations): Add `display&#39; and &quot;x-display&quot;.
  (enriched-handle-display-prop): New.
  (enriched-decode-display-prop): New.

It&#39;s possible to use this extension command to transparently execute
arbitrary code in an Emacs process that opens a text/enriched file.
For example, if you open a file containing the following contents:

Content-Type: text/enriched
Text-Width: 70

&lt;x-display&gt;&lt;param&gt;(when (message &quot;hello world&quot;) nil)&lt;/param&gt;test&lt;/x-display&gt;

Then &quot;hello world&quot; will be printed in the echo area whenever the
&quot;test&quot; text is displayed (which is immediate).  Note that the
s-expression between the &lt;param&gt; tags needs to conform to a &quot;display&quot;
spec: but since there are a few display specs that can execute code,
it&#39;s not difficult to craft a file that could have bad effects (shell
commands work, for example).  Additionally, such a file can be
compressed with gzip (thus hiding the contents), and when it is
opened, Emacs will automatically decompress it and apply the display
properties.  Attached is an example file (enriched-bug-example.txt)
that turns the mode line red as soon as you open it.  It works in
23.4, 24.5, 25.2 and master (and possibly earlier versions -- I
haven&#39;t tested).

Other extensions in `enriched-translations&#39; of enriched.el may have
similar issues (I don&#39;t understand them all, so I hope somebody else
can make sure).

</pre>
<pre class="mime">[<a href="bugreport.cgi?bug=28350;msg=5;filename=enriched-bug-example.txt;att=1">enriched-bug-example.txt</a> (text/enriched, attachment)]</pre>

<div class="msgreceived"><hr>
<a name="6"></a>
<!-- requester: Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt; -->
<!-- request_addr: control &lt;at&gt; debbugs.gnu.org -->
<!-- time:1504625761 -->
<strong>Severity set to &#39;important&#39; from &#39;normal&#39;
</strong>
Request was from <code>Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;</code>
to <code>control &lt;at&gt; debbugs.gnu.org</code>.
 (Tue, 05 Sep 2017 15:36:01 GMT) <a href="bugreport.cgi?bug=28350;msg=7">Full text</a> and <a href="bugreport.cgi?bug=28350;mbox=yes;msg=7">rfc822 format</a> available.</div>

<div class="msgreceived"><hr>
<a name="8"></a>
<!-- command:tag -->
<!-- requester: Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt; -->
<!-- request_addr: control &lt;at&gt; debbugs.gnu.org -->
<!-- time:1504625761 -->
<!-- new_data:
$new_data = {
              &#39;keywords&#39; =&gt; &#39;security&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;keywords&#39; =&gt; &#39;&#39;
            };
-->
<strong>Added tag(s) security.</strong>
Request was from <code>Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;</code>
to <code>control &lt;at&gt; debbugs.gnu.org</code>.
 (Tue, 05 Sep 2017 15:36:01 GMT) <a href="bugreport.cgi?msg=9;bug=28350">Full text</a> and <a href="bugreport.cgi?bug=28350;mbox=yes;msg=9">rfc822 format</a> available.</div>

<div class="msgreceived"><hr>
<a name="10"></a>
<!-- command:block -->
<!-- requester: Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt; -->
<!-- request_addr: control &lt;at&gt; debbugs.gnu.org -->
<!-- time:1504625762 -->
<!-- new_data:
$new_data = {
              &#39;blocks&#39; =&gt; &#39;24655&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;blocks&#39; =&gt; &#39;&#39;
            };
-->
<strong>Added indication that bug 28350 blocks24655</strong>
Request was from <code>Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;</code>
to <code>control &lt;at&gt; debbugs.gnu.org</code>.
 (Tue, 05 Sep 2017 15:36:02 GMT) <a href="bugreport.cgi?msg=11;bug=28350">Full text</a> and <a href="bugreport.cgi?mbox=yes;msg=11;bug=28350">rfc822 format</a> available.</div>

<div class="msgreceived"><hr>
<a name="12"></a>
<!-- command:block -->
<!-- requester: Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt; -->
<!-- request_addr: control &lt;at&gt; debbugs.gnu.org -->
<!-- time:1504637701 -->
<!-- new_data:
$new_data = {};
-->
<!-- old_data:
$old_data = {};
-->
<strong>Removed indication that bug 28350 blocks</strong>
Request was from <code>Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;</code>
to <code>control &lt;at&gt; debbugs.gnu.org</code>.
 (Tue, 05 Sep 2017 18:55:01 GMT) <a href="bugreport.cgi?msg=13;bug=28350">Full text</a> and <a href="bugreport.cgi?bug=28350;msg=13;mbox=yes">rfc822 format</a> available.</div>

<div class="infmessage"><hr>
<a name="14"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1504725962 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Wed, 06 Sep 2017 19:26:02 GMT) <a href="bugreport.cgi?msg=15;bug=28350">Full text</a> and <a href="bugreport.cgi?mbox=yes;msg=15;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="16"></a><a name="msg16"></a><a href="#16">Message #16</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=16">full text</a>, <a href="bugreport.cgi?bug=28350;msg=16;mbox=yes">mbox</a>):</p>
<pre class="headers">
<b>From:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>To:</b> 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Wed, 06 Sep 2017 21:25:18 +0200
</pre>
<pre class="message">If anyone wants a fix to apply locally, the following s-expression
prevents the display parameter from being used by Enriched mode
(tested in Emacs 23+):

(eval-after-load &quot;enriched&quot;
  &#39;(defun enriched-decode-display-prop (start end &amp;optional param)
     (list start end)))

As for a fix to apply to master: I&#39;d like to keep &quot;x-display&quot; if we
can agree on some &quot;safe&quot; predicate that the given parameter would have
to satisfy.  Looking at the list of display specifications that are
available, it seems that simple string, margin text, space-width,
height (only in the (+ n), (- n) and n cases) and raise specifications
should be okay.  Does anybody else have an opinion about this?



</pre>

<div class="infmessage"><hr>
<a name="17"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1504751702 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Thu, 07 Sep 2017 02:35:02 GMT) <a href="bugreport.cgi?msg=18;bug=28350">Full text</a> and <a href="bugreport.cgi?bug=28350;msg=18;mbox=yes">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="19"></a><a name="msg19"></a><a href="#19">Message #19</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=19">full text</a>, <a href="bugreport.cgi?bug=28350;mbox=yes;msg=19">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>To:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>Cc:</b> 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Thu, 07 Sep 2017 05:34:34 +0300
</pre>
<pre class="message">&gt; Date: Wed, 06 Sep 2017 21:25:18 +0200
&gt; From: charles &lt;at&gt; aurox.ch (Charles A. Roelli)
&gt; 
&gt; As for a fix to apply to master: I&#39;d like to keep &quot;x-display&quot; if we
&gt; can agree on some &quot;safe&quot; predicate that the given parameter would have
&gt; to satisfy.  Looking at the list of display specifications that are
&gt; available, it seems that simple string, margin text, space-width,
&gt; height (only in the (+ n), (- n) and n cases) and raise specifications
&gt; should be okay.  Does anybody else have an opinion about this?

I agree that the cases you have shown are safe.

Thanks.



</pre>

<div class="msgreceived"><hr>
<a name="20"></a>
<!-- command:found -->
<!-- requester: Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt; -->
<!-- request_addr: control &lt;at&gt; debbugs.gnu.org -->
<!-- time:1504902182 -->
<!-- new_data:
$new_data = {
              &#39;found_versions&#39; =&gt; [
                                    &#39;25.2&#39;,
                                    &#39;24.1&#39;,
                                    &#39;24.5&#39;,
                                    &#39;23.4&#39;,
                                    &#39;22.2&#39;,
                                    &#39;22.1&#39;,
                                    &#39;24.4&#39;,
                                    &#39;23.1&#39;,
                                    &#39;21.4&#39;,
                                    &#39;21.1&#39;,
                                    &#39;23.2&#39;,
                                    &#39;24.3&#39;,
                                    &#39;24.2&#39;,
                                    &#39;21.3&#39;,
                                    &#39;22.3&#39;,
                                    &#39;21.2&#39;,
                                    &#39;25.1&#39;,
                                    &#39;23.3&#39;
                                  ]
            };
-->
<!-- old_data:
$old_data = {
              &#39;found_versions&#39; =&gt; []
            };
-->
<strong>bug Marked as found in versions 21.1, 21.4, 23.2, 24.3, 24.2, 25.2, 22.1, 24.5, 24.1, 22.2, 23.4, 23.1, 24.4, 23.3, 21.2, 21.3, 22.3, and 25.1.</strong>
Request was from <code>Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;</code>
to <code>control &lt;at&gt; debbugs.gnu.org</code>.
 (Fri, 08 Sep 2017 20:23:02 GMT) <a href="bugreport.cgi?bug=28350;msg=21">Full text</a> and <a href="bugreport.cgi?msg=21;mbox=yes;bug=28350">rfc822 format</a> available.</div>

<div class="infmessage"><hr>
<a name="22"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1504959901 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Sat, 09 Sep 2017 12:25:01 GMT) <a href="bugreport.cgi?bug=28350;msg=23">Full text</a> and <a href="bugreport.cgi?bug=28350;mbox=yes;msg=23">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="24"></a><a name="msg24"></a><a href="#24">Message #24</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?msg=24;bug=28350">full text</a>, <a href="bugreport.cgi?msg=24;mbox=yes;bug=28350">mbox</a>):</p>
<pre class="headers">
<b>From:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>To:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>Cc:</b> 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Sat, 09 Sep 2017 14:23:54 +0200
</pre>
<pre class="mime">[<a href="bugreport.cgi?msg=24;bug=28350;att=0">Message part 1</a> (text/plain, inline)]</pre>
<pre class="message">&gt; Date: Thu, 07 Sep 2017 05:34:34 +0300
&gt; From: Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
&gt; CC: 28350 &lt;at&gt; debbugs.gnu.org
&gt; 
&gt; &gt; Date: Wed, 06 Sep 2017 21:25:18 +0200
&gt; &gt; From: charles &lt;at&gt; aurox.ch (Charles A. Roelli)
&gt; &gt; 
&gt; &gt; As for a fix to apply to master: I&#39;d like to keep &quot;x-display&quot; if we
&gt; &gt; can agree on some &quot;safe&quot; predicate that the given parameter would have
&gt; &gt; to satisfy.  Looking at the list of display specifications that are
&gt; &gt; available, it seems that simple string, margin text, space-width,
&gt; &gt; height (only in the (+ n), (- n) and n cases) and raise specifications
&gt; &gt; should be okay.  Does anybody else have an opinion about this?
&gt; 
&gt; I agree that the cases you have shown are safe.
&gt; 
&gt; Thanks.

Thank you.  Does the attached patch look OK?  I&#39;ve used the file
enriched-test-safe-props.txt (also attached) to test that safe
properties are still applied.

</pre>
<pre class="mime">[<a href="bugreport.cgi?bug=28350;msg=24;filename=0001-Prevent-code-execution-by-text-enriched-files-Bug-28.patch;att=1">0001-Prevent-code-execution-by-text-enriched-files-Bug-28.patch</a> (text/x-patch, attachment)]</pre>
<pre class="mime">[<a href="bugreport.cgi?msg=24;bug=28350;att=2;filename=enriched-test-safe-props.txt">enriched-test-safe-props.txt</a> (text/enriched, attachment)]</pre>

<div class="infmessage"><hr>
<a name="25"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1504964761 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Sat, 09 Sep 2017 13:46:01 GMT) <a href="bugreport.cgi?bug=28350;msg=26">Full text</a> and <a href="bugreport.cgi?bug=28350;msg=26;mbox=yes">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="27"></a><a name="msg27"></a><a href="#27">Message #27</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=27">full text</a>, <a href="bugreport.cgi?bug=28350;mbox=yes;msg=27">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>To:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>Cc:</b> 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Sat, 09 Sep 2017 16:45:40 +0300
</pre>
<pre class="message">&gt; Date: Sat, 09 Sep 2017 14:23:54 +0200
&gt; From: charles &lt;at&gt; aurox.ch (Charles A. Roelli)
&gt; CC: 28350 &lt;at&gt; debbugs.gnu.org
&gt; 
&gt; Thank you.  Does the attached patch look OK?  I&#39;ve used the file
&gt; enriched-test-safe-props.txt (also attached) to test that safe
&gt; properties are still applied.

Thank you for working on this.  I have some comments:

&gt; --- a/lisp/textmodes/enriched.el
&gt; +++ b/lisp/textmodes/enriched.el
&gt; @@ -503,6 +503,47 @@ enriched-decode-display-prop
&gt;  		  (error nil)))))
&gt;      (unless prop
&gt;        (message &quot;Warning: invalid &lt;x-display&gt; parameter %s&quot; param))
&gt; -    (list start end &#39;display prop)))
&gt; +    (if (enriched-display-prop-safe-p prop)
&gt; +        (list start end &#39;display prop)
&gt; +      (message &quot;Warning: unsafe &lt;x-display&gt; parameter %s not applied&quot; param)
&gt; +      (list start end))))

I think we will want to allow unsafe display properties, given a
user&#39;s explicit permission.  So I think we need a defcustom that
allows this, and then enriched-display-prop-safe-p should always
return non-nil.

&gt; +See Info node `(elisp)Display Property&#39; for the use of these
&gt; +display specifications.&quot;
&gt; +  (ignore-errors
&gt; +    (or (stringp prop)
            ^^^^^^^^^^^^
What about an image spec (including a slice spec)?

&gt; +        (and (eq (car prop) &#39;space-width)
&gt; +             (or (integerp (cadr prop)) (floatp (cadr prop))))
&gt; +        (and (consp (car prop))
&gt; +             (eq (caar prop) &#39;margin)
&gt; +             (or (eq (cadar prop) &#39;right-margin)
&gt; +                 (eq (cadar prop) &#39;left-margin))
&gt; +             (stringp (cadr prop)))

The margin display can also specify an image, not just a string, and I
think that would be safe as well.

&gt; +        (and (eq (car prop) &#39;height)
&gt; +             (or (integerp (cadr prop))
&gt; +                 (and (listp (cadr prop))
&gt; +                      (or (eq (elt (cadr prop) 0) &#39;+) (elt (cadr prop) 0) &#39;-)
&gt; +                      (integerp (elt (cadr prop) 1)))))
                          ^^^^^^^^
I think this should be numberp, as the value could also safely be a
float.

&gt; +        (and (eq (car prop) &#39;raise)
&gt; +             (integerp (cadr prop))))))
                 ^^^^^^^^
The FACTOR in (raise FACTOR) can also be a float, so I think numberp
is the correct predicate here.

And then what about (space . PROPS) type of display spec?  I think all
of its variants are safe.



</pre>

<div class="infmessage"><hr>
<a name="28"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1504972682 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Sat, 09 Sep 2017 15:58:02 GMT) <a href="bugreport.cgi?bug=28350;msg=29">Full text</a> and <a href="bugreport.cgi?mbox=yes;msg=29;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="30"></a><a name="msg30"></a><a href="#30">Message #30</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=30">full text</a>, <a href="bugreport.cgi?mbox=yes;msg=30;bug=28350">mbox</a>):</p>
<pre class="headers">
<b>From:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>To:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>Cc:</b> 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Sat, 09 Sep 2017 17:57:10 +0200
</pre>
<pre class="message">Thanks for the feedback.

&gt; Date: Sat, 09 Sep 2017 16:45:40 +0300
&gt; From: Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
&gt; CC: 28350 &lt;at&gt; debbugs.gnu.org
&gt; Reply-to: Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
&gt; 
&gt; &gt; --- a/lisp/textmodes/enriched.el
&gt; &gt; +++ b/lisp/textmodes/enriched.el
&gt; &gt; @@ -503,6 +503,47 @@ enriched-decode-display-prop
&gt; &gt;  		  (error nil)))))
&gt; &gt;      (unless prop
&gt; &gt;        (message &quot;Warning: invalid &lt;x-display&gt; parameter %s&quot; param))
&gt; &gt; -    (list start end &#39;display prop)))
&gt; &gt; +    (if (enriched-display-prop-safe-p prop)
&gt; &gt; +        (list start end &#39;display prop)
&gt; &gt; +      (message &quot;Warning: unsafe &lt;x-display&gt; parameter %s not applied&quot; param)
&gt; &gt; +      (list start end))))
&gt; 
&gt; I think we will want to allow unsafe display properties, given a
&gt; user&#39;s explicit permission.  So I think we need a defcustom that
&gt; allows this, and then enriched-display-prop-safe-p should always
&gt; return non-nil.

Agreed, I&#39;ve added this.

&gt; &gt; +See Info node `(elisp)Display Property&#39; for the use of these
&gt; &gt; +display specifications.&quot;
&gt; &gt; +  (ignore-errors
&gt; &gt; +    (or (stringp prop)
&gt;             ^^^^^^^^^^^^
&gt; What about an image spec (including a slice spec)?

Okay, I see that image specs can be safe.  But are they all safe?

And I don&#39;t understand how a slice spec is used together with an image
spec.  Is the slice spec used inside of IMAGE-PROPS, i.e. as you might
gather from the manual:

‘(image . IMAGE-PROPS)’
     This kind of display specification is an image descriptor (*note
     Images).  When used as a display specification, it means to
     display the image instead of the text that has the display
     specification.

‘(slice X Y WIDTH HEIGHT)’
     This specification together with ‘image’ specifies a “slice” (a
     partial area) of the image to display. 

?

&gt; 
&gt; &gt; +        (and (eq (car prop) &#39;space-width)
&gt; &gt; +             (or (integerp (cadr prop)) (floatp (cadr prop))))
&gt; &gt; +        (and (consp (car prop))
&gt; &gt; +             (eq (caar prop) &#39;margin)
&gt; &gt; +             (or (eq (cadar prop) &#39;right-margin)
&gt; &gt; +                 (eq (cadar prop) &#39;left-margin))
&gt; &gt; +             (stringp (cadr prop)))
&gt; 
&gt; The margin display can also specify an image, not just a string, and I
&gt; think that would be safe as well.

Okay, I&#39;ll apply the same procedure as we decide for the above image
spec.

&gt; 
&gt; &gt; +        (and (eq (car prop) &#39;height)
&gt; &gt; +             (or (integerp (cadr prop))
&gt; &gt; +                 (and (listp (cadr prop))
&gt; &gt; +                      (or (eq (elt (cadr prop) 0) &#39;+) (elt (cadr prop) 0) &#39;-)
&gt; &gt; +                      (integerp (elt (cadr prop) 1)))))
&gt;                           ^^^^^^^^
&gt; I think this should be numberp, as the value could also safely be a
&gt; float.
&gt; 
&gt; &gt; +        (and (eq (car prop) &#39;raise)
&gt; &gt; +             (integerp (cadr prop))))))
&gt;                  ^^^^^^^^
&gt; The FACTOR in (raise FACTOR) can also be a float, so I think numberp
&gt; is the correct predicate here.
&gt; 
&gt; And then what about (space . PROPS) type of display spec?  I think all
&gt; of its variants are safe.

Okay, I&#39;ve made these changes and added the `space&#39; spec.  At this
point it seems that unsafe display specs are more the exception than
the rule, so it might make sense to define the
`enriched-display-prop-safe-p&#39; function by excluding the unsafe
specifications instead of including the safe ones.  What do you think?



</pre>

<div class="infmessage"><hr>
<a name="31"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1504976222 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Sat, 09 Sep 2017 16:57:02 GMT) <a href="bugreport.cgi?msg=32;bug=28350">Full text</a> and <a href="bugreport.cgi?bug=28350;mbox=yes;msg=32">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="33"></a><a name="msg33"></a><a href="#33">Message #33</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=33">full text</a>, <a href="bugreport.cgi?bug=28350;mbox=yes;msg=33">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>To:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>Cc:</b> 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Sat, 09 Sep 2017 19:55:37 +0300
</pre>
<pre class="message">&gt; Date: Sat, 09 Sep 2017 17:57:10 +0200
&gt; From: charles &lt;at&gt; aurox.ch (Charles A. Roelli)
&gt; CC: 28350 &lt;at&gt; debbugs.gnu.org
&gt; 
&gt; &gt; &gt; +See Info node `(elisp)Display Property&#39; for the use of these
&gt; &gt; &gt; +display specifications.&quot;
&gt; &gt; &gt; +  (ignore-errors
&gt; &gt; &gt; +    (or (stringp prop)
&gt; &gt;             ^^^^^^^^^^^^
&gt; &gt; What about an image spec (including a slice spec)?
&gt; 
&gt; Okay, I see that image specs can be safe.  But are they all safe?

I think they are.  Does anyone know different?

&gt; And I don&#39;t understand how a slice spec is used together with an image
&gt; spec.  Is the slice spec used inside of IMAGE-PROPS, i.e. as you might
&gt; gather from the manual:
&gt; 
&gt; ‘(image . IMAGE-PROPS)’
&gt;      This kind of display specification is an image descriptor (*note
&gt;      Images).  When used as a display specification, it means to
&gt;      display the image instead of the text that has the display
&gt;      specification.
&gt; 
&gt; ‘(slice X Y WIDTH HEIGHT)’
&gt;      This specification together with ‘image’ specifies a “slice” (a
&gt;      partial area) of the image to display. 
&gt; 
&gt; ?

AFAIU, like this:

  ((slice X Y WIDTH HEIGHT) (image . IMAGE-PROPS))

You can see examples of this in image.el and image-mode.el.

&gt; At this point it seems that unsafe display specs are more the
&gt; exception than the rule, so it might make sense to define the
&gt; `enriched-display-prop-safe-p&#39; function by excluding the unsafe
&gt; specifications instead of including the safe ones.  What do you
&gt; think?

I&#39;m not sure.  The display spec can be complex, so to make sure none
of these exceptions sneak through, you will have to recursively unpack
the spec data structure and examine each of the elements, which smells
too similar to emulating &#39;eval&#39;.  No?

Thanks.



</pre>

<div class="infmessage"><hr>
<a name="34"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1504989542 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Sat, 09 Sep 2017 20:39:02 GMT) <a href="bugreport.cgi?bug=28350;msg=35">Full text</a> and <a href="bugreport.cgi?bug=28350;mbox=yes;msg=35">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="36"></a><a name="msg36"></a><a href="#36">Message #36</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?msg=36;bug=28350">full text</a>, <a href="bugreport.cgi?mbox=yes;msg=36;bug=28350">mbox</a>):</p>
<pre class="headers">
<b>From:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>To:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>Cc:</b> 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Sat, 09 Sep 2017 22:37:29 +0200
</pre>
<pre class="mime">[<a href="bugreport.cgi?att=0;bug=28350;msg=36">Message part 1</a> (text/plain, inline)]</pre>
<pre class="message">&gt; Date: Sat, 09 Sep 2017 19:55:37 +0300
&gt; From: Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
&gt; CC: 28350 &lt;at&gt; debbugs.gnu.org
&gt;
&gt; &gt; &gt; &gt; +See Info node `(elisp)Display Property&#39; for the use of these
&gt; &gt; &gt; &gt; +display specifications.&quot;
&gt; &gt; &gt; &gt; +  (ignore-errors
&gt; &gt; &gt; &gt; +    (or (stringp prop)
&gt; &gt; &gt;             ^^^^^^^^^^^^
&gt; &gt; &gt; What about an image spec (including a slice spec)?
&gt; &gt; 
&gt; &gt; Okay, I see that image specs can be safe.  But are they all safe?
&gt; 
&gt; I think they are.  Does anyone know different?

I read over the documentation some more and they do look alright.

&gt; &gt; And I don&#39;t understand how a slice spec is used together with an image
&gt; &gt; spec.  Is the slice spec used inside of IMAGE-PROPS, i.e. as you might
&gt; &gt; gather from the manual:
&gt; &gt; 
&gt; &gt; ‘(image . IMAGE-PROPS)’
&gt; &gt;      This kind of display specification is an image descriptor (*note
&gt; &gt;      Images).  When used as a display specification, it means to
&gt; &gt;      display the image instead of the text that has the display
&gt; &gt;      specification.
&gt; &gt; 
&gt; &gt; ‘(slice X Y WIDTH HEIGHT)’
&gt; &gt;      This specification together with ‘image’ specifies a “slice” (a
&gt; &gt;      partial area) of the image to display. 
&gt; &gt; 
&gt; &gt; ?
&gt; 
&gt; AFAIU, like this:
&gt; 
&gt;   ((slice X Y WIDTH HEIGHT) (image . IMAGE-PROPS))
&gt; 
&gt; You can see examples of this in image.el and image-mode.el.

Thanks.  I forgot that the display property can be set to a list or
vector of display specifications.  I&#39;ve updated the patch to reflect
this:

+        (and (seqp prop) (seq-every-p &#39;enriched-display-prop-safe-p prop)))))

and I&#39;ve added slice/image specifications.

&gt; &gt; At this point it seems that unsafe display specs are more the
&gt; &gt; exception than the rule, so it might make sense to define the
&gt; &gt; `enriched-display-prop-safe-p&#39; function by excluding the unsafe
&gt; &gt; specifications instead of including the safe ones.  What do you
&gt; &gt; think?
&gt; 
&gt; I&#39;m not sure.  The display spec can be complex, so to make sure none
&gt; of these exceptions sneak through, you will have to recursively unpack
&gt; the spec data structure and examine each of the elements, which smells
&gt; too similar to emulating &#39;eval&#39;.  No?

Thank you.  I&#39;ve kept the current approach.  Please see again the
attached patch.

Also, should the left-fringe/right-fringe display specifications be
considered safe?  They seem innocuous.

</pre>
<pre class="mime">[<a href="bugreport.cgi?msg=36;bug=28350;att=1;filename=0001-Prevent-code-execution-by-text-enriched-files-Bug-28.patch">0001-Prevent-code-execution-by-text-enriched-files-Bug-28.patch</a> (text/x-patch, attachment)]</pre>

<div class="infmessage"><hr>
<a name="37"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1504997041 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Sat, 09 Sep 2017 22:44:01 GMT) <a href="bugreport.cgi?msg=38;bug=28350">Full text</a> and <a href="bugreport.cgi?bug=28350;msg=38;mbox=yes">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="39"></a><a name="msg39"></a><a href="#39">Message #39</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=39">full text</a>, <a href="bugreport.cgi?msg=39;mbox=yes;bug=28350">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
<b>To:</b> &quot;Charles A. Roelli&quot; &lt;charles &lt;at&gt; aurox.ch&gt;
<b>Cc:</b> 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: enriched.el code execution
<b>Date:</b> Sat, 9 Sep 2017 15:43:30 -0700
</pre>
<pre class="message">Thanks for reporting this bug. Since it is a serious security hole I have 
installed a patch by Lars Ingebrigtsen that temporarily disables the problematic 
translations, and that also changes Gnus to not call enriched-decode. For the 
emacs-25 branch the patch is here:

<a href="https://git.savannah.gnu.org/cgit/emacs.git/commit/?h=emacs-25&amp;id=9ad0fcc54442a9a01d41be19880250783426db70">https://git.savannah.gnu.org/cgit/emacs.git/commit/?h=emacs-25&amp;id=9ad0fcc54442a9a01d41be19880250783426db70</a>

and for the master branch the patch is here:

<a href="https://git.savannah.gnu.org/cgit/emacs.git/commit/?id=19584f13b1e2e4a778602a8302619ef5c675e68b">https://git.savannah.gnu.org/cgit/emacs.git/commit/?id=19584f13b1e2e4a778602a8302619ef5c675e68b</a>

As this patch is merely a workaround to close the security hole, I am not 
marking the underlying bug as fixed.

Thank you for reporting the problem.



</pre>

<div class="infmessage"><hr>
<a name="40"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505062921 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Sun, 10 Sep 2017 17:02:01 GMT) <a href="bugreport.cgi?msg=41;bug=28350">Full text</a> and <a href="bugreport.cgi?mbox=yes;msg=41;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="42"></a><a name="msg42"></a><a href="#42">Message #42</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?msg=42;bug=28350">full text</a>, <a href="bugreport.cgi?bug=28350;msg=42;mbox=yes">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>To:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>Cc:</b> 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Sun, 10 Sep 2017 20:01:20 +0300
</pre>
<pre class="message">&gt; Date: Sat, 09 Sep 2017 22:37:29 +0200
&gt; From: charles &lt;at&gt; aurox.ch (Charles A. Roelli)
&gt; CC: 28350 &lt;at&gt; debbugs.gnu.org
&gt; 
&gt; Thank you.  I&#39;ve kept the current approach.  Please see again the
&gt; attached patch.

Some minor nits below.

&gt; Also, should the left-fringe/right-fringe display specifications be
&gt; considered safe?  They seem innocuous.

Yes, I think so.  And your patch already does allow them, doesn&#39;t it?

&gt; +(defcustom enriched-allow-unsafe-display-props nil
&gt; +  &quot;Variable determining whether to decode arbitrary display properties.

&quot;If non-nil allow to evaluate arbitrary forms in display properties.&quot;

&gt; +  :risky t
&gt; +  :type &#39;boolean
&gt; +  :group &#39;enriched)

Please add :version here.  Please also add a short NEWS entry.

It would be good to have tests for this, but doing that is much less
urgent than fixing the vulnerability, so please feel free to do so as
a separate commit (unless you already have the tests ready).

Otherwise, looks good to me.  Thanks.



</pre>

<div class="infmessage"><hr>
<a name="43"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505069701 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Sun, 10 Sep 2017 18:55:01 GMT) <a href="bugreport.cgi?bug=28350;msg=44">Full text</a> and <a href="bugreport.cgi?mbox=yes;msg=44;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="45"></a><a name="msg45"></a><a href="#45">Message #45</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=45">full text</a>, <a href="bugreport.cgi?bug=28350;msg=45;mbox=yes">mbox</a>):</p>
<pre class="headers">
<b>From:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>To:</b> Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
<b>Cc:</b> larsi &lt;at&gt; gnus.org, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: enriched.el code execution
<b>Date:</b> Sun, 10 Sep 2017 20:54:13 +0200
</pre>
<pre class="message">&gt; From: Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
&gt; Date: Sat, 9 Sep 2017 15:43:30 -0700
&gt; 
&gt; Thanks for reporting this bug. Since it is a serious security hole I have 
&gt; installed a patch by Lars Ingebrigtsen that temporarily disables the problematic 
&gt; translations, and that also changes Gnus to not call enriched-decode. For the 
&gt; emacs-25 branch the patch is here:
&gt; 
&gt; <a href="https://git.savannah.gnu.org/cgit/emacs.git/commit/?h=emacs-25&amp;id=9ad0fcc54442a9a01d41be19880250783426db70">https://git.savannah.gnu.org/cgit/emacs.git/commit/?h=emacs-25&amp;id=9ad0fcc54442a9a01d41be19880250783426db70</a>
&gt; 
&gt; and for the master branch the patch is here:
&gt; 
&gt; <a href="https://git.savannah.gnu.org/cgit/emacs.git/commit/?id=19584f13b1e2e4a778602a8302619ef5c675e68b">https://git.savannah.gnu.org/cgit/emacs.git/commit/?id=19584f13b1e2e4a778602a8302619ef5c675e68b</a>
&gt; 
&gt; As this patch is merely a workaround to close the security hole, I am not 
&gt; marking the underlying bug as fixed.
&gt; 
&gt; Thank you for reporting the problem.

Thanks for these fixes.  I have some comments:

&gt; branch: master
&gt; commit 19584f13b1e2e4a778602a8302619ef5c675e68b
&gt; Author: Lars Ingebrigtsen &lt;larsi &lt;at&gt; gnus.org&gt;
&gt; Commit: Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
&gt;
&gt; [...]
&gt;
&gt; --- a/lisp/textmodes/enriched.el
&gt; +++ b/lisp/textmodes/enriched.el
&gt; @@ -117,12 +117,7 @@ expression, which is evaluated to get the string to insert.&quot;)
&gt;  		   (full        &quot;flushboth&quot;)
&gt;  		   (center      &quot;center&quot;))
&gt;      (PARAMETER     (t           &quot;param&quot;)) ; Argument of preceding annotation
&gt; -    ;; The following are not part of the standard:
&gt; -    (FUNCTION      (enriched-decode-foreground &quot;x-color&quot;)
&gt; -		   (enriched-decode-background &quot;x-bg-color&quot;)

Do we know that &quot;x-color&quot; and/or &quot;x-bg-color&quot; are vulnerable to a
similar misuse as &quot;x-display&quot;?  If not, I can still re-add them at a
later time.

&gt; branch: emacs-25
&gt; commit b6389930146882a77c22901a4357e287826fc7ff
&gt; Author: Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
&gt; Commit: Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
&gt;
&gt; [...]
&gt;
&gt; +** Enriched text mode no longer supports the &#39;FUNCTION&#39; and &#39;display&#39;
&gt; +translations, and Gnus no longer processes enriched text when
&gt; +inlining.  This fixes bugs introduced in Emacs 19.29.  To work around
&gt; +these bugs in Emacs versions 19.29 through 25.2, append the following
&gt; +to your ~/.emacs file:
&gt; +
&gt; +  (provide &#39;enriched)
&gt; +  (defun enriched-mode (&amp;optional arg))
&gt; +  (defun enriched-decode (from to))

This fix is very safe, at the cost of disabling Enriched mode.  Could
we do any better?  I had suggested the following (in
<a href="https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28350#16">https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28350#16</a>):

  (eval-after-load &quot;enriched&quot;
    &#39;(defun enriched-decode-display-prop (start end &amp;optional param)
       (list start end)))

But it may not work in Emacs earlier than 23 (I can&#39;t test it).



</pre>

<div class="infmessage"><hr>
<a name="46"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505080082 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Sun, 10 Sep 2017 21:48:02 GMT) <a href="bugreport.cgi?bug=28350;msg=47">Full text</a> and <a href="bugreport.cgi?bug=28350;mbox=yes;msg=47">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="48"></a><a name="msg48"></a><a href="#48">Message #48</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?msg=48;bug=28350">full text</a>, <a href="bugreport.cgi?bug=28350;mbox=yes;msg=48">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
<b>To:</b> &quot;Charles A. Roelli&quot; &lt;charles &lt;at&gt; aurox.ch&gt;
<b>Cc:</b> larsi &lt;at&gt; gnus.org, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: enriched.el code execution
<b>Date:</b> Sun, 10 Sep 2017 14:46:59 -0700
</pre>
<pre class="message">Charles A. Roelli wrote:

&gt; Do we know that &quot;x-color&quot; and/or &quot;x-bg-color&quot; are vulnerable to a
&gt; similar misuse as &quot;x-display&quot;?  If not, I can still re-add them at a
&gt; later time.

Eli asked the same question privately. I don&#39;t know the code myself; perhaps 
Lars could say.

&gt;&gt; +  (provide &#39;enriched)
&gt;&gt; +  (defun enriched-mode (&amp;optional arg))
&gt;&gt; +  (defun enriched-decode (from to))
&gt; 
&gt; This fix is very safe, at the cost of disabling Enriched mode.  Could
&gt; we do any better?  I had suggested the following (in
&gt; <a href="https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28350#16">https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28350#16</a>):
&gt; 
&gt;    (eval-after-load &quot;enriched&quot;
&gt;      &#39;(defun enriched-decode-display-prop (start end &amp;optional param)
&gt;         (list start end)))
&gt; 
&gt; But it may not work in Emacs earlier than 23 (I can&#39;t test it).

It should work, since eval-after-load predates Emacs 19.29.  Though it assumes 
that x-display is the only problem here.



</pre>

<div class="infmessage"><hr>
<a name="49"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505097601 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Mon, 11 Sep 2017 02:40:01 GMT) <a href="bugreport.cgi?msg=50;bug=28350">Full text</a> and <a href="bugreport.cgi?mbox=yes;msg=50;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="51"></a><a name="msg51"></a><a href="#51">Message #51</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=51">full text</a>, <a href="bugreport.cgi?msg=51;mbox=yes;bug=28350">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>To:</b> Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
<b>Cc:</b> larsi &lt;at&gt; gnus.org, charles &lt;at&gt; aurox.ch, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Mon, 11 Sep 2017 05:39:27 +0300
</pre>
<pre class="message">&gt; From: Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
&gt; Date: Sun, 10 Sep 2017 14:46:59 -0700
&gt; Cc: larsi &lt;at&gt; gnus.org, 28350 &lt;at&gt; debbugs.gnu.org
&gt; 
&gt; &gt;    (eval-after-load &quot;enriched&quot;
&gt; &gt;      &#39;(defun enriched-decode-display-prop (start end &amp;optional param)
&gt; &gt;         (list start end)))
&gt; &gt; 
&gt; &gt; But it may not work in Emacs earlier than 23 (I can&#39;t test it).
&gt; 
&gt; It should work, since eval-after-load predates Emacs 19.29.  Though it assumes 
&gt; that x-display is the only problem here.

x-display _is_ the only problem, because only it allows arbitrary Lisp
forms.



</pre>

<div class="infmessage"><hr>
<a name="52"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505139841 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Mon, 11 Sep 2017 14:24:01 GMT) <a href="bugreport.cgi?msg=53;bug=28350">Full text</a> and <a href="bugreport.cgi?bug=28350;mbox=yes;msg=53">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="54"></a><a name="msg54"></a><a href="#54">Message #54</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=54">full text</a>, <a href="bugreport.cgi?bug=28350;msg=54;mbox=yes">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>To:</b> eggert &lt;at&gt; cs.ucla.edu
<b>Cc:</b> larsi &lt;at&gt; gnus.org, charles &lt;at&gt; aurox.ch, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Mon, 11 Sep 2017 17:22:48 +0300
</pre>
<pre class="message">&gt; Date: Mon, 11 Sep 2017 05:39:27 +0300
&gt; From: Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
&gt; Cc: larsi &lt;at&gt; gnus.org, charles &lt;at&gt; aurox.ch, 28350 &lt;at&gt; debbugs.gnu.org
&gt; 
&gt; &gt; From: Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
&gt; &gt; Date: Sun, 10 Sep 2017 14:46:59 -0700
&gt; &gt; Cc: larsi &lt;at&gt; gnus.org, 28350 &lt;at&gt; debbugs.gnu.org
&gt; &gt; 
&gt; &gt; &gt;    (eval-after-load &quot;enriched&quot;
&gt; &gt; &gt;      &#39;(defun enriched-decode-display-prop (start end &amp;optional param)
&gt; &gt; &gt;         (list start end)))
&gt; &gt; &gt; 
&gt; &gt; &gt; But it may not work in Emacs earlier than 23 (I can&#39;t test it).
&gt; &gt; 
&gt; &gt; It should work, since eval-after-load predates Emacs 19.29.  Though it assumes 
&gt; &gt; that x-display is the only problem here.
&gt; 
&gt; x-display _is_ the only problem, because only it allows arbitrary Lisp
&gt; forms.

I eventually decided to provide a simpler patch, see below.  The
original changes unnecessarily removed the capability to encode
display properties while saving Enriched Mode text, something that
doesn&#39;t have any security issues (because the vulnerability is on the
receiving end).  I also prefer not to remove the offending code, but
instead to comment it out, as I believe this is more in the tradition
of Free Software to let people eyeball what we did.  Finally, I
rewrote the NEWS entry to be more accurate wrt the actual change.

Nicolas is working on the release as we speak, so if someone has
suggestions, or objections, or something else important to say about
the patch, please speak up.

I&#39;d like to take this opportunity to thank all those who worked and
continue working on fixing this vulnerability.


2017-09-11  Eli Zaretskii  &lt;eliz &lt;at&gt; gnu.org&gt;

	* etc/NEWS: Document the vulnerability and its resolution.
	Include a workaround.  Suggested by Charles A. Roelli
	&lt;charles &lt;at&gt; aurox.ch&gt;.

	* lisp/gnus/mm-view.el (mm-inline-text): Disable decoding of
	&quot;enriched&quot; and &quot;richtext&quot; MIME objects.  Suggested by Lars
	Ingebrigtsen &lt;larsi &lt;at&gt; gnus.org&gt;.

	* lisp/textmodes/enriched.el (enriched-decode-display-prop): Don&#39;t
	produce &#39;display&#39; properties.  (Bug#28350)


--- lisp/textmodes/enriched.el~0	2017-02-03 12:25:44.000000000 +0200
+++ lisp/textmodes/enriched.el	2017-09-11 17:31:35.943569900 +0300
@@ -503,6 +503,9 @@
 		  (error nil)))))
     (unless prop
       (message &quot;Warning: invalid &lt;x-display&gt; parameter %s&quot; param))
-    (list start end &#39;display prop)))
+    ;; Disabled in Emacs 25.3 to avoid execution of arbitrary Lisp
+    ;; forms in display properties stored within enriched text.
+    ;; (list start end &#39;display prop)))
+    (list start end)))
 
 ;;; enriched.el ends here


--- lisp/gnus/mm-view.el~0	2017-02-03 12:25:44.000000000 +0200
+++ lisp/gnus/mm-view.el	2017-09-11 16:56:58.804519400 +0300
@@ -383,10 +383,12 @@
 	(goto-char (point-max))))
     (save-restriction
       (narrow-to-region b (point))
-      (when (member type &#39;(&quot;enriched&quot; &quot;richtext&quot;))
-        (set-text-properties (point-min) (point-max) nil)
-	(ignore-errors
-	  (enriched-decode (point-min) (point-max))))
+      ;; Disabled in Emacs 25.3 to avoid execution of arbitrary Lisp
+      ;; forms in display properties supported by enriched.el.
+      ;; (when (member type &#39;(&quot;enriched&quot; &quot;richtext&quot;))
+      ;;   (set-text-properties (point-min) (point-max) nil)
+      ;; 	(ignore-errors
+      ;; 	  (enriched-decode (point-min) (point-max))))
       (mm-handle-set-undisplayer
        handle
        `(lambda ()


--- etc/NEWS~0	2017-02-21 11:08:27.000000000 +0200
+++ etc/NEWS	2017-09-11 17:21:06.994252400 +0300
@@ -16,6 +16,32 @@
 with a prefix argument or by typing C-u C-h C-n.
 
 
+* Changes in Emacs 25.3
+
+This is an emergency release to fix a security vulnerability in Emacs.
+
+** Security vulnerability related to Enriched Text mode is removed.
+
+*** Enriched Text mode has its support for decoding &#39;x-display&#39; disabled.
+This feature allows saving &#39;display&#39; properties as part of text.
+Emacs &#39;display&#39; properties support evaluation of arbitrary Lisp forms
+as part of instantiating the property, so decoding &#39;x-display&#39; is
+vulnerable to executing arbitrary malicious Lisp code included in the
+text (e.g., sent as part of an email message).
+
+This vulnerability was introduced in Emacs 19.29.  To work around that
+in Emacs versions before 25.3, append the following to your ~/.emacs
+init file:
+
+  (eval-after-load &quot;enriched&quot;
+    &#39;(defun enriched-decode-display-prop (start end &amp;optional param)
+       (list start end)))
+
+*** Gnus no longer supports &quot;richtext&quot; and &quot;enriched&quot; inline MIME objects.
+This support was disabled to avoid evaluation of arbitrary Lisp code
+contained in email messages and news articles.
+
+
 * Changes in Emacs 25.2
 
 This is mainly a bug-fix release, but there are some other changes.



</pre>

<div class="infmessage"><hr>
<a name="55"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505143142 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Mon, 11 Sep 2017 15:19:02 GMT) <a href="bugreport.cgi?bug=28350;msg=56">Full text</a> and <a href="bugreport.cgi?mbox=yes;msg=56;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="57"></a><a name="msg57"></a><a href="#57">Message #57</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?msg=57;bug=28350">full text</a>, <a href="bugreport.cgi?bug=28350;msg=57;mbox=yes">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>To:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>Cc:</b> larsi &lt;at&gt; gnus.org, eggert &lt;at&gt; cs.ucla.edu, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Mon, 11 Sep 2017 18:18:01 +0300
</pre>
<pre class="message">&gt; Date: Sun, 10 Sep 2017 20:54:13 +0200
&gt; From: charles &lt;at&gt; aurox.ch (Charles A. Roelli)
&gt; Cc: larsi &lt;at&gt; gnus.org, 28350 &lt;at&gt; debbugs.gnu.org
&gt; 
&gt; &gt; --- a/lisp/textmodes/enriched.el
&gt; &gt; +++ b/lisp/textmodes/enriched.el
&gt; &gt; @@ -117,12 +117,7 @@ expression, which is evaluated to get the string to insert.&quot;)
&gt; &gt;  		   (full        &quot;flushboth&quot;)
&gt; &gt;  		   (center      &quot;center&quot;))
&gt; &gt;      (PARAMETER     (t           &quot;param&quot;)) ; Argument of preceding annotation
&gt; &gt; -    ;; The following are not part of the standard:
&gt; &gt; -    (FUNCTION      (enriched-decode-foreground &quot;x-color&quot;)
&gt; &gt; -		   (enriched-decode-background &quot;x-bg-color&quot;)
&gt; 
&gt; Do we know that &quot;x-color&quot; and/or &quot;x-bg-color&quot; are vulnerable to a
&gt; similar misuse as &quot;x-display&quot;?

They are not.  They are converted to face properties, whose values
don&#39;t support Lisp evaluation.

&gt; &gt; +  (provide &#39;enriched)
&gt; &gt; +  (defun enriched-mode (&amp;optional arg))
&gt; &gt; +  (defun enriched-decode (from to))
&gt; 
&gt; This fix is very safe, at the cost of disabling Enriched mode.  Could
&gt; we do any better?  I had suggested the following (in
&gt; <a href="https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28350#16">https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28350#16</a>):
&gt; 
&gt;   (eval-after-load &quot;enriched&quot;
&gt;     &#39;(defun enriched-decode-display-prop (start end &amp;optional param)
&gt;        (list start end)))

You are right, and I therefore asked Nicolas to put that as a
workaround into NEWS of Emacs 25.3.

Anyway, I think I have a better idea for how to fix this on master.
And I&#39;m very sorry that this idea didn&#39;t come to me earlier, before
you invested all these efforts in your patch.  (I&#39;m also surprised
that no one here had beaten me up to this idea.)

Here&#39;s the idea: we introduce a new form of a display property:

  (&#39;disable-eval SPEC)

where SPEC is anything supported in a display property.  Then we
change the implementation of display property in xdisp.c such that
when the above form is seen, we disable Lisp evaluation while walking
SPEC and producing display from it in the display engine.  Such a
patch to xdisp.c appears below.  Then enriched.el will have to either
add disable-eval wrapper around any display property, or not add it if
the user customized enriched.el to enable such evaluation.

This has the advantage of allowing every possible value of display
properties that&#39;s safe, while positively disabling any Lisp evaluation
while we process such properties that came from enriched text.  So we
are free from the need to figure out which forms of a display spec can
or cannot invoke Lisp.

WDYT?

Here&#39;s the patch:

--- src/xdisp.c~2	2017-09-07 11:16:30.503455400 +0300
+++ src/xdisp.c	2017-09-11 17:29:00.507991400 +0300
@@ -876,9 +876,9 @@ static int face_before_or_after_it_pos (
 static ptrdiff_t next_overlay_change (ptrdiff_t);
 static int handle_display_spec (struct it *, Lisp_Object, Lisp_Object,
 				Lisp_Object, struct text_pos *, ptrdiff_t, bool);
-static int handle_single_display_spec (struct it *, Lisp_Object,
-                                       Lisp_Object, Lisp_Object,
-                                       struct text_pos *, ptrdiff_t, int, bool);
+static int handle_single_display_spec (struct it *, Lisp_Object, Lisp_Object,
+				       Lisp_Object, struct text_pos *,
+				       ptrdiff_t, int, bool, bool);
 static int underlying_face_id (struct it *);
 
 #define face_before_it_pos(IT) face_before_or_after_it_pos (IT, true)
@@ -4731,6 +4731,14 @@ handle_display_spec (struct it *it, Lisp
 		     ptrdiff_t bufpos, bool frame_window_p)
 {
   int replacing = 0;
+  bool enable_eval = true;
+
+  /* Support (disable-eval PROP) which is used by enriched.el.  */
+  if (CONSP (spec) &amp;&amp; EQ (XCAR (spec), Qdisable_eval))
+    {
+      enable_eval = false;
+      spec = XCAR (XCDR (spec));
+    }
 
   if (CONSP (spec)
       /* Simple specifications.  */
@@ -4754,7 +4762,8 @@ handle_display_spec (struct it *it, Lisp
 	{
 	  int rv = handle_single_display_spec (it, XCAR (spec), object,
 					       overlay, position, bufpos,
-					       replacing, frame_window_p);
+					       replacing, frame_window_p,
+					       enable_eval);
 	  if (rv != 0)
 	    {
 	      replacing = rv;
@@ -4772,7 +4781,8 @@ handle_display_spec (struct it *it, Lisp
 	{
 	  int rv = handle_single_display_spec (it, AREF (spec, i), object,
 					       overlay, position, bufpos,
-					       replacing, frame_window_p);
+					       replacing, frame_window_p,
+					       enable_eval);
 	  if (rv != 0)
 	    {
 	      replacing = rv;
@@ -4785,7 +4795,8 @@ handle_display_spec (struct it *it, Lisp
     }
   else
     replacing = handle_single_display_spec (it, spec, object, overlay, position,
-					    bufpos, 0, frame_window_p);
+					    bufpos, 0, frame_window_p,
+					    enable_eval);
   return replacing;
 }
 
@@ -4830,6 +4841,8 @@ display_prop_end (struct it *it, Lisp_Ob
    don&#39;t set up IT.  In that case, FRAME_WINDOW_P means SPEC
    is intended to be displayed in a window on a GUI frame.
 
+   Enable evaluation of Lisp forms only if ENABLE_EVAL_P is true.
+
    Value is non-zero if something was found which replaces the display
    of buffer or string text.  */
 
@@ -4837,7 +4850,7 @@ static int
 handle_single_display_spec (struct it *it, Lisp_Object spec, Lisp_Object object,
 			    Lisp_Object overlay, struct text_pos *position,
 			    ptrdiff_t bufpos, int display_replaced,
-			    bool frame_window_p)
+			    bool frame_window_p, bool enable_eval_p)
 {
   Lisp_Object form;
   Lisp_Object location, value;
@@ -4855,6 +4868,8 @@ handle_single_display_spec (struct it *i
       spec = XCDR (spec);
     }
 
+  if (!NILP (form) &amp;&amp; !EQ (form, Qt) &amp;&amp; !enable_eval_p)
+    form = Qnil;
   if (!NILP (form) &amp;&amp; !EQ (form, Qt))
     {
       ptrdiff_t count = SPECPDL_INDEX ();
@@ -4903,7 +4918,7 @@ handle_single_display_spec (struct it *i
 		    steps = - steps;
 		  it-&gt;face_id = smaller_face (it-&gt;f, it-&gt;face_id, steps);
 		}
-	      else if (FUNCTIONP (it-&gt;font_height))
+	      else if (FUNCTIONP (it-&gt;font_height) &amp;&amp; enable_eval_p)
 		{
 		  /* Call function with current height as argument.
 		     Value is the new height.  */
@@ -4924,7 +4939,7 @@ handle_single_display_spec (struct it *i
 		  new_height = (XFLOATINT (it-&gt;font_height)
 				* XINT (f-&gt;lface[LFACE_HEIGHT_INDEX]));
 		}
-	      else
+	      else if (enable_eval_p)
 		{
 		  /* Evaluate IT-&gt;font_height with `height&#39; bound to the
 		     current specified height to get the new height.  */
@@ -32164,6 +32179,10 @@ They are still logged to the *Messages* 
   DEFSYM (Qfontified, &quot;fontified&quot;);
   DEFSYM (Qfontification_functions, &quot;fontification-functions&quot;);
 
+  /* Name of the symbol which disables Lisp evaluation in &#39;display&#39;
+     properties.  This is used by enriched.el.  */
+  DEFSYM (Qdisable_eval, &quot;disable-eval&quot;);
+
   /* Name of the face used to highlight trailing whitespace.  */
   DEFSYM (Qtrailing_whitespace, &quot;trailing-whitespace&quot;);
 



</pre>

<div class="infmessage"><hr>
<a name="58"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505144042 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Mon, 11 Sep 2017 15:34:02 GMT) <a href="bugreport.cgi?bug=28350;msg=59">Full text</a> and <a href="bugreport.cgi?msg=59;mbox=yes;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="60"></a><a name="msg60"></a><a href="#60">Message #60</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?msg=60;bug=28350">full text</a>, <a href="bugreport.cgi?mbox=yes;msg=60;bug=28350">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;
<b>To:</b> Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
<b>Cc:</b> &quot;Charles A. Roelli&quot; &lt;charles &lt;at&gt; aurox.ch&gt;, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Mon, 11 Sep 2017 11:33:36 -0400
</pre>
<pre class="message">
I submitted this to <a href="https://github.com/distributedweaknessfiling/">https://github.com/distributedweaknessfiling/</a> .
I see you sent it to <a href="http://seclists.org/oss-sec/2017/q3/422">http://seclists.org/oss-sec/2017/q3/422</a> .
Are you sure this issue affects Emacs 19.29, as stated there?
The x-display code is &quot;only&quot; present since 21.1, AFAICS.



</pre>

<div class="infmessage"><hr>
<a name="61"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505147582 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Mon, 11 Sep 2017 16:33:02 GMT) <a href="bugreport.cgi?bug=28350;msg=62">Full text</a> and <a href="bugreport.cgi?bug=28350;mbox=yes;msg=62">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="63"></a><a name="msg63"></a><a href="#63">Message #63</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?msg=63;bug=28350">full text</a>, <a href="bugreport.cgi?mbox=yes;msg=63;bug=28350">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;
<b>To:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>Cc:</b> &quot;Charles A. Roelli&quot; &lt;charles &lt;at&gt; aurox.ch&gt;, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Mon, 11 Sep 2017 12:32:38 -0400
</pre>
<pre class="message">Eli Zaretskii wrote:

&gt;&gt; At this point it seems that unsafe display specs are more the
&gt;&gt; exception than the rule, so it might make sense to define the
&gt;&gt; `enriched-display-prop-safe-p&#39; function by excluding the unsafe
&gt;&gt; specifications instead of including the safe ones.  What do you
&gt;&gt; think?
&gt;
&gt; I&#39;m not sure.  The display spec can be complex, so to make sure none
&gt; of these exceptions sneak through, you will have to recursively unpack
&gt; the spec data structure and examine each of the elements, which smells
&gt; too similar to emulating &#39;eval&#39;.  No?

FWIW, there is &#39;unsafep&#39;.



</pre>

<div class="infmessage"><hr>
<a name="64"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505147941 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Mon, 11 Sep 2017 16:39:01 GMT) <a href="bugreport.cgi?msg=65;bug=28350">Full text</a> and <a href="bugreport.cgi?mbox=yes;msg=65;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="66"></a><a name="msg66"></a><a href="#66">Message #66</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=66">full text</a>, <a href="bugreport.cgi?bug=28350;msg=66;mbox=yes">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
<b>To:</b> Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;
<b>Cc:</b> &quot;Charles A. Roelli&quot; &lt;charles &lt;at&gt; aurox.ch&gt;, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Mon, 11 Sep 2017 09:38:14 -0700
</pre>
<pre class="message">On 09/11/2017 08:33 AM, Glenn Morris wrote:
&gt; I submitted this to<a href="https://github.com/distributedweaknessfiling/">https://github.com/distributedweaknessfiling/</a>  .
&gt; I see you sent it to<a href="http://seclists.org/oss-sec/2017/q3/422">http://seclists.org/oss-sec/2017/q3/422</a>  .

Yes, I sent it to the oss-security mailing list, and it is archived here:

<a href="http://www.openwall.com/lists/oss-security/2017/09/11/1">http://www.openwall.com/lists/oss-security/2017/09/11/1</a>

&gt; Are you sure this issue affects Emacs 19.29, as stated there?
&gt; The x-display code is &quot;only&quot; present since 21.1, AFAICS.

Thanks for checking. When I wrote that, I looked for any of the text 
involved in Lars&#39;s patch. If a smaller patch will do, that might explain 
why you&#39;re seeing 21.1 rather than 19.29. We can mention 21.1 instead of 
19.29 in the 25.3 release, and I&#39;ll update etc/NEWS accordingly in 
emacs-25 and master once that comes out.

These days almost nobody is running Emacs older than 21.1, so the exact 
version number shouldn&#39;t matter to anybody other than software 
archaeologists.




</pre>

<div class="infmessage"><hr>
<a name="67"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505149382 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Mon, 11 Sep 2017 17:03:02 GMT) <a href="bugreport.cgi?msg=68;bug=28350">Full text</a> and <a href="bugreport.cgi?mbox=yes;msg=68;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="69"></a><a name="msg69"></a><a href="#69">Message #69</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?msg=69;bug=28350">full text</a>, <a href="bugreport.cgi?bug=28350;msg=69;mbox=yes">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>To:</b> Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;
<b>Cc:</b> charles &lt;at&gt; aurox.ch, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Mon, 11 Sep 2017 20:01:43 +0300
</pre>
<pre class="message">&gt; From: Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;
&gt; Cc: charles &lt;at&gt; aurox.ch (Charles A. Roelli),  28350 &lt;at&gt; debbugs.gnu.org
&gt; Date: Mon, 11 Sep 2017 12:32:38 -0400
&gt; 
&gt; FWIW, there is &#39;unsafep&#39;.

Thanks.  Did that pass any audits from security experts?



</pre>

<div class="infmessage"><hr>
<a name="70"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505155501 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Mon, 11 Sep 2017 18:45:01 GMT) <a href="bugreport.cgi?bug=28350;msg=71">Full text</a> and <a href="bugreport.cgi?msg=71;mbox=yes;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="72"></a><a name="msg72"></a><a href="#72">Message #72</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?msg=72;bug=28350">full text</a>, <a href="bugreport.cgi?msg=72;mbox=yes;bug=28350">mbox</a>):</p>
<pre class="headers">
<b>From:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>To:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>Cc:</b> larsi &lt;at&gt; gnus.org, eggert &lt;at&gt; cs.ucla.edu, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Mon, 11 Sep 2017 20:44:19 +0200
</pre>
<pre class="message">&gt; Date: Mon, 11 Sep 2017 18:18:01 +0300
&gt; From: Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
&gt; 
&gt; Anyway, I think I have a better idea for how to fix this on master.
&gt; And I&#39;m very sorry that this idea didn&#39;t come to me earlier, before
&gt; you invested all these efforts in your patch.  (I&#39;m also surprised
&gt; that no one here had beaten me up to this idea.)
&gt; 
&gt; Here&#39;s the idea: we introduce a new form of a display property:
&gt; 
&gt;   (&#39;disable-eval SPEC)
&gt; 
&gt; where SPEC is anything supported in a display property.

Thanks for suggesting this; it&#39;s much cleaner than sanitizing the
display specification from Lisp.  Looks good to me.



</pre>

<div class="infmessage"><hr>
<a name="73"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505156942 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Mon, 11 Sep 2017 19:09:02 GMT) <a href="bugreport.cgi?msg=74;bug=28350">Full text</a> and <a href="bugreport.cgi?msg=74;mbox=yes;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="75"></a><a name="msg75"></a><a href="#75">Message #75</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=75">full text</a>, <a href="bugreport.cgi?bug=28350;mbox=yes;msg=75">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>To:</b> charles &lt;at&gt; aurox.ch (Charles A. Roelli)
<b>Cc:</b> larsi &lt;at&gt; gnus.org, eggert &lt;at&gt; cs.ucla.edu, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Mon, 11 Sep 2017 22:07:26 +0300
</pre>
<pre class="message">&gt; Date: Mon, 11 Sep 2017 20:44:19 +0200
&gt; From: charles &lt;at&gt; aurox.ch (Charles A. Roelli)
&gt; CC: eggert &lt;at&gt; cs.ucla.edu, larsi &lt;at&gt; gnus.org, 28350 &lt;at&gt; debbugs.gnu.org
&gt; 
&gt; &gt; Here&#39;s the idea: we introduce a new form of a display property:
&gt; &gt; 
&gt; &gt;   (&#39;disable-eval SPEC)
&gt; &gt; 
&gt; &gt; where SPEC is anything supported in a display property.
&gt; 
&gt; Thanks for suggesting this; it&#39;s much cleaner than sanitizing the
&gt; display specification from Lisp.  Looks good to me.

Thanks, I will wait for a few days before pushing.

Thanks again for all your work on this grave issue.



</pre>

<div class="infmessage"><hr>
<a name="76"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505164622 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Mon, 11 Sep 2017 21:17:02 GMT) <a href="bugreport.cgi?msg=77;bug=28350">Full text</a> and <a href="bugreport.cgi?bug=28350;msg=77;mbox=yes">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="78"></a><a name="msg78"></a><a href="#78">Message #78</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?msg=78;bug=28350">full text</a>, <a href="bugreport.cgi?msg=78;mbox=yes;bug=28350">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;
<b>To:</b> Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
<b>Cc:</b> &quot;Charles A. Roelli&quot; &lt;charles &lt;at&gt; aurox.ch&gt;, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Mon, 11 Sep 2017 17:16:11 -0400
</pre>
<pre class="message">Paul Eggert wrote:

&gt; We can mention 21.1 instead of 19.29 in the 25.3 release, and I&#39;ll
&gt; update etc/NEWS accordingly in emacs-25 and master once that comes
&gt; out.

Too late. :(


For the record:

commit d9e28c1
Date:   Wed Jul 21 21:43:03 1999 +0000

    (enriched-translations): Add `display&#39; and &quot;x-display&quot;.

git describe --contains --tags d9e28c1
emacs-pretest-21.0.90~7452

&gt; These days almost nobody is running Emacs older than 21.1, so the exact 
&gt; version number shouldn&#39;t matter to anybody other than software 
&gt; archaeologists.

Indeed not, but 19.29 v 21.1 is &quot;staggeringly bad&quot; v &quot;extremely bad&quot; for me.




</pre>

<div class="msgreceived"><hr>
<a name="79"></a>
<!-- command:fixed -->
<!-- requester: Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt; -->
<!-- request_addr: control &lt;at&gt; debbugs.gnu.org -->
<!-- time:1505164623 -->
<!-- new_data:
$new_data = {
              &#39;fixed_versions&#39; =&gt; [
                                    &#39;25.3&#39;
                                  ],
              &#39;found_versions&#39; =&gt; [
                                    &#39;25.1&#39;,
                                    &#39;23.1&#39;,
                                    &#39;21.4&#39;,
                                    &#39;23.2&#39;,
                                    &#39;21.2&#39;,
                                    &#39;22.3&#39;,
                                    &#39;24.3&#39;,
                                    &#39;21.1&#39;,
                                    &#39;21.3&#39;,
                                    &#39;24.1&#39;,
                                    &#39;24.5&#39;,
                                    &#39;25.2&#39;,
                                    &#39;24.2&#39;,
                                    &#39;23.4&#39;,
                                    &#39;22.1&#39;,
                                    &#39;23.3&#39;,
                                    &#39;24.4&#39;,
                                    &#39;22.2&#39;
                                  ]
            };
-->
<!-- old_data:
$old_data = {
              &#39;fixed_versions&#39; =&gt; [],
              &#39;found_versions&#39; =&gt; [
                                    &#39;25.2&#39;,
                                    &#39;25.1&#39;,
                                    &#39;24.5&#39;,
                                    &#39;24.4&#39;,
                                    &#39;24.3&#39;,
                                    &#39;24.2&#39;,
                                    &#39;24.1&#39;,
                                    &#39;23.4&#39;,
                                    &#39;23.3&#39;,
                                    &#39;23.2&#39;,
                                    &#39;23.1&#39;,
                                    &#39;22.3&#39;,
                                    &#39;22.2&#39;,
                                    &#39;22.1&#39;,
                                    &#39;21.4&#39;,
                                    &#39;21.3&#39;,
                                    &#39;21.2&#39;,
                                    &#39;21.1&#39;
                                  ]
            };
-->
<strong>bug Marked as fixed in versions 25.3.</strong>
Request was from <code>Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;</code>
to <code>control &lt;at&gt; debbugs.gnu.org</code>.
 (Mon, 11 Sep 2017 21:17:03 GMT) <a href="bugreport.cgi?bug=28350;msg=80">Full text</a> and <a href="bugreport.cgi?mbox=yes;msg=80;bug=28350">rfc822 format</a> available.</div>

<div class="infmessage"><hr>
<a name="81"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505246402 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Tue, 12 Sep 2017 20:00:02 GMT) <a href="bugreport.cgi?bug=28350;msg=82">Full text</a> and <a href="bugreport.cgi?bug=28350;mbox=yes;msg=82">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="83"></a><a name="msg83"></a><a href="#83">Message #83</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=83">full text</a>, <a href="bugreport.cgi?bug=28350;msg=83;mbox=yes">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Paul Eggert &lt;eggert &lt;at&gt; cs.ucla.edu&gt;
<b>To:</b> Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;
<b>Cc:</b> &quot;Charles A. Roelli&quot; &lt;charles &lt;at&gt; aurox.ch&gt;, 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Tue, 12 Sep 2017 12:59:13 -0700
</pre>
<pre class="message">On 09/11/2017 02:16 PM, Glenn Morris wrote:
&gt; Too late. :(

Yes, that horse left the barn. To close the barn door, I changed 
emacs-25&#39;s etc/NEWS (and master&#39;s etc/NEWS.25) to say &quot;21.1&quot; rather than 
&quot;19.29&quot; for when the bug was introduced, so that we look just &quot;extremely 
bad&quot; rather than &quot;staggeringly bad&quot; in the latest source code.



</pre>

<div class="infmessage"><hr>
<a name="84"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505410322 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Thu, 14 Sep 2017 17:32:02 GMT) <a href="bugreport.cgi?msg=85;bug=28350">Full text</a> and <a href="bugreport.cgi?bug=28350;msg=85;mbox=yes">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="86"></a><a name="msg86"></a><a href="#86">Message #86</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=86">full text</a>, <a href="bugreport.cgi?bug=28350;mbox=yes;msg=86">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Salvatore Bonaccorso &lt;carnil &lt;at&gt; debian.org&gt;
<b>To:</b> oss-security &lt;at&gt; lists.openwall.com
<b>Subject:</b> Re: [oss-security] GNU Emacs 25.2 enriched text remote code execution
<b>Date:</b> Thu, 14 Sep 2017 19:21:40 +0200
</pre>
<pre class="message">Hi

On Tue, Sep 12, 2017 at 07:22:51AM +0200, Salvatore Bonaccorso wrote:
&gt; Hi
&gt; 
&gt; On Mon, Sep 11, 2017 at 08:58:57PM +0200, Salvatore Bonaccorso wrote:
&gt; &gt; Hi Paul,
&gt; &gt; 
&gt; &gt; On Sun, Sep 10, 2017 at 11:56:20PM -0700, Paul Eggert wrote:
&gt; &gt; &gt; GNU Emacs is an extensible, customizable, free/libre text editor and
&gt; &gt; &gt; software environment.  When Emacs renders MIME text/enriched data (Internet
&gt; &gt; &gt; RFC 1896), it is vulnerable to arbitrary code execution. Since Emacs-based
&gt; &gt; &gt; mail clients decode &quot;Content-Type: text/enriched&quot;, this code is exploitable
&gt; &gt; &gt; remotely. This bug affects GNU Emacs versions 19.29 through 25.2.
&gt; &gt; &gt; 
&gt; &gt; &gt; Although we know no efforts to exploit this in the wild, exploitation is easy.
&gt; &gt; [...]
&gt; &gt; &gt; == Timeline ==
&gt; &gt; &gt; 
&gt; &gt; &gt; 2017-09-04. Bug reported to the Emacs bug tracker by Charles A. Roelli.
&gt; &gt; &gt; 
&gt; &gt; &gt; 2017-09-07. POC for remote code execution sent to the maintainers of Emacs
&gt; &gt; &gt; and Gnus (Reiner Steib &lt;Reiner.Steib &lt;at&gt; gmx.de&gt;, private mail).
&gt; &gt; &gt; 
&gt; &gt; &gt; 2017-09-08. Patch (by Lars Ingebrigtsen &lt;larsi &lt;at&gt; gnus.org&gt;) to disable the
&gt; &gt; &gt; problematic code and mitigation (private mail).
&gt; &gt; &gt; 
&gt; &gt; &gt; 2017-09-09. Patch committed in main development repository.
&gt; &gt; 
&gt; &gt; Have you requested a CVE for this issue?
&gt; 
&gt; FTR, it seems this was submitted to DWF already as per:
&gt; <a href="https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28350#63">https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28350#63</a>

CVE-2017-14482 was assigned for this issue.

Regards,
Salvatore



</pre>

<div class="msgreceived"><hr>
<a name="87"></a>
<!-- command:title -->
<!-- requester: Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt; -->
<!-- request_addr: control &lt;at&gt; debbugs.gnu.org -->
<!-- time:1505410501 -->
<!-- new_data:
$new_data = {
              &#39;subject&#39; =&gt; &#39;CVE-2017-14482: enriched.el code execution&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;subject&#39; =&gt; &#39;enriched.el code execution&#39;
            };
-->
<strong>Changed bug title to &#39;CVE-2017-14482: enriched.el code execution&#39; from &#39;enriched.el code execution&#39;</strong>
Request was from <code>Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;</code>
to <code>control &lt;at&gt; debbugs.gnu.org</code>.
 (Thu, 14 Sep 2017 17:35:01 GMT) <a href="bugreport.cgi?msg=88;bug=28350">Full text</a> and <a href="bugreport.cgi?msg=88;mbox=yes;bug=28350">rfc822 format</a> available.</div>

<div class="infmessage"><hr>
<a name="89"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505411041 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Thu, 14 Sep 2017 17:44:01 GMT) <a href="bugreport.cgi?msg=90;bug=28350">Full text</a> and <a href="bugreport.cgi?msg=90;mbox=yes;bug=28350">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="91"></a><a name="msg91"></a><a href="#91">Message #91</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=91">full text</a>, <a href="bugreport.cgi?bug=28350;msg=91;mbox=yes">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;
<b>To:</b> Salvatore Bonaccorso &lt;carnil &lt;at&gt; debian.org&gt;
<b>Cc:</b> 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: [oss-security] GNU Emacs 25.2 enriched text remote
 code execution
<b>Date:</b> Thu, 14 Sep 2017 13:43:02 -0400
</pre>
<pre class="message">Salvatore Bonaccorso wrote:

&gt;&gt; FTR, it seems this was submitted to DWF already as per:
&gt;&gt; <a href="https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28350#63">https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28350#63</a>
&gt;
&gt; CVE-2017-14482 was assigned for this issue.

Thanks. Do I need to cancel or update the DWF submission (if so, how)?



</pre>

<div class="infmessage"><hr>
<a name="92"></a>
<!-- request_addr: bug-gnu-emacs &lt;at&gt; gnu.org -->
<!-- time:1505418901 -->
<strong>Information forwarded</strong>
to <code>bug-gnu-emacs &lt;at&gt; gnu.org</code>:<br>
<code>bug#28350</code>; Package <code>emacs</code>.
 (Thu, 14 Sep 2017 19:55:01 GMT) <a href="bugreport.cgi?msg=93;bug=28350">Full text</a> and <a href="bugreport.cgi?bug=28350;mbox=yes;msg=93">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="94"></a><a name="msg94"></a><a href="#94">Message #94</a> received at 28350 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=28350;msg=94">full text</a>, <a href="bugreport.cgi?msg=94;mbox=yes;bug=28350">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Salvatore Bonaccorso &lt;carnil &lt;at&gt; debian.org&gt;
<b>To:</b> Glenn Morris &lt;rgm &lt;at&gt; gnu.org&gt;
<b>Cc:</b> 28350 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: [oss-security] GNU Emacs 25.2 enriched text remote
 code execution
<b>Date:</b> Thu, 14 Sep 2017 21:54:21 +0200
</pre>
<pre class="message">Hi Glenn,

On Thu, Sep 14, 2017 at 01:43:02PM -0400, Glenn Morris wrote:
&gt; Salvatore Bonaccorso wrote:
&gt; 
&gt; &gt;&gt; FTR, it seems this was submitted to DWF already as per:
&gt; &gt;&gt; <a href="https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28350#63">https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28350#63</a>
&gt; &gt;
&gt; &gt; CVE-2017-14482 was assigned for this issue.
&gt; 
&gt; Thanks. Do I need to cancel or update the DWF submission (if so, how)?

There is nothing further needed. The DWF has cancelled the request.



</pre>

<div class="infmessage"><hr>
<a name="95"></a>
<!-- request_addr: Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt; -->
<!-- time:1505555402 -->
<strong>Reply sent</strong>
to <code>Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;</code>:<br>
You have taken responsibility.
 (Sat, 16 Sep 2017 09:50:02 GMT) <a href="bugreport.cgi?msg=96;bug=28350">Full text</a> and <a href="bugreport.cgi?bug=28350;msg=96;mbox=yes">rfc822 format</a> available.</div>

<div class="infmessage"><hr>
<a name="97"></a>
<!-- request_addr: charles &lt;at&gt; aurox.ch (Charles A. Roelli) -->
<!-- time:1505555402 -->
<strong>Notification sent</strong>
to <code>charles &lt;at&gt; aurox.ch (Charles A. Roelli)</code>:<br>
bug acknowledged by developer.
 (Sat, 16 Sep 2017 09:50:02 GMT) <a href="bugreport.cgi?bug=28350;msg=98">Full text</a> and <a href="bugreport.cgi?bug=28350;mbox=yes;msg=98">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="99"></a><a name="msg99"></a><a href="#99">Message #99</a> received at 28350-done &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?msg=99;bug=28350">full text</a>, <a href="bugreport.cgi?bug=28350;mbox=yes;msg=99">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
<b>To:</b> charles &lt;at&gt; aurox.ch, larsi &lt;at&gt; gnus.org
<b>Cc:</b> eggert &lt;at&gt; cs.ucla.edu, 28350-done &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#28350: enriched.el code execution
<b>Date:</b> Sat, 16 Sep 2017 12:48:58 +0300
</pre>
<pre class="message">&gt; Date: Mon, 11 Sep 2017 22:07:26 +0300
&gt; From: Eli Zaretskii &lt;eliz &lt;at&gt; gnu.org&gt;
&gt; Cc: larsi &lt;at&gt; gnus.org, eggert &lt;at&gt; cs.ucla.edu, 28350 &lt;at&gt; debbugs.gnu.org
&gt; 
&gt; &gt; Date: Mon, 11 Sep 2017 20:44:19 +0200
&gt; &gt; From: charles &lt;at&gt; aurox.ch (Charles A. Roelli)
&gt; &gt; CC: eggert &lt;at&gt; cs.ucla.edu, larsi &lt;at&gt; gnus.org, 28350 &lt;at&gt; debbugs.gnu.org
&gt; &gt; 
&gt; &gt; &gt; Here&#39;s the idea: we introduce a new form of a display property:
&gt; &gt; &gt; 
&gt; &gt; &gt;   (&#39;disable-eval SPEC)
&gt; &gt; &gt; 
&gt; &gt; &gt; where SPEC is anything supported in a display property.
&gt; &gt; 
&gt; &gt; Thanks for suggesting this; it&#39;s much cleaner than sanitizing the
&gt; &gt; display specification from Lisp.  Looks good to me.
&gt; 
&gt; Thanks, I will wait for a few days before pushing.

Done.

Lars, I re-enabled support for enriched text in Gnus, as the
vulnerability is now removed.  Feel free to disable it again, if you
don&#39;t want Gnus users to be able to display enriched text, ever.

I&#39;m marking the bug done.



</pre>

<div class="msgreceived"><hr>
<a name="100"></a>
<!-- command:archive -->
<!-- requester: Debbugs Internal Request &lt;help-debbugs &lt;at&gt; gnu.org&gt; -->
<!-- request_addr: internal_control &lt;at&gt; debbugs.gnu.org -->
<!-- time:1507980244 -->
<!-- new_data:
$new_data = {};
-->
<!-- old_data:
$old_data = {};
-->
<strong>bug archived.</strong>
Request was from <code>Debbugs Internal Request &lt;help-debbugs &lt;at&gt; gnu.org&gt;</code>
to <code>internal_control &lt;at&gt; debbugs.gnu.org</code>.
 (Sat, 14 Oct 2017 11:24:04 GMT) <a href="bugreport.cgi?bug=28350;msg=101">Full text</a> and <a href="bugreport.cgi?bug=28350;msg=101;mbox=yes">rfc822 format</a> available.</div>

<hr>
<div class="msgreceived">This bug report was last modified 4 years and 17 days ago.</div>

<hr>
<p><a href="bugreport.cgi?bug=28349">Previous</a> <a href="bugreport.cgi?bug=28351">Next</a></p>
<!--
<p class="msgreceived">Send a report that <a href="//debbugs.gnu.org/cgi/bugspam.cgi">this bug log contains spam</a>.</p> -->
<hr>
<P>
<A HREF="//debbugs.gnu.org/">GNU bug tracking system</A><BR>
Copyright (C) 1999 Darren O. Benham,
1997,2003 nCipher Corporation Ltd,
1994-97 Ian Jackson.
</ADDRESS>

</body>
</html>
