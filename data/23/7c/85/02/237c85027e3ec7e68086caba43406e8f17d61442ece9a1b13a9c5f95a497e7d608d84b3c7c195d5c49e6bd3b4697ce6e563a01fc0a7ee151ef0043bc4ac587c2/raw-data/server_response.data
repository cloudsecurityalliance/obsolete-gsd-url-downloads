<!DOCTYPE html>
<html lang="en">
  <head>
    <title>404698 &ndash; Decryption Oracle based on replying to PGP or S/MIME encrypted emails</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="data/assets/23ebf435e712b8c1688f186151fcc60c.css?1626941475" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1626941475"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 5
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "404698 – Decryption Oracle based on replying to PGP or S\/MIME encrypted emails",
                             "show_bug.cgi?id=404698" );
        document.title = "404698 – Decryption Oracle based on replying to PGP or S\/MIME encrypted emails";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "404698 – Decryption Oracle based on replying to PGP or S\/MIME encrypted emails", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1626941475"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="KDE Bugtracking System" href="./search_plugin.cgi">
    <link rel="apple-touch-icon" sizes="180x180" href="https://kde.org/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="https://kde.org/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="https://kde.org/favicon-16x16.png">
    <link rel="mask-icon" href="https://kde.org/safari-pinned-tab.svg" color="#1f99f3">
  </head>

  <body 
        class="bugs-kde-org
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_kmail2
                 bz_component_crypto
                 bz_bug_404698 yui-skin-sam">

  <div id="header"><div id="banner">
  </div>

    <div id="titles">
      <span id="title">KDE Bugtracking System &ndash; Bug&nbsp;404698</span>

        <span id="subtitle" class="subheader">Decryption Oracle based on replying to PGP or S/MIME encrypted emails</span>

        <span id="information" class="header_addl_info">Last modified: 2019-07-31 02:15:35 UTC</span>
    </div>


    <div id="common_links"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li>
      <span class="separator">| </span>
        <a href="request.cgi">Requests</a></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    
      <li id="new_account_container_top">
        <span class="separator">| </span>
        <a href="createaccount.cgi">New&nbsp;Account</a>
      </li>

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=404698&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=404698" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=404698&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635619445-6hZDgVDGg4LpqSQa3JMtENEi7tpxh0TkwiQVUQSCQzE">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2019-07-31 02:15:35">
  <input type="hidden" name="id" value="404698">
  <input type="hidden" name="token" value="1635619445-SaF1UiOYi9tXJZm8YS-R7U7n69tHSA09_JIVFdLRbN4">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=404698"><b>Bug&nbsp;404698</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">Decryption Oracle based on replying to PGP or S/MIME encrypted emails</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>Decryption Oracle based on replying to PGP or S/MIME encrypted emails
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'Decryption Oracle based on replying to PGP or S\/MIME encrypted emails' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >kmail2

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=kmail2"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >crypto

  (<a href="buglist.cgi?component=crypto&amp;product=kmail2&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>unspecified
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Platform:</a>

</th>
      <td class="field_value">Debian stable
        Linux
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>NOR
       normal<span id="votes_container">
    (<a href="page.cgi?id=voting/user.html&amp;bug_id=404698#vote_404698">vote</a>)
  </span>
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">kdepim bugs</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'kdepim-bugs\x40kde.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>


    <tr><th class="field_label "
    id="field_label_keywords">


  <a 
      title="You can add keywords from a defined list to bugs, in order to easily identify and group them."
      class="field_help_link"
      href="describekeywords.cgi"
  >Keywords:</a>

</th>
  <td class="field_value "
      id="field_container_keywords" >

</td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2019-02-22 12:52 UTC by <span class="vcard"><span class="fn">Jens Mueller</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2019-07-31 02:15 UTC
      (<a href="show_activity.cgi?id=404698">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>11 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="aacid">aacid</option>
                <option value="asturm">asturm</option>
                <option value="beuc">beuc</option>
                <option value="dvratil">dvratil</option>
                <option value="faure">faure</option>
                <option value="kensington">kensington</option>
                <option value="montel">montel</option>
                <option value="nate">nate</option>
                <option value="null+samzain">null+samzain</option>
                <option value="rdieter">rdieter</option>
                <option value="sknauss">sknauss</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr> 
<tr>
      <th class="field_label "
    id="field_label_cf_commitlink">


  <a 
      title="A custom Free Text field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_commitlink"
  >Latest Commit:</a>

</th>
  <td class="field_value "
      id="field_container_cf_commitlink" >https://commits.kde.org/messagelib/ac360b3a57eacbf0542ed0800e6054db76f01398

</td>
    </tr>
    <tr>
      <th class="field_label "
    id="field_label_cf_versionfixedin">


  <a 
      title="A custom Free Text field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_versionfixedin"
  >Version Fixed In:</a>

</th>
  <td class="field_value "
      id="field_container_cf_versionfixedin" >5.11.2

</td>
    </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_message_rfc822">
        <td>
            <a href="attachment.cgi?id=118288"
               title="View the content of the attachment">
          <b>Proof-of-concept PGP</b></a>

          <span class="bz_attach_extra_info">
              (1.95 KB,
                message/rfc822)

            <br>
            <a href="#attach_118288"
               title="Go to the comment associated with the attachment">2019-02-22 12:52 UTC</a>,

            <span class="vcard"><span class="fn">Jens Mueller</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=118288&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_message_rfc822">
        <td>
            <a href="attachment.cgi?id=118289"
               title="View the content of the attachment">
          <b>Proof-of-concept S/MIME</b></a>

          <span class="bz_attach_extra_info">
              (1.56 KB,
                message/rfc822)

            <br>
            <a href="#attach_118289"
               title="Go to the comment associated with the attachment">2019-02-22 12:52 UTC</a>,

            <span class="vcard"><span class="fn">Jens Mueller</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=118289&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a3" class="bz_contenttype_application_mbox">
        <td>
            <a href="attachment.cgi?id=120026"
               title="View the content of the attachment">
          <b>html mail with two images embeded.</b></a>

          <span class="bz_attach_extra_info">
              (859 bytes,
                application/mbox)

            <br>
            <a href="#attach_120026"
               title="Go to the comment associated with the attachment">2019-05-12 22:10 UTC</a>,

            <span class="vcard"><span class="fn">Sandro Knauß</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=120026&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
            <a id="view_all" href="attachment.cgi?bugid=404698&amp;action=viewall">View All</a>
        </span>
        <a href="attachment.cgi?bugid=404698&amp;action=enter">Add an attachment</a>
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=404698&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1477425084" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jens Mueller</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-22 12:52:18 UTC
        </span>

      </div>




<pre class="bz_comment_text">In the scope of academic research in cooperation with Ruhr-Uni Bochum and FH Münster, Germany we discovered a security issue in KMail: An attacker who is in possession of PGP or S/MIME encrypted messages can embed them into a multipart message and re-send them to the intended receiver. When the message is read and decrypted by the receiver, the attacker's content is shown. If the victim replies, the plaintext is leaked to an attacker's email address. The root cause for these vulnerabilities lies in the way KMail (and many other mail clients) handle partially encrypted multipart messages.

-----------------------------------------
*Leaking plaintext through reply/forward*
-----------------------------------------

/Attacker model/: Attacker is in possession of PGP or S/MIME encrypted messages, which she may have obtained as passive man-in-the-middle or by actively hacking into the victim's mail server or gateway

/Attacker's goal/: Leak the plaintext by wrapping the ciphertext part within a benign-looking MIME mail sent to and decrypted+replied to by the victim

/Attack outline:/ If KMail receives a multipart email, as depicted below, it decrypt the ciphertext part(s), together with the attacker-controlled text (which may be prepended and/or appended).

multipart/mixed
   |--- Attacker's part
   |--- [encrypted part to leak]
   +--- [Attacker's encrypted part]

A benign-looking attacker's text may lure the victim into replying. Because the decrypted part is also quoted in the reply, the user unintentionally acts as a decryption oracle. To obfuscate the existence of the encrypted part(s), the attacker may add a lot of newlines or hide it within a long conversation history. A user replying to such a ‘mixed content’ conversation thereby leaks the plaintext of encrypted messages wrapped within attacker-controlled text.

Please find attached a raw .eml file which depicts the issue.

---------------
Countermeasures
---------------

Do not decrypt emails unless the PGP or S/MIME encrypted part is the root node -- and therefore the only part -- in the MIME tree (exception: multipart/signed for encrypted-then-signed S/MIME messages). Another, potentially less secure, option would be to quote only the very first MIME part in replies.</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jens Mueller</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-22 12:52:40 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=118288" name="attach_118288" title="Proof-of-concept PGP">attachment 118288</a> <a href="attachment.cgi?id=118288&amp;action=edit" title="Proof-of-concept PGP">[details]</a></span>
Proof-of-concept PGP</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jens Mueller</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-22 12:52:53 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=118289" name="attach_118289" title="Proof-of-concept S/MIME">attachment 118289</a> <a href="attachment.cgi?id=118289&amp;action=edit" title="Proof-of-concept S/MIME">[details]</a></span>
Proof-of-concept S/MIME</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Daniel Vrátil</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-08 16:55:35 UTC
        </span>

      </div>




<pre class="bz_comment_text">In KMail this attack requires that user would enable &quot;Automatic decryption of encrypted messages when viewing&quot; option in KMail settings, which is disabled by default.

Without this option enabled the user has to click on &quot;Decrypt&quot; on the part that the attacker wants to leak. At this point, the user will still clearly see which part of the content was encrypted and which part was not. When the user wants to reply to this decrypted message, the content would indeed get leaked to the attacker. However, I believe that at this point KMail has done enough to prevent (by not enabling auto-decryption by default) and warn (by clearly showing which part is encrypted and which not) the user so he or she could judge for themselves the potential risks when replying to the message.</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jens Mueller</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-09 15:41:27 UTC
        </span>

      </div>




<pre class="bz_comment_text">Things may have changed in the meantime, but for the version we tested (v5.2.3), there is no need to click on &quot;Decrypt Message&quot;. While the plaintext is not shown to the user, if he does not explicitly click &quot;Decrypt Message&quot;, the plaintext is still included in replies -- just re-tested for S/MIME and PGP/MIME. Note that KMail was tested in the default settings (the option &quot;Attempt decryption of encrypted messages when viewing&quot; was *not* set).</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sandro Knauß</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-09 20:54:50 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Daniel Vrátil from <a href="show_bug.cgi?id=404698#c3">comment #3</a>)
<span class="quote">&gt; In KMail this attack requires that user would enable &quot;Automatic decryption
&gt; of encrypted messages when viewing&quot; option in KMail settings, which is
&gt; disabled by default.</span >

As Jens already explained, this setting does not help here. This Setting only do not trigger decryption directly when you view the mail. But if you reply the mail is decrypted in anycase. And we use the same code paths for rendering the view and prepare the reply/forward.</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Albert Astals Cid</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-13 10:39:21 UTC
        </span>

      </div>




<pre class="bz_comment_text">I am not sure I understand where the problem is, potentially means you need to explain it in simpler words (or that i need to learn how to read long sentences :D)

Is this problem?
 * A sends encrypted email to B
 * C intercepts that email
 * C resends the email modified to B (adding his own reply address and some plain text)
 * B answers to C
 * C can see the original email</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jens Mueller</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-13 12:29:02 UTC
        </span>

      </div>




<pre class="bz_comment_text">Exactly that's the problem. Note that not only one message, but hundreds of captured messages can be wrapped and leaked with one single reply.

Traditional message takeover attacks under a new identity (C) are considered as an acceptable risk in email e2e encryption because it is assumed that given the context of the message (e.g.,“Hi A, [...] Yours, B”) B can tell that this message is not originally from C and could easily discover the deception. However, using MIME wrapping, C can make a different content being displayed to B (if B does not carefully scroll down the whole message conversation) and therefore potentially trick B into replying to C.</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Albert Astals Cid</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-15 21:36:49 UTC
        </span>

      </div>




<pre class="bz_comment_text">Right i can see the problem.

Question is, are those kind of messages that you are suggesting to stop supporting &quot;common&quot; or even is there a reason for someone to be sending messages like that?

Or if you get a message like this it's most probably someone trying to trick you?

Because if those messages are common, stopping to work on them is going to be a pain for the people that have a valid usecase.</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jens Mueller</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-16 09:06:50 UTC
        </span>

      </div>




<pre class="bz_comment_text">Imho, there are no legitimate use cases for `partial encryption` in S/MIME and PGP/MIME, but it's hard to measure if such emails do exist in the wild. In case of PGP/Inline, unfortunately, every part is encrypted separately. Note that a captured PGP/MIME message can be `downgraded` to be interpreted in the context of PGP/INLINE.</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jens Mueller</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-18 13:30:36 UTC
        </span>

      </div>




<pre class="bz_comment_text">Update: Here's a full (public) report on the issue:
<a href="https://arxiv.org/ftp/arxiv/papers/1904/1904.07550.pdf">https://arxiv.org/ftp/arxiv/papers/1904/1904.07550.pdf</a>

For KMail, CVE-2019-10732 was assigned for reply-based `decryption oracles`.</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">David Faure</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-21 17:14:23 UTC
        </span>

      </div>




<pre class="bz_comment_text">Interesting problem. Here's my feedback.

- Preventing KMail from *sending* such messages would obviously be no help (one could just craft that message by hand or using another email client). 

- Preventing the user from replying to such a message would be very weird user experience (sorry, you are not allowed to reply to this message!)

- So I guess the best solution is that when replying, we don't decrypt parts that were encrypted in the original message. I.e. if we are replying with a copy of those parts, and they were encrypted, they should be copied &quot;as is&quot;. This would prevent any newly-added recipient from reading those, but that's fair enough I would say.
I wouldn't really know how to implement this though.
Might be tricky if the tree in memory only has the decrypted version.

- Alternatively, KMail could say &quot;for security reasons, these parts are going to be removed from your reply&quot;. But this also requires that we somehow know that these parts used to be encrypted in the original email.</pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">David Faure</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-22 09:31:07 UTC
        </span>

      </div>




<pre class="bz_comment_text">About the original suggestion: &quot;Do not decrypt emails unless the PGP or S/MIME encrypted part is the root node -- and therefore the only part -- in the MIME tree (exception: multipart/signed for encrypted-then-signed S/MIME messages).&quot;

This would mean if you attach a non-encrypted image (say, company logo) to an encrypted email, the recipient can't reply to the email anymore? I think we always want to decrypt the main text part? (fuzzy term, I don't know what the actual logic is in kmail, but I mean the text that gets quoted).</pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sandro Knauß</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-22 21:21:16 UTC
        </span>

      </div>




<pre class="bz_comment_text">&#64;Jens: what version did you test? You set &quot;Debian Stable&quot; and &quot;5.10.3&quot; this does not match. Debian stable has 16.04.3 aka 5.2.3. 

I now started to look into the issue, but I can't reproduce it with the attached messages for 18.08.3 nor for master. At least for the encrypted content to be simple text. Do I need to construct a mimetree inside the encrypted message parts?
And this make totally sense, as we have already have the concept of firstTextNode inside ObjectTreeParser, that takes effect here.

I added the proof-of-concept mails to our autotests: 
  <a href="https://phabricator.kde.org/D20757">https://phabricator.kde.org/D20757</a>
the plain.reply files are the output of the reply window.

For those you have a test environment for messagelib, those can view such mails and reply/forward:

GNUPGHOME=&lt;buildpath of messagelib&gt;/messagecore/autotests/gnupg_home/ kmail --view 404698-gpg.mbox

A short explanation, how a reply/forward is created (everything in messagelib):
* templateparser/src/templateparserjob constructs a new KMime::Message mMsg from a given mOrigMsg.
* TemplateParserJob uses MimeTreeParser::ObjectTreeParser to get htmlContent/plainTextContent. At least for plainTextContent it is easy to follow, that only the content from first text node is used. For htmlContent it looks, like we merge different htmlNodes via messagepart.cpp:HtmlMessagePart::fix()</pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sandro Knauß</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-22 21:44:01 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to David Faure from <a href="show_bug.cgi?id=404698#c11">comment #11</a>)
<span class="quote">&gt; - Preventing KMail from *sending* such messages would obviously be no help
&gt; (one could just craft that message by hand or using another email client). </span >

ACK.

<span class="quote">&gt; - Preventing the user from replying to such a message would be very weird
&gt; user experience (sorry, you are not allowed to reply to this message!)</span >

jepp bad UX.

<span class="quote">&gt; - So I guess the best solution is that when replying, we don't decrypt parts
&gt; that were encrypted in the original message. I.e. if we are replying with a
&gt; copy of those parts, and they were encrypted, they should be copied &quot;as is&quot;.
&gt; This would prevent any newly-added recipient from reading those, but that's
&gt; fair enough I would say.
&gt; I wouldn't really know how to implement this though.
&gt; Might be tricky if the tree in memory only has the decrypted version.</span >
&gt;
<span class="quote">&gt; - Alternatively, KMail could say &quot;for security reasons, these parts are
&gt; going to be removed from your reply&quot;. But this also requires that we somehow
&gt; know that these parts used to be encrypted in the original email.</span >

Both things are not that hard to solve. We have MimeTreeParser::ObjecttreeParser that returns a MessagePart tree. This is a tree, where only visual interesting nodes of the Mime messages with the additional information of each node, about their encrypted status, used keys etc... To get an idea about those trees look at mimetreeparser/autotests/data/*tree files, these are the MessagePart tree for the corresponding mbox. Also TemplateParser, that is responsible for creating a reply/template, uses MimeTreeParser::ObjecttreeParser, so we are able to filter out bad nodes.</pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jens Mueller</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-26 10:09:00 UTC
        </span>

      </div>




<pre class="bz_comment_text">&#64;David: This would mean if you attach a non-encrypted image to an encrypted...

Absolutely, such an email could not be decrypted anymore if you follow our suggestions (or had to be manually decrypted on the command line). While this may seem a bit harsh, we have not seen any mail client that allows to send such &quot;partially encrypted&quot; emails (e.g., with unencrypted attachments), and I think handling such edge cases can become a security nightmare. Either the whole mail is encrypted or it's not, everything else gives a false sense of security, imho.

However, I see the developer's perspective and the and the fear of potentially breaking things, too. I guess a rule like &quot;in case of an encrypted, multipart email, reply only with the first part&quot; *should* be fine too.

&#64;Sandro: We originally tested in version 5.2.3 on Debian 9.8 (stretch). This version is probably outdated by now.</pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sandro Knauß</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-26 11:00:21 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Jens Mueller from <a href="show_bug.cgi?id=404698#c15">comment #15</a>)
<span class="quote">&gt; &#64;David: This would mean if you attach a non-encrypted image to an
&gt; encrypted...
&gt; 
&gt; Absolutely, such an email could not be decrypted anymore if you follow our
&gt; suggestions (or had to be manually decrypted on the command line). While
&gt; this may seem a bit harsh, we have not seen any mail client that allows to
&gt; send such &quot;partially encrypted&quot; emails (e.g., with unencrypted attachments),
&gt; and I think handling such edge cases can become a security nightmare. Either
&gt; the whole mail is encrypted or it's not, everything else gives a false sense
&gt; of security, imho.</span >

One client that supports sending encrypted mails with unencrypted attachment is kmail (but you need to do it explicitly).

One common use case, of such partial encrypted mails are mails forwarded via Mailman. Mailman adds a non encrypted footer to each email. So not supporting these mails make would break my workflow. This was the reason, why I fixed a several things, because I didn't wanted to see this footer in the reply ;D And I see a big difference between displaying such broken mails and replying. 

<span class="quote">&gt; However, I see the developer's perspective and the and the fear of
&gt; potentially breaking things, too. I guess a rule like &quot;in case of an
&gt; encrypted, multipart email, reply only with the first part&quot; *should* be fine
&gt; too.</span >

I think so, too, that reply to only one part you be fine.

<span class="quote">&gt; &#64;Sandro: We originally tested in version 5.2.3 on Debian 9.8 (stretch). This
&gt; version is probably outdated by now.</span >

yes! Did you tested any other version?</pre>
    </div>

    <div id="c17" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sandro Knauß</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-05-12 21:59:21 UTC
        </span>

      </div>




<pre class="bz_comment_text">Git commit d397aa46e809203c94e31891caac57affac746d9 by Sandro Knauß.
Committed on 12/05/2019 at 20:34.
Pushed by knauss into branch 'Applications/19.04'.

Test mails for Decryption Oracle based on replying to PGP or S/MIME.

Summary:
In order to make sure we never add a Decryption Oracle add test mails to
TemplateParser.

Reviewers: #kde_pim, aacid, dfaure

Subscribers: kde-pim

Tags: #kde_pim

Differential Revision: <a href="https://phabricator.kde.org/D20757">https://phabricator.kde.org/D20757</a>

A  +120  -0    templateparser/autotests/data/404698-gpg.mbox
A  +51   -0    templateparser/autotests/data/404698-gpg.mbox.plain.reply
A  +88   -0    templateparser/autotests/data/404698-smime.mbox
A  +51   -0    templateparser/autotests/data/404698-smime.mbox.plain.reply

<a href="https://commits.kde.org/messagelib/d397aa46e809203c94e31891caac57affac746d9">https://commits.kde.org/messagelib/d397aa46e809203c94e31891caac57affac746d9</a></pre>
    </div>

    <div id="c18" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sandro Knauß</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-05-12 22:10:25 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=120026" name="attach_120026" title="html mail with two images embeded.">attachment 120026</a> <a href="attachment.cgi?id=120026&amp;action=edit" title="html mail with two images embeded.">[details]</a></span>
html mail with two images embeded.

There is one question, how we should handle forwards with embedded images.
We have a testcase with two images embedded (see attachment), that are added to the forwarded message. IMO this is not a security issue, as we do not parse those two images (aka do not encrypt them) and just copy them like they were sent over the wire. So we can't leak private information.</pre>
    </div>

    <div id="c19" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sandro Knauß</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-05-12 22:14:40 UTC
        </span>

      </div>




<pre class="bz_comment_text">Git commit a58286aec8f300d78c570726924baa91d9a22771 by Sandro Knauß.
Committed on 12/05/2019 at 21:48.
Pushed by knauss into branch 'Applications/19.04'.

Merge branch 'CVE-2019-10732' into Applications/19.04

Fixes the CVE-2019-10732, with additional tests, to make sure, we fixed
the CVE completely.

FIXED-IN: 5.11.2
CCMAIL: <a href="mailto:security&#64;kde.org">security&#64;kde.org</a>


<a href="https://commits.kde.org/messagelib/a58286aec8f300d78c570726924baa91d9a22771">https://commits.kde.org/messagelib/a58286aec8f300d78c570726924baa91d9a22771</a></pre>
    </div>

    <div id="c20" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sandro Knauß</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-05-12 22:14:40 UTC
        </span>

      </div>




<pre class="bz_comment_text">Git commit 8f9b85b664be0987014c5d2485e706ab5a198e1b by Sandro Knauß.
Committed on 12/05/2019 at 20:37.
Pushed by knauss into branch 'Applications/19.04'.

Make unexpected data leak harder via reply.

ObjectTreeParser.htmlContent/plainTextContent may concats different encrypted parts
without the user noticing it. That would lead to a Decryption oracle. We have already
a logic to find the topleveltextNode in MimeTreeParser, this does not take HTML nodes
into account nor that TEXT nodes may have several PGP Inline blocks.

That plaintextContent for HtmlMessagePart is not return QString(), that bubbled up by
testing the stuff.

M  +5    -0    mimetreeparser/src/messagepart.cpp
M  +1    -0    mimetreeparser/src/messagepart.h
A  +31   -0    templateparser/autotests/data/openpgp-inline-space.mbox
A  +1    -0    templateparser/autotests/data/openpgp-inline-space.mbox.html.reply
A  +1    -0    templateparser/autotests/data/openpgp-inline-space.mbox.plain.reply
M  +46   -14   templateparser/src/templateparserjob.cpp

<a href="https://commits.kde.org/messagelib/8f9b85b664be0987014c5d2485e706ab5a198e1b">https://commits.kde.org/messagelib/8f9b85b664be0987014c5d2485e706ab5a198e1b</a></pre>
    </div>

    <div id="c21" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sandro Knauß</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-05-12 22:14:43 UTC
        </span>

      </div>




<pre class="bz_comment_text">Git commit ac360b3a57eacbf0542ed0800e6054db76f01398 by Sandro Knauß.
Committed on 12/05/2019 at 20:37.
Pushed by knauss into branch 'Applications/19.04'.

Decryption Oracle based on forwarding PGP or S/MIME mails (CVE-2019-10732)

Summary:
Add test coverage for mail forwarding.

Test Plan:
all tests passes
forward (text/html):
[x] PGP Mime text
[x] PGP Mime html
[x] S/MIME
[x] PGP inline

Reviewers: #kde_pim, vkrause, aacid, dfaure

Subscribers: kde-pim, security-team

Tags: #kde_pim

Differential Revision: <a href="https://phabricator.kde.org/D20847">https://phabricator.kde.org/D20847</a>

A  +72   -0    templateparser/autotests/data/404698-gpg-attachments.mbox
A  +66   -0    templateparser/autotests/data/404698-gpg-attachments.mbox.forwarded.mbox
A  +1    -0    templateparser/autotests/data/404698-gpg-attachments.mbox.html.reply
A  +5    -0    templateparser/autotests/data/404698-gpg-attachments.mbox.plain.reply
A  +83   -0    templateparser/autotests/data/html-<span class=""><a href="attachment.cgi?id=1" name="attach_1" title="Decoded attachment">attachment1</a> <a href="attachment.cgi?id=1&amp;action=edit" title="Decoded attachment">[details]</a></span>.mbox.forwarded.mbox
A  +28   -0    templateparser/autotests/data/html-<span class=""><a href="attachment.cgi?id=2" name="attach_2" title="Decoded attachment">attachment2</a> <a href="attachment.cgi?id=2&amp;action=edit" title="Decoded attachment">[details]</a></span>.mbox.forwarded.mbox
M  +162  -0    templateparser/autotests/templateparserjobtest.cpp
M  +9    -0    templateparser/autotests/templateparserjobtest.h

<a href="https://commits.kde.org/messagelib/ac360b3a57eacbf0542ed0800e6054db76f01398">https://commits.kde.org/messagelib/ac360b3a57eacbf0542ed0800e6054db76f01398</a></pre>
    </div>

    <div id="c22" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">beuc
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-06-12 14:59:32 UTC
        </span>

      </div>




<pre class="bz_comment_text">Hi,

As part of the Debian LTS project, I'm trying to fix this vulnerability in Debian Jessie, which ships kdepim 4.14.1.

I'm attempting to backport
<a href="https://commits.kde.org/messagelib/8f9b85b664be0987014c5d2485e706ab5a198e1b">https://commits.kde.org/messagelib/8f9b85b664be0987014c5d2485e706ab5a198e1b</a>
but the API is very different, I'm not even sure there are available functions to expose the MIME parts and extract their quotable content independently.

Do you think this is doable?</pre>
    </div>

    <div id="c23" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">beuc
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-06-12 18:57:26 UTC
        </span>

      </div>




<pre class="bz_comment_text">I wrote something cruder but that works with the 404698-* messagelib test cases:
<a href="https://www.beuc.net/tmp/kdepim-CVE-2019-10732.patch">https://www.beuc.net/tmp/kdepim-CVE-2019-10732.patch</a>
This should be a good compromise, let me know if I missed something.
I plan to upload an update shortly, probably next week :)</pre>
    </div>

    <div id="c24" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c24">Comment 24</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Sandro Knauß</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-06-28 15:38:27 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to beuc from <a href="show_bug.cgi?id=404698#c23">comment #23</a>)
<span class="quote">&gt; I wrote something cruder but that works with the 404698-* messagelib test
&gt; cases:
&gt; <a href="https://www.beuc.net/tmp/kdepim-CVE-2019-10732.patch">https://www.beuc.net/tmp/kdepim-CVE-2019-10732.patch</a>
&gt; This should be a good compromise, let me know if I missed something.
&gt; I plan to upload an update shortly, probably next week :)</span >

The code looks like it should be enough. But the surrounding code has changed a lot between 4.14.1 and had less tests etc. It may be that there are other things to fix.</pre>
    </div>

    <div id="c25" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=404698#c25">Comment 25</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">removed by sysadmin</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-07-31 02:15:35 UTC
        </span>

      </div>




<pre class="bz_comment_text"></pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=404698">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=404698">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=404698">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li>
      <span class="separator">| </span>
        <a href="request.cgi">Requests</a></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    
      <li id="new_account_container_bottom">
        <span class="separator">| </span>
        <a href="createaccount.cgi">New&nbsp;Account</a>
      </li>

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=404698&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=404698" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=404698&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635619445-6hZDgVDGg4LpqSQa3JMtENEi7tpxh0TkwiQVUQSCQzE">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>