<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='URL related Bug #81122 - RDF' href='rss/bug.php?id=81122'>
        <link rel='alternate' type='application/rss+xml' title='URL related Bug #81122 - RSS 2.0' href='rss/bug.php?id=81122&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Sec Bug #81122 :: SSRF bypass in FILTER_VALIDATE_URL</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=81122">Sec Bug</a>&nbsp;#81122</th>
            <td id="summary" colspan="5">SSRF bypass in FILTER_VALIDATE_URL</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2021-06-10 02:37 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2021-07-16 22:03 UTC</td>
            <td rowspan="6">


            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>vi &#x61;&#116; hackberry &#x64;&#111;&#x74; xyz</td>
            <th class="details">Assigned:</th>
            <td><a href="search.php?cmd=display&amp;assign=cmb">cmb</a> (<a href="https://people.php.net/cmb">profile</a>)</td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=URL+related">URL related</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>8.0.7</td>
            <th class="details">OS:</th>
            <td>All</td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21705" target="_blank">2021-21705</a></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=81122&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=81122&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=81122&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1623292649">&nbsp;</a><strong>[2021-06-10 02:37 UTC] vi &#x61;&#116; hackberry &#x64;&#111;&#x74; xyz</strong>
<pre class='note'>Description:
------------
In reports <a href="https://bugs.php.net/bug.php?id=77423" rel="nofollow">https://bugs.php.net/bug.php?id=77423</a> and <a href="https://bugs.php.net/bug.php?id=81116" rel="nofollow">https://bugs.php.net/bug.php?id=81116</a>, it is suggested to use FILTER_VALIDATE_URL but I have found a bypass that allows bypassing FILTER_VALIDATE_URL check. 

Test script:
---------------
echo filter_var(&quot;<a href="https://example.com:\@test.com/&quot;" rel="nofollow">https://example.com:\@test.com/&quot;</a>, FILTER_VALIDATE_URL)



Expected result:
----------------
Should not validate as a valid URL given the URL.



Actual result:
--------------
Validates URL as valid. This payload in file_get_contents and parse_url would treat test.com as host.

</pre>
</div><h2>Patches</h2>
<p><a href='patch-add.php?bug_id=81122'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=81122'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_log' ><a name="1623294758">&nbsp;</a><strong>[2021-06-10 03:12 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Open</span>
<span class="added">+Status: Feedback</span>
</div></div></div><div class='comment type_comment' ><a name="1623294758">&nbsp;</a><strong>[2021-06-10 03:12 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>This seems to be a valid URL with username &quot;example.com&quot; and password &quot;\&quot;. parse_url() parses it like that. Not sure why is is a problem?
</pre>
</div><div class='comment type_log' ><a name="1623304966">&nbsp;</a><strong>[2021-06-10 06:02 UTC] vi &#x61;&#116; hackberry &#x64;&#111;&#x74; xyz</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Feedback</span>
<span class="added">+Status: Open</span>
</div></div></div><div class='comment type_comment' ><a name="1623304966">&nbsp;</a><strong>[2021-06-10 06:02 UTC] vi &#x61;&#116; hackberry &#x64;&#111;&#x74; xyz</strong>
<pre class='note'>Consider the following code:

&lt;?php
if(filter_var($_GET['url'], FILTER_VALIDATE_URL)) {
    header(&quot;location: &quot;.$_GET['url']);
}

Now if you visit <a href="https://localhost/?url=https://example.com:\@test.com" rel="nofollow">https://localhost/?url=https://example.com:\@test.com</a>
The browser will redirect to <a href="https://example.com/@test.com" rel="nofollow">https://example.com/@test.com</a>. This can be used to bypass any open redirect mitigations as well as introduce a discripency since from PHP's perspective, the host is test.com here but for the browser, host is example.com

Now consider an SSRF protection which uses parse_url to check for test.com as host:

&lt;?php
if(filter_var($_GET['url'], FILTER_VALIDATE_URL)) {
    if(&quot;test.com&quot; === parse_url($_GET['url'])['host']) {
        header(&quot;location: &quot;.$_GET['url']);
    }
}

The above will pass for the payload <a href="https://example.com:\@test.com" rel="nofollow">https://example.com:\@test.com</a> but browser will redirect to <a href="https://example.com/@test.com" rel="nofollow">https://example.com/@test.com</a>

Now another case where file_get_contents is used over username and password provided by a user:

&lt;?php
$username = $_GET['user'];
$password = $_GET['pass'];
$loginurl = '<a href="https://'" rel="nofollow">https://'</a> . $username . ':' . $password . '@test.com/';

if(filter_var($loginurl, FILTER_VALIDATE_URL)) {
    echo file_get_contents($loginurl);
}

For the username as 'example.com' and password as '/', the request will be sent to 
<a href="https://example.com/@test.com" rel="nofollow">https://example.com/@test.com</a> since ':' will indicate start of port. But port will end with '/' that indicates the start of path. 

Another case where we allow `\` in the password:

parse_url(&quot;<a href="https://user:\epass@test.com&quot;" rel="nofollow">https://user:\epass@test.com&quot;</a>)

would return 

[
     &quot;scheme&quot; =&gt; &quot;https&quot;,
     &quot;host&quot; =&gt; &quot;test.com&quot;,
     &quot;user&quot; =&gt; &quot;user&quot;,
     &quot;pass&quot; =&gt; &quot;_pass&quot;,
]

and the following:

parse_url(&quot;<a href="https://user:\\@test.com&quot;" rel="nofollow">https://user:\\@test.com&quot;</a>)

would return 

[
    &quot;scheme&quot; =&gt; &quot;https&quot;,
    &quot;host&quot; =&gt; &quot;test.com&quot;,
    &quot;user&quot; =&gt; &quot;user&quot;,
    &quot;pass&quot; =&gt; &quot;\&quot;,
]

Another case I noticed, 

parse_url(&quot;<a href="https://example.com:\/@test.com&quot;" rel="nofollow">https://example.com:\/@test.com&quot;</a>)

would return false which is completely unexpected as '\' should have escaped '/' resulting in:

[
    &quot;scheme&quot; =&gt; &quot;https&quot;,
    &quot;host&quot; =&gt; &quot;example.com&quot;,
    &quot;path&quot; =&gt; &quot;/@test.com&quot;,
]
</pre>
</div><div class='comment type_comment' ><a name="1623318290">&nbsp;</a><strong>[2021-06-10 09:44 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<pre class='note'>&gt; This seems to be a valid URL with username &quot;example.com&quot; and
&gt; password &quot;\&quot;.

According to RFC 3986[1], it is not.

    userinfo      = *( unreserved / pct-encoded / sub-delims / &quot;:&quot; )
    unreserved    = ALPHA / DIGIT / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot;
    sub-delims    = &quot;!&quot; / &quot;$&quot; / &quot;&amp;&quot; / &quot;'&quot; / &quot;(&quot; / &quot;)&quot;
                  / &quot;*&quot; / &quot;+&quot; / &quot;,&quot; / &quot;;&quot; / &quot;=&quot;

The backslash would have to be percent encoded.  Since it is not,
apparently browsers interpret :\ as slash, here.

[1] &lt;<a href="https://datatracker.ietf.org/doc/html/rfc3986" rel="nofollow">https://datatracker.ietf.org/doc/html/rfc3986</a>&gt;
</pre>
</div><div class='comment type_comment' ><a name="1623611903">&nbsp;</a><strong>[2021-06-13 19:18 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>@cmb so should we add validation for the password part too?
</pre>
</div><div class='comment type_log' ><a name="1623621092">&nbsp;</a><strong>[2021-06-13 21:51 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Assigned To:</span>
<span class="added">+Assigned To: cmb</span>
</div></div></div><div class='comment type_comment' ><a name="1623621092">&nbsp;</a><strong>[2021-06-13 21:51 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<pre class='note'>Yes.  I'll provide a patch on Monday.
</pre>
</div><div class='comment type_log' ><a name="1623670203">&nbsp;</a><strong>[2021-06-14 11:30 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Assigned To: cmb</span>
<span class="added">+Assigned To: stas</span>
</div></div></div><div class='comment type_comment' ><a name="1623670203">&nbsp;</a><strong>[2021-06-14 11:30 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<pre class='note'>Formatted patch for PHP-7.3 and up:
&lt;<a href="https://gist.github.com/cmb69/cd1a701099e0b904fd8aa4b150312bca" rel="nofollow">https://gist.github.com/cmb69/cd1a701099e0b904fd8aa4b150312bca</a>&gt;.

When merging that into master the SKIPIF section of the test case
should be replaced with:

    --EXTENSIONS--
    filter

&gt; parse_url(&quot;<a href="https://example.com:\/@test.com&quot;" rel="nofollow">https://example.com:\/@test.com&quot;</a>)

This is actually

    parse_url(&quot;<a href="https://example.com:\\/@test.com&quot;" rel="nofollow">https://example.com:\\/@test.com&quot;</a>)

since &quot;\/&quot; isn't a valid escape sequence.
</pre>
</div><div class='comment type_comment' ><a name="1623840097">&nbsp;</a><strong>[2021-06-16 10:41 UTC] vi &#x61;&#116; hackberry &#x64;&#111;&#x74; xyz</strong>
<pre class='note'>While fixing this, also take the following case in consideration:

---
parse_url(&quot;<a href="https://example.com:80\/@asdf.com&quot;" rel="nofollow">https://example.com:80\/@asdf.com&quot;</a>);
=&gt; [
     &quot;scheme&quot; =&gt; &quot;https&quot;,
     &quot;host&quot; =&gt; &quot;example.com&quot;,
     &quot;port&quot; =&gt; 80,
     &quot;path&quot; =&gt; &quot;/@asdf.com&quot;,
   ]
---

Here \/ becomes a path separator making 80 a port number which I think is due to / getting escaped by backslash.
Tested on PHP 8.0.7
</pre>
</div><div class='comment type_comment' ><a name="1623859831">&nbsp;</a><strong>[2021-06-16 16:10 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<pre class='note'>&gt; <a href="https://example.com:80\/@asdf.com" rel="nofollow">https://example.com:80\/@asdf.com</a>

Yes, that is an invalid URI (according to RFC 3986), and
parse_url() fails to parse it properly; I don't even consider this
as bug[1].  The fact that FILTER_VALIDATE_URL claims the URL to be
valid is a bug, but given that it is apparently interpreted as

    <a href="https://example.com:80//@asdf.com" rel="nofollow">https://example.com:80//@asdf.com</a>

by browsers, I don't think this is a security issue.

[1] &lt;<a href="https://github.com/php/doc-en/commit/22fa19e2534e0749ee98b0f4dec87a3237006f8a" rel="nofollow">https://github.com/php/doc-en/commit/22fa19e2534e0749ee98b0f4dec87a3237006f8a</a>&gt;
</pre>
</div><div class='comment type_log' ><a name="1624251839">&nbsp;</a><strong>[2021-06-21 05:03 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID:</span>
<span class="added">+CVE-ID: 2021-21705</span>
</div></div></div><div class='comment type_svn' ><a name="1624855292">&nbsp;</a><strong>[2021-06-28 04:41 UTC] <a href="//people.php.net/git">git@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of cmb69 (author) and smalyshev (committer)
Revision: <a href="https://github.com/php/php-src/commit/a5538c62293fa782fcc382d0635cfc0c8b9190e3" rel="nofollow">https://github.com/php/php-src/commit/a5538c62293fa782fcc382d0635cfc0c8b9190e3</a>
Log: Fix #81122: SSRF bypass in FILTER_VALIDATE_URL
</pre>
</div><div class='comment type_log' ><a name="1624855292">&nbsp;</a><strong>[2021-06-28 04:41 UTC] <a href="//people.php.net/git">git@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Closed</span>
</div></div></div><div class='comment type_comment' ><a name="1626398760">&nbsp;</a><strong>[2021-07-16 01:26 UTC] kfoubert &#x61;&#116; sitecrafting &#x64;&#111;&#x74; com</strong>
<pre class='note'>This change might have caused an issue with validating against elastic search url and other similar URLs.

Elastic Search URL:
<a href="https://collections_name:[45" rel="nofollow">https://collections_name:[45</a> character string].us-west-2.aws.found.io:9243

Does this qualify as a valid URL?

The search page works fine on PHP 7.3.27 but no longer works with PHP 7.3.29, which Pantheon has switched to.

The FILTER_VALIDATE_URL is in the PHP Elastic Search composer package. The code below is now adding an unneeded <a href="http://" rel="nofollow">http://</a>

```
/**
 * @param string $host
 *
 * @return string
 */
private function prependMissingScheme($host)
{
     	
    if (!filter_var($host, FILTER_VALIDATE_URL)) {
        $host = '<a href="http://'" rel="nofollow">http://'</a> . $host;
    }

    return $host;
}
```
</pre>
</div><div class='comment type_comment' ><a name="1626406817">&nbsp;</a><strong>[2021-07-16 03:40 UTC] vi &#x61;&#116; hackberry &#x64;&#111;&#x74; xyz</strong>
<pre class='note'>According to RFC 2396 (<a href="https://www.ietf.org/rfc/rfc2396.txt" rel="nofollow">https://www.ietf.org/rfc/rfc2396.txt</a>), <a href="https://collections_name:[45" rel="nofollow">https://collections_name:[45</a> character string].us-west-2.aws.found.io:9243 is not a valid URL. Because the : character in the host separates the port from host in hostport. (See the section 3.2.2)


3.2.2. Server-based Naming Authority

   URL schemes that involve the direct use of an IP-based protocol to a
   specified server on the Internet use a common syntax for the server
   component of the URI's scheme-specific data:

      &lt;userinfo&gt;@&lt;host&gt;:&lt;port&gt;

   where &lt;userinfo&gt; may consist of a user name and, optionally, scheme-
   specific information about how to gain authorization to access the
   server.  The parts &quot;&lt;userinfo&gt;@&quot; and &quot;:&lt;port&gt;&quot; may be omitted.

      server        = [ [ userinfo &quot;@&quot; ] hostport ]

   The user information, if present, is followed by a commercial at-sign
   &quot;@&quot;.

      userinfo      = *( unreserved | escaped |
                         &quot;;&quot; | &quot;:&quot; | &quot;&amp;&quot; | &quot;=&quot; | &quot;+&quot; | &quot;$&quot; | &quot;,&quot; )

   Some URL schemes use the format &quot;user:password&quot; in the userinfo
   field. This practice is NOT RECOMMENDED, because the passing of
   authentication information in clear text (such as URI) has proven to
   be a security risk in almost every case where it has been used.

   The host is a domain name of a network host, or its IPv4 address as a
   set of four decimal digit groups separated by &quot;.&quot;.  Literal IPv6
   addresses are not supported.

      hostport      = host [ &quot;:&quot; port ]
      host          = hostname | IPv4address
      hostname      = *( domainlabel &quot;.&quot; ) toplabel [ &quot;.&quot; ]
      domainlabel   = alphanum | alphanum *( alphanum | &quot;-&quot; ) alphanum
      toplabel      = alpha | alpha *( alphanum | &quot;-&quot; ) alphanum
</pre>
</div><div class='comment type_comment' ><a name="1626463660">&nbsp;</a><strong>[2021-07-16 19:27 UTC] kfoubert &#x61;&#116; sitecrafting &#x64;&#111;&#x74; com</strong>
<pre class='note'>To clarify the actual URL being validated is basic authentication. Is that a valid URL?

<a href="https://[username]:[password]@cfd83a4879dc445d84dd990baf771358.us-west-2.aws.found.io:9243" rel="nofollow">https://[username]:[password]@cfd83a4879dc445d84dd990baf771358.us-west-2.aws.found.io:9243</a>
</pre>
</div><div class='comment type_comment' ><a name="1626463901">&nbsp;</a><strong>[2021-07-16 19:31 UTC] kfoubert &#x61;&#116; sitecrafting &#x64;&#111;&#x74; com</strong>
<pre class='note'>Here's a better explanation, the actual URL being validated is basic authentication. Is that a valid URL?

Pattern (which I think matches the previous description hackberry provided)
<a href="https://[username]:[password]@cfd83a4879dc445d84dd990baf771358.us-west-2.aws.found.io:9243" rel="nofollow">https://[username]:[password]@cfd83a4879dc445d84dd990baf771358.us-west-2.aws.found.io:9243</a>

here's what the elastic search url looks like, with no password.
<a href="https://wshs_collections:[password]@cfd83a4879dc445d84dd990baf771358.us-west-2.aws.found.io:9243" rel="nofollow">https://wshs_collections:[password]@cfd83a4879dc445d84dd990baf771358.us-west-2.aws.found.io:9243</a>


For PHP 7.3.29, FILTER_VALIDATE_URL  is returning false. I'm guessing it should return true.
</pre>
</div><div class='comment type_log' ><a name="1626464097">&nbsp;</a><strong>[2021-07-16 19:34 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Assigned To: stas</span>
<span class="added">+Assigned To: cmb</span>
</div></div></div><div class='comment type_comment' ><a name="1626464097">&nbsp;</a><strong>[2021-07-16 19:34 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>@cmb could you check?
</pre>
</div><div class='comment type_comment' ><a name="1626464159">&nbsp;</a><strong>[2021-07-16 19:35 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>I suspect a particular password may contain characters that are not allowed in the URL. That would make it an invalid URL.
</pre>
</div><div class='comment type_comment' ><a name="1626469102">&nbsp;</a><strong>[2021-07-16 20:58 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<pre class='note'>&gt; Elastic Search URL:
&gt; <a href="https://collections_name:[45" rel="nofollow">https://collections_name:[45</a> character string].us-west-2.aws.found.io:9243
&gt;
&gt; Does this qualify as a valid URL?

No, because verbatim spaces are not allowed in an URL.  Unless you
provide a verbatim URL, *nobody* can tell.
</pre>
</div><div class='comment type_comment' ><a name="1626470339">&nbsp;</a><strong>[2021-07-16 21:18 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Just for the sake of clarity, please do not post any of the actual passwords here, please generate a fake one that demonstrates the problem instead.
</pre>
</div><div class='comment type_comment' ><a name="1626472285">&nbsp;</a><strong>[2021-07-16 21:51 UTC] kfoubert &#x61;&#116; sitecrafting &#x64;&#111;&#x74; com</strong>
<pre class='note'>To: stas and cmb

here's what the elastic search url looks like, with no password (i made sure previous posts had no password). It's basic authentication. 

<a href="https://[username]:[password]@cfd83a4879dc445d84dd990baf771358.us-west-2.aws.found.io:9243" rel="nofollow">https://[username]:[password]@cfd83a4879dc445d84dd990baf771358.us-west-2.aws.found.io:9243</a>

The password contains a caret character and an exclamation mark, everything else is alphanumberic.

I also placed an issue for Elasticsearch-PHP for older versions, since their most recent releases don't use FILTER_VALIDATE_URL. 

Thank you!
</pre>
</div><div class='comment type_comment' ><a name="1626472940">&nbsp;</a><strong>[2021-07-16 22:02 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Exclamation mark is fine, but caret is not:

 Other characters are excluded because gateways and other transport
   agents are known to sometimes modify such characters, or they are
   used as delimiters.

   unwise      = &quot;{&quot; | &quot;}&quot; | &quot;|&quot; | &quot;\&quot; | &quot;^&quot; | &quot;[&quot; | &quot;]&quot; | &quot;`&quot;
</pre>
</div><div class='comment type_comment' ><a name="1626473023">&nbsp;</a><strong>[2021-07-16 22:03 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<pre class='note'>&gt; The password contains a caret character and an exclamation mark,
&gt; everything else is alphanumberic. 

According to RFC 3986[1], a caret is not valid in the password
which is a part of the userinfo:

    userinfo      = *( unreserved / pct-encoded / sub-delims / &quot;:&quot; )
    unreserved    = ALPHA / DIGIT / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot;
    sub-delims    = &quot;!&quot; / &quot;$&quot; / &quot;&amp;&quot; / &quot;'&quot; / &quot;(&quot; / &quot;)&quot;
                  / &quot;*&quot; / &quot;+&quot; / &quot;,&quot; / &quot;;&quot; / &quot;=&quot;

The caret would need to be percent-encoded as %5E.

[1] &lt;<a href="https://datatracker.ietf.org/doc/html/rfc3986" rel="nofollow">https://datatracker.ietf.org/doc/html/rfc3986</a>&gt;
</pre>
</div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
