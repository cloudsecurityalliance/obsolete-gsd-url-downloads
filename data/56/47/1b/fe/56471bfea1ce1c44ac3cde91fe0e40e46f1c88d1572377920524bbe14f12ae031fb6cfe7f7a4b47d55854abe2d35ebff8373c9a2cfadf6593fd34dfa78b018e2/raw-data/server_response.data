<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<link rel="icon" href="/favicon.png">
<title>#962254 - NFSv4.2: umask not applied on filesystem without ACL support - Debian Bug report logs</title>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="/css/bugs.css" type="text/css">

<link rel="canonical" href="&lt;a href=&quot;bugreport.cgi?bug=962254&quot;&gt;962254&lt;/a&gt;">
<script type="text/javascript">
<!--
function toggle_infmessages()
{
        allDivs=document.getElementsByTagName("div");
        for (var i = 0 ; i < allDivs.length ; i++ )
        {
                if (allDivs[i].className == "infmessage")
                {
                        allDivs[i].style.display=(allDivs[i].style.display == 'none' | allDivs[i].style.display == '') ? 'block' : 'none';
                }
        }
}
-->
</script>
</head>
<body>
<h1>Debian Bug report logs - 
<a href="mailto:962254@bugs.debian.org">#962254</a><br>
NFSv4.2: umask not applied on filesystem without ACL support</h1>
<div class="versiongraph"><a href="version.cgi?absolute=0;collapse=1;fixed=linux%2F5.7.6-1;fixed=linux%2F4.19.131-1;package=src%3Alinux;found=linux%2F4.19.118-2;found=linux%2F5.6.14-2;found=linux%2F5.7~rc5-1~exp1;found=linux%2F4.10-1~exp1;info=1"><img alt="version graph" src="version.cgi?collapse=1;absolute=0;width=2;found=linux%2F4.19.118-2;found=linux%2F5.6.14-2;found=linux%2F5.7~rc5-1~exp1;found=linux%2F4.10-1~exp1;height=2;fixed=linux%2F5.7.6-1;fixed=linux%2F4.19.131-1;package=src%3Alinux"></a></div>
<div class="pkginfo">
  <p>Package:
     <a class="submitter" href="pkgreport.cgi?src=linux">src:linux</a>;
Maintainer for <a href="pkgreport.cgi?src=linux">src:linux</a> is <a href="pkgreport.cgi?maint=debian-kernel%40lists.debian.org">Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</a>; </p>

</div>

<div class="buginfo">
  <p>Reported by: <a href="pkgreport.cgi?submitter=ehem%2Bdebian%40m5p.com">Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</a></p>
  <p>Date: Fri,  5 Jun 2020 05:42:01 UTC</p>

<p>Severity: <em class="severity">grave</em></p>
<p>Tags: security, upstream</p>
<p>Merged with <a href="bugreport.cgi?bug=934160">934160</a></p>

<p>Found in versions linux/4.19.118-2, linux/5.6.14-2, linux/5.7~rc5-1~exp1, linux/4.10-1~exp1</p>
<p>Fixed in versions linux/5.7.6-1, linux/4.19.131-1</p>

<p><strong>Done:</strong> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</p>

<p>Bug is archived. No further changes may be made.<p><p>Forwarded to <a href="https://lore.kernel.org/linux-nfs/20200616052835.GA19246@lorien.valinor.li/T/#m9c41f33123a7c44cdd7fa07611c678c1b0dace61">https://lore.kernel.org/linux-nfs/20200616052835.GA19246@lorien.valinor.li/T/#m9c41f33123a7c44cdd7fa07611c678c1b0dace61</a></p>
</div>

<p><a href="javascript:toggle_infmessages();">Toggle useless messages</a></p><div class="msgreceived"><p>View this report as an <a href="bugreport.cgi?bug=962254;mbox=yes">mbox folder</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;mboxstatus=yes">status mbox</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;mboxmaint=yes">maintainer mbox</a></p></div>

<div class="infmessage"><hr><p>
<a name="1"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1591335723 -->
<strong>Report forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Fri, 05 Jun 2020 05:42:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=2">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=2">mbox</a>, <a href="#1">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="3"></a>
<!-- request_addr: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- time:1591335723 -->
<strong>Acknowledgement sent</strong>
to <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>:<br>
New Bug report received and forwarded.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Fri, 05 Jun 2020 05:42:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=4">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=4">mbox</a>, <a href="#3">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="5"></a><a name="msg5"></a><a href="#5">Message #5</a> received at submit@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=5">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=5">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200605051607.GA34405%40mattapan.m5p.com%3E&amp;body=On%20Thu%2C%204%20Jun%202020%2022%3A16%3A07%20-0700%20Elliott%20Mitchell%20%3Cehem%2Bdebian%40m5p.com%3E%20wrote%3A%0A%3E%20Package%3A%20src%3Alinux%0A%3E%20Version%3A%204.19.118%2B2%0A%3E%20Severity%3A%20important%0A%3E%20%0A%3E%20Somewhere%20between%20linux-image-4.19.0-8-amd64%2F4.19.98%2B1%2Bdeb10u1%20and%0A%3E%20linux-image-4.19.0-9-amd64%2F4.19.118%2B2%20NFS%2C%20in%20particular%20v4%20got%20broken.%0A%3E%20Mounting%20an%20appropriate%20filesystem%20became%20unreliable%2C%20and%20once%20mounted%0A%3E%20behavior%20is%20unpredictable.%0A%3E%20%0A%3E%20In%20particular%20in%20the%20problematic%20case%20%60umask%20022%20%3B%20touch%20foo%20%3B%20ls%20-l%20foo%60%0A%3E%20yields%20a%20-rw-rw-rw-%20file.%0A%3E%20%0A%3E%20This%20occurs%20if%20%2Aboth%2A%20the%20server%20%2Aand%2A%20client%20are%20on%204.19.118%2B2.%20%20I%20have%0A%3E%20confirmed%20this%20does%20NOT%20occur%20if%20the%20server%20is%20on%20a%204.9%20kernel.%20%20I%20have%0A%3E%20also%20confirmed%20this%20does%20NOT%20occur%20if%20the%20client%20is%20on%20a%204.9%20or%0A%3E%204.19.98%2B1%2Bdeb10u1%20kernel.%0A%3E%20%0A%3E%20%0A%3E%20--%20%0A%3E%20%28%5C___%28%5C___%28%5C______%20%20%20%20%20%20%20%20%20%20--%3D%3E%208-%29%20EHM%20%3C%3D--%20%20%20%20%20%20%20%20%20%20______%2F%29___%2F%29___%2F%29%0A%3E%20%20%5CBS%20%28%20%20%20%20%7C%20%20%20%20%20%20%20%20%20ehem%2Bsigmsg%40m5p.com%20%20PGP%2087145445%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%29%20%20%20%2F%0A%3E%20%20%20%5C_CS%5C%20%20%20%7C%20%20_____%20%20-O%20%23include%20%3Cstddisclaimer.h%3E%20O-%20%20%20_____%20%20%7C%20%20%20%2F%20%20_%2F%0A%3E%208A19%5C___%5C_%7C_%2F58D2%207E3D%20DDF4%207BA6%20%3C-PGP-%3E%2041D1%20B375%2037D0%208714%5C_%7C_%2F___%2F5445%0A%3E%20%0A%3E%20%0A%3E%20%0A%3E%20%0A&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E&amp;subject=Re%3A%20NFS%28v4%29%20broken%20at%204.19.118-2">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=ehem%2Bdebian%40m5p.com" alt="">
<div class="header"><span class="headerfield">From:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> submit@bugs.debian.org</div>
<div class="header"><span class="headerfield">Subject:</span> NFS(v4) broken at 4.19.118-2</div>
<div class="header"><span class="headerfield">Date:</span> Thu, 4 Jun 2020 22:16:07 -0700</div>
</div>
<pre class="message">Package: src:linux
Version: 4.19.118+2
Severity: important

Somewhere between linux-image-4.19.0-8-amd64/4.19.98+1+deb10u1 and
linux-image-4.19.0-9-amd64/4.19.118+2 NFS, in particular v4 got broken.
Mounting an appropriate filesystem became unreliable, and once mounted
behavior is unpredictable.

In particular in the problematic case `umask 022 ; touch foo ; ls -l foo`
yields a -rw-rw-rw- file.

This occurs if *both* the server *and* client are on 4.19.118+2.  I have
confirmed this does NOT occur if the server is on a 4.9 kernel.  I have
also confirmed this does NOT occur if the client is on a 4.9 or
4.19.98+1+deb10u1 kernel.


-- 
(\___(\___(\______          --=&gt; 8-) EHM &lt;=--          ______/)___/)___/)
 \BS (    |         ehem+sigmsg@m5p.com  PGP 87145445         |    )   /
  \_CS\   |  _____  -O #include &lt;stddisclaimer.h&gt; O-   _____  |   /  _/
8A19\___\_|_/58D2 7E3D DDF4 7BA6 &lt;-PGP-&gt; 41D1 B375 37D0 8714\_|_/___/5445




</pre>

<div class="infmessage"><hr><p>
<a name="6"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1591339682 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Fri, 05 Jun 2020 06:48:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=7">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=7">mbox</a>, <a href="#6">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="8"></a>
<!-- request_addr: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- time:1591339682 -->
<strong>Acknowledgement sent</strong>
to <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Fri, 05 Jun 2020 06:48:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=9">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=9">mbox</a>, <a href="#8">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="10"></a><a name="msg10"></a><a href="#10">Message #10</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=10">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=10">mbox</a>, <a href="mailto:962254@bugs.debian.org?body=On%20Fri%2C%205%20Jun%202020%2008%3A44%3A26%20%2B0200%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%20wrote%3A%0A%3E%20Control%3A%20tags%20-1%20%2B%20moreinfo%20unreproducible%0A%3E%20%0A%3E%20Control%3A%20notfound%20-1%204.19.118%2B2%0A%3E%20Control%3A%20found%20-1%204.19.118-2%0A%3E%20%0A%3E%20Hi%20Elliot%2C%0A%3E%20%0A%3E%20On%20Thu%2C%20Jun%2004%2C%202020%20at%2010%3A16%3A07PM%20-0700%2C%20Elliott%20Mitchell%20wrote%3A%0A%3E%20%3E%20Package%3A%20src%3Alinux%0A%3E%20%3E%20Version%3A%204.19.118%2B2%0A%3E%20%3E%20Severity%3A%20important%0A%3E%20%3E%20%0A%3E%20%3E%20Somewhere%20between%20linux-image-4.19.0-8-amd64%2F4.19.98%2B1%2Bdeb10u1%20and%0A%3E%20%3E%20linux-image-4.19.0-9-amd64%2F4.19.118%2B2%20NFS%2C%20in%20particular%20v4%20got%20broken.%0A%3E%20%3E%20Mounting%20an%20appropriate%20filesystem%20became%20unreliable%2C%20and%20once%20mounted%0A%3E%20%3E%20behavior%20is%20unpredictable.%0A%3E%20%3E%20%0A%3E%20%3E%20In%20particular%20in%20the%20problematic%20case%20%60umask%20022%20%3B%20touch%20foo%20%3B%20ls%20-l%20foo%60%0A%3E%20%3E%20yields%20a%20-rw-rw-rw-%20file.%0A%3E%20%3E%20%0A%3E%20%3E%20This%20occurs%20if%20%2Aboth%2A%20the%20server%20%2Aand%2A%20client%20are%20on%204.19.118%2B2.%20%20I%20have%0A%3E%20%3E%20confirmed%20this%20does%20NOT%20occur%20if%20the%20server%20is%20on%20a%204.9%20kernel.%20%20I%20have%0A%3E%20%3E%20also%20confirmed%20this%20does%20NOT%20occur%20if%20the%20client%20is%20on%20a%204.9%20or%0A%3E%20%3E%204.19.98%2B1%2Bdeb10u1%20kernel.%0A%3E%20%0A%3E%20I%20cannot%20reproducde%20the%20described%20behaviour.%20Can%20you%20give%20more%20details%0A%3E%20on%20your%20setup%3F%0A%3E%20%0A%3E%20How%20do%20you%20export%20the%20filesystem%3F%0A%3E%20What%20is%20the%20underlying%20filesystem%20exported%3F%0A%3E%20How%20and%20whith%20which%20options%20do%20clients%20mount%20the%20NFS%20share%3F%0A%3E%20%0A%3E%20Regards%2C%0A%3E%20Salvatore%0A%3E%20%0A%3E%20%0A&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E&amp;subject=Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2&amp;In-Reply-To=%3C20200605064426.GA1538868%40eldamar.local%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=carnil%40debian.org" alt="">
<div class="header"><span class="headerfield">From:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">To:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Bug#962254: NFS(v4) broken at 4.19.118-2</div>
<div class="header"><span class="headerfield">Date:</span> Fri, 5 Jun 2020 08:44:26 +0200</div>
</div>
<pre class="message">Control: tags -1 + moreinfo unreproducible

Control: notfound -1 4.19.118+2
Control: found -1 4.19.118-2

Hi Elliot,

On Thu, Jun 04, 2020 at 10:16:07PM -0700, Elliott Mitchell wrote:
&gt; Package: src:linux
&gt; Version: 4.19.118+2
&gt; Severity: important
&gt; 
&gt; Somewhere between linux-image-4.19.0-8-amd64/4.19.98+1+deb10u1 and
&gt; linux-image-4.19.0-9-amd64/4.19.118+2 NFS, in particular v4 got broken.
&gt; Mounting an appropriate filesystem became unreliable, and once mounted
&gt; behavior is unpredictable.
&gt; 
&gt; In particular in the problematic case `umask 022 ; touch foo ; ls -l foo`
&gt; yields a -rw-rw-rw- file.
&gt; 
&gt; This occurs if *both* the server *and* client are on 4.19.118+2.  I have
&gt; confirmed this does NOT occur if the server is on a 4.9 kernel.  I have
&gt; also confirmed this does NOT occur if the client is on a 4.9 or
&gt; 4.19.98+1+deb10u1 kernel.

I cannot reproducde the described behaviour. Can you give more details
on your setup?

How do you export the filesystem?
What is the underlying filesystem exported?
How and whith which options do clients mount the NFS share?

Regards,
Salvatore


</pre>

<div class="msgreceived"><hr><p>
<a name="11"></a>
<!-- command:tag -->
<!-- requester: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- request_addr: 962254-submit@bugs.debian.org -->
<!-- time:1591339682 -->
<!-- new_data:
$new_data = {
              &#39;keywords&#39; =&gt; &#39;unreproducible moreinfo&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;keywords&#39; =&gt; &#39;&#39;
            };
-->
<strong>Added tag(s) unreproducible and moreinfo.</strong>
Request was from <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>
to <code>962254-submit@bugs.debian.org</code>.
 (Fri, 05 Jun 2020 06:48:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=12">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=12">mbox</a>, <a href="#11">link</a>).</p></p></div>

<div class="msgreceived"><hr><p>
<a name="13"></a>
<!-- command:found -->
<!-- requester: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- request_addr: control@bugs.debian.org -->
<!-- time:1591345446 -->
<!-- new_data:
$new_data = {
              &#39;found_versions&#39; =&gt; []
            };
-->
<!-- old_data:
$old_data = {
              &#39;found_versions&#39; =&gt; [
                                    &#39;linux/4.19.118+2&#39;
                                  ]
            };
-->
<strong>No longer marked as found in versions linux/4.19.118+2.</strong>
Request was from <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>
to <code>control@bugs.debian.org</code>.
 (Fri, 05 Jun 2020 08:24:06 GMT) (<a href="bugreport.cgi?bug=962254;msg=14">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=14">mbox</a>, <a href="#13">link</a>).</p></p></div>

<div class="msgreceived"><hr><p>
<a name="15"></a>
<!-- command:found -->
<!-- requester: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- request_addr: control@bugs.debian.org -->
<!-- time:1591345447 -->
<!-- new_data:
$new_data = {
              &#39;found_versions&#39; =&gt; [
                                    &#39;linux/4.19.118-2&#39;
                                  ]
            };
-->
<!-- old_data:
$old_data = {
              &#39;found_versions&#39; =&gt; []
            };
-->
<strong>Marked as found in versions linux/4.19.118-2.</strong>
Request was from <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>
to <code>control@bugs.debian.org</code>.
 (Fri, 05 Jun 2020 08:24:07 GMT) (<a href="bugreport.cgi?bug=962254;msg=16">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=16">mbox</a>, <a href="#15">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="17"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1591380722 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Fri, 05 Jun 2020 18:12:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=18">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=18">mbox</a>, <a href="#17">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="19"></a>
<!-- request_addr: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- time:1591380722 -->
<strong>Acknowledgement sent</strong>
to <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Fri, 05 Jun 2020 18:12:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=20">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=20">mbox</a>, <a href="#19">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="21"></a><a name="msg21"></a><a href="#21">Message #21</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=21">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=21">mbox</a>, <a href="mailto:962254@bugs.debian.org?body=On%20Fri%2C%205%20Jun%202020%2010%3A43%3A49%20-0700%20Elliott%20Mitchell%20%3Cehem%2Bdebian%40m5p.com%3E%20wrote%3A%0A%3E%20On%20Fri%2C%20Jun%2005%2C%202020%20at%2008%3A44%3A26AM%20%2B0200%2C%20Salvatore%20Bonaccorso%20wrote%3A%0A%3E%20%3E%20%0A%3E%20%3E%20On%20Thu%2C%20Jun%2004%2C%202020%20at%2010%3A16%3A07PM%20-0700%2C%20Elliott%20Mitchell%20wrote%3A%0A%3E%20%3E%20%3E%20Somewhere%20between%20linux-image-4.19.0-8-amd64%2F4.19.98%2B1%2Bdeb10u1%20and%0A%3E%20%3E%20%3E%20linux-image-4.19.0-9-amd64%2F4.19.118%2B2%20NFS%2C%20in%20particular%20v4%20got%20broken.%0A%3E%20%3E%20%3E%20Mounting%20an%20appropriate%20filesystem%20became%20unreliable%2C%20and%20once%20mounted%0A%3E%20%3E%20%3E%20behavior%20is%20unpredictable.%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20In%20particular%20in%20the%20problematic%20case%20%60umask%20022%20%3B%20touch%20foo%20%3B%20ls%20-l%20foo%60%0A%3E%20%3E%20%3E%20yields%20a%20-rw-rw-rw-%20file.%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20This%20occurs%20if%20%2Aboth%2A%20the%20server%20%2Aand%2A%20client%20are%20on%204.19.118%2B2.%20%20I%20have%0A%3E%20%3E%20%3E%20confirmed%20this%20does%20NOT%20occur%20if%20the%20server%20is%20on%20a%204.9%20kernel.%20%20I%20have%0A%3E%20%3E%20%3E%20also%20confirmed%20this%20does%20NOT%20occur%20if%20the%20client%20is%20on%20a%204.9%20or%0A%3E%20%3E%20%3E%204.19.98%2B1%2Bdeb10u1%20kernel.%0A%3E%20%3E%20%0A%3E%20%3E%20I%20cannot%20reproducde%20the%20described%20behaviour.%20Can%20you%20give%20more%20details%0A%3E%20%3E%20on%20your%20setup%3F%0A%3E%20%3E%20%0A%3E%20%3E%20How%20do%20you%20export%20the%20filesystem%3F%0A%3E%20%3E%20What%20is%20the%20underlying%20filesystem%20exported%3F%0A%3E%20%3E%20How%20and%20whith%20which%20options%20do%20clients%20mount%20the%20NFS%20share%3F%0A%3E%20%0A%3E%20Presently%20it%20is%20a%20whole%20directories%20being%20exported%20to%20hosts.%20%20The%0A%3E%20filesystem%20on%20the%20server%20is%20ZFS.%0A%3E%20%0A%3E%20Client%20is%20mounting%20hard%2Cintr.%20%20Client%20is%20using%20cachefilesd%2C%20but%20that%0A%3E%20appears%20unrelated%20to%20the%20issue.%0A%3E%20%0A%3E%20As%20this%20is%20NFSv4%20%28v2%20and%20v3%20are%20thoroughly%20disabled%20on%20the%20server%29%2C%20TCP%0A%3E%20is%20being%20used.%20%20The%20port%20is%20non-standard.%0A%3E%20%0A%3E%20I%27m%20uncertain%20I%20properly%20tried%20server%20on%204.9%2C%20client%20on%204.19.118%2B2%20%28could%0A%3E%20be%20this%20is%20strictly%204.19.118%2B2%20NFSv4%20client%20code%29.%0A%3E%20%0A%3E%20%0A%3E%20--%20%0A%3E%20%28%5C___%28%5C___%28%5C______%20%20%20%20%20%20%20%20%20%20--%3D%3E%208-%29%20EHM%20%3C%3D--%20%20%20%20%20%20%20%20%20%20______%2F%29___%2F%29___%2F%29%0A%3E%20%20%5CBS%20%28%20%20%20%20%7C%20%20%20%20%20%20%20%20%20ehem%2Bsigmsg%40m5p.com%20%20PGP%2087145445%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%29%20%20%20%2F%0A%3E%20%20%20%5C_CS%5C%20%20%20%7C%20%20_____%20%20-O%20%23include%20%3Cstddisclaimer.h%3E%20O-%20%20%20_____%20%20%7C%20%20%20%2F%20%20_%2F%0A%3E%208A19%5C___%5C_%7C_%2F58D2%207E3D%20DDF4%207BA6%20%3C-PGP-%3E%2041D1%20B375%2037D0%208714%5C_%7C_%2F___%2F5445%0A%3E%20%0A%3E%20%0A%3E%20%0A%3E%20%0A&amp;subject=Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E&amp;In-Reply-To=%3C20200605174349.GA40135%40mattapan.m5p.com%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=ehem%2Bdebian%40m5p.com" alt="">
<div class="header"><span class="headerfield">From:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> 962254@bugs.debian.org</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Bug#962254: NFS(v4) broken at 4.19.118-2</div>
<div class="header"><span class="headerfield">Date:</span> Fri, 5 Jun 2020 10:43:49 -0700</div>
</div>
<pre class="message">On Fri, Jun 05, 2020 at 08:44:26AM +0200, Salvatore Bonaccorso wrote:
&gt; 
&gt; On Thu, Jun 04, 2020 at 10:16:07PM -0700, Elliott Mitchell wrote:
&gt; &gt; Somewhere between linux-image-4.19.0-8-amd64/4.19.98+1+deb10u1 and
&gt; &gt; linux-image-4.19.0-9-amd64/4.19.118+2 NFS, in particular v4 got broken.
&gt; &gt; Mounting an appropriate filesystem became unreliable, and once mounted
&gt; &gt; behavior is unpredictable.
&gt; &gt; 
&gt; &gt; In particular in the problematic case `umask 022 ; touch foo ; ls -l foo`
&gt; &gt; yields a -rw-rw-rw- file.
&gt; &gt; 
&gt; &gt; This occurs if *both* the server *and* client are on 4.19.118+2.  I have
&gt; &gt; confirmed this does NOT occur if the server is on a 4.9 kernel.  I have
&gt; &gt; also confirmed this does NOT occur if the client is on a 4.9 or
&gt; &gt; 4.19.98+1+deb10u1 kernel.
&gt; 
&gt; I cannot reproducde the described behaviour. Can you give more details
&gt; on your setup?
&gt; 
&gt; How do you export the filesystem?
&gt; What is the underlying filesystem exported?
&gt; How and whith which options do clients mount the NFS share?

Presently it is a whole directories being exported to hosts.  The
filesystem on the server is ZFS.

Client is mounting hard,intr.  Client is using cachefilesd, but that
appears unrelated to the issue.

As this is NFSv4 (v2 and v3 are thoroughly disabled on the server), TCP
is being used.  The port is non-standard.

I&#39;m uncertain I properly tried server on 4.9, client on 4.19.118+2 (could
be this is strictly 4.19.118+2 NFSv4 client code).


-- 
(\___(\___(\______          --=&gt; 8-) EHM &lt;=--          ______/)___/)___/)
 \BS (    |         ehem+sigmsg@m5p.com  PGP 87145445         |    )   /
  \_CS\   |  _____  -O #include &lt;stddisclaimer.h&gt; O-   _____  |   /  _/
8A19\___\_|_/58D2 7E3D DDF4 7BA6 &lt;-PGP-&gt; 41D1 B375 37D0 8714\_|_/___/5445




</pre>

<div class="infmessage"><hr><p>
<a name="22"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1591382344 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Fri, 05 Jun 2020 18:39:04 GMT) (<a href="bugreport.cgi?bug=962254;msg=23">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=23">mbox</a>, <a href="#22">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="24"></a>
<!-- request_addr: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- time:1591382344 -->
<strong>Acknowledgement sent</strong>
to <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Fri, 05 Jun 2020 18:39:04 GMT) (<a href="bugreport.cgi?bug=962254;msg=25">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=25">mbox</a>, <a href="#24">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="26"></a><a name="msg26"></a><a href="#26">Message #26</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=26">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=26">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200605183631.GA1720057%40eldamar.local%3E&amp;body=On%20Fri%2C%205%20Jun%202020%2020%3A36%3A31%20%2B0200%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%20wrote%3A%0A%3E%20Hi%20Elliott%2C%0A%3E%20%0A%3E%20Thanks%20for%20the%20additional%20information.%0A%3E%20%0A%3E%20On%20Fri%2C%20Jun%2005%2C%202020%20at%2010%3A43%3A49AM%20-0700%2C%20Elliott%20Mitchell%20wrote%3A%0A%3E%20%3E%20On%20Fri%2C%20Jun%2005%2C%202020%20at%2008%3A44%3A26AM%20%2B0200%2C%20Salvatore%20Bonaccorso%20wrote%3A%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20On%20Thu%2C%20Jun%2004%2C%202020%20at%2010%3A16%3A07PM%20-0700%2C%20Elliott%20Mitchell%20wrote%3A%0A%3E%20%3E%20%3E%20%3E%20Somewhere%20between%20linux-image-4.19.0-8-amd64%2F4.19.98%2B1%2Bdeb10u1%20and%0A%3E%20%3E%20%3E%20%3E%20linux-image-4.19.0-9-amd64%2F4.19.118%2B2%20NFS%2C%20in%20particular%20v4%20got%20broken.%0A%3E%20%3E%20%3E%20%3E%20Mounting%20an%20appropriate%20filesystem%20became%20unreliable%2C%20and%20once%20mounted%0A%3E%20%3E%20%3E%20%3E%20behavior%20is%20unpredictable.%0A%3E%20%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20%3E%20In%20particular%20in%20the%20problematic%20case%20%60umask%20022%20%3B%20touch%20foo%20%3B%20ls%20-l%20foo%60%0A%3E%20%3E%20%3E%20%3E%20yields%20a%20-rw-rw-rw-%20file.%0A%3E%20%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20%3E%20This%20occurs%20if%20%2Aboth%2A%20the%20server%20%2Aand%2A%20client%20are%20on%204.19.118%2B2.%20%20I%20have%0A%3E%20%3E%20%3E%20%3E%20confirmed%20this%20does%20NOT%20occur%20if%20the%20server%20is%20on%20a%204.9%20kernel.%20%20I%20have%0A%3E%20%3E%20%3E%20%3E%20also%20confirmed%20this%20does%20NOT%20occur%20if%20the%20client%20is%20on%20a%204.9%20or%0A%3E%20%3E%20%3E%20%3E%204.19.98%2B1%2Bdeb10u1%20kernel.%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20I%20cannot%20reproducde%20the%20described%20behaviour.%20Can%20you%20give%20more%20details%0A%3E%20%3E%20%3E%20on%20your%20setup%3F%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20How%20do%20you%20export%20the%20filesystem%3F%0A%3E%20%3E%20%3E%20What%20is%20the%20underlying%20filesystem%20exported%3F%0A%3E%20%3E%20%3E%20How%20and%20whith%20which%20options%20do%20clients%20mount%20the%20NFS%20share%3F%0A%3E%20%3E%20%0A%3E%20%3E%20Presently%20it%20is%20a%20whole%20directories%20being%20exported%20to%20hosts.%20%20The%0A%3E%20%3E%20filesystem%20on%20the%20server%20is%20ZFS.%0A%3E%20%3E%20%0A%3E%20%3E%20Client%20is%20mounting%20hard%2Cintr.%20%20Client%20is%20using%20cachefilesd%2C%20but%20that%0A%3E%20%3E%20appears%20unrelated%20to%20the%20issue.%0A%3E%20%3E%20%0A%3E%20%3E%20As%20this%20is%20NFSv4%20%28v2%20and%20v3%20are%20thoroughly%20disabled%20on%20the%20server%29%2C%20TCP%0A%3E%20%3E%20is%20being%20used.%20%20The%20port%20is%20non-standard.%0A%3E%20%3E%20%0A%3E%20%3E%20I%27m%20uncertain%20I%20properly%20tried%20server%20on%204.9%2C%20client%20on%204.19.118%2B2%20%28could%0A%3E%20%3E%20be%20this%20is%20strictly%204.19.118%2B2%20NFSv4%20client%20code%29.%0A%3E%20%0A%3E%20This%20now%20let%20some%20rings%20bell%2C%20the%20described%20scenario%20is%20very%20similar%0A%3E%20to%20what%20was%20reported%20in%20https%3A%2F%2Fbugs.debian.org%2F934160%0A%3E%20%0A%3E%20Respectively%0A%3E%20https%3A%2F%2Fbugs.launchpad.net%2Fubuntu%2F%2Bsource%2Fnfs-utils%2F%2Bbug%2F1779736%20and%0A%3E%20https%3A%2F%2Fbugzilla.redhat.com%2Fshow_bug.cgi%3Fid%3D1667761%20.%0A%3E%20%0A%3E%20Salvatore%0A%3E%20%0A%3E%20%0A&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E&amp;subject=Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=carnil%40debian.org" alt="">
<div class="header"><span class="headerfield">From:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">To:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Bug#962254: NFS(v4) broken at 4.19.118-2</div>
<div class="header"><span class="headerfield">Date:</span> Fri, 5 Jun 2020 20:36:31 +0200</div>
</div>
<pre class="message">Hi Elliott,

Thanks for the additional information.

On Fri, Jun 05, 2020 at 10:43:49AM -0700, Elliott Mitchell wrote:
&gt; On Fri, Jun 05, 2020 at 08:44:26AM +0200, Salvatore Bonaccorso wrote:
&gt; &gt; 
&gt; &gt; On Thu, Jun 04, 2020 at 10:16:07PM -0700, Elliott Mitchell wrote:
&gt; &gt; &gt; Somewhere between linux-image-4.19.0-8-amd64/4.19.98+1+deb10u1 and
&gt; &gt; &gt; linux-image-4.19.0-9-amd64/4.19.118+2 NFS, in particular v4 got broken.
&gt; &gt; &gt; Mounting an appropriate filesystem became unreliable, and once mounted
&gt; &gt; &gt; behavior is unpredictable.
&gt; &gt; &gt; 
&gt; &gt; &gt; In particular in the problematic case `umask 022 ; touch foo ; ls -l foo`
&gt; &gt; &gt; yields a -rw-rw-rw- file.
&gt; &gt; &gt; 
&gt; &gt; &gt; This occurs if *both* the server *and* client are on 4.19.118+2.  I have
&gt; &gt; &gt; confirmed this does NOT occur if the server is on a 4.9 kernel.  I have
&gt; &gt; &gt; also confirmed this does NOT occur if the client is on a 4.9 or
&gt; &gt; &gt; 4.19.98+1+deb10u1 kernel.
&gt; &gt; 
&gt; &gt; I cannot reproducde the described behaviour. Can you give more details
&gt; &gt; on your setup?
&gt; &gt; 
&gt; &gt; How do you export the filesystem?
&gt; &gt; What is the underlying filesystem exported?
&gt; &gt; How and whith which options do clients mount the NFS share?
&gt; 
&gt; Presently it is a whole directories being exported to hosts.  The
&gt; filesystem on the server is ZFS.
&gt; 
&gt; Client is mounting hard,intr.  Client is using cachefilesd, but that
&gt; appears unrelated to the issue.
&gt; 
&gt; As this is NFSv4 (v2 and v3 are thoroughly disabled on the server), TCP
&gt; is being used.  The port is non-standard.
&gt; 
&gt; I&#39;m uncertain I properly tried server on 4.9, client on 4.19.118+2 (could
&gt; be this is strictly 4.19.118+2 NFSv4 client code).

This now let some rings bell, the described scenario is very similar
to what was reported in <a href="https://bugs.debian.org/934160">https://bugs.debian.org/934160</a>

Respectively
<a href="https://bugs.launchpad.net/ubuntu/+source/nfs-utils/+bug/1779736">https://bugs.launchpad.net/ubuntu/+source/nfs-utils/+bug/1779736</a> and
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=1667761">https://bugzilla.redhat.com/show_bug.cgi?id=1667761</a> .

Salvatore


</pre>

<div class="infmessage"><hr><p>
<a name="27"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1591396382 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Fri, 05 Jun 2020 22:33:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=28">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=28">mbox</a>, <a href="#27">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="29"></a>
<!-- request_addr: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- time:1591396382 -->
<strong>Acknowledgement sent</strong>
to <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Fri, 05 Jun 2020 22:33:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=30">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=30">mbox</a>, <a href="#29">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="31"></a><a name="msg31"></a><a href="#31">Message #31</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=31">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=31">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200605223133.GA41835%40mattapan.m5p.com%3E&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200605223133.GA41835%40mattapan.m5p.com%3E&amp;subject=Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2&amp;body=On%20Fri%2C%205%20Jun%202020%2015%3A31%3A33%20-0700%20Elliott%20Mitchell%20%3Cehem%2Bdebian%40m5p.com%3E%20wrote%3A%0A%3E%20On%20Fri%2C%20Jun%2005%2C%202020%20at%2008%3A36%3A31PM%20%2B0200%2C%20Salvatore%20Bonaccorso%20wrote%3A%0A%3E%20%3E%20This%20now%20let%20some%20rings%20bell%2C%20the%20described%20scenario%20is%20very%20similar%0A%3E%20%3E%20to%20what%20was%20reported%20in%20https%3A%2F%2Fbugs.debian.org%2F934160%0A%3E%20%3E%20%0A%3E%20%3E%20Respectively%0A%3E%20%3E%20https%3A%2F%2Fbugs.launchpad.net%2Fubuntu%2F%2Bsource%2Fnfs-utils%2F%2Bbug%2F1779736%20and%0A%3E%20%3E%20https%3A%2F%2Fbugzilla.redhat.com%2Fshow_bug.cgi%3Fid%3D1667761%20.%0A%3E%20%0A%3E%20Those%20do%20indeed%20seem%20similar%20and%20could%20be%20the%20same%20bug%2C%20but%20attributing%0A%3E%20the%20bug%20to%20a%20distinct%20package.%20%20Alternatively%20this%20is%20several%20bugs%20and%0A%3E%20%2Aall%2A%20of%20them%20need%20to%20be%20present%20for%20the%20issue%20to%20occur.%0A%3E%20%0A%3E%20Seems%20I%27ll%20need%20to%20do%20some%20checking%20of%20the%20VM%20with%20the%20earlier%20kernel%0A%3E%20and%20see%20which%20updates%20cause%20it%20to%20break...%0A%3E%20%0A%3E%20%0A%3E%20--%20%0A%3E%20%28%5C___%28%5C___%28%5C______%20%20%20%20%20%20%20%20%20%20--%3D%3E%208-%29%20EHM%20%3C%3D--%20%20%20%20%20%20%20%20%20%20______%2F%29___%2F%29___%2F%29%0A%3E%20%20%5CBS%20%28%20%20%20%20%7C%20%20%20%20%20%20%20%20%20ehem%2Bsigmsg%40m5p.com%20%20PGP%2087145445%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%29%20%20%20%2F%0A%3E%20%20%20%5C_CS%5C%20%20%20%7C%20%20_____%20%20-O%20%23include%20%3Cstddisclaimer.h%3E%20O-%20%20%20_____%20%20%7C%20%20%20%2F%20%20_%2F%0A%3E%208A19%5C___%5C_%7C_%2F58D2%207E3D%20DDF4%207BA6%20%3C-PGP-%3E%2041D1%20B375%2037D0%208714%5C_%7C_%2F___%2F5445%0A%3E%20%0A%3E%20%0A%3E%20%0A%3E%20%0A">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=ehem%2Bdebian%40m5p.com" alt="">
<div class="header"><span class="headerfield">From:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> 962254@bugs.debian.org</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Bug#962254: NFS(v4) broken at 4.19.118-2</div>
<div class="header"><span class="headerfield">Date:</span> Fri, 5 Jun 2020 15:31:33 -0700</div>
</div>
<pre class="message">On Fri, Jun 05, 2020 at 08:36:31PM +0200, Salvatore Bonaccorso wrote:
&gt; This now let some rings bell, the described scenario is very similar
&gt; to what was reported in <a href="https://bugs.debian.org/934160">https://bugs.debian.org/934160</a>
&gt; 
&gt; Respectively
&gt; <a href="https://bugs.launchpad.net/ubuntu/+source/nfs-utils/+bug/1779736">https://bugs.launchpad.net/ubuntu/+source/nfs-utils/+bug/1779736</a> and
&gt; <a href="https://bugzilla.redhat.com/show_bug.cgi?id=1667761">https://bugzilla.redhat.com/show_bug.cgi?id=1667761</a> .

Those do indeed seem similar and could be the same bug, but attributing
the bug to a distinct package.  Alternatively this is several bugs and
*all* of them need to be present for the issue to occur.

Seems I&#39;ll need to do some checking of the VM with the earlier kernel
and see which updates cause it to break...


-- 
(\___(\___(\______          --=&gt; 8-) EHM &lt;=--          ______/)___/)___/)
 \BS (    |         ehem+sigmsg@m5p.com  PGP 87145445         |    )   /
  \_CS\   |  _____  -O #include &lt;stddisclaimer.h&gt; O-   _____  |   /  _/
8A19\___\_|_/58D2 7E3D DDF4 7BA6 &lt;-PGP-&gt; 41D1 B375 37D0 8714\_|_/___/5445




</pre>

<div class="msgreceived"><hr><p>
<a name="32"></a>
<!-- command:tag -->
<!-- requester: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- request_addr: 934160-submit@bugs.debian.org -->
<!-- time:1591667822 -->
<!-- new_data:
$new_data = {
              &#39;keywords&#39; =&gt; &#39;security moreinfo unreproducible&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;keywords&#39; =&gt; &#39;unreproducible moreinfo&#39;
            };
-->
<strong>Added tag(s) security.</strong>
Request was from <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>
to <code>934160-submit@bugs.debian.org</code>.
 (Tue, 09 Jun 2020 01:57:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=33">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=33">mbox</a>, <a href="#32">link</a>).</p></p></div>

<div class="msgreceived"><hr><p>
<a name="34"></a>
<!-- command:tag -->
<!-- requester: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- request_addr: 934160-submit@bugs.debian.org -->
<!-- time:1591667823 -->
<!-- new_data:
$new_data = {
              &#39;keywords&#39; =&gt; &#39;moreinfo security&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;keywords&#39; =&gt; &#39;security moreinfo unreproducible&#39;
            };
-->
<strong>Removed tag(s) unreproducible.</strong>
Request was from <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>
to <code>934160-submit@bugs.debian.org</code>.
 (Tue, 09 Jun 2020 01:57:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=35">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=35">mbox</a>, <a href="#34">link</a>).</p></p></div>

<div class="msgreceived"><hr><p>
<a name="36"></a>
<!-- requester: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- request_addr: 934160-submit@bugs.debian.org -->
<!-- time:1591667824 -->
<strong>Severity set to &#39;grave&#39; from &#39;important&#39;</strong>
Request was from <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>
to <code>934160-submit@bugs.debian.org</code>.
 (Tue, 09 Jun 2020 01:57:04 GMT) (<a href="bugreport.cgi?bug=962254;msg=37">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=37">mbox</a>, <a href="#36">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="38"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1591667826 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Tue, 09 Jun 2020 01:57:06 GMT) (<a href="bugreport.cgi?bug=962254;msg=39">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=39">mbox</a>, <a href="#38">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="40"></a>
<!-- request_addr: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- time:1591667826 -->
<strong>Acknowledgement sent</strong>
to <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Tue, 09 Jun 2020 01:57:06 GMT) (<a href="bugreport.cgi?bug=962254;msg=41">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=41">mbox</a>, <a href="#40">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="42"></a><a name="msg42"></a><a href="#42">Message #42</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=42">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=42">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200609015327.GA5957%40mattapan.m5p.com%3E&amp;subject=Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200609015327.GA5957%40mattapan.m5p.com%3E&amp;body=On%20Mon%2C%208%20Jun%202020%2018%3A53%3A27%20-0700%20Elliott%20Mitchell%20%3Cehem%2Bdebian%40m5p.com%3E%20wrote%3A%0A%3E%20Control%3A%20tags%20962254%20%2Bsecurity%20-unreproducible%0A%3E%20Control%3A%20severity%20962254%20grave%0A%3E%20%0A%3E%20On%20Fri%2C%20Jun%2005%2C%202020%20at%2008%3A36%3A31PM%20%2B0200%2C%20Salvatore%20Bonaccorso%20wrote%3A%0A%3E%20%3E%20This%20now%20let%20some%20rings%20bell%2C%20the%20described%20scenario%20is%20very%20similar%0A%3E%20%3E%20to%20what%20was%20reported%20in%20https%3A%2F%2Fbugs.debian.org%2F934160%0A%3E%20%3E%20%0A%3E%20%3E%20Respectively%0A%3E%20%3E%20https%3A%2F%2Fbugs.launchpad.net%2Fubuntu%2F%2Bsource%2Fnfs-utils%2F%2Bbug%2F1779736%20and%0A%3E%20%3E%20https%3A%2F%2Fbugzilla.redhat.com%2Fshow_bug.cgi%3Fid%3D1667761%20.%0A%3E%20%0A%3E%20Upon%20more%20experimentation%20I%20continue%20to%20favor%20this%20being%20a%20kernel%20bug%0A%3E%20%28src%3Alinux%2C%20bug%20%23962254%29%20and%20not%20a%20bug%20with%20nfs-common.%0A%3E%20%0A%3E%20Setting%20vers%3D4.1%20works%20around%20the%20issue%2C%20so%20this%20is%20%2Astrictly%2A%20NFSv4.2.%0A%3E%20%0A%3E%20I%20was%20able%20to%20reproduce%20this%20issue%20on%20a%20system%20with%20nfs-common%0A%3E%201%3A1.3.4-2.1%20and%20a%204.19.118-2%20kernel.%0A%3E%20%0A%3E%20Based%20upon%20what%20I%27ve%20observed%20I%20believe%20this%20requires%20a%20recent%20kernel%20on%0A%3E%20%2Aboth%2A%20NFS%20client%20and%20NFS%20server.%20%20A%20NFS%20client%20with%204.9%20connecting%20to%20a%0A%3E%20NFS%20server%20with%204.19%20does%20NOT%20experience%20this%20issue.%0A%3E%20%0A%3E%20I%20suspect%20my%20earlier%20assessment%20of%20this%20appearing%20between%204.19.98-1%20and%0A%3E%204.19.118-2%20was%20erroneous.%20%20I%20think%20I%20was%20mislead%20by%20the%20order%20of%0A%3E%20computers%20being%20updated%2C%20and%20a%20NFS%20client%20with%204.19%20connecting%20to%20a%20NFS%0A%3E%20server%20with%204.9%20also%20does%20not%20experience%20this%20issue.%0A%3E%20%0A%3E%20From%20https%3A%2F%2Fbugs.launchpad.net%2Fubuntu%2F%2Bsource%2Fnfs-utils%2F%2Bbug%2F1779736%0A%3E%20this%20bug%20appeared%20somewhere%20between%20Linux%20kernels%204.9%20and%204.15.%0A%3E%20%0A%3E%20I%20concur%20with%20John%20Goerzen%27s%20assessment%20of%20this%20qualifying%20as%20grave%20due%0A%3E%20to%20its%20security%20implications.%0A%3E%20%0A%3E%20%0A%3E%20--%20%0A%3E%20%28%5C___%28%5C___%28%5C______%20%20%20%20%20%20%20%20%20%20--%3D%3E%208-%29%20EHM%20%3C%3D--%20%20%20%20%20%20%20%20%20%20______%2F%29___%2F%29___%2F%29%0A%3E%20%20%5CBS%20%28%20%20%20%20%7C%20%20%20%20%20%20%20%20%20ehem%2Bsigmsg%40m5p.com%20%20PGP%2087145445%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%29%20%20%20%2F%0A%3E%20%20%20%5C_CS%5C%20%20%20%7C%20%20_____%20%20-O%20%23include%20%3Cstddisclaimer.h%3E%20O-%20%20%20_____%20%20%7C%20%20%20%2F%20%20_%2F%0A%3E%208A19%5C___%5C_%7C_%2F58D2%207E3D%20DDF4%207BA6%20%3C-PGP-%3E%2041D1%20B375%2037D0%208714%5C_%7C_%2F___%2F5445%0A%3E%20%0A%3E%20%0A%3E%20%0A%3E%20%0A">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=ehem%2Bdebian%40m5p.com" alt="">
<div class="header"><span class="headerfield">From:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> 962254@bugs.debian.org, 934160@bugs.debian.org</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Bug#962254: NFS(v4) broken at 4.19.118-2</div>
<div class="header"><span class="headerfield">Date:</span> Mon, 8 Jun 2020 18:53:27 -0700</div>
</div>
<pre class="message">Control: tags 962254 +security -unreproducible
Control: severity 962254 grave

On Fri, Jun 05, 2020 at 08:36:31PM +0200, Salvatore Bonaccorso wrote:
&gt; This now let some rings bell, the described scenario is very similar
&gt; to what was reported in <a href="https://bugs.debian.org/934160">https://bugs.debian.org/934160</a>
&gt; 
&gt; Respectively
&gt; <a href="https://bugs.launchpad.net/ubuntu/+source/nfs-utils/+bug/1779736">https://bugs.launchpad.net/ubuntu/+source/nfs-utils/+bug/1779736</a> and
&gt; <a href="https://bugzilla.redhat.com/show_bug.cgi?id=1667761">https://bugzilla.redhat.com/show_bug.cgi?id=1667761</a> .

Upon more experimentation I continue to favor this being a kernel bug
(src:linux, bug #962254) and not a bug with nfs-common.

Setting vers=4.1 works around the issue, so this is *strictly* NFSv4.2.

I was able to reproduce this issue on a system with nfs-common
1:1.3.4-2.1 and a 4.19.118-2 kernel.

Based upon what I&#39;ve observed I believe this requires a recent kernel on
*both* NFS client and NFS server.  A NFS client with 4.9 connecting to a
NFS server with 4.19 does NOT experience this issue.

I suspect my earlier assessment of this appearing between 4.19.98-1 and
4.19.118-2 was erroneous.  I think I was mislead by the order of
computers being updated, and a NFS client with 4.19 connecting to a NFS
server with 4.9 also does not experience this issue.

From <a href="https://bugs.launchpad.net/ubuntu/+source/nfs-utils/+bug/1779736">https://bugs.launchpad.net/ubuntu/+source/nfs-utils/+bug/1779736</a>
this bug appeared somewhere between Linux kernels 4.9 and 4.15.

I concur with John Goerzen&#39;s assessment of this qualifying as grave due
to its security implications.


-- 
(\___(\___(\______          --=&gt; 8-) EHM &lt;=--          ______/)___/)___/)
 \BS (    |         ehem+sigmsg@m5p.com  PGP 87145445         |    )   /
  \_CS\   |  _____  -O #include &lt;stddisclaimer.h&gt; O-   _____  |   /  _/
8A19\___\_|_/58D2 7E3D DDF4 7BA6 &lt;-PGP-&gt; 41D1 B375 37D0 8714\_|_/___/5445




</pre>

<div class="msgreceived"><hr><p>
<a name="43"></a>
<!-- command:tag -->
<!-- requester: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- request_addr: control@bugs.debian.org -->
<!-- time:1591676463 -->
<!-- new_data:
$new_data = {
              &#39;keywords&#39; =&gt; &#39;security&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;keywords&#39; =&gt; &#39;moreinfo security&#39;
            };
-->
<strong>Removed tag(s) moreinfo.</strong>
Request was from <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>
to <code>control@bugs.debian.org</code>.
 (Tue, 09 Jun 2020 04:21:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=44">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=44">mbox</a>, <a href="#43">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="45"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1591915143 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Thu, 11 Jun 2020 22:39:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=46">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=46">mbox</a>, <a href="#45">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="47"></a>
<!-- request_addr: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- time:1591915143 -->
<strong>Acknowledgement sent</strong>
to <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Thu, 11 Jun 2020 22:39:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=48">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=48">mbox</a>, <a href="#47">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="49"></a><a name="msg49"></a><a href="#49">Message #49</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=49">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=49">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200611223711.GA37917%40mattapan.m5p.com%3E&amp;body=On%20Thu%2C%2011%20Jun%202020%2015%3A37%3A11%20-0700%20Elliott%20Mitchell%20%3Cehem%2Bdebian%40m5p.com%3E%20wrote%3A%0A%3E%20Bit%20more%20experimentation%20on%20this%20issue.%0A%3E%20%0A%3E%20I%20tried%20a%20very%20small%20C%20program%20meant%20to%20create%20files%20with%20fewer%0A%3E%20permissions%20bits%20set.%20%20This%20succeeded%20which%20strengthens%20the%20theory%20of%0A%3E%20the%20umask%20getting%20ignored.%0A%3E%20%0A%3E%20I%20haven%27t%20seen%20anything%20hinting%20whether%20this%20is%20more%20a%20client%20or%20server%0A%3E%20issue.%0A%3E%20%0A%3E%20I%20can%20speculate%20perhaps%20somewhere%20between%204.9%20and%204.15%20the%20NFS%20client%0A%3E%20code%20stepped%20closer%20to%20proper%20the%20%22proper%22%204.2%20protocol.%20%20If%20a%0A%3E%20corresponding%20NFS%20server%20was%20slow%20at%20getting%20merged%2C%20what%20we%27re%20seeing%0A%3E%20could%20happen.%0A%3E%20%0A%3E%20Alternatively%20someone%20was%20trying%20to%20get%20a%20Linux%20NFS%20v4.2%20client%20to%20work%0A%3E%20better%20with%20a%20different%20NFS%20v4.2%20server%2C%20so%20they%20fixed%20Linux%27s%20NFS%20v4.2%0A%3E%20client.%20%20Yet%20they%20failed%20to%20test%20with%20Linux%27s%20v4.2%20server.%0A%3E%20%0A%3E%20%0A%3E%20This%20though%20is%20speculation.%20%20All%20I%20can%20say%20is%20sometime%20between%20kernels%0A%3E%204.9%20and%204.15%2C%20NFS%20v4.2%20got%20broken.%20%20There%20are%20hints%20this%20is%20related%20to%0A%3E%20handling%20of%20umask.%0A%3E%20%0A%3E%20%0A%3E%20--%20%0A%3E%20%28%5C___%28%5C___%28%5C______%20%20%20%20%20%20%20%20%20%20--%3D%3E%208-%29%20EHM%20%3C%3D--%20%20%20%20%20%20%20%20%20%20______%2F%29___%2F%29___%2F%29%0A%3E%20%20%5CBS%20%28%20%20%20%20%7C%20%20%20%20%20%20%20%20%20ehem%2Bsigmsg%40m5p.com%20%20PGP%2087145445%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%29%20%20%20%2F%0A%3E%20%20%20%5C_CS%5C%20%20%20%7C%20%20_____%20%20-O%20%23include%20%3Cstddisclaimer.h%3E%20O-%20%20%20_____%20%20%7C%20%20%20%2F%20%20_%2F%0A%3E%208A19%5C___%5C_%7C_%2F58D2%207E3D%20DDF4%207BA6%20%3C-PGP-%3E%2041D1%20B375%2037D0%208714%5C_%7C_%2F___%2F5445%0A%3E%20%0A%3E%20%0A%3E%20%0A%3E%20%0A&amp;subject=Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=ehem%2Bdebian%40m5p.com" alt="">
<div class="header"><span class="headerfield">From:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> 962254@bugs.debian.org</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Bug#962254: NFS(v4) broken at 4.19.118-2</div>
<div class="header"><span class="headerfield">Date:</span> Thu, 11 Jun 2020 15:37:11 -0700</div>
</div>
<pre class="message">Bit more experimentation on this issue.

I tried a very small C program meant to create files with fewer
permissions bits set.  This succeeded which strengthens the theory of
the umask getting ignored.

I haven&#39;t seen anything hinting whether this is more a client or server
issue.

I can speculate perhaps somewhere between 4.9 and 4.15 the NFS client
code stepped closer to proper the &quot;proper&quot; 4.2 protocol.  If a
corresponding NFS server was slow at getting merged, what we&#39;re seeing
could happen.

Alternatively someone was trying to get a Linux NFS v4.2 client to work
better with a different NFS v4.2 server, so they fixed Linux&#39;s NFS v4.2
client.  Yet they failed to test with Linux&#39;s v4.2 server.


This though is speculation.  All I can say is sometime between kernels
4.9 and 4.15, NFS v4.2 got broken.  There are hints this is related to
handling of umask.


-- 
(\___(\___(\______          --=&gt; 8-) EHM &lt;=--          ______/)___/)___/)
 \BS (    |         ehem+sigmsg@m5p.com  PGP 87145445         |    )   /
  \_CS\   |  _____  -O #include &lt;stddisclaimer.h&gt; O-   _____  |   /  _/
8A19\___\_|_/58D2 7E3D DDF4 7BA6 &lt;-PGP-&gt; 41D1 B375 37D0 8714\_|_/___/5445




</pre>

<div class="infmessage"><hr><p>
<a name="50"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592053022 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Sat, 13 Jun 2020 12:57:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=51">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=51">mbox</a>, <a href="#50">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="52"></a>
<!-- request_addr: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- time:1592053022 -->
<strong>Acknowledgement sent</strong>
to <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Sat, 13 Jun 2020 12:57:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=53">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=53">mbox</a>, <a href="#52">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="54"></a><a name="msg54"></a><a href="#54">Message #54</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=54">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=54">mbox</a>, <a href="mailto:962254@bugs.debian.org?subject=Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%20ZFS%20%28with%0A%20acltype%3Doff%29%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E&amp;body=On%20Sat%2C%2013%20Jun%202020%2014%3A54%3A31%20%2B0200%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%20wrote%3A%0A%3E%20Hi%20Elliott%2C%0A%3E%20%0A%3E%20%5BI%27m%20adding%20linux-nfs%20upstream%20hopefully%20J.%20Bruce%20Fields%20or%20others%20can%0A%3E%20help%20clarifying%5D%0A%3E%20%0A%3E%20On%20Thu%2C%20Jun%2011%2C%202020%20at%2003%3A37%3A11PM%20-0700%2C%20Elliott%20Mitchell%20wrote%3A%0A%3E%20%3E%20Bit%20more%20experimentation%20on%20this%20issue.%0A%3E%20%3E%20%0A%3E%20%3E%20I%20tried%20a%20very%20small%20C%20program%20meant%20to%20create%20files%20with%20fewer%0A%3E%20%3E%20permissions%20bits%20set.%20%20This%20succeeded%20which%20strengthens%20the%20theory%20of%0A%3E%20%3E%20the%20umask%20getting%20ignored.%0A%3E%20%3E%20%0A%3E%20%3E%20I%20haven%27t%20seen%20anything%20hinting%20whether%20this%20is%20more%20a%20client%20or%20server%0A%3E%20%3E%20issue.%0A%3E%20%3E%20%0A%3E%20%3E%20I%20can%20speculate%20perhaps%20somewhere%20between%204.9%20and%204.15%20the%20NFS%20client%0A%3E%20%3E%20code%20stepped%20closer%20to%20proper%20the%20%22proper%22%204.2%20protocol.%20%20If%20a%0A%3E%20%3E%20corresponding%20NFS%20server%20was%20slow%20at%20getting%20merged%2C%20what%20we%27re%20seeing%0A%3E%20%3E%20could%20happen.%0A%3E%20%3E%20%0A%3E%20%3E%20Alternatively%20someone%20was%20trying%20to%20get%20a%20Linux%20NFS%20v4.2%20client%20to%20work%0A%3E%20%3E%20better%20with%20a%20different%20NFS%20v4.2%20server%2C%20so%20they%20fixed%20Linux%27s%20NFS%20v4.2%0A%3E%20%3E%20client.%20%20Yet%20they%20failed%20to%20test%20with%20Linux%27s%20v4.2%20server.%0A%3E%20%3E%20%0A%3E%20%3E%20%0A%3E%20%3E%20This%20though%20is%20speculation.%20%20All%20I%20can%20say%20is%20sometime%20between%20kernels%0A%3E%20%3E%204.9%20and%204.15%2C%20NFS%20v4.2%20got%20broken.%20%20There%20are%20hints%20this%20is%20related%20to%0A%3E%20%3E%20handling%20of%20umask.%0A%3E%20%20%0A%3E%20I%20was%20initially%20confused%20because%20of%20the%20mentioning%20of%20only%20appearing%0A%3E%20with%20the%20update%20to%204.19.118-2%20but%20this%20is%20now%20cleared%20up%2C%20so%20it%20shows%0A%3E%20up%20when%20changing%20from%204.9.x%20from%20stretch%20to%204.19.x.%0A%3E%20%0A%3E%20Now%20I%27m%20quite%20unsure%20if%20this%20should%20and%20is%20to%20be%20considered%20a%20Linux%0A%3E%20kernel%20issue.%20What%20follows%20is%20just%20what%20I%20found%20with%20respect%20of%20the%0A%3E%20mentioned%20behaviour.%20There%20is%20a%20specific%20aspect%20of%20the%20NFSv4.2%0A%3E%20implementation%3A%0A%3E%20%0A%3E%20In%20upstream%2C%20with%20%5Bnfsv4.2-umask-support%5D%2C%20%5B47057abde515%5D%20NFSv4.2%0A%3E%20support%20was%20added.%20The%20repsective%20RFC%20describing%20it%20is%20%5BRFC8275%5D.%0A%3E%20%0A%3E%20%5Bnfsv4.2-umask-support%5D%3A%20%3Chttps%3A%2F%2Flore.kernel.org%2Flinux-nfs%2F1477686228-12158-1-git-send-email-bfields%40redhat.com%2F%3E%0A%3E%20%5B47057abde515%5D%3A%20%3Chttps%3A%2F%2Fgit.kernel.org%2Flinus%2F47057abde515155a4fee53038e7772d6b387e0aa%3E%0A%3E%20%5BRFC8275%5D%3A%20%3Chttps%3A%2F%2Ftools.ietf.org%2Fhtml%2Frfc8275%3E%0A%3E%20%0A%3E%20Since%2C%20they%20allow%20the%20umask%20to%20be%20ignored%20in%20the%20presence%20of%0A%3E%20inheritable%20NFSv4%20ACLs.%0A%3E%20%0A%3E%20Now%20what%20is%20or%20will%20be%20confusing%20is%20that%20the%20behaviour%20is%20reproducible%0A%3E%20with%20ZFS%20default%20of%20acltype%3Doff%20%28aclinherit%3Drestricted%2C%20sharenfs%3Doff%29.%0A%3E%20%0A%3E%20Reproducing%20the%20issue%20is%20easy%20as%20follows%20%28all%20done%20on%20Debian%20unstable%0A%3E%20to%20verify%20the%20behaviours%20can%20be%20triggered%20there%20as%20well%20with%20more%0A%3E%20current%205.6.14-2%2C%20zfs-linux%20on%200.8.4-1%29%3A%0A%3E%20%0A%3E%20%23%20zpool%20create%20zfs_test%20%2Fdev%2Fvdb%0A%3E%20%0A%3E%20and%20exporting%20%2Fzfs_test%20in%20%2Fetc%2Fexports%20as%0A%3E%20%0A%3E%20%2Fzfs_test%20192.168.122.1%2F24%28rw%2Csync%2Cno_subtree_check%2Cno_root_squash%29%0A&amp;In-Reply-To=%3C20200613125431.GA349352%40eldamar.local%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=carnil%40debian.org" alt="">
<div class="header"><span class="headerfield">From:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">To:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> 962254@bugs.debian.org, linux-nfs@vger.kernel.org, bfields@redhat.com,
	agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Umask ignored when mounting NFSv4.2 share of an exported ZFS (with
 acltype=off) (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Sat, 13 Jun 2020 14:54:31 +0200</div>
</div>
<pre class="message">Hi Elliott,

[I&#39;m adding linux-nfs upstream hopefully J. Bruce Fields or others can
help clarifying]

On Thu, Jun 11, 2020 at 03:37:11PM -0700, Elliott Mitchell wrote:
&gt; Bit more experimentation on this issue.
&gt; 
&gt; I tried a very small C program meant to create files with fewer
&gt; permissions bits set.  This succeeded which strengthens the theory of
&gt; the umask getting ignored.
&gt; 
&gt; I haven&#39;t seen anything hinting whether this is more a client or server
&gt; issue.
&gt; 
&gt; I can speculate perhaps somewhere between 4.9 and 4.15 the NFS client
&gt; code stepped closer to proper the &quot;proper&quot; 4.2 protocol.  If a
&gt; corresponding NFS server was slow at getting merged, what we&#39;re seeing
&gt; could happen.
&gt; 
&gt; Alternatively someone was trying to get a Linux NFS v4.2 client to work
&gt; better with a different NFS v4.2 server, so they fixed Linux&#39;s NFS v4.2
&gt; client.  Yet they failed to test with Linux&#39;s v4.2 server.
&gt; 
&gt; 
&gt; This though is speculation.  All I can say is sometime between kernels
&gt; 4.9 and 4.15, NFS v4.2 got broken.  There are hints this is related to
&gt; handling of umask.
 
I was initially confused because of the mentioning of only appearing
with the update to 4.19.118-2 but this is now cleared up, so it shows
up when changing from 4.9.x from stretch to 4.19.x.

Now I&#39;m quite unsure if this should and is to be considered a Linux
kernel issue. What follows is just what I found with respect of the
mentioned behaviour. There is a specific aspect of the NFSv4.2
implementation:

In upstream, with [nfsv4.2-umask-support], [47057abde515] NFSv4.2
support was added. The repsective RFC describing it is [RFC8275].

[nfsv4.2-umask-support]: &lt;<a href="https://lore.kernel.org/linux-nfs/1477686228-12158-1-git-send-email-bfields@redhat.com/">https://lore.kernel.org/linux-nfs/1477686228-12158-1-git-send-email-bfields@redhat.com/</a>&gt;
[47057abde515]: &lt;<a href="https://git.kernel.org/linus/47057abde515155a4fee53038e7772d6b387e0aa">https://git.kernel.org/linus/47057abde515155a4fee53038e7772d6b387e0aa</a>&gt;
[RFC8275]: &lt;<a href="https://tools.ietf.org/html/rfc8275">https://tools.ietf.org/html/rfc8275</a>&gt;

Since, they allow the umask to be ignored in the presence of
inheritable NFSv4 ACLs.

Now what is or will be confusing is that the behaviour is reproducible
with ZFS default of acltype=off (aclinherit=restricted, sharenfs=off).

Reproducing the issue is easy as follows (all done on Debian unstable
to verify the behaviours can be triggered there as well with more
current 5.6.14-2, zfs-linux on 0.8.4-1):

# zpool create zfs_test /dev/vdb

and exporting /zfs_test in /etc/exports as

/zfs_test 192.168.122.1/24(rw,sync,no_subtree_check,no_root_squash)

The properties of zfs_test would be:

# zfs get acltype,aclinherit,sharenfs zfs_test
NAME      PROPERTY    VALUE          SOURCE
zfs_test  acltype     off            local
zfs_test  aclinherit  restricted     local
zfs_test  sharenfs    off            default

And reproducing then with

# mount -t nfs 192.168.122.150:/zfs_test /mnt
# mkdir /mnt/foo &amp;&amp; ls -ld /mnt/foo &amp;&amp; rmdir /mnt/foo
drwxrwxrwx 2 root root 2 Jun 13 14:25 /mnt/fo
# umount /mnt

The comment from J. Bruce Fields, in
<a href="https://bugzilla.redhat.com/show_bug.cgi?id=1667761#c1">https://bugzilla.redhat.com/show_bug.cgi?id=1667761#c1</a> can help debug
it further:

&gt; To start debugging this, I&#39;d recommend looking running wireshark to
&gt; sniff traffic while running your reproducer (mount, mkdir) and
&gt; compare to what&#39;s expected from the umask RFC.  Somewhere there
&gt; should be a getattr from the client for the supported_attrs
&gt; attribute, and the reply from the server will probably indicate
&gt; support for the new mode_umask attribute.  If you find the CREATE
&gt; operation that creates the new directory, you should see the client
&gt; set the mode_umask attribute, with the mode part set to the open
&gt; mode and the umask to the process umask.  If those values look
&gt; right, then the problem is likely on the server side.

In fact in sniffing the traffic, there, the gettattr from the client and the
server does indicate support for the new mode_umask. Then later in the CREATE
operation, the client sets the mode_umask attribute, with mode part set to
&#39;0777&#39; and umask to &#39;022&#39;. The mode replied is then as well &#39;0777&#39;.

If further needed to debug we should try to distill a sniff with
wireshark providing the repsective pcap.

<a href="https://bugzilla.redhat.com/show_bug.cgi?id=1667761">https://bugzilla.redhat.com/show_bug.cgi?id=1667761</a>

did not further contain specific information on followups.

<a href="https://bugs.launchpad.net/ubuntu/+source/nfs-utils/+bug/1779736">https://bugs.launchpad.net/ubuntu/+source/nfs-utils/+bug/1779736</a>

indicated this was specifically observed on ZFS on Linux only. Seth
Arnold&#39;s answer seem to be inline with that that the issue is more on
the ZFS on Linux side and the issue keeps biting people a bit
unexpectedly. Why does this break with ACL off settings?

But there was at least one other (but again without further
detail/followups) that it was observed on an export from OpenWRT, but
no specific details here:

<a href="https://bugs.openwrt.org/index.php?do=details&amp;task_id=2581">https://bugs.openwrt.org/index.php?do=details&amp;task_id=2581</a>

Both Debian bugs itself were as well with underlying ZFS filesystem exported:
<a href="https://bugs.debian.org/934160">https://bugs.debian.org/934160</a>
<a href="https://bugs.debian.org/962254">https://bugs.debian.org/962254</a>

Any hint on were to pin-point the issue? Both on Linux anf ZFS on
Linux side or only on one of the components?

Regards,
Salvatore


</pre>

<div class="infmessage"><hr><p>
<a name="55"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592074082 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Sat, 13 Jun 2020 18:48:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=56">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=56">mbox</a>, <a href="#55">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="57"></a>
<!-- request_addr: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- time:1592074082 -->
<strong>Acknowledgement sent</strong>
to <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Sat, 13 Jun 2020 18:48:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=58">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=58">mbox</a>, <a href="#57">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="59"></a><a name="msg59"></a><a href="#59">Message #59</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=59">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=59">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200613184527.GA54221%40mattapan.m5p.com%3E&amp;body=On%20Sat%2C%2013%20Jun%202020%2011%3A45%3A27%20-0700%20Elliott%20Mitchell%20%3Cehem%2Bdebian%40m5p.com%3E%20wrote%3A%0A%3E%20On%20Sat%2C%20Jun%2013%2C%202020%20at%2002%3A54%3A31PM%20%2B0200%2C%20Salvatore%20Bonaccorso%20wrote%3A%0A%3E%20%3E%20indicated%20this%20was%20specifically%20observed%20on%20ZFS%20on%20Linux%20only.%20Seth%0A%3E%20%3E%20Arnold%27s%20answer%20seem%20to%20be%20inline%20with%20that%20that%20the%20issue%20is%20more%20on%0A%3E%20%3E%20the%20ZFS%20on%20Linux%20side%20and%20the%20issue%20keeps%20biting%20people%20a%20bit%0A%3E%20%3E%20unexpectedly.%20Why%20does%20this%20break%20with%20ACL%20off%20settings%3F%0A%3E%20%0A%3E%20I%20disagree%20with%20this%20assessment.%20%20All%20of%20the%20reporters%20have%20been%20using%0A%3E%20ZFS%2C%20but%20this%20could%20indicate%20an%20absence%20of%20testers%20using%20other%0A%3E%20filesystems.%20%20We%20need%20someone%20with%20a%20NFS%20server%20which%20has%20a%204.15%2B%20kernel%0A%3E%20and%20uses%20a%20different%20filesystem%20which%20supports%20ACLs.%0A%3E%20%0A%3E%20I%27m%20though%20doubtful%20ACLs%20are%20related%20to%20the%20actual%20problem.%20%20My%0A%3E%20impression%20of%20what%20I%27ve%20read%20is%20they%27re%20a%20useful%20tool%20to%20work%20around%20the%0A%3E%20problem%2C%20but%20not%20related%20to%20the%20actual%20cause.%0A%3E%20%0A%3E%20%0A%3E%20%3E%20But%20there%20was%20at%20least%20one%20other%20%28but%20again%20without%20further%0A%3E%20%3E%20detail%2Ffollowups%29%20that%20it%20was%20observed%20on%20an%20export%20from%20OpenWRT%2C%20but%0A%3E%20%3E%20no%20specific%20details%20here%3A%0A%3E%20%3E%20%0A%3E%20%3E%20https%3A%2F%2Fbugs.openwrt.org%2Findex.php%3Fdo%3Ddetails%26task_id%3D2581%0A%3E%20%0A%3E%20This%20appears%20to%20be%20the%20same%20reporter%20as%20the%20RedHat%20bug%20report%20%28comment%203%0A%3E%20on%20the%20RedHat%20report%29.%20%20This%20is%20a%20report%20for%20the%20server%20portion%20of%20the%0A%3E%20reporter%27s%20setup.%0A%3E%20%0A%3E%20Analyzing%20the%20setup%2C%20I%20disagree%20with%20one%20of%20the%20prior%20assessment%20of%20this%0A%3E%20report.%20%20This%20is%20OpenWRT%20on%20x86_64%20hardware%20which%20would%20suggest%20a%0A%3E%20high-end%20router%20or%20embedded%20device.%20%20Such%20might%20well%20have%20ECC%20memory%20and%0A%3E%20a%20processor%20fast%20enough%20to%20handle%20ZFS.%0A%3E%20%0A%3E%20%0A%3E%20%0A%3E%20Let%20me%20add%20one%20more%20data%20point.%20%20I%20had%20been%20thinking%20I%20might%20need%20the%0A%3E%20additional%20features%20in%20Linux-ZFS%200.7.12.%20%20As%20such%20my%20NFS%20server%20had%20been%0A%3E%20running%20a%204.9%20kernel%20with%20Debian%27s%20ZFS%200.7.12-2%2Bdebg10u1~bpo9%2B1%20packages.%0A%3E%20Now%20with%20the%20problem%20manifesting%20my%20NFS%20server%20is%20running%20a%204.19%20kernel%0A%3E%20with%20Debian%27s%20ZFS%200.7.12-2%2Bdeb10u2%20packages.%0A%3E%20%0A%3E%20I%20could%20well%20believe%20the%20actual%20root%20cause%20is%20a%20problem%20with%20the%0A%3E%20Linux-ZFS%20implementation.%20%20What%20manifested%20the%20problem%20though%20seems%20to%20be%0A%3E%20in%20Linux%27s%20NFS%20implementation%20between%204.9%20and%204.15.%20%20ie%20Linux-ZFS%0A%3E%20implemented%20%2Fsomething%2F%20which%20worked%20when%20implemented%2C%20but%20may%20not%20have%0A%3E%20properly%20implemented%20the%20intended%20API%20and%20was%20broken%20by%20Linux-NFS.%0A%3E%20%0A%3E%20%0A%3E%20--%20%0A%3E%20%28%5C___%28%5C___%28%5C______%20%20%20%20%20%20%20%20%20%20--%3D%3E%208-%29%20EHM%20%3C%3D--%20%20%20%20%20%20%20%20%20%20______%2F%29___%2F%29___%2F%29%0A%3E%20%20%5CBS%20%28%20%20%20%20%7C%20%20%20%20%20%20%20%20%20ehem%2Bsigmsg%40m5p.com%20%20PGP%2087145445%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%29%20%20%20%2F%0A%3E%20%20%20%5C_CS%5C%20%20%20%7C%20%20_____%20%20-O%20%23include%20%3Cstddisclaimer.h%3E%20O-%20%20%20_____%20%20%7C%20%20%20%2F%20%20_%2F%0A%3E%208A19%5C___%5C_%7C_%2F58D2%207E3D%20DDF4%207BA6%20%3C-PGP-%3E%2041D1%20B375%2037D0%208714%5C_%7C_%2F___%2F5445%0A%3E%20%0A%3E%20%0A%3E%20%0A%3E%20%0A&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%20ZFS%0A%20%28with%20acltype%3Doff%29%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=ehem%2Bdebian%40m5p.com" alt="">
<div class="header"><span class="headerfield">From:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> 962254@bugs.debian.org, linux-nfs@vger.kernel.org, bfields@redhat.com,
        agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported ZFS
 (with acltype=off) (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Sat, 13 Jun 2020 11:45:27 -0700</div>
</div>
<pre class="message">On Sat, Jun 13, 2020 at 02:54:31PM +0200, Salvatore Bonaccorso wrote:
&gt; indicated this was specifically observed on ZFS on Linux only. Seth
&gt; Arnold&#39;s answer seem to be inline with that that the issue is more on
&gt; the ZFS on Linux side and the issue keeps biting people a bit
&gt; unexpectedly. Why does this break with ACL off settings?

I disagree with this assessment.  All of the reporters have been using
ZFS, but this could indicate an absence of testers using other
filesystems.  We need someone with a NFS server which has a 4.15+ kernel
and uses a different filesystem which supports ACLs.

I&#39;m though doubtful ACLs are related to the actual problem.  My
impression of what I&#39;ve read is they&#39;re a useful tool to work around the
problem, but not related to the actual cause.


&gt; But there was at least one other (but again without further
&gt; detail/followups) that it was observed on an export from OpenWRT, but
&gt; no specific details here:
&gt; 
&gt; <a href="https://bugs.openwrt.org/index.php?do=details&amp;task_id=2581">https://bugs.openwrt.org/index.php?do=details&amp;task_id=2581</a>

This appears to be the same reporter as the RedHat bug report (comment 3
on the RedHat report).  This is a report for the server portion of the
reporter&#39;s setup.

Analyzing the setup, I disagree with one of the prior assessment of this
report.  This is OpenWRT on x86_64 hardware which would suggest a
high-end router or embedded device.  Such might well have ECC memory and
a processor fast enough to handle ZFS.



Let me add one more data point.  I had been thinking I might need the
additional features in Linux-ZFS 0.7.12.  As such my NFS server had been
running a 4.9 kernel with Debian&#39;s ZFS 0.7.12-2+debg10u1~bpo9+1 packages.
Now with the problem manifesting my NFS server is running a 4.19 kernel
with Debian&#39;s ZFS 0.7.12-2+deb10u2 packages.

I could well believe the actual root cause is a problem with the
Linux-ZFS implementation.  What manifested the problem though seems to be
in Linux&#39;s NFS implementation between 4.9 and 4.15.  ie Linux-ZFS
implemented /something/ which worked when implemented, but may not have
properly implemented the intended API and was broken by Linux-NFS.


-- 
(\___(\___(\______          --=&gt; 8-) EHM &lt;=--          ______/)___/)___/)
 \BS (    |         ehem+sigmsg@m5p.com  PGP 87145445         |    )   /
  \_CS\   |  _____  -O #include &lt;stddisclaimer.h&gt; O-   _____  |   /  _/
8A19\___\_|_/58D2 7E3D DDF4 7BA6 &lt;-PGP-&gt; 41D1 B375 37D0 8714\_|_/___/5445




</pre>

<div class="infmessage"><hr><p>
<a name="60"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592224023 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Mon, 15 Jun 2020 12:27:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=61">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=61">mbox</a>, <a href="#60">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="62"></a>
<!-- request_addr: Christoph Hellwig &lt;hch@infradead.org&gt; -->
<!-- time:1592224023 -->
<strong>Acknowledgement sent</strong>
to <code>Christoph Hellwig &lt;hch@infradead.org&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Mon, 15 Jun 2020 12:27:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=63">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=63">mbox</a>, <a href="#62">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="64"></a><a name="msg64"></a><a href="#64">Message #64</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=64">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=64">mbox</a>, <a href="mailto:962254@bugs.debian.org?subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%20ZFS%0A%20%28with%20acltype%3Doff%29%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200615115506.GA7276%40infradead.org%3E&amp;body=On%20Mon%2C%2015%20Jun%202020%2004%3A55%3A06%20-0700%20Christoph%20Hellwig%20%3Chch%40infradead.org%3E%20wrote%3A%0A%3E%20If%20you%20are%20violating%20our%20license%20please%20also%20don%27t%20spam%20our%20list%20when%0A%3E%20using%20your%20crappy%20combination.%0A%3E%20%0A%3E%20%0A&amp;In-Reply-To=%3C20200615115506.GA7276%40infradead.org%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=hch%40infradead.org" alt="">
<div class="header"><span class="headerfield">From:</span> Christoph Hellwig &lt;hch@infradead.org&gt;</div>
<div class="header"><span class="headerfield">To:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org,
	linux-nfs@vger.kernel.org, bfields@redhat.com, agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported ZFS
 (with acltype=off) (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Mon, 15 Jun 2020 04:55:06 -0700</div>
</div>
<pre class="message">If you are violating our license please also don&#39;t spam our list when
using your crappy combination.


</pre>

<div class="infmessage"><hr><p>
<a name="65"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592233389 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Mon, 15 Jun 2020 15:03:09 GMT) (<a href="bugreport.cgi?bug=962254;msg=66">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=66">mbox</a>, <a href="#65">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="67"></a>
<!-- request_addr: &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt; -->
<!-- time:1592233389 -->
<strong>Acknowledgement sent</strong>
to <code>&quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Mon, 15 Jun 2020 15:03:09 GMT) (<a href="bugreport.cgi?bug=962254;msg=68">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=68">mbox</a>, <a href="#67">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="69"></a><a name="msg69"></a><a href="#69">Message #69</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=69">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=69">mbox</a>, <a href="mailto:962254@bugs.debian.org?subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%20ZFS%0A%20%28with%20acltype%3Doff%29%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E&amp;body=On%20Mon%2C%2015%20Jun%202020%2010%3A50%3A35%20-0400%20%22J.%20Bruce%20Fields%22%20%3Cbfields%40redhat.com%3E%20wrote%3A%0A%3E%20On%20Sat%2C%20Jun%2013%2C%202020%20at%2011%3A45%3A27AM%20-0700%2C%20Elliott%20Mitchell%20wrote%3A%0A%3E%20%3E%20I%20disagree%20with%20this%20assessment.%20%20All%20of%20the%20reporters%20have%20been%20using%0A%3E%20%3E%20ZFS%2C%20but%20this%20could%20indicate%20an%20absence%20of%20testers%20using%20other%0A%3E%20%3E%20filesystems.%20%20We%20need%20someone%20with%20a%20NFS%20server%20which%20has%20a%204.15%2B%20kernel%0A%3E%20%3E%20and%20uses%20a%20different%20filesystem%20which%20supports%20ACLs.%0A%3E%20%0A%3E%20Honestly%20I%20don%27t%20think%20I%20currently%20have%20a%20regression%20test%20for%20this%20so%0A%3E%20it%27s%20possible%20I%20could%20have%20missed%20something%20upstream.%20%20I%20haven%27t%20seen%0A%3E%20any%20reports%2C%20though....%0A%3E%20%0A%3E%20ZFS%27s%20ACL%20implementation%20is%20very%20different%20from%20any%20in-tree%0A%3E%20filesystem%27s%2C%20and%20given%20limited%20time%2C%20a%20filesystem%20with%20no%20prospect%20of%0A%3E%20going%20upstream%20isn%27t%20going%20to%20get%20much%20attention%2C%20so%2C%20yes%2C%20I%27d%20need%20to%0A%3E%20see%20a%20reproducer%20on%20xfs%20or%20ext4%20or%20something.%0A%3E%20%0A%3E%20--b.%0A%3E%20%0A%3E%20%0A%3E%20%0A&amp;In-Reply-To=%3C20200615145035.GA214986%40pick.fieldses.org%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=bfields%40redhat.com" alt="">
<div class="header"><span class="headerfield">From:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;, 962254@bugs.debian.org,
	linux-nfs@vger.kernel.org, agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported ZFS
 (with acltype=off) (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Mon, 15 Jun 2020 10:50:35 -0400</div>
</div>
<pre class="message">On Sat, Jun 13, 2020 at 11:45:27AM -0700, Elliott Mitchell wrote:
&gt; I disagree with this assessment.  All of the reporters have been using
&gt; ZFS, but this could indicate an absence of testers using other
&gt; filesystems.  We need someone with a NFS server which has a 4.15+ kernel
&gt; and uses a different filesystem which supports ACLs.

Honestly I don&#39;t think I currently have a regression test for this so
it&#39;s possible I could have missed something upstream.  I haven&#39;t seen
any reports, though....

ZFS&#39;s ACL implementation is very different from any in-tree
filesystem&#39;s, and given limited time, a filesystem with no prospect of
going upstream isn&#39;t going to get much attention, so, yes, I&#39;d need to
see a reproducer on xfs or ext4 or something.

--b.



</pre>

<div class="msgreceived"><hr><p>
<a name="70"></a>
<!-- command:title -->
<!-- requester: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- request_addr: control@bugs.debian.org -->
<!-- time:1592245263 -->
<!-- new_data:
$new_data = {
              &#39;subject&#39; =&gt; &#39;NFS v4.2 broken between 4.9 and 4.15&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;subject&#39; =&gt; &#39;NFS(v4) broken at 4.19.118-2&#39;
            };
-->
<strong>Changed Bug title to &#39;NFS v4.2 broken between 4.9 and 4.15&#39; from &#39;NFS(v4) broken at 4.19.118-2&#39;.</strong>
Request was from <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>
to <code>control@bugs.debian.org</code>.
 (Mon, 15 Jun 2020 18:21:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=71">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=71">mbox</a>, <a href="#70">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="72"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592247425 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Mon, 15 Jun 2020 18:57:05 GMT) (<a href="bugreport.cgi?bug=962254;msg=73">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=73">mbox</a>, <a href="#72">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="74"></a>
<!-- request_addr: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- time:1592247425 -->
<strong>Acknowledgement sent</strong>
to <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Mon, 15 Jun 2020 18:57:05 GMT) (<a href="bugreport.cgi?bug=962254;msg=75">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=75">mbox</a>, <a href="#74">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="76"></a><a name="msg76"></a><a href="#76">Message #76</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=76">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=76">mbox</a>, <a href="mailto:962254@bugs.debian.org?body=On%20Mon%2C%2015%20Jun%202020%2020%3A53%3A11%20%2B0200%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%20wrote%3A%0A%3E%20Hi%20Bruce%2C%0A%3E%20%0A%3E%20On%20Mon%2C%20Jun%2015%2C%202020%20at%2010%3A50%3A35AM%20-0400%2C%20J.%20Bruce%20Fields%20wrote%3A%0A%3E%20%3E%20On%20Sat%2C%20Jun%2013%2C%202020%20at%2011%3A45%3A27AM%20-0700%2C%20Elliott%20Mitchell%20wrote%3A%0A%3E%20%3E%20%3E%20I%20disagree%20with%20this%20assessment.%20%20All%20of%20the%20reporters%20have%20been%20using%0A%3E%20%3E%20%3E%20ZFS%2C%20but%20this%20could%20indicate%20an%20absence%20of%20testers%20using%20other%0A%3E%20%3E%20%3E%20filesystems.%20%20We%20need%20someone%20with%20a%20NFS%20server%20which%20has%20a%204.15%2B%20kernel%0A%3E%20%3E%20%3E%20and%20uses%20a%20different%20filesystem%20which%20supports%20ACLs.%0A%3E%20%3E%20%0A%3E%20%3E%20Honestly%20I%20don%27t%20think%20I%20currently%20have%20a%20regression%20test%20for%20this%20so%0A%3E%20%3E%20it%27s%20possible%20I%20could%20have%20missed%20something%20upstream.%20%20I%20haven%27t%20seen%0A%3E%20%3E%20any%20reports%2C%20though....%0A%3E%20%3E%20%0A%3E%20%3E%20ZFS%27s%20ACL%20implementation%20is%20very%20different%20from%20any%20in-tree%0A%3E%20%3E%20filesystem%27s%2C%20and%20given%20limited%20time%2C%20a%20filesystem%20with%20no%20prospect%20of%0A%3E%20%3E%20going%20upstream%20isn%27t%20going%20to%20get%20much%20attention%2C%20so%2C%20yes%2C%20I%27d%20need%20to%0A%3E%20%3E%20see%20a%20reproducer%20on%20xfs%20or%20ext4%20or%20something.%0A%3E%20%0A%3E%20I%20think%20the%20following%20is%20reproducible%20on%20a%20ext4%20exported%20share%20%28with%0A%3E%20underlying%20filesystem%20mounted%20with%20noacl%20to%20mimic%20the%20suspect%20from%20the%0A%3E%20reporter%29.%20I%20tested%20the%20same%20with%20an%20older%20kernel%20from%20Debian%20stretch%0A%3E%20%28running%204.9.210-1%2Bdeb9u1%29%20but%20this%20does%20not%20show%20the%20same%20behaviour.%0A%3E%20%0A%3E%20The%20current%20test%20system%20is%20running%205.6.14-2%20Debian%20kernel%20%28so%205.6.14%29.%0A%3E%20%0A%3E%201%2F%20Create%20an%20ext4%20filesystem%3A%0A%3E%20%0A%3E%20%23%20mkfs.ext4%20%2Fdev%2Fvdb1%0A%3E%20%0A%3E%202%2F%20Mount%20the%20filesystem%20with%20noacl%20%28to%20mimic%20the%20situation%29%3A%0A%3E%20%0A%3E%20%2Fdev%2Fvdb1%20%2Fsrv%2Fdata%20ext4%20defaults%2Cnoacl%200%200%0A%3E%20%0A%3E%20root%40nfs-test%3A~%23%20mount%20%7C%20grep%20vdb1%0A%3E%20%2Fdev%2Fvdb1%20on%20%2Fsrv%2Fdata%20type%20ext4%20%28rw%2Crelatime%2Cnoacl%29%0A%3E%20%0A%3E%203%2F%20Export%20with%0A%3E%20%0A%3E%20%2Fsrv%2Fdata%20192.168.122.1%2F24%28rw%2Csync%2Cno_subtree_check%2Cno_root_squash%29%0A%3E%20%0A%3E%204%2F%20Reproduce%20the%20issue%0A%3E%20%0A%3E%20root%40nfs-test%3A~%23%20mount%20-t%20nfs%20192.168.122.150%3A%2Fsrv%2Fdata%20%2Fmnt%0A%3E%20root%40nfs-test%3A~%23%20mkdir%20%2Fmnt%2Ffoo%20%26%26%20ls%20-ld%20%2Fmnt%2Ffoo%20%26%26%20rmdir%20%2Fmnt%2Ffoo%0A%3E%20drwxrwxrwx%202%20root%20root%204096%20Jun%2015%2020%3A24%20%2Fmnt%2Ffoo%0A%3E%20root%40nfs-test%3A~%23%20mount%20%7C%20grep%20data%0A%3E%20%2Fdev%2Fvdb1%20on%20%2Fsrv%2Fdata%20type%20ext4%20%28rw%2Crelatime%2Cnoacl%29%0A%3E%20192.168.122.150%3A%2Fsrv%2Fdata%20on%20%2Fmnt%20type%20nfs4%20%28rw%2Crelatime%2Cvers%3D4.2%2Crsize%3D524288%2Cwsize%3D524288%2Cnamlen%3D255%2Chard%2Cproto%3Dtcp%2Ctimeo%3D600%2Cretrans%3D2%2Csec%3Dsys%2Cclientaddr%3D192.168.122.150%2Clocal_lock%3Dnone%2Caddr%3D192.168.122.150%29%0A%3E%20root%40nfs-test%3A~%23%20umount%20%2Fmnt%0A%3E%20%0A%3E%20Looking%20at%20a%20wireshark%20captured%20sniff%2C%20the%20situation%20was%20the%20same%20as%20in%20the%0A%3E%20previous%20ZFS%20case%2C%20in%20the%20gettattr%20from%20the%20client%20and%20the%20server%20does%20indicate%0A%3E%20support%20for%20the%20new%20mode_umask.%20Then%20later%20in%20the%20CREATE%20operation%2C%20the%20client%0A%3E%20sets%20the%20mode_umask%20attribute%2C%20with%20mode%20part%20set%20to%20%270777%27%20and%20umask%20to%20%27022%27.%0A%3E%20The%20mode%20replied%20is%20then%20as%20well%20%270777%27.%0A%3E%20%0A%3E%20Notabene%3A%20if%20not%20mounting%20the%20filesystem%20with%20noacl%2C%20then%20there%20is%20no%0A%3E%20observed%20behaviour%20change%20here.%0A%3E%20%0A%3E%20Regards%2C%0A&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%0A%20%3C20200615185311.GA702681%40eldamar.local%3E&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%0A%20Filesystem%20with%20noacl%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;In-Reply-To=%3C20200615185311.GA702681%40eldamar.local%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=carnil%40debian.org" alt="">
<div class="header"><span class="headerfield">From:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">To:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org,
	linux-nfs@vger.kernel.org, agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported
 Filesystem with noacl (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Mon, 15 Jun 2020 20:53:11 +0200</div>
</div>
<pre class="message">Hi Bruce,

On Mon, Jun 15, 2020 at 10:50:35AM -0400, J. Bruce Fields wrote:
&gt; On Sat, Jun 13, 2020 at 11:45:27AM -0700, Elliott Mitchell wrote:
&gt; &gt; I disagree with this assessment.  All of the reporters have been using
&gt; &gt; ZFS, but this could indicate an absence of testers using other
&gt; &gt; filesystems.  We need someone with a NFS server which has a 4.15+ kernel
&gt; &gt; and uses a different filesystem which supports ACLs.
&gt; 
&gt; Honestly I don&#39;t think I currently have a regression test for this so
&gt; it&#39;s possible I could have missed something upstream.  I haven&#39;t seen
&gt; any reports, though....
&gt; 
&gt; ZFS&#39;s ACL implementation is very different from any in-tree
&gt; filesystem&#39;s, and given limited time, a filesystem with no prospect of
&gt; going upstream isn&#39;t going to get much attention, so, yes, I&#39;d need to
&gt; see a reproducer on xfs or ext4 or something.

I think the following is reproducible on a ext4 exported share (with
underlying filesystem mounted with noacl to mimic the suspect from the
reporter). I tested the same with an older kernel from Debian stretch
(running 4.9.210-1+deb9u1) but this does not show the same behaviour.

The current test system is running 5.6.14-2 Debian kernel (so 5.6.14).

1/ Create an ext4 filesystem:

# mkfs.ext4 /dev/vdb1

2/ Mount the filesystem with noacl (to mimic the situation):

/dev/vdb1 /srv/data ext4 defaults,noacl 0 0

root@nfs-test:~# mount | grep vdb1
/dev/vdb1 on /srv/data type ext4 (rw,relatime,noacl)

3/ Export with

/srv/data 192.168.122.1/24(rw,sync,no_subtree_check,no_root_squash)

4/ Reproduce the issue

root@nfs-test:~# mount -t nfs 192.168.122.150:/srv/data /mnt
root@nfs-test:~# mkdir /mnt/foo &amp;&amp; ls -ld /mnt/foo &amp;&amp; rmdir /mnt/foo
drwxrwxrwx 2 root root 4096 Jun 15 20:24 /mnt/foo
root@nfs-test:~# mount | grep data
/dev/vdb1 on /srv/data type ext4 (rw,relatime,noacl)
192.168.122.150:/srv/data on /mnt type nfs4 (rw,relatime,vers=4.2,rsize=524288,wsize=524288,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=192.168.122.150,local_lock=none,addr=192.168.122.150)
root@nfs-test:~# umount /mnt

Looking at a wireshark captured sniff, the situation was the same as in the
previous ZFS case, in the gettattr from the client and the server does indicate
support for the new mode_umask. Then later in the CREATE operation, the client
sets the mode_umask attribute, with mode part set to &#39;0777&#39; and umask to &#39;022&#39;.
The mode replied is then as well &#39;0777&#39;.

Notabene: if not mounting the filesystem with noacl, then there is no
observed behaviour change here.

Regards,
Salvatore


</pre>

<div class="infmessage"><hr><p>
<a name="77"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592272803 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Tue, 16 Jun 2020 02:00:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=78">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=78">mbox</a>, <a href="#77">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="79"></a>
<!-- request_addr: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- time:1592272803 -->
<strong>Acknowledgement sent</strong>
to <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Tue, 16 Jun 2020 02:00:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=80">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=80">mbox</a>, <a href="#79">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="81"></a><a name="msg81"></a><a href="#81">Message #81</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=81">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=81">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200616015720.GA81232%40mattapan.m5p.com%3E&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%0A%20%3C20200616015720.GA81232%40mattapan.m5p.com%3E&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%20ZFS%0A%20%28with%20acltype%3Doff%29%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;body=On%20Mon%2C%2015%20Jun%202020%2018%3A57%3A20%20-0700%20Elliott%20Mitchell%20%3Cehem%2Bdebian%40m5p.com%3E%20wrote%3A%0A%3E%20On%20Mon%2C%20Jun%2015%2C%202020%20at%2010%3A50%3A35AM%20-0400%2C%20J.%20Bruce%20Fields%20wrote%3A%0A%3E%20%3E%20Honestly%20I%20don%27t%20think%20I%20currently%20have%20a%20regression%20test%20for%20this%20so%0A%3E%20%3E%20it%27s%20possible%20I%20could%20have%20missed%20something%20upstream.%20%20I%20haven%27t%20seen%0A%3E%20%3E%20any%20reports%2C%20though....%0A%3E%20%3E%20%0A%3E%20%3E%20ZFS%27s%20ACL%20implementation%20is%20very%20different%20from%20any%20in-tree%0A%3E%20%3E%20filesystem%27s%2C%20and%20given%20limited%20time%2C%20a%20filesystem%20with%20no%20prospect%20of%0A%3E%20%3E%20going%20upstream%20isn%27t%20going%20to%20get%20much%20attention%2C%20so%2C%20yes%2C%20I%27d%20need%20to%0A%3E%20%3E%20see%20a%20reproducer%20on%20xfs%20or%20ext4%20or%20something.%0A%3E%20%0A%3E%20Salvatore%20managing%20to%20reproduce%20it%20with%20ext4%20yet%20all%20prior%20reports%20with%0A%3E%20the%20filesystem%20used%20being%20known%20was%20ZFS%20seems%20to%20suggest%20one%20of%20two%0A%3E%20things.%0A%3E%20%0A%3E%20First%2C%20could%20be%20enabling%20POSIX%20ACLs%20has%20been%20very%20strongly%20pushed%20by%0A%3E%20other%20filesystems%2C%20while%20ZFS%20hasn%27t%20pushed%20them%20as%20strongly.%0A%3E%20%0A%3E%20Second%2C%20could%20be%20a%20substantial%20majority%20of%20users%20of%20NFS%20are%20using%20ZFS.%0A%3E%20%0A%3E%20If%20the%20former%2C%20this%20simply%20means%20an%20additional%20test%20case%20is%20needed.%20%20If%0A%3E%20the%20latter%2C%20then%20any%20testing%20of%20NFS%20which%20excludes%20ZFS%20is%20going%20to%20have%0A%3E%20underwhelming%20coverage.%0A%3E%20%0A%3E%20%0A%3E%20--%20%0A%3E%20%28%5C___%28%5C___%28%5C______%20%20%20%20%20%20%20%20%20%20--%3D%3E%208-%29%20EHM%20%3C%3D--%20%20%20%20%20%20%20%20%20%20______%2F%29___%2F%29___%2F%29%0A%3E%20%20%5CBS%20%28%20%20%20%20%7C%20%20%20%20%20%20%20%20%20ehem%2Bsigmsg%40m5p.com%20%20PGP%2087145445%20%20%20%20%20%20%20%20%20%7C%20%20%20%20%29%20%20%20%2F%0A%3E%20%20%20%5C_CS%5C%20%20%20%7C%20%20_____%20%20-O%20%23include%20%3Cstddisclaimer.h%3E%20O-%20%20%20_____%20%20%7C%20%20%20%2F%20%20_%2F%0A%3E%208A19%5C___%5C_%7C_%2F58D2%207E3D%20DDF4%207BA6%20%3C-PGP-%3E%2041D1%20B375%2037D0%208714%5C_%7C_%2F___%2F5445%0A%3E%20%0A%3E%20%0A%3E%20%0A%3E%20%0A">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=ehem%2Bdebian%40m5p.com" alt="">
<div class="header"><span class="headerfield">From:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;, 962254@bugs.debian.org,
        linux-nfs@vger.kernel.org, agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported ZFS
 (with acltype=off) (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Mon, 15 Jun 2020 18:57:20 -0700</div>
</div>
<pre class="message">On Mon, Jun 15, 2020 at 10:50:35AM -0400, J. Bruce Fields wrote:
&gt; Honestly I don&#39;t think I currently have a regression test for this so
&gt; it&#39;s possible I could have missed something upstream.  I haven&#39;t seen
&gt; any reports, though....
&gt; 
&gt; ZFS&#39;s ACL implementation is very different from any in-tree
&gt; filesystem&#39;s, and given limited time, a filesystem with no prospect of
&gt; going upstream isn&#39;t going to get much attention, so, yes, I&#39;d need to
&gt; see a reproducer on xfs or ext4 or something.

Salvatore managing to reproduce it with ext4 yet all prior reports with
the filesystem used being known was ZFS seems to suggest one of two
things.

First, could be enabling POSIX ACLs has been very strongly pushed by
other filesystems, while ZFS hasn&#39;t pushed them as strongly.

Second, could be a substantial majority of users of NFS are using ZFS.

If the former, this simply means an additional test case is needed.  If
the latter, then any testing of NFS which excludes ZFS is going to have
underwhelming coverage.


-- 
(\___(\___(\______          --=&gt; 8-) EHM &lt;=--          ______/)___/)___/)
 \BS (    |         ehem+sigmsg@m5p.com  PGP 87145445         |    )   /
  \_CS\   |  _____  -O #include &lt;stddisclaimer.h&gt; O-   _____  |   /  _/
8A19\___\_|_/58D2 7E3D DDF4 7BA6 &lt;-PGP-&gt; 41D1 B375 37D0 8714\_|_/___/5445




</pre>

<div class="infmessage"><hr><p>
<a name="82"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592275323 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Tue, 16 Jun 2020 02:42:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=83">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=83">mbox</a>, <a href="#82">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="84"></a>
<!-- request_addr: &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt; -->
<!-- time:1592275323 -->
<strong>Acknowledgement sent</strong>
to <code>&quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Tue, 16 Jun 2020 02:42:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=85">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=85">mbox</a>, <a href="#84">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="86"></a><a name="msg86"></a><a href="#86">Message #86</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=86">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=86">mbox</a>, <a href="mailto:962254@bugs.debian.org?body=On%20Mon%2C%2015%20Jun%202020%2022%3A38%3A20%20-0400%20%22J.%20Bruce%20Fields%22%20%3Cbfields%40redhat.com%3E%20wrote%3A%0A%3E%20Thanks%20for%20the%20detailed%20reproducer.%0A%3E%20%0A%3E%20It%27s%20weird%2C%20as%20the%20server%20is%20basically%20just%20setting%20the%20transmitted%0A%3E%20umask%20and%20then%20calling%20into%20the%20vfs%20to%20handle%20the%20rest%2C%20so%20it%27s%20not%20much%0A%3E%20different%20from%20any%20other%20user.%20%20But%20the%20same%20reproducer%20run%20just%20on%20the%0A%3E%20ext4%20filesystem%20does%20give%20the%20right%20permissions....%0A%3E%20%0A%3E%20Oh%2C%20but%20looking%20at%20the%20system%20call%2C%20fs_namei.c%3Ado_mkdirat%28%29%2C%20it%20does%3A%0A%3E%20%0A%3E%20%09if%20%28%21IS_POSIXACL%28path.dentry-%3Ed_inode%29%29%0A%3E%20%09%09mode%20%26%3D%20~current_umask%28%29%3B%0A%3E%20%09error%20%3D%20security_path_mkdir%28%26path%2C%20dentry%2C%20mode%29%3B%0A%3E%20%09if%20%28%21error%29%0A%3E%20%09%09error%20%3D%20vfs_mkdir%28path.dentry-%3Ed_inode%2C%20dentry%2C%20mode%29%3B%0A%3E%20%0A%3E%20whereas%20nfsd%20just%20calls%20into%20vfs_mkdir%28%29.%0A%3E%20%0A%3E%20And%20that%20IS_POSIXACL%28%29%20check%20is%20exactly%20a%20check%20whether%20the%20filesystem%0A%3E%20supports%20ACLs.%20%20So%20I%20guess%20it%27s%20the%20responsibility%20of%20the%20caller%20of%0A%3E%20vfs_mkdir%28%29%20to%20handle%20that%20case.%0A%3E%20%0A%3E%20So%20the%20obvious%20fix%20is%20something%20like%20%28untested%21%29%0A%3E%20%0A%3E%20diff%20--git%20a%2Ffs%2Fnfsd%2Fvfs.c%20b%2Ffs%2Fnfsd%2Fvfs.c%0A%3E%20index%200aa02eb18bd3..dabdcca58969%20100644%0A%3E%20---%20a%2Ffs%2Fnfsd%2Fvfs.c%0A%3E%20%2B%2B%2B%20b%2Ffs%2Fnfsd%2Fvfs.c%0A%3E%20%40%40%20-1234%2C6%20%2B1234%2C8%20%40%40%20nfsd_create_locked%28struct%20svc_rqst%20%2Arqstp%2C%20struct%20svc_fh%20%2Afhp%2C%0A%3E%20%20%09%09%09nfsd_check_ignore_resizing%28iap%29%3B%0A%3E%20%20%09%09break%3B%0A%3E%20%20%09case%20S_IFDIR%3A%0A%3E%20%2B%09%09if%20%28%21IS_POSIXACL%28dirp%29%29%0A%3E%20%2B%09%09%09iap-%3Eia_mode%20%26%3D%20~current_umask%28%29%3B%0A%3E%20%20%09%09host_err%20%3D%20vfs_mkdir%28dirp%2C%20dchild%2C%20iap-%3Eia_mode%29%3B%0A%3E%20%20%09%09if%20%28%21host_err%20%26%26%20unlikely%28d_unhashed%28dchild%29%29%29%20%7B%0A%3E%20%20%09%09%09struct%20dentry%20%2Ad%3B%0A%3E%20%0A%3E%20--b.%0A%3E%20%0A%3E%20%0A%3E%20%0A&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%0A%20Filesystem%20with%20noacl%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%0A%20%3C20200615185311.GA702681%40eldamar.local%3E%0A%20%3C20200616023820.GB214986%40pick.fieldses.org%3E&amp;In-Reply-To=%3C20200616023820.GB214986%40pick.fieldses.org%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=bfields%40redhat.com" alt="">
<div class="header"><span class="headerfield">From:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org,
	linux-nfs@vger.kernel.org, agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported
 Filesystem with noacl (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Mon, 15 Jun 2020 22:38:20 -0400</div>
</div>
<pre class="message">Thanks for the detailed reproducer.

It&#39;s weird, as the server is basically just setting the transmitted
umask and then calling into the vfs to handle the rest, so it&#39;s not much
different from any other user.  But the same reproducer run just on the
ext4 filesystem does give the right permissions....

Oh, but looking at the system call, fs_namei.c:do_mkdirat(), it does:

	if (!IS_POSIXACL(path.dentry-&gt;d_inode))
		mode &amp;= ~current_umask();
	error = security_path_mkdir(&amp;path, dentry, mode);
	if (!error)
		error = vfs_mkdir(path.dentry-&gt;d_inode, dentry, mode);

whereas nfsd just calls into vfs_mkdir().

And that IS_POSIXACL() check is exactly a check whether the filesystem
supports ACLs.  So I guess it&#39;s the responsibility of the caller of
vfs_mkdir() to handle that case.

So the obvious fix is something like (untested!)

diff --git a/fs/nfsd/vfs.c b/fs/nfsd/vfs.c
index 0aa02eb18bd3..dabdcca58969 100644
--- a/fs/nfsd/vfs.c
+++ b/fs/nfsd/vfs.c
@@ -1234,6 +1234,8 @@ nfsd_create_locked(struct svc_rqst *rqstp, struct svc_fh *fhp,
 			nfsd_check_ignore_resizing(iap);
 		break;
 	case S_IFDIR:
+		if (!IS_POSIXACL(dirp))
+			iap-&gt;ia_mode &amp;= ~current_umask();
 		host_err = vfs_mkdir(dirp, dchild, iap-&gt;ia_mode);
 		if (!host_err &amp;&amp; unlikely(d_unhashed(dchild))) {
 			struct dentry *d;

--b.



</pre>

<div class="infmessage"><hr><p>
<a name="87"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592275502 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Tue, 16 Jun 2020 02:45:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=88">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=88">mbox</a>, <a href="#87">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="89"></a>
<!-- request_addr: &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt; -->
<!-- time:1592275502 -->
<strong>Acknowledgement sent</strong>
to <code>&quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Tue, 16 Jun 2020 02:45:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=90">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=90">mbox</a>, <a href="#89">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="91"></a><a name="msg91"></a><a href="#91">Message #91</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=91">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=91">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200616024212.GC214986%40pick.fieldses.org%3E&amp;References=%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%0A%20%3C20200615185311.GA702681%40eldamar.local%3E%0A%20%3C20200616023820.GB214986%40pick.fieldses.org%3E%0A%20%3C20200616024212.GC214986%40pick.fieldses.org%3E&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%0A%20Filesystem%20with%20noacl%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;body=On%20Mon%2C%2015%20Jun%202020%2022%3A42%3A12%20-0400%20%22J.%20Bruce%20Fields%22%20%3Cbfields%40redhat.com%3E%20wrote%3A%0A%3E%20On%20Mon%2C%20Jun%2015%2C%202020%20at%2010%3A38%3A20PM%20-0400%2C%20J.%20Bruce%20Fields%20wrote%3A%0A%3E%20%3E%20Thanks%20for%20the%20detailed%20reproducer.%0A%3E%20%3E%20%0A%3E%20%3E%20It%27s%20weird%2C%20as%20the%20server%20is%20basically%20just%20setting%20the%20transmitted%0A%3E%20%3E%20umask%20and%20then%20calling%20into%20the%20vfs%20to%20handle%20the%20rest%2C%20so%20it%27s%20not%20much%0A%3E%20%3E%20different%20from%20any%20other%20user.%20%20But%20the%20same%20reproducer%20run%20just%20on%20the%0A%3E%20%3E%20ext4%20filesystem%20does%20give%20the%20right%20permissions....%0A%3E%20%3E%20%0A%3E%20%3E%20Oh%2C%20but%20looking%20at%20the%20system%20call%2C%20fs_namei.c%3Ado_mkdirat%28%29%2C%20it%20does%3A%0A%3E%20%3E%20%0A%3E%20%3E%20%09if%20%28%21IS_POSIXACL%28path.dentry-%3Ed_inode%29%29%0A%3E%20%3E%20%09%09mode%20%26%3D%20~current_umask%28%29%3B%0A%3E%20%3E%20%09error%20%3D%20security_path_mkdir%28%26path%2C%20dentry%2C%20mode%29%3B%0A%3E%20%3E%20%09if%20%28%21error%29%0A%3E%20%3E%20%09%09error%20%3D%20vfs_mkdir%28path.dentry-%3Ed_inode%2C%20dentry%2C%20mode%29%3B%0A%3E%20%3E%20%0A%3E%20%3E%20whereas%20nfsd%20just%20calls%20into%20vfs_mkdir%28%29.%0A%3E%20%3E%20%0A%3E%20%3E%20And%20that%20IS_POSIXACL%28%29%20check%20is%20exactly%20a%20check%20whether%20the%20filesystem%0A%3E%20%3E%20supports%20ACLs.%20%20So%20I%20guess%20it%27s%20the%20responsibility%20of%20the%20caller%20of%0A%3E%20%3E%20vfs_mkdir%28%29%20to%20handle%20that%20case.%0A%3E%20%0A%3E%20But%2C%20that%27s%20unsatisfying%3A%20why%20isn%27t%20vfs_mkdir%28%29%20taking%20care%20of%20this%0A%3E%20itself%3F%20%20And%20what%20about%20that%20security_path_mkdir%28%29%20call%3F%20%20And%20are%20the%0A%3E%20other%20cases%20of%20that%20switch%20in%20fs%2Fnfsd%2Fvfs.c%3Anfsd_create_locked%28%29%0A%3E%20correct%3F%20%20I%20think%20there%20may%20be%20some%20more%20cleanup%20here%20called%20for%2C%20I%27ll%0A%3E%20poke%20around%20tomorrow.%0A%3E%20%0A%3E%20--b.%0A%3E%20%0A%3E%20%0A%3E%20%0A">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=bfields%40redhat.com" alt="">
<div class="header"><span class="headerfield">From:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org,
	linux-nfs@vger.kernel.org, agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported
 Filesystem with noacl (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Mon, 15 Jun 2020 22:42:12 -0400</div>
</div>
<pre class="message">On Mon, Jun 15, 2020 at 10:38:20PM -0400, J. Bruce Fields wrote:
&gt; Thanks for the detailed reproducer.
&gt; 
&gt; It&#39;s weird, as the server is basically just setting the transmitted
&gt; umask and then calling into the vfs to handle the rest, so it&#39;s not much
&gt; different from any other user.  But the same reproducer run just on the
&gt; ext4 filesystem does give the right permissions....
&gt; 
&gt; Oh, but looking at the system call, fs_namei.c:do_mkdirat(), it does:
&gt; 
&gt; 	if (!IS_POSIXACL(path.dentry-&gt;d_inode))
&gt; 		mode &amp;= ~current_umask();
&gt; 	error = security_path_mkdir(&amp;path, dentry, mode);
&gt; 	if (!error)
&gt; 		error = vfs_mkdir(path.dentry-&gt;d_inode, dentry, mode);
&gt; 
&gt; whereas nfsd just calls into vfs_mkdir().
&gt; 
&gt; And that IS_POSIXACL() check is exactly a check whether the filesystem
&gt; supports ACLs.  So I guess it&#39;s the responsibility of the caller of
&gt; vfs_mkdir() to handle that case.

But, that&#39;s unsatisfying: why isn&#39;t vfs_mkdir() taking care of this
itself?  And what about that security_path_mkdir() call?  And are the
other cases of that switch in fs/nfsd/vfs.c:nfsd_create_locked()
correct?  I think there may be some more cleanup here called for, I&#39;ll
poke around tomorrow.

--b.



</pre>

<div class="infmessage"><hr><p>
<a name="92"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592285583 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Tue, 16 Jun 2020 05:33:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=93">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=93">mbox</a>, <a href="#92">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="94"></a>
<!-- request_addr: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- time:1592285583 -->
<strong>Acknowledgement sent</strong>
to <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Tue, 16 Jun 2020 05:33:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=95">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=95">mbox</a>, <a href="#94">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="96"></a><a name="msg96"></a><a href="#96">Message #96</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=96">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=96">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200616052835.GA19246%40lorien.valinor.li%3E&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%0A%20Filesystem%20with%20noacl%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;References=%3C20200605064426.GA1538868%40eldamar.local%3E%0A%20%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%0A%20%3C20200615185311.GA702681%40eldamar.local%3E%0A%20%3C20200616023820.GB214986%40pick.fieldses.org%3E%0A%20%3C20200616052835.GA19246%40lorien.valinor.li%3E&amp;body=On%20Tue%2C%2016%20Jun%202020%2007%3A28%3A35%20%2B0200%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%20wrote%3A%0A%3E%20Hi%20Bruce%2C%0A%3E%20%0A%3E%20On%20Mon%2C%20Jun%2015%2C%202020%20at%2010%3A38%3A20PM%20-0400%2C%20J.%20Bruce%20Fields%20wrote%3A%0A%3E%20%3E%20Thanks%20for%20the%20detailed%20reproducer.%0A%3E%20%3E%20%0A%3E%20%3E%20It%27s%20weird%2C%20as%20the%20server%20is%20basically%20just%20setting%20the%20transmitted%0A%3E%20%3E%20umask%20and%20then%20calling%20into%20the%20vfs%20to%20handle%20the%20rest%2C%20so%20it%27s%20not%20much%0A%3E%20%3E%20different%20from%20any%20other%20user.%20%20But%20the%20same%20reproducer%20run%20just%20on%20the%0A%3E%20%3E%20ext4%20filesystem%20does%20give%20the%20right%20permissions....%0A%3E%20%3E%20%0A%3E%20%3E%20Oh%2C%20but%20looking%20at%20the%20system%20call%2C%20fs_namei.c%3Ado_mkdirat%28%29%2C%20it%20does%3A%0A%3E%20%3E%20%0A%3E%20%3E%20%09if%20%28%21IS_POSIXACL%28path.dentry-%3Ed_inode%29%29%0A%3E%20%3E%20%09%09mode%20%26%3D%20~current_umask%28%29%3B%0A%3E%20%3E%20%09error%20%3D%20security_path_mkdir%28%26path%2C%20dentry%2C%20mode%29%3B%0A%3E%20%3E%20%09if%20%28%21error%29%0A%3E%20%3E%20%09%09error%20%3D%20vfs_mkdir%28path.dentry-%3Ed_inode%2C%20dentry%2C%20mode%29%3B%0A%3E%20%3E%20%0A%3E%20%3E%20whereas%20nfsd%20just%20calls%20into%20vfs_mkdir%28%29.%0A%3E%20%3E%20%0A%3E%20%3E%20And%20that%20IS_POSIXACL%28%29%20check%20is%20exactly%20a%20check%20whether%20the%20filesystem%0A%3E%20%3E%20supports%20ACLs.%20%20So%20I%20guess%20it%27s%20the%20responsibility%20of%20the%20caller%20of%0A%3E%20%3E%20vfs_mkdir%28%29%20to%20handle%20that%20case.%0A%3E%20%3E%20%0A%3E%20%3E%20So%20the%20obvious%20fix%20is%20something%20like%20%28untested%21%29%0A%3E%20%3E%20%0A%3E%20%3E%20diff%20--git%20a%2Ffs%2Fnfsd%2Fvfs.c%20b%2Ffs%2Fnfsd%2Fvfs.c%0A%3E%20%3E%20index%200aa02eb18bd3..dabdcca58969%20100644%0A%3E%20%3E%20---%20a%2Ffs%2Fnfsd%2Fvfs.c%0A%3E%20%3E%20%2B%2B%2B%20b%2Ffs%2Fnfsd%2Fvfs.c%0A%3E%20%3E%20%40%40%20-1234%2C6%20%2B1234%2C8%20%40%40%20nfsd_create_locked%28struct%20svc_rqst%20%2Arqstp%2C%20struct%20svc_fh%20%2Afhp%2C%0A%3E%20%3E%20%20%09%09%09nfsd_check_ignore_resizing%28iap%29%3B%0A%3E%20%3E%20%20%09%09break%3B%0A%3E%20%3E%20%20%09case%20S_IFDIR%3A%0A%3E%20%3E%20%2B%09%09if%20%28%21IS_POSIXACL%28dirp%29%29%0A%3E%20%3E%20%2B%09%09%09iap-%3Eia_mode%20%26%3D%20~current_umask%28%29%3B%0A%3E%20%3E%20%20%09%09host_err%20%3D%20vfs_mkdir%28dirp%2C%20dchild%2C%20iap-%3Eia_mode%29%3B%0A%3E%20%3E%20%20%09%09if%20%28%21host_err%20%26%26%20unlikely%28d_unhashed%28dchild%29%29%29%20%7B%0A%3E%20%3E%20%20%09%09%09struct%20dentry%20%2Ad%3B%0A%3E%20%0A%3E%20Thank%20you%21%0A%3E%20%0A%3E%20Tested%20your%20patch%20on%20top%2C%20and%20it%20would%20solve%20the%20directory%20case%2C%20but%0A%3E%20the%20underlying%20problem%20is%20more%20general%20%28and%20as%20you%20said%20proably%20needs%0A%3E%20further%20checking%20in%20other%20places%29%3A%0A%3E%20%0A%3E%20root%40nfs-test%3A~%23%20mount%20-t%20nfs%20192.168.122.150%3A%2Fsrv%2Fdata%20%2Fmnt%0A%3E%20root%40nfs-test%3A~%23%20mkdir%20%2Fmnt%2Ffoo%20%26%26%20ls%20-ld%20%2Fmnt%2Ffoo%20%26%26%20rmdir%20%2Fmnt%2Ffoo%0A%3E%20drwxr-xr-x%202%20root%20root%204096%20Jun%2016%2007%3A24%20%2Fmnt%2Ffoo%0A%3E%20root%40nfs-test%3A~%23%20touch%20%2Fmnt%2Ffoo%20%26%26%20ls%20-ld%20%2Fmnt%2Ffoo%20%26%26%20rm%20%2Fmnt%2Ffoo%0A%3E%20-rw-rw-rw-%201%20root%20root%200%20Jun%2016%2007%3A25%20%2Fmnt%2Ffoo%0A%3E%20root%40nfs-test%3A~%23%20umount%20%2Fmnt%0A%3E%20root%40nfs-test%3A~%23%0A%3E%20%0A%3E%20So%20when%20creating%20files%20the%20umask%20is%20still%20ignored%20in%20the%20noacl%20mounted%0A%3E%20case.%0A%3E%20%0A%3E%20Regards%2C%0A%3E%20Salvatore%0A%3E%20%0A">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=carnil%40debian.org" alt="">
<div class="header"><span class="headerfield">From:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">To:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org,
	linux-nfs@vger.kernel.org, agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported
 Filesystem with noacl (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Tue, 16 Jun 2020 07:28:35 +0200</div>
</div>
<pre class="message">Hi Bruce,

On Mon, Jun 15, 2020 at 10:38:20PM -0400, J. Bruce Fields wrote:
&gt; Thanks for the detailed reproducer.
&gt; 
&gt; It&#39;s weird, as the server is basically just setting the transmitted
&gt; umask and then calling into the vfs to handle the rest, so it&#39;s not much
&gt; different from any other user.  But the same reproducer run just on the
&gt; ext4 filesystem does give the right permissions....
&gt; 
&gt; Oh, but looking at the system call, fs_namei.c:do_mkdirat(), it does:
&gt; 
&gt; 	if (!IS_POSIXACL(path.dentry-&gt;d_inode))
&gt; 		mode &amp;= ~current_umask();
&gt; 	error = security_path_mkdir(&amp;path, dentry, mode);
&gt; 	if (!error)
&gt; 		error = vfs_mkdir(path.dentry-&gt;d_inode, dentry, mode);
&gt; 
&gt; whereas nfsd just calls into vfs_mkdir().
&gt; 
&gt; And that IS_POSIXACL() check is exactly a check whether the filesystem
&gt; supports ACLs.  So I guess it&#39;s the responsibility of the caller of
&gt; vfs_mkdir() to handle that case.
&gt; 
&gt; So the obvious fix is something like (untested!)
&gt; 
&gt; diff --git a/fs/nfsd/vfs.c b/fs/nfsd/vfs.c
&gt; index 0aa02eb18bd3..dabdcca58969 100644
&gt; --- a/fs/nfsd/vfs.c
&gt; +++ b/fs/nfsd/vfs.c
&gt; @@ -1234,6 +1234,8 @@ nfsd_create_locked(struct svc_rqst *rqstp, struct svc_fh *fhp,
&gt;  			nfsd_check_ignore_resizing(iap);
&gt;  		break;
&gt;  	case S_IFDIR:
&gt; +		if (!IS_POSIXACL(dirp))
&gt; +			iap-&gt;ia_mode &amp;= ~current_umask();
&gt;  		host_err = vfs_mkdir(dirp, dchild, iap-&gt;ia_mode);
&gt;  		if (!host_err &amp;&amp; unlikely(d_unhashed(dchild))) {
&gt;  			struct dentry *d;

Thank you!

Tested your patch on top, and it would solve the directory case, but
the underlying problem is more general (and as you said proably needs
further checking in other places):

root@nfs-test:~# mount -t nfs 192.168.122.150:/srv/data /mnt
root@nfs-test:~# mkdir /mnt/foo &amp;&amp; ls -ld /mnt/foo &amp;&amp; rmdir /mnt/foo
drwxr-xr-x 2 root root 4096 Jun 16 07:24 /mnt/foo
root@nfs-test:~# touch /mnt/foo &amp;&amp; ls -ld /mnt/foo &amp;&amp; rm /mnt/foo
-rw-rw-rw- 1 root root 0 Jun 16 07:25 /mnt/foo
root@nfs-test:~# umount /mnt
root@nfs-test:~#

So when creating files the umask is still ignored in the noacl mounted
case.

Regards,
Salvatore


</pre>

<div class="infmessage"><hr><p>
<a name="97"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592285763 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Tue, 16 Jun 2020 05:36:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=98">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=98">mbox</a>, <a href="#97">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="99"></a>
<!-- request_addr: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- time:1592285763 -->
<strong>Acknowledgement sent</strong>
to <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Tue, 16 Jun 2020 05:36:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=100">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=100">mbox</a>, <a href="#99">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="101"></a><a name="msg101"></a><a href="#101">Message #101</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=101">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=101">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200616053224.GB19246%40lorien.valinor.li%3E&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%0A%20Filesystem%20with%20noacl%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%0A%20%3C20200615185311.GA702681%40eldamar.local%3E%0A%20%3C20200616023820.GB214986%40pick.fieldses.org%3E%0A%20%3C20200616024212.GC214986%40pick.fieldses.org%3E%0A%20%3C20200616053224.GB19246%40lorien.valinor.li%3E&amp;body=On%20Tue%2C%2016%20Jun%202020%2007%3A32%3A24%20%2B0200%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%20wrote%3A%0A%3E%20On%20Mon%2C%20Jun%2015%2C%202020%20at%2010%3A42%3A12PM%20-0400%2C%20J.%20Bruce%20Fields%20wrote%3A%0A%3E%20%3E%20On%20Mon%2C%20Jun%2015%2C%202020%20at%2010%3A38%3A20PM%20-0400%2C%20J.%20Bruce%20Fields%20wrote%3A%0A%3E%20%3E%20%3E%20Thanks%20for%20the%20detailed%20reproducer.%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20It%27s%20weird%2C%20as%20the%20server%20is%20basically%20just%20setting%20the%20transmitted%0A%3E%20%3E%20%3E%20umask%20and%20then%20calling%20into%20the%20vfs%20to%20handle%20the%20rest%2C%20so%20it%27s%20not%20much%0A%3E%20%3E%20%3E%20different%20from%20any%20other%20user.%20%20But%20the%20same%20reproducer%20run%20just%20on%20the%0A%3E%20%3E%20%3E%20ext4%20filesystem%20does%20give%20the%20right%20permissions....%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20Oh%2C%20but%20looking%20at%20the%20system%20call%2C%20fs_namei.c%3Ado_mkdirat%28%29%2C%20it%20does%3A%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20%09if%20%28%21IS_POSIXACL%28path.dentry-%3Ed_inode%29%29%0A%3E%20%3E%20%3E%20%09%09mode%20%26%3D%20~current_umask%28%29%3B%0A%3E%20%3E%20%3E%20%09error%20%3D%20security_path_mkdir%28%26path%2C%20dentry%2C%20mode%29%3B%0A%3E%20%3E%20%3E%20%09if%20%28%21error%29%0A%3E%20%3E%20%3E%20%09%09error%20%3D%20vfs_mkdir%28path.dentry-%3Ed_inode%2C%20dentry%2C%20mode%29%3B%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20whereas%20nfsd%20just%20calls%20into%20vfs_mkdir%28%29.%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20And%20that%20IS_POSIXACL%28%29%20check%20is%20exactly%20a%20check%20whether%20the%20filesystem%0A%3E%20%3E%20%3E%20supports%20ACLs.%20%20So%20I%20guess%20it%27s%20the%20responsibility%20of%20the%20caller%20of%0A%3E%20%3E%20%3E%20vfs_mkdir%28%29%20to%20handle%20that%20case.%0A%3E%20%3E%20%0A%3E%20%3E%20But%2C%20that%27s%20unsatisfying%3A%20why%20isn%27t%20vfs_mkdir%28%29%20taking%20care%20of%20this%0A%3E%20%3E%20itself%3F%20%20And%20what%20about%20that%20security_path_mkdir%28%29%20call%3F%20%20And%20are%20the%0A%3E%20%3E%20other%20cases%20of%20that%20switch%20in%20fs%2Fnfsd%2Fvfs.c%3Anfsd_create_locked%28%29%0A%3E%20%3E%20correct%3F%20%20I%20think%20there%20may%20be%20some%20more%20cleanup%20here%20called%20for%2C%20I%27ll%0A%3E%20%3E%20poke%20around%20tomorrow.%0A%3E%20%0A%3E%20Yes%20agreed%20and%20can%20confirm%3A%20The%20other%20cases%20in%0A%3E%20fs%2Fnfsd%2Fvfs.c%3Anfsd_create_locked%28%29%20seem%20to%20have%20the%20problem%20as%20well.%0A%3E%20%0A%3E%20Regards%2C%0A%3E%20Salvatore%0A%3E%20%0A%3E%20%0A">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=carnil%40debian.org" alt="">
<div class="header"><span class="headerfield">From:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">To:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org,
	linux-nfs@vger.kernel.org, agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported
 Filesystem with noacl (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Tue, 16 Jun 2020 07:32:24 +0200</div>
</div>
<pre class="message">On Mon, Jun 15, 2020 at 10:42:12PM -0400, J. Bruce Fields wrote:
&gt; On Mon, Jun 15, 2020 at 10:38:20PM -0400, J. Bruce Fields wrote:
&gt; &gt; Thanks for the detailed reproducer.
&gt; &gt; 
&gt; &gt; It&#39;s weird, as the server is basically just setting the transmitted
&gt; &gt; umask and then calling into the vfs to handle the rest, so it&#39;s not much
&gt; &gt; different from any other user.  But the same reproducer run just on the
&gt; &gt; ext4 filesystem does give the right permissions....
&gt; &gt; 
&gt; &gt; Oh, but looking at the system call, fs_namei.c:do_mkdirat(), it does:
&gt; &gt; 
&gt; &gt; 	if (!IS_POSIXACL(path.dentry-&gt;d_inode))
&gt; &gt; 		mode &amp;= ~current_umask();
&gt; &gt; 	error = security_path_mkdir(&amp;path, dentry, mode);
&gt; &gt; 	if (!error)
&gt; &gt; 		error = vfs_mkdir(path.dentry-&gt;d_inode, dentry, mode);
&gt; &gt; 
&gt; &gt; whereas nfsd just calls into vfs_mkdir().
&gt; &gt; 
&gt; &gt; And that IS_POSIXACL() check is exactly a check whether the filesystem
&gt; &gt; supports ACLs.  So I guess it&#39;s the responsibility of the caller of
&gt; &gt; vfs_mkdir() to handle that case.
&gt; 
&gt; But, that&#39;s unsatisfying: why isn&#39;t vfs_mkdir() taking care of this
&gt; itself?  And what about that security_path_mkdir() call?  And are the
&gt; other cases of that switch in fs/nfsd/vfs.c:nfsd_create_locked()
&gt; correct?  I think there may be some more cleanup here called for, I&#39;ll
&gt; poke around tomorrow.

Yes agreed and can confirm: The other cases in
fs/nfsd/vfs.c:nfsd_create_locked() seem to have the problem as well.

Regards,
Salvatore


</pre>

<div class="msgreceived"><hr><p>
<a name="102"></a>
<!-- command:forwarded -->
<!-- requester: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- request_addr: control@bugs.debian.org -->
<!-- time:1592305924 -->
<!-- new_data:
$new_data = {
              &#39;forwarded&#39; =&gt; &#39;<a href="https://lore.kernel.org/linux-nfs/20200616052835.GA19246@lorien.valinor.li/T/#m9c41f33123a7c44cdd7fa07611c678c1b0dace61">https://lore.kernel.org/linux-nfs/20200616052835.GA19246@lorien.valinor.li/T/#m9c41f33123a7c44cdd7fa07611c678c1b0dace61</a>&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;forwarded&#39; =&gt; &#39;&#39;
            };
-->
<strong>Set Bug forwarded-to-address to &#39;<a href="https://lore.kernel.org/linux-nfs/20200616052835.GA19246@lorien.valinor.li/T/#m9c41f33123a7c44cdd7fa07611c678c1b0dace61">https://lore.kernel.org/linux-nfs/20200616052835.GA19246@lorien.valinor.li/T/#m9c41f33123a7c44cdd7fa07611c678c1b0dace61</a>&#39;.</strong>
Request was from <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>
to <code>control@bugs.debian.org</code>.
 (Tue, 16 Jun 2020 11:12:04 GMT) (<a href="bugreport.cgi?bug=962254;msg=103">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=103">mbox</a>, <a href="#102">link</a>).</p></p></div>

<div class="msgreceived"><hr><p>
<a name="104"></a>
<!-- command:merge -->
<!-- requester: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- request_addr: control@bugs.debian.org -->
<!-- time:1592306828 -->
<!-- new_data:
$new_data = {
              &#39;mergedwith&#39; =&gt; &#39;934160&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;mergedwith&#39; =&gt; &#39;&#39;
            };
-->
<strong>Merged <a href="bugreport.cgi?bug=934160">934160</a> <a href="bugreport.cgi?bug=962254">962254</a></strong>
Request was from <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>
to <code>control@bugs.debian.org</code>.
 (Tue, 16 Jun 2020 11:27:08 GMT) (<a href="bugreport.cgi?bug=962254;msg=105">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=105">mbox</a>, <a href="#104">link</a>).</p></p></div>

<div class="msgreceived"><hr><p>
<a name="106"></a>
<!-- command:tag -->
<!-- requester: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- request_addr: control@bugs.debian.org -->
<!-- time:1592306829 -->
<!-- new_data:
$new_data = {
              &#39;keywords&#39; =&gt; &#39;security upstream&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;keywords&#39; =&gt; &#39;security&#39;
            };
-->
<strong>Added tag(s) upstream.</strong>
Request was from <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>
to <code>control@bugs.debian.org</code>.
 (Tue, 16 Jun 2020 11:27:09 GMT) (<a href="bugreport.cgi?bug=962254;msg=107">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=107">mbox</a>, <a href="#106">link</a>).</p></p></div>

<div class="msgreceived"><hr><p>
<a name="108"></a>
<!-- command:found -->
<!-- requester: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- request_addr: control@bugs.debian.org -->
<!-- time:1592319425 -->
<!-- new_data:
$new_data = {
              &#39;found_versions&#39; =&gt; [
                                    &#39;linux/5.6.14-2&#39;,
                                    &#39;linux/4.19.118-2&#39;
                                  ]
            };
-->
<!-- old_data:
$old_data = {
              &#39;found_versions&#39; =&gt; [
                                    &#39;linux/4.19.118-2&#39;
                                  ]
            };
-->
<strong>Marked as found in versions linux/5.6.14-2.</strong>
Request was from <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>
to <code>control@bugs.debian.org</code>.
 (Tue, 16 Jun 2020 14:57:05 GMT) (<a href="bugreport.cgi?bug=962254;msg=109">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=109">mbox</a>, <a href="#108">link</a>).</p></p></div>

<div class="msgreceived"><hr><p>
<a name="110"></a>
<!-- command:found -->
<!-- requester: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- request_addr: control@bugs.debian.org -->
<!-- time:1592319426 -->
<!-- new_data:
$new_data = {
              &#39;found_versions&#39; =&gt; [
                                    &#39;linux/5.7~rc5-1~exp1&#39;,
                                    &#39;linux/4.19.118-2&#39;,
                                    &#39;linux/5.6.14-2&#39;
                                  ]
            };
-->
<!-- old_data:
$old_data = {
              &#39;found_versions&#39; =&gt; [
                                    &#39;linux/5.6.14-2&#39;,
                                    &#39;linux/4.19.118-2&#39;
                                  ]
            };
-->
<strong>Marked as found in versions linux/5.7~rc5-1~exp1.</strong>
Request was from <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>
to <code>control@bugs.debian.org</code>.
 (Tue, 16 Jun 2020 14:57:06 GMT) (<a href="bugreport.cgi?bug=962254;msg=111">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=111">mbox</a>, <a href="#110">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="112"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592324462 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Tue, 16 Jun 2020 16:21:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=113">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=113">mbox</a>, <a href="#112">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="114"></a>
<!-- request_addr: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- time:1592324462 -->
<strong>Acknowledgement sent</strong>
to <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Tue, 16 Jun 2020 16:21:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=115">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=115">mbox</a>, <a href="#114">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="116"></a><a name="msg116"></a><a href="#116">Message #116</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=116">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=116">mbox</a>, <a href="mailto:962254@bugs.debian.org?body=On%20Tue%2C%2016%20Jun%202020%2018%3A16%3A58%20%2B0200%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%20wrote%3A%0A%3E%20Hi%20Bruce%2C%0A%3E%20%0A%3E%20On%20Mon%2C%20Jun%2015%2C%202020%20at%2010%3A42%3A12PM%20-0400%2C%20J.%20Bruce%20Fields%20wrote%3A%0A%3E%20%3E%20On%20Mon%2C%20Jun%2015%2C%202020%20at%2010%3A38%3A20PM%20-0400%2C%20J.%20Bruce%20Fields%20wrote%3A%0A%3E%20%3E%20%3E%20Thanks%20for%20the%20detailed%20reproducer.%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20It%27s%20weird%2C%20as%20the%20server%20is%20basically%20just%20setting%20the%20transmitted%0A%3E%20%3E%20%3E%20umask%20and%20then%20calling%20into%20the%20vfs%20to%20handle%20the%20rest%2C%20so%20it%27s%20not%20much%0A%3E%20%3E%20%3E%20different%20from%20any%20other%20user.%20%20But%20the%20same%20reproducer%20run%20just%20on%20the%0A%3E%20%3E%20%3E%20ext4%20filesystem%20does%20give%20the%20right%20permissions....%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20Oh%2C%20but%20looking%20at%20the%20system%20call%2C%20fs_namei.c%3Ado_mkdirat%28%29%2C%20it%20does%3A%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20%09if%20%28%21IS_POSIXACL%28path.dentry-%3Ed_inode%29%29%0A%3E%20%3E%20%3E%20%09%09mode%20%26%3D%20~current_umask%28%29%3B%0A%3E%20%3E%20%3E%20%09error%20%3D%20security_path_mkdir%28%26path%2C%20dentry%2C%20mode%29%3B%0A%3E%20%3E%20%3E%20%09if%20%28%21error%29%0A%3E%20%3E%20%3E%20%09%09error%20%3D%20vfs_mkdir%28path.dentry-%3Ed_inode%2C%20dentry%2C%20mode%29%3B%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20whereas%20nfsd%20just%20calls%20into%20vfs_mkdir%28%29.%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20And%20that%20IS_POSIXACL%28%29%20check%20is%20exactly%20a%20check%20whether%20the%20filesystem%0A%3E%20%3E%20%3E%20supports%20ACLs.%20%20So%20I%20guess%20it%27s%20the%20responsibility%20of%20the%20caller%20of%0A%3E%20%3E%20%3E%20vfs_mkdir%28%29%20to%20handle%20that%20case.%0A%3E%20%3E%20%0A%3E%20%3E%20But%2C%20that%27s%20unsatisfying%3A%20why%20isn%27t%20vfs_mkdir%28%29%20taking%20care%20of%20this%0A%3E%20%3E%20itself%3F%20%20And%20what%20about%20that%20security_path_mkdir%28%29%20call%3F%20%20And%20are%20the%0A%3E%20%3E%20other%20cases%20of%20that%20switch%20in%20fs%2Fnfsd%2Fvfs.c%3Anfsd_create_locked%28%29%0A%3E%20%3E%20correct%3F%20%20I%20think%20there%20may%20be%20some%20more%20cleanup%20here%20called%20for%2C%20I%27ll%0A%3E%20%3E%20poke%20around%20tomorrow.%0A%3E%20%0A%3E%20This%20might%20be%20unneeded%20to%20test%20but%20as%20additional%20datapoint%20which%0A%3E%20confirms%20the%20suspect%3A%20I%20tried%20check%20the%20commit%20around%2047057abde515%0A%3E%20%28%22nfsd%3A%20add%20support%20for%20the%20umask%20attribute%22%29%20in%204.10-rc1%0A%3E%20%0A%3E%20A%20kernel%20built%20with%2047057abde515~1%2C%20and%20mounting%20from%20an%20enough%20recent%0A%3E%20client%20which%20has%20at%20least%20dff25ddb4808%20%28%22nfs%3A%20add%20support%20for%20the%0A%3E%20umask%20attribute%22%29%20does%20not%20show%20the%20observed%20behaviour%2C%20the%20server%0A%3E%20built%20with%2047057abde515%20does.%0A%3E%20%0A%3E%20Regards%2C%0A%3E%20Salvatore%0A%3E%20%0A%3E%20%0A&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%0A%20Filesystem%20with%20noacl%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;References=%3C20200605051607.GA34405%40mattapan.m5p.com%3E%0A%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%0A%20%3C20200615185311.GA702681%40eldamar.local%3E%0A%20%3C20200616023820.GB214986%40pick.fieldses.org%3E%0A%20%3C20200616024212.GC214986%40pick.fieldses.org%3E%0A%20%3C20200616161658.GA17251%40lorien.valinor.li%3E&amp;In-Reply-To=%3C20200616161658.GA17251%40lorien.valinor.li%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=carnil%40debian.org" alt="">
<div class="header"><span class="headerfield">From:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">To:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org,
	linux-nfs@vger.kernel.org, agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported
 Filesystem with noacl (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Tue, 16 Jun 2020 18:16:58 +0200</div>
</div>
<pre class="message">Hi Bruce,

On Mon, Jun 15, 2020 at 10:42:12PM -0400, J. Bruce Fields wrote:
&gt; On Mon, Jun 15, 2020 at 10:38:20PM -0400, J. Bruce Fields wrote:
&gt; &gt; Thanks for the detailed reproducer.
&gt; &gt; 
&gt; &gt; It&#39;s weird, as the server is basically just setting the transmitted
&gt; &gt; umask and then calling into the vfs to handle the rest, so it&#39;s not much
&gt; &gt; different from any other user.  But the same reproducer run just on the
&gt; &gt; ext4 filesystem does give the right permissions....
&gt; &gt; 
&gt; &gt; Oh, but looking at the system call, fs_namei.c:do_mkdirat(), it does:
&gt; &gt; 
&gt; &gt; 	if (!IS_POSIXACL(path.dentry-&gt;d_inode))
&gt; &gt; 		mode &amp;= ~current_umask();
&gt; &gt; 	error = security_path_mkdir(&amp;path, dentry, mode);
&gt; &gt; 	if (!error)
&gt; &gt; 		error = vfs_mkdir(path.dentry-&gt;d_inode, dentry, mode);
&gt; &gt; 
&gt; &gt; whereas nfsd just calls into vfs_mkdir().
&gt; &gt; 
&gt; &gt; And that IS_POSIXACL() check is exactly a check whether the filesystem
&gt; &gt; supports ACLs.  So I guess it&#39;s the responsibility of the caller of
&gt; &gt; vfs_mkdir() to handle that case.
&gt; 
&gt; But, that&#39;s unsatisfying: why isn&#39;t vfs_mkdir() taking care of this
&gt; itself?  And what about that security_path_mkdir() call?  And are the
&gt; other cases of that switch in fs/nfsd/vfs.c:nfsd_create_locked()
&gt; correct?  I think there may be some more cleanup here called for, I&#39;ll
&gt; poke around tomorrow.

This might be unneeded to test but as additional datapoint which
confirms the suspect: I tried check the commit around 47057abde515
(&quot;nfsd: add support for the umask attribute&quot;) in 4.10-rc1

A kernel built with 47057abde515~1, and mounting from an enough recent
client which has at least dff25ddb4808 (&quot;nfs: add support for the
umask attribute&quot;) does not show the observed behaviour, the server
built with 47057abde515 does.

Regards,
Salvatore


</pre>

<div class="msgreceived"><hr><p>
<a name="117"></a>
<!-- command:found -->
<!-- requester: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- request_addr: control@bugs.debian.org -->
<!-- time:1592324464 -->
<!-- new_data:
$new_data = {
              &#39;found_versions&#39; =&gt; [
                                    &#39;linux/4.19.118-2&#39;,
                                    &#39;linux/5.6.14-2&#39;,
                                    &#39;linux/5.7~rc5-1~exp1&#39;,
                                    &#39;linux/4.10-1~exp1&#39;
                                  ]
            };
-->
<!-- old_data:
$old_data = {
              &#39;found_versions&#39; =&gt; [
                                    &#39;linux/5.7~rc5-1~exp1&#39;,
                                    &#39;linux/4.19.118-2&#39;,
                                    &#39;linux/5.6.14-2&#39;
                                  ]
            };
-->
<strong>Marked as found in versions linux/4.10-1~exp1.</strong>
Request was from <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>
to <code>control@bugs.debian.org</code>.
 (Tue, 16 Jun 2020 16:21:04 GMT) (<a href="bugreport.cgi?bug=962254;msg=118">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=118">mbox</a>, <a href="#117">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="119"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592355783 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Wed, 17 Jun 2020 01:03:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=120">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=120">mbox</a>, <a href="#119">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="121"></a>
<!-- request_addr: &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt; -->
<!-- time:1592355783 -->
<strong>Acknowledgement sent</strong>
to <code>&quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Wed, 17 Jun 2020 01:03:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=122">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=122">mbox</a>, <a href="#121">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="123"></a><a name="msg123"></a><a href="#123">Message #123</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=123">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=123">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200617005849.GA262660%40pick.fieldses.org%3E&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%0A%20Filesystem%20with%20noacl%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;References=%3C20200605174349.GA40135%40mattapan.m5p.com%3E%0A%20%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%0A%20%3C20200615185311.GA702681%40eldamar.local%3E%0A%20%3C20200616023820.GB214986%40pick.fieldses.org%3E%0A%20%3C20200616024212.GC214986%40pick.fieldses.org%3E%0A%20%3C20200616161658.GA17251%40lorien.valinor.li%3E%0A%20%3C20200617005849.GA262660%40pick.fieldses.org%3E&amp;body=On%20Tue%2C%2016%20Jun%202020%2020%3A58%3A49%20-0400%20%22J.%20Bruce%20Fields%22%20%3Cbfields%40redhat.com%3E%20wrote%3A%0A%3E%20On%20Tue%2C%20Jun%2016%2C%202020%20at%2006%3A16%3A58PM%20%2B0200%2C%20Salvatore%20Bonaccorso%20wrote%3A%0A%3E%20%3E%20This%20might%20be%20unneeded%20to%20test%20but%20as%20additional%20datapoint%20which%0A%3E%20%3E%20confirms%20the%20suspect%3A%20I%20tried%20check%20the%20commit%20around%2047057abde515%0A%3E%20%3E%20%28%22nfsd%3A%20add%20support%20for%20the%20umask%20attribute%22%29%20in%204.10-rc1%0A%3E%20%3E%20%0A%3E%20%3E%20A%20kernel%20built%20with%2047057abde515~1%2C%20and%20mounting%20from%20an%20enough%20recent%0A%3E%20%3E%20client%20which%20has%20at%20least%20dff25ddb4808%20%28%22nfs%3A%20add%20support%20for%20the%0A%3E%20%3E%20umask%20attribute%22%29%20does%20not%20show%20the%20observed%20behaviour%2C%20the%20server%0A%3E%20%3E%20built%20with%2047057abde515%20does.%0A%3E%20%0A%3E%20Thanks%20for%20the%20confirmation%21%0A%3E%20%0A%3E%20I%20think%20I%27ll%20send%20the%20following%20upstream.%0A%3E%20%0A%3E%20--b.%0A%3E%20%0A%3E%20commit%20595ccdca9321%0A%3E%20Author%3A%20J.%20Bruce%20Fields%20%3Cbfields%40redhat.com%3E%0A%3E%20Date%3A%20%20%20Tue%20Jun%2016%2016%3A43%3A18%202020%20-0400%0A%3E%20%0A%3E%20%20%20%20%20nfsd%3A%20apply%20umask%20on%20fs%20without%20ACL%20support%0A%3E%20%20%20%20%20%0A%3E%20%20%20%20%20The%20server%20is%20failing%20to%20apply%20the%20umask%20when%20creating%20new%20objects%20on%0A%3E%20%20%20%20%20filesystems%20without%20ACL%20support.%0A%3E%20%20%20%20%20%0A%3E%20%20%20%20%20To%20reproduce%20this%2C%20you%20need%20to%20use%20NFSv4.2%20and%20a%20client%20and%20server%0A%3E%20%20%20%20%20recent%20enough%20to%20support%20umask%2C%20and%20you%20need%20to%20export%20a%20filesystem%20that%0A%3E%20%20%20%20%20lacks%20ACL%20support%20%28for%20example%2C%20ext4%20with%20the%20%22noacl%22%20mount%20option%29.%0A%3E%20%20%20%20%20%0A%3E%20%20%20%20%20Filesystems%20with%20ACL%20support%20are%20expected%20to%20take%20care%20of%20the%20umask%0A%3E%20%20%20%20%20themselves%20%28usually%20by%20calling%20posix_acl_create%29.%0A%3E%20%20%20%20%20%0A%3E%20%20%20%20%20For%20filesystems%20without%20ACL%20support%2C%20this%20is%20up%20to%20the%20caller%20of%0A%3E%20%20%20%20%20vfs_create%28%29%2C%20vfs_mknod%28%29%2C%20or%20vfs_mkdir%28%29.%0A%3E%20%20%20%20%20%0A%3E%20%20%20%20%20Reported-by%3A%20Elliott%20Mitchell%20%3Cehem%2Bdebian%40m5p.com%3E%0A%3E%20%20%20%20%20Reported-by%3A%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%0A%3E%20%20%20%20%20Fixes%3A%2047057abde515%20%28%22nfsd%3A%20add%20support%20for%20the%20umask%20attribute%22%29%0A%3E%20%20%20%20%20Signed-off-by%3A%20J.%20Bruce%20Fields%20%3Cbfields%40redhat.com%3E%0A%3E%20%0A%3E%20diff%20--git%20a%2Ffs%2Fnfsd%2Fvfs.c%20b%2Ffs%2Fnfsd%2Fvfs.c%0A%3E%20index%200aa02eb18bd3..8fa3e0ff3671%20100644%0A%3E%20---%20a%2Ffs%2Fnfsd%2Fvfs.c%0A%3E%20%2B%2B%2B%20b%2Ffs%2Fnfsd%2Fvfs.c%0A%3E%20%40%40%20-1225%2C6%20%2B1225%2C9%20%40%40%20nfsd_create_locked%28struct%20svc_rqst%20%2Arqstp%2C%20struct%20svc_fh%20%2Afhp%2C%0A%3E%20%20%09%09iap-%3Eia_mode%20%3D%200%3B%0A%3E%20%20%09iap-%3Eia_mode%20%3D%20%28iap-%3Eia_mode%20%26%20S_IALLUGO%29%20%7C%20type%3B%0A%3E%20%20%0A%3E%20%2B%09if%20%28%21IS_POSIXACL%28dirp%29%29%0A%3E%20%2B%09%09iap-%3Eia_mode%20%26%3D%20~current_umask%28%29%3B%0A%3E%20%2B%0A%3E%20%20%09err%20%3D%200%3B%0A%3E%20%20%09host_err%20%3D%200%3B%0A%3E%20%20%09switch%20%28type%29%20%7B%0A%3E%20%40%40%20-1457%2C6%20%2B1460%2C9%20%40%40%20do_nfsd_create%28struct%20svc_rqst%20%2Arqstp%2C%20struct%20svc_fh%20%2Afhp%2C%0A%3E%20%20%09%09goto%20out%3B%0A%3E%20%20%09%7D%0A%3E%20%20%0A%3E%20%2B%09if%20%28%21IS_POSIXACL%28dirp%29%29%0A%3E%20%2B%09%09iap-%3Eia_mode%20%26%3D%20~current_umask%28%29%3B%0A">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=bfields%40redhat.com" alt="">
<div class="header"><span class="headerfield">From:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org,
	linux-nfs@vger.kernel.org, agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported
 Filesystem with noacl (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Tue, 16 Jun 2020 20:58:49 -0400</div>
</div>
<pre class="message">On Tue, Jun 16, 2020 at 06:16:58PM +0200, Salvatore Bonaccorso wrote:
&gt; This might be unneeded to test but as additional datapoint which
&gt; confirms the suspect: I tried check the commit around 47057abde515
&gt; (&quot;nfsd: add support for the umask attribute&quot;) in 4.10-rc1
&gt; 
&gt; A kernel built with 47057abde515~1, and mounting from an enough recent
&gt; client which has at least dff25ddb4808 (&quot;nfs: add support for the
&gt; umask attribute&quot;) does not show the observed behaviour, the server
&gt; built with 47057abde515 does.

Thanks for the confirmation!

I think I&#39;ll send the following upstream.

--b.

commit 595ccdca9321
Author: J. Bruce Fields &lt;bfields@redhat.com&gt;
Date:   Tue Jun 16 16:43:18 2020 -0400

    nfsd: apply umask on fs without ACL support
    
    The server is failing to apply the umask when creating new objects on
    filesystems without ACL support.
    
    To reproduce this, you need to use NFSv4.2 and a client and server
    recent enough to support umask, and you need to export a filesystem that
    lacks ACL support (for example, ext4 with the &quot;noacl&quot; mount option).
    
    Filesystems with ACL support are expected to take care of the umask
    themselves (usually by calling posix_acl_create).
    
    For filesystems without ACL support, this is up to the caller of
    vfs_create(), vfs_mknod(), or vfs_mkdir().
    
    Reported-by: Elliott Mitchell &lt;ehem+debian@m5p.com&gt;
    Reported-by: Salvatore Bonaccorso &lt;carnil@debian.org&gt;
    Fixes: 47057abde515 (&quot;nfsd: add support for the umask attribute&quot;)
    Signed-off-by: J. Bruce Fields &lt;bfields@redhat.com&gt;

diff --git a/fs/nfsd/vfs.c b/fs/nfsd/vfs.c
index 0aa02eb18bd3..8fa3e0ff3671 100644
--- a/fs/nfsd/vfs.c
+++ b/fs/nfsd/vfs.c
@@ -1225,6 +1225,9 @@ nfsd_create_locked(struct svc_rqst *rqstp, struct svc_fh *fhp,
 		iap-&gt;ia_mode = 0;
 	iap-&gt;ia_mode = (iap-&gt;ia_mode &amp; S_IALLUGO) | type;
 
+	if (!IS_POSIXACL(dirp))
+		iap-&gt;ia_mode &amp;= ~current_umask();
+
 	err = 0;
 	host_err = 0;
 	switch (type) {
@@ -1457,6 +1460,9 @@ do_nfsd_create(struct svc_rqst *rqstp, struct svc_fh *fhp,
 		goto out;
 	}
 
+	if (!IS_POSIXACL(dirp))
+		iap-&gt;ia_mode &amp;= ~current_umask();
+
 	host_err = vfs_create(dirp, dchild, iap-&gt;ia_mode, true);
 	if (host_err &lt; 0) {
 		fh_drop_write(fhp);



</pre>

<div class="msgreceived"><hr><p>
<a name="124"></a>
<!-- command:title -->
<!-- requester: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- request_addr: control@bugs.debian.org -->
<!-- time:1592368744 -->
<!-- new_data:
$new_data = {
              &#39;subject&#39; =&gt; &#39;NFSv4.2: umask not applied on filesystem without ACL support&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;subject&#39; =&gt; &#39;NFS v4.2 broken between 4.9 and 4.15&#39;
            };
-->
<strong>Changed Bug title to &#39;NFSv4.2: umask not applied on filesystem without ACL support&#39; from &#39;NFS v4.2 broken between 4.9 and 4.15&#39;.</strong>
Request was from <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>
to <code>control@bugs.debian.org</code>.
 (Wed, 17 Jun 2020 04:39:04 GMT) (<a href="bugreport.cgi?bug=962254;msg=125">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=125">mbox</a>, <a href="#124">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="126"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592370183 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Wed, 17 Jun 2020 05:03:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=127">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=127">mbox</a>, <a href="#126">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="128"></a>
<!-- request_addr: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- time:1592370183 -->
<strong>Acknowledgement sent</strong>
to <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Wed, 17 Jun 2020 05:03:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=129">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=129">mbox</a>, <a href="#128">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="130"></a><a name="msg130"></a><a href="#130">Message #130</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=130">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=130">mbox</a>, <a href="mailto:962254@bugs.debian.org?References=%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%0A%20%3C20200615185311.GA702681%40eldamar.local%3E%0A%20%3C20200616023820.GB214986%40pick.fieldses.org%3E%0A%20%3C20200616024212.GC214986%40pick.fieldses.org%3E%0A%20%3C20200616161658.GA17251%40lorien.valinor.li%3E%0A%20%3C20200617005849.GA262660%40pick.fieldses.org%3E%0A%20%3C20200617045829.GA26611%40lorien.valinor.li%3E&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%0A%20Filesystem%20with%20noacl&amp;body=On%20Wed%2C%2017%20Jun%202020%2006%3A58%3A29%20%2B0200%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%20wrote%3A%0A%3E%20Hi%2C%0A%3E%20%0A%3E%20On%20Tue%2C%20Jun%2016%2C%202020%20at%2008%3A58%3A49PM%20-0400%2C%20J.%20Bruce%20Fields%20wrote%3A%0A%3E%20%3E%20On%20Tue%2C%20Jun%2016%2C%202020%20at%2006%3A16%3A58PM%20%2B0200%2C%20Salvatore%20Bonaccorso%20wrote%3A%0A%3E%20%3E%20%3E%20This%20might%20be%20unneeded%20to%20test%20but%20as%20additional%20datapoint%20which%0A%3E%20%3E%20%3E%20confirms%20the%20suspect%3A%20I%20tried%20check%20the%20commit%20around%2047057abde515%0A%3E%20%3E%20%3E%20%28%22nfsd%3A%20add%20support%20for%20the%20umask%20attribute%22%29%20in%204.10-rc1%0A%3E%20%3E%20%3E%20%0A%3E%20%3E%20%3E%20A%20kernel%20built%20with%2047057abde515~1%2C%20and%20mounting%20from%20an%20enough%20recent%0A%3E%20%3E%20%3E%20client%20which%20has%20at%20least%20dff25ddb4808%20%28%22nfs%3A%20add%20support%20for%20the%0A%3E%20%3E%20%3E%20umask%20attribute%22%29%20does%20not%20show%20the%20observed%20behaviour%2C%20the%20server%0A%3E%20%3E%20%3E%20built%20with%2047057abde515%20does.%0A%3E%20%3E%20%0A%3E%20%3E%20Thanks%20for%20the%20confirmation%21%0A%3E%20%3E%20%0A%3E%20%3E%20I%20think%20I%27ll%20send%20the%20following%20upstream.%0A%3E%20%3E%20%0A%3E%20%3E%20--b.%0A%3E%20%3E%20%0A%3E%20%3E%20commit%20595ccdca9321%0A%3E%20%3E%20Author%3A%20J.%20Bruce%20Fields%20%3Cbfields%40redhat.com%3E%0A%3E%20%3E%20Date%3A%20%20%20Tue%20Jun%2016%2016%3A43%3A18%202020%20-0400%0A%3E%20%3E%20%0A%3E%20%3E%20%20%20%20%20nfsd%3A%20apply%20umask%20on%20fs%20without%20ACL%20support%0A%3E%20%3E%20%20%20%20%20%0A%3E%20%3E%20%20%20%20%20The%20server%20is%20failing%20to%20apply%20the%20umask%20when%20creating%20new%20objects%20on%0A%3E%20%3E%20%20%20%20%20filesystems%20without%20ACL%20support.%0A%3E%20%3E%20%20%20%20%20%0A%3E%20%3E%20%20%20%20%20To%20reproduce%20this%2C%20you%20need%20to%20use%20NFSv4.2%20and%20a%20client%20and%20server%0A%3E%20%3E%20%20%20%20%20recent%20enough%20to%20support%20umask%2C%20and%20you%20need%20to%20export%20a%20filesystem%20that%0A%3E%20%3E%20%20%20%20%20lacks%20ACL%20support%20%28for%20example%2C%20ext4%20with%20the%20%22noacl%22%20mount%20option%29.%0A%3E%20%3E%20%20%20%20%20%0A%3E%20%3E%20%20%20%20%20Filesystems%20with%20ACL%20support%20are%20expected%20to%20take%20care%20of%20the%20umask%0A%3E%20%3E%20%20%20%20%20themselves%20%28usually%20by%20calling%20posix_acl_create%29.%0A%3E%20%3E%20%20%20%20%20%0A%3E%20%3E%20%20%20%20%20For%20filesystems%20without%20ACL%20support%2C%20this%20is%20up%20to%20the%20caller%20of%0A%3E%20%3E%20%20%20%20%20vfs_create%28%29%2C%20vfs_mknod%28%29%2C%20or%20vfs_mkdir%28%29.%0A%3E%20%3E%20%20%20%20%20%0A%3E%20%3E%20%20%20%20%20Reported-by%3A%20Elliott%20Mitchell%20%3Cehem%2Bdebian%40m5p.com%3E%0A%3E%20%3E%20%20%20%20%20Reported-by%3A%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%0A%3E%20%3E%20%20%20%20%20Fixes%3A%2047057abde515%20%28%22nfsd%3A%20add%20support%20for%20the%20umask%20attribute%22%29%0A%3E%20%3E%20%20%20%20%20Signed-off-by%3A%20J.%20Bruce%20Fields%20%3Cbfields%40redhat.com%3E%0A%3E%20%3E%20%0A%3E%20%3E%20diff%20--git%20a%2Ffs%2Fnfsd%2Fvfs.c%20b%2Ffs%2Fnfsd%2Fvfs.c%0A%3E%20%3E%20index%200aa02eb18bd3..8fa3e0ff3671%20100644%0A%3E%20%3E%20---%20a%2Ffs%2Fnfsd%2Fvfs.c%0A%3E%20%3E%20%2B%2B%2B%20b%2Ffs%2Fnfsd%2Fvfs.c%0A%3E%20%3E%20%40%40%20-1225%2C6%20%2B1225%2C9%20%40%40%20nfsd_create_locked%28struct%20svc_rqst%20%2Arqstp%2C%20struct%20svc_fh%20%2Afhp%2C%0A%3E%20%3E%20%20%09%09iap-%3Eia_mode%20%3D%200%3B%0A%3E%20%3E%20%20%09iap-%3Eia_mode%20%3D%20%28iap-%3Eia_mode%20%26%20S_IALLUGO%29%20%7C%20type%3B%0A%3E%20%3E%20%20%0A%3E%20%3E%20%2B%09if%20%28%21IS_POSIXACL%28dirp%29%29%0A%3E%20%3E%20%2B%09%09iap-%3Eia_mode%20%26%3D%20~current_umask%28%29%3B%0A%3E%20%3E%20%2B%0A%3E%20%3E%20%20%09err%20%3D%200%3B%0A%3E%20%3E%20%20%09host_err%20%3D%200%3B%0A%3E%20%3E%20%20%09switch%20%28type%29%20%7B%0A%3E%20%3E%20%40%40%20-1457%2C6%20%2B1460%2C9%20%40%40%20do_nfsd_create%28struct%20svc_rqst%20%2Arqstp%2C%20struct%20svc_fh%20%2Afhp%2C%0A%3E%20%3E%20%20%09%09goto%20out%3B%0A%3E%20%3E%20%20%09%7D%0A&amp;In-Reply-To=%3C20200617045829.GA26611%40lorien.valinor.li%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=carnil%40debian.org" alt="">
<div class="header"><span class="headerfield">From:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">To:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org,
	linux-nfs@vger.kernel.org, agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported
 Filesystem with noacl</div>
<div class="header"><span class="headerfield">Date:</span> Wed, 17 Jun 2020 06:58:29 +0200</div>
</div>
<pre class="message">Hi,

On Tue, Jun 16, 2020 at 08:58:49PM -0400, J. Bruce Fields wrote:
&gt; On Tue, Jun 16, 2020 at 06:16:58PM +0200, Salvatore Bonaccorso wrote:
&gt; &gt; This might be unneeded to test but as additional datapoint which
&gt; &gt; confirms the suspect: I tried check the commit around 47057abde515
&gt; &gt; (&quot;nfsd: add support for the umask attribute&quot;) in 4.10-rc1
&gt; &gt; 
&gt; &gt; A kernel built with 47057abde515~1, and mounting from an enough recent
&gt; &gt; client which has at least dff25ddb4808 (&quot;nfs: add support for the
&gt; &gt; umask attribute&quot;) does not show the observed behaviour, the server
&gt; &gt; built with 47057abde515 does.
&gt; 
&gt; Thanks for the confirmation!
&gt; 
&gt; I think I&#39;ll send the following upstream.
&gt; 
&gt; --b.
&gt; 
&gt; commit 595ccdca9321
&gt; Author: J. Bruce Fields &lt;bfields@redhat.com&gt;
&gt; Date:   Tue Jun 16 16:43:18 2020 -0400
&gt; 
&gt;     nfsd: apply umask on fs without ACL support
&gt;     
&gt;     The server is failing to apply the umask when creating new objects on
&gt;     filesystems without ACL support.
&gt;     
&gt;     To reproduce this, you need to use NFSv4.2 and a client and server
&gt;     recent enough to support umask, and you need to export a filesystem that
&gt;     lacks ACL support (for example, ext4 with the &quot;noacl&quot; mount option).
&gt;     
&gt;     Filesystems with ACL support are expected to take care of the umask
&gt;     themselves (usually by calling posix_acl_create).
&gt;     
&gt;     For filesystems without ACL support, this is up to the caller of
&gt;     vfs_create(), vfs_mknod(), or vfs_mkdir().
&gt;     
&gt;     Reported-by: Elliott Mitchell &lt;ehem+debian@m5p.com&gt;
&gt;     Reported-by: Salvatore Bonaccorso &lt;carnil@debian.org&gt;
&gt;     Fixes: 47057abde515 (&quot;nfsd: add support for the umask attribute&quot;)
&gt;     Signed-off-by: J. Bruce Fields &lt;bfields@redhat.com&gt;
&gt; 
&gt; diff --git a/fs/nfsd/vfs.c b/fs/nfsd/vfs.c
&gt; index 0aa02eb18bd3..8fa3e0ff3671 100644
&gt; --- a/fs/nfsd/vfs.c
&gt; +++ b/fs/nfsd/vfs.c
&gt; @@ -1225,6 +1225,9 @@ nfsd_create_locked(struct svc_rqst *rqstp, struct svc_fh *fhp,
&gt;  		iap-&gt;ia_mode = 0;
&gt;  	iap-&gt;ia_mode = (iap-&gt;ia_mode &amp; S_IALLUGO) | type;
&gt;  
&gt; +	if (!IS_POSIXACL(dirp))
&gt; +		iap-&gt;ia_mode &amp;= ~current_umask();
&gt; +
&gt;  	err = 0;
&gt;  	host_err = 0;
&gt;  	switch (type) {
&gt; @@ -1457,6 +1460,9 @@ do_nfsd_create(struct svc_rqst *rqstp, struct svc_fh *fhp,
&gt;  		goto out;
&gt;  	}
&gt;  
&gt; +	if (!IS_POSIXACL(dirp))
&gt; +		iap-&gt;ia_mode &amp;= ~current_umask();
&gt; +
&gt;  	host_err = vfs_create(dirp, dchild, iap-&gt;ia_mode, true);
&gt;  	if (host_err &lt; 0) {
&gt;  		fh_drop_write(fhp);

Thank you, could test this on my test setup and seem to work properly.

Should it also be CC&#39;ed to stable@vger.kernel.org so it is picked up
by the current supported stable series?

Regards,
Salvatore


</pre>

<div class="infmessage"><hr><p>
<a name="131"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592398263 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Wed, 17 Jun 2020 12:51:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=132">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=132">mbox</a>, <a href="#131">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="133"></a>
<!-- request_addr: &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt; -->
<!-- time:1592398263 -->
<strong>Acknowledgement sent</strong>
to <code>&quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Wed, 17 Jun 2020 12:51:03 GMT) (<a href="bugreport.cgi?bug=962254;msg=134">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=134">mbox</a>, <a href="#133">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="135"></a><a name="msg135"></a><a href="#135">Message #135</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=135">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=135">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200617124611.GA266716%40pick.fieldses.org%3E&amp;body=On%20Wed%2C%2017%20Jun%202020%2008%3A46%3A11%20-0400%20%22J.%20Bruce%20Fields%22%20%3Cbfields%40redhat.com%3E%20wrote%3A%0A%3E%20On%20Wed%2C%20Jun%2017%2C%202020%20at%2006%3A58%3A29AM%20%2B0200%2C%20Salvatore%20Bonaccorso%20wrote%3A%0A%3E%20%3E%20On%20Tue%2C%20Jun%2016%2C%202020%20at%2008%3A58%3A49PM%20-0400%2C%20J.%20Bruce%20Fields%20wrote%3A%0A%3E%20%3E%20Thank%20you%2C%20could%20test%20this%20on%20my%20test%20setup%20and%20seem%20to%20work%20properly.%0A%3E%20%0A%3E%20Great%2C%20thanks.%0A%3E%20%0A%3E%20%3E%20Should%20it%20also%20be%20CC%27ed%20to%20stable%40vger.kernel.org%20so%20it%20is%20picked%20up%0A%3E%20%3E%20by%20the%20current%20supported%20stable%20series%3F%0A%3E%20%0A%3E%20Will%20do.--b.%0A%3E%20%0A%3E%20%0A%3E%20%0A&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%0A%20Filesystem%20with%20noacl&amp;References=%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%0A%20%3C20200615185311.GA702681%40eldamar.local%3E%0A%20%3C20200616023820.GB214986%40pick.fieldses.org%3E%0A%20%3C20200616024212.GC214986%40pick.fieldses.org%3E%0A%20%3C20200616161658.GA17251%40lorien.valinor.li%3E%0A%20%3C20200617005849.GA262660%40pick.fieldses.org%3E%0A%20%3C20200617045829.GA26611%40lorien.valinor.li%3E%0A%20%3C20200617124611.GA266716%40pick.fieldses.org%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=bfields%40redhat.com" alt="">
<div class="header"><span class="headerfield">From:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> Salvatore Bonaccorso &lt;carnil@debian.org&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org,
	linux-nfs@vger.kernel.org, agruenba@redhat.com</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported
 Filesystem with noacl</div>
<div class="header"><span class="headerfield">Date:</span> Wed, 17 Jun 2020 08:46:11 -0400</div>
</div>
<pre class="message">On Wed, Jun 17, 2020 at 06:58:29AM +0200, Salvatore Bonaccorso wrote:
&gt; On Tue, Jun 16, 2020 at 08:58:49PM -0400, J. Bruce Fields wrote:
&gt; Thank you, could test this on my test setup and seem to work properly.

Great, thanks.

&gt; Should it also be CC&#39;ed to stable@vger.kernel.org so it is picked up
&gt; by the current supported stable series?

Will do.--b.



</pre>

<div class="infmessage"><hr><p>
<a name="136"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592405465 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Wed, 17 Jun 2020 14:51:05 GMT) (<a href="bugreport.cgi?bug=962254;msg=137">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=137">mbox</a>, <a href="#136">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="138"></a>
<!-- request_addr: Andreas Gruenbacher &lt;agruenba@redhat.com&gt; -->
<!-- time:1592405465 -->
<strong>Acknowledgement sent</strong>
to <code>Andreas Gruenbacher &lt;agruenba@redhat.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Wed, 17 Jun 2020 14:51:05 GMT) (<a href="bugreport.cgi?bug=962254;msg=139">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=139">mbox</a>, <a href="#138">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="140"></a><a name="msg140"></a><a href="#140">Message #140</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=140">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=140">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3C20200617144256.1028414-1-agruenba%40redhat.com%3E&amp;body=On%20Wed%2C%2017%20Jun%202020%2016%3A42%3A56%20%2B0200%20Andreas%20Gruenbacher%20%3Cagruenba%40redhat.com%3E%20wrote%3A%0A%3E%20Hi%20Bruce%2C%0A%3E%20%0A%3E%20On%20Wed%2C%20Jun%2017%2C%202020%20at%202%3A58%20AM%20J.%20Bruce%20Fields%20%3Cbfields%40redhat.com%3E%20wrote%3A%0A%3E%20%3E%20I%20think%20I%27ll%20send%20the%20following%20upstream.%0A%3E%20%0A%3E%20looking%20good%2C%20but%20how%20about%20using%20a%20little%20helper%20for%20this%3F%0A%3E%20%0A%3E%20Also%20I%27m%20not%20sure%20if%20ecryptfs%20gets%20this%20right%2C%20so%20taking%20the%20ecryptfs%0A%3E%20list%20into%20the%20CC.%0A%3E%20%0A%3E%20Thanks%2C%0A%3E%20Andreas%0A%3E%20%0A%3E%20--%0A%3E%20%0A%3E%20Add%20a%20posix_acl_apply_umask%20helper%20for%20filesystems%20like%20nfsd%20to%20apply%0A%3E%20the%20umask%20before%20calling%20into%20vfs_create%2C%20vfs_mkdir%2C%20and%20vfs_mknod%20when%0A%3E%20necessary.%0A%3E%20%0A%3E%20Signed-off-by%3A%20Andreas%20Gruenbacher%20%3Cagruenba%40redhat.com%3E%0A%3E%20---%0A%3E%20%20fs%2Fnamei.c%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%209%20%2B%2B%2B------%0A%3E%20%20fs%2Fnfsd%2Fvfs.c%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%206%20%2B%2B----%0A%3E%20%20fs%2Foverlayfs%2Fdir.c%20%20%20%20%20%20%20%20%7C%20%204%20%2B%2B--%0A%3E%20%20fs%2Fposix_acl.c%20%20%20%20%20%20%20%20%20%20%20%20%7C%2015%20%2B%2B%2B%2B%2B%2B%2B%2B%2B%2B%2B%2B%2B%2B%2B%0A%3E%20%20include%2Flinux%2Fposix_acl.h%20%7C%20%206%20%2B%2B%2B%2B%2B%2B%0A%3E%20%205%20files%20changed%2C%2028%20insertions%28%2B%29%2C%2012%20deletions%28-%29%0A%3E%20%0A%3E%20diff%20--git%20a%2Ffs%2Fnamei.c%20b%2Ffs%2Fnamei.c%0A%3E%20index%2072d4219c93ac..a68887d3a446%20100644%0A%3E%20---%20a%2Ffs%2Fnamei.c%0A%3E%20%2B%2B%2B%20b%2Ffs%2Fnamei.c%0A%3E%20%40%40%20-3054%2C8%20%2B3054%2C7%20%40%40%20static%20struct%20dentry%20%2Alookup_open%28struct%20nameidata%20%2And%2C%20struct%20file%20%2Afile%2C%0A%3E%20%20%09if%20%28open_flag%20%26%20O_CREAT%29%20%7B%0A%3E%20%20%09%09if%20%28open_flag%20%26%20O_EXCL%29%0A%3E%20%20%09%09%09open_flag%20%26%3D%20~O_TRUNC%3B%0A%3E%20-%09%09if%20%28%21IS_POSIXACL%28dir-%3Ed_inode%29%29%0A%3E%20-%09%09%09mode%20%26%3D%20~current_umask%28%29%3B%0A%3E%20%2B%09%09posix_acl_apply_umask%28dir-%3Ed_inode%2C%20%26mode%29%3B%0A%3E%20%20%09%09if%20%28likely%28got_write%29%29%0A%3E%20%20%09%09%09create_error%20%3D%20may_o_create%28%26nd-%3Epath%2C%20dentry%2C%20mode%29%3B%0A%3E%20%20%09%09else%0A%3E%20%40%40%20-3580%2C8%20%2B3579%2C7%20%40%40%20long%20do_mknodat%28int%20dfd%2C%20const%20char%20__user%20%2Afilename%2C%20umode_t%20mode%2C%0A%3E%20%20%09if%20%28IS_ERR%28dentry%29%29%0A%3E%20%20%09%09return%20PTR_ERR%28dentry%29%3B%0A%3E%20%20%0A%3E%20-%09if%20%28%21IS_POSIXACL%28path.dentry-%3Ed_inode%29%29%0A%3E%20-%09%09mode%20%26%3D%20~current_umask%28%29%3B%0A%3E%20%2B%09posix_acl_apply_umask%28path.dentry-%3Ed_inode%2C%20%26mode%29%3B%0A%3E%20%20%09error%20%3D%20security_path_mknod%28%26path%2C%20dentry%2C%20mode%2C%20dev%29%3B%0A%3E%20%20%09if%20%28error%29%0A%3E%20%20%09%09goto%20out%3B%0A%3E%20%40%40%20-3657%2C8%20%2B3655%2C7%20%40%40%20long%20do_mkdirat%28int%20dfd%2C%20const%20char%20__user%20%2Apathname%2C%20umode_t%20mode%29%0A%3E%20%20%09if%20%28IS_ERR%28dentry%29%29%0A%3E%20%20%09%09return%20PTR_ERR%28dentry%29%3B%0A%3E%20%20%0A%3E%20-%09if%20%28%21IS_POSIXACL%28path.dentry-%3Ed_inode%29%29%0A%3E%20-%09%09mode%20%26%3D%20~current_umask%28%29%3B%0A%3E%20%2B%09posix_acl_apply_umask%28path.dentry-%3Ed_inode%2C%20%26mode%29%3B%0A%3E%20%20%09error%20%3D%20security_path_mkdir%28%26path%2C%20dentry%2C%20mode%29%3B%0A&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%20Filesystem%20with%20noacl%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;References=%3C20200617005849.GA262660%40pick.fieldses.org%3E%20%3C20200605174349.GA40135%40mattapan.m5p.com%3E%20%3C20200605183631.GA1720057%40eldamar.local%3E%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%20%3C20200613125431.GA349352%40eldamar.local%3E%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%20%3C20200615185311.GA702681%40eldamar.local%3E%20%3C20200616023820.GB214986%40pick.fieldses.org%3E%20%3C20200616024212.GC214986%40pick.fieldses.org%3E%20%3C20200616161658.GA17251%40lorien.valinor.li%3E%0A%20%3C20200617144256.1028414-1-agruenba%40redhat.com%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=agruenba%40redhat.com" alt="">
<div class="header"><span class="headerfield">From:</span> Andreas Gruenbacher &lt;agruenba@redhat.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> Andreas Gruenbacher &lt;agruenba@redhat.com&gt;,
	ecryptfs@vger.kernel.org,
	Salvatore Bonaccorso &lt;carnil@debian.org&gt;,
	Elliott Mitchell &lt;ehem+debian@m5p.com&gt;,
	962254@bugs.debian.org,
	linux-nfs@vger.kernel.org</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported Filesystem with noacl (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Wed, 17 Jun 2020 16:42:56 +0200</div>
</div>
<pre class="message">Hi Bruce,

On Wed, Jun 17, 2020 at 2:58 AM J. Bruce Fields &lt;bfields@redhat.com&gt; wrote:
&gt; I think I&#39;ll send the following upstream.

looking good, but how about using a little helper for this?

Also I&#39;m not sure if ecryptfs gets this right, so taking the ecryptfs
list into the CC.

Thanks,
Andreas

--

Add a posix_acl_apply_umask helper for filesystems like nfsd to apply
the umask before calling into vfs_create, vfs_mkdir, and vfs_mknod when
necessary.

Signed-off-by: Andreas Gruenbacher &lt;agruenba@redhat.com&gt;
---
 fs/namei.c                |  9 +++------
 fs/nfsd/vfs.c             |  6 ++----
 fs/overlayfs/dir.c        |  4 ++--
 fs/posix_acl.c            | 15 +++++++++++++++
 include/linux/posix_acl.h |  6 ++++++
 5 files changed, 28 insertions(+), 12 deletions(-)

diff --git a/fs/namei.c b/fs/namei.c
index 72d4219c93ac..a68887d3a446 100644
--- a/fs/namei.c
+++ b/fs/namei.c
@@ -3054,8 +3054,7 @@ static struct dentry *lookup_open(struct nameidata *nd, struct file *file,
 	if (open_flag &amp; O_CREAT) {
 		if (open_flag &amp; O_EXCL)
 			open_flag &amp;= ~O_TRUNC;
-		if (!IS_POSIXACL(dir-&gt;d_inode))
-			mode &amp;= ~current_umask();
+		posix_acl_apply_umask(dir-&gt;d_inode, &amp;mode);
 		if (likely(got_write))
 			create_error = may_o_create(&amp;nd-&gt;path, dentry, mode);
 		else
@@ -3580,8 +3579,7 @@ long do_mknodat(int dfd, const char __user *filename, umode_t mode,
 	if (IS_ERR(dentry))
 		return PTR_ERR(dentry);
 
-	if (!IS_POSIXACL(path.dentry-&gt;d_inode))
-		mode &amp;= ~current_umask();
+	posix_acl_apply_umask(path.dentry-&gt;d_inode, &amp;mode);
 	error = security_path_mknod(&amp;path, dentry, mode, dev);
 	if (error)
 		goto out;
@@ -3657,8 +3655,7 @@ long do_mkdirat(int dfd, const char __user *pathname, umode_t mode)
 	if (IS_ERR(dentry))
 		return PTR_ERR(dentry);
 
-	if (!IS_POSIXACL(path.dentry-&gt;d_inode))
-		mode &amp;= ~current_umask();
+	posix_acl_apply_umask(path.dentry-&gt;d_inode, &amp;mode);
 	error = security_path_mkdir(&amp;path, dentry, mode);
 	if (!error)
 		error = vfs_mkdir(path.dentry-&gt;d_inode, dentry, mode);
diff --git a/fs/nfsd/vfs.c b/fs/nfsd/vfs.c
index d22a056da477..0c625b004b0c 100644
--- a/fs/nfsd/vfs.c
+++ b/fs/nfsd/vfs.c
@@ -1226,8 +1226,7 @@ nfsd_create_locked(struct svc_rqst *rqstp, struct svc_fh *fhp,
 		iap-&gt;ia_mode = 0;
 	iap-&gt;ia_mode = (iap-&gt;ia_mode &amp; S_IALLUGO) | type;
 
-	if (!IS_POSIXACL(dirp))
-		iap-&gt;ia_mode &amp;= ~current_umask();
+	posix_acl_apply_umask(dirp, &amp;iap-&gt;ia_mode);
 
 	err = 0;
 	host_err = 0;
@@ -1461,8 +1460,7 @@ do_nfsd_create(struct svc_rqst *rqstp, struct svc_fh *fhp,
 		goto out;
 	}
 
-	if (!IS_POSIXACL(dirp))
-		iap-&gt;ia_mode &amp;= ~current_umask();
+	posix_acl_apply_umask(dirp, &amp;iap-&gt;ia_mode);
 
 	host_err = vfs_create(dirp, dchild, iap-&gt;ia_mode, true);
 	if (host_err &lt; 0) {
diff --git a/fs/overlayfs/dir.c b/fs/overlayfs/dir.c
index 1bba4813f9cb..4d98db2a0208 100644
--- a/fs/overlayfs/dir.c
+++ b/fs/overlayfs/dir.c
@@ -325,8 +325,8 @@ static int ovl_create_upper(struct dentry *dentry, struct inode *inode,
 	struct dentry *newdentry;
 	int err;
 
-	if (!attr-&gt;hardlink &amp;&amp; !IS_POSIXACL(udir))
-		attr-&gt;mode &amp;= ~current_umask();
+	if (!attr-&gt;hardlink)
+	       posix_acl_apply_umask(udir, &amp;attr-&gt;mode);
 
 	inode_lock_nested(udir, I_MUTEX_PARENT);
 	newdentry = ovl_create_real(udir,
diff --git a/fs/posix_acl.c b/fs/posix_acl.c
index 95882b3f5f62..7ee647b74bc2 100644
--- a/fs/posix_acl.c
+++ b/fs/posix_acl.c
@@ -578,6 +578,21 @@ posix_acl_chmod(struct inode *inode, umode_t mode)
 }
 EXPORT_SYMBOL(posix_acl_chmod);
 
+/*
+ * On inode creation, filesystems with ACL support are expected to apply the
+ * umask when no ACL is inherited from the parent directory; this is usually
+ * done by posix_acl_create.  Filesystems like nfsd that call vfs_create,
+ * vfs_mknod, or vfs_mkdir directly are expected to call posix_acl_apply_umask
+ * to apply the umask first when necessary.
+ */
+void
+posix_acl_apply_umask(struct inode *inode, umode_t *mode)
+{
+	if (!IS_POSIXACL(inode))
+		*mode &amp;= ~current_umask();
+}
+EXPORT_SYMBOL(posix_acl_apply_umask);
+
 int
 posix_acl_create(struct inode *dir, umode_t *mode,
 		struct posix_acl **default_acl, struct posix_acl **acl)
diff --git a/include/linux/posix_acl.h b/include/linux/posix_acl.h
index 90797f1b421d..76e402ff4f92 100644
--- a/include/linux/posix_acl.h
+++ b/include/linux/posix_acl.h
@@ -73,6 +73,7 @@ extern int set_posix_acl(struct inode *, int, struct posix_acl *);
 
 #ifdef CONFIG_FS_POSIX_ACL
 extern int posix_acl_chmod(struct inode *, umode_t);
+extern void posix_acl_apply_umask(struct inode *, umode_t *);
 extern int posix_acl_create(struct inode *, umode_t *, struct posix_acl **,
 		struct posix_acl **);
 extern int posix_acl_update_mode(struct inode *, umode_t *, struct posix_acl **);
@@ -99,6 +100,11 @@ static inline int posix_acl_chmod(struct inode *inode, umode_t mode)
 
 #define simple_set_acl		NULL
 
+static inline void posix_acl_apply_umask(struct inode *inode, umode_t *mode)
+{
+	*mode &amp;= ~current_umask();
+}
+
 static inline int simple_acl_create(struct inode *dir, struct inode *inode)
 {
 	return 0;

base-commit: 69119673bd50b176ded34032fadd41530fb5af21
prerequisite-patch-id: a8319d40da9f70f478892d0bd8e63f540364b089
-- 
2.26.2



</pre>

<div class="infmessage"><hr><p>
<a name="141"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592407982 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Wed, 17 Jun 2020 15:33:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=142">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=142">mbox</a>, <a href="#141">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="143"></a>
<!-- request_addr: &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt; -->
<!-- time:1592407982 -->
<strong>Acknowledgement sent</strong>
to <code>&quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Wed, 17 Jun 2020 15:33:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=144">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=144">mbox</a>, <a href="#143">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="145"></a><a name="msg145"></a><a href="#145">Message #145</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=145">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=145">mbox</a>, <a href="mailto:962254@bugs.debian.org?References=%3C20200605183631.GA1720057%40eldamar.local%3E%0A%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%0A%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%0A%20%3C20200615185311.GA702681%40eldamar.local%3E%0A%20%3C20200616023820.GB214986%40pick.fieldses.org%3E%0A%20%3C20200616024212.GC214986%40pick.fieldses.org%3E%0A%20%3C20200616161658.GA17251%40lorien.valinor.li%3E%0A%20%3C20200617144256.1028414-1-agruenba%40redhat.com%3E%0A%20%3C20200617153107.GL266716%40pick.fieldses.org%3E&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%0A%20Filesystem%20with%20noacl%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29&amp;body=On%20Wed%2C%2017%20Jun%202020%2011%3A31%3A07%20-0400%20%22J.%20Bruce%20Fields%22%20%3Cbfields%40redhat.com%3E%20wrote%3A%0A%3E%20On%20Wed%2C%20Jun%2017%2C%202020%20at%2004%3A42%3A56PM%20%2B0200%2C%20Andreas%20Gruenbacher%20wrote%3A%0A%3E%20%3E%20Hi%20Bruce%2C%0A%3E%20%3E%20%0A%3E%20%3E%20On%20Wed%2C%20Jun%2017%2C%202020%20at%202%3A58%20AM%20J.%20Bruce%20Fields%20%3Cbfields%40redhat.com%3E%20wrote%3A%0A%3E%20%3E%20%3E%20I%20think%20I%27ll%20send%20the%20following%20upstream.%0A%3E%20%3E%20%0A%3E%20%3E%20looking%20good%2C%20but%20how%20about%20using%20a%20little%20helper%20for%20this%3F%0A%3E%20%0A%3E%20I%20like%20it.%20%20And%20the%20new%20comment%27s%20helpful%20too.%0A%3E%20%0A%3E%20%3E%20%0A%3E%20%3E%20Also%20I%27m%20not%20sure%20if%20ecryptfs%20gets%20this%20right%2C%20so%20taking%20the%20ecryptfs%0A%3E%20%3E%20list%20into%20the%20CC.%0A%3E%20%0A%3E%20Yes%2C%20questions%20I%20had%20while%20doing%20this%3A%0A%3E%20%0A%3E%20%09-%20cachefiles%2C%20ecrypfs%2C%20devtmpfs%2C%20and%20unix_mknod%20skip%20the%20check%2C%0A%3E%20%09%20%20is%20that%20OK%20for%20all%20of%20them%3F%20%20%28Overlayfs%20too%2C%20I%20think%3F--that%0A%3E%20%09%20%20code%27s%20harder%20to%20follow.%0A%3E%20%0A%3E%20%09-%20why%20don%27t%20vfs_%7Bcreate%2Cmknod%2Cmkdir%7D%20do%20the%20IS_POSIXACL%20check%0A%3E%20%09%20%20themselves%3F%20%20Even%20if%20it%27s%20unnecessary%20for%20some%20callers%2C%20surely%0A%3E%20%09%20%20it%20wouldn%27t%20be%20wrong%3F%0A%3E%20%0A%3E%20I%20also%20wondered%20why%20both%20vfs_%7Bcreate%2Cmknod%2Cmkdir%7D%20and%20the%20callers%20were%0A%3E%20calling%20security%20hooks%2C%20but%20now%20I%20see%20that%20the%20callers%20are%20calling%0A%3E%20security_path_%2A%20hooks%20and%20the%20vfs_%20functions%20are%20calling%0A%3E%20security_inode_%2A%20hooks%2C%20so%20I%20guess%20they%27re%20not%20redundant.%0A%3E%20%0A%3E%20Though%20now%20I%20wonder%20why%20some%20of%20the%20callers%20%28nfsd%2C%20overlayfs%29%20are%0A%3E%20skipping%20the%20security_path_%2A%20hooks.%0A%3E%20%0A%3E%20--b.%0A%3E%20%0A%3E%20%3E%20%0A%3E%20%3E%20Thanks%2C%0A%3E%20%3E%20Andreas%0A%3E%20%3E%20%0A%3E%20%3E%20--%0A%3E%20%3E%20%0A%3E%20%3E%20Add%20a%20posix_acl_apply_umask%20helper%20for%20filesystems%20like%20nfsd%20to%20apply%0A%3E%20%3E%20the%20umask%20before%20calling%20into%20vfs_create%2C%20vfs_mkdir%2C%20and%20vfs_mknod%20when%0A%3E%20%3E%20necessary.%0A%3E%20%3E%20%0A%3E%20%3E%20Signed-off-by%3A%20Andreas%20Gruenbacher%20%3Cagruenba%40redhat.com%3E%0A%3E%20%3E%20---%0A%3E%20%3E%20%20fs%2Fnamei.c%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%209%20%2B%2B%2B------%0A%3E%20%3E%20%20fs%2Fnfsd%2Fvfs.c%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20%206%20%2B%2B----%0A%3E%20%3E%20%20fs%2Foverlayfs%2Fdir.c%20%20%20%20%20%20%20%20%7C%20%204%20%2B%2B--%0A%3E%20%3E%20%20fs%2Fposix_acl.c%20%20%20%20%20%20%20%20%20%20%20%20%7C%2015%20%2B%2B%2B%2B%2B%2B%2B%2B%2B%2B%2B%2B%2B%2B%2B%0A%3E%20%3E%20%20include%2Flinux%2Fposix_acl.h%20%7C%20%206%20%2B%2B%2B%2B%2B%2B%0A%3E%20%3E%20%205%20files%20changed%2C%2028%20insertions%28%2B%29%2C%2012%20deletions%28-%29%0A%3E%20%3E%20%0A%3E%20%3E%20diff%20--git%20a%2Ffs%2Fnamei.c%20b%2Ffs%2Fnamei.c%0A%3E%20%3E%20index%2072d4219c93ac..a68887d3a446%20100644%0A%3E%20%3E%20---%20a%2Ffs%2Fnamei.c%0A%3E%20%3E%20%2B%2B%2B%20b%2Ffs%2Fnamei.c%0A%3E%20%3E%20%40%40%20-3054%2C8%20%2B3054%2C7%20%40%40%20static%20struct%20dentry%20%2Alookup_open%28struct%20nameidata%20%2And%2C%20struct%20file%20%2Afile%2C%0A%3E%20%3E%20%20%09if%20%28open_flag%20%26%20O_CREAT%29%20%7B%0A%3E%20%3E%20%20%09%09if%20%28open_flag%20%26%20O_EXCL%29%0A&amp;In-Reply-To=%3C20200617153107.GL266716%40pick.fieldses.org%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=bfields%40redhat.com" alt="">
<div class="header"><span class="headerfield">From:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> Andreas Gruenbacher &lt;agruenba@redhat.com&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> ecryptfs@vger.kernel.org, Salvatore Bonaccorso &lt;carnil@debian.org&gt;,
	Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org,
	linux-nfs@vger.kernel.org</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported
 Filesystem with noacl (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Wed, 17 Jun 2020 11:31:07 -0400</div>
</div>
<pre class="message">On Wed, Jun 17, 2020 at 04:42:56PM +0200, Andreas Gruenbacher wrote:
&gt; Hi Bruce,
&gt; 
&gt; On Wed, Jun 17, 2020 at 2:58 AM J. Bruce Fields &lt;bfields@redhat.com&gt; wrote:
&gt; &gt; I think I&#39;ll send the following upstream.
&gt; 
&gt; looking good, but how about using a little helper for this?

I like it.  And the new comment&#39;s helpful too.

&gt; 
&gt; Also I&#39;m not sure if ecryptfs gets this right, so taking the ecryptfs
&gt; list into the CC.

Yes, questions I had while doing this:

	- cachefiles, ecrypfs, devtmpfs, and unix_mknod skip the check,
	  is that OK for all of them?  (Overlayfs too, I think?--that
	  code&#39;s harder to follow.

	- why don&#39;t vfs_{create,mknod,mkdir} do the IS_POSIXACL check
	  themselves?  Even if it&#39;s unnecessary for some callers, surely
	  it wouldn&#39;t be wrong?

I also wondered why both vfs_{create,mknod,mkdir} and the callers were
calling security hooks, but now I see that the callers are calling
security_path_* hooks and the vfs_ functions are calling
security_inode_* hooks, so I guess they&#39;re not redundant.

Though now I wonder why some of the callers (nfsd, overlayfs) are
skipping the security_path_* hooks.

--b.

&gt; 
&gt; Thanks,
&gt; Andreas
&gt; 
&gt; --
&gt; 
&gt; Add a posix_acl_apply_umask helper for filesystems like nfsd to apply
&gt; the umask before calling into vfs_create, vfs_mkdir, and vfs_mknod when
&gt; necessary.
&gt; 
&gt; Signed-off-by: Andreas Gruenbacher &lt;agruenba@redhat.com&gt;
&gt; ---
&gt;  fs/namei.c                |  9 +++------
&gt;  fs/nfsd/vfs.c             |  6 ++----
&gt;  fs/overlayfs/dir.c        |  4 ++--
&gt;  fs/posix_acl.c            | 15 +++++++++++++++
&gt;  include/linux/posix_acl.h |  6 ++++++
&gt;  5 files changed, 28 insertions(+), 12 deletions(-)
&gt; 
&gt; diff --git a/fs/namei.c b/fs/namei.c
&gt; index 72d4219c93ac..a68887d3a446 100644
&gt; --- a/fs/namei.c
&gt; +++ b/fs/namei.c
&gt; @@ -3054,8 +3054,7 @@ static struct dentry *lookup_open(struct nameidata *nd, struct file *file,
&gt;  	if (open_flag &amp; O_CREAT) {
&gt;  		if (open_flag &amp; O_EXCL)
&gt;  			open_flag &amp;= ~O_TRUNC;
&gt; -		if (!IS_POSIXACL(dir-&gt;d_inode))
&gt; -			mode &amp;= ~current_umask();
&gt; +		posix_acl_apply_umask(dir-&gt;d_inode, &amp;mode);
&gt;  		if (likely(got_write))
&gt;  			create_error = may_o_create(&amp;nd-&gt;path, dentry, mode);
&gt;  		else
&gt; @@ -3580,8 +3579,7 @@ long do_mknodat(int dfd, const char __user *filename, umode_t mode,
&gt;  	if (IS_ERR(dentry))
&gt;  		return PTR_ERR(dentry);
&gt;  
&gt; -	if (!IS_POSIXACL(path.dentry-&gt;d_inode))
&gt; -		mode &amp;= ~current_umask();
&gt; +	posix_acl_apply_umask(path.dentry-&gt;d_inode, &amp;mode);
&gt;  	error = security_path_mknod(&amp;path, dentry, mode, dev);
&gt;  	if (error)
&gt;  		goto out;
&gt; @@ -3657,8 +3655,7 @@ long do_mkdirat(int dfd, const char __user *pathname, umode_t mode)
&gt;  	if (IS_ERR(dentry))
&gt;  		return PTR_ERR(dentry);
&gt;  
&gt; -	if (!IS_POSIXACL(path.dentry-&gt;d_inode))
&gt; -		mode &amp;= ~current_umask();
&gt; +	posix_acl_apply_umask(path.dentry-&gt;d_inode, &amp;mode);
&gt;  	error = security_path_mkdir(&amp;path, dentry, mode);
&gt;  	if (!error)
&gt;  		error = vfs_mkdir(path.dentry-&gt;d_inode, dentry, mode);
&gt; diff --git a/fs/nfsd/vfs.c b/fs/nfsd/vfs.c
&gt; index d22a056da477..0c625b004b0c 100644
&gt; --- a/fs/nfsd/vfs.c
&gt; +++ b/fs/nfsd/vfs.c
&gt; @@ -1226,8 +1226,7 @@ nfsd_create_locked(struct svc_rqst *rqstp, struct svc_fh *fhp,
&gt;  		iap-&gt;ia_mode = 0;
&gt;  	iap-&gt;ia_mode = (iap-&gt;ia_mode &amp; S_IALLUGO) | type;
&gt;  
&gt; -	if (!IS_POSIXACL(dirp))
&gt; -		iap-&gt;ia_mode &amp;= ~current_umask();
&gt; +	posix_acl_apply_umask(dirp, &amp;iap-&gt;ia_mode);
&gt;  
&gt;  	err = 0;
&gt;  	host_err = 0;
&gt; @@ -1461,8 +1460,7 @@ do_nfsd_create(struct svc_rqst *rqstp, struct svc_fh *fhp,
&gt;  		goto out;
&gt;  	}
&gt;  
&gt; -	if (!IS_POSIXACL(dirp))
&gt; -		iap-&gt;ia_mode &amp;= ~current_umask();
&gt; +	posix_acl_apply_umask(dirp, &amp;iap-&gt;ia_mode);
&gt;  
&gt;  	host_err = vfs_create(dirp, dchild, iap-&gt;ia_mode, true);
&gt;  	if (host_err &lt; 0) {
&gt; diff --git a/fs/overlayfs/dir.c b/fs/overlayfs/dir.c
&gt; index 1bba4813f9cb..4d98db2a0208 100644
&gt; --- a/fs/overlayfs/dir.c
&gt; +++ b/fs/overlayfs/dir.c
&gt; @@ -325,8 +325,8 @@ static int ovl_create_upper(struct dentry *dentry, struct inode *inode,
&gt;  	struct dentry *newdentry;
&gt;  	int err;
&gt;  
&gt; -	if (!attr-&gt;hardlink &amp;&amp; !IS_POSIXACL(udir))
&gt; -		attr-&gt;mode &amp;= ~current_umask();
&gt; +	if (!attr-&gt;hardlink)
&gt; +	       posix_acl_apply_umask(udir, &amp;attr-&gt;mode);
&gt;  
&gt;  	inode_lock_nested(udir, I_MUTEX_PARENT);
&gt;  	newdentry = ovl_create_real(udir,
&gt; diff --git a/fs/posix_acl.c b/fs/posix_acl.c
&gt; index 95882b3f5f62..7ee647b74bc2 100644
&gt; --- a/fs/posix_acl.c
&gt; +++ b/fs/posix_acl.c
&gt; @@ -578,6 +578,21 @@ posix_acl_chmod(struct inode *inode, umode_t mode)
&gt;  }
&gt;  EXPORT_SYMBOL(posix_acl_chmod);
&gt;  
&gt; +/*
&gt; + * On inode creation, filesystems with ACL support are expected to apply the
&gt; + * umask when no ACL is inherited from the parent directory; this is usually
&gt; + * done by posix_acl_create.  Filesystems like nfsd that call vfs_create,
&gt; + * vfs_mknod, or vfs_mkdir directly are expected to call posix_acl_apply_umask
&gt; + * to apply the umask first when necessary.
&gt; + */
&gt; +void
&gt; +posix_acl_apply_umask(struct inode *inode, umode_t *mode)
&gt; +{
&gt; +	if (!IS_POSIXACL(inode))
&gt; +		*mode &amp;= ~current_umask();
&gt; +}
&gt; +EXPORT_SYMBOL(posix_acl_apply_umask);
&gt; +
&gt;  int
&gt;  posix_acl_create(struct inode *dir, umode_t *mode,
&gt;  		struct posix_acl **default_acl, struct posix_acl **acl)
&gt; diff --git a/include/linux/posix_acl.h b/include/linux/posix_acl.h
&gt; index 90797f1b421d..76e402ff4f92 100644
&gt; --- a/include/linux/posix_acl.h
&gt; +++ b/include/linux/posix_acl.h
&gt; @@ -73,6 +73,7 @@ extern int set_posix_acl(struct inode *, int, struct posix_acl *);
&gt;  
&gt;  #ifdef CONFIG_FS_POSIX_ACL
&gt;  extern int posix_acl_chmod(struct inode *, umode_t);
&gt; +extern void posix_acl_apply_umask(struct inode *, umode_t *);
&gt;  extern int posix_acl_create(struct inode *, umode_t *, struct posix_acl **,
&gt;  		struct posix_acl **);
&gt;  extern int posix_acl_update_mode(struct inode *, umode_t *, struct posix_acl **);
&gt; @@ -99,6 +100,11 @@ static inline int posix_acl_chmod(struct inode *inode, umode_t mode)
&gt;  
&gt;  #define simple_set_acl		NULL
&gt;  
&gt; +static inline void posix_acl_apply_umask(struct inode *inode, umode_t *mode)
&gt; +{
&gt; +	*mode &amp;= ~current_umask();
&gt; +}
&gt; +
&gt;  static inline int simple_acl_create(struct inode *dir, struct inode *inode)
&gt;  {
&gt;  	return 0;
&gt; 
&gt; base-commit: 69119673bd50b176ded34032fadd41530fb5af21
&gt; prerequisite-patch-id: a8319d40da9f70f478892d0bd8e63f540364b089
&gt; -- 
&gt; 2.26.2
&gt; 



</pre>

<div class="infmessage"><hr><p>
<a name="146"></a>
<!-- request_addr: debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt; -->
<!-- time:1592412842 -->
<strong>Information forwarded</strong>
to <code>debian-bugs-dist@lists.debian.org, Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>:<br>
<code>Bug#962254</code>; Package <code>src:linux</code>.
 (Wed, 17 Jun 2020 16:54:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=147">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=147">mbox</a>, <a href="#146">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="148"></a>
<!-- request_addr: Andreas Gruenbacher &lt;agruenba@redhat.com&gt; -->
<!-- time:1592412842 -->
<strong>Acknowledgement sent</strong>
to <code>Andreas Gruenbacher &lt;agruenba@redhat.com&gt;</code>:<br>
Extra info received and forwarded to list.  Copy sent to <code>Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;</code>.
 (Wed, 17 Jun 2020 16:54:02 GMT) (<a href="bugreport.cgi?bug=962254;msg=149">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=149">mbox</a>, <a href="#148">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="150"></a><a name="msg150"></a><a href="#150">Message #150</a> received at 962254@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=150">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=150">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3CCAHc6FU5-WGL8OwELQvpu8CsQgqW5o2h92UG3d2E3RUTPnBPgog%40mail.gmail.com%3E&amp;body=On%20Wed%2C%2017%20Jun%202020%2018%3A50%3A04%20%2B0200%20Andreas%20Gruenbacher%20%3Cagruenba%40redhat.com%3E%20wrote%3A%0A%3E%20On%20Wed%2C%20Jun%2017%2C%202020%20at%205%3A31%20PM%20J.%20Bruce%20Fields%20%3Cbfields%40redhat.com%3E%20wrote%3A%0A%3E%20%3E%0A%3E%20%3E%20On%20Wed%2C%20Jun%2017%2C%202020%20at%2004%3A42%3A56PM%20%2B0200%2C%20Andreas%20Gruenbacher%20wrote%3A%0A%3E%20%3E%20%3E%20Hi%20Bruce%2C%0A%3E%20%3E%20%3E%0A%3E%20%3E%20%3E%20On%20Wed%2C%20Jun%2017%2C%202020%20at%202%3A58%20AM%20J.%20Bruce%20Fields%20%3Cbfields%40redhat.com%3E%20wrote%3A%0A%3E%20%3E%20%3E%20%3E%20I%20think%20I%27ll%20send%20the%20following%20upstream.%0A%3E%20%3E%20%3E%0A%3E%20%3E%20%3E%20looking%20good%2C%20but%20how%20about%20using%20a%20little%20helper%20for%20this%3F%0A%3E%20%3E%0A%3E%20%3E%20I%20like%20it.%20%20And%20the%20new%20comment%27s%20helpful%20too.%0A%3E%20%3E%0A%3E%20%3E%20%3E%0A%3E%20%3E%20%3E%20Also%20I%27m%20not%20sure%20if%20ecryptfs%20gets%20this%20right%2C%20so%20taking%20the%20ecryptfs%0A%3E%20%3E%20%3E%20list%20into%20the%20CC.%0A%3E%20%3E%0A%3E%20%3E%20Yes%2C%20questions%20I%20had%20while%20doing%20this%3A%0A%3E%20%3E%0A%3E%20%3E%20%20%20%20%20%20%20%20%20-%20cachefiles%2C%20ecrypfs%2C%20devtmpfs%2C%20and%20unix_mknod%20skip%20the%20check%2C%0A%3E%20%3E%20%20%20%20%20%20%20%20%20%20%20is%20that%20OK%20for%20all%20of%20them%3F%20%20%28Overlayfs%20too%2C%20I%20think%3F--that%0A%3E%20%3E%20%20%20%20%20%20%20%20%20%20%20code%27s%20harder%20to%20follow.%0A%3E%20%3E%0A%3E%20%3E%20%20%20%20%20%20%20%20%20-%20why%20don%27t%20vfs_%7Bcreate%2Cmknod%2Cmkdir%7D%20do%20the%20IS_POSIXACL%20check%0A%3E%20%3E%20%20%20%20%20%20%20%20%20%20%20themselves%3F%20%20Even%20if%20it%27s%20unnecessary%20for%20some%20callers%2C%20surely%0A%3E%20%3E%20%20%20%20%20%20%20%20%20%20%20it%20wouldn%27t%20be%20wrong%3F%0A%3E%20%0A%3E%20That%27s%20a%20good%20question.%20The%20security_path_%7Bmkdir%2Cmknod%7D%20hooks%20would%0A%3E%20then%20probably%20be%20passed%20the%20original%20create%20mode%20before%20applying%20the%0A%3E%20umask%2C%20but%20at%20that%20point%20it%27s%20not%20clear%20what%20the%20new%20inode%27s%20final%0A%3E%20mode%20will%20be%2C%20anyway.%0A%3E%20%0A%3E%20%3E%20I%20also%20wondered%20why%20both%20vfs_%7Bcreate%2Cmknod%2Cmkdir%7D%20and%20the%20callers%20were%0A%3E%20%3E%20calling%20security%20hooks%2C%20but%20now%20I%20see%20that%20the%20callers%20are%20calling%0A%3E%20%3E%20security_path_%2A%20hooks%20and%20the%20vfs_%20functions%20are%20calling%0A%3E%20%3E%20security_inode_%2A%20hooks%2C%20so%20I%20guess%20they%27re%20not%20redundant.%0A%3E%20%3E%0A%3E%20%3E%20Though%20now%20I%20wonder%20why%20some%20of%20the%20callers%20%28nfsd%2C%20overlayfs%29%20are%0A%3E%20%3E%20skipping%20the%20security_path_%2A%20hooks.%0A%3E%20%0A%3E%20The%20path%20based%20security%20hooks%20are%20only%20used%20by%20apparmor%20and%20tomoyo.%0A%3E%20Those%20hooks%20basically%20control%20who%20%28which%20process%29%20can%20do%20what%20where%20in%0A%3E%20the%20filesystem%2C%20but%20nfsd%20isn%27t%20aware%20of%20the%20%22who%22%2C%20and%20overlayfs%20is%20a%0A%3E%20layer%20below%20the%20%22where%22.%0A%3E%20%0A%3E%20Andreas%0A%3E%20%0A%3E%20%0A%3E%20%0A&amp;References=%3C20200605183631.GA1720057%40eldamar.local%3E%20%3C20200611223711.GA37917%40mattapan.m5p.com%3E%0A%20%3C20200613125431.GA349352%40eldamar.local%3E%20%3C20200613184527.GA54221%40mattapan.m5p.com%3E%0A%20%3C20200615145035.GA214986%40pick.fieldses.org%3E%20%3C20200615185311.GA702681%40eldamar.local%3E%0A%20%3C20200616023820.GB214986%40pick.fieldses.org%3E%20%3C20200616024212.GC214986%40pick.fieldses.org%3E%0A%20%3C20200616161658.GA17251%40lorien.valinor.li%3E%20%3C20200617144256.1028414-1-agruenba%40redhat.com%3E%0A%20%3C20200617153107.GL266716%40pick.fieldses.org%3E%0A%20%3CCAHc6FU5-WGL8OwELQvpu8CsQgqW5o2h92UG3d2E3RUTPnBPgog%40mail.gmail.com%3E&amp;subject=Re%3A%20Umask%20ignored%20when%20mounting%20NFSv4.2%20share%20of%20an%20exported%0A%20Filesystem%20with%20noacl%20%28was%3A%20Re%3A%20Bug%23962254%3A%20NFS%28v4%29%20broken%20at%204.19.118-2%29">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=agruenba%40redhat.com" alt="">
<div class="header"><span class="headerfield">From:</span> Andreas Gruenbacher &lt;agruenba@redhat.com&gt;</div>
<div class="header"><span class="headerfield">To:</span> &quot;J. Bruce Fields&quot; &lt;bfields@redhat.com&gt;</div>
<div class="header"><span class="headerfield">Cc:</span> ecryptfs@vger.kernel.org, Salvatore Bonaccorso &lt;carnil@debian.org&gt;, 
	Elliott Mitchell &lt;ehem+debian@m5p.com&gt;, 962254@bugs.debian.org, 
	Linux NFS Mailing List &lt;linux-nfs@vger.kernel.org&gt;, Miklos Szeredi &lt;mszeredi@redhat.com&gt;</div>
<div class="header"><span class="headerfield">Subject:</span> Re: Umask ignored when mounting NFSv4.2 share of an exported
 Filesystem with noacl (was: Re: Bug#962254: NFS(v4) broken at 4.19.118-2)</div>
<div class="header"><span class="headerfield">Date:</span> Wed, 17 Jun 2020 18:50:04 +0200</div>
</div>
<pre class="message">On Wed, Jun 17, 2020 at 5:31 PM J. Bruce Fields &lt;bfields@redhat.com&gt; wrote:
&gt;
&gt; On Wed, Jun 17, 2020 at 04:42:56PM +0200, Andreas Gruenbacher wrote:
&gt; &gt; Hi Bruce,
&gt; &gt;
&gt; &gt; On Wed, Jun 17, 2020 at 2:58 AM J. Bruce Fields &lt;bfields@redhat.com&gt; wrote:
&gt; &gt; &gt; I think I&#39;ll send the following upstream.
&gt; &gt;
&gt; &gt; looking good, but how about using a little helper for this?
&gt;
&gt; I like it.  And the new comment&#39;s helpful too.
&gt;
&gt; &gt;
&gt; &gt; Also I&#39;m not sure if ecryptfs gets this right, so taking the ecryptfs
&gt; &gt; list into the CC.
&gt;
&gt; Yes, questions I had while doing this:
&gt;
&gt;         - cachefiles, ecrypfs, devtmpfs, and unix_mknod skip the check,
&gt;           is that OK for all of them?  (Overlayfs too, I think?--that
&gt;           code&#39;s harder to follow.
&gt;
&gt;         - why don&#39;t vfs_{create,mknod,mkdir} do the IS_POSIXACL check
&gt;           themselves?  Even if it&#39;s unnecessary for some callers, surely
&gt;           it wouldn&#39;t be wrong?

That&#39;s a good question. The security_path_{mkdir,mknod} hooks would
then probably be passed the original create mode before applying the
umask, but at that point it&#39;s not clear what the new inode&#39;s final
mode will be, anyway.

&gt; I also wondered why both vfs_{create,mknod,mkdir} and the callers were
&gt; calling security hooks, but now I see that the callers are calling
&gt; security_path_* hooks and the vfs_ functions are calling
&gt; security_inode_* hooks, so I guess they&#39;re not redundant.
&gt;
&gt; Though now I wonder why some of the callers (nfsd, overlayfs) are
&gt; skipping the security_path_* hooks.

The path based security hooks are only used by apparmor and tomoyo.
Those hooks basically control who (which process) can do what where in
the filesystem, but nfsd isn&#39;t aware of the &quot;who&quot;, and overlayfs is a
layer below the &quot;where&quot;.

Andreas



</pre>

<div class="msgreceived"><hr><p>
<a name="151"></a>
<!-- command:tag -->
<!-- requester: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- request_addr: control@bugs.debian.org -->
<!-- time:1592826304 -->
<!-- new_data:
$new_data = {
              &#39;keywords&#39; =&gt; &#39;pending security upstream&#39;
            };
-->
<!-- old_data:
$old_data = {
              &#39;keywords&#39; =&gt; &#39;security upstream&#39;
            };
-->
<strong>Added tag(s) pending.</strong>
Request was from <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>
to <code>control@bugs.debian.org</code>.
 (Mon, 22 Jun 2020 11:45:04 GMT) (<a href="bugreport.cgi?bug=962254;msg=152">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=152">mbox</a>, <a href="#151">link</a>).</p></p></div>

<div class="msgreceived"><hr><p>
<a name="153"></a>
<!-- request_addr: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- time:1593079437 -->
<strong>Reply sent</strong>
to <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>:<br>
You have taken responsibility.
 (Thu, 25 Jun 2020 10:03:57 GMT) (<a href="bugreport.cgi?bug=962254;msg=154">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=154">mbox</a>, <a href="#153">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="155"></a>
<!-- request_addr: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- time:1593079437 -->
<strong>Notification sent</strong>
to <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>:<br>
Bug acknowledged by developer.
 (Thu, 25 Jun 2020 10:03:57 GMT) (<a href="bugreport.cgi?bug=962254;msg=156">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=156">mbox</a>, <a href="#155">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="157"></a><a name="msg157"></a><a href="#157">Message #157</a> received at 962254-close@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=157">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=157">mbox</a>, <a href="mailto:962254@bugs.debian.org?In-Reply-To=%3CE1joOg4-0000jW-Ur%40fasolo.debian.org%3E&amp;References=%3CE1joOg4-0000jW-Ur%40fasolo.debian.org%3E&amp;subject=Re%3A%20Bug%23962254%3A%20fixed%20in%20linux%205.7.6-1&amp;body=On%20Thu%2C%2025%20Jun%202020%2010%3A00%3A16%20%2B0000%20Debian%20FTP%20Masters%20%3Cftpmaster%40ftp-master.debian.org%3E%20wrote%3A%0A%3E%20Source%3A%20linux%0A%3E%20Source-Version%3A%205.7.6-1%0A%3E%20Done%3A%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%0A%3E%20%0A%3E%20We%20believe%20that%20the%20bug%20you%20reported%20is%20fixed%20in%20the%20latest%20version%20of%0A%3E%20linux%2C%20which%20is%20due%20to%20be%20installed%20in%20the%20Debian%20FTP%20archive.%0A%3E%20%0A%3E%20A%20summary%20of%20the%20changes%20between%20this%20version%20and%20the%20previous%20one%20is%0A%3E%20attached.%0A%3E%20%0A%3E%20Thank%20you%20for%20reporting%20the%20bug%2C%20which%20will%20now%20be%20closed.%20%20If%20you%0A%3E%20have%20further%20comments%20please%20address%20them%20to%20962254%40bugs.debian.org%2C%0A%3E%20and%20the%20maintainer%20will%20reopen%20the%20bug%20report%20if%20appropriate.%0A%3E%20%0A%3E%20Debian%20distribution%20maintenance%20software%0A%3E%20pp.%0A%3E%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%20%28supplier%20of%20updated%20linux%20package%29%0A%3E%20%0A%3E%20%28This%20message%20was%20generated%20automatically%20at%20their%20request%3B%20if%20you%0A%3E%20believe%20that%20there%20is%20a%20problem%20with%20it%20please%20contact%20the%20archive%0A%3E%20administrators%20by%20mailing%20ftpmaster%40ftp-master.debian.org%29%0A%3E%20%0A%3E%20%0A%3E%20-----BEGIN%20PGP%20SIGNED%20MESSAGE-----%0A%3E%20Hash%3A%20SHA512%0A%3E%20%0A%3E%20Format%3A%201.8%0A%3E%20Date%3A%20Wed%2C%2024%20Jun%202020%2020%3A56%3A57%20%2B0200%0A%3E%20Source%3A%20linux%0A%3E%20Architecture%3A%20source%0A%3E%20Version%3A%205.7.6-1%0A%3E%20Distribution%3A%20unstable%0A%3E%20Urgency%3A%20medium%0A%3E%20Maintainer%3A%20Debian%20Kernel%20Team%20%3Cdebian-kernel%40lists.debian.org%3E%0A%3E%20Changed-By%3A%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%0A%3E%20Closes%3A%20942861%20954294%20959781%20961299%20961328%20961516%20961823%20962254%0A%3E%20Changes%3A%0A%3E%20%20linux%20%285.7.6-1%29%20unstable%3B%20urgency%3Dmedium%0A%3E%20%20.%0A%3E%20%20%20%20%2A%20New%20upstream%20release%3A%20https%3A%2F%2Fkernelnewbies.org%2FLinux_5.7%0A%3E%20%20%20%20%20%20-%20%5Bx86%5D%20syscalls%3A%20Revert%20%22x86%2Fsyscalls%3A%20Make%20__X32_SYSCALL_BIT%20be%20unsigned%0A%3E%20%20%20%20%20%20%20%20long%22%20%28Closes%3A%20%23954294%29%0A%3E%20%20%20%20%2A%20New%20upstream%20stable%20update%3A%0A%3E%20%20%20%20%20%20https%3A%2F%2Fwww.kernel.org%2Fpub%2Flinux%2Fkernel%2Fv5.x%2FChangeLog-5.7.1%0A%3E%20%20%20%20%20%20https%3A%2F%2Fwww.kernel.org%2Fpub%2Flinux%2Fkernel%2Fv5.x%2FChangeLog-5.7.2%0A%3E%20%20%20%20%20%20-%20vt%3A%20keyboard%3A%20avoid%20signed%20integer%20overflow%20in%20k_ascii%20%28CVE-2020-13974%29%0A%3E%20%20%20%20%20%20https%3A%2F%2Fwww.kernel.org%2Fpub%2Flinux%2Fkernel%2Fv5.x%2FChangeLog-5.7.3%0A%3E%20%20%20%20%20%20-%20%5Bx86%5D%20speculation%3A%20Prevent%20rogue%20cross-process%20SSBD%20shutdown%0A%3E%20%20%20%20%20%20%20%20%28CVE-2020-10766%29%0A%3E%20%20%20%20%20%20-%20%5Bx86%5D%20speculation%3A%20Avoid%20force-disabling%20IBPB%20based%20on%20STIBP%20and%0A%3E%20%20%20%20%20%20%20%20enhanced%20IBRS.%20%28CVE-2020-10767%29%0A%3E%20%20%20%20%20%20-%20%5Bx86%5D%20speculation%3A%20PR_SPEC_FORCE_DISABLE%20enforcement%20for%20indirect%0A%3E%20%20%20%20%20%20%20%20branches.%20%28CVE-2020-10768%29%0A%3E%20%20%20%20%20%20https%3A%2F%2Fwww.kernel.org%2Fpub%2Flinux%2Fkernel%2Fv5.x%2FChangeLog-5.7.4%0A%3E%20%20%20%20%20%20https%3A%2F%2Fwww.kernel.org%2Fpub%2Flinux%2Fkernel%2Fv5.x%2FChangeLog-5.7.5%0A%3E%20%20%20%20%20%20https%3A%2F%2Fwww.kernel.org%2Fpub%2Flinux%2Fkernel%2Fv5.x%2FChangeLog-5.7.6%0A%3E%20%20.%0A%3E%20%20%20%20%5B%20Ben%20Hutchings%20%5D%0A%3E%20%20%20%20%2A%20fs%3A%20Enable%20EXFAT_FS%20as%20module%20%28Closes%3A%20%23959781%29%0A%3E%20%20%20%20%2A%20Fix%20conversion%20of%20meta-package%20doc%20directories%20to%20symlinks%0A">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=ftpmaster%40ftp-master.debian.org" alt="">
<div class="header"><span class="headerfield">From:</span> Debian FTP Masters &lt;ftpmaster@ftp-master.debian.org&gt;</div>
<div class="header"><span class="headerfield">To:</span> 962254-close@bugs.debian.org</div>
<div class="header"><span class="headerfield">Subject:</span> Bug#962254: fixed in linux 5.7.6-1</div>
<div class="header"><span class="headerfield">Date:</span> Thu, 25 Jun 2020 10:00:16 +0000</div>
</div>
<pre class="message">Source: linux
Source-Version: 5.7.6-1
Done: Salvatore Bonaccorso &lt;carnil@debian.org&gt;

We believe that the bug you reported is fixed in the latest version of
linux, which is due to be installed in the Debian FTP archive.

A summary of the changes between this version and the previous one is
attached.

Thank you for reporting the bug, which will now be closed.  If you
have further comments please address them to 962254@bugs.debian.org,
and the maintainer will reopen the bug report if appropriate.

Debian distribution maintenance software
pp.
Salvatore Bonaccorso &lt;carnil@debian.org&gt; (supplier of updated linux package)

(This message was generated automatically at their request; if you
believe that there is a problem with it please contact the archive
administrators by mailing ftpmaster@ftp-master.debian.org)


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Format: 1.8
Date: Wed, 24 Jun 2020 20:56:57 +0200
Source: linux
Architecture: source
Version: 5.7.6-1
Distribution: unstable
Urgency: medium
Maintainer: Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;
Changed-By: Salvatore Bonaccorso &lt;carnil@debian.org&gt;
Closes: <a href="bugreport.cgi?bug=942861">942861</a> <a href="bugreport.cgi?bug=954294">954294</a> <a href="bugreport.cgi?bug=959781">959781</a> <a href="bugreport.cgi?bug=961299">961299</a> <a href="bugreport.cgi?bug=961328">961328</a> <a href="bugreport.cgi?bug=961516">961516</a> <a href="bugreport.cgi?bug=961823">961823</a> <a href="bugreport.cgi?bug=962254">962254</a>
Changes:
 linux (5.7.6-1) unstable; urgency=medium
 .
   * New upstream release: <a href="https://kernelnewbies.org/Linux_5.7">https://kernelnewbies.org/Linux_5.7</a>
     - [x86] syscalls: Revert &quot;x86/syscalls: Make __X32_SYSCALL_BIT be unsigned
       long&quot; (Closes: #<a href="bugreport.cgi?bug=954294">954294</a>)
   * New upstream stable update:
     <a href="https://www.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.7.1">https://www.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.7.1</a>
     <a href="https://www.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.7.2">https://www.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.7.2</a>
     - vt: keyboard: avoid signed integer overflow in k_ascii (<a href="https://security-tracker.debian.org/tracker/CVE-2020-13974">CVE-2020-13974</a>)
     <a href="https://www.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.7.3">https://www.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.7.3</a>
     - [x86] speculation: Prevent rogue cross-process SSBD shutdown
       (<a href="https://security-tracker.debian.org/tracker/CVE-2020-10766">CVE-2020-10766</a>)
     - [x86] speculation: Avoid force-disabling IBPB based on STIBP and
       enhanced IBRS. (<a href="https://security-tracker.debian.org/tracker/CVE-2020-10767">CVE-2020-10767</a>)
     - [x86] speculation: PR_SPEC_FORCE_DISABLE enforcement for indirect
       branches. (<a href="https://security-tracker.debian.org/tracker/CVE-2020-10768">CVE-2020-10768</a>)
     <a href="https://www.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.7.4">https://www.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.7.4</a>
     <a href="https://www.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.7.5">https://www.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.7.5</a>
     <a href="https://www.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.7.6">https://www.kernel.org/pub/linux/kernel/v5.x/ChangeLog-5.7.6</a>
 .
   [ Ben Hutchings ]
   * fs: Enable EXFAT_FS as module (Closes: #<a href="bugreport.cgi?bug=959781">959781</a>)
   * Fix conversion of meta-package doc directories to symlinks
     (Closes: #<a href="bugreport.cgi?bug=942861">942861</a>)
 .
   [ Vagrant Cascadian ]
   * [arm64] Enable DRM_ANALOGIX_ANX6345 as a module.
   * [arm64] Add analogix-anx6345, pwm-sun4i, sun4i-drm and sun8i-mixer to
     fb-modules udeb.
 .
   [ Helge Deller ]
   * [hppa] Don&#39;t run dh_strip on vmlinuz (Closes: #<a href="bugreport.cgi?bug=961299">961299</a>)
 .
   [ YunQiang Su ]
   * [mips/loongson-3] Enable SERIAL_OF_PLATFORM and OF (Closes: <a href="bugreport.cgi?bug=961328">961328</a>)
 .
   [ Aurelien Jarno ]
   * Enable CONFIG_NVME_HWMON (Closes: #<a href="bugreport.cgi?bug=961823">961823</a>)
 .
   [ Romain Perier ]
   * [arm64] Enable PCIE_BRCMSTB
   * [arm64] Enable BCM2711_THERMAL
 .
   [ Salvatore Bonaccorso ]
   * nfsd: apply umask on fs without ACL support (Closes: #<a href="bugreport.cgi?bug=962254">962254</a>)
   * [rt] Add new signing key for Tom Zanussi
   * Set ABI to 1
   * [arm64] Remove explicit setting of CONFIG_HNS
   * debian/config: Clean up with the help of kconfigeditor2
 .
   [ Gianfranco Costamagna ]
   * [x86] Enable VBOXSF_FS as a module (Closes: #<a href="bugreport.cgi?bug=961516">961516</a>)
Checksums-Sha1:
 616ed11f7cd1a21f78b10d089e8e2cdafa36e1c7 194668 linux_5.7.6-1.dsc
 9bcc8e3e07567863125088be5067efdb5b23d11a 117327288 linux_5.7.6.orig.tar.xz
 e69cfec61b986405aa5a62c4e986d7c3ddff0f6b 1210312 linux_5.7.6-1.debian.tar.xz
 a1315a981e4a5bbfabd21bee926d25312f6d219b 47133 linux_5.7.6-1_source.buildinfo
Checksums-Sha256:
 3f6eb07a80a2df52185e659fded7935969500e5a1f6e694643a523bf8322d83e 194668 linux_5.7.6-1.dsc
 13741ce391d0b29c1b95f9f55a93ccdcae6308aeffbf3184e315a9c1eb3cdb6f 117327288 linux_5.7.6.orig.tar.xz
 ca46db495a0c5e9c610777927460428786f3ec2aa085dedf87549388d7847d55 1210312 linux_5.7.6-1.debian.tar.xz
 7d07a0cfd4825f5bb2a9cfa63044fe909cf53fa1ef1dfee07f37ef464f7fcb4e 47133 linux_5.7.6-1_source.buildinfo
Files:
 18f794dedcd99d545dca5d13988957c5 194668 kernel optional linux_5.7.6-1.dsc
 68ff196e4dcec00c9b5074b9915bbd01 117327288 kernel optional linux_5.7.6.orig.tar.xz
 65ad5edadd43a823cc40ee0bd1e075ae 1210312 kernel optional linux_5.7.6-1.debian.tar.xz
 0d079c57e836fd68de9d7e5fe2a95c6a 47133 kernel optional linux_5.7.6-1_source.buildinfo

-----BEGIN PGP SIGNATURE-----

iQKmBAEBCgCQFiEERkRAmAjBceBVMd3uBUy48xNDz0QFAl7zosJfFIAAAAAALgAo
aXNzdWVyLWZwckBub3RhdGlvbnMub3BlbnBncC5maWZ0aGhvcnNlbWFuLm5ldDQ2
NDQ0MDk4MDhDMTcxRTA1NTMxRERFRTA1NENCOEYzMTM0M0NGNDQSHGNhcm5pbEBk
ZWJpYW4ub3JnAAoJEAVMuPMTQ89EK9MQAJqA9DMHfZakVr4KwsHBOlezmn8WwtsS
BV47SfzmXjxrHXzrjmpWh8960vz/OOACZ/H1jGFXXuCpZW68S8Wxnoa99ZdsMV3Q
lEANlRxRdWAbKzmz4wOCnVc+ooN+NOvcyZ/7zfpA6bTab4VgMq04qxMcUA2eQqzV
H4bO771C1BWY6aLRO8y6Mu/Cr9UkwR7T9biL3Q1iR80ER92pvRpW0zfAxNB8KSc/
pwTro8LY/jpBLZlQ13Of48r/1fcosKXGJp58iOTiqpE6Yh4OauUbmG18v8OLngLC
a4e+JKhyNjm6JIGIulgYC2v4utLSRVnF+fCGPxnx0DyMnowKJhFSh+KEJpgWEt3S
D/HvP91wu/VDMFr1YA8MVDIS3LcR0NJanKCO5U6Qh9N8XA2hz1BToMKd6rNFowgV
8+eCZGcAN/v9qw6gQmnE8rlBh9QVLCkN/umD35eV8sdSxe2qfE9UlTAEX5k6irCt
Fl3qtI1zkcv7OMP6oRGQPc9No3beXx2N+I14+AyLKQhSpOLR7jQhHMxQa/L8esqc
8QzKo8f6ftO4mblz9nEnPPsOBBUb1WDTp2FE4FAN4CoLfsKo3iHPD6AULuyrfzEU
0d4vK2YlTBxF7SdyvwY2h+J15RweUs+FbLetc7yD6qmbWeVy4VyxKNrWgZ2gZBtL
LtvyU8jcwqOZ
=cy9K
-----END PGP SIGNATURE-----



</pre>

<div class="msgreceived"><hr><p>
<a name="158"></a>
<!-- request_addr: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- time:1593079438 -->
<strong>Reply sent</strong>
to <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>:<br>
You have taken responsibility.
 (Thu, 25 Jun 2020 10:03:58 GMT) (<a href="bugreport.cgi?bug=962254;msg=159">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=159">mbox</a>, <a href="#158">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="160"></a>
<!-- request_addr: John Goerzen &lt;jgoerzen@complete.org&gt; -->
<!-- time:1593079438 -->
<strong>Notification sent</strong>
to <code>John Goerzen &lt;jgoerzen@complete.org&gt;</code>:<br>
Bug acknowledged by developer.
 (Thu, 25 Jun 2020 10:03:58 GMT) (<a href="bugreport.cgi?bug=962254;msg=161">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=161">mbox</a>, <a href="#160">link</a>).</p></p></div>

<div class="msgreceived"><hr><p>
<a name="162"></a>
<!-- request_addr: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- time:1594411933 -->
<strong>Reply sent</strong>
to <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>:<br>
You have taken responsibility.
 (Fri, 10 Jul 2020 20:12:13 GMT) (<a href="bugreport.cgi?bug=962254;msg=163">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=163">mbox</a>, <a href="#162">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="164"></a>
<!-- request_addr: Elliott Mitchell &lt;ehem+debian@m5p.com&gt; -->
<!-- time:1594411934 -->
<strong>Notification sent</strong>
to <code>Elliott Mitchell &lt;ehem+debian@m5p.com&gt;</code>:<br>
Bug acknowledged by developer.
 (Fri, 10 Jul 2020 20:12:14 GMT) (<a href="bugreport.cgi?bug=962254;msg=165">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=165">mbox</a>, <a href="#164">link</a>).</p></p></div>

<hr><p class="msgreceived"><a name="166"></a><a name="msg166"></a><a href="#166">Message #166</a> received at 962254-close@bugs.debian.org (<a href="bugreport.cgi?bug=962254;msg=166">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=166">mbox</a>, <a href="mailto:962254@bugs.debian.org?References=%3CE1jtzLV-0002hM-Gs%40fasolo.debian.org%3E&amp;subject=Re%3A%20Bug%23962254%3A%20fixed%20in%20linux%204.19.131-1&amp;body=On%20Fri%2C%2010%20Jul%202020%2020%3A10%3A09%20%2B0000%20Debian%20FTP%20Masters%20%3Cftpmaster%40ftp-master.debian.org%3E%20wrote%3A%0A%3E%20Source%3A%20linux%0A%3E%20Source-Version%3A%204.19.131-1%0A%3E%20Done%3A%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%0A%3E%20%0A%3E%20We%20believe%20that%20the%20bug%20you%20reported%20is%20fixed%20in%20the%20latest%20version%20of%0A%3E%20linux%2C%20which%20is%20due%20to%20be%20installed%20in%20the%20Debian%20FTP%20archive.%0A%3E%20%0A%3E%20A%20summary%20of%20the%20changes%20between%20this%20version%20and%20the%20previous%20one%20is%0A%3E%20attached.%0A%3E%20%0A%3E%20Thank%20you%20for%20reporting%20the%20bug%2C%20which%20will%20now%20be%20closed.%20%20If%20you%0A%3E%20have%20further%20comments%20please%20address%20them%20to%20962254%40bugs.debian.org%2C%0A%3E%20and%20the%20maintainer%20will%20reopen%20the%20bug%20report%20if%20appropriate.%0A%3E%20%0A%3E%20Debian%20distribution%20maintenance%20software%0A%3E%20pp.%0A%3E%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%20%28supplier%20of%20updated%20linux%20package%29%0A%3E%20%0A%3E%20%28This%20message%20was%20generated%20automatically%20at%20their%20request%3B%20if%20you%0A%3E%20believe%20that%20there%20is%20a%20problem%20with%20it%20please%20contact%20the%20archive%0A%3E%20administrators%20by%20mailing%20ftpmaster%40ftp-master.debian.org%29%0A%3E%20%0A%3E%20%0A%3E%20-----BEGIN%20PGP%20SIGNED%20MESSAGE-----%0A%3E%20Hash%3A%20SHA512%0A%3E%20%0A%3E%20Format%3A%201.8%0A%3E%20Date%3A%20Thu%2C%2009%20Jul%202020%2004%3A45%3A56%20%2B0200%0A%3E%20Source%3A%20linux%0A%3E%20Architecture%3A%20source%0A%3E%20Version%3A%204.19.131-1%0A%3E%20Distribution%3A%20buster%0A%3E%20Urgency%3A%20medium%0A%3E%20Maintainer%3A%20Debian%20Kernel%20Team%20%3Cdebian-kernel%40lists.debian.org%3E%0A%3E%20Changed-By%3A%20Salvatore%20Bonaccorso%20%3Ccarnil%40debian.org%3E%0A%3E%20Closes%3A%20958300%20960493%20962254%20963493%0A%3E%20Changes%3A%0A%3E%20%20linux%20%284.19.131-1%29%20buster%3B%20urgency%3Dmedium%0A%3E%20%20.%0A%3E%20%20%20%20%2A%20New%20upstream%20stable%20update%3A%0A%3E%20%20%20%20%20%20https%3A%2F%2Fwww.kernel.org%2Fpub%2Flinux%2Fkernel%2Fv4.x%2FChangeLog-4.19.119%0A%3E%20%20%20%20%20%20-%20ext4%3A%20fix%20extent_status%20fragmentation%20for%20plain%20files%0A%3E%20%20%20%20%20%20-%20%5Barm64%5D%20drm%2Fmsm%3A%20Use%20the%20correct%20dma_sync%20calls%20harder%0A%3E%20%20%20%20%20%20-%20vti4%3A%20removed%20duplicate%20log%20message.%0A%3E%20%20%20%20%20%20-%20%5Barm64%5D%20Add%20part%20number%20for%20Neoverse%20N1%0A%3E%20%20%20%20%20%20-%20%5Barm64%5D%20errata%3A%20Hide%20CTR_EL0.DIC%20on%20systems%20affected%20by%20Neoverse-N1%0A%3E%20%20%20%20%20%20%20%20%231542419%0A%3E%20%20%20%20%20%20-%20%5Barm64%5D%20Fake%20the%20IminLine%20size%20on%20systems%20affected%20by%20Neoverse-N1%0A%3E%20%20%20%20%20%20%20%20%231542419%0A%3E%20%20%20%20%20%20-%20%5Barm64%5D%20compat%3A%20Workaround%20Neoverse-N1%20%231542419%20for%20compat%20user-space%0A%3E%20%20%20%20%20%20-%20watchdog%3A%20reset%20last_hw_keepalive%20time%20at%20start%0A%3E%20%20%20%20%20%20-%20scsi%3A%20lpfc%3A%20Fix%20kasan%20slab-out-of-bounds%20error%20in%20lpfc_unreg_login%0A%3E%20%20%20%20%20%20-%20scsi%3A%20lpfc%3A%20Fix%20crash%20in%20target%20side%20cable%20pulls%20hitting%20WAIT_FOR_UNREG%0A%3E%20%20%20%20%20%20-%20ceph%3A%20return%20ceph_mdsc_do_request%28%29%20errors%20from%20__get_parent%28%29%0A%3E%20%20%20%20%20%20-%20ceph%3A%20don%27t%20skip%20updating%20wanted%20caps%20when%20cap%20is%20stale%0A%3E%20%20%20%20%20%20-%20scsi%3A%20iscsi%3A%20Report%20unbind%20session%20event%20when%20the%20target%20has%20been%0A%3E%20%20%20%20%20%20%20%20removed%0A%3E%20%20%20%20%20%20-%20%5Bx86%5D%20ASoC%3A%20Intel%3A%20atom%3A%20Take%20the%20drv-%3Elock%20mutex%20before%20calling%0A%3E%20%20%20%20%20%20%20%20sst_send_slot_map%28%29%0A%3E%20%20%20%20%20%20-%20nvme%3A%20fix%20deadlock%20caused%20by%20ANA%20update%20wrong%20locking%0A&amp;In-Reply-To=%3CE1jtzLV-0002hM-Gs%40fasolo.debian.org%3E">reply</a>):</p>
<div class="headers">
<img src="/cgi-bin/libravatar.cgi?email=ftpmaster%40ftp-master.debian.org" alt="">
<div class="header"><span class="headerfield">From:</span> Debian FTP Masters &lt;ftpmaster@ftp-master.debian.org&gt;</div>
<div class="header"><span class="headerfield">To:</span> 962254-close@bugs.debian.org</div>
<div class="header"><span class="headerfield">Subject:</span> Bug#962254: fixed in linux 4.19.131-1</div>
<div class="header"><span class="headerfield">Date:</span> Fri, 10 Jul 2020 20:10:09 +0000</div>
</div>
<pre class="message">Source: linux
Source-Version: 4.19.131-1
Done: Salvatore Bonaccorso &lt;carnil@debian.org&gt;

We believe that the bug you reported is fixed in the latest version of
linux, which is due to be installed in the Debian FTP archive.

A summary of the changes between this version and the previous one is
attached.

Thank you for reporting the bug, which will now be closed.  If you
have further comments please address them to 962254@bugs.debian.org,
and the maintainer will reopen the bug report if appropriate.

Debian distribution maintenance software
pp.
Salvatore Bonaccorso &lt;carnil@debian.org&gt; (supplier of updated linux package)

(This message was generated automatically at their request; if you
believe that there is a problem with it please contact the archive
administrators by mailing ftpmaster@ftp-master.debian.org)


-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Format: 1.8
Date: Thu, 09 Jul 2020 04:45:56 +0200
Source: linux
Architecture: source
Version: 4.19.131-1
Distribution: buster
Urgency: medium
Maintainer: Debian Kernel Team &lt;debian-kernel@lists.debian.org&gt;
Changed-By: Salvatore Bonaccorso &lt;carnil@debian.org&gt;
Closes: <a href="bugreport.cgi?bug=958300">958300</a> <a href="bugreport.cgi?bug=960493">960493</a> <a href="bugreport.cgi?bug=962254">962254</a> <a href="bugreport.cgi?bug=963493">963493</a>
Changes:
 linux (4.19.131-1) buster; urgency=medium
 .
   * New upstream stable update:
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.119">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.119</a>
     - ext4: fix extent_status fragmentation for plain files
     - [arm64] drm/msm: Use the correct dma_sync calls harder
     - vti4: removed duplicate log message.
     - [arm64] Add part number for Neoverse N1
     - [arm64] errata: Hide CTR_EL0.DIC on systems affected by Neoverse-N1
       #1542419
     - [arm64] Fake the IminLine size on systems affected by Neoverse-N1
       #1542419
     - [arm64] compat: Workaround Neoverse-N1 #1542419 for compat user-space
     - watchdog: reset last_hw_keepalive time at start
     - scsi: lpfc: Fix kasan slab-out-of-bounds error in lpfc_unreg_login
     - scsi: lpfc: Fix crash in target side cable pulls hitting WAIT_FOR_UNREG
     - ceph: return ceph_mdsc_do_request() errors from __get_parent()
     - ceph: don&#39;t skip updating wanted caps when cap is stale
     - scsi: iscsi: Report unbind session event when the target has been
       removed
     - [x86] ASoC: Intel: atom: Take the drv-&gt;lock mutex before calling
       sst_send_slot_map()
     - nvme: fix deadlock caused by ANA update wrong locking
     - ipc/util.c: sysvipc_find_ipc() should increase position index
     - [s390x] cio: avoid duplicated &#39;ADD&#39; uevents
     - loop: Better discard support for block devices
     - [powerpc*] Revert &quot;powerpc/64: irq_work avoid interrupt when called with
       hardware irqs enabled&quot;
     - [arm*] pwm: bcm2835: Dynamically allocate base
     - perf/core: Disable page faults when getting phys address
     - [x86] ASoC: Intel: bytcr_rt5640: Add quirk for MPMAN MPWIN895CL tablet
     - xhci: Ensure link state is U3 after setting USB_SS_PORT_LS_U3
     - virtio-blk: improve virtqueue error to BLK_STS
     - scsi: smartpqi: fix call trace in device discovery
     - PCI/ASPM: Allow re-enabling Clock PM
     - [x86] KVM: VMX: Zero out *all* general purpose registers after VM-Exit
     - cxgb4: fix adapter crash due to wrong MC size
     - cxgb4: fix large delays in PTP synchronization
     - ipv6: fix restrict IPV6_ADDRFORM operation
     - macsec: avoid to set wrong mtu
     - macvlan: fix null dereference in macvlan_device_event()
     - net: netrom: Fix potential nr_neigh refcnt leak in nr_add_node
     - [arm64,armhf] net: stmmac: dwmac-meson8b: Add missing boundary to RGMII
       TX clock array
     - sched: etf: do not assume all sockets are full blown
     - tcp: cache line align MAX_TCP_HEADER
     - team: fix hang in team_mode_get()
     - vrf: Fix IPv6 with qdisc and xfrm
     - [armhf] net: dsa: b53: Lookup VID in ARL searches when VLAN is enabled
     - [armhf] net: dsa: b53: Fix ARL register definitions
     - [armhf] net: dsa: b53: Rework ARL bin logic
     - [armhf] net: dsa: b53: b53_arl_rw_op() needs to select IVL or SVL
     - xfrm: Always set XFRM_TRANSFORMED in xfrm{4,6}_output_finish
     - vrf: Check skb for XFRM_TRANSFORMED flag
     - KEYS: Avoid false positive ENOMEM error on key read
     - ALSA: hda: Remove ASUS ROG Zenith from the blacklist
     - ALSA: usb-audio: Add static mapping table for ALC1220-VB-based mobos
     - ALSA: usb-audio: Add connector notifier delegation
     - [armhf] iio: st_sensors: rely on odr mask to know if odr can be set
     - USB: sisusbvga: Change port variable from signed to unsigned
     - USB: Add USB_QUIRK_DELAY_CTRL_MSG and USB_QUIRK_DELAY_INIT for Corsair
       K70 RGB RAPIDFIRE
     - USB: early: Handle AMD&#39;s spec-compliant identifiers, too
     - USB: hub: Fix handling of connect changes during sleep
     - vmalloc: fix remap_vmalloc_range() bounds checks
     - mm/hugetlb: fix a addressing exception caused by huge_pte_offset
     - mm/ksm: fix NULL pointer dereference when KSM zero page is enabled
     - ALSA: hda/realtek - Fix unexpected init_amp override
     - ALSA: hda/realtek - Add new codec supported for ALC245
     - ALSA: usb-audio: Fix usb audio refcnt leak when getting spdif
     - ALSA: usb-audio: Filter out unsupported sample rates on Focusrite
       devices
     - tpm/tpm_tis: Free IRQ if probing fails
     - [s390x] KVM: Return last valid slot if approx index is out-of-bounds
     - KVM: Check validity of resolved slot when searching memslots
     - [x86] KVM: VMX: Enable machine check support for 32bit targets
     - tty: hvc: fix buffer overflow during hvc_alloc().
     - [x86] tty: rocket, avoid OOB access
     - usb-storage: Add unusual_devs entry for JMicron JMS566
     - audit: check the length of userspace generated audit records
     - ASoC: dapm: fixup dapm kcontrol widget
     - iwlwifi: pcie: actually release queue memory in TVQM
     - iwlwifi: mvm: beacon statistics shouldn&#39;t go backwards
     - [armel,armhf] ARM: imx: provide v7_cpu_resume() only on
       ARM_CPU_SUSPEND=y
     - [powerpc*] setup_64: Set cache-line-size based on cache-block-size
     - [i386] staging: comedi: dt2815: fix writing hi byte of analog output
     - [x86] staging: comedi: Fix comedi_device refcnt leak in comedi_open
     - vt: don&#39;t hardcode the mem allocation upper bound
     - vt: don&#39;t use kmalloc() for the unicode screen buffer
     - [x86] staging: vt6656: Don&#39;t set RCR_MULTICAST or RCR_BROADCAST by
       default.
     - [x86] staging: vt6656: Fix calling conditions of vnt_set_bss_mode
     - [x86] staging: vt6656: Fix drivers TBTT timing counter.
     - [x86] staging: vt6656: Fix pairwise key entry save.
     - [x86] staging: vt6656: Power save stop wake_up_count wrap around.
     - cdc-acm: close race betrween suspend() and acm_softint
     - cdc-acm: introduce a cool down
     - UAS: no use logging any details in case of ENODEV
     - UAS: fix deadlock in error handling and PM flushing work
     - [arm64,armhf] usb: dwc3: gadget: Fix request completion check
     - usb: f_fs: Clear OS Extended descriptor counts to zero in
       ffs_data_reset()
     - xhci: prevent bus suspend if a roothub port detected a over-current
       condition
     - xfs: Fix deadlock between AGI and AGF with RENAME_WHITEOUT
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.120">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.120</a>
     - mtd: cfi: fix deadloop in cfi_cmdset_0002.c do_write_buffer
     - [arm*] binder: take read mode of mmap_sem in binder_alloc_free_page()
     - [arm64,armhf] usb: dwc3: gadget: Do link recovery for SS and SSP
     - nfsd: memory corruption in nfsd4_lock()
     - rxrpc: Fix DATA Tx to disable nofrag for UDP on AF_INET6 socket
     - net/cxgb4: Check the return from t4_query_params properly
     - xfs: acquire superblock freeze protection on eofblocks scans
     - svcrdma: Fix trace point use-after-free race
     - svcrdma: Fix leak of svc_rdma_recv_ctxt objects
     - PCI: Avoid ASMedia XHCI USB PME# from D0 defect
     - [s390x] net/mlx5: Fix failing fw tracer allocation on s390
     - perf/core: fix parent pid/tid in task exit events
     - [i386] bpf, x86_32: Fix incorrect encoding in BPF_LDX zero-extension
     - mm: shmem: disable interrupt when acquiring info-&gt;lock in
       userfaultfd_copy path
     - xfs: clear PF_MEMALLOC before exiting xfsaild thread
     - [x86] bpf, x86: Fix encoding for lower 8-bit registers in BPF_STX BPF_B
     - [armhf] net: fec: set GPR bit on suspend by DT configuration.
     - [x86] hyperv: report value of misc_features
     - xfs: fix partially uninitialized structure in xfs_reflink_remap_extent
     - ALSA: hda: Keep the controller initialization even if no codecs found
     - ALSA: hda: Explicitly permit using autosuspend if runtime PM is
       supported
     - scsi: target: fix PR IN / READ FULL STATUS for FC
     - scsi: target: tcmu: reset_ring should reset TCMU_DEV_BIT_BROKEN
     - xen/xenbus: ensure xenbus_map_ring_valloc() returns proper grant status
     - ALSA: hda: call runtime_allow() for all hda controllers
     - [arm64] Delete the space separator in __emit_inst
     - ext4: use matching invalidatepage in ext4_writepage
     - ext4: increase wait time needed before reuse of deleted inode numbers
     - ext4: convert BUG_ON&#39;s to WARN_ON&#39;s in mballoc.c
     - hwmon: (jc42) Fix name to have no illegal characters
     - [i386] bpf, x86_32: Fix clobbering of dst for BPF_JSET
     - qed: Fix use after free in qed_chain_free
     - ext4: check for non-zero journal inum in ext4_calculate_overhead
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.121">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.121</a>
     - drm/edid: Fix off-by-one in DispID DTD pixel clock
     - drm/qxl: qxl_release leak in qxl_draw_dirty_fb()
     - drm/qxl: qxl_release leak in qxl_hw_surface_alloc()
     - drm/qxl: qxl_release use after free
     - btrfs: fix block group leak when removing fails
     - ALSA: hda/realtek - Two front mics on a Lenovo ThinkCenter
     - ALSA: usb-audio: Correct a typo of NuPrime DAC-10 USB ID
     - ALSA: hda/hdmi: fix without unlocked before return
     - ALSA: pcm: oss: Place the plugin buffer overflow checks correctly
       (Closes: #<a href="bugreport.cgi?bug=960493">960493</a>)
     - PM: ACPI: Output correct message on target power state
     - PM: hibernate: Freeze kernel threads in software_resume()
     - dm writecache: fix data corruption when reloading the target
     - dm multipath: use updated MPATHF_QUEUE_IO on mapping for bio-based mpath
     - scsi: qla2xxx: set UNLOADING before waiting for session deletion
     - scsi: qla2xxx: check UNLOADING before posting async work
     - RDMA/mlx5: Set GRH fields in query QP on RoCE
     - RDMA/mlx4: Initialize ib_spec on the stack
     - RDMA/core: Prevent mixed use of FDs between shared ufiles
     - RDMA/core: Fix race between destroy and release FD object
     - [amd64,arm64] vfio: avoid possible overflow in
       vfio_iommu_type1_pin_pages
     - [amd64,arm64] vfio/type1: Fix VA-&gt;PA translation for PFNMAP VMAs in
       vaddr_get_pfn()
     - [arm64] iommu/qcom: Fix local_base status check
     - scsi: target/iblock: fix WRITE SAME zeroing
     - [amd64] iommu/amd: Fix legacy interrupt remapping for x2APIC-enabled
       system
     - nfs: Fix potential posix_acl refcnt leak in nfs3_set_acl
     - btrfs: fix partial loss of prealloc extent past i_size after fsync
     - btrfs: transaction: Avoid deadlock due to bad initialization timing of
       fs_info::journal_info
     - mmc: cqhci: Avoid false &quot;cqhci: CQE stuck on&quot; by not open-coding timeout
       loop
     - [arm64] mmc: sdhci-xenon: fix annoying 1.8V regulator warning
     - mmc: sdhci-pci: Fix eMMC driver strength for BYT-based controllers
     - [arm64] mmc: sdhci-msm: Enable host capabilities pertains to R1b
       response
     - [armhf] mmc: meson-mx-sdio: Set MMC_CAP_WAIT_WHILE_BUSY
     - [armhf] mmc: meson-mx-sdio: remove the broken -&gt;card_busy() op
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.122">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.122</a>
     - vhost: vsock: kick send_pkt worker once device is started
     - [powerpc*] pci/of: Parse unassigned resources
     - [x86] ASoC: topology: Check return value of pcm_new_ver
     - [armhf] ASoC: sgtl5000: Fix VAG power-on handling
     - [arm64,armhf] usb: dwc3: gadget: Properly set maxpacket limit
     - [x86] ASoC: codecs: hdac_hdmi: Fix incorrect use of list_for_each_entry
     - wimax/i2400m: Fix potential urb refcnt leak
     - [armhf] net: stmmac: fix enabling socfpga&#39;s ptp_ref_clock
     - [armhf] net: stmmac: Fix sub-second increment
     - cifs: protect updating server-&gt;dstaddr with a spinlock
     - [s390x] ftrace: fix potential crashes when switching tracers
     - sctp: Fix SHUTDOWN CTSN Ack in the peer restart case
     - drm/amdgpu: Fix oops when pp_funcs is unset in ACPI event
     - lib: devres: add a helper function for ioremap_uc
     - [x86] mfd: intel-lpss: Use devm_ioremap_uc for MMIO
     - ALSA: hda: Match both PCI ID and SSID for driver blacklist
     - [x86] platform: GPD pocket fan: Fix error message when temp-limits are
       out of range
     - mac80211: add ieee80211_is_any_nullfunc()
     - cgroup, netclassid: remove double cond_resched
     - drm/atomic: Take the atomic toys away from X
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.123">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.123</a>
     - USB: serial: qcserial: Add DW5816e support
     - tracing/kprobes: Fix a double initialization typo
     - vt: fix unicode console freeing with a common interface
     - fq_codel: fix TCA_FQ_CODEL_DROP_BATCH_SIZE sanity checks
     - net: macsec: preserve ingress frame ordering
     - net/mlx4_core: Fix use of ENOSPC around mlx4_counter_alloc()
     - net_sched: sch_skbprio: add message validation to skbprio_change()
     - net: usb: qmi_wwan: add support for DW5816e
     - sch_choke: avoid potential panic in choke_reset()
     - sch_sfq: validate silly quantum values
     - tipc: fix partial topology connection closure
     - bnxt_en: Fix VLAN acceleration handling in bnxt_fix_features().
     - net/mlx5: Fix forced completion access non initialized command entry
     - net/mlx5: Fix command entry leak in Internal Error State
     - bnxt_en: Improve AER slot reset.
     - bnxt_en: Fix VF anti-spoof filter setup.
     - net: stricter validation of untrusted gso packets
     - HID: wacom: Read HID_DG_CONTACTMAX directly for non-generic devices
     - sctp: Fix bundling of SHUTDOWN with COOKIE-ACK
     - HID: usbhid: Fix race between usbhid_close() and usbhid_stop()
     - USB: uas: add quirk for LaCie 2Big Quadra
     - USB: serial: garmin_gps: add sanity checking for data length
     - tracing: Add a vmalloc_sync_mappings() for safe measure
     - [arm64,armhf] KVM: vgic: Fix limit condition when writing to
       GICD_I[CS]ACTIVER
     - [arm64] KVM: Fix 32bit PC wrap-around
     - [arm64] hugetlb: avoid potential NULL dereference
     - mm/page_alloc: fix watchdog soft lockups during set_zone_contiguous()
     - [x86] KVM: VMX: Explicitly reference RCX as the vmx_vcpu pointer in asm
       blobs
     - [x86] KVM: VMX: Mark RCX, RDX and RSI as clobbered in vmx_vcpu_run()&#39;s
       asm blob
     - batman-adv: fix batadv_nc_random_weight_tq
     - batman-adv: Fix refcnt leak in batadv_show_throughput_override
     - batman-adv: Fix refcnt leak in batadv_store_throughput_override
     - batman-adv: Fix refcnt leak in batadv_v_ogm_process
     - [amd64] x86/entry/64: Fix unwind hints in register clearing code
     - [amd64] x86/entry/64: Fix unwind hints in kernel exit path
     - [amd64] x86/entry/64: Fix unwind hints in rewind_stack_do_exit()
     - [amd64] x86/unwind/orc: Don&#39;t skip the first frame for inactive tasks
     - [amd64] x86/unwind/orc: Prevent unwinding before ORC initialization
     - [amd64] x86/unwind/orc: Fix error path for bad ORC entry type
     - [amd64] x86/unwind/orc: Fix premature unwind stoppage due to IRET frames
     - netfilter: nat: never update the UDP checksum when it&#39;s 0
     - netfilter: nf_osf: avoid passing pointer to local var
     - scripts/decodecode: fix trapping instruction formatting
     - ipc/mqueue.c: change __do_notify() to bypass check_kill_permission()
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.124">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.124</a>
     - [arm64,armhf] net: dsa: Do not make user port errors fatal
     - shmem: fix possible deadlocks on shmlock_user_lock
     - virtio-blk: handle block_device_operations callbacks after hot unplug
     - mmc: sdhci-acpi: Add SDHCI_QUIRK2_BROKEN_64_BIT_DMA for AMDI0040
     - net: fix a potential recursive NETDEV_FEAT_CHANGE
     - net: phy: fix aneg restart in phy_ethtool_set_eee
     - pppoe: only process PADT targeted at local interfaces
     - Revert &quot;ipv6: add mtu lock check in __ip6_rt_update_pmtu&quot;
     - tcp: fix error recovery in tcp_zerocopy_receive()
     - virtio_net: fix lockdep warning on 32 bit
     - [x86,arm64] hinic: fix a bug of ndo_stop
     - net: ipv4: really enforce backoff for redirects
     - netprio_cgroup: Fix unlimited memory leak of v2 cgroups
     - net: tcp: fix rx timestamp behavior for tcp_recvmsg
     - tcp: fix SO_RCVLOWAT hangs with fat skbs
     - [i386] dmaengine: pch_dma.c: Avoid data race between probe and irq
       handler
     - [x86] cpufreq: intel_pstate: Only mention the BIOS disabling turbo mode
       once
     - ALSA: hda/hdmi: fix race in monitor detection during probe
     - drm/qxl: lost qxl_bo_kunmap_atomic_page in qxl_image_init_helper()
     - ipc/util.c: sysvipc_find_ipc() incorrectly updates position index
     - ALSA: hda/realtek - Fix S3 pop noise on Dell Wyse
     - gfs2: Another gfs2_walk_metadata fix
     - [x86] pinctrl: baytrail: Enable pin configuration setting for GPIO chip
     - [x86] pinctrl: cherryview: Add missing spinlock usage in
       chv_gpio_irq_handler
     - i40iw: Fix error handling in i40iw_manage_arp_cache()
     - mmc: core: Check request type before completing the request
     - mmc: block: Fix request completion in the CQE timeout path
     - NFS: Fix fscache super_cookie index_key from changing after umount
     - nfs: fscache: use timespec64 in inode auxdata
     - NFSv4: Fix fscache cookie aux_data to ensure change_attr is included
     - [arm64] fix the flush_icache_range arguments in machine_kexec
     - netfilter: nft_set_rbtree: Introduce and use nft_rbtree_interval_start()
     - IB/mlx4: Test return value of calls to ib_get_cached_pkey
     - ALSA: hda/realtek - Limit int mic boost for Thinkpad T530
     - ALSA: rawmidi: Fix racy buffer resize under concurrent accesses
     - ALSA: usb-audio: Add control message quirk delay for Kingston HyperX
       headset
     - usb: core: hub: limit HUB_QUIRK_DISABLE_AUTOSUSPEND to USB5534B
     - [arm64,armhf] usb: host: xhci-plat: keep runtime active when removing
       host
     - usb: xhci: Fix NULL pointer dereference when enqueuing trbs from urb sg
       list
     - cifs: fix leaked reference on requeued write
     - exec: Move would_dump into flush_old_exec
     - [arm64,armhf] clk: rockchip: fix incorrect configuration of rk3228
       aclk_gpu* clocks
     - [arm64,armhf] dwc3: Remove check for HWO flag in
       dwc3_gadget_ep_reclaim_trb_sg()
     - Revert &quot;ALSA: hda/realtek: Fix pop noise on ALC225&quot;
     - clk: Unlink clock if failed to prepare or enable
     - [arm64] dts: rockchip: Replace RK805 PMIC node name with &quot;pmic&quot; on
       rk3328 boards
     - [x86] KVM: Fix off-by-one error in kvm_vcpu_ioctl_x86_setup_mce
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.125">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.125</a>
     - i2c: dev: Fix the race between the release of i2c_dev and cdev
     - fix multiplication overflow in copy_fdtable()
     - ubifs: remove broken lazytime support
     - [amd64] iommu/amd: Fix over-read of ACPI UID from IVRS table
     - ubi: Fix seq_file usage in detailed_erase_block_info debugfs file
     - HID: multitouch: add eGalaxTouch P80H84 support
     - HID: alps: Add AUI1657 device ID
     - HID: alps: ALPS_1657 is too specific; use U1_UNICORN_LEGACY instead
     - scsi: qla2xxx: Fix hang when issuing nvme disconnect-all in NPIV
     - scsi: qla2xxx: Delete all sessions before unregister local nvme port
     - configfs: fix config_item refcnt leak in configfs_rmdir()
     - vhost/vsock: fix packet delivery order to monitoring devices
     - [amd64] aquantia: Fix the media type of AQC100 ethernet controller in
       the driver
     - component: Silence bind error on -EPROBE_DEFER
     - [ppc64el] scsi: ibmvscsi: Fix WARN_ON during event pool release
     - HID: i2c-hid: reset Synaptics SYNA2393 on resume
     - [x86] apic: Move TSC deadline timer debug printk
     - gtp: set NLM_F_MULTI flag in gtp_genl_dump_pdp()
     - HID: quirks: Add HID_QUIRK_NO_INIT_REPORTS quirk for Dell K12A
       keyboard-dock
     - ceph: fix double unlock in handle_cap_export()
     - [arm64,armhf] stmmac: fix pointer check after utilization in
       stmmac_interrupt
     - USB: core: Fix misleading driver bug report
     - [x86] platform/x86: asus-nb-wmi: Do not load on Asus T100TA and T200TA
     - padata: Replace delayed timer with immediate workqueue in padata_reorder
     - padata: initialize pd-&gt;cpu with effective cpumask
     - padata: purge get_cpu and reorder_via_wq from padata_do_serial
     - ALSA: iec1712: Initialize STDSP24 properly when using the model=staudio
       option
     - ALSA: pcm: fix incorrect hw_base increase
     - ALSA: hda/realtek - Fix silent output on Gigabyte X570 Aorus Xtreme
     - ALSA: hda/realtek - Add more fixup entries for Clevo machines
     - [armhf] drm/etnaviv: fix perfmon domain interation
     - apparmor: Fix use-after-free in aa_audit_rule_init
     - apparmor: fix potential label refcnt leak in aa_change_profile
     - apparmor: Fix aa_label refcnt leak in policy_update
     - [arm64] dmaengine: tegra210-adma: Fix an error handling path in
       &#39;tegra_adma_probe()&#39;
     - [powerpc*] Remove STRICT_KERNEL_RWX incompatibility with RELOCATABLE
     - [powerpc*] 64s: Disable STRICT_KERNEL_RWX
     - [amd64,arm64] nfit: Add Hyper-V NVDIMM DSM command set to white list
     - [x86,arm64] libnvdimm/btt: Remove unnecessary code in btt_freelist_init
     - [x86,arm64] libnvdimm/btt: Fix LBA masking during &#39;free list&#39; population
     - [x86] thunderbolt: Drop duplicated get_switch_at_route()
     - cxgb4: free mac_hlist properly
     - cxgb4/cxgb4vf: Fix mac_hlist initialization and free
     - brcmfmac: abort and release host after error
     - Revert &quot;gfs2: Don&#39;t demote a glock until its revokes are written&quot;
     - misc: rtsx: Add short delay after exit from ASPM
     - [x86] mei: release me_cl object reference
     - rxrpc: Fix a memory leak in rxkad_verify_response()
     - rxrpc: Trace discarded ACKs
     - rxrpc: Fix ack discard
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.126">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.126</a>
     - ax25: fix setsockopt(SO_BINDTODEVICE)
     - __netif_receive_skb_core: pass skb by reference
     - net: inet_csk: Fix so_reuseport bind-address cache in tb-&gt;fast*
     - net: ipip: fix wrong address family in init error path
     - net/mlx5: Add command entry handling completion
     - net: revert &quot;net: get rid of an signed integer overflow in
       ip_idents_reserve()&quot;
     - net sched: fix reporting the first-time use timestamp
     - r8152: support additional Microsoft Surface Ethernet Adapter variant
     - sctp: Don&#39;t add the shutdown timer if its already been added
     - sctp: Start shutdown on association restart if in SHUTDOWN-SENT state
       and socket is closed
     - net/mlx5e: Update netdev txq on completions during closure
     - net/mlx5: Annotate mutex destroy for root ns
     - net: sun: fix missing release regions in cas_init_one().
     - net/mlx4_core: fix a memory leak bug.
     - [armhf] dts: rockchip: fix phy nodename for rk3228-evb
     - [arm64] dts: rockchip: fix status for &amp;gmac2phy in rk3328-evb.dts
     - [arm64,armhf] gpio: tegra: mask GPIO IRQs during IRQ shutdown
     - ALSA: usb-audio: add mapping for ASRock TRX40 Creator
     - gfs2: move privileged user check to gfs2_quota_lock_check
     - cachefiles: Fix race between read_waiter and read_copier involving
       op-&gt;to_do
     - [arm64] usb: dwc3: pci: Enable extcon driver for Intel Merrifield
     - usb: gadget: legacy: fix redundant initialization warnings
     - IB/i40iw: Remove bogus call to netdev_master_upper_dev_get()
     - cifs: Fix null pointer check in cifs_read
     - Input: usbtouchscreen - add support for BonXeon TP
     - Input: evdev - call input_flush_device() on release(), not flush()
     - Input: xpad - add custom init packet for Xbox One S controllers
     - Input: i8042 - add ThinkPad S230u to i8042 reset list
     - Input: synaptics-rmi4 - really fix attn_data use-after-free
     - Input: synaptics-rmi4 - fix error return code in rmi_driver_probe()
     - [armel,armhf] 8970/1: decompressor: increase tag size
     - [arm*] 8843/1: use unified assembler in headers
     - gpio: exar: Fix bad handling for ida_simple_get error path
     - IB/qib: Call kobject_put() when kobject_init_and_add() fails
     - [armhf] dts/imx6q-bx50v3: Set display interface clock parents
     - [armel,armhf] dts: bcm2835-rpi-zero-w: Fix led polarity
     - mmc: block: Fix use-after-free issue for rpmb
     - ALSA: hwdep: fix a left shifting 1 by 31 UB bug
     - ALSA: hda/realtek - Add a model for Thinkpad T570 without DAC workaround
     - ALSA: usb-audio: mixer: volume quirk for ESS Technology Asus USB DAC
     - exec: Always set cap_ambient in cap_bprm_set_creds
     - ALSA: usb-audio: Quirks for Gigabyte TRX40 Aorus Master onboard audio
     - ALSA: hda/realtek - Add new codec supported for ALC287
     - libceph: ignore pool overlay and cache logic on redirects
     - IB/ipoib: Fix double free of skb in case of multicast traffic in CM mode
     - mm: remove VM_BUG_ON(PageSlab()) from page_mapcount()
     - include/asm-generic/topology.h: guard cpumask_of_node() macro argument
     - iommu: Fix reference count leak in iommu_group_alloc.
     - mmc: core: Fix recursive locking issue in CQE recovery path
     - RDMA/core: Fix double destruction of uobject
     - mac80211: mesh: fix discovery timer re-arming issue / crash
     - [x86] dma: Fix max PFN arithmetic overflow on 32 bit systems
     - [x86] copy_xstate_to_kernel(): don&#39;t leave parts of destination
       uninitialized
     - xfrm: allow to accept packets with ipv6 NEXTHDR_HOP in xfrm_input
     - xfrm: call xfrm_output_gso when inner_protocol is set in xfrm_output
     - xfrm interface: fix oops when deleting a x-netns interface
     - xfrm: fix a warning in xfrm_policy_insert_list
     - xfrm: fix a NULL-ptr deref in xfrm_local_error
     - xfrm: fix error in comment
     - vti4: eliminated some duplicate code.
     - ip_vti: receive ipip packet by calling ip_tunnel_rcv
     - netfilter: nft_reject_bridge: enable reject with bridge vlan
     - netfilter: ipset: Fix subcounter update skip
     - netfilter: nfnetlink_cthelper: unbreak userspace helper support
     - netfilter: nf_conntrack_pptp: prevent buffer overflows in debug code
     - esp6: get the right proto for transport mode in esp6_gso_encap
     - bnxt_en: Fix accumulation of bp-&gt;net_stats_prev.
     - xsk: Add overflow check for u64 division, stored into u32
     - qlcnic: fix missing release in qlcnic_83xx_interrupt_test.
     - bonding: Fix reference count leak in bond_sysfs_slave_add.
     - netfilter: nf_conntrack_pptp: fix compilation warning with W=1 build
     - mm/vmalloc.c: don&#39;t dereference possible NULL pointer in __vunmap()
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.127">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.127</a>
     - Revert &quot;cgroup: Add memory barriers to plug cgroup_rstat_updated() race
       window&quot;
     - libnvdimm: Fix endian conversion issues 
     - HID: sony: Fix for broken buttons on DS3 USB dongles
     - HID: i2c-hid: add Schneider SCL142ALM to descriptor override
     - p54usb: add AirVasT USB stick device-id
     - mmc: fix compilation of user API
     - scsi: ufs: Release clock if DMA map fails
     - airo: Fix read overflows sending packets
     - [x86] drm/i915: fix port checks for MST support on gen &gt;= 11
     - [arm64] scsi: hisi_sas: Check sas_port before using it
     - [powerpc*] powernv: Avoid re-registration of imc debugfs directory
     - [s390x] ftrace: save traced function caller
     - drm/edid: Add Oculus Rift S to non-desktop list
     - [s390x] mm: fix set_huge_pte_at() for empty ptes
     - null_blk: return error for invalid zone size
     - [arm64] net: ethernet: stmmac: Enable interface clocks on probe for
       IPQ806x
     - [arm64,armhf] net: smsc911x: Fix runtime PM imbalance on error
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.128">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.128</a>
     - devinet: fix memleak in inetdev_init()
     - l2tp: add sk_family checks to l2tp_validate_socket
     - l2tp: do not use inet_hash()/inet_unhash()
     - net: usb: qmi_wwan: add Telit LE910C1-EUX composition
     - vsock: fix timeout in vsock_accept()
     - net: check untrusted gso_size at kernel entry
     - USB: serial: qcserial: add DW5816e QDL support
     - USB: serial: usb_wwan: do not resubmit rx urb on fatal errors
     - USB: serial: option: add Telit LE910C1-EUX compositions
     - [arm64,armhf] usb: musb: start session in resume for host port
     - [arm64,armhf] usb: musb: Fix runtime PM imbalance on error
     - vt: keyboard: avoid signed integer overflow in k_ascii (<a href="https://security-tracker.debian.org/tracker/CVE-2020-13974">CVE-2020-13974</a>)
     - tty: hvc_console, fix crashes on parallel open/close
     - staging: rtl8712: Fix IEEE80211_ADDBA_PARAM_BUF_SIZE_MASK
     - CDC-ACM: heed quirk also in error handling
     - [arm64] nvmem: qfprom: remove incorrect write support
     - uprobes: ensure that uprobe-&gt;offset and -&gt;ref_ctr_offset are properly
       aligned
     - Revert &quot;net/mlx5: Annotate mutex destroy for root ns&quot;
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.129">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.129</a>
     - ipv6: fix IPV6_ADDRFORM operation logic
     - net_failover: fixed rollback in net_failover_open()
     - bridge: Avoid infinite loop when suppressing NS messages with invalid
       options
     - vxlan: Avoid infinite loop when suppressing NS messages with invalid
       options
     - tun: correct header offsets in napi frags mode
     - make &#39;user_access_begin()&#39; do &#39;access_ok()&#39; (<a href="https://security-tracker.debian.org/tracker/CVE-2018-20669">CVE-2018-20669</a>)
     - [x86] uaccess: Inhibit speculation past access_ok() in
       user_access_begin()
     - lib: Reduce user_access_begin() boundaries in strncpy_from_user() and
       strnlen_user()
     - btrfs: merge btrfs_find_device and find_device (<a href="https://security-tracker.debian.org/tracker/CVE-2019-18885">CVE-2019-18885</a>)
     - btrfs: Detect unbalanced tree with empty leaf before crashing btree
       operations
     - [armel,armhf] 8977/1: ptrace: Fix mask for thumb breakpoint hook
     - sched/fair: Don&#39;t NUMA balance for kthreads
     - Input: synaptics - add a second working PNP_ID for Lenovo T470s
     - [powerpc*] xive: Clear the page tables for the ESB IO mapping
     - ath9k_htc: Silence undersized packet warnings
     - RDMA/uverbs: Make the event_queue fds return POLLERR when disassociated
     - [x86] cpu/amd: Make erratum #1054 a legacy erratum
     - perf probe: Accept the instance number of kretprobe event
     - mm: add kvfree_sensitive() for freeing sensitive data objects
     - aio: fix async fsync creds
     - btrfs: tree-checker: Check level for leaves and nodes
     - [x86] Fix jiffies ODR violation
     - [x86] PCI: Mark Intel C620 MROMs as having non-compliant BARs
     - [x86] speculation: Prevent rogue cross-process SSBD shutdown
       (<a href="https://security-tracker.debian.org/tracker/CVE-2020-10766">CVE-2020-10766</a>)
     - [x86] reboot/quirks: Add MacBook6,1 reboot quirk
     - efi/efivars: Add missing kobject_put() in sysfs entry creation error
       path
     - [i386] ALSA: es1688: Add the missed snd_card_free()
     - ALSA: hda/realtek - add a pintbl quirk for several Lenovo machines
     - ALSA: usb-audio: Fix inconsistent card PM state after resume
     - ALSA: usb-audio: Add vendor, product and profile name for HP Thunderbolt
       Dock
     - [arm64,x86] ACPI: sysfs: Fix reference count leak in
       acpi_sysfs_add_hotplug_profile()
     - [amd64,arm64] ACPI: CPPC: Fix reference count leak in
       acpi_cppc_processor_probe()
     - [arm64] ACPI: GED: add support for _Exx / _Lxx handler methods
     - [arm64,x86] ACPI: PM: Avoid using power resources if there are none for
       D0
     - cgroup, blkcg: Prepare some symbols for module and !CONFIG_CGROUP usages
     - nilfs2: fix null pointer dereference at nilfs_segctor_do_construct()
     - [arm*] spi: bcm2835aux: Fix controller unregister order
     - PM: runtime: clk: Fix clk_pm_runtime_get() error path
     - [arm64] crypto: cavium/nitrox - Fix &#39;nitrox_get_first_device()&#39; when
       ndevlist is fully iterated
     - ALSA: pcm: disallow linking stream to itself
     - [x86] {mce,mm}: Unmap the entire page if the whole page is affected and
       poisoned
     - [x86] KVM: Fix APIC page invalidation race
     - [x86] kvm: Fix L1TF mitigation for shadow MMU
     - [x86] KVM: x86/mmu: Consolidate &quot;is MMIO SPTE&quot; code
     - [x86] KVM: only do L1TF workaround on affected processors
     - [x86] speculation: Change misspelled STIPB to STIBP
     - [x86] speculation: Add support for STIBP always-on preferred mode
     - [x86] speculation: Avoid force-disabling IBPB based on STIBP and
       enhanced IBRS. (<a href="https://security-tracker.debian.org/tracker/CVE-2020-10767">CVE-2020-10767</a>)
     - [x86] speculation: PR_SPEC_FORCE_DISABLE enforcement for indirect
       branches. (<a href="https://security-tracker.debian.org/tracker/CVE-2020-10768">CVE-2020-10768</a>)
     - spi: No need to assign dummy value in spi_unregister_controller()
     - spi: Fix controller unregister order
     - [amd64] spi: pxa2xx: Fix controller unregister order
     - [arm*] spi: bcm2835: Fix controller unregister order
     - [amd64] spi: pxa2xx: Balance runtime PM enable/disable on error
     - [amd64] spi: pxa2xx: Fix runtime PM ref imbalance on probe error
     - crypto: virtio: Fix use-after-free in
       virtio_crypto_skcipher_finalize_req()
     - crypto: virtio: Fix src/dst scatterlist calculation in
       __virtio_crypto_skcipher_do_req()
     - crypto: virtio: Fix dest length calculation in
       __virtio_crypto_skcipher_do_req()
     - ovl: initialize error in ovl_copy_xattr
     - proc: Use new_inode not new_inode_pseudo
     - [x86] KVM: nSVM: fix condition for filtering async PF
     - [x86] KVM: nSVM: leave ASID aside in copy_vmcb_control_area
     - [x86] KVM: nVMX: Consult only the &quot;basic&quot; exit reason when routing
       nested exit
     - [arm64] KVM: Make vcpu_cp1x() work on Big Endian hosts
     - scsi: megaraid_sas: TM command refire leads to controller firmware crash
     - ath9k: Fix use-after-free Read in ath9k_wmi_ctrl_rx
     - ath9k: Fix use-after-free Write in ath9k_htc_rx_msg
     - ath9x: Fix stack-out-of-bounds Write in ath9k_hif_usb_rx_cb
     - ath9k: Fix general protection fault in ath9k_hif_usb_rx_cb
     - mm/slub: fix a memory leak in sysfs_slab_add()
     - fat: don&#39;t allow to mount if the FAT length == 0
     - perf: Add cond_resched() to task_function_call()
     - [x86] agp/intel: Reinforce the barrier after GTT updates
     - [arm64] mmc: sdhci-msm: Clear tuning done flag while hs400 tuning
     - mmc: sdio: Fix potential NULL pointer error in mmc_sdio_init_card()
     - xen/pvcalls-back: test for errors when calling backend_connect()
     - [arm64] KVM: Synchronize sysreg state on injecting an AArch32 exception
     - [arm64] ACPI: GED: use correct trigger type field in _Exx / _Lxx
       handling
     - [arm64] drm: bridge: adv7511: Extend list of audio sample rates
     - [x86] crypto: ccp -- don&#39;t &quot;select&quot; CONFIG_DMADEVICES
     - media: si2157: Better check for running tuner in init
     - [amd64] spi: pxa2xx: Apply CS clk quirk to BXT
     - [amd64] net: atlantic: make hw_get_regs optional
     - net: ena: fix error returning in ena_com_get_hash_function()
     - [arm64] insn: Fix two bugs in encoding 32-bit logical immediates
     - ixgbe: Fix XDP redirect on archs with PAGE_SIZE above 4K
     - Bluetooth: Add SCO fallback for invalid LMP parameters error
     - [armhf] clocksource: dw_apb_timer: Make CPU-affiliation being optional
     - [armhf] clocksource: dw_apb_timer_of: Fix missing clockevent timers
     - btrfs: do not ignore error from btrfs_next_leaf() when inserting
       checksums
     - batman-adv: Revert &quot;disable ethtool link speed detection when auto
       negotiation off&quot;
     - [armhf] mmc: meson-mx-sdio: trigger a soft reset after a timeout or CRC
       error
     - [x86] kvm/hyper-v: Explicitly align hcall param for kvm_hyperv_exit
     - [x86] net: vmxnet3: fix possible buffer overflow caused by bad DMA value
       in vmxnet3_get_rss()
     - brcmfmac: fix wrong location to get firmware feature
     - e1000: Distribute switch variables for initialization
     - dt-bindings: display: mediatek: control dpi pins mode to avoid leakage
     - audit: fix a net reference leak in audit_send_reply()
     - media: dvb: return -EREMOTEIO on i2c transfer failure.
     - [mips*] Make sparse_init() using top-down allocation
     - Bluetooth: btbcm: Add 2 missing models to subver tables
     - audit: fix a net reference leak in audit_list_rules_send()
     - netfilter: nft_nat: return EOPNOTSUPP if type or flags are not supported
     - exit: Move preemption fixup up, move blocking operations down
     - sched/core: Fix illegal RCU from offline CPUs
     - drivers/perf: hisi: Fix typo in events attribute array
     - [armhf] net: allwinner: Fix use correct return type for ndo_start_xmit()
     - xfs: clean up the error handling in xfs_swap_extents
     - Crypto/chcr: fix for ccm(aes) failed test
     - [mips*] cm: Fix an invalid error code of INTVN_*_ERR
     - xfs: reset buffer write failure state on successful completion
     - xfs: fix duplicate verification from xfs_qm_dqflush()
     - [x86] platform/x86: intel-vbtn: Use acpi_evaluate_integer()
     - [x86] platform/x86: intel-vbtn: Split keymap into buttons and switches
       parts
     - [x86] platform/x86: intel-vbtn: Do not advertise switches to userspace
       if they are not there
     - [x86] platform/x86: intel-vbtn: Also handle tablet-mode switch on
       &quot;Detachable&quot; and &quot;Portable&quot; chassis-types
     - nvme: refine the Qemu Identify CNS quirk
     - ath10k: Remove msdu from idr when management pkt send fails
     - [arm64] wcn36xx: Fix error handling path in &#39;wcn36xx_probe()&#39;
     - net: qed*: Reduce RX and TX default ring count when running inside kdump
       kernel
     - mt76: avoid rx reorder buffer overflow
     - md: don&#39;t flush workqueue unconditionally in md_open
     - veth: Adjust hard_start offset on redirect XDP frames
     - net/mlx5e: IPoIB, Drop multicast packets that this interface sent
     - rtlwifi: Fix a double free in _rtl_usb_tx_urb_setup()
     - mwifiex: Fix memory corruption in dump_station
     - [x86] boot: Correct relocation destination on old linkers
     - [x86] mm: Stop printing BRK addresses
     - btrfs: qgroup: mark qgroup inconsistent if we&#39;re inherting snapshot to a
       new qgroup
     - macvlan: Skip loopback packets in RX handler
     - PCI: Don&#39;t disable decoding when mmio_always_on is set
     - [mips*] Fix IRQ tracing when call handle_fpe() and handle_msa_fpe()
     - bcache: fix refcount underflow in bcache_device_free()
     - [arm64] mmc: sdhci-msm: Set SDHCI_QUIRK_MULTIBLOCK_READ_ACMD12 quirk
     - mmc: via-sdmmc: Respect the cmd-&gt;busy_timeout from the mmc core
     - ixgbe: fix signed-integer-overflow warning
     - [armhf] mmc: sdhci-esdhc-imx: fix the mask for tuning start point
     - cpuidle: Fix three reference count leaks
     - [x86] platform/x86: hp-wmi: Convert simple_strtoul() to kstrtou32()
     - [x86] platform/x86: intel-hid: Add a quirk to support HP Spectre X2
       (2015)
     - [x86] platform/x86: intel-vbtn: Only blacklist SW_TABLET_MODE on the 9 /
       &quot;Laptop&quot; chasis-type
     - btrfs: include non-missing as a qualifier for the latest_bdev
     - btrfs: send: emit file capabilities after chown
     - mm: thp: make the THP mapcount atomic against __split_huge_pmd_locked()
     - mm: initialize deferred pages with interrupts enabled
     - ext4: fix EXT_MAX_EXTENT/INDEX to check for zeroed eh_max
     - ext4: fix error pointer dereference
     - ext4: fix race between ext4_sync_parent() and rename()
     - PCI: Avoid Pericom USB controller OHCI/EHCI PME# defect
     - PCI: Avoid FLR for AMD Matisse HD Audio &amp; USB 3.0
     - PCI: Avoid FLR for AMD Starship USB 3.0
     - PCI: Add ACS quirk for iProc PAXB
     - PCI: Add ACS quirk for Intel Root Complex Integrated Endpoints
     - PCI: Remove unused NFP32xx IDs
     - [x86] hwmon/k10temp, x86/amd_nb: Consolidate shared device IDs
     - [x86] amd_nb: Add PCI device IDs for family 17h, model 30h
     - PCI: add USR vendor id and use it in r8169 and w6692 driver
     - PCI: Move Synopsys HAPS platform device IDs
     - PCI: Move Rohm Vendor ID to generic list
     - misc: pci_endpoint_test: Add the layerscape EP device support
     - misc: pci_endpoint_test: Add support to test PCI EP in AM654x
     - PCI: Add Synopsys endpoint EDDA Device ID
     - PCI: Add NVIDIA GPU multi-function power dependencies
     - PCI: Enable NVIDIA HDA controllers
     - [x86] amd_nb: Add PCI device IDs for family 17h, model 70h
     - ALSA: lx6464es - add support for LX6464ESe pci express variant
     - PCI: Add Genesys Logic, Inc. Vendor ID
     - PCI: Add Amazon&#39;s Annapurna Labs vendor ID
     - PCI: vmd: Add device id for VMD device 8086:9A0B
     - [x86] amd_nb: Add Family 19h PCI IDs
     - PCI: Add Loongson vendor ID
     - serial: 8250_pci: Move Pericom IDs to pci_ids.h
     - PCI: Make ACS quirk implementations more uniform
     - PCI: Unify ACS quirk desired vs provided checking
     - PCI: Generalize multi-function power dependency device links
     - btrfs: fix error handling when submitting direct I/O bio
     - btrfs: fix wrong file range cleanup after an error filling dealloc range
     - PCI: Program MPS for RCiEP devices
     - e1000e: Disable TSO for buffer overrun workaround
     - e1000e: Relax condition to trigger reset for ME workaround
     - carl9170: remove P2P_GO support
     - media: go7007: fix a miss of snd_card_free (<a href="https://security-tracker.debian.org/tracker/CVE-2019-20810">CVE-2019-20810</a>)
     - Bluetooth: hci_bcm: fix freeing not-requested IRQ
     - b43legacy: Fix case where channel status is corrupted
     - b43: Fix connection problem with WPA3
     - b43_legacy: Fix connection problem with WPA3
     - igb: Report speed and duplex as unknown when device is runtime suspended
     - [arm64,armhf] power: vexpress: add suppress_bind_attrs to true
     - [armhf] pinctrl: samsung: Correct setting of eint wakeup mask on s5pv210
     - [armhf] pinctrl: samsung: Save/restore eint_mask over suspend for
       EINT_TYPE GPIOs
     - gnss: sirf: fix error return code in sirf_probe()
     - dm crypt: avoid truncating the logical block size
     - kernel/cpu_pm: Fix uninitted local in cpu_pm
     - [armhf] tegra: Correct PL310 Auxiliary Control Register initialization
     - [powerpc*] 64s: Don&#39;t let DT CPU features set FSCR_DSCR
     - [powerpc*] 64s: Save FSCR to init_task.thread.fscr after feature init
     - sunrpc: svcauth_gss_register_pseudoflavor must reject duplicate
       registrations.
     - sunrpc: clean up properly in gss_mech_unregister()
     - [armhf] w1: omap-hdq: cleanup to add missing newline for some dev_dbg
     - perf probe: Do not show the skipped events
     - perf probe: Fix to check blacklist address correctly
     - perf probe: Check address correctness by map instead of _etext
     - perf symbols: Fix debuginfo search for Ubuntu
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.130">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.130</a>
     - [arm64,armhf] clk: sunxi: Fix incorrect usage of round_down()
     - [arm64,armhf] ASoC: tegra: tegra_wm8903: Support nvidia, headset
       property
     - i2c: piix4: Detect secondary SMBus controller on AMD AM4 chipsets
     - [x86] iio: pressure: bmp280: Tolerate IRQ before registering
     - [arm64] clk: qcom: msm8916: Fix the address location of pll-&gt;config_reg
     - [arm64] backlight: lp855x: Ensure regulators are disabled on probe
       failure
     - [armhf] ASoC: davinci-mcasp: Fix dma_chan refcnt leak when getting dma
       type
     - [armel] integrator: Add some Kconfig selections
     - scsi: qedi: Check for buffer overflow in qedi_set_path()
     - ALSA: hda/realtek - Introduce polarity for micmute LED GPIO
     - [i386] ALSA: isa/wavefront: prevent out of bounds write in ioctl
     - PCI: Allow pci_resize_resource() for devices on root bus
     - scsi: qla2xxx: Fix issue with adapter&#39;s stopping state
     - [x86] iio: bmp280: fix compensation of humidity
     - f2fs: report delalloc reserve as non-free in statfs for project quota
     - [x86] i2c: pxa: clear all master action bits in i2c_pxa_stop_message()
     - [armhf] clk: samsung: Mark top ISP and CAM clocks on Exynos542x as
       critical
     - usblp: poison URBs upon disconnect
     - serial: 8250: Fix max baud limit in generic 8250 port
     - dm mpath: switch paths in dm_blk_ioctl() code path
     - [arm64] PCI: aardvark: Don&#39;t blindly enable ASPM L0s and don&#39;t write to
       read-only register
     - vfio/pci: fix memory leaks in alloc_perm_bits()
     - RDMA/mlx5: Add init2init as a modify command
     - scsi: lpfc: Fix lpfc_nodelist leak when processing unsolicited event
     - [powerpc*] perf/hv-24x7: Fix inconsistent output values incase multiple
       hv-24x7 events run
     - nfsd: Fix svc_xprt refcnt leak when setup callback client failed
     - [amd64] PCI: vmd: Filter resource type bits from shadow register
     - [powerpc*] crashkernel: Take &quot;mem=&quot; option into account
     - yam: fix possible memory leak in yam_init_driver
     - apparmor: fix introspection of of task mode for unconfined tasks
     - apparmor: check/put label on apparmor_sk_clone_security()
     - scsi: sr: Fix sr_probe() missing deallocate of device minor
     - [powerpc*] scsi: ibmvscsi: Don&#39;t send host info in adapter info MAD
       after LPM
     - apparmor: fix nnp subset test for unconfined
     - [x86] purgatory: Disable various profiling and sanitizing options
     - scsi: qedi: Do not flush offload work if ARP not resolved
     - [armhf] dts: sun8i-h2-plus-bananapi-m2-zero: Fix led polarity
     - scsi: qedf: Fix crash when MFW calls for protocol stats while function
       is still probing
     - [arm64] firmware: qcom_scm: fix bogous abuse of dma-direct internals
     - ALSA: usb-audio: Improve frames size computation
     - ALSA: usb-audio: Fix racy list management in output queue
     - [s390x] qdio: put thinint indicator after early error
     - tty: hvc: Fix data abort due to race in hvc_open
     - [armhf] thermal/drivers/ti-soc-thermal: Avoid dereferencing ERR_PTR
     - [arm64,armhf] usb: dwc3: gadget: Properly handle failed kick_transfer
     - [mips64el,mipsel] staging: sm750fb: add missing case while setting
       FB_VISUAL
     - [arm64,i386] i2c: pxa: fix i2c_pxa_scream_blue_murder() debug output
     - [arm*] serial: amba-pl011: Make sure we initialize the port.lock
       spinlock
     - drivers: base: Fix NULL pointer exception in __platform_driver_probe()
       if a driver developer is foolish
     - PCI/ASPM: Allow ASPM on links to PCIe-to-PCI/PCI-X Bridges
     - scsi: qla2xxx: Fix warning after FC target reset
     - scsi: mpt3sas: Fix double free warnings
     - [arm64,armhf] pinctrl: rockchip: fix memleak in rockchip_dt_node_to_map
     - [armhf] clk: ti: composite: fix memory leak
     - PCI: Fix pci_register_host_bridge() device_register() error handling
     - [powerpc*] Don&#39;t initialise init_task-&gt;thread.regs
     - tty: n_gsm: Fix SOF skipping
     - tty: n_gsm: Fix waking up upper tty layer when room available
     - HID: Add quirks for Trust Panora Graphic Tablet
     - ipmi: use vzalloc instead of kmalloc for user creation
     - [powerpc*] pseries/ras: Fix FWNMI_VALID off by one
     - vfio-pci: Mask cap zero
     - usb/ohci-platform: Fix a warning when hibernating
     - [arm64] drm/msm/mdp5: Fix mdp5_init error path for failed mdp5_kms
       allocation
     - [x86] ASoC: Intel: bytcr_rt5640: Add quirk for Toshiba Encore WT8-A
       tablet
     - [armhf] USB: host: ehci-mxc: Add error handling in ehci_mxc_drv_probe()
     - tty: n_gsm: Fix bogus i++ in gsm_data_kick
     - scsi: target: tcmu: Userspace must not complete queued commands
     - [powerpc*] 64s/pgtable: fix an undefined behaviour
     - dm zoned: return NULL if dmz_get_zone_for_reclaim() fails to find a zone
     - PCI/PTM: Inherit Switch Downstream Port PTM settings from Upstream Port
     - [arm64,armhf] PCI: dwc: Fix inner MSI IRQ domain registration
     - IB/cma: Fix ports memory leak in cma_configfs
     - [arm*] usb: dwc2: gadget: move gadget resume after the core is in L0
       state
     - usb: gadget: Fix issue with config_ep_by_speed function
     - RDMA/iw_cxgb4: cleanup device debugfs entries on ULD remove
     - [x86] apic: Make TSC deadline timer detection message visible
     - scsi: target: tcmu: Fix a use after free in
       tcmu_check_expired_queue_cmd()
     - [arm*] clk: bcm2835: Fix return type of bcm2835_register_gate
     - [ppc64el] KVM: Book3S HV: Ignore kmemleak false positives
     - net: sunrpc: Fix off-by-one issues in &#39;rpc_ntop6&#39;
     - NFSv4.1 fix rpc_call_done assignment for BIND_CONN_TO_SESSION
     - of: Fix a refcounting bug in __of_attach_node_sysfs()
     - rxrpc: Adjust /proc/net/rxrpc/calls to display call-&gt;debug_id not
       user_ID
     - gfs2: Allow lock_nolock mount to specify jid=X
     - scsi: iscsi: Fix reference count leak in iscsi_boot_create_kobj
     - scsi: ufs: Don&#39;t update urgent bkops level when toggling auto bkops
     - [armhf] pinctrl: freescale: imx: Fix an error handling path in
       &#39;imx_pinctrl_probe()&#39;
     - geneve: change from tx_error to tx_dropped on missing metadata
     - lib/zlib: remove outdated and incorrect pre-increment optimization
     - blktrace: use errno instead of bi_status
     - blktrace: fix endianness in get_pdu_int()
     - blktrace: fix endianness for blk_log_remap()
     - gfs2: fix use-after-free on transaction ail lists
     - drivers/perf: hisi: Fix wrong value for all counters enable
     - afs: Fix memory leak in afs_put_sysnames()
     - ASoC: core: only convert non DPCM link to DPCM link
     - [x86] ASoC: Intel: bytcr_rt5640: Add quirk for Toshiba Encore WT10-A
       tablet
     - ASoC: rt5645: Add platform-data for Asus T101HA
     - [arm64,armhf] drm/sun4i: hdmi ddc clk: Fix size of m divider
     - [x86] idt: Keep spurious entries unset in system_vectors
     - net/filter: Permit reading NET in load_bytes_relative when MAC not set
     - xdp: Fix xsk_generic_xmit errno
     - [arm64,armhf] usb/xhci-plat: Set PM runtime as active on resume
     - usb: host: ehci-platform: add a quirk to avoid stuck
     - usb/ehci-platform: Set PM runtime as active on resume
     - perf report: Fix NULL pointer dereference in
       hists__fprintf_nr_sample_events()
     - ext4: stop overwrite the errcode in ext4_setup_super
     - bcache: fix potential deadlock problem in btree_gc_coalesce
       (<a href="https://security-tracker.debian.org/tracker/CVE-2020-12771">CVE-2020-12771</a>)
     - afs: Fix non-setting of mtime when writing into mmap
     - afs: afs_write_end() should change i_size under the right lock
     - block: Fix use-after-free in blkdev_get()
     - [arm64] hw_breakpoint: Don&#39;t invoke overflow handler on uaccess
       watchpoints
     - libata: Use per port sync for detach
     - drm: encoder_slave: fix refcouting error for modules
     - drm/dp_mst: Reformat drm_dp_check_act_status() a bit
     - drm/qxl: Use correct notify port address when creating cursor ring
     - selinux: fix double free
     - ext4: fix partial cluster initialization when splitting extent
     - ext4: avoid race conditions when remounting with options that change dax
     - drm/dp_mst: Increase ACT retry timeout to 3s
     - block: nr_sects_write(): Disable preemption on seqcount write
     - mtd: rawnand: Pass a nand_chip object to nand_scan()
     - mtd: rawnand: Pass a nand_chip object to nand_release()
     - mtd: rawnand: diskonchip: Fix the probe error path
     - [armel,armhf] mtd: rawnand: orion: Fix the probe error path
     - [s390x] fix syscall_get_error for compat processes
     - [x86] drm/i915: Whitelist context-local timestamp in the gen9 cmdparser
     - [x86] drm/i915/icl+: Fix hotplug interrupt disabling after storm
       detection
     - crypto: algif_skcipher - Cap recv SG list at ctx-&gt;used
     - crypto: algboss - don&#39;t wait during notifier callback
     - kprobes: Fix to protect kick_kprobe_optimizer() by kprobe_mutex
     - e1000e: Do not wake up the system via WOL if device wakeup is disabled
     - [mips*] net: octeon: mgmt: Repair filling of RX ring
     - kretprobe: Prevent triggering kretprobe from within kprobe_flush_task
     - sched/rt, net: Use CONFIG_PREEMPTION.patch
     - net: core: device_rename: Use rwsem instead of a seqcount
     - md: add feature flag MD_FEATURE_RAID0_LAYOUT
     - [x86] kvm: Move kvm_set_mmio_spte_mask() from x86.c to mmu.c
     - [x86] kvm: Fix reserved bits related calculation errors caused by MKTME
     - [x86] KVM: x86/mmu: Set mmio_value to &#39;0&#39; if reserved #PF can&#39;t be
       generated
     <a href="https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.131">https://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.19.131</a>
     - net: be more gentle about silly gso requests coming from user
     - block/bio-integrity: don&#39;t free &#39;buf&#39; if bio_integrity_add_page() failed
     - fanotify: fix ignore mask logic for events on child and on dir
     - [armhf] mtd: rawnand: marvell: Fix the condition on a return code
     - net: sched: export __netdev_watchdog_up()
     - [x86] EDAC/amd64: Add Family 17h Model 30h PCI IDs
     - [arm64,armhf] i2c: tegra: Cleanup kerneldoc comments
     - [arm64,armhf] i2c: tegra: Add missing kerneldoc for some fields
     - [arm64,armhf] i2c: tegra: Fix Maximum transfer size
     - ALSA: hda/realtek - Enable the headset of ASUS B9450FA with ALC294
     - ALSA: hda/realtek: Enable mute LED on an HP system
     - ALSA: hda/realtek - Enable micmute LED on and HP system
     - apparmor: don&#39;t try to replace stale label in ptraceme check
       (Closes: #<a href="bugreport.cgi?bug=963493">963493</a>)
     - [ppc64el] ibmveth: Fix max MTU limit
     - mld: fix memory leak in ipv6_mc_destroy_dev()
     - net: bridge: enfore alignment for ethernet address
     - net: fix memleak in register_netdevice()
     - net: place xmit recursion in softnet data
     - net: use correct this_cpu primitive in dev_recursion_level
     - net: increment xmit_recursion level in dev_direct_xmit()
     - net: usb: ax88179_178a: fix packet alignment padding
     - rxrpc: Fix notification call on completion of discarded calls
     - sctp: Don&#39;t advertise IPv4 addresses if ipv6only is set on the socket
     - tcp: don&#39;t ignore ECN CWR on pure ACK
     - tcp: grow window for OOO packets only for SACK flows
     - tg3: driver sleeps indefinitely when EEH errors exceed eeh_max_freezes
     - ip6_gre: fix use-after-free in ip6gre_tunnel_lookup()
     - net: phy: Check harder for errors in get_phy_id()
     - ip_tunnel: fix use-after-free in ip_tunnel_lookup()
     - sch_cake: don&#39;t try to reallocate or unshare skb unconditionally
     - sch_cake: fix a few style nits
     - tcp_cubic: fix spurious HYSTART_DELAY exit upon drop in min RTT
     - sch_cake: don&#39;t call diffserv parsing code when it is not needed
     - net: Fix the arp error in some cases
     - net: Do not clear the sock TX queue in sk_set_socket()
     - net: core: reduce recursion limit value
     - [arm*] usb: dwc2: Postponed gadget registration to the udc class driver
     - usb: add USB_QUIRK_DELAY_INIT for Logitech C922
     - USB: ehci: reopen solution for Synopsys HC bug
     - xhci: Poll for U0 after disabling USB2 LPM
     - [armhf] usb: host: ehci-exynos: Fix error check in exynos_ehci_probe()
     - ALSA: usb-audio: add quirk for Denon DCD-1500RE
     - ALSA: usb-audio: add quirk for Samsung USBC Headset (AKG)
     - ALSA: usb-audio: Fix OOB access of mixer element list
     - [s390x] scsi: zfcp: Fix panic on ERP timeout for previously dismissed
       ERP action
     - xhci: Fix incorrect EP_STATE_MASK
     - xhci: Fix enumeration issue when setting max packet size for FS devices.
     - xhci: Return if xHCI doesn&#39;t support LPM
     - cdc-acm: Add DISABLE_ECHO quirk for Microchip/SMSC chip
     - loop: replace kill_bdev with invalidate_bdev
     - IB/mad: Fix use after free when destroying MAD agent
     - cifs/smb3: Fix data inconsistent when punch hole
     - cifs/smb3: Fix data inconsistent when zero file range
     - xfrm: Fix double ESP trailer insertion in IPsec crypto offload.
     - efi/esrt: Fix reference count leak in esre_create_sysfs_entry.
     - [armhf] regualtor: pfuze100: correct sw1a/sw2 on pfuze3000
     - [armhf] ASoC: fsl_ssi: Fix bclk calculation for mono channel
     - [armhf] dts: Fix duovero smsc interrupt for suspend
     - regmap: Fix memory leak from regmap_register_patch
     - rxrpc: Fix handling of rwind from an ACK packet
     - RDMA/qedr: Fix KASAN: use-after-free in ucma_event_handler+0x532
     - RDMA/cma: Protect bind_list and listen_list while finding matching cm id
     - RDMA/mad: Fix possible memory leak in ib_mad_post_receive_mads()
     - net: qed: fix left elements count calculation
     - net: qed: fix NVMe login fails over VFs
     - net: qed: fix excessive QM ILT lines consumption
     - cxgb4: move handling L2T ARP failures to caller
     - [armhf] imx5: add missing put_device() call in imx_suspend_alloc_ocram()
     - netfilter: ipset: fix unaligned atomic access
     - i2c: core: check returned size of emulated smbus block read
     - sched/deadline: Initialize -&gt;dl_boosted
     - sched/core: Fix PI boosting between RT and DEADLINE tasks
     - ata/libata: Fix usage of page address by page_address in
       ata_scsi_mode_select_xlat function
     - net: alx: fix race condition in alx_remove
     - [s390x] ptrace: fix setting syscall number
     - [s390x] vdso: fix vDSO clock_getres()
     - kbuild: improve cc-option to clean up all temporary files
     - blktrace: break out of blktrace setup on concurrent calls
     - ALSA: hda: Add NVIDIA codec IDs 9a &amp; 9d through a0 to patch table
     - ALSA: hda/realtek - Add quirk for MSI GE63 laptop
     - [x86,arm64] ACPI: sysfs: Fix pm_profile_attr type
     - [x86] KVM: Fix MSR range of APIC registers in X2APIC mode
     - [x86] KVM: nVMX: Plumb L2 GPA through to PML emulation
     - [amd64] x86/asm/64: Align start of __clear_user() loop to 16-bytes
     - btrfs: fix data block group relocation failure due to concurrent scrub
     - btrfs: fix failure of RWF_NOWAIT write into prealloc extent beyond eof
     - mm/slab: use memzero_explicit() in kzfree()
     - ocfs2: avoid inode removal while nfsd is accessing it
     - ocfs2: load global_inode_alloc
     - ocfs2: fix value of OCFS2_INVALID_SLOT
     - ocfs2: fix panic on nfs server over ocfs2
     - [arm64] perf: Report the PC value in REGS_ABI_32 mode
     - tracing: Fix event trigger to accept redundant spaces
     - ring-buffer: Zero out time extend if it is nested and not absolute
     - drm/radeon: fix fb_div check in ni_init_smc_spll_table()
     - [x86,arm64] Staging: rtl8723bs: prevent buffer overflow in
       update_sta_support_rate()
     - sunrpc: fixed rollback in rpc_gssd_dummy_populate()
     - SUNRPC: Properly set the @subbuf parameter of xdr_buf_subsegment()
     - pNFS/flexfiles: Fix list corruption if the mirror count changes
     - NFSv4 fix CLOSE not waiting for direct IO compeletion
     - dm writecache: correct uncommitted_block when discarding uncommitted
       entry
     - dm writecache: add cond_resched to loop in persistent_memory_claim()
     - xfs: add agf freeblocks verify in xfs_agf_verify (<a href="https://security-tracker.debian.org/tracker/CVE-2020-12655">CVE-2020-12655</a>)
     - Revert &quot;tty: hvc: Fix data abort due to race in hvc_open&quot;
 .
   [ Salvatore Bonaccorso ]
   * [rt] Add new signing key for Tom Zanussi
   * nfsd: apply umask on fs without ACL support (Closes: #<a href="bugreport.cgi?bug=962254">962254</a>)
   * [rt] Update to 4.19.120-rt52:
     - tasklet: Address a race resulting in double-enqueue
     - hrtimer: fix logic for when grabbing softirq_expiry_lock can be elided
   * [rt] Update to 4.19.124-rt53
   * [rt] Update to 4.19.127-rt55:
     - fs/dcache: Include swait.h header
     - mm: slub: Always flush the delayed empty slubs in flush_all()
     - tasklet: Fix UP case for tasklet CHAINED state
   * usb: usbtest: fix missing kfree(dev-&gt;buf) in usbtest_disconnect
     (<a href="https://security-tracker.debian.org/tracker/CVE-2020-15393">CVE-2020-15393</a>)
 .
   [ Ben Hutchings ]
   * [rt] Update &quot;net: move xmit_recursion to per-task variable on -RT&quot; to
     apply on top of &quot;net: place xmit recursion in softnet data&quot;
   * [rt] Drop &quot;net: Add a mutex around devnet_rename_seq&quot;, redundant with
     &quot;net: Introduce net_rwsem to protect net_namespace_list&quot;
   * [rt] Drop idle task related parts of &quot;sched: Move mmdrop to RCU on RT&quot;,
     redundant with &quot;sched/core: Fix illegal RCU from offline CPUs&quot;
   * Bump ABI to 10
 .
   [ YunQiang Su ]
   * [mips*]: Do not enable MIPS_O32_FP64_SUPPORT, since golang hasn&#39;t been
     migrated to FPXX yet and this breaks the golang packages on Octeon
     hardware. In turns this disables MSA on 32-bit kernels.
 .
   [ Luca Boccassi ]
   * [cloud] Enable INFINIBAND configs for HyperV/Azure (Closes: #<a href="bugreport.cgi?bug=958300">958300</a>)
Checksums-Sha1:
 e6e9e89c31074f6038cb6284ad99277aa3c289b9 191615 linux_4.19.131-1.dsc
 b768f52e9e299adfb06b2574347a7873342f2b14 107504396 linux_4.19.131.orig.tar.xz
 8966171f154876ced4bee4607147762d939b833e 1416572 linux_4.19.131-1.debian.tar.xz
 38c1a013fb3385df645440a25bf74ee57b13cd65 6570 linux_4.19.131-1_source.buildinfo
Checksums-Sha256:
 8a8a67de124ca221589df2351f9a7c68914a15b0a95a09a105a4bfa14c3f612c 191615 linux_4.19.131-1.dsc
 2ee5633a829caae6f15ad39137c9ec253fe62f285159d1ad05b509eb68a5bf3e 107504396 linux_4.19.131.orig.tar.xz
 87996f7674e0ec50f946590e252245fcca3ad36e3ccc369a3658fafbe0104aef 1416572 linux_4.19.131-1.debian.tar.xz
 1a7bbd30da00ff31280ff99c233978d077dd54bcf62f57471fd211a6db86ae92 6570 linux_4.19.131-1_source.buildinfo
Files:
 6f7396f95c161c48c2352e7187f20e34 191615 kernel optional linux_4.19.131-1.dsc
 fba640947dc75306fc64e419857be432 107504396 kernel optional linux_4.19.131.orig.tar.xz
 d7c2fd38c586535374c22b3b08b37f25 1416572 kernel optional linux_4.19.131-1.debian.tar.xz
 f648fe02f31c10153f7f91524b6f8584 6570 kernel optional linux_4.19.131-1_source.buildinfo

-----BEGIN PGP SIGNATURE-----

iQKmBAEBCgCQFiEERkRAmAjBceBVMd3uBUy48xNDz0QFAl8GrLhfFIAAAAAALgAo
aXNzdWVyLWZwckBub3RhdGlvbnMub3BlbnBncC5maWZ0aGhvcnNlbWFuLm5ldDQ2
NDQ0MDk4MDhDMTcxRTA1NTMxRERFRTA1NENCOEYzMTM0M0NGNDQSHGNhcm5pbEBk
ZWJpYW4ub3JnAAoJEAVMuPMTQ89ELecP/RvflRA+i0RqVh/WDQ4WUzFPxFhtB9Cq
ZPxPl7DXsJroAhePEQ3aEhypSoSVjjx4JT5tfbH5ckh1cfJkBJNNE83eczKjUmW9
YsETIUrS7cMdLmJyethpL+yhojBETPB+Zqc/W2NA8irTYQ41H2M02Siag7DYL23E
Jw/KhYPNCOlZF8uKR5MpgPbOCFrvCDUr0OyHsxjzt8TO0irDTpeaWC8gZb1r5EqM
0iqvGkedl2GkN6+Z6HCkk0jFsuIMnl1s/KJjAgQpmsXxKVEdQP/B4i59BqsujATo
2wHq6vMoyztpS+hdHgB7vvvactHPXXezBVrLBB2ONeJUOeDHk98sL2PiDGKeWC+d
5jBK1PgbMiIbE70eKCn/VsNTXSbrVXZJ+vNz98bU3+NoGUh+6pYqmybkmG1hFtP7
jVWQfGtVx8+iPaWqkIh1cUKX/yKSHXKybVALv2J3+T3CxyRppPUBVJpjgSbTnR1m
JjvyBNOdLfc34Efzo40IFCzit7O3oJCVNbSzpHIEOvy42fe5FB8jm7jEfOGLBTe2
vPVj66LO2ALldeB7SPkgpUv0UXSixPpThzE63C9RyYxujc+kdvDR+xaoORlRIytV
AwXkBwMdUHxhy79g4Dr/9HpIDM27mH5gclxZ7i/eCRpRCW2uyRBVQJVXv48NOVWD
Ud6DIIvNB6yQ
=Ebyr
-----END PGP SIGNATURE-----



</pre>

<div class="msgreceived"><hr><p>
<a name="167"></a>
<!-- request_addr: Salvatore Bonaccorso &lt;carnil@debian.org&gt; -->
<!-- time:1594411934 -->
<strong>Reply sent</strong>
to <code>Salvatore Bonaccorso &lt;carnil@debian.org&gt;</code>:<br>
You have taken responsibility.
 (Fri, 10 Jul 2020 20:12:14 GMT) (<a href="bugreport.cgi?bug=962254;msg=168">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=168">mbox</a>, <a href="#167">link</a>).</p></p></div>

<div class="infmessage"><hr><p>
<a name="169"></a>
<!-- request_addr: John Goerzen &lt;jgoerzen@complete.org&gt; -->
<!-- time:1594411934 -->
<strong>Notification sent</strong>
to <code>John Goerzen &lt;jgoerzen@complete.org&gt;</code>:<br>
Bug acknowledged by developer.
 (Fri, 10 Jul 2020 20:12:14 GMT) (<a href="bugreport.cgi?bug=962254;msg=170">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=170">mbox</a>, <a href="#169">link</a>).</p></p></div>

<div class="msgreceived"><hr><p>
<a name="171"></a>
<!-- command:archive -->
<!-- requester: Debbugs Internal Request &lt;owner@bugs.debian.org&gt; -->
<!-- request_addr: internal_control@bugs.debian.org -->
<!-- time:1598772795 -->
<!-- new_data:
$new_data = {};
-->
<!-- old_data:
$old_data = {};
-->
<strong>Bug archived.</strong>
Request was from <code>Debbugs Internal Request &lt;owner@bugs.debian.org&gt;</code>
to <code>internal_control@bugs.debian.org</code>.
 (Sun, 30 Aug 2020 07:33:15 GMT) (<a href="bugreport.cgi?bug=962254;msg=172">full text</a>, <a href="bugreport.cgi?bug=962254;mbox=yes;msg=172">mbox</a>, <a href="#171">link</a>).</p></p></div>

<hr>
<p class="msgreceived">Send a report that <a href="https://bugs.debian.org/cgi-bin/bugspam.cgi?bug=962254">this bug log contains spam</a>.</p>
<hr>
<ADDRESS>Debian bug tracking system administrator &lt;<A HREF="mailto:owner@bugs.debian.org">owner@bugs.debian.org</A>&gt;.
Last modified:
<!--timestamp-->Sat Oct 30 18:36:24 2021<!--end timestamp-->; 
Machine Name:
<!--machinename-->buxtehude<!--machinename-->
<P>
<A HREF="https://www.debian.org/Bugs/">Debian Bug tracking system</A>
</p>
<p>
  Debbugs is free software and licensed under the terms of the GNU
  Public License version 2. The current version can be obtained
  from <a href="https://bugs.debian.org/debbugs-source/">https://bugs.debian.org/debbugs-source/</a>.
</p>
<p>
Copyright © 1999 Darren O. Benham,
1997,2003 nCipher Corporation Ltd,
1994-97 Ian Jackson,
2005-2017 Don Armstrong, and many other contributors.
</p>
</ADDRESS>

</body>
</html>
