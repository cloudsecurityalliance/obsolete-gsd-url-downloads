<!doctype html>
<html lang="en-us">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<title>Nim - stdlib Browsers - `open` Argument Injection | ConsenSys Diligence</title>
<meta name="HandheldFriendly" content="True">
<meta name="MobileOptimized" content="320">
<meta name="viewport" content="width=device-width,minimum-scale=1">
<meta name="description" content="Vulnerability Note Summary The nim-lang stdlib browsers provides a convenient interface to open an URL with the system default browser. The library, however, fails to validated that the provided input is actually an URL. An attacker in control of an unfiltered URL passed to browsers.openDefaultBrowser(URL) can, therefore, provide a local file path that will be opened in the default explorer or pass one argument to the underlying open command to execute arbitrary registered system commands.">
<link href="/diligence/tachyons.min.css" rel="stylesheet">
<link href="/diligence/style.css" rel="stylesheet">
<link href="/diligence/highlight.css" rel="stylesheet">
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.10.1/css/all.css" crossorigin="anonymous">
<link rel="canonical" href="https://consensys.net/diligence/vulnerabilities/nim-browsers-argument-injection/">
<link rel="shortcut icon" type="image/png" href="/diligence/images/icon/favicon.png">
<link rel="nokia-touch-icon" href="/diligence/images/icon/favicon.png">
<link rel="apple-touch-icon-precomposed" href="/diligence/images/icon/favicon.png" sizes="1x1"><link rel="alternate" type="application/rss+xml" href="https://consensys.net/diligence/index.xml" title="ConsenSys Diligence" />
<meta itemprop="name" content="Nim - stdlib Browsers - `open` Argument Injection">
<meta itemprop="description" content="Vulnerability Note Summary The nim-lang stdlib browsers provides a convenient interface to open an URL with the system default browser. The library, however, fails to validated that the provided input is actually an URL. An attacker in control of an unfiltered URL passed to browsers.openDefaultBrowser(URL) can, therefore, provide a local file path that will be opened in the default explorer or pass one argument to the underlying open command to execute arbitrary registered system commands.">
<meta itemprop="datePublished" content="2020-07-30T19:32:09&#43;01:00" />
<meta itemprop="dateModified" content="2020-07-30T19:32:09&#43;01:00" />
<meta itemprop="wordCount" content="562">
<meta itemprop="keywords" content="" />
<meta property="og:title" content="Nim - stdlib Browsers - `open` Argument Injection | ConsenSys Diligence" />
<meta property="og:description" content="Vulnerability Note Summary The nim-lang stdlib browsers provides a convenient interface to open an URL with the system default browser. The library, however, fails to validated that the provided input is actually an URL. An attacker in control of an unfiltered URL passed to browsers.openDefaultBrowser(URL) can, therefore, provide a local file path that will be opened in the default explorer or pass one argument to the underlying open command to execute arbitrary registered system commands." />
<meta property="og:type" content="article" />
<meta property="og:url" content="https://consensys.net/diligence/vulnerabilities/nim-browsers-argument-injection/" />
<meta property="article:published_time" content="2020-07-30T19:32:09+01:00" />
<meta property="article:modified_time" content="2020-07-30T19:32:09+01:00" /><meta property="og:site_name" content="ConsenSys Diligence" />
<meta name="twitter:title" content="Nim - stdlib Browsers - `open` Argument Injection | ConsenSys Diligence" />
<meta name="twitter:description" content="Vulnerability Note Summary The nim-lang stdlib browsers provides a convenient interface to open an URL with the system default browser. The library, however, fails to validated that the provided input is actually an URL. An attacker in control of an unfiltered URL passed to browsers.openDefaultBrowser(URL) can, therefore, provide a local file path that will be opened in the default explorer or pass one argument to the underlying open command to execute arbitrary registered system commands." /><meta name="twitter:card" content="summary" />
<meta name="twitter:site" content="@ConsenSysAudits" />
<meta name="twitter:creator" content="@ConsenSysAudits" />
<script type="text/javascript" id="hs-script-loader" async defer src="//js.hs-scripts.com/4795067.js"></script>
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-P5Z4ZWH');</script>
<script type="text/javascript" id="reload-pathfix">
        let lastSegment = window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1); 
        if(lastSegment && lastSegment.length !==0 && lastSegment.indexOf(".") === -1){
          
          window.location.pathname += "/";  
        }
      </script>
<script async src='/cdn-cgi/bm/cv/669835187/api.js'></script></head>
<body>
<header class="header">
<nav class="db dt-l w-100 border-box pa4 ph5-l deli-nav">
<a class="db dtc-l v-mid mid-gray link dim w-100 w-25-l tc tl-l mb2 mb0-l dili-logo" href="/diligence" title="Home">
<img class="logo " src="/diligence/images/logo/logo.svg" alt="ConsenSys Diligence">
</a>
<div class="dili_menu_hambuger"></div>
<div class="db dtc-l v-mid w-100 w-75-l tc tr-l dili-header-menu">
<div class="dili-header-menu-inner">
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/audits/" title="Audits">Audits</a>
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/fuzzing/" title="Fuzzing">Fuzzing</a>
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/scribble/" title="Scribble">Scribble</a>
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/blog/" title="Blog">Blog</a>
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/tools/" title="Tools">Tools</a>
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/research/" title="Research">Research</a>
<a class="link dim light-gray f6 f5-l dib mr3 mr4-l" href="/diligence/about/" title="About">About</a>
<a class="link dim light-gray f6 f5-l dib" href="/diligence/contact/" title="Contact">Contact</a>
</div>
</div>
</nav>
<script type="text/javascript" style="display:none">
//<![CDATA[
window.__mirage2 = {petok:"9abf80104cf7b15cfc764d3f71c0b8df03e3feb8-1635633251-1800"};
//]]>
</script>
<script type="text/javascript" src="https://ajax.cloudflare.com/cdn-cgi/scripts/04b3eb47/cloudflare-static/mirage2.min.js"></script>
<img class="printlogo" alt="ConsenSys Diligence" data-cfsrc="/diligence/print-logo.png" style="display:none;visibility:hidden;"><noscript><img class="printlogo" alt="ConsenSys Diligence" src="/diligence/print-logo.png"></noscript>
</header>
<main role="main">
<div class="dili-navigator-page">
<div class="dili-blog-hero">
<div class="dili-hero-bg-mixin" style="background-image: url('/diligence/images/audit_report/feature-hero.png');"></div>
<div class="dili-container">
<div class="dili-blog-hero-inner">
<div class="item-eyebrow"></div>
<h1 class="item-title">Nim - stdlib Browsers - `open` Argument Injection</h1>
</div>
</div>
</div>
<article class="">
<div class="dili-navigator-wrapper">
<div class="dili-navigator-sidebar">
<ul class="dili-navigator-sidebar-inner">
<li>
<a href="#summary">1 Summary</a>
</li>
<li>
<a href="#details">2 Details</a>
<ul>
<li>
<a href="#description">2.1 Description</a>
</li>
<li>
<a href="#proof-of-concept">2.2 Proof of Concept</a>
</li>
<li>
<a href="#proposed-fix">2.3 Proposed Fix</a>
</li>
</ul>
</li>
 <li>
<a href="#vendor-response">3 Vendor Response</a>
<ul>
<li>
<a href="#timeline">3.1 Timeline</a>
</li>
</ul>
</li>
<li>
<a href="#references">4 References</a>
</li>
</ul>
</div>
<div class="dili-navigator-content richtext">
<aside class="summary summary-cta-side">
<div class="cta-block">
<div class="item-outer">
<div class="item-inner">
<div class="item-title">
Book your 1-Day Security Spot Check
</div>
</div>
<div class="item-action">
<a class="btn btn-primary" href="https://pages.consensys.net/diligence-1-day-spot-check" target="_blank">Book Now</a>
</div>
</div>
</div>
<table>
<tr>
<th align="left">CVE</th>
<td align="left">
<a class="blue no-underline" href="https://nvd.nist.gov/vuln/detail/CVE-2020-15692">CVE-2020-15692</a>&nbsp;
</td>
</tr>
<tr>
<th align="left">Vendor</th>
<td align="left"><a href="https://nim-lang.org/">nim-lang</a></td>
</tr>
<tr>
<th align="left">Affected Versions</th>
<td align="left"><= 1.2.6</td>
</tr>
<tr>
<th align="left">Vulnerability Class</th>
<td align="left">CWE-88</td>
</tr>
<tr>
<th align="left">Author(s)</th>
<td align="left">tintinweb</td>
</tr>
<tr>
<th align="left">Date</th>
<td align="left">Jul 30, 2020</td>
</tr>
</table>
</aside>
<h1 id="vulnerability-note">Vulnerability Note</h1>
<h2 id="summary">1 Summary</h2>
<p>The nim-lang stdlib <code>browsers</code> provides a convenient interface to open an URL with the system default browser. The library, however, fails to validated that the provided input is actually an URL. An attacker in control of an unfiltered URL passed to <code>browsers.openDefaultBrowser(URL)</code> can, therefore, provide a local file path that will be opened in the default explorer or pass one argument to the underlying <code>open</code> command to execute arbitrary registered system commands.</p>
<h2 id="details">2 Details</h2>
<h3 id="description">2.1 Description</h3>
<p><code>browsers.openDefaultBrowser()</code> internally calls <code>shellExecuteW</code> passing in the URL as an arg to <code>open</code> for Windows and <code>execShellCmd</code> with the OS&rsquo;s open command (<code>xdg-open</code> on linux, <code>open</code> on MacOs) and the shell quoted <code>url</code> as an argument on nix systems.</p>
<p>The implementation is as follows:</p>
<div class="highlight"><pre class="chroma"><code class="language-nim" data-lang="nim"><span class="k">template</span> <span class="n">openDefaultBrowserImpl</span><span class="p">(</span><span class="n">url</span><span class="p">:</span> <span class="kt">string</span><span class="p">)</span> <span class="o">=</span>
  <span class="k">when</span> <span class="n">defined</span><span class="p">(</span><span class="n">windows</span><span class="p">):</span>
    <span class="kd">var</span> <span class="n">o</span> <span class="o">=</span> <span class="n">newWideCString</span><span class="p">(</span><span class="n">osOpenCmd</span><span class="p">)</span>
    <span class="kd">var</span> <span class="n">u</span> <span class="o">=</span> <span class="n">newWideCString</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="k">discard</span> <span class="n">shellExecuteW</span><span class="p">(</span><span class="mi">0</span><span class="il">&#39;i32</span><span class="p">,</span> <span class="n">o</span><span class="p">,</span> <span class="n">u</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">SW_SHOWNORMAL</span><span class="p">)</span>
  <span class="k">elif</span> <span class="n">defined</span><span class="p">(</span><span class="n">macosx</span><span class="p">):</span>
    <span class="k">discard</span> <span class="n">execShellCmd</span><span class="p">(</span><span class="n">osOpenCmd</span> <span class="o">&amp;</span> <span class="s">&#34; &#34;</span> <span class="o">&amp;</span> <span class="n">quoteShell</span><span class="p">(</span><span class="n">url</span><span class="p">))</span>
  <span class="k">else</span><span class="p">:</span>
    <span class="kd">var</span> <span class="n">u</span> <span class="o">=</span> <span class="n">quoteShell</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">execShellCmd</span><span class="p">(</span><span class="n">osOpenCmd</span> <span class="o">&amp;</span> <span class="s">&#34; &#34;</span> <span class="o">&amp;</span> <span class="n">u</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span> <span class="k">return</span>
    <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="n">getEnv</span><span class="p">(</span><span class="s">&#34;BROWSER&#34;</span><span class="p">).</span><span class="kt">string</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="n">PathSep</span><span class="p">):</span>
      <span class="k">try</span><span class="p">:</span>
        <span class="c"># we use ``startProcess`` here because we don&#39;t want to block!</span>
        <span class="k">discard</span> <span class="n">startProcess</span><span class="p">(</span><span class="n">command</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">args</span> <span class="o">=</span> <span class="o">[</span><span class="n">url</span><span class="o">]</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{</span><span class="n">poUsePath</span><span class="p">})</span>
        <span class="k">return</span>
      <span class="k">except</span> <span class="n">OSError</span><span class="p">:</span>
        <span class="k">discard</span></code></pre></div>
<p>On windows, the attacker controls the <code>lpFile</code> argument to <code>shellExecuteW</code> which may allow opening arbitrary local files.
On MacOs, the attacker controls the first argument to the <code>open</code> command which takes the following command line switches:</p>
<pre><code>Options:
      -a                Opens with the specified application.
      -b                Opens with the specified application bundle identifier.
      -e                Opens with TextEdit.
      -t                Opens with default text editor.
      -f                Reads input from standard input and opens with TextEdit.
      -F  --fresh       Launches the app fresh, that is, without restoring windows. Saved persistent state is lost, excluding Untitled documents.
      -R, --reveal      Selects in the Finder instead of opening.
      -W, --wait-apps   Blocks until the used applications are closed (even if they were already running).
          --args        All remaining arguments are passed in argv to the application&#39;s main() function instead of opened.
      -n, --new         Open a new instance of the application even if one is already running.
      -j, --hide        Launches the app hidden.
      -g, --background  Does not bring the application to the foreground.
      -h, --header      Searches header file locations for headers matching the given filenames, and opens them.
      -s                For -h, the SDK to use; if supplied, only SDKs whose names contain the argument value are searched.
                        Otherwise the highest versioned SDK in each platform is used.</code></pre>
<p>If an attacker manages to pass in an URL that is actually a commandline switche to open, they may be able to launch arbitrary commands (or do whatever open allows them to do with one argument). For example, <code>openDefaultBrowser(&quot;.&quot;)</code> will open Finder in the current working dir, <code>openDefaultBrowser(&quot;-aCalculator&quot;)</code> and <code>openDefaultBrowser(&quot;-bcom.apple.calculator&quot;)</code> launches the calculator.</p>
<h3 id="proof-of-concept">2.2 Proof of Concept</h3>
<p>launch calculator:</p>
<div class="highlight"><pre class="chroma"><code class="language-nim" data-lang="nim"><span class="kn">import</span> <span class="n">browsers</span>
<span class="n">openDefaultBrowser</span><span class="p">(</span><span class="s">&#34;-bcom.apple.calculator&#34;</span><span class="p">)</span> </code></pre></div>
<p>terminate the shell quoting causing an error:</p>
<div class="highlight"><pre class="chroma"><code class="language-nim" data-lang="nim"><span class="kn">import</span> <span class="n">browsers</span>
<span class="kd">var</span> <span class="n">vector</span> <span class="o">=</span> <span class="s">&#34;-bcom.apple.calculator</span><span class="se">\x00</span><span class="s">&#34;</span>
<span class="n">openDefaultBrowser</span><span class="p">(</span><span class="n">vector</span><span class="p">)</span> </code></pre></div><pre><code>⇒  nim c -r -d:ssl test.nim
sh: -c: line 0: unexpected EOF while looking for matching `&#39;&#39;
sh: -c: line 1: syntax error: unexpected end of file</code></pre>
<h3 id="proposed-fix">2.3 Proposed Fix</h3>
<ul>
<li>validate that URL is actually an URL and filter non printable chars or urlencode them</li>
</ul>
<h2 id="vendor-response">3 Vendor Response</h2>
<p>Vendor response: fixed in <a href="https://nim-lang.org/blog/2020/07/30/versions-126-and-108-released.html">v1.2.6</a> (<a href="https://github.com/nim-lang/security/security/advisories/GHSA-p35j-xv9v-7gfg">Official Security Advisory</a>)</p>
<h3 id="timeline">3.1 Timeline</h3>
<pre><code>JUL/09/2020 - contact nim developers @telegram; provided details, PoC
JUL/30/2020 - fixed in new release
MAR/26/2021 - vendor advisory (https://github.com/nim-lang/security/security/advisories/GHSA-p35j-xv9v-7gfg), public disclosure</code></pre>
<h2 id="references">4 References</h2>
<ul>
<li>[1] <a href="https://nim-lang.org/">https://nim-lang.org/</a></li>
<li>[2] <a href="https://nim-lang.org/install.html">https://nim-lang.org/install.html</a></li>
<li>[3] <a href="https://en.wikipedia.org/wiki/Nim_(programming_language">https://en.wikipedia.org/wiki/Nim_(programming_language</a>)</li>
<li>[4] <a href="https://nim-lang.org/blog/2020/07/30/versions-126-and-108-released.html">https://nim-lang.org/blog/2020/07/30/versions-126-and-108-released.html</a></li>
</ul>
</div>
</div>
</article>
</div>
</main>
<footer class="footer">
<div class="dili-contact-block">
<div class="dili-container">
<div class="item-outer">
<div class="item-logo">
<img class="logo" data-cfsrc="/diligence/images/home/icon-ili-xs.png" alt="" style="display:none;visibility:hidden;"><noscript><img class="logo" src="/diligence/images/home/icon-ili-xs.png" alt=""></noscript>
</div>
<div class="item-title">
Request a Security Review Today
</div>
<div class="item-description">
Get in touch with our team to request a quote for a smart contract audit.
</div>
<div class="item-action">
<a class="btn-primary" href="/diligence/contact/">Contact Us</a>
</div>
</div>
</div>
</div>
<form action="" class="dili-newsletter-form-block">
<div class="dili-newsletter-block">
<div class="dili-container">
<div class="dili-newsletter-wrapper">
<div class="dili-menu-side">
<div class="item-logo">
<img class="logo" src="/diligence/images/home/icon-ili-outline-white.svg" alt="">
</div>
<div class="item-menu-list">
<a class="link" href="/diligence/audits/" title="Audits">Audits</a>
<a class="link" href="/diligence/fuzzing/" title="Fuzzing">Fuzzing</a>
<a class="link" href="/diligence/scribble/" title="Scribble">Scribble</a>
<a class="link" href="/diligence/blog/" title="Blog">Blog</a>
<a class="link" href="/diligence/tools/" title="Tools">Tools</a>
<a class="link" href="/diligence/research/" title="Research">Research</a>
<a class="link" href="/diligence/about/" title="About">About</a>
<a class="link" href="/diligence/contact/" title="Contact">Contact</a>
<a class="link" target="_blank" href="https://consensys.net/open-roles/?discipline=32525" title="Careers">Careers</a>
<a class="link" href="/diligence/privacy-policy/" title="Privacy Policy">Privacy Policy</a>
</div>
</div>
<div class="dili-newsletter-form">
<div class="newsletter-title">
Subscribe to Our Newsletter
</div>
<div class="newsletter-description">
Stay up-to-date on our latest offerings, tools, and the world of blockchain security.
</div>
<div class="newsletter-hubspot-wrapper">
<script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2.js"></script>
<script>
                        hbspt.forms.create({
                            portalId: "4795067",
                            formId: "2112c777-481a-4672-8788-9fd6a239e3fe",
                            onFormSubmitted: function () {
                                
                                
                                
                                
                                dataLayer.push({
                                    'event': 'newsletter_signup_form_submitted',
                                });
                            },
                        });
                        </script>
</div>
</div>
</div>
</div>
</div>
</form>
<div class="dili-powered-by">
<a href="https://consensys.net/">
<img class="logo" src="/diligence/images/home/powered-by.svg" alt="">
</a>
</div>
</footer>
<script src="/diligence/js/jquery-3.5.1.min.js"></script>
<script src="/diligence/js/owl.carousel.min.js"></script>
<script src="/diligence/js/clipboard.min.js"></script>
<script src="/diligence/js/autoload.js"></script>
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-P5Z4ZWH"
    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<script>
      $('.expandable .expander').click(function (e) {
        $(this).children().toggle();
        $(this).next('.expandable-content').toggle();
        e.preventDefault();
      });
    </script>
<script>(function(){
      var s=document.createElement('script');
      e = !document.body ? document.querySelector('head'):document.body;
      s.src='https://acsbapp.com/apps/app/dist/js/app.js';
      s.defer=true;
      s.onload=function(){
        acsbJS.init({
          statementLink     : '',
          feedbackLink      : '',
          footerHtml        : '',
          hideMobile        : false,
          hideTrigger       : false,
          language          : 'en',
          position          : 'left',
          leadColor         : '#146ff8',
          triggerColor      : '#2c6fdd',
          triggerRadius     : '50%',
          triggerPositionX  : 'left',
          triggerPositionY  : 'bottom',
          triggerIcon       : 'settings2',
          triggerSize       : 'medium',
          triggerOffsetX    : 20,
          triggerOffsetY    : 20,
          mobile            : {
            triggerSize       : 'small',
            triggerPositionX  : 'left',
            triggerPositionY  : 'bottom',
            triggerOffsetX    : 10,
            triggerOffsetY    : 10,
            triggerRadius     : '50%'
          }
        });
      };
      e.appendChild(s);}());
    </script>
<script type="text/javascript">(function(){window['__CF$cv$params']={r:'6a681c0a9fd261e3',m:'zZObYITFd55PLiuPbIkBWfxNOsaSPrVBJ96Tlc9R23Y-1635633251-0-AXQjNqKit4BQpkR4cy68pETTA22K/TUc+Vb9fslPjyXzZtapUtK7SKLzq3WY2WCumZre9Pa0oibwumV9BcT8QcKPyPryy/Ak0OGIYkh+TaN0DzSADekxQTXOSocbSvXrb4oJuR5kzkYREFdjipQs2s9fcuJ/xRn5LCW9JoGkU9W/qxjXCVo9EyEZMYLrKnlxmA==',s:[0xbe92d38462,0x7c4c1edb79],}})();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js" data-cf-beacon='{"rayId":"6a681c0a9fd261e3","token":"8d85f93baed44309addf389efbd09c5d","version":"2021.10.0","si":100}'></script>
</body>
</html>
