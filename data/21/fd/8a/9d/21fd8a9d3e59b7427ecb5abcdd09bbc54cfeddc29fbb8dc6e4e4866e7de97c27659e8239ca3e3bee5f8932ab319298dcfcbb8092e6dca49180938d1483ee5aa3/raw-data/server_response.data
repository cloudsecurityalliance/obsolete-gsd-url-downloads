<!DOCTYPE html>
<html lang="en">
  <head>
    <title>1743 &ndash; (CVE-2021-28210) Unlimited FV Recursion, round 2</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="data/assets/75609f26e54e89ee3ae27c8744d7baad.css?1532037811" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1532037772"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "1743 – (CVE-2021-28210) Unlimited FV Recursion, round 2",
                             "show_bug.cgi?id=1743" );
        document.title = "1743 – (CVE-2021-28210) Unlimited FV Recursion, round 2";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "1743 – (CVE-2021-28210) Unlimited FV Recursion, round 2", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1532039702"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="TianoCore TianoCore Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugzilla-tianocore-org
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_Tianocore_Security_Issues
                 bz_component_Security_Issue
                 bz_bug_1743 yui-skin-sam">

  <div id="header"><div id="banner">
  </div>

    <div id="titles">
      <span id="title">TianoCore Bugzilla &ndash; Bug&nbsp;1743</span>

        <span id="subtitle" class="subheader">Unlimited FV Recursion, round 2</span>

        <span id="information" class="header_addl_info">Last modified: 2021-03-12 16:53:38 EST</span>
    </div>


    <div id="common_links"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=1743&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=1743" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
      <input type="checkbox" id="Bugzilla_remember_top" 
             name="Bugzilla_remember" value="on" class="bz_remember"
             >
      <label for="Bugzilla_remember_top">Remember</label>
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=1743&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635630771-Fk0SoLv-akB0n8Rq8J1-BubUsrNX4XsGZx6suHDY2hw">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2021-03-12 16:53:38">
  <input type="hidden" name="id" value="1743">
  <input type="hidden" name="token" value="1635630771-9MYKYhWJRBZ8C5ZCeTrs5bRFC7uLT_57o1rAzZYgHC8">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=1743"><b>Bug&nbsp;1743</b></a> <span id="summary_container" class="bz_default_hidden">
        (<span id="alias_nonedit_display">CVE-2021-28210</span>)
      - <span id="short_desc_nonedit_display">Unlimited FV Recursion, round 2</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>Unlimited FV Recursion, round 2
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'Unlimited FV Recursion, round 2' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>CVE-2021-28210
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Tianocore Security Issues

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Tianocore Security Issues"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >Security Issue

  (<a href="buglist.cgi?component=Security%20Issue&amp;product=Tianocore%20Security%20Issues&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>Current
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">All
        All
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>Lowest
       normal
      </td>
    </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'unassigned\x40tianocore.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>


    <tr><th class="field_label "
    id="field_label_keywords">


  <a 
      title="You can add keywords from a defined list to bugs, in order to easily identify and group them."
      class="field_help_link"
      href="describekeywords.cgi"
  >Keywords:</a>

</th>
  <td class="field_value "
      id="field_container_keywords" >

</td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2019-04-23 13:04 EDT by <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2021-03-12 16:53 EST
      (<a href="show_activity.cgi?id=1743">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>12 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="bret.barkelew">bret.barkelew</option>
                <option value="dandan.bi">dandan.bi</option>
                <option value="ericj">ericj</option>
                <option value="gaoliming">gaoliming</option>
                <option value="gsuckevi">gsuckevi</option>
                <option value="hao.a.wu">hao.a.wu</option>
                <option value="jian.j.wang">jian.j.wang</option>
                <option value="kevinj">kevinj</option>
                <option value="lersek">lersek</option>
                <option value="philmd">philmd</option>
                <option value="rschiron">rschiron</option>
                <option value="vincent.zimmer">vincent.zimmer</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" ><ul class="bug_urls">
          <li><a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED DUPLICATE - Unlimited FV Recursion"
   href="show_bug.cgi?id=1137">CVE-2018-12183</a>
          </li></ul>

</td>
    </tr> 
<tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_industrystandardspecifications">


  <a 
      title="A custom Drop Down field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_industrystandardspecifications"
  >EDK II Code First industry standard specifications:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_industrystandardspecifications" >---

</td>
    </tr>
    <tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_branch">


  <a 
      title="Which github repository?"
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_branch"
  >Branch URL:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_branch" >

</td>
    </tr>
    <tr>
      <th class="field_label "
    id="field_label_cf_release_observed">


  <a 
      title="Release(s) the issue is observed"
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_release_observed"
  >Release(s) the issue is observed:</a>

</th>
  <td class="field_value "
      id="field_container_cf_release_observed" >edk2-stable202008

</td>
    </tr>
    <tr>
      <th class="field_label "
    id="field_label_cf_target_os">


  <a 
      title="The operating system the target platform is running when the issue is observed. If the issue is observed before an OS is booted, then use default '---'. Provide the detailed OS version information in the Description."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_target_os"
  >The OS the target platform is running:</a>

</th>
  <td class="field_value "
      id="field_container_cf_target_os" >---

</td>
    </tr>
    <tr>
      <th class="field_label "
    id="field_label_cf_package">


  <a 
      title="A custom Multiple-Selection Box field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_package"
  >Package:</a>

</th>
  <td class="field_value "
      id="field_container_cf_package" >MdeModulePkg

</td>
    </tr>
    <tr>
      <th class="field_label "
    id="field_label_cf_releases_to_fix">


  <a 
      title="Release(s) the issues must be fixed"
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_releases_to_fix"
  >Release(s) the issues must be fixed:</a>

</th>
  <td class="field_value "
      id="field_container_cf_releases_to_fix" >edk2-stable202011

</td>
    </tr>
    <tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_documents">


  <a 
      title="A custom Multiple-Selection Box field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_documents"
  >Tianocore documents:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_documents" >

</td>
    </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_application_zip bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=563"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">[PATCH 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section recursion</span></b></a>

          <span class="bz_attach_extra_info">
              (5.44 KB,
                application/zip)

            <br>
            <a href="#attach_563"
               title="Go to the comment associated with the attachment">2020-09-28 11:38 EDT</a>,

            <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=563&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_text_plain">
        <td>
            <a href="attachment.cgi?id=565"
               title="View the content of the attachment">
          <b>TestCase on OVMF</b></a>

          <span class="bz_attach_extra_info">
              (3.50 KB,
                text/plain)

            <br>
            <a href="#attach_565"
               title="Go to the comment associated with the attachment">2020-09-28 22:19 EDT</a>,

            <span class="vcard">gaoliming
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=565&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a3" class="bz_contenttype_application_zip">
        <td>
            <a href="attachment.cgi?id=566"
               title="View the content of the attachment">
          <b>[PATCH v2 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section recursion</b></a>

          <span class="bz_attach_extra_info">
              (5.54 KB,
                application/zip)

            <br>
            <a href="#attach_566"
               title="Go to the comment associated with the attachment">2020-09-29 14:44 EDT</a>,

            <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=566&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a4" class="bz_contenttype_application_json bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=657"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">CVE .json file</span></b></a>

          <span class="bz_attach_extra_info">
              (902 bytes,
                application/json)

            <br>
            <a href="#attach_657"
               title="Go to the comment associated with the attachment">2021-03-03 11:44 EST</a>,

            <span class="vcard">kevinj
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=657&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a5" class="bz_contenttype_application_json">
        <td>
            <a href="attachment.cgi?id=665"
               title="View the content of the attachment">
          <b>CVE .json file_2</b></a>

          <span class="bz_attach_extra_info">
              (911 bytes,
                application/json)

            <br>
            <a href="#attach_665"
               title="Go to the comment associated with the attachment">2021-03-04 13:41 EST</a>,

            <span class="vcard">kevinj
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=665&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
            <a href="#a0" onclick="return toggle_display(this);">Show
              Obsolete</a> (2)
        </span>
        <a href="attachment.cgi?bugid=1743&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=1743&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1458056812" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-04-23 13:04:25 EDT
        </span>

      </div>




<pre class="bz_comment_text">In &lt;<a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED DUPLICATE - Unlimited FV Recursion"
   href="show_bug.cgi?id=1137#c6">https://bugzilla.tianocore.org/show_bug.cgi?id=1137#c6</a>&gt;, I asked two
questions about the unlimited FV parsing recursion in the PEI Core. That
was two weeks ago and I haven't received an answer.

In summary, I made two points:

(1) The PEI Core issue was real, but it was limited, in practice, to
    platforms that allowed firmware updates from the &quot;inside&quot;. IOW, if a
    platform doesn't allow a platform user to expose the PEI Core to
    arbitrary Firmware Volume Descriptor HOBs, then the platform isn't
    vulnerable (the unbounded recursion in the PEI Core cannot be
    triggered by firmware volumes crafted by the attacker).

(2) Even on platforms where the PEI Core is indeed exposed, the PEI
    Stack Guard feature (<a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - Support stack guard for post-memory PEI drivers"
   href="show_bug.cgi?id=1126">bug 1126</a>) is an unfit solution to the problem.
    The recursion depth in the PEI phase parsing should be tracked
    explicitly, and limited by a platform-specific constant (PCD).

I didn't receive a confirmation for (1), and I received no opinions on
(2).


Now, in addition to the above (still open, but public) questions, I have
another (not public, ATM) question too. In my opinion, the same
unbounded recursion exists in the DXE Core as well, except with more
serious exposure:

(a) The DXE Core sets up a protocol notify function in its entry point,
    for instances of the Firmware Volume Block2 Protocol:

      DxeMain()           [MdeModulePkg/Core/Dxe/DxeMain/DxeMain.c]
        FwVolDriverInit() [MdeModulePkg/Core/Dxe/FwVol/FwVol.c]

(b) Assume that a 3rd party UEFI driver or application installs an FVB
    instance, with crafted contents. The notification function runs:

      NotifyFwVolBlock() [MdeModulePkg/Core/Dxe/FwVol/FwVol.c]

    installing an instance of the Firmware Volume 2 Protocol on the
    handle.

(c) The EFI_FIRMWARE_VOLUME2_PROTOCOL.ReadSection() member performs &quot;a
    depth-first, left-to-right search algorithm through all sections
    found in the specified file&quot; (quoting the PI spec), as follows:

      FvReadFileSection()   [MdeModulePkg/Core/Dxe/FwVol/FwVolRead.c]
        GetSection()        [MdeModulePkg/Core/Dxe/SectionExtraction/CoreSectionExtraction.c]
          FindChildNode()   [MdeModulePkg/Core/Dxe/SectionExtraction/CoreSectionExtraction.c]
            FindChildNode() // recursive call

    FindChildNode() is called recursively for encapsulation sections.

Therefore my new question is:

(3) Can you please confirm that the above issue is a vulnerability that
    is similar in impact to (or worse than) <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED DUPLICATE - Unlimited FV Recursion"
   href="show_bug.cgi?id=1137">bug 1137</a>?

    If so, I suggest that we fix it with the &quot;explicit recursion limit&quot;
    approach that I suggested under (2).

(In the PI spec v1.7, Vol 3, section &quot;2.1.5 Firmware File Sections&quot;
says,

&quot;The file image itself can be thought of as the root and may contain
an arbitrary number of sections&quot;.

That is, the depth is unlimited per spec, so in edk2 a non-recursive
(=iterative) traversal would be safer. Still, for a simpler fix, an
explicit maximum depth should be OK. EFI_OUT_OF_RESOURCES would be a
suitable &amp; compliant return value.)

Unlike <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED DUPLICATE - Unlimited FV Recursion"
   href="show_bug.cgi?id=1137">bug 1137</a>, the present report applies to ArmVirtPkg and OvmfPkg
platforms.

Thanks!</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Vincent Zimmer</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-05-29 12:55:11 EDT
        </span>

      </div>




<pre class="bz_comment_text">5/29/19 tiano infosec scrub - jian to look at this.  synch w/ owner who addressed pei variant</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Bret Barkelew</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-06-25 16:45:54 EDT
        </span>

      </div>




<pre class="bz_comment_text">If an iterative traversal would be safer, would it be better to aim for that rather than an arbitrary limit?

Also, is there merit in just shutting down the notification prior to 3rd party code, or do we expect that an intended behavior is that 3rd party code can publish FVs. I would argue that that’s a corner case, at best.</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-06-26 05:45:41 EDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Bret Barkelew from <a href="show_bug.cgi?id=1743#c2">comment #2</a>)
<span class="quote">&gt; If an iterative traversal would be safer, would it be better to aim for that
&gt; rather than an arbitrary limit?</span >

This is up to the module owner(s) -- personally I think the iterative traversal would bring too little benefit in comparison to the complexity of the patch(es).

Maybe a far-fetched example, but, on a POSIX system, open() can fail with -1/ELOOP if a symbolic link loop is encountered during pathname resolution. However, an actual loop may not be determined in the chain, it may be enough if the system *assumes* a loop, based on the number of symbolic links seen (SYMLOOP_MAX).

<a href="http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/limits.h.html">http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/limits.h.html</a>
<a href="http://pubs.opengroup.org/onlinepubs/9699919799/functions/openat.html">http://pubs.opengroup.org/onlinepubs/9699919799/functions/openat.html</a>

<span class="quote">&gt; Also, is there merit in just shutting down the notification prior to 3rd
&gt; party code, or do we expect that an intended behavior is that 3rd party code
&gt; can publish FVs. I would argue that that’s a corner case, at best.</span >

I think I agree. It seems reasonable to disable the FVB protocol notify at End-of-Dxe.

(Currently, FwVolDriverInit() calls EfiCreateProtocolNotifyEvent() to establish the FVB protocol notify. EfiCreateProtocolNotifyEvent() does not output the event created for this, so other parts of the code couldn't call CloseEvent() on that event, at the moment, in order to shut down the notify.)</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-08-09 09:44:07 EDT
        </span>

      </div>




<pre class="bz_comment_text">Setting need_info on Jian, per <a href="show_bug.cgi?id=1743#c1">comment 1</a>.</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Bret Barkelew</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-04-01 12:35:57 EDT
        </span>

      </div>




<pre class="bz_comment_text">Laszlo (sorry for the ~9 month delay in response),

I'm good with your explanation of the recursion limit.

If we're both happy with shutting down the notification, should we have two patches: a primary that shuts down the notification at EoD and a second that places a limit (as a safety net in case some platform elects to preserve the notification)?</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-04-01 17:01:05 EDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Bret Barkelew from <a href="show_bug.cgi?id=1743#c5">comment #5</a>)

<span class="quote">&gt; If we're both happy with shutting down the notification, should we have two
&gt; patches: a primary that shuts down the notification at EoD and a second that
&gt; places a limit (as a safety net in case some platform elects to preserve the
&gt; notification)?</span >

Sounds good to me, thank you!</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Vincent Zimmer</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-05-06 11:18:38 EDT
        </span>

      </div>




<pre class="bz_comment_text">discussed in 4/1/20 infosec meeting

need more info

no patch

leave in 'unconfirmed'

dxe verification logic uses existence of the FVB to make some policy decisions.  

As such, ability to publish is an important security boundary.
This would benefit from some renewed attention.

Next step is to poke the maintainers (start w/ Liming) on this area to read in on the issue.

Least-privilege approach of not being able to publish the fvb post end-of-dxe is a good clean-up.</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Vincent Zimmer</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-05-06 11:38:29 EDT
        </span>

      </div>




<pre class="bz_comment_text">await liming feedback</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-25 11:01:16 EDT
        </span>

      </div>




<pre class="bz_comment_text">Liming -- can you please comment?</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-25 11:03:21 EDT
        </span>

      </div>




<pre class="bz_comment_text">Also I think we'll need a new CVE number for this.</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">gaoliming
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-27 00:42:44 EDT
        </span>

      </div>




<pre class="bz_comment_text">PI spec vol 2 Section 7.3 Dispatcher Services provides DXE service: Dispatch() and  ProcessFirmwareVolumn(). They can be used after end of DXE. If the notification even shutdonw on end of DXE, gDS-&gt;ProcessFirmwareVolumn() will not work any more. And, per BZ 1126, stack guard is ready in UEFI/SMM. So, I think this issue can also be handled by stack guard.</pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-28 08:58:04 EDT
        </span>

      </div>




<pre class="bz_comment_text">Hi Liming,

PcdCpuStackGuard defaults to FALSE, and the relevant commit message suggests enabling it only conditionally:

commit 448d014b7359b92404653a4da3c63abe4d2389a5
Author: Jian J Wang &lt;<a href="mailto:jian.j.wang&#64;intel.com">jian.j.wang&#64;intel.com</a>&gt;
Date:   Thu Oct 12 12:28:47 2017 +0800

    MdeModulePkg/metafile: Add PCD PcdCpuStackGuard
    
    PcdCpuStackGuard is introduced to enable/disable Stack Guard feature.
    Its value is FALSE by default. This feature is suggested to be enabled
    only if the cpu driver and CpuExceptionHandlerLib have supported stack
    switch for the processor used in platform. Otherwise the exception dump
    message won't be printed out when there's a stack overflow happened.

Furthermore, even if the stack guard were technically capable of catching this issue, it's still not graceful behavior.</pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-28 11:38:22 EDT
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=563" name="attach_563" title="[PATCH 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section recursion">attachment 563</a> <a href="attachment.cgi?id=563&amp;action=edit" title="[PATCH 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section recursion">[details]</a></span>
[PATCH 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section recursion

Proposed patch set. Applies on top of commit 1d058c3e86b0 (&quot;IntelFsp2Pkg GenCfgOpt.py: Initialize IncLines as empty list&quot;, 2020-09-25).</pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-28 11:41:49 EDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Laszlo Ersek from <a href="show_bug.cgi?id=1743#c13">comment #13</a>)
<span class="quote">&gt; Created <span class="bz_obsolete"><a href="attachment.cgi?id=563" name="attach_563" title="[PATCH 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section recursion">attachment 563</a> <a href="attachment.cgi?id=563&amp;action=edit" title="[PATCH 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section recursion">[details]</a></span>
&gt; [PATCH 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section
&gt; recursion
&gt; 
&gt; Proposed patch set. Applies on top of commit 1d058c3e86b0 (&quot;IntelFsp2Pkg
&gt; GenCfgOpt.py: Initialize IncLines as empty list&quot;, 2020-09-25).</span >

Cc: Dandan Bi &lt;<a href="mailto:dandan.bi&#64;intel.com">dandan.bi&#64;intel.com</a>&gt;
Cc: Hao A Wu &lt;<a href="mailto:hao.a.wu&#64;intel.com">hao.a.wu&#64;intel.com</a>&gt;
Cc: Jian J Wang &lt;<a href="mailto:jian.j.wang&#64;intel.com">jian.j.wang&#64;intel.com</a>&gt;
Cc: Liming Gao &lt;<a href="mailto:gaoliming&#64;byosoft.com.cn">gaoliming&#64;byosoft.com.cn</a>&gt;
Cc: Philippe Mathieu-Daudé &lt;<a href="mailto:philmd&#64;redhat.com">philmd&#64;redhat.com</a>&gt;

Please review.

Note: I have only build-tested this patch series. I don't even have a reproducer that leads to the execution of FvReadFileSection() [MdeModulePkg/Core/Dxe/FwVol/FwVolRead.c].

If someone can help with an FDF file and/or maybe a UEFI application that leads to the traversal of nested sections, that would be appreciated too.

Thanks.</pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">gaoliming
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-28 22:19:49 EDT
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=565" name="attach_565" title="TestCase on OVMF">attachment 565</a> <a href="attachment.cgi?id=565&amp;action=edit" title="TestCase on OVMF">[details]</a></span>
TestCase on OVMF</pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">gaoliming
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-28 22:22:44 EDT
        </span>

      </div>




<pre class="bz_comment_text">Attach the test case on OVMF platform. It can be used to verify this patch. 

For this patch, I suggest to update PcdFwVolDxeMaxEncapsulationDepth default value to a bigger value, such as 0x10. The real case may meet with the depth of 8.</pre>
    </div>

    <div id="c17" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-29 12:54:32 EDT
        </span>

      </div>




<pre class="bz_comment_text">Awesome; thank you, Liming for the tester!</pre>
    </div>

    <div id="c18" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-29 13:53:01 EDT
        </span>

      </div>




<pre class="bz_comment_text">After implementing the update Liming is suggesting in <a href="show_bug.cgi?id=1743#c16">comment 16</a> (= DEC default of the PCD should be 0x10), the reproducer from <a href="show_bug.cgi?id=1743#c15">comment 15</a> reports success:

<span class="quote">&gt;| FS0:\&gt; HelloWorld.efi
&gt;| UEFI Hello World!
&gt;| FS0:\&gt; echo %lasterror%
&gt;| 0x0</span >

In order to test the limit, rebuild Ovmf IA32X64 with the following flag:

--pcd gEfiMdeModulePkgTokenSpaceGuid.PcdFwVolDxeMaxEncapsulationDepth=8

(note that the test application need not be rebuilt). Then the output is:

<span class="quote">&gt;| FS0:\&gt; HelloWorld.efi
&gt;| UEFI Hello World!
&gt;| FS0:\&gt; echo %lasterror%
&gt;| 0xE</span >

where 0xE stands for EFI_NOT_FOUND from GetSectionFromAnyFv(). Additionally, the firmware log contains

<span class="quote">&gt;| GetSection: recursion aborted due to nesting depth</span ></pre>
    </div>

    <div id="c19" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-29 14:44:53 EDT
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=566" name="attach_566" title="[PATCH v2 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section recursion">attachment 566</a> <a href="attachment.cgi?id=566&amp;action=edit" title="[PATCH v2 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section recursion">[details]</a></span>
[PATCH v2 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section recursion

Proposed v2 patch set, addressing Liming's feedback from <a href="show_bug.cgi?id=1743#c16">comment 16</a>.

See the v1-&gt;v2 changes in the patch files (in the Notes sections).

Applies on top of commit 52dbaaeace64 (&quot;CryptoPkg/BaseCryptLib: add crypto algorithms needed by variable protection&quot;, 2020-09-29).</pre>
    </div>

    <div id="c20" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">gaoliming
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-09-29 20:41:43 EDT
        </span>

      </div>




<pre class="bz_comment_text">This version is good to me. Reviewed-by: Liming Gao &lt;<a href="mailto:gaoliming&#64;byosoft.com.cn">gaoliming&#64;byosoft.com.cn</a>&gt;</pre>
    </div>

    <div id="c21" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-10-01 03:42:33 EDT
        </span>

      </div>




<pre class="bz_comment_text">Thank you, Liming! I'm going to ping edk2-infosec about the next steps.</pre>
    </div>

    <div id="c22" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Philippe Mathieu-Daudé</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-10-01 07:15:53 EDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Laszlo Ersek from <a href="show_bug.cgi?id=1743#c21">comment #21</a>)

In patch #1:

   &#64;param  SectionInstance        Indicates which instance of section to find.
                                  This is an in/out parameter and it is 1-based,
                                  to deal with recursions.

it was not easy to me to understand the &quot;it is 1-based&quot;.
Suggestion for something clearer (but probably English incorrect):

                                 This is an in/out parameter to deal with
                                 recursions, which depth base is 1.

Anyway the rest is OK, thanks for fixing this issue.

To both patches:
Reviewed-by: Philippe Mathieu-Daude &lt;<a href="mailto:philmd&#64;redhat.com">philmd&#64;redhat.com</a>&gt;</pre>
    </div>

    <div id="c23" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-10-02 03:40:15 EDT
        </span>

      </div>




<pre class="bz_comment_text">Hi Phil,

thanks for the review.

I feel that &quot;1-based&quot; is pretty clear; it means that the depth is given
after being added to 1 as a basis. So if you are looking for a
particular SectionInstance per
EFI_FIRMWARE_VOLUME2_PROTOCOL.ReadSection() interface contract, which is
zero-based, then you need to rebase the section index to 1 -- that is,
add 1.

This is quite standard language in both the PI spec, and the edk2
codebase.

From the PI v1.7 specification, regarding
EFI_FIRMWARE_VOLUME2_PROTOCOL.ReadSection():

<span class="quote">&gt;|   SectionInstance
&gt;|
&gt;|     Indicates which instance of sections with a type of SectionType
&gt;|     to return. SectionType in conjunction with SectionInstance
&gt;|     indicates which section to return. SectionInstance is zero based.</span >

The same is repeated in the corresponding header file
&quot;MdePkg/Include/Protocol/FirmwareVolume2.h&quot;:

<span class="quote">&gt;|   &#64;param SectionInstance      Indicates which instance of sections
&gt;|                               with a type of SectionType to return.
&gt;|                               SectionType in conjunction with
&gt;|                               SectionInstance indicates which
&gt;|                               section to return. SectionInstance is
&gt;|                               zero based.</span >

Both the &quot;0-based&quot; and &quot;1-based&quot; expressions are used multiple times in
edk2:

<span class="quote">&gt;| $ git grep -c '0-based'
&gt;| MdeModulePkg/Bus/Pci/NvmExpressDxe/NvmExpress.h:6
&gt;| MdeModulePkg/Bus/Pci/NvmExpressPei/NvmExpressPei.h:4
&gt;| MdeModulePkg/Bus/Pci/NvmExpressPei/NvmExpressPeiHci.c:1
&gt;| MdeModulePkg/Bus/Pci/NvmExpressPei/NvmExpressPeiHci.h:1
&gt;| MdePkg/Include/Library/UefiLib.h:1
&gt;| MdePkg/Include/Protocol/MmSwDispatch.h:1
&gt;| MdePkg/Include/Protocol/SmmSwDispatch2.h:1
&gt;| MdePkg/Library/UefiLib/UefiNotTiano.c:1
&gt;| NetworkPkg/HttpBootDxe/HttpBootDxe.h:2
&gt;| NetworkPkg/UefiPxeBcDxe/PxeBcImpl.h:2
&gt;| OvmfPkg/Csm/Include/Protocol/LegacyBios.h:1
&gt;| OvmfPkg/Csm/LegacyBiosDxe/LegacyBiosInterface.h:1
&gt;| OvmfPkg/Csm/LegacyBiosDxe/LegacyBootSupport.c:1
&gt;| OvmfPkg/Library/QemuBootOrderLib/QemuBootOrderLib.c:1
&gt;| SecurityPkg/HddPassword/HddPasswordDxe.c:1</span >

(25 total)

<span class="quote">&gt;| $ git grep -c '1-based'
&gt;| BaseTools/Source/C/Include/Common/MdeModuleHii.h:1
&gt;| MdeModulePkg/Bus/Usb/UsbBusDxe/UsbEnumer.c:1
&gt;| MdeModulePkg/Include/Guid/MdeModuleHii.h:1
&gt;| MdeModulePkg/Universal/SetupBrowserDxe/Setup.h:1
&gt;| NetworkPkg/HttpBootDxe/HttpBootDxe.h:1
&gt;| NetworkPkg/UefiPxeBcDxe/PxeBcImpl.h:1
&gt;| OvmfPkg/Csm/Include/Framework/FrameworkInternalFormRepresentation.h:1
&gt;| OvmfPkg/Library/QemuBootOrderLib/QemuBootOrderLib.c:1</span >

(8 total, without the attached patch applied)

I'm OK to replace the comment, but then please propose something that I
can take verbatim. Personally I think the current patch is sufficiently
clear; if an improvement is preferred, please offer something that needs
no further corrections (grammatical or otherwise) on top. Thanks!</pre>
    </div>

    <div id="c24" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c24">Comment 24</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Philippe Mathieu-Daudé</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-10-02 04:33:32 EDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Laszlo Ersek from <a href="show_bug.cgi?id=1743#c23">comment #23</a>)
[...]
<span class="quote">&gt; 
&gt; This is quite standard language in both the PI spec, and the edk2
&gt; codebase.</span >
[...]
<span class="quote">&gt; 
&gt; I'm OK to replace the comment, but then please propose something that I
&gt; can take verbatim. Personally I think the current patch is sufficiently
&gt; clear; if an improvement is preferred, please offer something that needs
&gt; no further corrections (grammatical or otherwise) on top. Thanks!</span >

Thanks for enlightening me. I now agree the current patch is sufficiently clear.
No need to update your patch, thanks.</pre>
    </div>

    <div id="c25" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c25">Comment 25</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-10-02 04:51:12 EDT
        </span>

      </div>




<pre class="bz_comment_text">Thank you!</pre>
    </div>

    <div id="c26" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c26">Comment 26</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-11-12 12:16:51 EST
        </span>

      </div>




<pre class="bz_comment_text">PROPOSED PUBLIC DATE (opening up the BZ and posting the patch to edk2-devel):

  Thursday 2020-Nov-19 07:00 UTC

in order to get the fix into edk2-stable202011.</pre>
    </div>

    <div id="c27" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c27">Comment 27</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Bret Barkelew</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-11-12 12:59:03 EST
        </span>

      </div>




<pre class="bz_comment_text"><a href="https://media.giphy.com/media/xT8qB3utUzMWqmpH20/source.gif">https://media.giphy.com/media/xT8qB3utUzMWqmpH20/source.gif</a></pre>
    </div>

    <div id="c28" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c28">Comment 28</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Riccardo Schirone</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-11-13 06:12:33 EST
        </span>

      </div>




<pre class="bz_comment_text">Is this going to have a CVE before it goes public?</pre>
    </div>

    <div id="c29" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c29">Comment 29</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-11-13 15:19:48 EST
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Riccardo Schirone from <a href="show_bug.cgi?id=1743#c28">comment #28</a>)
<span class="quote">&gt; Is this going to have a CVE before it goes public?</span >

CC'ing Eric.</pre>
    </div>

    <div id="c30" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c30">Comment 30</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-11-19 05:56:07 EST
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Laszlo Ersek from <a href="show_bug.cgi?id=1743#c19">comment #19</a>)
<span class="quote">&gt; Created <span class=""><a href="attachment.cgi?id=566" name="attach_566" title="[PATCH v2 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section recursion">attachment 566</a> <a href="attachment.cgi?id=566&amp;action=edit" title="[PATCH v2 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section recursion">[details]</a></span>
&gt; [PATCH v2 0/2] MdeModulePkg/Core/Dxe: limit FwVol encapsulation section
&gt; recursion
&gt; 
&gt; Proposed v2 patch set, addressing Liming's feedback from <a href="show_bug.cgi?id=1743#c16">comment 16</a>.
&gt; 
&gt; See the v1-&gt;v2 changes in the patch files (in the Notes sections).
&gt; 
&gt; Applies on top of commit 52dbaaeace64 (&quot;CryptoPkg/BaseCryptLib: add crypto
&gt; algorithms needed by variable protection&quot;, 2020-09-29).</span >

Public posting:

* [edk2-devel] [PATCH v2 RESEND 0/2]
  security fix: unlimited FV recursion, round 2 (DXE Core)

msgid &lt;<a href="mailto:20201119105340.16225-1-lersek&#64;redhat.com">20201119105340.16225-1-lersek&#64;redhat.com</a>&gt;
<a href="https://edk2.groups.io/g/devel/message/67707">https://edk2.groups.io/g/devel/message/67707</a>
<a href="https://www.redhat.com/archives/edk2-devel-archive/2020-November/msg00865.html">https://www.redhat.com/archives/edk2-devel-archive/2020-November/msg00865.html</a></pre>
    </div>

    <div id="c31" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c31">Comment 31</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2020-11-20 20:43:28 EST
        </span>

      </div>




<pre class="bz_comment_text">Merged as commit range 6c8dd15c4ae4..47343af30435, via &lt;<a href="https://github.com/tianocore/edk2/pull/1137">https://github.com/tianocore/edk2/pull/1137</a>&gt;.</pre>
    </div>

    <div id="c32" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c32">Comment 32</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">kevinj
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-03 11:44:53 EST
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=657" name="attach_657" title="CVE .json file">attachment 657</a> <a href="attachment.cgi?id=657&amp;action=edit" title="CVE .json file">[details]</a></span>
CVE .json file

I have attached the .json file for CVE classification. Please review and provide feedback.</pre>
    </div>

    <div id="c33" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c33">Comment 33</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-03 12:04:33 EST
        </span>

      </div>




<pre class="bz_comment_text">$ git tag --contains 47343af30435
edk2-stable202011

Thus:

last vulnerable release: edk2-stable202008
first fixed release:     edk2-stable202011</pre>
    </div>

    <div id="c34" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c34">Comment 34</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-03 12:07:39 EST
        </span>

      </div>




<pre class="bz_comment_text">CWE-674 looks like a precise match for this issue.</pre>
    </div>

    <div id="c35" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c35">Comment 35</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">kevinj
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-04 13:41:18 EST
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=665" name="attach_665" title="CVE .json file_2">attachment 665</a> <a href="attachment.cgi?id=665&amp;action=edit" title="CVE .json file_2">[details]</a></span>
CVE .json file_2

Thank you Laszlo for your feedback. I have updated the version in the .json file and re-uploaded it.</pre>
    </div>

    <div id="c36" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c36">Comment 36</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-12 16:01:54 EST
        </span>

      </div>




<pre class="bz_comment_text">Thanks for the CVE number, Kevin!</pre>
    </div>

    <div id="c37" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c37">Comment 37</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard">kevinj
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-12 16:04:04 EST
        </span>

      </div>




<pre class="bz_comment_text">Laszlo,

Please review the .json file again, especially the version this bug is observed in and inform me when you plan to publicly disclose this bug, so we know when to submit this CVE back to MITRE. Thank you!</pre>
    </div>

    <div id="c38" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1743#c38">Comment 38</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laszlo Ersek</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2021-03-12 16:53:38 EST
        </span>

      </div>




<pre class="bz_comment_text">Hi Kevin,

(1) The JSON file names edk2-stable202008 (twice), which is indeed the last vulnerable release, per my <a href="show_bug.cgi?id=1743#c33">comment 33</a>. So that looks OK.

(2) The issue has been disclosed publicly a while ago, please see <a href="show_bug.cgi?id=1743#c26">comment 26</a> and <a href="show_bug.cgi?id=1743#c30">comment 30</a> -- posting the upstream patch qualifies as public disclosure. It happened on November 19, 2020. If anything administrative depends on the public disclosure, it should not be delayed.

Thanks!
Laszlo</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=1743">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=1743">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=1743">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=1743&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=1743" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
      <input type="checkbox" id="Bugzilla_remember_bottom" 
             name="Bugzilla_remember" value="on" class="bz_remember"
             >
      <label for="Bugzilla_remember_bottom">Remember</label>
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=1743&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635630771-Fk0SoLv-akB0n8Rq8J1-BubUsrNX4XsGZx6suHDY2hw">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>