<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>RFID: Monotonic Counter Anti-Tearing Defeated</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="Fred Raynal">


    <!-- Le styles -->
    <link rel="stylesheet" href="./theme/css/bootstrap.min.css" type="text/css" />
    <style type="text/css">
      body {
        padding-top: 60px;
        padding-bottom: 40px;
      }
      .sidebar-nav {
        padding: 9px 0;
      }
      .tag-1 {
        font-size: 13pt;
      }
      .tag-2 {
        font-size: 10pt;
      }
      .tag-2 {
        font-size: 8pt;
      }
      .tag-4 {
        font-size: 6pt;
      }
    </style>
    <link href="./theme/css/bootstrap-responsive.min.css" rel="stylesheet">
    <link href="./theme/css/font-awesome.css" rel="stylesheet">

    <link href="./theme/css/pygments.css" rel="stylesheet">

    <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
    <script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    <link rel="shortcut icon" href="./theme/img/favicon.ico">
    <link rel="apple-touch-icon" href="./theme/img/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="72x72" href="./theme/img/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="114x114" href="./theme/img/apple-touch-icon-114x114.png">

    <link href="./" type="application/atom+xml" rel="alternate" title="Quarkslab's blog ATOM Feed" />

  </head>

  <body>

    <div class="navbar navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container-fluid">
          <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </a>
          <a class="brand" href="./index.html">Quarkslab's blog </a>
          <div class="nav-collapse">
            <ul class="nav">
              <li class="divider-vertical"></li>
                  <li >
                    <a href="./category/android.html">
                      <i class="icon-folder-open icon-large"></i>Android
                    </a>
                  </li>
                  <li >
                    <a href="./category/android-reverseengineering.html">
                      <i class="icon-folder-open icon-large"></i>Android, ReverseEngineering
                    </a>
                  </li>
                  <li >
                    <a href="./category/challenge.html">
                      <i class="icon-folder-open icon-large"></i>Challenge
                    </a>
                  </li>
                  <li >
                    <a href="./category/cryptography.html">
                      <i class="icon-folder-open icon-large"></i>Cryptography
                    </a>
                  </li>
                  <li >
                    <a href="./category/development.html">
                      <i class="icon-folder-open icon-large"></i>Development
                    </a>
                  </li>
                  <li >
                    <a href="./category/exploitation.html">
                      <i class="icon-folder-open icon-large"></i>Exploitation
                    </a>
                  </li>
                  <li >
                    <a href="./category/fuzzing.html">
                      <i class="icon-folder-open icon-large"></i>Fuzzing
                    </a>
                  </li>

              <ul class="nav pull-right">
                <li><a href="./archives.html"><i class="icon-th-list"></i>Archives</a></li>
              </ul>

            </ul>
            <!--<p class="navbar-text pull-right">Logged in as <a href="#">username</a></p>-->
          </div><!--/.nav-collapse -->
        </div>
      </div>
    </div>

    <div class="container-fluid">
      <div class="row">

        <div class="span3 well sidebar-nav" id="sidebar">
<style>
  .quarkslab__block {
      padding: 3px 22px; margin: 5px 0 5px;
  }
  .quarkslab__link {
      font-weight: bold; color:rgb(43, 47, 102);
      font-size: 16px
  }
  .quarkslab__link:hover{
      color: rgb(43 47 102 / 74%);
      text-decoration: none;
  }
</style>
<div class="quarkslab__block">
  <a class="quarkslab__link" href="https://quarkslab.com" target="_blank">Quarkslab&#39;s website</a>
</div><ul class="nav nav-list">
<li class="nav-header"><h4><i class="icon-home icon-large"></i> social</h4></li>
<li><a href="./feeds/all.rss.xml" rel="alternate"><i class="icon-bookmark icon-large"></i>atom feed</a></li>
    <li><a href="https://twitter.com/quarkslab"><i class="icon-twitter-sign icon-large"></i>twitter</a></li>
    <li><a href="https://github.com/quarkslab"><i class="icon-github-sign icon-large"></i>github</a></li>

<li class="nav-header"><h4><i class="icon-folder-close icon-large"></i>Categories</h4></li>
<li>
<a href="./category/android.html">
    <i class="icon-folder-open icon-large"></i>Android
</a>
</li>
<li>
<a href="./category/android-reverseengineering.html">
    <i class="icon-folder-open icon-large"></i>Android, ReverseEngineering
</a>
</li>
<li>
<a href="./category/challenge.html">
    <i class="icon-folder-open icon-large"></i>Challenge
</a>
</li>
<li>
<a href="./category/cryptography.html">
    <i class="icon-folder-open icon-large"></i>Cryptography
</a>
</li>
<li>
<a href="./category/development.html">
    <i class="icon-folder-open icon-large"></i>Development
</a>
</li>
<li>
<a href="./category/exploitation.html">
    <i class="icon-folder-open icon-large"></i>Exploitation
</a>
</li>
<li>
<a href="./category/fuzzing.html">
    <i class="icon-folder-open icon-large"></i>Fuzzing
</a>
</li>
<li>
<a href="./category/hardware.html">
    <i class="icon-folder-open icon-large"></i>Hardware
</a>
</li>
<li>
<a href="./category/hardware-reverseengineering.html">
    <i class="icon-folder-open icon-large"></i>Hardware, ReverseEngineering
</a>
</li>
<li>
<a href="./category/kernel-debugging.html">
    <i class="icon-folder-open icon-large"></i>Kernel Debugging
</a>
</li>
<li>
<a href="./category/life-at-quarkslab.html">
    <i class="icon-folder-open icon-large"></i>Life at Quarkslab
</a>
</li>
<li>
<a href="./category/maths.html">
    <i class="icon-folder-open icon-large"></i>Maths
</a>
</li>
<li>
<a href="./category/obfuscation.html">
    <i class="icon-folder-open icon-large"></i>Obfuscation
</a>
</li>
<li>
<a href="./category/pentest.html">
    <i class="icon-folder-open icon-large"></i>PenTest
</a>
</li>
<li>
<a href="./category/program-analysis.html">
    <i class="icon-folder-open icon-large"></i>Program Analysis
</a>
</li>
<li>
<a href="./category/programming.html">
    <i class="icon-folder-open icon-large"></i>Programming
</a>
</li>
<li>
<a href="./category/reverseengineering.html">
    <i class="icon-folder-open icon-large"></i>ReverseEngineering
</a>
</li>
<li>
<a href="./category/software.html">
    <i class="icon-folder-open icon-large"></i>Software
</a>
</li>
<li>
<a href="./category/vulnerability.html">
    <i class="icon-folder-open icon-large"></i>Vulnerability
</a>
</li>

<li class="nav-header"><h4><i class="icon-tags icon-large"></i>Tags</h4></li>


</ul>        </div><!--/.well -->

        <div class="span9">
<section id="content">
<article>
<header>
<h1>
  <a href=""
    rel="bookmark"
    title="Permalink to RFID: Monotonic Counter Anti-Tearing Defeated">
    RFID: Monotonic Counter Anti-Tearing Defeated
  </a>
</h1>
</header>
<div class="entry-content">
  <div class="well">
<footer class="post-info">
<span class="label">Date</span>
<abbr class="published" title="2021-05-18T00:00:00+02:00">
        <i class="icon-calendar"></i>Tue 18 May 2021
</abbr>
<span class="label">By</span>
<a href="./author/philippe-teuwen.html"><i class="icon-user"></i>Philippe Teuwen</a>
<a href="./author/christian-herrmann.html"><i class="icon-user"></i>Christian Herrmann</a>
<span class="label">Category</span>
<a href="./category/hardware.html"><i class="icon-folder-open"></i>Hardware</a>.


<span class="label">Tags</span>
	<a href="./tag/hardware.html"><i class="icon-tag"></i>hardware</a>
	<a href="./tag/nfc.html"><i class="icon-tag"></i>NFC</a>
	<a href="./tag/rfid.html"><i class="icon-tag"></i>RFID</a>
	<a href="./tag/proxmark3.html"><i class="icon-tag"></i>proxmark3</a>
	<a href="./tag/eeprom.html"><i class="icon-tag"></i>EEPROM</a>
	<a href="./tag/tear-off.html"><i class="icon-tag"></i>tear-off</a>
	<a href="./tag/mifare.html"><i class="icon-tag"></i>MIFARE</a>
	<a href="./tag/ultralight-ev1.html"><i class="icon-tag"></i>Ultralight EV1</a>
	<a href="./tag/ntag.html"><i class="icon-tag"></i>NTAG</a>
</footer><!-- /.post-info -->  </div>

  <div class="summary"><p class="first last">Tear-off techniques to the next level.</p>
</div>

  <div class="section" id="introduction">
<h2>Introduction</h2>
<p>For this second post in collaboration with <a class="reference external" href="https://twitter.com/herrmann1001">Iceman</a>, we will briefly present how the generic tear-off tools presented in the previous blog post <em>RFID: New Proxmark3 Tear-Off Features and New Findings</em> <a class="footnote-reference" href="#eeprom-tear2" id="id1">[2]</a> were used to defeat a secure monotonic counter implementation present in some models of MIFARE Ultralight and NFC cards from NXP.</p>
<p>Bypassing this security feature can have different impact depending on how the vulnerable cards and the specific feature is used in different systems. This blog post will only describe the technical matters of the issue and not analyze the possible impact on various systems. The issue was disclosed to NXP and the vendor has published Application Notes (referenced below) describing possible mitigations.</p>
<p>We won't repeat what was explained in length in the previous blog posts <a class="footnote-reference" href="#eeprom-tear" id="id2">[1]</a> and <a class="footnote-reference" href="#eeprom-tear2" id="id3">[2]</a>. The main results we'll use are that each bit gets erased at its own pace depending on stochastic manufacturing process, and that some bits can be weakly programmed, i.e. they are not fully programmed and when being read back, they are sometimes interpreted as <tt class="docutils literal">1</tt> and sometimes as <tt class="docutils literal">0</tt>.</p>
</div>
<div class="section" id="mifare-ultralight-ev1-monotonic-counters">
<h2>MIFARE Ultralight EV1 Monotonic Counters</h2>
<p>The MIFARE Ultralight EV1 <a class="footnote-reference" href="#mfulev1" id="id4">[3]</a> contains three 24-bit monotonic counters with anti-tearing support, which means one can increment a counter by an arbitrary value but never decrement it.</p>
<p>The available commands related to these counters are the following:</p>
<ul class="simple">
<li><code>INCR_CNT</code> to increment by 0 or a positive value;</li>
<li><code>READ_CNT</code> to read the current counter value;</li>
<li><code>CHECK_TEARING_EVENT</code> to read an anti-tearing 8-bit validity flag.</li>
</ul>
<p>The commands accept a <em>counter number</em> as parameter as there are three counters, but to keep things simple we'll assume there is only one counter.</p>
<p>The validity flag is presumably written at the same time as a new counter value is written and it should be equal to <tt class="docutils literal">0xBD</tt>. Any other value means that an increment operation was interrupted and, internally, the new counter value could not be fully written. If such event occurs, the counter keeps its previous value.</p>
<p>Under the hood, the counter is saved in two memory slots, similar to the <em>Protection Words</em> of the EM4305 we defeated in our previous blogpost. But here, the memory slots are not directly made available and <code>READ_CNT</code> implements some logic to return the highest of the slots containing a valid value (i.e. associated to a valid 8-bit flag).
The same logic is applied for <code>INCR_CNT</code> to decide which slot to read from and in which slot to store the new counter value.
On the other side, <code>CHECK_TEARING_EVENT</code> returns either the corrupted flag if one is corrupted, or the flag of the slot containing the lowest value.</p>
<p>Thanks to these anti-tearing mechanisms, the counter should never be corrupted or decreased.</p>
</div>
<div class="section" id="experiments-and-strategy">
<h2>Experiments and strategy</h2>
<p>We observed that by tearing an <code>INCR_CNT</code> by <tt class="docutils literal">1</tt> at the limit of getting a valid flag, then reading the counter several times, sometimes a <code>READ_CNT</code> returns the previous counter value, while <code>CHECK_TEARING_EVENT</code> returns a valid flag.</p>
<p>A possible explanation is that while the flag was properly written, one bit of the new counter was weakly programmed and when it's read as a <tt class="docutils literal">0</tt>, the counter value is lower than the old counter value still present in the other slot and yet <code>READ_CNT</code> returns the old counter value as being the current one.</p>
<p>Based on this observation, we developed a strategy to reset completely the counter back to zero.</p>
<p>Imagine we set the counter to a power of 2, e.g. <tt class="docutils literal">0x000100</tt> and the only bit set is a bit we can program weakly. This counter slot could be read as <tt class="docutils literal">0x000100</tt> or <tt class="docutils literal">0x000000</tt>. When it's seen as <tt class="docutils literal">0x000000</tt>, the other slot with the previous counter value will become the current counter and, as in our first experiment, we only manage to rollback the counter. But if we invalidate the other slot by tearing an <code>INCR_CNT</code> sooner to corrupt the flag, then <tt class="docutils literal">0x000000</tt> will become the current counter value.</p>
<p>Let's define the two slots as A and B and let's assume that when both slots have the same content and have a valid flag, B gets selected as the current one, i.e. when one reads the counter, slot B value is returned and when one increments the counter, the new value is written in A.</p>
<p>Our strategy is the following:</p>
<ul class="simple">
<li>Increase the counter to the closest <span class="math">\(2^{N}-1\)</span> value. If e.g. the counter is equal to <tt class="docutils literal">0x00008F</tt>, execute an <code>INCR_CNT(0x70)</code> to reach <tt class="docutils literal">0x0000FF</tt>;</li>
<li>Execute an <code>INCR_CNT(0)</code> so both slots are equal, e.g. <tt class="docutils literal">A:0x0000FF</tt>, <tt class="docutils literal">B:0x0000FF</tt>;</li>
<li>Execute an <code>INCR_CNT(1)</code> and tear near the end of the <em>write</em> operation. Hope for a counter set to <span class="math">\(2^{N}\)</span> with a weak bit. e.g. <tt class="docutils literal"><span class="pre">A:0x000?00</span></tt>, <tt class="docutils literal">B:0x0000FF</tt> with both flags still valid;</li>
<li>Execute an <code>INCR_CNT(0)</code> and tear before the <em>write</em> operation. Hope <tt class="docutils literal">A</tt> is read as <span class="math">\(2^{N}\)</span> so <tt class="docutils literal">B</tt> gets corrupted. e.g. <tt class="docutils literal"><span class="pre">A:0x000?00</span></tt> and B flag indicates B is corrupted;</li>
<li>Execute an <code>INCR_CNT(0)</code>. Hope <tt class="docutils literal">A</tt> is read as <tt class="docutils literal">0x000000</tt> so <tt class="docutils literal">A</tt> is copied to <tt class="docutils literal">B</tt>, e.g. <tt class="docutils literal"><span class="pre">A:0x000?00</span></tt>, <tt class="docutils literal">B:0x000000</tt> and both flags are again valid;</li>
<li>Execute an <code>INCR_CNT(0)</code>. Hope <tt class="docutils literal">A</tt> is read as <tt class="docutils literal">0x000000</tt> so <tt class="docutils literal">B</tt> is copied to <tt class="docutils literal">A</tt> and they become both stable, e.g. <tt class="docutils literal">A:0x000000</tt>, <tt class="docutils literal">B:0x000000</tt>;</li>
<li>If it fails, try again. If the counter increases slightly with attempts, it's not a problem as once the attack is successful we can bump the counter back to <span class="math">\(2^{N}-1\)</span> and try again;</li>
<li>If after a while, there is no indication that bit <span class="math">\(N\)</span> can be weakly programmed, move to the next bit and bump the counter to <span class="math">\(2^{N+1}-1\)</span>.</li>
</ul>
<p>The strategy must be complemented to adjust automatically the timings and to cover all the possible outcomes, including corrupted flags and weakly programmed flags.</p>
<p>Note that the probability of getting a <tt class="docutils literal">0</tt> or a <tt class="docutils literal">1</tt> when reading a weak bit can be influenced by controlling the distance between the tag and the reader. Closer to the reader you'll get more often a <tt class="docutils literal">1</tt> and further away a <tt class="docutils literal">0</tt>.</p>
</div>
<div class="section" id="results">
<h2>Results</h2>
<p>We have demonstrated the possibility to reset completely a MIFARE Ultralight EV1 counter despite its anti-tearing features and we reported the issue to NXP. The vendor had reproduced our findings and acknowledged it as a vulnerability.</p>
<p>According to NXP, the list of affected products is the following.</p>
<p>In MIFARE Ultralight family:</p>
<ul class="simple">
<li>MIFARE Ultralight EV1, MF0UL;</li>
<li>MIFARE Ultralight C, MF0ICU;</li>
<li>MIFARE Ultralight NANO, MF0UN.</li>
</ul>
<p>In NTAG 21x family:</p>
<ul class="simple">
<li>NTAG 210(µ)/212: NT2L1, NT2H10, NT2H12;</li>
<li>NTAG 213 (TT/F) /215 /216 (F): N2H13, NT2H15, NT2H16.</li>
</ul>
<p>None of these products are Common Criteria certified.</p>
<p>Other security features likely based on hidden slots might be affected by tearing events and weak bits too, such as OTP bits or Lock bits. But it seems much harder to corrupt them and if the attack succeeds, it will probably clear only a few bits.</p>
</div>
<div class="section" id="mitigations">
<h2>Mitigations</h2>
<p>An update of <em>Application Notes</em> AN11340 <a class="footnote-reference" href="#an11340" id="id5">[5]</a> and the new AN13089 <a class="footnote-reference" href="#an13089" id="id6">[6]</a> propose mitigations, such as doubling writes on OTP and Lock bits to update all internal slots and using the upper range of the counters. For example, if an application needs a counter from <tt class="docutils literal">0x000000</tt> to <tt class="docutils literal">0x000100</tt>, use a counter from <tt class="docutils literal">0xfffeff</tt> to <tt class="docutils literal">0xffffff</tt>. And when it reaches <tt class="docutils literal">0xffffff</tt>, issuing a dummy increment by zero to update the other internal slot will prevent any further attempt to affect the counter as it will only affect slot <tt class="docutils literal">A</tt> while slot <tt class="docutils literal">B</tt> will always have priority when the counter is read.</p>
<p>Adding a MAC (<em>Message Authentication Code</em>) may help too but beware of rollback attacks.</p>
<p>The described attack has been realized with the generic tear-off tooling (<code>hw tearoff</code> combined with <code>hf 14a raw</code>) we added to the Proxmark3 RRG code repository as explained in the previous blogpost <a class="footnote-reference" href="#eeprom-tear2" id="id7">[2]</a>.</p>
</div>
<div class="section" id="conclusion">
<h2>Conclusion</h2>
<p>This third blogpost on the EEPROM tearing topic shows that designing a security function while taking care of all the possible weird effects of weak bits is quite challenging. This leaves a number of opportunities for attackers to defeat security features based on EEPROM, even in the presence of anti-tearing countermeasures.</p>
<p>So far, we analyzed only RFID EEPROMs but the same type of issues might probably be found on other non-RFID EEPROMs as well.
So, look around you and try to find other interesting targets!</p>
<p>We will present an overview of our tearing techniques, their consequences and their use to defeat various security features at SSTIC 2021 <a class="footnote-reference" href="#eeprom-tears" id="id8">[4]</a> the 3rd of June at 15:00 CET. The talk will be mainly in French but a (long!) article in the proceedings will be published in English at <a class="reference external" href="https://www.sstic.org/2021/presentation/eeprom_it_will_all_end_in_tears/">https://www.sstic.org/2021/presentation/eeprom_it_will_all_end_in_tears/</a>. We will cover this attack in greater detail as well.</p>
<p>We want to highlight that we appreciate the cooperation of NXP leading to this coordinated disclosure.</p>
<p>-- <a class="reference external" href="https://twitter.com/doegox">&#64;doegox</a> &amp; <a class="reference external" href="https://twitter.com/herrmann1001">&#64;herrmann1001</a></p>
<p>PS: Many thanks to colleagues and friends who proofread this article.</p>
</div>
<div class="section" id="timeline">
<h2>Timeline</h2>
<ul class="simple">
<li>2020/10/15:  &lt;=&gt; we alert NXP PSIRT and receive immediate attention</li>
<li>2020/10/28:  &lt;=  NXP verifies and acknowledges the vulnerability</li>
<li>2020/12/17:  &lt;=&gt; agreement on coordinated disclosure calendar</li>
<li>2021/01/20:  &lt;=  NXP shares the list of affected products and a draft of the revised Application Notes with mitigations</li>
<li>2021/03/05:  ... we submit our article at SSTIC</li>
<li>2021/05/07:  &lt;=  NXP publishes both Application Notes <a class="footnote-reference" href="#an11340" id="id9">[5]</a> and <a class="footnote-reference" href="#an13089" id="id10">[6]</a></li>
</ul>
<div class="line-block">
<div class="line"><br /></div>
<div class="line"><br /></div>
</div>
<table class="docutils footnote" frame="void" id="eeprom-tear" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id2">[1]</a></td><td><a class="reference external" href="https://blog.quarkslab.com/eeprom-when-tearing-off-becomes-a-security-issue.html">https://blog.quarkslab.com/eeprom-when-tearing-off-becomes-a-security-issue.html</a></td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="eeprom-tear2" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label">[2]</td><td><em>(<a class="fn-backref" href="#id1">1</a>, <a class="fn-backref" href="#id3">2</a>, <a class="fn-backref" href="#id7">3</a>)</em> <a class="reference external" href="https://blog.quarkslab.com/rfid-new-proxmark3-tear-off-features-and-new-findings.html">https://blog.quarkslab.com/rfid-new-proxmark3-tear-off-features-and-new-findings.html</a></td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="mfulev1" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id4">[3]</a></td><td><a class="reference external" href="https://www.nxp.com/products/rfid-nfc/mifare-hf/mifare-ultralight/mifare-ultralight-ev1:MF0ULX1">https://www.nxp.com/products/rfid-nfc/mifare-hf/mifare-ultralight/mifare-ultralight-ev1:MF0ULX1</a></td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="eeprom-tears" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id8">[4]</a></td><td><a class="reference external" href="https://www.sstic.org/2021/presentation/eeprom_it_will_all_end_in_tears/">https://www.sstic.org/2021/presentation/eeprom_it_will_all_end_in_tears/</a></td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="an11340" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label">[5]</td><td><em>(<a class="fn-backref" href="#id5">1</a>, <a class="fn-backref" href="#id9">2</a>)</em> AN11340 MIFARE Ultralight EV1 Features and Hints - Rev. 3.2 <a class="reference external" href="https://www.nxp.com/docs/en/application-note/AN11340.pdf">https://www.nxp.com/docs/en/application-note/AN11340.pdf</a></td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="an13089" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label">[6]</td><td><em>(<a class="fn-backref" href="#id6">1</a>, <a class="fn-backref" href="#id10">2</a>)</em> AN13089 NTAG 21x Features and Hints - Rev. 1.0 <a class="reference external" href="https://www.nxp.com/docs/en/application-note/AN13089.pdf">https://www.nxp.com/docs/en/application-note/AN13089.pdf</a></td></tr>
</tbody>
</table>
</div>
<script type='text/javascript'>if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width < 768) ? "left" : align;
        indent = (screen.width < 768) ? "0em" : indent;
        linebreak = (screen.width < 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
</script>
</div><!-- /.entry-content -->
<div class="comments">
  <h2>Comments</h2>
  <div id="disqus_thread"></div>
  <script type="text/javascript">
    var disqus_identifier = "rfid-monotonic-counter-anti-tearing-defeated.html";
    (function() {
     var dsq = document.createElement('script');
     dsq.type = 'text/javascript'; dsq.async = true;
     dsq.src = 'https://Quarkslab.disqus.com/embed.js';
     (document.getElementsByTagName('head')[0] ||
      document.getElementsByTagName('body')[0]).appendChild(dsq);
     })();
</script>
                </div>
                </article>
                </section>
        </div><!--/span-->

      </div><!--/row-->

      <hr>

      <footer>
      <address id="about">
        Powered by <a href="http://docs.getpelican.com">Pelican <i class="icon-external-link"></i></a>, Theme is from <a href="http://twitter.github.com/bootstrap/">Bootstrap from Twitter <i class="icon-external-link"></i></a>
      </address><!-- /#about -->
      </footer>

    </div><!--/.fluid-container-->


<script type="text/javascript">
    var disqus_shortname = 'Quarkslab';
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = 'https://' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
</script>

    <!-- Le javascript -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="./theme/js/jquery-1.7.2.min.js"></script>
    <script src="./theme/js/bootstrap.min.js"></script>
  </body>
</html>