<!DOCTYPE html>
<html lang="en">
  <head>
    <title>9263 &ndash; Buildbot crash output: fuzz-2013-10-10-12811.pcap</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link href="data/assets/64b49332a92937374625c24ed9a89c85.css?1635022386" rel="stylesheet" type="text/css">

<link href="data/assets/f6911ed8e5a97f108734d9324cb6bd67.css?1635022386" rel="stylesheet" type="text/css">

    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1635022386"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "9263 – Buildbot crash output: fuzz-2013-10-10-12811.pcap",
                             "show_bug.cgi?id=9263" );
        document.title = "9263 – Buildbot crash output: fuzz-2013-10-10-12811.pcap";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "9263 – Buildbot crash output: fuzz-2013-10-10-12811.pcap", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1635022386"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-wireshark-org-bugzilla
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_Wireshark
                 bz_component_Dissection_engine_&#X28;libwireshark&#X29;
                 bz_bug_9263 yui-skin-sam">

  <div id="header"><div id="banner">
      <a href="/bugzilla/"><img id="badge" src="/image/wsbadge-bug@186x57.png"></a>
      <span id="banner-text">
        Wireshark Bug Database &ndash; Bug&nbsp;9263
      </span>
      <div id="subtitle">
        <p class="subheader">Buildbot crash output: fuzz-2013-10-10-12811.pcap</p>
      </div>

       <div id="motd_yellow">

<p>
This Bugzilla instance was migrated to <a href="https://gitlab.com/wireshark/wireshark">GitLab</a> on Sunday, August 23.
</p>


<p>
This bug has been migrated to <a href="https://gitlab.com/wireshark/wireshark/-/issues/9263">issue 9263</a> in the <a href="https://gitlab.com/wireshark/wireshark/-/issues">GitLab issue tracker</a>.
It can be viewed and updated there.
</p>


</p>

<p>
See the <a href="https://gitlab.com/wireshark/gitlab-migration/wikis/home">migration wiki</a> for more details.
</p>

       </div>


    </div>

<!-- WS: Title info is in the banner
    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;9263</span>
  
        <span id="subtitle" class="subheader">Buildbot crash output: fuzz-2013-10-10-12811.pcap</span>

        <span id="information" class="header_addl_info">Last modified: 2013-11-03 18:46:05 UTC</span>
    </div>
  -->


    <div id="common_links"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=9263&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=9263" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=9263&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635622002-tyFTzYFi9Axti7tPgQYDlNzv64ICqIsrpZGAConhGD4">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2013-11-03 18:46:05">
  <input type="hidden" name="id" value="9263">
  <input type="hidden" name="token" value="1635622002-W6qBeiWn2u5Xd1HT6pnFj59ZQ1vTnmMGWOI-IIROnrI">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=9263"><b>Bug&nbsp;9263</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">Buildbot crash output: fuzz-2013-10-10-12811.pcap</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>Buildbot crash output: fuzz-2013-10-10-12811.pcap
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'Buildbot crash output: fuzz-2013-10-10-12811.pcap' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Wireshark

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Wireshark"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >Dissection engine (libwireshark)

  (<a href="buglist.cgi?component=Dissection%20engine%20(libwireshark)&amp;product=Wireshark&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>unspecified
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">x86-64
        Ubuntu
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>High
       Major<span id="votes_container">
    (<a href="page.cgi?id=voting/user.html&amp;bug_id=9263#vote_9263">vote</a>)
  </span>
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Bugzilla Administrator</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'bugzilla-admin\x40wireshark.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
          <a href="http://www.wireshark.org/download/automated/captures/fuzz-2013-10-10-12811.pcap"
             rel="noreferrer"><span title="http://www.wireshark.org/download/automated/captures/fuzz-2013-10-10-12811.pcap">http://www.wireshark.org/download/aut...
        </span></a>
      </span>
    </td>
  </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2013-10-10 20:20 UTC by <span class="vcard"><span class="fn">Buildbot Builder</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2013-11-03 18:46 UTC
      (<a href="show_activity.cgi?id=9263">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>1 
          user
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="eapache">eapache</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" ><ul class="bug_urls">
          <li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-6340">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-6340</a>
          </li></ul>

</td>
    </tr> 

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=11773"
               title="View the content of the attachment">
          <b>Don't assume tvb_[reported_]length_remaining() always return a positive value.</b></a>

          <span class="bz_attach_extra_info">
              (3.70 KB,
                patch)

            <br>
            <a href="#attach_11773"
               title="Go to the comment associated with the attachment">2013-10-12 14:51 UTC</a>,

            <span class="vcard"><span class="fn">Christopher Maynard</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=11773&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=11777"
               title="View the content of the attachment">
          <b>Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.</b></a>

          <span class="bz_attach_extra_info">
              (1.84 KB,
                patch)

            <br>
            <a href="#attach_11777"
               title="Go to the comment associated with the attachment">2013-10-12 16:55 UTC</a>,

            <span class="vcard"><span class="fn">Christopher Maynard</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=11777&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a3" class="bz_contenttype_application_vnd.tcpdump.pcap">
        <td>
            <a href="attachment.cgi?id=11941"
               title="View the content of the attachment">
          <b>Two IMAP packets demonstrating remaining problem</b></a>

          <span class="bz_attach_extra_info">
              (1.71 KB,
                application/vnd.tcpdump.pcap)

            <br>
            <a href="#attach_11941"
               title="Go to the comment associated with the attachment">2013-10-31 02:11 UTC</a>,

            <span class="vcard"><span class="fn">Evan Huus</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=11941&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a4" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=11942"
               title="View the content of the attachment">
          <b>Potential fix</b></a>

          <span class="bz_attach_extra_info">
              (577 bytes,
                patch)

            <br>
            <a href="#attach_11942"
               title="Go to the comment associated with the attachment">2013-10-31 02:13 UTC</a>,

            <span class="vcard"><span class="fn">Evan Huus</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=11942&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
        </span>
        <a href="attachment.cgi?bugid=9263&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=9263&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1490378926" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Buildbot Builder</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-10 20:20:05 UTC
        </span>

      </div>




<pre class="bz_comment_text">Problems have been found with the following capture file:

<a href="http://www.wireshark.org/download/automated/captures/fuzz-2013-10-10-12811.pcap">http://www.wireshark.org/download/automated/captures/fuzz-2013-10-10-12811.pcap</a>

stderr:
Input file: /home/wireshark/menagerie/menagerie/10518-malformed-readdirs.cap.gz

Build host information:
Linux wsbb04 3.2.0-49-generic #75-Ubuntu SMP Tue Jun 18 17:39:32 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
Distributor ID:	Ubuntu
Description:	Ubuntu 12.04.2 LTS
Release:	12.04
Codename:	precise

Buildbot information:
BUILDBOT_REPOSITORY=<a href="http://code.wireshark.org/git/wireshark">http://code.wireshark.org/git/wireshark</a>
BUILDBOT_BUILDNUMBER=2124
BUILDBOT_URL=<a href="http://buildbot.wireshark.org/trunk/">http://buildbot.wireshark.org/trunk/</a>
BUILDBOT_BUILDERNAME=Clang-Code-Analysis
BUILDBOT_SLAVENAME=clang-code-analysis
BUILDBOT_GOT_REVISION=69da562c83e58c9bf71775ab492219534ee459cc

Return value:  0

Dissector bug:  0

Valgrind error count:  3



Git commit
<a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=69da562c83e58c9bf71775ab492219534ee459cc">commit 69da562c83e58c9bf71775ab492219534ee459cc</a>
Author: Evan Huus &lt;<a href="/cdn-cgi/l/email-protection#d3b6b2a3b2b0bbb6f5f0e5e7e8b4beb2babffdb0bcbe">eapache&#64;gmail.com</a>&gt;
Date:   Tue Oct 8 21:12:06 2013 +0000

    Don't try and construct an OID string if the len is zero. Fixes
    <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - Buildbot crash output: fuzz-2013-10-07-7748.pcap"
   href="show_bug.cgi?id=9246">https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=9246</a>
    
    svn path=/trunk/; revision=52455


Command and args: ./tools/valgrind-wireshark.sh -T

==21838== Memcheck, a memory error detector
==21838== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==21838== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==21838== Command: /home/wireshark/builders/trunk-clang-ca/clangcodeanalysis/install/bin/tshark -Vx -nr /fuzz/buildbot/clangcodeanalysis/valgrind-fuzz/fuzz-2013-10-10-12811.pcap
==21838== 
==21838== Conditional jump or move depends on uninitialised value(s)
==21838==    at 0x64AE7AD: get_token_len (strutil.c:127)
==21838==    by 0x680AEAD: dissect_imap (packet-imap.c:216)
==21838==    by 0x6486117: call_dissector_through_handle (packet.c:492)
==21838==    by 0x6486A64: call_dissector_work (packet.c:586)
==21838==    by 0x64873A2: dissector_try_uint_new (packet.c:1017)
==21838==    by 0x64873F6: dissector_try_uint (packet.c:1043)
==21838==    by 0x6B0B33C: decode_tcp_ports (packet-tcp.c:3867)
==21838==    by 0x6B0B77D: process_tcp_payload (packet-tcp.c:3926)
==21838==    by 0x6B0BD2D: dissect_tcp_payload (packet-tcp.c:1751)
==21838==    by 0x6B0D0EB: dissect_tcp (packet-tcp.c:4763)
==21838==    by 0x6486117: call_dissector_through_handle (packet.c:492)
==21838==    by 0x6486A64: call_dissector_work (packet.c:586)
==21838== 
==21838== Conditional jump or move depends on uninitialised value(s)
==21838==    at 0x64AE7B1: get_token_len (strutil.c:127)
==21838==    by 0x680AEAD: dissect_imap (packet-imap.c:216)
==21838==    by 0x6486117: call_dissector_through_handle (packet.c:492)
==21838==    by 0x6486A64: call_dissector_work (packet.c:586)
==21838==    by 0x64873A2: dissector_try_uint_new (packet.c:1017)
==21838==    by 0x64873F6: dissector_try_uint (packet.c:1043)
==21838==    by 0x6B0B33C: decode_tcp_ports (packet-tcp.c:3867)
==21838==    by 0x6B0B77D: process_tcp_payload (packet-tcp.c:3926)
==21838==    by 0x6B0BD2D: dissect_tcp_payload (packet-tcp.c:1751)
==21838==    by 0x6B0D0EB: dissect_tcp (packet-tcp.c:4763)
==21838==    by 0x6486117: call_dissector_through_handle (packet.c:492)
==21838==    by 0x6486A64: call_dissector_work (packet.c:586)
==21838== 
==21838== Conditional jump or move depends on uninitialised value(s)
==21838==    at 0x64AE7B5: get_token_len (strutil.c:127)
==21838==    by 0x680AEAD: dissect_imap (packet-imap.c:216)
==21838==    by 0x6486117: call_dissector_through_handle (packet.c:492)
==21838==    by 0x6486A64: call_dissector_work (packet.c:586)
==21838==    by 0x64873A2: dissector_try_uint_new (packet.c:1017)
==21838==    by 0x64873F6: dissector_try_uint (packet.c:1043)
==21838==    by 0x6B0B33C: decode_tcp_ports (packet-tcp.c:3867)
==21838==    by 0x6B0B77D: process_tcp_payload (packet-tcp.c:3926)
==21838==    by 0x6B0BD2D: dissect_tcp_payload (packet-tcp.c:1751)
==21838==    by 0x6B0D0EB: dissect_tcp (packet-tcp.c:4763)
==21838==    by 0x6486117: call_dissector_through_handle (packet.c:492)
==21838==    by 0x6486A64: call_dissector_work (packet.c:586)
==21838== 

** (process:21838): WARNING **: Dissector bug, protocol SMB, in packet 24872: proto.c:2978: failed assertion &quot;DISSECTOR_ASSERT_NOT_REACHED&quot;
==21838== 
==21838== HEAP SUMMARY:
==21838==     in use at exit: 1,124,059 bytes in 25,110 blocks
==21838==   total heap usage: 6,272,898 allocs, 6,247,788 frees, 412,398,827 bytes allocated
==21838== 
==21838== LEAK SUMMARY:
==21838==    definitely lost: 1,761 bytes in 89 blocks
==21838==    indirectly lost: 1,400 bytes in 51 blocks
==21838==      possibly lost: 0 bytes in 0 blocks
==21838==    still reachable: 1,120,898 bytes in 24,970 blocks
==21838==         suppressed: 0 bytes in 0 blocks
==21838== Rerun with --leak-check=full to see details of leaked memory
==21838== 
==21838== For counts of detected and suppressed errors, rerun with: -v
==21838== Use --track-origins=yes to see where uninitialised values come from
==21838== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 3 from 3)

[ no debug trace ]</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-11 00:01:01 UTC
        </span>

      </div>




<pre class="bz_comment_text">First of many fixed in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=52523">r52523</a>.</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-11 00:16:37 UTC
        </span>

      </div>




<pre class="bz_comment_text">This is an interesting one, it looks like a wiretap issue of some sort...

==6351== Conditional jump or move depends on uninitialised value(s)
==6351==    at 0x64B6445: get_token_len (strutil.c:127)
==6351==    by 0x67FE50A: dissect_imap (packet-imap.c:216)
==6351==    by 0x648EF73: call_dissector_through_handle (packet.c:492)
==6351==    by 0x648F62F: call_dissector_work (packet.c:586)
==6351==    by 0x648FEEB: dissector_try_uint_new (packet.c:1017)
==6351==    by 0x648FF46: dissector_try_uint (packet.c:1043)
==6351==    by 0x6AEA696: decode_tcp_ports (packet-tcp.c:3867)
==6351==    by 0x6AEAAC1: process_tcp_payload (packet-tcp.c:3926)
==6351==    by 0x6AEB089: dissect_tcp_payload (packet-tcp.c:1751)
==6351==    by 0x6AECAE5: dissect_tcp (packet-tcp.c:4779)
==6351==    by 0x648EF73: call_dissector_through_handle (packet.c:492)
==6351==    by 0x648F62F: call_dissector_work (packet.c:586)
==6351==  Uninitialised value was created by a heap allocation
==6351==    at 0x4C2C6AE: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==6351==    by 0x94F7E5E: g_realloc (gmem.c:169)
==6351==    by 0x4E3E29F: buffer_assure_space (buffer.c:85)
==6351==    by 0x4E69DBF: wtap_read_packet_bytes (wtap.c:923)
==6351==    by 0x4E5DFC4: pcapng_read_packet_block.isra.5 (pcapng.c:1158)
==6351==    by 0x4E5EAF9: pcapng_read_block (pcapng.c:2067)
==6351==    by 0x4E5FE32: pcapng_read (pcapng.c:2301)
==6351==    by 0x4E69D21: wtap_read (wtap.c:875)
==6351==    by 0x40B412: main (tshark.c:3136)</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-12 02:51:30 UTC
        </span>

      </div>




<pre class="bz_comment_text">I'm also getting a whole bunch of these now, it looks like TCP is passing the wrong length to the reassembly API?

** (process:1047): WARNING **: Dissector bug, protocol TCP, in packet 1689: reassemble.c:1214: failed assertion &quot;tvb_bytes_exist(tvb, offset, frag_data_len)&quot;</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-12 13:14:56 UTC
        </span>

      </div>




<pre class="bz_comment_text">SMB assertion fixed in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=52565">r52565</a>.</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Christopher Maynard</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-12 14:51:32 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=11773" name="attach_11773" title="Don't assume tvb_[reported_]length_remaining() always return a positive value.">attachment 11773</a> <a href="attachment.cgi?id=11773&amp;action=edit" title="Don't assume tvb_[reported_]length_remaining() always return a positive value.">[details]</a></span>
Don't assume tvb_[reported_]length_remaining() always return a positive value.

With this quick patch, the following warnings are no longer present:

10:43:39          Warn Dissector bug, protocol TCP, in packet 22525: reassemble.c:1214: failed assertion &quot;tvb_bytes_exist(tvb, offset, frag_data_len)&quot;
10:43:39          Warn Dissector bug, protocol TCP, in packet 22534: reassemble.c:1214: failed assertion &quot;tvb_bytes_exist(tvb, offset, frag_data_len)&quot;
10:43:39          Warn Dissector bug, protocol TCP, in packet 25209: reassemble.c:1214: failed assertion &quot;tvb_bytes_exist(tvb, offset, frag_data_len)&quot;
10:43:39          Warn Dissector bug, protocol TCP, in packet 25321: reassemble.c:1214: failed assertion &quot;tvb_bytes_exist(tvb, offset, frag_data_len)&quot;

I've wondered in the past if tvb_length_remaining() and tvb_reported_length_remaining() should just return 0 instead of -1.  I still wonder.</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-12 16:23:40 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=9263#c5">comment #5</a>)
<span class="quote">&gt; Created <span class=""><a href="attachment.cgi?id=11773" name="attach_11773" title="Don't assume tvb_[reported_]length_remaining() always return a positive value.">attachment 11773</a> <a href="attachment.cgi?id=11773&amp;action=edit" title="Don't assume tvb_[reported_]length_remaining() always return a positive value.">[details]</a></span>
&gt; Don't assume tvb_[reported_]length_remaining() always return a positive
&gt; value.
&gt; 
&gt; With this quick patch, the following warnings are no longer present:
&gt; 
&gt; 10:43:39          Warn Dissector bug, protocol TCP, in packet 22525:
&gt; reassemble.c:1214: failed assertion &quot;tvb_bytes_exist(tvb, offset,
&gt; frag_data_len)&quot;
&gt; 10:43:39          Warn Dissector bug, protocol TCP, in packet 22534:
&gt; reassemble.c:1214: failed assertion &quot;tvb_bytes_exist(tvb, offset,
&gt; frag_data_len)&quot;
&gt; 10:43:39          Warn Dissector bug, protocol TCP, in packet 25209:
&gt; reassemble.c:1214: failed assertion &quot;tvb_bytes_exist(tvb, offset,
&gt; frag_data_len)&quot;
&gt; 10:43:39          Warn Dissector bug, protocol TCP, in packet 25321:
&gt; reassemble.c:1214: failed assertion &quot;tvb_bytes_exist(tvb, offset,
&gt; frag_data_len)&quot;</span >

Looks good to me.

<span class="quote">&gt; I've wondered in the past if tvb_length_remaining() and
&gt; tvb_reported_length_remaining() should just return 0 instead of -1.  I still
&gt; wonder.</span >

Ya, I'd be OK with that I think. The case where the dissector wants to distinguish between &quot;at&quot; and &quot;past&quot; the end of the buffer is rare enough that whatever extra work they would have to do is worth the simplification here.</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Christopher Maynard</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-12 16:55:53 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=11777" name="attach_11777" title="Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.">attachment 11777</a> <a href="attachment.cgi?id=11777&amp;action=edit" title="Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.">[details]</a></span>
Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.

This patch changes the error return value of both tvb_length_remaining() and tvb_reported_length_remaining() from -1 to 0.  If this patch is applied, then in theory it obviates the need for the 1st patch; however, maybe we should apply both of them anyway, just in case this change (-1 -&gt; 0) is ever reverted for some reason in the future?  I'll probably commit both unless someone thinks this 2nd patch is sufficient.  Either/both are suitable for back-porting to both the 1.8 and 1.10 trunks.</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-12 17:07:01 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=9263#c7">comment #7</a>)
<span class="quote">&gt; Created <span class=""><a href="attachment.cgi?id=11777" name="attach_11777" title="Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.">attachment 11777</a> <a href="attachment.cgi?id=11777&amp;action=edit" title="Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.">[details]</a></span>
&gt; Change the error return value of tvb_[reported_]length_remaining() from -1
&gt; to 0.
&gt; 
&gt; This patch changes the error return value of both tvb_length_remaining() and
&gt; tvb_reported_length_remaining() from -1 to 0.  If this patch is applied,
&gt; then in theory it obviates the need for the 1st patch; however, maybe we
&gt; should apply both of them anyway, just in case this change (-1 -&gt; 0) is ever
&gt; reverted for some reason in the future?  I'll probably commit both unless
&gt; someone thinks this 2nd patch is sufficient.  Either/both are suitable for
&gt; back-porting to both the 1.8 and 1.10 trunks.</span >

Perhaps they should return guints and not gints then? Not sure how much signed/unsigned pain that causes though.

Either way, nack on the backport, it's an API change.</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Christopher Maynard</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-12 17:41:48 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=9263#c8">comment #8</a>)
<span class="quote">&gt; Perhaps they should return guints and not gints then? Not sure how much
&gt; signed/unsigned pain that causes though.</span >

In the long run, yes.  For now, I didn't want to deal with that very pain.

<span class="quote">&gt; Either way, nack on the backport, it's an API change.</span >

You're referring only to not backporting IF we change the API from returning a gint to returning a guint, correct?  I think both patches I posted are suitable for backporting, are they not?  At the very least, certainly the first patch to packet-tcp.c is suitable for backporting.</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-12 17:53:51 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=9263#c9">comment #9</a>)
<span class="quote">&gt; You're referring only to not backporting IF we change the API from returning
&gt; a gint to returning a guint, correct?  I think both patches I posted are
&gt; suitable for backporting, are they not?  At the very least, certainly the
&gt; first patch to packet-tcp.c is suitable for backporting.</span >

The TCP patch is definitely backportable, and the guint idea is definitely not. Changing the return value in a certain case is iffy, but I think it counts as an API change in that code *correctly* depending on the old behaviour would have to change to accommodate the new behaviour. I admit that it would be nice not to have to worry about these cases anymore even in 1.8/1.10 so I won't argue the point any further if you disagree :)</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Christopher Maynard</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-12 18:14:07 UTC
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class=""><a href="attachment.cgi?id=11773" name="attach_11773" title="Don't assume tvb_[reported_]length_remaining() always return a positive value.">attachment 11773</a> <a href="attachment.cgi?id=11773&amp;action=edit" title="Don't assume tvb_[reported_]length_remaining() always return a positive value.">[details]</a></span>
Don't assume tvb_[reported_]length_remaining() always return a positive value.

Committed in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=52570">r52570</a> and scheduled for 1.10.3 and 1.8.11.</pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Christopher Maynard</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-12 18:14:45 UTC
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class=""><a href="attachment.cgi?id=11777" name="attach_11777" title="Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.">attachment 11777</a> <a href="attachment.cgi?id=11777&amp;action=edit" title="Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.">[details]</a></span>
Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.

Committed in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=52571">r52571</a>, but playing it safe and not scheduling it for backport.</pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-31 02:11:07 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=11941" name="attach_11941" title="Two IMAP packets demonstrating remaining problem">attachment 11941</a> <a href="attachment.cgi?id=11941&amp;action=edit" title="Two IMAP packets demonstrating remaining problem">[details]</a></span>
Two IMAP packets demonstrating remaining problem

The fuzz file was quite large - these two packets are enough to demonstrate the valgrind issue in the IMAP dissector.</pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-31 02:13:30 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=11942" name="attach_11942" title="Potential fix">attachment 11942</a> <a href="attachment.cgi?id=11942&amp;action=edit" title="Potential fix">[details]</a></span>
Potential fix

This patch fixes the error for me, which makes it look like an off-by-one error that only shows up when right at the end of the packet. However, I've not actually been able to *find* the off-by-one error in the code so I'm hesitant to commit this without a better understanding.</pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jörg Mayer</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-31 07:50:27 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=9263#c12">comment #12</a>)
<span class="quote">&gt; Comment on <span class=""><a href="attachment.cgi?id=11777" name="attach_11777" title="Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.">attachment 11777</a> <a href="attachment.cgi?id=11777&amp;action=edit" title="Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.">[details]</a></span>
&gt; Change the error return value of tvb_[reported_]length_remaining() from -1
&gt; to 0.</span >

The following comment change in tvbuf.h looks misleading to me:

 /** Computes bytes to end of buffer, from offset (which can be negative,
   * indicate that offset is out of bounds. No exception is thrown. */

Nothing remaining is a valid situation while trying to access out of bounds data is not: The latter indicates either a programming error or an invalid packet.
I'm not happy with that change.</pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Christopher Maynard</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-31 14:15:07 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=9263#c15">comment #15</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=9263#c12">comment #12</a>)
&gt; &gt; Comment on <span class=""><a href="attachment.cgi?id=11777" name="attach_11777" title="Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.">attachment 11777</a> <a href="attachment.cgi?id=11777&amp;action=edit" title="Change the error return value of tvb_[reported_]length_remaining() from -1 to 0.">[details]</a></span>
&gt; &gt; Change the error return value of tvb_[reported_]length_remaining() from -1
&gt; &gt; to 0.
&gt; 
&gt; The following comment change in tvbuf.h looks misleading to me:
&gt; 
&gt;  /** Computes bytes to end of buffer, from offset (which can be negative,
&gt;    * indicate that offset is out of bounds. No exception is thrown. */</span >

Mine reads as follows, which I think is clear, but if not, please suggest something else:

/** Computes bytes to end of buffer, from offset (which can be negative,
 * to indicate bytes from end of buffer). Function returns 0 if offset is out
 * of bounds. No exception is thrown. */

<span class="quote">&gt; Nothing remaining is a valid situation while trying to access out of bounds
&gt; data is not: The latter indicates either a programming error or an invalid
&gt; packet.
&gt; I'm not happy with that change.</span >

What do you suggest instead to deal with the numerous bugs caused by the misuse of those functions, and which also avoids such problems in the future?

If one wants to be able to differentiate between no more bytes remaining in a buffer and running past the end of the buffer, we have other functions that could be used for that purpose: tvb_bytes_exist(), tvb_ensure_bytes_exist(), tvb_offset_exists().  Those functions are not misused as tvb_length_remaining() and tvb_reported_length_remaining() are.</pre>
    </div>

    <div id="c17" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jörg Mayer</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-10-31 21:32:35 UTC
        </span>

      </div>




<pre class="bz_comment_text">While I'm not happy with the change in general I find the existing solution even worse. What I am unhappy with the the text in tvbuff.h, as it implies that a return value of 0 indicates an access outside the valid range of the buffer.

Proposed text:


/** Computes bytes to end of buffer, from offset (which can be negative,
 * to indicate bytes from end of buffer). Function returns 0 if offset is
 * either at the end of the buffer or out of bounds. No exception is thrown. */</pre>
    </div>

    <div id="c18" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Christopher Maynard</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-11-01 14:17:42 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=9263#c17">comment #17</a>)
<span class="quote">&gt; While I'm not happy with the change in general I find the existing solution
&gt; even worse. </span >

I fail to see how things are worse, but maybe I'm in the minority here.

<span class="quote">&gt; What I am unhappy with the the text in tvbuff.h, as it implies
&gt; that a return value of 0 indicates an access outside the valid range of the
&gt; buffer.</span >

Well, a return value of 0 does indicate an access outside the valid range of the buffer, doesn't it?  Even in the case when you have a buffer of N bytes in length, an offset of N is outside the valid range of the buffer, is it not?  

<span class="quote">&gt; Proposed text:
&gt; 
&gt; 
&gt; /** Computes bytes to end of buffer, from offset (which can be negative,
&gt;  * to indicate bytes from end of buffer). Function returns 0 if offset is
&gt;  * either at the end of the buffer or out of bounds. No exception is thrown.
&gt; */</span >

I consider the end of the buffer to be out of bounds already, but if you think this wording is clearer, or for that matter if you think the change in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=52571">r52571</a> itself isn't acceptable, then I guess go ahead and make whatever changes you think are best.

I am curious though - I'm aware of many of the types of problems that can be caused by those functions returning -1, but I'm unaware of any problems caused by the change in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=52571">r52571</a>.  Is there some specific instance you can point to?  Is there somewhere in the code where a return value of 0 is treated differently from -1 where there's any real impact?  Basically what is it exactly that makes this change worse than the previous behavior?  I'm honestly curious so I can learn from this, because if I've misunderstood the impact, then I'd like to know about it and learn from it.  Thanks.</pre>
    </div>

    <div id="c19" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jörg Mayer</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-11-01 23:25:44 UTC
        </span>

      </div>




<pre class="bz_comment_text">I think the current change to the code is the least bad option,
i.e. it was the right thing to do. I just want the comment to be changed.
Assume a construct like

while (bytes_remaining(...) &gt; 0) {
  use some bytes
}

In case the loop uses more bytes than are remaining, this would be an
error of some sorts while it would be valid if it uses exactly the amount
of remaining data.
That's what I wanted to clarify in the comment in tvbuff.h, nothing else.</pre>
    </div>

    <div id="c20" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-11-03 14:23:10 UTC
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class=""><a href="attachment.cgi?id=11942" name="attach_11942" title="Potential fix">attachment 11942</a> <a href="attachment.cgi?id=11942&amp;action=edit" title="Potential fix">[details]</a></span>
Potential fix

Committed in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=53062">r53062</a>.</pre>
    </div>

    <div id="c21" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-11-03 14:37:35 UTC
        </span>

      </div>




<pre class="bz_comment_text">Jörg, I also find that comment confusing (both the out of bounds issue and the possibility of passing in a negative offset).

How about the following:

/** Returns the number of bytes from offset to the end of the buffer,            
 * effectively (tvb_length(tvb) - offset) in normal cases. Returns 0 if offset   
 * is at or past the end of the buffer.                                          
 *                                                                               
 * Offset can be negative to indicate an offset from the back of the buffer      
 * instead of the front, in which case the function simply returns (-offset)     
 * unless that would be out of bounds (in which case it returns 0 again).        
 *                                                                               
 * No exception is thrown. */</pre>
    </div>

    <div id="c22" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Christopher Maynard</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-11-03 18:08:52 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=9263#c21">comment #21</a>)
<span class="quote">&gt; Jörg, I also find that comment confusing (both the out of bounds issue and
&gt; the possibility of passing in a negative offset).</span >

For now, I committed Jörg's recommended rewording in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=53070">r53070</a>.  Feel free to commit any further clarifications as may be deemed appropriate.</pre>
    </div>

    <div id="c23" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=9263#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-11-03 18:46:05 UTC
        </span>

      </div>




<pre class="bz_comment_text">All of the actual bugs are fixed, so closing.</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=9263">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=9263">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=9263">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=9263&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=9263" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=9263&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635622002-tyFTzYFi9Axti7tPgQYDlNzv64ICqIsrpZGAConhGD4">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>