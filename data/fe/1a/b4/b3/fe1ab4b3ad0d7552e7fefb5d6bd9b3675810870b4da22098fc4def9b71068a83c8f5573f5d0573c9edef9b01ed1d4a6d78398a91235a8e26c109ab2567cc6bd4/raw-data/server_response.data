<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>
    
    
      
    
    
      Issue 2075273002: Resource requests from Save-Page-As should go through CanRequestURL checks. -
    
    Code Review
  </title>
  <link rel="icon" href="/static/favicon.ico" />
  <link type="text/css" rel="stylesheet"
  href="/static/styles.css?v=408576698
" />
  <script type="text/javascript" src="/static/autocomplete/lib/jquery.js"></script>
  <script type="text/javascript"
    src="/static/script.js?v=408576698
"></script>
   <!-- head block to insert js/css for forms processing -->
   
   <!-- /head -->
</head>
<body onunload="M_unloadPage();">

<!-- Begin help window -->
<script type="text/javascript"><!--
var xsrfToken = '927db5e7a47795fddbb572514074d888';
var helpDisplayed = false;
document.onclick = M_clickCommon;
var media_url = "/static/";
var base_url = "/";
// -->
</script>
<div id="help" style="display: none;">

<div style="font-size: medium; text-align: center;">Keyboard Shortcuts</div>
<hr />
<table class="shortcuts">
  <tr valign="top">
    <td>
      <table>
        <tr>
          <td></td><th>File</th>
        </tr>
        <tr>
          <td><span>u</span> <b>:</b></td><td>up to issue</td>
        </tr>
        <tr>
          <td><span>j</span> / <span>k</span> <b>:</b></td><td>jump to file after / before current file</td>
        </tr>
        <tr>
          <td><span>J</span> / <span>K</span> <b>:</b></td><td>jump to next file with a comment after / before current file</td>
        </tr>
        <tr>
          <td></td><th>Side-by-side diff</th>
        </tr>
        <tr>
          <td><span>i</span> <b>:</b></td><td>toggle intra-line diffs</td>
        </tr>
        <tr>
          <td><span>e</span> <b>:</b></td><td>expand all comments</td>
        </tr>
        <tr>
          <td><span>c</span> <b>:</b></td><td>collapse all comments</td>
        </tr>
        <tr>
          <td><span>s</span> <b>:</b></td><td>toggle showing all comments</td>
        </tr>
        <tr>
          <td><span>n</span> / <span>p</span> <b>:</b></td><td>next / previous diff chunk or comment</td>
        </tr>
        <tr>
          <td><span>N</span> / <span>P</span> <b>:</b></td><td>next / previous comment</td>
        </tr>
        <tr>
          <td><span>&lt;Up&gt;</span> / <span>&lt;Down&gt;</span> <b>:</b></td><td>next / previous line</td>
        </tr>
      </table>
    </td>
    <td>
      <table>
        <tr>
          <td></td><th>Issue</th>
        </tr>
        <tr>
          <td><span>u</span> <b>:</b></td><td>up to list of issues</td>
        </tr>
        <tr>
          <td><span>j</span> / <span>k</span> <b>:</b></td><td>jump to patch after / before current patch</td>
        </tr>
        <tr>
          <td><span>o</span> / <span>&lt;Enter&gt;</span> <b>:</b></td><td>open current patch in side-by-side view</td>
        </tr>
        <tr>
          <td><span>i</span> <b>:</b></td><td>open current patch in unified diff view</td>
        </tr>
        <tr><td>&nbsp;</td></tr>
          <tr><td></td><th>Issue List</th></tr>
        <tr>
          <td><span>j</span> / <span>k</span> <b>:</b></td><td>jump to issue after / before current issue</td>
        </tr>
        <tr>
          <td><span>o</span> / <span>&lt;Enter&gt;</span> <b>:</b></td><td>open current issue</td>
        </tr>
      </table>
    </td>
  </tr>

</table>
</div>
<!-- End help window -->

<div align="right">

<div style="float:left; font-size:x-large"><img style="vertical-align:middle" src="/static/chromium-24.png" /> Chromium Code Reviews</div>




<b>chromiumcodereview-hr@appspot.gserviceaccount.com (chromiumcodereview-hr)</b>
|

<span style="color:red">Please choose your nickname with</span>
<a class="novisit" href="/settings">Settings</a>
|


<a class="novisit" target="_blank"
   href="http://code.google.com/p/rietveld/wiki/CodeReviewHelp">Help</a>

|
<a class="novisit" href="http://www.chromium.org/">Chromium Project</a>
|
<a class="novisit" href="https://chromium-review.googlesource.com/dashboard/self?polygerrit=1">Gerrit Changes</a>
|

<a class="novisit" href="https://codereview.chromium.org/_ah/logout?continue=https://accounts.google.com/Logout%3Fcontinue%3Dhttps://uc.appengine.google.com/_ah/logout%253Fcontinue%253Dhttps://google.com/url%25253Fsa%25253DD%252526q%25253Dhttps://codereview.chromium.org/2075273002%252526ust%25253D1608542699295700%252526usg%25253DAFQjCNGDUvrcYOnBDAj4gNX1BTPGYYlgSw%26service%3Dah">Sign out</a>

</div>
<div class="counter">(506)</div>
<br />
<div class="mainmenu">
  
  <a href="/" class="active">Issues</a>
  <a href="/search">Search</a>

</div>
<div class="mainmenu2">
  
  
    &nbsp;&nbsp;&nbsp;
    <a href="/mine">My Issues</a>
    |
    <a href="/starred">Starred</a>
    &nbsp;&nbsp;&nbsp;
    <a href="/all?closed=0">Open</a>
    |
    <a href="/all?closed=1">Closed</a>
    |
    <a href="/all">All</a>
  

</div>

<div>

  <h2>
    <span id="issue-star-2075273002">
  
    
      <img src="/static/star-dark.gif" width="15" height="15" border="0">
    
  
</span>

    Issue <a href="/2075273002/"
               onmouseover="M_showPopUp(this, 'popup-issue');">
            2075273002</a>:
    Resource requests from Save-Page-As should go through CanRequestURL checks.  (Closed) 
  </h2>

  <table class="issue-details" border="0" width="100%">
    <tr valign="top">

      <td class="meta" width="20%">
        <div class="issue_details_sidebar">
          <div><b>Created:</b><br/>
            4 years, 6 months ago by <a href="/user/%C5%81ukasz%20Anforowicz" onMouseOver="M_showUserInfoPopup(this)">Łukasz Anforowicz</a>
          </div>
          <div><b>Modified:</b><br/>
            4 years, 4 months ago
          </div>
          <div><b>Reviewers:</b><br/>
            <a href="/user/asanka" onMouseOver="M_showUserInfoPopup(this)">asanka</a>, <span class='approval'><a href="/user/Randy%20Smith%20(Not%20in%20Mondays)" onMouseOver="M_showUserInfoPopup(this)">Randy Smith (Not in Mondays)</a></span>, <span class='approval'><a href="/user/mmenke" onMouseOver="M_showUserInfoPopup(this)">mmenke</a></span>
          </div>
          
          <div><b>CC:</b><br/>
            asanka, chromium-reviews, darin-cc_chromium.org, jam, loading-reviews_chromium.org, rginda+watch_chromium.org, site-isolation-reviews_chromium.org
          </div>
          
          
          <div><b>Base URL:</b><br/>
            
            https://chromium.googlesource.com/chromium/src.git@master
            
          </div>
          
          
          <div><b>Target Ref:</b><br/>
            refs/pending/heads/master
          </div>
          
          
          <div><b>Project:</b><br/>
            <a href="/search?project=chromium">
              chromium
            </a>
          </div>
          
          <div><b>Visibility:</b><br/>
            
                Public.
            
          </div>
          
          <div><a title="Find reviews for the same repository ID - c14d891d44f0afff64e56ed7c9702df1d807b1ee"
               href="/search?repo_guid=c14d891d44f0afff64e56ed7c9702df1d807b1ee">
            <b>More Reviews</b></a>
          </div>
          
        </div>
      </td>

      <td style="padding-left: .8em; padding-right: .8em;" width="80%">
        




  <h3><a id="issue-description-pointer"
     href="javascript:M_toggleSection('issue-description')"
     class="toggled-section opentriangle">
    Description</a></h3>
  <div id="issue-description">Resource requests from Save-Page-As should go through CanRequestURL checks.

This CL:

- Added checks to ResourceDispatcherHostImpl::BeginSaveFile to verify if
  the renderer process is authorized to access a given resource.

- Removed separate code path for file: URIs that used to be implemented
  in SaveFileManager::SaveLocalFile.  Avoiding a separate code path
  helps consolidate all authorization checks in one place.

BUG=<a href="https://bugs.chromium.org/p/chromium/issues/detail?id=616429">616429</a>
Committed: <a href="https://crrev.com/eff8e457298d01b437e4fd78194ad6de3c8d7ad6">https://crrev.com/eff8e457298d01b437e4fd78194ad6de3c8d7ad6</a>
Cr-Commit-Position: refs/heads/master@{#408235}
  </div>




  <h3>
    <a id="ps-1-pointer"
       href="/2075273002/#ps1"
       onclick="M_toggleSectionForPS('2075273002', '1')"
       class="toggled-section ">
      Patch Set 1
      
      <span class="anchor">#</span>
    </a>
  </h3>

  
    <div>
      <i>Total comments:</i> 17
      
    </div>
  

  <div id="ps-1"
  
       style="display:none">
  
  </div>
  

  <h3>
    <a id="ps-20001-pointer"
       href="/2075273002/#ps20001"
       onclick="M_toggleSectionForPS('2075273002', '20001')"
       class="toggled-section ">
      Patch Set 2
      : Attribute save-item-related network requests to the right frame.
      <span class="anchor">#</span>
    </a>
  </h3>

  

  <div id="ps-20001"
  
       style="display:none">
  
  </div>
  

  <h3>
    <a id="ps-40001-pointer"
       href="/2075273002/#ps40001"
       onclick="M_toggleSectionForPS('2075273002', '40001')"
       class="toggled-section ">
      Patch Set 3
      : Revert changes that unnecessarily break legitimate cases.
      <span class="anchor">#</span>
    </a>
  </h3>

  

  <div id="ps-40001"
  
       style="display:none">
  
  </div>
  

  <h3>
    <a id="ps-60001-pointer"
       href="/2075273002/#ps60001"
       onclick="M_toggleSectionForPS('2075273002', '60001')"
       class="toggled-section ">
      Patch Set 4
      : Add test that saving from a local file continues to work (despite removal of SaveFileManager::SaveL…
      <span class="anchor">#</span>
    </a>
  </h3>

  

  <div id="ps-60001"
  
       style="display:none">
  
  </div>
  

  <h3>
    <a id="ps-80001-pointer"
       href="/2075273002/#ps80001"
       onclick="M_toggleSectionForPS('2075273002', '80001')"
       class="toggled-section ">
      Patch Set 5
      : Rebasing...
      <span class="anchor">#</span>
    </a>
  </h3>

  

  <div id="ps-80001"
  
       style="display:none">
  
  </div>
  

  <h3>
    <a id="ps-100001-pointer"
       href="/2075273002/#ps100001"
       onclick="M_toggleSectionForPS('2075273002', '100001')"
       class="toggled-section ">
      Patch Set 6
      : Updated docs.
      <span class="anchor">#</span>
    </a>
  </h3>

  
    <div>
      <i>Total comments:</i> 10
      
    </div>
  

  <div id="ps-100001"
  
       style="display:none">
  
  </div>
  

  <h3>
    <a id="ps-120001-pointer"
       href="/2075273002/#ps120001"
       onclick="M_toggleSectionForPS('2075273002', '120001')"
       class="toggled-section ">
      Patch Set 7
      : Tried addressing CR feedback from rdsmith@ and mmenke@.
      <span class="anchor">#</span>
    </a>
  </h3>

  

  <div id="ps-120001"
  
       style="display:none">
  
  </div>
  

  <h3>
    <a id="ps-140001-pointer"
       href="/2075273002/#ps140001"
       onclick="M_toggleSectionForPS('2075273002', '140001')"
       class="toggled-section ">
      Patch Set 8
      : Fixed accuracy of the frame-counting-comment in the browser test.
      <span class="anchor">#</span>
    </a>
  </h3>

  

  <div id="ps-140001"
  
       style="display:none">
  
  </div>
  

  <h3>
    <a id="ps-160001-pointer"
       href="/2075273002/#ps160001"
       onclick="M_toggleSectionForPS('2075273002', '160001')"
       class="toggled-section ">
      Patch Set 9
      : Using ResourceLoader to cancel unauthorized resource request.
      <span class="anchor">#</span>
    </a>
  </h3>

  

  <div id="ps-160001"
  
       style="display:none">
  
  </div>
  

  <h3>
    <a id="ps-180001-pointer"
       href="/2075273002/#ps180001"
       onclick="M_toggleSectionForPS('2075273002', '180001')"
       class="toggled-section ">
      Patch Set 10
      : Cancelling the request via SaveFileResourceHandler::MarkAsUnauthorized.
      <span class="anchor">#</span>
    </a>
  </h3>

  

  <div id="ps-180001"
  
       style="display:none">
  
  </div>
  

  <h3>
    <a id="ps-200001-pointer"
       href="/2075273002/#ps200001"
       onclick="M_toggleSectionForPS('2075273002', '200001')"
       class="toggled-section ">
      Patch Set 11
      : Rebasing...
      <span class="anchor">#</span>
    </a>
  </h3>

  
    <div>
      <i>Total comments:</i> 2
      
    </div>
  

  <div id="ps-200001"
  
       style="display:none">
  
  </div>
  

  <h3>
    <a id="ps-220001-pointer"
       href="/2075273002/#ps220001"
       onclick="M_toggleSectionForPS('2075273002', '220001')"
       class="toggled-section ">
      Patch Set 12
      : Added comments + added DCHECK(!is_pending) to MarkAsUnauthorized.
      <span class="anchor">#</span>
    </a>
  </h3>

  
    <div>
      <i>Total comments:</i> 2
      
    </div>
  

  <div id="ps-220001"
  
       style="display:none">
  
  </div>
  

  <h3>
    <a id="ps-240001-pointer"
       href="/2075273002/#ps240001"
       onclick="M_toggleSectionForPS('2075273002', '240001')"
       class="toggled-section opentriangle">
      Patch Set 13
      : Replace MarkAsUnauthorized with constructor argument.
      <span class="anchor">#</span>
    </a>
  </h3>

  

  <div id="ps-240001"
  
       style="">
    
<div class="issue-list">

  <div class="pagination">
    <div style="float: left;">
      <i>Created:</i> 4 years, 4 months ago
    </div>
    <div style="float: right;">
      
        Download
          <a href="/download/issue2075273002_240001.diff"
            title="Patchset in text format">[raw]</a>
          <a href="/tarball/2075273002/240001"
            title="Tarball containing the original and patched files">[tar.bz2]</a>
      
    </div>
    <div style="clear:both;"></div>
  </div>

  <table id="queues" style="clear:both;">
    <tr align="left">
      <th colspan="2"></th>
      <th>Unified diffs</th>
      <th>Side-by-side diffs</th>
      <th>Delta from patch set</th>
      <th colspan="3">Stats <font style='font-weight: normal'>(<i>+202 lines, -106 lines</i>)</font></th>
      <th>Patch</th>
    </tr>

    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">M</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250001">
            chrome/browser/download/save_page_browsertest.cc
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/chrome/browser/download/save_page_browsertest.cc">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
          <a href="/2075273002/diff2/1:240001/chrome/browser/download/save_page_browsertest.cc"
             title="Delta from patch set 1">1</a>
        
          <a href="/2075273002/diff2/20001:240001/chrome/browser/download/save_page_browsertest.cc"
             title="Delta from patch set 2">2</a>
        
          <a href="/2075273002/diff2/40001:240001/chrome/browser/download/save_page_browsertest.cc"
             title="Delta from patch set 3">3</a>
        
          <a href="/2075273002/diff2/60001:240001/chrome/browser/download/save_page_browsertest.cc"
             title="Delta from patch set 4">4</a>
        
          <a href="/2075273002/diff2/80001:240001/chrome/browser/download/save_page_browsertest.cc"
             title="Delta from patch set 5">5</a>
        
          <a href="/2075273002/diff2/100001:240001/chrome/browser/download/save_page_browsertest.cc"
             title="Delta from patch set 6">6</a>
        
          <a href="/2075273002/diff2/120001:240001/chrome/browser/download/save_page_browsertest.cc"
             title="Delta from patch set 7">7</a>
        
          <a href="/2075273002/diff2/140001:240001/chrome/browser/download/save_page_browsertest.cc"
             title="Delta from patch set 8">8</a>
        
          <a href="/2075273002/diff2/160001:240001/chrome/browser/download/save_page_browsertest.cc"
             title="Delta from patch set 9">9</a>
        
          <a href="/2075273002/diff2/180001:240001/chrome/browser/download/save_page_browsertest.cc"
             title="Delta from patch set 10">10</a>
        
          <a href="/2075273002/diff2/200001:240001/chrome/browser/download/save_page_browsertest.cc"
             title="Delta from patch set 11">11</a>
        
          <a href="/2075273002/diff2/220001:240001/chrome/browser/download/save_page_browsertest.cc"
             title="Delta from patch set 12">12</a>
        
        </td>
        
          <td style="white-space: nowrap">4 chunks</td>
          <td style="white-space: nowrap">+82 lines, -21 lines</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250001.diff"
             title="Download patch for chrome/browser/download/save_page_browsertest.cc">
            Download
          </a>
        </td>
      </tr>
    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">M</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250002">
            chrome/test/data/save_page/frames-objects.htm
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/chrome/test/data/save_page/frames-objects.htm">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
          <a href="/2075273002/diff2/1:240001/chrome/test/data/save_page/frames-objects.htm"
             title="Delta from patch set 1">1</a>
        
          <a href="/2075273002/diff2/20001:240001/chrome/test/data/save_page/frames-objects.htm"
             title="Delta from patch set 2">2</a>
        
          <a href="/2075273002/diff2/40001:240001/chrome/test/data/save_page/frames-objects.htm"
             title="Delta from patch set 3">3</a>
        
        </td>
        
          <td style="white-space: nowrap">1 chunk</td>
          <td style="white-space: nowrap">+6 lines, -0 lines</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250002.diff"
             title="Download patch for chrome/test/data/save_page/frames-objects.htm">
            Download
          </a>
        </td>
      </tr>
    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">A</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250003">
            chrome/test/data/save_page/text.txt
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/chrome/test/data/save_page/text.txt">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
          <a href="/2075273002/diff2/1:240001/chrome/test/data/save_page/text.txt"
             title="Delta from patch set 1">1</a>
        
          <a href="/2075273002/diff2/20001:240001/chrome/test/data/save_page/text.txt"
             title="Delta from patch set 2">2</a>
        
          <a href="/2075273002/diff2/40001:240001/chrome/test/data/save_page/text.txt"
             title="Delta from patch set 3">3</a>
        
        </td>
        
          <td style="white-space: nowrap">1 chunk</td>
          <td style="white-space: nowrap">+1 line, -0 lines</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250003.diff"
             title="Download patch for chrome/test/data/save_page/text.txt">
            Download
          </a>
        </td>
      </tr>
    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">A</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250004">
            chrome/test/data/save_page/unauthorized-access.htm
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/chrome/test/data/save_page/unauthorized-access.htm">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
        </td>
        
          <td style="white-space: nowrap">1 chunk</td>
          <td style="white-space: nowrap">+16 lines, -0 lines</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250004.diff"
             title="Download patch for chrome/test/data/save_page/unauthorized-access.htm">
            Download
          </a>
        </td>
      </tr>
    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">M</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250005">
            content/browser/download/docs/save-page-as.md
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/content/browser/download/docs/save-page-as.md">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
          <a href="/2075273002/diff2/1:240001/content/browser/download/docs/save-page-as.md"
             title="Delta from patch set 1">1</a>
        
          <a href="/2075273002/diff2/20001:240001/content/browser/download/docs/save-page-as.md"
             title="Delta from patch set 2">2</a>
        
          <a href="/2075273002/diff2/40001:240001/content/browser/download/docs/save-page-as.md"
             title="Delta from patch set 3">3</a>
        
          <a href="/2075273002/diff2/60001:240001/content/browser/download/docs/save-page-as.md"
             title="Delta from patch set 4">4</a>
        
          <a href="/2075273002/diff2/80001:240001/content/browser/download/docs/save-page-as.md"
             title="Delta from patch set 5">5</a>
        
          <a href="/2075273002/diff2/100001:240001/content/browser/download/docs/save-page-as.md"
             title="Delta from patch set 6">6</a>
        
          <a href="/2075273002/diff2/120001:240001/content/browser/download/docs/save-page-as.md"
             title="Delta from patch set 7">7</a>
        
          <a href="/2075273002/diff2/140001:240001/content/browser/download/docs/save-page-as.md"
             title="Delta from patch set 8">8</a>
        
          <a href="/2075273002/diff2/160001:240001/content/browser/download/docs/save-page-as.md"
             title="Delta from patch set 9">9</a>
        
          <a href="/2075273002/diff2/180001:240001/content/browser/download/docs/save-page-as.md"
             title="Delta from patch set 10">10</a>
        
        </td>
        
          <td style="white-space: nowrap">3 chunks</td>
          <td style="white-space: nowrap">+5 lines, -6 lines</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250005.diff"
             title="Download patch for content/browser/download/docs/save-page-as.md">
            Download
          </a>
        </td>
      </tr>
    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">M</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250006">
            content/browser/download/save_file_manager.cc
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/content/browser/download/save_file_manager.cc">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
        </td>
        
          <td style="white-space: nowrap">2 chunks</td>
          <td style="white-space: nowrap">+0 lines, -36 lines</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250006.diff"
             title="Download patch for content/browser/download/save_file_manager.cc">
            Download
          </a>
        </td>
      </tr>
    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">M</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250008">
            content/browser/download/save_file_resource_handler.h
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/content/browser/download/save_file_resource_handler.h">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
          <a href="/2075273002/diff2/1:240001/content/browser/download/save_file_resource_handler.h"
             title="Delta from patch set 1">1</a>
        
          <a href="/2075273002/diff2/20001:240001/content/browser/download/save_file_resource_handler.h"
             title="Delta from patch set 2">2</a>
        
          <a href="/2075273002/diff2/40001:240001/content/browser/download/save_file_resource_handler.h"
             title="Delta from patch set 3">3</a>
        
          <a href="/2075273002/diff2/60001:240001/content/browser/download/save_file_resource_handler.h"
             title="Delta from patch set 4">4</a>
        
          <a href="/2075273002/diff2/80001:240001/content/browser/download/save_file_resource_handler.h"
             title="Delta from patch set 5">5</a>
        
          <a href="/2075273002/diff2/100001:240001/content/browser/download/save_file_resource_handler.h"
             title="Delta from patch set 6">6</a>
        
          <a href="/2075273002/diff2/120001:240001/content/browser/download/save_file_resource_handler.h"
             title="Delta from patch set 7">7</a>
        
          <a href="/2075273002/diff2/140001:240001/content/browser/download/save_file_resource_handler.h"
             title="Delta from patch set 8">8</a>
        
          <a href="/2075273002/diff2/160001:240001/content/browser/download/save_file_resource_handler.h"
             title="Delta from patch set 9">9</a>
        
          <a href="/2075273002/diff2/180001:240001/content/browser/download/save_file_resource_handler.h"
             title="Delta from patch set 10">10</a>
        
          <a href="/2075273002/diff2/200001:240001/content/browser/download/save_file_resource_handler.h"
             title="Delta from patch set 11">11</a>
        
          <a href="/2075273002/diff2/220001:240001/content/browser/download/save_file_resource_handler.h"
             title="Delta from patch set 12">12</a>
        
        </td>
        
          <td style="white-space: nowrap">2 chunks</td>
          <td style="white-space: nowrap">+16 lines, -1 line</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250008.diff"
             title="Download patch for content/browser/download/save_file_resource_handler.h">
            Download
          </a>
        </td>
      </tr>
    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">M</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250007">
            content/browser/download/save_file_resource_handler.cc
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/content/browser/download/save_file_resource_handler.cc">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
          <a href="/2075273002/diff2/1:240001/content/browser/download/save_file_resource_handler.cc"
             title="Delta from patch set 1">1</a>
        
          <a href="/2075273002/diff2/20001:240001/content/browser/download/save_file_resource_handler.cc"
             title="Delta from patch set 2">2</a>
        
          <a href="/2075273002/diff2/40001:240001/content/browser/download/save_file_resource_handler.cc"
             title="Delta from patch set 3">3</a>
        
          <a href="/2075273002/diff2/60001:240001/content/browser/download/save_file_resource_handler.cc"
             title="Delta from patch set 4">4</a>
        
          <a href="/2075273002/diff2/80001:240001/content/browser/download/save_file_resource_handler.cc"
             title="Delta from patch set 5">5</a>
        
          <a href="/2075273002/diff2/100001:240001/content/browser/download/save_file_resource_handler.cc"
             title="Delta from patch set 6">6</a>
        
          <a href="/2075273002/diff2/120001:240001/content/browser/download/save_file_resource_handler.cc"
             title="Delta from patch set 7">7</a>
        
          <a href="/2075273002/diff2/140001:240001/content/browser/download/save_file_resource_handler.cc"
             title="Delta from patch set 8">8</a>
        
          <a href="/2075273002/diff2/160001:240001/content/browser/download/save_file_resource_handler.cc"
             title="Delta from patch set 9">9</a>
        
          <a href="/2075273002/diff2/180001:240001/content/browser/download/save_file_resource_handler.cc"
             title="Delta from patch set 10">10</a>
        
          <a href="/2075273002/diff2/200001:240001/content/browser/download/save_file_resource_handler.cc"
             title="Delta from patch set 11">11</a>
        
          <a href="/2075273002/diff2/220001:240001/content/browser/download/save_file_resource_handler.cc"
             title="Delta from patch set 12">12</a>
        
        </td>
        
          <td style="white-space: nowrap">5 chunks</td>
          <td style="white-space: nowrap">+17 lines, -9 lines</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250007.diff"
             title="Download patch for content/browser/download/save_file_resource_handler.cc">
            Download
          </a>
        </td>
      </tr>
    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">M</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250010">
            content/browser/download/save_item.h
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/content/browser/download/save_item.h">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
          <a href="/2075273002/diff2/1:240001/content/browser/download/save_item.h"
             title="Delta from patch set 1">1</a>
        
        </td>
        
          <td style="white-space: nowrap">3 chunks</td>
          <td style="white-space: nowrap">+11 lines, -2 lines</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250010.diff"
             title="Download patch for content/browser/download/save_item.h">
            Download
          </a>
        </td>
      </tr>
    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">M</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250009">
            content/browser/download/save_item.cc
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/content/browser/download/save_item.cc">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
          <a href="/2075273002/diff2/1:240001/content/browser/download/save_item.cc"
             title="Delta from patch set 1">1</a>
        
          <a href="/2075273002/diff2/20001:240001/content/browser/download/save_item.cc"
             title="Delta from patch set 2">2</a>
        
          <a href="/2075273002/diff2/40001:240001/content/browser/download/save_item.cc"
             title="Delta from patch set 3">3</a>
        
          <a href="/2075273002/diff2/60001:240001/content/browser/download/save_item.cc"
             title="Delta from patch set 4">4</a>
        
          <a href="/2075273002/diff2/80001:240001/content/browser/download/save_item.cc"
             title="Delta from patch set 5">5</a>
        
          <a href="/2075273002/diff2/100001:240001/content/browser/download/save_item.cc"
             title="Delta from patch set 6">6</a>
        
          <a href="/2075273002/diff2/120001:240001/content/browser/download/save_item.cc"
             title="Delta from patch set 7">7</a>
        
          <a href="/2075273002/diff2/140001:240001/content/browser/download/save_item.cc"
             title="Delta from patch set 8">8</a>
        
          <a href="/2075273002/diff2/160001:240001/content/browser/download/save_item.cc"
             title="Delta from patch set 9">9</a>
        
          <a href="/2075273002/diff2/180001:240001/content/browser/download/save_item.cc"
             title="Delta from patch set 10">10</a>
        
        </td>
        
          <td style="white-space: nowrap">1 chunk</td>
          <td style="white-space: nowrap">+3 lines, -1 line</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250009.diff"
             title="Download patch for content/browser/download/save_item.cc">
            Download
          </a>
        </td>
      </tr>
    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">M</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250011">
            content/browser/download/save_package.cc
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/content/browser/download/save_package.cc">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
          <a href="/2075273002/diff2/1:240001/content/browser/download/save_package.cc"
             title="Delta from patch set 1">1</a>
        
          <a href="/2075273002/diff2/20001:240001/content/browser/download/save_package.cc"
             title="Delta from patch set 2">2</a>
        
          <a href="/2075273002/diff2/40001:240001/content/browser/download/save_package.cc"
             title="Delta from patch set 3">3</a>
        
          <a href="/2075273002/diff2/60001:240001/content/browser/download/save_package.cc"
             title="Delta from patch set 4">4</a>
        
        </td>
        
          <td style="white-space: nowrap">5 chunks</td>
          <td style="white-space: nowrap">+30 lines, -25 lines</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250011.diff"
             title="Download patch for content/browser/download/save_package.cc">
            Download
          </a>
        </td>
      </tr>
    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">M</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250012">
            content/browser/download/save_types.h
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/content/browser/download/save_types.h">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
        </td>
        
          <td style="white-space: nowrap">1 chunk</td>
          <td style="white-space: nowrap">+0 lines, -3 lines</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250012.diff"
             title="Download patch for content/browser/download/save_types.h">
            Download
          </a>
        </td>
      </tr>
    
      <tr name="patch">
        <td class="first" width="14"><img src="/static/closedtriangle.gif"
    style="visibility: hidden;" width="12" height="9" /></td>
        <td style="white-space: nowrap">M</td>
        <td>
          <a class="noul"
             href="/2075273002/patch/240001/250013">
            content/browser/loader/resource_dispatcher_host_impl.cc
          </a>
        </td>
        <td>
          <a class="noul"
             href="/2075273002/diff/240001/content/browser/loader/resource_dispatcher_host_impl.cc">
            View
          </a>
        </td>
        <td style="white-space: nowrap">
        
          <a href="/2075273002/diff2/1:240001/content/browser/loader/resource_dispatcher_host_impl.cc"
             title="Delta from patch set 1">1</a>
        
          <a href="/2075273002/diff2/20001:240001/content/browser/loader/resource_dispatcher_host_impl.cc"
             title="Delta from patch set 2">2</a>
        
          <a href="/2075273002/diff2/40001:240001/content/browser/loader/resource_dispatcher_host_impl.cc"
             title="Delta from patch set 3">3</a>
        
          <a href="/2075273002/diff2/60001:240001/content/browser/loader/resource_dispatcher_host_impl.cc"
             title="Delta from patch set 4">4</a>
        
          <a href="/2075273002/diff2/80001:240001/content/browser/loader/resource_dispatcher_host_impl.cc"
             title="Delta from patch set 5">5</a>
        
          <a href="/2075273002/diff2/100001:240001/content/browser/loader/resource_dispatcher_host_impl.cc"
             title="Delta from patch set 6">6</a>
        
          <a href="/2075273002/diff2/120001:240001/content/browser/loader/resource_dispatcher_host_impl.cc"
             title="Delta from patch set 7">7</a>
        
          <a href="/2075273002/diff2/140001:240001/content/browser/loader/resource_dispatcher_host_impl.cc"
             title="Delta from patch set 8">8</a>
        
          <a href="/2075273002/diff2/160001:240001/content/browser/loader/resource_dispatcher_host_impl.cc"
             title="Delta from patch set 9">9</a>
        
          <a href="/2075273002/diff2/180001:240001/content/browser/loader/resource_dispatcher_host_impl.cc"
             title="Delta from patch set 10">10</a>
        
          <a href="/2075273002/diff2/200001:240001/content/browser/loader/resource_dispatcher_host_impl.cc"
             title="Delta from patch set 11">11</a>
        
          <a href="/2075273002/diff2/220001:240001/content/browser/loader/resource_dispatcher_host_impl.cc"
             title="Delta from patch set 12">12</a>
        
        </td>
        
          <td style="white-space: nowrap">1 chunk</td>
          <td style="white-space: nowrap">+15 lines, -2 lines</td>
        
        <td style="white-space: nowrap">
          
            0 comments
            
            
          
        </td>
        <td>
          <a href="/download/issue2075273002_240001_250013.diff"
             title="Download patch for content/browser/loader/resource_dispatcher_host_impl.cc">
            Download
          </a>
        </td>
      </tr>
    
  </table>

  
  
</div>

  
  </div>
  
    <script language="JavaScript" type="text/javascript">
         <!--
         var lastPSId = 240001;
         // -->
       </script>
  




  <h3>
    <a id="messages-pointer"
       href="javascript:M_toggleSection('messages')"
       class="toggled-section opentriangle">
      Messages
    </a>
  </h3>

  
    <div><i>
    Total messages: 38 (12 generated)
    </i></div>
  

  <div id="messages">
    <div style="margin-bottom: .5em;">
      <a href="javascript:M_expandAllVisibleComments('cl', 38)">
        Expand Messages</a>
      |
      <a href="javascript:M_collapseAllVisibleComments('cl', 38)">
        Collapse Messages</a>
      
      |
      <a href="javascript:M_showGeneratedComments(38)">
        Show Generated Messages</a>
      |
      <a href="javascript:M_hideGeneratedComments(38)">
        Hide Generated Messages</a>
      
    </div>

    
      <div class="message    generated"
           style="display: none"
           id="generated-msg1"
           name="0">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(0)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-0">
                          lukasza@chromium.org changed reviewers: + asanka@chromium.org
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 6 months ago
		(2016-06-18 00:37:19 UTC)
                <a href="#msg1">#1</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-0"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-0"
            ><a href="mailto:lukasza@chromium.org">lukasza@chromium.org</a> changed reviewers:
+ <a href="mailto:asanka@chromium.org">asanka@chromium.org</a></pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg2"
           name="1">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(1)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-1">
                          Asanka, can you please take a look? I am not quite sure if this CL ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 6 months ago
		(2016-06-18 00:37:20 UTC)
                <a href="#msg2">#2</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-1"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-1"
            >Asanka, can you please take a look?

I am not quite sure if this CL is ready to land, but I think it is ready for
discussion about the overall direction + about the remaining open issues:

- open issue #1: using correct child_id (frame with the given resource, rather
than always the main frame - these can differ with OOPIFs present)

- open issue #2: is it ok to rewrite a link to inaccessible resources as
something like &lt;img src=&quot;./foo_files/resource-failed-to-save-&lt;guid&gt;.txt&quot;&gt;

<a href="https://codereview.chromium.org/2075273002/diff/1/chrome/test/data/save_page/unauthorized-access.htm" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/chrome/test/data/save_page/...</a>
File chrome/test/data/save_page/unauthorized-access.htm (right):

<a href="https://codereview.chromium.org/2075273002/diff/1/chrome/test/data/save_page/unauthorized-access.htm#newcode16" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/chrome/test/data/save_page/...</a>
chrome/test/data/save_page/unauthorized-access.htm:16: &lt;/html&gt;
In theory I could reuse b.htm here, but a separate test file seems cleaner, more
readable (i.e. allows for comments like I have above).

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_file_manager.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
File content/browser/download/save_file_manager.cc (left):

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_file_manager.cc#oldcode360" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
content/browser/download/save_file_manager.cc:360: }
The deleted code was added in the &quot;initial commit&quot;.

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
File content/browser/download/save_package.cc (left):

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc#oldcode1001" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
content/browser/download/save_package.cc:1001: }
I&#39;ve added these checks in <a href="https://codereview.chromium.org/1812693002" rel="nofollow">https://codereview.chromium.org/1812693002</a>.  I have a
feeling that they were necessary (i.e. that some tests were failing otherwise),
but I cannot recall the exact reasons why I&#39;ve added these checks.  Tests are
green, so I guess writing a link to &quot;resource-failed-to-save-&lt;guid&gt;.txt&quot; is
okay.

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
File content/browser/download/save_package.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc#newcode837" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
content/browser/download/save_package.cc:837: // (OTOH, this only matters if
OOPIFs are present).
I need to double-check how process_id/child_id and render_view_routing_id and
render_frame_routing_id are used by ResourceDispatcherHostImpl.  Maybe I should
just pass the right thing here (with appropriate tracking via an extra map in
SavePackage)?  OTOH, this would make it harder to merge the fix to beta/stable
branches...


FWIW, I don&#39;t think this is a ship blocker for --isolate-extensions, but please
double-check my thought process.

AFAICT, we will get the following behavior, if we always pass main frame&#39;s ID
(instead of the ID of the frame this resource originated from):

case #1: main frame authorized, subframe unauthorized: security bug, BUT this
would only impact the case when saving a page where the main frame comes from an
extension (I am not sure if this is possible;  so far I couldn&#39;t trigger
Save-Page dialog for background pages).

case #2: main frame unauthorized, subframe authorized: not a security bug; 
impact is that some legitimate resources are not saved.  This should not be an
issue because AFAIK we don&#39;t consider save-page-as feature as a blocker for
--isolate-extensions.

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc#newcode1001" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
content/browser/download/save_package.cc:1001: &quot;resource-failed-to-save-&quot; +
base::GenerateGUID() + &quot;.txt&quot;));
This is tricky.  We could analyze this with an example of a website that embeds
a resource (i.e. an &lt;img&gt; tag) with file: URI, but it will be easier to
understand with an example of an *internet* website that links to a resources on
the *intranet*.  Currently we forbid websites from linking to resources on the
local filesystem, but in the future we plan to forbid internet websites from
linking to intranet websites (<a href="https://crbug.com/590714" rel="nofollow">https://crbug.com/590714</a>).

Let&#39;s say that Eve creates an internet webpage with a tag saying: &lt;img
src=&quot;http://bob-s-intranet/send-all-money-to-eve.jpg&quot;&gt;.  Now, I claim that:
1. The browser should not access the intranet link when *showing* the internet
website
2. The browser should not access the intranet link when *saving* the internet
website
3. The browser should not access the intranet link when *showing* the *saved*
contents of the internet website

To prevent item 3 above, we should not save the intranet link when serializing
the &quot;complete html&quot; of the internet webpage being saved.  I&#39;ve decided to
instead serialize a link to a non-existent file (non-existency guarantess by
uniqueness of the guid).  I am not sure if I am happy with this solution, but I
can&#39;t think of a better alternative.

I recognize that the code above can negatively impact legitimate/non-malicious
scenarios.  For example previously, the saved page could be opened and would
renderer all resources even if some resources were inaccessible during the save
process (e.g. because of network flakiness, not because of authorization
issues).

Hmmm... maybe we should differentiate between unauthorized and other error
codes?  OTOH, this would seem fragile (i.e. would require exhaustively
enumerating all future error codes related to unauthorized access OR all future
error codes related to authorized access).  WDYT?

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/reso...</a>
File content/browser/loader/resource_dispatcher_host_impl.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1915" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/reso...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1915: url)) {
This is based on a check done by ResourceDispatcherHostImpl::BeginDownload. 
AFAIK CanRequestURL(child_id) is the best we can do (i.e. 1) there are no more
granular [say, origin-based] checks and 2) no other checks apply [say,
ShouldServiceRequest checks]).</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    generated"
           style="display: none"
           id="generated-msg3"
           name="2">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(2)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-2">
                          Description was changed from ========== Resource requests from Save-Page-As should go through CanRequestURL checks. BUG=616429 ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 6 months ago
		(2016-06-18 00:38:03 UTC)
                <a href="#msg3">#3</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-2"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-2"
            >Description was changed from

==========
Resource requests from Save-Page-As should go through CanRequestURL checks.

BUG=616429
==========

to

==========
Resource requests from Save-Page-As should go through CanRequestURL checks.

This CL:

- Added checks to ResourceDispatcherHostImpl::BeginSaveFile to verify if
  the renderer process is authorized to access a given resource.

- Removed separate code path for file: URIs that used to be implemented
  in SaveFileManager::SaveLocalFile.  Avoiding a separate code path
  helps consolidate all authorization checks in one place.

- When serializing HTML, we no longer emit the original URI for
  resources that failed to save to disk.  Instead we write a path to a
  non-existant local file.  This ensures that a malicious website cannot
  trigger access to an unauthorized resource at a later time (when the
  saved page is opened).  It is recognized that this behavior change also
  impacts non-malicious scenarios (i.e. when a resource failed to save
  because of a network issue).

BUG=616429
==========</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg4"
           name="3">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(3)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>asanka</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-3">
                          https://codereview.chromium.org/2075273002/diff/1/chrome/test/data/save_page/unauthorized-access.htm File chrome/test/data/save_page/unauthorized-access.htm (right): https://codereview.chromium.org/2075273002/diff/1/chrome/test/data/save_page/unauthorized-access.htm#newcode16 chrome/test/data/save_page/unauthorized-access.htm:16: &lt;/html&gt; On 2016/06/18 at 00:37:20, Łukasz Anforowicz wrote: &gt; ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 6 months ago
		(2016-06-20 20:24:19 UTC)
                <a href="#msg4">#4</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-3"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-3"
            ><a href="https://codereview.chromium.org/2075273002/diff/1/chrome/test/data/save_page/unauthorized-access.htm" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/chrome/test/data/save_page/...</a>
File chrome/test/data/save_page/unauthorized-access.htm (right):

<a href="https://codereview.chromium.org/2075273002/diff/1/chrome/test/data/save_page/unauthorized-access.htm#newcode16" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/chrome/test/data/save_page/...</a>
chrome/test/data/save_page/unauthorized-access.htm:16: &lt;/html&gt;
On 2016/06/18 at 00:37:20, Łukasz Anforowicz wrote:
&gt; In theory I could reuse b.htm here, but a separate test file seems cleaner,
more readable (i.e. allows for comments like I have above).

Acknowledged.

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
File content/browser/download/save_package.cc (left):

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc#oldcode1001" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
content/browser/download/save_package.cc:1001: }
On 2016/06/18 at 00:37:20, Łukasz Anforowicz wrote:
&gt; I&#39;ve added these checks in <a href="https://codereview.chromium.org/1812693002" rel="nofollow">https://codereview.chromium.org/1812693002</a>.  I have
a feeling that they were necessary (i.e. that some tests were failing
otherwise), but I cannot recall the exact reasons why I&#39;ve added these checks. 
Tests are green, so I guess writing a link to
&quot;resource-failed-to-save-&lt;guid&gt;.txt&quot; is okay.

Acknowledged.

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
File content/browser/download/save_package.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc#newcode837" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
content/browser/download/save_package.cc:837: // (OTOH, this only matters if
OOPIFs are present).
On 2016/06/18 at 00:37:20, Łukasz Anforowicz wrote:
&gt; I need to double-check how process_id/child_id and render_view_routing_id and
render_frame_routing_id are used by ResourceDispatcherHostImpl.  Maybe I should
just pass the right thing here (with appropriate tracking via an extra map in
SavePackage)?  OTOH, this would make it harder to merge the fix to beta/stable
branches...
&gt; 
&gt; 
&gt; FWIW, I don&#39;t think this is a ship blocker for --isolate-extensions, but
please double-check my thought process.
&gt; 
&gt; AFAICT, we will get the following behavior, if we always pass main frame&#39;s ID
(instead of the ID of the frame this resource originated from):
&gt; 
&gt; case #1: main frame authorized, subframe unauthorized: security bug, BUT this
would only impact the case when saving a page where the main frame comes from an
extension (I am not sure if this is possible;  so far I couldn&#39;t trigger
Save-Page dialog for background pages).
&gt; 
&gt; case #2: main frame unauthorized, subframe authorized: not a security bug; 
impact is that some legitimate resources are not saved.  This should not be an
issue because AFAIK we don&#39;t consider save-page-as feature as a blocker for
--isolate-extensions.

Thanks for calling this out. In addition to the two cases listed above, we can
also be in a situation where the parent and the child frames are using different
request contexts via storage partitions. In this case invoking &#39;Save as&#39; would
leak PII by mixing requests from different cookie stores. We do consider this to
be a problem.

In practice, this only applies to apps that use &lt;webview&gt; elements. I don&#39;t know
what would happen if one were to attempt to invoke &#39;save as..&#39; on an app
document. Invoking &quot;Save as&quot; inside the webview (if it&#39;s even possible), should
correctly use the inner WebContents. This is certainly something worth testing.

<a href="https://codereview.chromium.org/1924473003" rel="nofollow">https://codereview.chromium.org/1924473003</a> is the CL where I added
StorageParition safety to regular downloads. You might be able to add something
like the test changes made there for
chrome/browser/apps/guest_view/web_view_browsertest.cc .

How difficult do you think it would be to get the correct set of IDs here?

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc#newcode1001" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
content/browser/download/save_package.cc:1001: &quot;resource-failed-to-save-&quot; +
base::GenerateGUID() + &quot;.txt&quot;));
On 2016/06/18 at 00:37:20, Łukasz Anforowicz wrote:
&gt; This is tricky.  We could analyze this with an example of a website that
embeds a resource (i.e. an &lt;img&gt; tag) with file: URI, but it will be easier to
understand with an example of an *internet* website that links to a resources on
the *intranet*.  Currently we forbid websites from linking to resources on the
local filesystem, but in the future we plan to forbid internet websites from
linking to intranet websites (<a href="https://crbug.com/590714" rel="nofollow">https://crbug.com/590714</a>).
&gt; 
&gt; Let&#39;s say that Eve creates an internet webpage with a tag saying: &lt;img
src=&quot;http://bob-s-intranet/send-all-money-to-eve.jpg&quot;&gt;.  Now, I claim that:
&gt; 1. The browser should not access the intranet link when *showing* the internet
website
&gt; 2. The browser should not access the intranet link when *saving* the internet
website
&gt; 3. The browser should not access the intranet link when *showing* the *saved*
contents of the internet website
&gt; 
&gt; To prevent item 3 above, we should not save the intranet link when serializing
the &quot;complete html&quot; of the internet webpage being saved.  I&#39;ve decided to
instead serialize a link to a non-existent file (non-existency guarantess by
uniqueness of the guid).  I am not sure if I am happy with this solution, but I
can&#39;t think of a better alternative.
&gt; 
&gt; I recognize that the code above can negatively impact legitimate/non-malicious
scenarios.  For example previously, the saved page could be opened and would
renderer all resources even if some resources were inaccessible during the save
process (e.g. because of network flakiness, not because of authorization
issues).
&gt; 
&gt; Hmmm... maybe we should differentiate between unauthorized and other error
codes?  OTOH, this would seem fragile (i.e. would require exhaustively
enumerating all future error codes related to unauthorized access OR all future
error codes related to authorized access).  WDYT?

As long as we are talking about subresources, I&#39;m okay with treating all failed
subresources the same way as ones that were not found.

#2 should guarantee that the process of saving doesn&#39;t persist a mix of
resources from intranet/internet (unless the source document is in the
intranet?). So there shouldn&#39;t be a resource on disk to violate #3. However, the
saved document shouldn&#39;t suddenly gain the ability to fiddle with the intranet
if it didn&#39;t have that ability before. #3, I think, would only be possible by
preventing file:// URLs from accessing intranet hosts. That doesn&#39;t seem in
scope for issue 590714, at least from my reading.

Note that mixing internet/intranet appears to be a common mechanism when dealing
with IOT stuff like IP connected cameras.

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_types.h" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
File content/browser/download/save_types.h (left):

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_types.h#oldcode44" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
content/browser/download/save_types.h:44: SAVE_FILE_FROM_FILE
Thanks for getting rid of this case.

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/reso...</a>
File content/browser/loader/resource_dispatcher_host_impl.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1915" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/reso...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1915: url)) {
On 2016/06/18 at 00:37:20, Łukasz Anforowicz wrote:
&gt; This is based on a check done by ResourceDispatcherHostImpl::BeginDownload. 
AFAIK CanRequestURL(child_id) is the best we can do (i.e. 1) there are no more
granular [say, origin-based] checks and 2) no other checks apply [say,
ShouldServiceRequest checks]).

Other things to check (you&#39;ve probably got this covered, but listing here to
doublecheck):

* Whether a subresource load can trigger an authentication dialog. [should be
no]
* Whether URL embedded identities are stripped from URLs for cross origin
subresource loads. [should be yes]
* Whether blob URLs work.</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg5"
           name="4">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(4)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-4">
                          Thanks for the feedback. I haven&#39;t been able to address all of your feedback (the ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 6 months ago
		(2016-06-21 16:39:34 UTC)
                <a href="#msg5">#5</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-4"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-4"
            >Thanks for the feedback.  I haven&#39;t been able to address all of your feedback
(the big missing part is tests that you&#39;ve suggested adding), but I wanted to
reply before disappearing for vacation (today is my last day, I&#39;ll be back on
July 18th).

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
File content/browser/download/save_package.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc#newcode837" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
content/browser/download/save_package.cc:837: // (OTOH, this only matters if
OOPIFs are present).
On 2016/06/20 20:24:18, asanka wrote:
&gt; On 2016/06/18 at 00:37:20, Łukasz Anforowicz wrote:
&gt; &gt; I need to double-check how process_id/child_id and render_view_routing_id
and
&gt; render_frame_routing_id are used by ResourceDispatcherHostImpl.  Maybe I
should
&gt; just pass the right thing here (with appropriate tracking via an extra map in
&gt; SavePackage)?  OTOH, this would make it harder to merge the fix to beta/stable
&gt; branches...
&gt; &gt; 
&gt; &gt; 
&gt; &gt; FWIW, I don&#39;t think this is a ship blocker for --isolate-extensions, but
&gt; please double-check my thought process.
&gt; &gt; 
&gt; &gt; AFAICT, we will get the following behavior, if we always pass main frame&#39;s
ID
&gt; (instead of the ID of the frame this resource originated from):
&gt; &gt; 
&gt; &gt; case #1: main frame authorized, subframe unauthorized: security bug, BUT
this
&gt; would only impact the case when saving a page where the main frame comes from
an
&gt; extension (I am not sure if this is possible;  so far I couldn&#39;t trigger
&gt; Save-Page dialog for background pages).
&gt; &gt; 
&gt; &gt; case #2: main frame unauthorized, subframe authorized: not a security bug; 
&gt; impact is that some legitimate resources are not saved.  This should not be an
&gt; issue because AFAIK we don&#39;t consider save-page-as feature as a blocker for
&gt; --isolate-extensions.
&gt; 
&gt; Thanks for calling this out. In addition to the two cases listed above, we can
&gt; also be in a situation where the parent and the child frames are using
different
&gt; request contexts via storage partitions. In this case invoking &#39;Save as&#39; would
&gt; leak PII by mixing requests from different cookie stores. We do consider this
to
&gt; be a problem.

Ack.
&gt; 
&gt; In practice, this only applies to apps that use &lt;webview&gt; elements. I don&#39;t
know
&gt; what would happen if one were to attempt to invoke &#39;save as..&#39; on an app
&gt; document. Invoking &quot;Save as&quot; inside the webview (if it&#39;s even possible),
should
&gt; correctly use the inner WebContents. This is certainly something worth
testing.
&gt; 
Hmmm... ok.  I&#39;ll try to figure this out when I come back from vacation...

&gt; <a href="https://codereview.chromium.org/1924473003" rel="nofollow">https://codereview.chromium.org/1924473003</a> is the CL where I added
&gt; StorageParition safety to regular downloads. You might be able to add
something
&gt; like the test changes made there for
&gt; chrome/browser/apps/guest_view/web_view_browsertest.cc .
&gt; 
&gt; How difficult do you think it would be to get the correct set of IDs here?

I think I have the right attribution in patchset 2.

Initially, I was a bit concerned that process_id and/or routing_ids would be
used in unexpected ways and that correct attribution might break it.  It turns
out that they *are* used in creative ways (e.g. in
SaveFileManager::GetSavePackageFromRenderIds), but AFAICT everything should
continue to work despite my changes.

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/download/save_package.cc#newcode1001" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/download/sa...</a>
content/browser/download/save_package.cc:1001: &quot;resource-failed-to-save-&quot; +
base::GenerateGUID() + &quot;.txt&quot;));
On 2016/06/20 20:24:18, asanka wrote:
&gt; On 2016/06/18 at 00:37:20, Łukasz Anforowicz wrote:
&gt; &gt; This is tricky.  We could analyze this with an example of a website that
&gt; embeds a resource (i.e. an &lt;img&gt; tag) with file: URI, but it will be easier to
&gt; understand with an example of an *internet* website that links to a resources
on
&gt; the *intranet*.  Currently we forbid websites from linking to resources on the
&gt; local filesystem, but in the future we plan to forbid internet websites from
&gt; linking to intranet websites (<a href="https://crbug.com/590714" rel="nofollow">https://crbug.com/590714</a>).
&gt; &gt; 
&gt; &gt; Let&#39;s say that Eve creates an internet webpage with a tag saying: &lt;img
&gt; src=&quot;http://bob-s-intranet/send-all-money-to-eve.jpg&quot;&gt;.  Now, I claim that:
&gt; &gt; 1. The browser should not access the intranet link when *showing* the
internet
&gt; website
&gt; &gt; 2. The browser should not access the intranet link when *saving* the
internet
&gt; website
&gt; &gt; 3. The browser should not access the intranet link when *showing* the
*saved*
&gt; contents of the internet website
&gt; &gt; 
&gt; &gt; To prevent item 3 above, we should not save the intranet link when
serializing
&gt; the &quot;complete html&quot; of the internet webpage being saved.  I&#39;ve decided to
&gt; instead serialize a link to a non-existent file (non-existency guarantess by
&gt; uniqueness of the guid).  I am not sure if I am happy with this solution, but
I
&gt; can&#39;t think of a better alternative.
&gt; &gt; 
&gt; &gt; I recognize that the code above can negatively impact
legitimate/non-malicious
&gt; scenarios.  For example previously, the saved page could be opened and would
&gt; renderer all resources even if some resources were inaccessible during the
save
&gt; process (e.g. because of network flakiness, not because of authorization
&gt; issues).
&gt; &gt; 
&gt; &gt; Hmmm... maybe we should differentiate between unauthorized and other error
&gt; codes?  OTOH, this would seem fragile (i.e. would require exhaustively
&gt; enumerating all future error codes related to unauthorized access OR all
future
&gt; error codes related to authorized access).  WDYT?
&gt; 
&gt; As long as we are talking about subresources, I&#39;m okay with treating all
failed
&gt; subresources the same way as ones that were not found.
&gt; 
&gt; #2 should guarantee that the process of saving doesn&#39;t persist a mix of
&gt; resources from intranet/internet (unless the source document is in the
&gt; intranet?). So there shouldn&#39;t be a resource on disk to violate #3. However,
the
&gt; saved document shouldn&#39;t suddenly gain the ability to fiddle with the intranet
&gt; if it didn&#39;t have that ability before. #3, I think, would only be possible by
&gt; preventing file:// URLs from accessing intranet hosts. That doesn&#39;t seem in
&gt; scope for issue 590714, at least from my reading.

Yes - propagating origin-specific restrictions into the saved file is really
tricky (given that [an untrusted] renderer controls the html contents being
serialized + given that today we don&#39;t have code that recognizes that a local
html file was saved from a web origin).  It would probably be best to treat it
as a separate issue (with MotW / mark-of-the-web being the proposed propagation
mechanism).  Note that I&#39;ve also tried to share some related observations in
<a href="https://crbug.com/616429#c13" rel="nofollow">https://crbug.com/616429#c13</a> and <a href="https://crbug.com/616429#c14" rel="nofollow">https://crbug.com/616429#c14</a>.

FWIW, I&#39;ve reverted changes related to protecting against &quot;unauthorized&quot; access
from the already saved page (so for subresources that failed to save we will
serialize html links pointing at the original [i.e. web] uri [rather than
pointing to resource-failed-to-save-&lt;guid&gt;.txt as I proposed in the initial
patchset]).

&gt; Note that mixing internet/intranet appears to be a common mechanism when
dealing
&gt; with IOT stuff like IP connected cameras.
&gt; 
Ack.

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/reso...</a>
File content/browser/loader/resource_dispatcher_host_impl.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1915" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/reso...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1915: url)) {
On 2016/06/20 20:24:18, asanka wrote:
&gt; On 2016/06/18 at 00:37:20, Łukasz Anforowicz wrote:
&gt; &gt; This is based on a check done by ResourceDispatcherHostImpl::BeginDownload. 
&gt; AFAIK CanRequestURL(child_id) is the best we can do (i.e. 1) there are no more
&gt; granular [say, origin-based] checks and 2) no other checks apply [say,
&gt; ShouldServiceRequest checks]).
&gt; 
&gt; Other things to check (you&#39;ve probably got this covered, but listing here to
&gt; doublecheck):
&gt; 
&gt; * Whether a subresource load can trigger an authentication dialog. [should be
&gt; no]

This sounds like something that can be tested via
/auth-basic?password=PASS&amp;realm=REALM from embedded test server&#39;s default
handlers.  I would still need to figure out how to dismiss the dialog when
preparing the test - when opening the page to be saved.

&gt; * Whether URL embedded identities are stripped from URLs for cross origin
&gt; subresource loads. [should be yes]

I don&#39;t understand what this means :-(

&gt; * Whether blob URLs work.

Ok - sounds like a good test.  I hope that this can be done by simply extending
chrome/test/data/save_page/frames-runtime-changes.htm</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg6"
           name="5">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(5)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>asanka</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-5">
                          https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/resource_dispatcher_host_impl.cc File content/browser/loader/resource_dispatcher_host_impl.cc (right): https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1915 content/browser/loader/resource_dispatcher_host_impl.cc:1915: url)) { On 2016/06/21 at 16:39:34, Łukasz (vacation till ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 6 months ago
		(2016-06-21 16:53:28 UTC)
                <a href="#msg6">#6</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-5"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-5"
            ><a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/reso...</a>
File content/browser/loader/resource_dispatcher_host_impl.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1915" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/reso...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1915: url)) {
On 2016/06/21 at 16:39:34, Łukasz (vacation till July 18) wrote:
&gt; On 2016/06/20 20:24:18, asanka wrote:
&gt; &gt; On 2016/06/18 at 00:37:20, Łukasz Anforowicz wrote:
&gt; &gt; &gt; This is based on a check done by
ResourceDispatcherHostImpl::BeginDownload. 
&gt; &gt; AFAIK CanRequestURL(child_id) is the best we can do (i.e. 1) there are no
more
&gt; &gt; granular [say, origin-based] checks and 2) no other checks apply [say,
&gt; &gt; ShouldServiceRequest checks]).
&gt; &gt; 
&gt; &gt; Other things to check (you&#39;ve probably got this covered, but listing here to
&gt; &gt; doublecheck):
&gt; &gt; 
&gt; &gt; * Whether a subresource load can trigger an authentication dialog. [should
be
&gt; &gt; no]
&gt; 
&gt; This sounds like something that can be tested via
/auth-basic?password=PASS&amp;realm=REALM from embedded test server&#39;s default
handlers.  I would still need to figure out how to dismiss the dialog when
preparing the test - when opening the page to be saved.

Yeah. From the same origin, source an image or some other sub resource from
/auth-basic?...

&gt; 
&gt; &gt; * Whether URL embedded identities are stripped from URLs for cross origin
&gt; &gt; subresource loads. [should be yes]
&gt; 
&gt; I don&#39;t understand what this means :-(

E.g. if you have a document at foo.example.com/a.html containing &lt;img
src=&quot;http://user:password@bar.example.com/a.png&quot;&gt;, then the network request that
results from attempting to save a.html should strip user:password from the URL.
This is done for regular resource loads. Which is why I wanted to see if we
replicate the behavior for SavePackage downloads.

THis is also related to the internet/intranet threat mitigation discussed
elsewhere in this CL.

&gt; &gt; * Whether blob URLs work.
&gt; 
&gt; Ok - sounds like a good test.  I hope that this can be done by simply
extending chrome/test/data/save_page/frames-runtime-changes.htm</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg7"
           name="6">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(6)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-6">
                          I&#39;ve investigated tests suggested in the earlier CR feedback - please see my responses below. ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-18 23:18:27 UTC)
                <a href="#msg7">#7</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-6"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-6"
            >I&#39;ve investigated tests suggested in the earlier CR feedback - please see my
responses below.  I think the CL might be ready to land in the current form.

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/reso...</a>
File content/browser/loader/resource_dispatcher_host_impl.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1915" rel="nofollow">https://codereview.chromium.org/2075273002/diff/1/content/browser/loader/reso...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1915: url)) {
On 2016/06/21 16:53:28, asanka (On leave until Aug 29) wrote:
&gt; On 2016/06/21 at 16:39:34, Łukasz (vacation till July 18) wrote:
&gt; &gt; On 2016/06/20 20:24:18, asanka wrote:
&gt; &gt; &gt; On 2016/06/18 at 00:37:20, Łukasz Anforowicz wrote:
&gt; &gt; &gt; &gt; This is based on a check done by
&gt; ResourceDispatcherHostImpl::BeginDownload. 
&gt; &gt; &gt; AFAIK CanRequestURL(child_id) is the best we can do (i.e. 1) there are no
&gt; more
&gt; &gt; &gt; granular [say, origin-based] checks and 2) no other checks apply [say,
&gt; &gt; &gt; ShouldServiceRequest checks]).
&gt; &gt; &gt; 
&gt; &gt; &gt; Other things to check (you&#39;ve probably got this covered, but listing here
to
&gt; &gt; &gt; doublecheck):
&gt; &gt; &gt; 
&gt; &gt; &gt; * Whether a subresource load can trigger an authentication dialog. [should
&gt; be
&gt; &gt; &gt; no]
&gt; &gt; 
&gt; &gt; This sounds like something that can be tested via
&gt; /auth-basic?password=PASS&amp;realm=REALM from embedded test server&#39;s default
&gt; handlers.  I would still need to figure out how to dismiss the dialog when
&gt; preparing the test - when opening the page to be saved.
&gt; 
&gt; Yeah. From the same origin, source an image or some other sub resource from
&gt; /auth-basic?...
&gt; 
This was broken, but this seems to be a separate issue from the current one. 
I&#39;ve opened bug <a href="https://crbug.com/629285" rel="nofollow">https://crbug.com/629285</a> to track this (and I have a tentative
fix at <a href="https://codereview.chromium.org/2155333002" rel="nofollow">https://codereview.chromium.org/2155333002</a>).

&gt; &gt; 
&gt; &gt; &gt; * Whether URL embedded identities are stripped from URLs for cross origin
&gt; &gt; &gt; subresource loads. [should be yes]
&gt; &gt; 
&gt; &gt; I don&#39;t understand what this means :-(
&gt; 
&gt; E.g. if you have a document at foo.example.com/a.html containing &lt;img
&gt; src=&quot;http://user:password@bar.example.com/a.png&quot;&gt;, then the network request
that
&gt; results from attempting to save a.html should strip user:password from the
URL.
&gt; This is done for regular resource loads. Which is why I wanted to see if we
&gt; replicate the behavior for SavePackage downloads.
&gt; 
&gt; THis is also related to the internet/intranet threat mitigation discussed
&gt; elsewhere in this CL.
&gt; 
I think I can say by reading the code that this stripping is only applied to
regular resource requests, but not to 1) downloads and 2) save-page-as requests.
 I am saying this, because LOAD_DO_NOT_USE_EMBEDDED_IDENTITY is only used for
regular resource requests.

This might be addressed by avoiding auth dialog altogether during save-page-as,
which is being fixed as described in my other response above.

&gt; &gt; &gt; * Whether blob URLs work.
&gt; &gt; 
&gt; &gt; Ok - sounds like a good test.  I hope that this can be done by simply
&gt; extending chrome/test/data/save_page/frames-runtime-changes.htm

I found out that savable_resources.cc will only report resources referred to via
http(s) or file URI - see
<a href="https://chromium.googlesource.com/chromium/src/+/222a04026cfacf032174f4aaa3720413c66c7e0b/content/renderer/savable_resources.cc#89" rel="nofollow">https://chromium.googlesource.com/chromium/src/+/222a04026cfacf032174f4aaa372...</a>

Please open a bug if you think this is an issue.  It seems that not saving
resources from ftp URIs is an explicit engineering decision from the past.  Not
saving data: URIs should not be an issue.  Not saving blob: URIs might be an
issue, but only if the saved javascript is not working properly and not able to
recreate the blob (and the element where it is used).</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    generated"
           style="display: none"
           id="generated-msg8"
           name="7">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(7)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-7">
                          lukasza@chromium.org changed reviewers: + rdsmith@chromium.org
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-18 23:21:52 UTC)
                <a href="#msg8">#8</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-7"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-7"
            ><a href="mailto:lukasza@chromium.org">lukasza@chromium.org</a> changed reviewers:
+ <a href="mailto:rdsmith@chromium.org">rdsmith@chromium.org</a></pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg9"
           name="8">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(8)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-8">
                          Randy, could you please take a look? (Asanka left quite a few good comments, but ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-18 23:21:52 UTC)
                <a href="#msg9">#9</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-8"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-8"
            >Randy, could you please take a look?  (Asanka left quite a few good comments,
but he is on a leave until the end of August :-( ).</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message  approval  "
           
           id="msg10"
           name="9">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(9)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Randy Smith (Not in Mondays)</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-9">
                          Pretty much only nits below. Just in case our timing doesn&#39;t work out and I ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-21 19:29:54 UTC)
                <a href="#msg10">#10</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-9"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-9"
            >Pretty much only nits below.  Just in case our timing doesn&#39;t work out and I
don&#39;t get back to this before I leave, LGTM with nits, but I&#39;d like to do one
more round if we can.

<a href="https://codereview.chromium.org/2075273002/diff/100001/chrome/browser/download/save_page_browsertest.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/chrome/browser/downloa...</a>
File chrome/browser/download/save_page_browsertest.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/100001/chrome/browser/download/save_page_browsertest.cc#newcode1066" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/chrome/browser/downloa...</a>
chrome/browser/download/save_page_browsertest.cc:1066: // text (svg and png
objects do not get a separate frame)
I do not understand the relationship between the comment and the following line,
probably because 4 != 7?

<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/download/docs/save-page-as.md" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/downlo...</a>
File content/browser/download/docs/save-page-as.md (right):

<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/download/docs/save-page-as.md#newcode70" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/downlo...</a>
content/browser/download/docs/save-page-as.md:70: * Step 2: `SavePackage` first
processes `SAVE_FILE_FROM_NET`
Worth changing the enum name now that it&#39;s no-longer making a distinction with
local files?

<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
File content/browser/loader/resource_dispatcher_host_impl.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1893" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1893: VLOG(1) &lt;&lt; &quot;Denied
unauthorized save of &quot; &lt;&lt; url.possibly_invalid_spec();
Reasonable to make this a DVLOG?  I don&#39;t think there are a lot of cases where
we want to do this type of printing in the field.</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    generated"
           style="display: none"
           id="generated-msg11"
           name="10">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(10)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>mmenke</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-10">
                          mmenke@chromium.org changed reviewers: + mmenke@chromium.org
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-21 19:38:42 UTC)
                <a href="#msg11">#11</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-10"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-10"
            ><a href="mailto:mmenke@chromium.org">mmenke@chromium.org</a> changed reviewers:
+ <a href="mailto:mmenke@chromium.org">mmenke@chromium.org</a></pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg12"
           name="11">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(11)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>mmenke</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-11">
                          https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc File content/browser/loader/resource_dispatcher_host_impl.cc (right): https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1897 content/browser/loader/resource_dispatcher_host_impl.cc:1897: nullptr); // |defer|; ignored by SaveFileResourceHandler. This seems kind ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-21 19:38:43 UTC)
                <a href="#msg12">#12</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-11"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-11"
            ><a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
File content/browser/loader/resource_dispatcher_host_impl.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1897" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1897: nullptr);  //
|defer|;  ignored by SaveFileResourceHandler.
This seems kind of hideous.  ResourceDispatcherHostImpl shouldn&#39;t depend on the
implementation details of SaveFileResourceHandler (Not accessing |defer|, let
alone setting it to |true|, or that this just magically works without setting up
a ResourceLoader).</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg13"
           name="12">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(12)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Randy Smith (Not in Mondays)</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-12">
                          https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc File content/browser/loader/resource_dispatcher_host_impl.cc (right): https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1897 content/browser/loader/resource_dispatcher_host_impl.cc:1897: nullptr); // |defer|; ignored by SaveFileResourceHandler. On 2016/07/21 19:38:43, ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-21 19:52:53 UTC)
                <a href="#msg13">#13</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-12"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-12"
            ><a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
File content/browser/loader/resource_dispatcher_host_impl.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1897" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1897: nullptr);  //
|defer|;  ignored by SaveFileResourceHandler.
On 2016/07/21 19:38:43, mmenke wrote:
&gt; This seems kind of hideous.  ResourceDispatcherHostImpl shouldn&#39;t depend on
the
&gt; implementation details of SaveFileResourceHandler (Not accessing |defer|, let
&gt; alone setting it to |true|, or that this just magically works without setting
up
&gt; a ResourceLoader).

You&#39;re right.  Mea culpa.

(Mind you, this is a string the other end of which is getting BeginSaveFile out
of ResourceDispatcherHostImpl, but that&#39;s clearly not in scope for this CL, and
I would agree with you that calling OnResponseCompleted() in a reasonably
handler agnostic way is.)</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg14"
           name="13">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(13)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-13">
                          mmenke@ + rdsmith@, can you take another look please? https://codereview.chromium.org/2075273002/diff/100001/chrome/browser/download/save_page_browsertest.cc File chrome/browser/download/save_page_browsertest.cc (right): https://codereview.chromium.org/2075273002/diff/100001/chrome/browser/download/save_page_browsertest.cc#newcode1066 chrome/browser/download/save_page_browsertest.cc:1066: ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-21 23:44:31 UTC)
                <a href="#msg14">#14</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-13"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-13"
            >mmenke@ + rdsmith@, can you take another look please?

<a href="https://codereview.chromium.org/2075273002/diff/100001/chrome/browser/download/save_page_browsertest.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/chrome/browser/downloa...</a>
File chrome/browser/download/save_page_browsertest.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/100001/chrome/browser/download/save_page_browsertest.cc#newcode1066" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/chrome/browser/downloa...</a>
chrome/browser/download/save_page_browsertest.cc:1066: // text (svg and png
objects do not get a separate frame)
On 2016/07/21 19:29:53, Randy Smith - Not in Fridays wrote:
&gt; I do not understand the relationship between the comment and the following
line,
&gt; probably because 4 != 7?

Ooops - done.  I screwed that up in
<a href="https://chromium.googlesource.com/chromium/src/+/c5aebc965aa088c133f20b51f62759c723e5797b%5E%21/#F0" rel="nofollow">https://chromium.googlesource.com/chromium/src/+/c5aebc965aa088c133f20b51f627...</a>

<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/download/docs/save-page-as.md" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/downlo...</a>
File content/browser/download/docs/save-page-as.md (right):

<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/download/docs/save-page-as.md#newcode70" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/downlo...</a>
content/browser/download/docs/save-page-as.md:70: * Step 2: `SavePackage` first
processes `SAVE_FILE_FROM_NET`
On 2016/07/21 19:29:54, Randy Smith - Not in Fridays wrote:
&gt; Worth changing the enum name now that it&#39;s no-longer making a distinction with
&gt; local files?

Maybe.  I cannot think of a better name.  The gist here is that
SAVE_FILE_FROM_NET save items are saved via a new resource request (which can
come from the net, but we hope it will come from in-memory cache).

Some name ideas that I don&#39;t like:

- SAVE_FILE_VIA_RESOURCE_REQUEST - it misses &quot;FROM&quot;, so seems like a bad name
for a SaveFile*Source* enum.

- SAVE_FILE_FROM_RESOURCE_REQUEST - this seems confusing / I am not sure what it
means to save something &quot;from&quot; a resource request

I think that SAVE_FILE_FROM_NET is okay, even with the changes (because resource
requests are a concept from the //net layer).  WDYT?

<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
File content/browser/loader/resource_dispatcher_host_impl.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1893" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1893: VLOG(1) &lt;&lt; &quot;Denied
unauthorized save of &quot; &lt;&lt; url.possibly_invalid_spec();
On 2016/07/21 19:29:54, Randy Smith - Not in Fridays wrote:
&gt; Reasonable to make this a DVLOG?  I don&#39;t think there are a lot of cases where
&gt; we want to do this type of printing in the field.

Done.

Note that we have a VLOG for other similar messages:
- in ShouldServiceRequest (line 304)
- in BeginRequest (line 1460)

OTOH, we have a DVLOG here:
- in BeginDownload (line 718)

So my change makes it 50-50 :-P.  Still, I agree that this is not that useful in
the field + making it a DVLOG should make the release version of the browser a
tiny bit leaner.

<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1897" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1897: nullptr);  //
|defer|;  ignored by SaveFileResourceHandler.
On 2016/07/21 19:52:53, Randy Smith - Not in Fridays wrote:
&gt; On 2016/07/21 19:38:43, mmenke wrote:
&gt; &gt; This seems kind of hideous.  ResourceDispatcherHostImpl shouldn&#39;t depend on
&gt; the
&gt; &gt; implementation details of SaveFileResourceHandler (Not accessing |defer|,
let
&gt; &gt; alone setting it to |true|, or that this just magically works without
setting
&gt; up
&gt; &gt; a ResourceLoader).
&gt; 
&gt; You&#39;re right.  Mea culpa.
&gt; 
&gt; (Mind you, this is a string the other end of which is getting BeginSaveFile
out
&gt; of ResourceDispatcherHostImpl, but that&#39;s clearly not in scope for this CL,
and
&gt; I would agree with you that calling OnResponseCompleted() in a reasonably
&gt; handler agnostic way is.)

Thanks for raising this up.  I thought that it might be okay to depend on the
type, because SaveFileResourceHandler is created right above on line 1886.

I am not sure what &quot;calling OnResponseCompleted in a reasonable handler agnostic
way&quot; means :-(  In particular, there is no documentation of |defer| parameter
and I am not sure if it is appropriate to duplicate what other callers of
OnResponseCompleted do (|if (!defer) ResumeIfDeferred();|) since there is
nothing save-page-related to resume and resuming non-save-page-related things
seems out of place here.

FWIW, in the latest patchset I&#39;ve tried to duplicate what another piece of code
is doing at
<a href="https://cs-staging.chromium.org/chromium/src/content/browser/loader/resource_dispatcher_host_impl.cc?rcl=1469114341&amp;l=2320" rel="nofollow">https://cs-staging.chromium.org/chromium/src/content/browser/loader/resource_...</a>
(including darin&#39;s TODO... :-o).</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg15"
           name="14">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(14)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>mmenke</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-14">
                          https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc File content/browser/loader/resource_dispatcher_host_impl.cc (right): https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1897 content/browser/loader/resource_dispatcher_host_impl.cc:1897: nullptr); // |defer|; ignored by SaveFileResourceHandler. On 2016/07/21 23:44:30, ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-22 00:12:16 UTC)
                <a href="#msg15">#15</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-14"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-14"
            ><a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
File content/browser/loader/resource_dispatcher_host_impl.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1897" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1897: nullptr);  //
|defer|;  ignored by SaveFileResourceHandler.
On 2016/07/21 23:44:30, Łukasz Anforowicz wrote:
&gt; On 2016/07/21 19:52:53, Randy Smith - Not in Fridays wrote:
&gt; &gt; On 2016/07/21 19:38:43, mmenke wrote:
&gt; &gt; &gt; This seems kind of hideous.  ResourceDispatcherHostImpl shouldn&#39;t depend
on
&gt; &gt; the
&gt; &gt; &gt; implementation details of SaveFileResourceHandler (Not accessing |defer|,
&gt; let
&gt; &gt; &gt; alone setting it to |true|, or that this just magically works without
&gt; setting
&gt; &gt; up
&gt; &gt; &gt; a ResourceLoader).
&gt; &gt; 
&gt; &gt; You&#39;re right.  Mea culpa.
&gt; &gt; 
&gt; &gt; (Mind you, this is a string the other end of which is getting BeginSaveFile
&gt; out
&gt; &gt; of ResourceDispatcherHostImpl, but that&#39;s clearly not in scope for this CL,
&gt; and
&gt; &gt; I would agree with you that calling OnResponseCompleted() in a reasonably
&gt; &gt; handler agnostic way is.)
&gt; 
&gt; Thanks for raising this up.  I thought that it might be okay to depend on the
&gt; type, because SaveFileResourceHandler is created right above on line 1886.
&gt; 
&gt; I am not sure what &quot;calling OnResponseCompleted in a reasonable handler
agnostic
&gt; way&quot; means :-(  In particular, there is no documentation of |defer| parameter
&gt; and I am not sure if it is appropriate to duplicate what other callers of
&gt; OnResponseCompleted do (|if (!defer) ResumeIfDeferred();|) since there is
&gt; nothing save-page-related to resume and resuming non-save-page-related things
&gt; seems out of place here.

The method is inherited from content::ResourceHandler, so that&#39;s where they&#39;re
documented.  Beyond the NULL defer parameter, it also doesn&#39;t have its
ResourceController field set, either.

&gt; FWIW, in the latest patchset I&#39;ve tried to duplicate what another piece of
code
&gt; is doing at
&gt;
<a href="https://cs-staging.chromium.org/chromium/src/content/browser/loader/resource_dispatcher_host_impl.cc?rcl=1469114341&amp;l=2320" rel="nofollow">https://cs-staging.chromium.org/chromium/src/content/browser/loader/resource_...</a>
&gt; (including darin&#39;s TODO... :-o).

Yea....Unfortunately for you, I wasn&#39;t an owner when that was signed off on, and
I don&#39;t think we need any more instances of that that&#39;s going to be hanging
around for 5 more years.  Code should be able to assume APIs are consumed
correctly.

There are a few options, as I see it:

1)  Create a ResourceLoader as normal and cancel it (Need to make sure the
URLRequest never starts).
2)  Never create a URLRequest, just cancel the request directly. 
AbortRequestBeforeItStarts does this, and if that works for you, let&#39;s use it. 
However, I assume SaveFileResourceHandler has some sort of UI hooks to tell the
user something went wrong?  Maybe a magic
InformWhateverAPIWe&#39;reTalkingToOfFailure method, that combines what starting +
failing the request does?</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg16"
           name="15">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(15)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-15">
                          mmenke@, could you please take another look? I have little confidence in the latest changes ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-22 18:10:45 UTC)
                <a href="#msg16">#16</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-15"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-15"
            >mmenke@, could you please take another look?  I have little confidence in the
latest changes I am making in resource_dispatcher_host_impl.cc (to be honest I
had higher confidence in correctness of the previous, simple code - otoh, I see
that tight coupling with SaveFileResourceHandler&#39;s implementation might be
undesirable for long-term maintenance, despite presence of regression tests that
exercise that path).

FWIW, I&#39;ve verified that in the latest patchset (using
ResourceLoader::CancelRequest + ResourceDispatcherHostImpl::StartLoading) I do
get a call to SaveFileResourceHandler::OnResponseCompleted with
false==status.is_success() when running
SavePageBrowserTest.SaveUnauthorizedResource that is being added in the current
CL.  This correctly propagates into !is_success call to
SavePackage::SaveFinished.  So it seems that the new code is working (at least
at a first glance).

On 2016/07/22 00:12:16, mmenke wrote:
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
&gt; File content/browser/loader/resource_dispatcher_host_impl.cc (right):
&gt; 
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1897" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
&gt; content/browser/loader/resource_dispatcher_host_impl.cc:1897: nullptr);  //
&gt; |defer|;  ignored by SaveFileResourceHandler.
&gt; On 2016/07/21 23:44:30, Łukasz Anforowicz wrote:
&gt; &gt; On 2016/07/21 19:52:53, Randy Smith - Not in Fridays wrote:
&gt; &gt; &gt; On 2016/07/21 19:38:43, mmenke wrote:
&gt; &gt; &gt; &gt; This seems kind of hideous.  ResourceDispatcherHostImpl shouldn&#39;t depend
&gt; on
&gt; &gt; &gt; the
&gt; &gt; &gt; &gt; implementation details of SaveFileResourceHandler (Not accessing
|defer|,
&gt; &gt; let
&gt; &gt; &gt; &gt; alone setting it to |true|, or that this just magically works without
&gt; &gt; setting
&gt; &gt; &gt; up
&gt; &gt; &gt; &gt; a ResourceLoader).
&gt; &gt; &gt; 
&gt; &gt; &gt; You&#39;re right.  Mea culpa.
&gt; &gt; &gt; 
&gt; &gt; &gt; (Mind you, this is a string the other end of which is getting
BeginSaveFile
&gt; &gt; out
&gt; &gt; &gt; of ResourceDispatcherHostImpl, but that&#39;s clearly not in scope for this
CL,
&gt; &gt; and
&gt; &gt; &gt; I would agree with you that calling OnResponseCompleted() in a reasonably
&gt; &gt; &gt; handler agnostic way is.)
&gt; &gt; 
&gt; &gt; Thanks for raising this up.  I thought that it might be okay to depend on
the
&gt; &gt; type, because SaveFileResourceHandler is created right above on line 1886.
&gt; &gt; 
&gt; &gt; I am not sure what &quot;calling OnResponseCompleted in a reasonable handler
&gt; agnostic
&gt; &gt; way&quot; means :-(  In particular, there is no documentation of |defer|
parameter
&gt; &gt; and I am not sure if it is appropriate to duplicate what other callers of
&gt; &gt; OnResponseCompleted do (|if (!defer) ResumeIfDeferred();|) since there is
&gt; &gt; nothing save-page-related to resume and resuming non-save-page-related
things
&gt; &gt; seems out of place here.
&gt; 
&gt; The method is inherited from content::ResourceHandler, so that&#39;s where they&#39;re
&gt; documented.  

Ooops.  You&#39;re right.  When looking at the comments I thought that I am looking
at the base class, but apparently I was looking at the child... :-(

&gt; Beyond the NULL defer parameter, it also doesn&#39;t have its
&gt; ResourceController field set, either.

Err... okay.  Not sure which ResourceController I can / should use here.  I can
instantiate an ad-hoc ResourceLoader I guess (i.e. copy&amp;paste the instantiation
from ResourceDispatcherHostImpl::BeginRequestInternal).

&gt; &gt; FWIW, in the latest patchset I&#39;ve tried to duplicate what another piece of
&gt; code
&gt; &gt; is doing at
&gt; &gt;
&gt;
<a href="https://cs-staging.chromium.org/chromium/src/content/browser/loader/resource_dispatcher_host_impl.cc?rcl=1469114341&amp;l=2320" rel="nofollow">https://cs-staging.chromium.org/chromium/src/content/browser/loader/resource_...</a>
&gt; &gt; (including darin&#39;s TODO... :-o).
&gt; 
&gt; Yea....Unfortunately for you, I wasn&#39;t an owner when that was signed off on,
and
&gt; I don&#39;t think we need any more instances of that that&#39;s going to be hanging
&gt; around for 5 more years.  Code should be able to assume APIs are consumed
&gt; correctly.
&gt; 
&gt; There are a few options, as I see it:
&gt; 
&gt; 1)  Create a ResourceLoader as normal and cancel it

This is what I am trying to do in the latest patchset.

This is slightly tricky wrt management of the lifetime of the ResourceLoader. 
If I destroy ResourceLoader upon return from BeginSaveFile, then the
ResponseCompleted task posted by ResourceLoader::CancelRequestInternal will
never run (because of weak ptr usage).  OTOH, I am not sure where I should stash
the std::unique_ptr&lt;ResourceLoader&gt; - pending_loaders_? blocked_loaders_? just
call StartLoading (not sure how that impacts your comment to &quot;make sure the
URLRequest never starts&quot;)?

&gt; (Need to make sure the URLRequest never starts).

I am not sure what that means :-(.  I am not calling BeginRequestInternal in
this code path, but for managing lifetime of ResourceLoader I ended up calling
StartLoading.  OTOH, I checked that in this case
ResourceLoader::StartRequestInternal exits early, because
|!request_-&gt;status().is_success()| - AFAICT the success is set by
URLRequest::DoCancel.

&gt; 2)  Never create a URLRequest, just cancel the request directly. 
&gt; AbortRequestBeforeItStarts does this, and if that works for you, let&#39;s use it.

I couldn&#39;t figure out how to do this.

- Inside BeginSaveFile ResourceDispatcherHostImpl::filter_ is null (and I don&#39;t
know what other instance of ResourceMessageFilter I could pass to
AbortRequestBeforeItStarts).

- I am not sure how request ids work.  I see that BeginSaveFile decrements
request_id_ which makes me wary of using this field (maybe save-file-related
requests don&#39;t need a request_id?  there is no renderer involved fwiw).

&gt; However, I assume SaveFileResourceHandler has some sort of UI hooks to tell
the
&gt; user something went wrong?

SaveFileResourceHandler::OnResponseCompleted will propagate the status of the
resource request through SaveFileManager::SaveFinished (FILE thread) and
SavePackage::SaveFinished(...is_success...) (UI thread).  OTOH note that failure
to save a subresource of a page doesn&#39;t cause failure of the whole save-page -
we just won&#39;t rewrite links to this subresource (e.g. we won&#39;t rewrite img.src
to point at ./foo_files/subresource.png).

&gt; Maybe a magic
&gt; InformWhateverAPIWe&#39;reTalkingToOfFailure method, that combines what starting +
&gt; failing the request does?

I think that won&#39;t be needed based on the error-propagation-explanation I gave
above.</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg17"
           name="16">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(16)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>mmenke</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-16">
                          On 2016/07/22 18:10:45, Łukasz Anforowicz wrote: &gt; mmenke@, could you please take another look? I ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-22 18:18:06 UTC)
                <a href="#msg17">#17</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-16"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-16"
            >On 2016/07/22 18:10:45, Łukasz Anforowicz wrote:
&gt; mmenke@, could you please take another look?  I have little confidence in the
&gt; latest changes I am making in resource_dispatcher_host_impl.cc (to be honest I
&gt; had higher confidence in correctness of the previous, simple code - otoh, I
see
&gt; that tight coupling with SaveFileResourceHandler&#39;s implementation might be
&gt; undesirable for long-term maintenance, despite presence of regression tests
that
&gt; exercise that path).
&gt; 
&gt; FWIW, I&#39;ve verified that in the latest patchset (using
&gt; ResourceLoader::CancelRequest + ResourceDispatcherHostImpl::StartLoading) I do
&gt; get a call to SaveFileResourceHandler::OnResponseCompleted with
&gt; false==status.is_success() when running
&gt; SavePageBrowserTest.SaveUnauthorizedResource that is being added in the
current
&gt; CL.  This correctly propagates into !is_success call to
&gt; SavePackage::SaveFinished.  So it seems that the new code is working (at least
&gt; at a first glance).
&gt; 
&gt; On 2016/07/22 00:12:16, mmenke wrote:
&gt; &gt;
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
&gt; &gt; File content/browser/loader/resource_dispatcher_host_impl.cc (right):
&gt; &gt; 
&gt; &gt;
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1897" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
&gt; &gt; content/browser/loader/resource_dispatcher_host_impl.cc:1897: nullptr);  //
&gt; &gt; |defer|;  ignored by SaveFileResourceHandler.
&gt; &gt; On 2016/07/21 23:44:30, Łukasz Anforowicz wrote:
&gt; &gt; &gt; On 2016/07/21 19:52:53, Randy Smith - Not in Fridays wrote:
&gt; &gt; &gt; &gt; On 2016/07/21 19:38:43, mmenke wrote:
&gt; &gt; &gt; &gt; &gt; This seems kind of hideous.  ResourceDispatcherHostImpl shouldn&#39;t
depend
&gt; &gt; on
&gt; &gt; &gt; &gt; the
&gt; &gt; &gt; &gt; &gt; implementation details of SaveFileResourceHandler (Not accessing
&gt; |defer|,
&gt; &gt; &gt; let
&gt; &gt; &gt; &gt; &gt; alone setting it to |true|, or that this just magically works without
&gt; &gt; &gt; setting
&gt; &gt; &gt; &gt; up
&gt; &gt; &gt; &gt; &gt; a ResourceLoader).
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; You&#39;re right.  Mea culpa.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; (Mind you, this is a string the other end of which is getting
&gt; BeginSaveFile
&gt; &gt; &gt; out
&gt; &gt; &gt; &gt; of ResourceDispatcherHostImpl, but that&#39;s clearly not in scope for this
&gt; CL,
&gt; &gt; &gt; and
&gt; &gt; &gt; &gt; I would agree with you that calling OnResponseCompleted() in a
reasonably
&gt; &gt; &gt; &gt; handler agnostic way is.)
&gt; &gt; &gt; 
&gt; &gt; &gt; Thanks for raising this up.  I thought that it might be okay to depend on
&gt; the
&gt; &gt; &gt; type, because SaveFileResourceHandler is created right above on line 1886.
&gt; &gt; &gt; 
&gt; &gt; &gt; I am not sure what &quot;calling OnResponseCompleted in a reasonable handler
&gt; &gt; agnostic
&gt; &gt; &gt; way&quot; means :-(  In particular, there is no documentation of |defer|
&gt; parameter
&gt; &gt; &gt; and I am not sure if it is appropriate to duplicate what other callers of
&gt; &gt; &gt; OnResponseCompleted do (|if (!defer) ResumeIfDeferred();|) since there is
&gt; &gt; &gt; nothing save-page-related to resume and resuming non-save-page-related
&gt; things
&gt; &gt; &gt; seems out of place here.
&gt; &gt; 
&gt; &gt; The method is inherited from content::ResourceHandler, so that&#39;s where
they&#39;re
&gt; &gt; documented.  
&gt; 
&gt; Ooops.  You&#39;re right.  When looking at the comments I thought that I am
looking
&gt; at the base class, but apparently I was looking at the child... :-(
&gt; 
&gt; &gt; Beyond the NULL defer parameter, it also doesn&#39;t have its
&gt; &gt; ResourceController field set, either.
&gt; 
&gt; Err... okay.  Not sure which ResourceController I can / should use here.  I
can
&gt; instantiate an ad-hoc ResourceLoader I guess (i.e. copy&amp;paste the
instantiation
&gt; from ResourceDispatcherHostImpl::BeginRequestInternal).
&gt; 
&gt; &gt; &gt; FWIW, in the latest patchset I&#39;ve tried to duplicate what another piece of
&gt; &gt; code
&gt; &gt; &gt; is doing at
&gt; &gt; &gt;
&gt; &gt;
&gt;
<a href="https://cs-staging.chromium.org/chromium/src/content/browser/loader/resource_dispatcher_host_impl.cc?rcl=1469114341&amp;l=2320" rel="nofollow">https://cs-staging.chromium.org/chromium/src/content/browser/loader/resource_...</a>
&gt; &gt; &gt; (including darin&#39;s TODO... :-o).
&gt; &gt; 
&gt; &gt; Yea....Unfortunately for you, I wasn&#39;t an owner when that was signed off on,
&gt; and
&gt; &gt; I don&#39;t think we need any more instances of that that&#39;s going to be hanging
&gt; &gt; around for 5 more years.  Code should be able to assume APIs are consumed
&gt; &gt; correctly.
&gt; &gt; 
&gt; &gt; There are a few options, as I see it:
&gt; &gt; 
&gt; &gt; 1)  Create a ResourceLoader as normal and cancel it
&gt; 
&gt; This is what I am trying to do in the latest patchset.
&gt; 
&gt; This is slightly tricky wrt management of the lifetime of the ResourceLoader. 
&gt; If I destroy ResourceLoader upon return from BeginSaveFile, then the
&gt; ResponseCompleted task posted by ResourceLoader::CancelRequestInternal will
&gt; never run (because of weak ptr usage).  OTOH, I am not sure where I should
stash
&gt; the std::unique_ptr&lt;ResourceLoader&gt; - pending_loaders_? blocked_loaders_? just
&gt; call StartLoading (not sure how that impacts your comment to &quot;make sure the
&gt; URLRequest never starts&quot;)?
&gt; 
&gt; &gt; (Need to make sure the URLRequest never starts).
&gt; 
&gt; I am not sure what that means :-(.  I am not calling BeginRequestInternal in
&gt; this code path, but for managing lifetime of ResourceLoader I ended up calling
&gt; StartLoading.  OTOH, I checked that in this case
&gt; ResourceLoader::StartRequestInternal exits early, because
&gt; |!request_-&gt;status().is_success()| - AFAICT the success is set by
&gt; URLRequest::DoCancel.
&gt; 
&gt; &gt; 2)  Never create a URLRequest, just cancel the request directly. 
&gt; &gt; AbortRequestBeforeItStarts does this, and if that works for you, let&#39;s use
it.
&gt; 
&gt; I couldn&#39;t figure out how to do this.
&gt; 
&gt; - Inside BeginSaveFile ResourceDispatcherHostImpl::filter_ is null (and I
don&#39;t
&gt; know what other instance of ResourceMessageFilter I could pass to
&gt; AbortRequestBeforeItStarts).
&gt; 
&gt; - I am not sure how request ids work.  I see that BeginSaveFile decrements
&gt; request_id_ which makes me wary of using this field (maybe save-file-related
&gt; requests don&#39;t need a request_id?  there is no renderer involved fwiw).
&gt; 
&gt; &gt; However, I assume SaveFileResourceHandler has some sort of UI hooks to tell
&gt; the
&gt; &gt; user something went wrong?
&gt; 
&gt; SaveFileResourceHandler::OnResponseCompleted will propagate the status of the
&gt; resource request through SaveFileManager::SaveFinished (FILE thread) and
&gt; SavePackage::SaveFinished(...is_success...) (UI thread).  OTOH note that
failure
&gt; to save a subresource of a page doesn&#39;t cause failure of the whole save-page -
&gt; we just won&#39;t rewrite links to this subresource (e.g. we won&#39;t rewrite img.src
&gt; to point at ./foo_files/subresource.png).
&gt; 
&gt; &gt; Maybe a magic
&gt; &gt; InformWhateverAPIWe&#39;reTalkingToOfFailure method, that combines what starting
+
&gt; &gt; failing the request does?
&gt; 
&gt; I think that won&#39;t be needed based on the error-propagation-explanation I gave
&gt; above.</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    generated"
           style="display: none"
           id="generated-msg18"
           name="17">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(17)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-17">
                          Description was changed from ========== Resource requests from Save-Page-As should go through CanRequestURL checks. This ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-22 18:19:54 UTC)
                <a href="#msg18">#18</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-17"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-17"
            >Description was changed from

==========
Resource requests from Save-Page-As should go through CanRequestURL checks.

This CL:

- Added checks to ResourceDispatcherHostImpl::BeginSaveFile to verify if
  the renderer process is authorized to access a given resource.

- Removed separate code path for file: URIs that used to be implemented
  in SaveFileManager::SaveLocalFile.  Avoiding a separate code path
  helps consolidate all authorization checks in one place.

- When serializing HTML, we no longer emit the original URI for
  resources that failed to save to disk.  Instead we write a path to a
  non-existant local file.  This ensures that a malicious website cannot
  trigger access to an unauthorized resource at a later time (when the
  saved page is opened).  It is recognized that this behavior change also
  impacts non-malicious scenarios (i.e. when a resource failed to save
  because of a network issue).

BUG=616429
==========

to

==========
Resource requests from Save-Page-As should go through CanRequestURL checks.

This CL:

- Added checks to ResourceDispatcherHostImpl::BeginSaveFile to verify if
  the renderer process is authorized to access a given resource.

- Removed separate code path for file: URIs that used to be implemented
  in SaveFileManager::SaveLocalFile.  Avoiding a separate code path
  helps consolidate all authorization checks in one place.

BUG=616429
==========</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg19"
           name="18">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(18)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>mmenke</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-18">
                          On 2016/07/22 18:10:45, Łukasz Anforowicz wrote: &gt; mmenke@, could you please take another look? I ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-22 18:35:23 UTC)
                <a href="#msg19">#19</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-18"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-18"
            >On 2016/07/22 18:10:45, Łukasz Anforowicz wrote:
&gt; mmenke@, could you please take another look?  I have little confidence in the
&gt; latest changes I am making in resource_dispatcher_host_impl.cc (to be honest I
&gt; had higher confidence in correctness of the previous, simple code - otoh, I
see
&gt; that tight coupling with SaveFileResourceHandler&#39;s implementation might be
&gt; undesirable for long-term maintenance, despite presence of regression tests
that
&gt; exercise that path).
&gt; 
&gt; FWIW, I&#39;ve verified that in the latest patchset (using
&gt; ResourceLoader::CancelRequest + ResourceDispatcherHostImpl::StartLoading) I do
&gt; get a call to SaveFileResourceHandler::OnResponseCompleted with
&gt; false==status.is_success() when running
&gt; SavePageBrowserTest.SaveUnauthorizedResource that is being added in the
current
&gt; CL.  This correctly propagates into !is_success call to
&gt; SavePackage::SaveFinished.  So it seems that the new code is working (at least
&gt; at a first glance).
&gt; 
&gt; On 2016/07/22 00:12:16, mmenke wrote:
&gt; &gt;
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
&gt; &gt; File content/browser/loader/resource_dispatcher_host_impl.cc (right):
&gt; &gt; 
&gt; &gt;
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1897" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
&gt; &gt; content/browser/loader/resource_dispatcher_host_impl.cc:1897: nullptr);  //
&gt; &gt; |defer|;  ignored by SaveFileResourceHandler.
&gt; &gt; On 2016/07/21 23:44:30, Łukasz Anforowicz wrote:
&gt; &gt; &gt; On 2016/07/21 19:52:53, Randy Smith - Not in Fridays wrote:
&gt; &gt; &gt; &gt; On 2016/07/21 19:38:43, mmenke wrote:
&gt; &gt; &gt; &gt; &gt; This seems kind of hideous.  ResourceDispatcherHostImpl shouldn&#39;t
depend
&gt; &gt; on
&gt; &gt; &gt; &gt; the
&gt; &gt; &gt; &gt; &gt; implementation details of SaveFileResourceHandler (Not accessing
&gt; |defer|,
&gt; &gt; &gt; let
&gt; &gt; &gt; &gt; &gt; alone setting it to |true|, or that this just magically works without
&gt; &gt; &gt; setting
&gt; &gt; &gt; &gt; up
&gt; &gt; &gt; &gt; &gt; a ResourceLoader).
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; You&#39;re right.  Mea culpa.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; (Mind you, this is a string the other end of which is getting
&gt; BeginSaveFile
&gt; &gt; &gt; out
&gt; &gt; &gt; &gt; of ResourceDispatcherHostImpl, but that&#39;s clearly not in scope for this
&gt; CL,
&gt; &gt; &gt; and
&gt; &gt; &gt; &gt; I would agree with you that calling OnResponseCompleted() in a
reasonably
&gt; &gt; &gt; &gt; handler agnostic way is.)
&gt; &gt; &gt; 
&gt; &gt; &gt; Thanks for raising this up.  I thought that it might be okay to depend on
&gt; the
&gt; &gt; &gt; type, because SaveFileResourceHandler is created right above on line 1886.
&gt; &gt; &gt; 
&gt; &gt; &gt; I am not sure what &quot;calling OnResponseCompleted in a reasonable handler
&gt; &gt; agnostic
&gt; &gt; &gt; way&quot; means :-(  In particular, there is no documentation of |defer|
&gt; parameter
&gt; &gt; &gt; and I am not sure if it is appropriate to duplicate what other callers of
&gt; &gt; &gt; OnResponseCompleted do (|if (!defer) ResumeIfDeferred();|) since there is
&gt; &gt; &gt; nothing save-page-related to resume and resuming non-save-page-related
&gt; things
&gt; &gt; &gt; seems out of place here.
&gt; &gt; 
&gt; &gt; The method is inherited from content::ResourceHandler, so that&#39;s where
they&#39;re
&gt; &gt; documented.  
&gt; 
&gt; Ooops.  You&#39;re right.  When looking at the comments I thought that I am
looking
&gt; at the base class, but apparently I was looking at the child... :-(
&gt; 
&gt; &gt; Beyond the NULL defer parameter, it also doesn&#39;t have its
&gt; &gt; ResourceController field set, either.
&gt; 
&gt; Err... okay.  Not sure which ResourceController I can / should use here.  I
can
&gt; instantiate an ad-hoc ResourceLoader I guess (i.e. copy&amp;paste the
instantiation
&gt; from ResourceDispatcherHostImpl::BeginRequestInternal).

No knowing what ResourceController is just the point - we aren&#39;t in any way
using the ResourceHandler API, so we should either use it in a normal way,
through a ResourceLoader, or never instantiate a ResourceHandler, but rather do
the same work through another path.

&gt; &gt; &gt; FWIW, in the latest patchset I&#39;ve tried to duplicate what another piece of
&gt; &gt; code
&gt; &gt; &gt; is doing at
&gt; &gt; &gt;
&gt; &gt;
&gt;
<a href="https://cs-staging.chromium.org/chromium/src/content/browser/loader/resource_dispatcher_host_impl.cc?rcl=1469114341&amp;l=2320" rel="nofollow">https://cs-staging.chromium.org/chromium/src/content/browser/loader/resource_...</a>
&gt; &gt; &gt; (including darin&#39;s TODO... :-o).
&gt; &gt; 
&gt; &gt; Yea....Unfortunately for you, I wasn&#39;t an owner when that was signed off on,
&gt; and
&gt; &gt; I don&#39;t think we need any more instances of that that&#39;s going to be hanging
&gt; &gt; around for 5 more years.  Code should be able to assume APIs are consumed
&gt; &gt; correctly.
&gt; &gt; 
&gt; &gt; There are a few options, as I see it:
&gt; &gt; 
&gt; &gt; 1)  Create a ResourceLoader as normal and cancel it
&gt; 
&gt; This is what I am trying to do in the latest patchset.
&gt; 
&gt; This is slightly tricky wrt management of the lifetime of the ResourceLoader. 
&gt; If I destroy ResourceLoader upon return from BeginSaveFile, then the
&gt; ResponseCompleted task posted by ResourceLoader::CancelRequestInternal will
&gt; never run (because of weak ptr usage).  OTOH, I am not sure where I should
stash
&gt; the std::unique_ptr&lt;ResourceLoader&gt; - pending_loaders_? blocked_loaders_? just
&gt; call StartLoading (not sure how that impacts your comment to &quot;make sure the
&gt; URLRequest never starts&quot;)?
&gt; 
&gt; &gt; (Need to make sure the URLRequest never starts).
&gt; 
&gt; I am not sure what that means :-(.  I am not calling BeginRequestInternal in
&gt; this code path, but for managing lifetime of ResourceLoader I ended up calling
&gt; StartLoading.  OTOH, I checked that in this case
&gt; ResourceLoader::StartRequestInternal exits early, because
&gt; |!request_-&gt;status().is_success()| - AFAICT the success is set by
&gt; URLRequest::DoCancel.

We&#39;re blocking a request for security reasons.  It must never go over the
network.  If we start the underlying URLRequest, even if we later cancel the
request, it may still go over the network.

&gt; &gt; 2)  Never create a URLRequest, just cancel the request directly. 
&gt; &gt; AbortRequestBeforeItStarts does this, and if that works for you, let&#39;s use
it.
&gt; 
&gt; I couldn&#39;t figure out how to do this.
&gt; 
&gt; - Inside BeginSaveFile ResourceDispatcherHostImpl::filter_ is null (and I
don&#39;t
&gt; know what other instance of ResourceMessageFilter I could pass to
&gt; AbortRequestBeforeItStarts).
&gt;
&gt; - I am not sure how request ids work.  I see that BeginSaveFile decrements
&gt; request_id_ which makes me wary of using this field (maybe save-file-related
&gt; requests don&#39;t need a request_id?  there is no renderer involved fwiw).

Ahh...It looks like these requests don&#39;t come straight from the renderer, and
don&#39;t get a renderer-assigned request ID, so cancellation has to go through
another path.

&gt; &gt; However, I assume SaveFileResourceHandler has some sort of UI hooks to tell
&gt; the
&gt; &gt; user something went wrong?
&gt; 
&gt; SaveFileResourceHandler::OnResponseCompleted will propagate the status of the
&gt; resource request through SaveFileManager::SaveFinished (FILE thread) and
&gt; SavePackage::SaveFinished(...is_success...) (UI thread).  OTOH note that
failure
&gt; to save a subresource of a page doesn&#39;t cause failure of the whole save-page -
&gt; we just won&#39;t rewrite links to this subresource (e.g. we won&#39;t rewrite img.src
&gt; to point at ./foo_files/subresource.png).
&gt; 
&gt; &gt; Maybe a magic
&gt; &gt; InformWhateverAPIWe&#39;reTalkingToOfFailure method, that combines what starting
+
&gt; &gt; failing the request does?
&gt; 
&gt; I think that won&#39;t be needed based on the error-propagation-explanation I gave
&gt; above.

Hrm...  Creating a loader, cancelling the loader, and then calling
&quot;StartLoading&quot; seems problematic to me as well.  It looks like
ResourceLoader::StartRequestInternal() checks if the request was cancelled
(Before being started), so things may magically work, but...

It seems like all we need to do is:

BrowserThread::PostTask(
    BrowserThread::FILE, FROM_HERE,
    base::Bind(&amp;SaveFileManager::SaveFinished, save_manager, save_item_id,
               save_package_id, false));

Instead of creating the SaveFileResourceHandler, though we may not want to
introduce that level of dependency on the SaveFileManager to the RDH.

Could we just tell the SaveFileResourceHandler to fail the request, and have
that make SaveFileResourceHandler::OnWillStart return false?  Open to other
ideas.  Just don&#39;t want to introduce a dependency on a weird path through the
ResourceLoader or the SaveFileResourceHandler.  I&#39;ve learned that depending on
non-standard paths through state machines is just asking for trouble.</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg20"
           name="19">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(19)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-19">
                          On 2016/07/22 18:35:23, mmenke wrote: &gt; On 2016/07/22 18:10:45, Łukasz Anforowicz wrote: &gt; &gt; mmenke@, ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-22 19:31:47 UTC)
                <a href="#msg20">#20</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-19"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-19"
            >On 2016/07/22 18:35:23, mmenke wrote:
&gt; On 2016/07/22 18:10:45, Łukasz Anforowicz wrote:
&gt; &gt; mmenke@, could you please take another look?  I have little confidence in
the
&gt; &gt; latest changes I am making in resource_dispatcher_host_impl.cc (to be honest
I
&gt; &gt; had higher confidence in correctness of the previous, simple code - otoh, I
&gt; see
&gt; &gt; that tight coupling with SaveFileResourceHandler&#39;s implementation might be
&gt; &gt; undesirable for long-term maintenance, despite presence of regression tests
&gt; that
&gt; &gt; exercise that path).
&gt; &gt; 
&gt; &gt; FWIW, I&#39;ve verified that in the latest patchset (using
&gt; &gt; ResourceLoader::CancelRequest + ResourceDispatcherHostImpl::StartLoading) I
do
&gt; &gt; get a call to SaveFileResourceHandler::OnResponseCompleted with
&gt; &gt; false==status.is_success() when running
&gt; &gt; SavePageBrowserTest.SaveUnauthorizedResource that is being added in the
&gt; current
&gt; &gt; CL.  This correctly propagates into !is_success call to
&gt; &gt; SavePackage::SaveFinished.  So it seems that the new code is working (at
least
&gt; &gt; at a first glance).
&gt; &gt; 
&gt; &gt; On 2016/07/22 00:12:16, mmenke wrote:
&gt; &gt; &gt;
&gt; &gt;
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
&gt; &gt; &gt; File content/browser/loader/resource_dispatcher_host_impl.cc (right):
&gt; &gt; &gt; 
&gt; &gt; &gt;
&gt; &gt;
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1897" rel="nofollow">https://codereview.chromium.org/2075273002/diff/100001/content/browser/loader...</a>
&gt; &gt; &gt; content/browser/loader/resource_dispatcher_host_impl.cc:1897: nullptr); 
//
&gt; &gt; &gt; |defer|;  ignored by SaveFileResourceHandler.
&gt; &gt; &gt; On 2016/07/21 23:44:30, Łukasz Anforowicz wrote:
&gt; &gt; &gt; &gt; On 2016/07/21 19:52:53, Randy Smith - Not in Fridays wrote:
&gt; &gt; &gt; &gt; &gt; On 2016/07/21 19:38:43, mmenke wrote:
&gt; &gt; &gt; &gt; &gt; &gt; This seems kind of hideous.  ResourceDispatcherHostImpl shouldn&#39;t
&gt; depend
&gt; &gt; &gt; on
&gt; &gt; &gt; &gt; &gt; the
&gt; &gt; &gt; &gt; &gt; &gt; implementation details of SaveFileResourceHandler (Not accessing
&gt; &gt; |defer|,
&gt; &gt; &gt; &gt; let
&gt; &gt; &gt; &gt; &gt; &gt; alone setting it to |true|, or that this just magically works
without
&gt; &gt; &gt; &gt; setting
&gt; &gt; &gt; &gt; &gt; up
&gt; &gt; &gt; &gt; &gt; &gt; a ResourceLoader).
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; You&#39;re right.  Mea culpa.
&gt; &gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; &gt; (Mind you, this is a string the other end of which is getting
&gt; &gt; BeginSaveFile
&gt; &gt; &gt; &gt; out
&gt; &gt; &gt; &gt; &gt; of ResourceDispatcherHostImpl, but that&#39;s clearly not in scope for
this
&gt; &gt; CL,
&gt; &gt; &gt; &gt; and
&gt; &gt; &gt; &gt; &gt; I would agree with you that calling OnResponseCompleted() in a
&gt; reasonably
&gt; &gt; &gt; &gt; &gt; handler agnostic way is.)
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; Thanks for raising this up.  I thought that it might be okay to depend
on
&gt; &gt; the
&gt; &gt; &gt; &gt; type, because SaveFileResourceHandler is created right above on line
1886.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; I am not sure what &quot;calling OnResponseCompleted in a reasonable handler
&gt; &gt; &gt; agnostic
&gt; &gt; &gt; &gt; way&quot; means :-(  In particular, there is no documentation of |defer|
&gt; &gt; parameter
&gt; &gt; &gt; &gt; and I am not sure if it is appropriate to duplicate what other callers
of
&gt; &gt; &gt; &gt; OnResponseCompleted do (|if (!defer) ResumeIfDeferred();|) since there
is
&gt; &gt; &gt; &gt; nothing save-page-related to resume and resuming non-save-page-related
&gt; &gt; things
&gt; &gt; &gt; &gt; seems out of place here.
&gt; &gt; &gt; 
&gt; &gt; &gt; The method is inherited from content::ResourceHandler, so that&#39;s where
&gt; they&#39;re
&gt; &gt; &gt; documented.  
&gt; &gt; 
&gt; &gt; Ooops.  You&#39;re right.  When looking at the comments I thought that I am
&gt; looking
&gt; &gt; at the base class, but apparently I was looking at the child... :-(
&gt; &gt; 
&gt; &gt; &gt; Beyond the NULL defer parameter, it also doesn&#39;t have its
&gt; &gt; &gt; ResourceController field set, either.
&gt; &gt; 
&gt; &gt; Err... okay.  Not sure which ResourceController I can / should use here.  I
&gt; can
&gt; &gt; instantiate an ad-hoc ResourceLoader I guess (i.e. copy&amp;paste the
&gt; instantiation
&gt; &gt; from ResourceDispatcherHostImpl::BeginRequestInternal).
&gt; 
&gt; No knowing what ResourceController is just the point - we aren&#39;t in any way
&gt; using the ResourceHandler API, so we should either use it in a normal way,
&gt; through a ResourceLoader, or never instantiate a ResourceHandler, but rather
do
&gt; the same work through another path.
&gt; 
&gt; &gt; &gt; &gt; FWIW, in the latest patchset I&#39;ve tried to duplicate what another piece
of
&gt; &gt; &gt; code
&gt; &gt; &gt; &gt; is doing at
&gt; &gt; &gt; &gt;
&gt; &gt; &gt;
&gt; &gt;
&gt;
<a href="https://cs-staging.chromium.org/chromium/src/content/browser/loader/resource_dispatcher_host_impl.cc?rcl=1469114341&amp;l=2320" rel="nofollow">https://cs-staging.chromium.org/chromium/src/content/browser/loader/resource_...</a>
&gt; &gt; &gt; &gt; (including darin&#39;s TODO... :-o).
&gt; &gt; &gt; 
&gt; &gt; &gt; Yea....Unfortunately for you, I wasn&#39;t an owner when that was signed off
on,
&gt; &gt; and
&gt; &gt; &gt; I don&#39;t think we need any more instances of that that&#39;s going to be
hanging
&gt; &gt; &gt; around for 5 more years.  Code should be able to assume APIs are consumed
&gt; &gt; &gt; correctly.
&gt; &gt; &gt; 
&gt; &gt; &gt; There are a few options, as I see it:
&gt; &gt; &gt; 
&gt; &gt; &gt; 1)  Create a ResourceLoader as normal and cancel it
&gt; &gt; 
&gt; &gt; This is what I am trying to do in the latest patchset.
&gt; &gt; 
&gt; &gt; This is slightly tricky wrt management of the lifetime of the
ResourceLoader. 
&gt; &gt; If I destroy ResourceLoader upon return from BeginSaveFile, then the
&gt; &gt; ResponseCompleted task posted by ResourceLoader::CancelRequestInternal will
&gt; &gt; never run (because of weak ptr usage).  OTOH, I am not sure where I should
&gt; stash
&gt; &gt; the std::unique_ptr&lt;ResourceLoader&gt; - pending_loaders_? blocked_loaders_?
just
&gt; &gt; call StartLoading (not sure how that impacts your comment to &quot;make sure the
&gt; &gt; URLRequest never starts&quot;)?
&gt; &gt; 
&gt; &gt; &gt; (Need to make sure the URLRequest never starts).
&gt; &gt; 
&gt; &gt; I am not sure what that means :-(.  I am not calling BeginRequestInternal in
&gt; &gt; this code path, but for managing lifetime of ResourceLoader I ended up
calling
&gt; &gt; StartLoading.  OTOH, I checked that in this case
&gt; &gt; ResourceLoader::StartRequestInternal exits early, because
&gt; &gt; |!request_-&gt;status().is_success()| - AFAICT the success is set by
&gt; &gt; URLRequest::DoCancel.
&gt; 
&gt; We&#39;re blocking a request for security reasons.  It must never go over the
&gt; network.  If we start the underlying URLRequest, even if we later cancel the
&gt; request, it may still go over the network.

Thanks for reemphasizing this point - this is after all the whole point behind
this CL.  OTOH, I don&#39;t see how to add such verification to the new
SavePageBrowserTest.SaveUnauthorizedResource test - any suggestions?  In
particular, I am not sure how to monitor &quot;file:&quot; URI requests (e.g.
embedded_test_server()-&gt;RegisterRequestMonitor would only intercept http
requests AFAIK.

&gt; &gt; &gt; 2)  Never create a URLRequest, just cancel the request directly. 
&gt; &gt; &gt; AbortRequestBeforeItStarts does this, and if that works for you, let&#39;s use
&gt; it.
&gt; &gt; 
&gt; &gt; I couldn&#39;t figure out how to do this.
&gt; &gt; 
&gt; &gt; - Inside BeginSaveFile ResourceDispatcherHostImpl::filter_ is null (and I
&gt; don&#39;t
&gt; &gt; know what other instance of ResourceMessageFilter I could pass to
&gt; &gt; AbortRequestBeforeItStarts).
&gt; &gt;
&gt; &gt; - I am not sure how request ids work.  I see that BeginSaveFile decrements
&gt; &gt; request_id_ which makes me wary of using this field (maybe save-file-related
&gt; &gt; requests don&#39;t need a request_id?  there is no renderer involved fwiw).
&gt; 
&gt; Ahh...It looks like these requests don&#39;t come straight from the renderer, and
&gt; don&#39;t get a renderer-assigned request ID, so cancellation has to go through
&gt; another path.
&gt; 
&gt; &gt; &gt; However, I assume SaveFileResourceHandler has some sort of UI hooks to
tell
&gt; &gt; the
&gt; &gt; &gt; user something went wrong?
&gt; &gt; 
&gt; &gt; SaveFileResourceHandler::OnResponseCompleted will propagate the status of
the
&gt; &gt; resource request through SaveFileManager::SaveFinished (FILE thread) and
&gt; &gt; SavePackage::SaveFinished(...is_success...) (UI thread).  OTOH note that
&gt; failure
&gt; &gt; to save a subresource of a page doesn&#39;t cause failure of the whole save-page
-
&gt; &gt; we just won&#39;t rewrite links to this subresource (e.g. we won&#39;t rewrite
img.src
&gt; &gt; to point at ./foo_files/subresource.png).
&gt; &gt; 
&gt; &gt; &gt; Maybe a magic
&gt; &gt; &gt; InformWhateverAPIWe&#39;reTalkingToOfFailure method, that combines what
starting
&gt; +
&gt; &gt; &gt; failing the request does?
&gt; &gt; 
&gt; &gt; I think that won&#39;t be needed based on the error-propagation-explanation I
gave
&gt; &gt; above.
&gt; 
&gt; Hrm...  Creating a loader, cancelling the loader, and then calling
&gt; &quot;StartLoading&quot; seems problematic to me as well.  It looks like
&gt; ResourceLoader::StartRequestInternal() checks if the request was cancelled
&gt; (Before being started), so things may magically work, but...

Yes - it does seem a little bit fragile...

&gt; It seems like all we need to do is:
&gt; 
&gt; BrowserThread::PostTask(
&gt;     BrowserThread::FILE, FROM_HERE,
&gt;     base::Bind(&amp;SaveFileManager::SaveFinished, save_manager, save_item_id,
&gt;                save_package_id, false));
&gt; 
&gt; Instead of creating the SaveFileResourceHandler, though we may not want to
&gt; introduce that level of dependency on the SaveFileManager to the RDH.

Yes - this would work.
&gt; 
&gt; Could we just tell the SaveFileResourceHandler to fail the request, and have
&gt; that make SaveFileResourceHandler::OnWillStart return false?  Open to other
&gt; ideas.  Just don&#39;t want to introduce a dependency on a weird path through the
&gt; ResourceLoader or the SaveFileResourceHandler.  I&#39;ve learned that depending on
&gt; non-standard paths through state machines is just asking for trouble.

I have this in the latest patchset.  It works and is relatively simple.  There
is a little bit of indirection (in that we don&#39;t return early in BeginSaveFile,
but go through with regular request processing and rely on
SaveFileResourceHandler cancelling in OnWillStart) but I guess this is okay.

WDYT?</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg21"
           name="20">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(20)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>mmenke</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-20">
                          On 2016/07/22 19:31:47, Łukasz Anforowicz wrote: &gt; On 2016/07/22 18:35:23, mmenke wrote: &gt; &gt; On ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-22 19:49:10 UTC)
                <a href="#msg21">#21</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-20"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-20"
            >On 2016/07/22 19:31:47, Łukasz Anforowicz wrote:
&gt; On 2016/07/22 18:35:23, mmenke wrote:
&gt; &gt; On 2016/07/22 18:10:45, Łukasz Anforowicz wrote:
&gt; &gt; &gt; I am not sure what that means :-(.  I am not calling BeginRequestInternal
in
&gt; &gt; &gt; this code path, but for managing lifetime of ResourceLoader I ended up
&gt; calling
&gt; &gt; &gt; StartLoading.  OTOH, I checked that in this case
&gt; &gt; &gt; ResourceLoader::StartRequestInternal exits early, because
&gt; &gt; &gt; |!request_-&gt;status().is_success()| - AFAICT the success is set by
&gt; &gt; &gt; URLRequest::DoCancel.
&gt; &gt; 
&gt; &gt; We&#39;re blocking a request for security reasons.  It must never go over the
&gt; &gt; network.  If we start the underlying URLRequest, even if we later cancel the
&gt; &gt; request, it may still go over the network.
&gt; 
&gt; Thanks for reemphasizing this point - this is after all the whole point behind
&gt; this CL.  OTOH, I don&#39;t see how to add such verification to the new
&gt; SavePageBrowserTest.SaveUnauthorizedResource test - any suggestions?  In
&gt; particular, I am not sure how to monitor &quot;file:&quot; URI requests (e.g.
&gt; embedded_test_server()-&gt;RegisterRequestMonitor would only intercept http
&gt; requests AFAIK.

You can add a URLRequestInterceptor to catch requests for particular URLs
through URLRequestFilter (Must be called on the IO thread).  Then make sure it
never saw anything when the test is done.  Make sure to remove the handler at
the end of the test.

&gt; &gt; Could we just tell the SaveFileResourceHandler to fail the request, and have
&gt; &gt; that make SaveFileResourceHandler::OnWillStart return false?  Open to other
&gt; &gt; ideas.  Just don&#39;t want to introduce a dependency on a weird path through
the
&gt; &gt; ResourceLoader or the SaveFileResourceHandler.  I&#39;ve learned that depending
on
&gt; &gt; non-standard paths through state machines is just asking for trouble.
&gt; 
&gt; I have this in the latest patchset.  It works and is relatively simple.  There
&gt; is a little bit of indirection (in that we don&#39;t return early in
BeginSaveFile,
&gt; but go through with regular request processing and rely on
&gt; SaveFileResourceHandler cancelling in OnWillStart) but I guess this is okay.
&gt; 
&gt; WDYT?

You&#39;re right about the indirection, but I can&#39;t think of an approach I like
better.

If SaveFileManager had a NotifyComplete/Failed/Whatever method that worked from
the IO thread, I&#39;d say just call that, but having to do the post task to the
file thread from RDH seems uglier to me than this approach (Also, the
SaveFileManager is currently exclusively used on the FILE and UI threads, so
adding a random method that can be called on any thread doesn&#39;t seem a great
addition to its API).</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg22"
           name="21">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(21)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Randy Smith (Not in Mondays)</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-21">
                          On 2016/07/22 19:49:10, mmenke wrote: &gt; On 2016/07/22 19:31:47, Łukasz Anforowicz wrote: &gt; &gt; On ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 5 months ago
		(2016-07-23 14:10:56 UTC)
                <a href="#msg22">#22</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-21"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-21"
            >On 2016/07/22 19:49:10, mmenke wrote:
&gt; On 2016/07/22 19:31:47, Łukasz Anforowicz wrote:
&gt; &gt; On 2016/07/22 18:35:23, mmenke wrote:
&gt; &gt; &gt; On 2016/07/22 18:10:45, Łukasz Anforowicz wrote:
&gt; &gt; &gt; &gt; I am not sure what that means :-(.  I am not calling
BeginRequestInternal
&gt; in
&gt; &gt; &gt; &gt; this code path, but for managing lifetime of ResourceLoader I ended up
&gt; &gt; calling
&gt; &gt; &gt; &gt; StartLoading.  OTOH, I checked that in this case
&gt; &gt; &gt; &gt; ResourceLoader::StartRequestInternal exits early, because
&gt; &gt; &gt; &gt; |!request_-&gt;status().is_success()| - AFAICT the success is set by
&gt; &gt; &gt; &gt; URLRequest::DoCancel.
&gt; &gt; &gt; 
&gt; &gt; &gt; We&#39;re blocking a request for security reasons.  It must never go over the
&gt; &gt; &gt; network.  If we start the underlying URLRequest, even if we later cancel
the
&gt; &gt; &gt; request, it may still go over the network.
&gt; &gt; 
&gt; &gt; Thanks for reemphasizing this point - this is after all the whole point
behind
&gt; &gt; this CL.  OTOH, I don&#39;t see how to add such verification to the new
&gt; &gt; SavePageBrowserTest.SaveUnauthorizedResource test - any suggestions?  In
&gt; &gt; particular, I am not sure how to monitor &quot;file:&quot; URI requests (e.g.
&gt; &gt; embedded_test_server()-&gt;RegisterRequestMonitor would only intercept http
&gt; &gt; requests AFAIK.
&gt; 
&gt; You can add a URLRequestInterceptor to catch requests for particular URLs
&gt; through URLRequestFilter (Must be called on the IO thread).  Then make sure it
&gt; never saw anything when the test is done.  Make sure to remove the handler at
&gt; the end of the test.
&gt; 
&gt; &gt; &gt; Could we just tell the SaveFileResourceHandler to fail the request, and
have
&gt; &gt; &gt; that make SaveFileResourceHandler::OnWillStart return false?  Open to
other
&gt; &gt; &gt; ideas.  Just don&#39;t want to introduce a dependency on a weird path through
&gt; the
&gt; &gt; &gt; ResourceLoader or the SaveFileResourceHandler.  I&#39;ve learned that
depending
&gt; on
&gt; &gt; &gt; non-standard paths through state machines is just asking for trouble.
&gt; &gt; 
&gt; &gt; I have this in the latest patchset.  It works and is relatively simple. 
There
&gt; &gt; is a little bit of indirection (in that we don&#39;t return early in
&gt; BeginSaveFile,
&gt; &gt; but go through with regular request processing and rely on
&gt; &gt; SaveFileResourceHandler cancelling in OnWillStart) but I guess this is okay.
&gt; &gt; 
&gt; &gt; WDYT?
&gt; 
&gt; You&#39;re right about the indirection, but I can&#39;t think of an approach I like
&gt; better.
&gt; 
&gt; If SaveFileManager had a NotifyComplete/Failed/Whatever method that worked
from
&gt; the IO thread, I&#39;d say just call that, but having to do the post task to the
&gt; file thread from RDH seems uglier to me than this approach (Also, the
&gt; SaveFileManager is currently exclusively used on the FILE and UI threads, so
&gt; adding a random method that can be called on any thread doesn&#39;t seem a great
&gt; addition to its API).

Just to be explicit: I&#39;m disappearing for a week, so leaving this to Matt.  I&#39;ll
leave myself on as reviewer in case it takes more than a week (this is the kind
of thing I should solidly understand as a content/browser/loader OWNER) but I&#39;m
not blocking so that shouldn&#39;t get in the way.  This is obvious from the
conversation but: Don&#39;t land without Matt&#39;s stamp (I don&#39;t see a way to retract
my stamp without blocking the CL, but Matt&#39;s right to want us to find a
different way to do this).</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message  approval  "
           
           id="msg23"
           name="22">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(22)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>mmenke</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-22">
                          Sorry for the delay. SaveFileResourceHandler and content/browser/loader LGTM. I made two suggestions, but don&#39;t think ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 14:45:19 UTC)
                <a href="#msg23">#23</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-22"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-22"
            >Sorry for the delay.

SaveFileResourceHandler and content/browser/loader LGTM.  I made two
suggestions, but don&#39;t think it needs re-review regardless of whether or not you
take them.

I think I can defer to Randy&#39;s earlier signoff for the rest?

<a href="https://codereview.chromium.org/2075273002/diff/200001/content/browser/download/save_file_resource_handler.h" rel="nofollow">https://codereview.chromium.org/2075273002/diff/200001/content/browser/downlo...</a>
File content/browser/download/save_file_resource_handler.h (right):

<a href="https://codereview.chromium.org/2075273002/diff/200001/content/browser/download/save_file_resource_handler.h#newcode76" rel="nofollow">https://codereview.chromium.org/2075273002/diff/200001/content/browser/downlo...</a>
content/browser/download/save_file_resource_handler.h:76: void
MarkAsUnauthorized() { is_authorized_ = false; }
optional suggestion:  To be really paranoid about this, could take this in the
constructor as an enum class object.

This forces the caller to explicitly declare if something is authorized whenver
using this class.  Yes, only used in one place, but I&#39;m paranoid.

<a href="https://codereview.chromium.org/2075273002/diff/200001/content/browser/download/save_file_resource_handler.h#newcode76" rel="nofollow">https://codereview.chromium.org/2075273002/diff/200001/content/browser/downlo...</a>
content/browser/download/save_file_resource_handler.h:76: void
MarkAsUnauthorized() { is_authorized_ = false; }
optional:  Could add a comment either here or maybe better, to the RDH about why
we set up everything as normal except this bit when the request isn&#39;t
authorized.</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg24"
           name="23">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(23)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-23">
                          On 2016/07/27 14:45:19, mmenke wrote: &gt; Sorry for the delay. No worries. Thanks for the ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 18:48:02 UTC)
                <a href="#msg24">#24</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-23"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-23"
            >On 2016/07/27 14:45:19, mmenke wrote:
&gt; Sorry for the delay.

No worries.  Thanks for the review.
&gt; 
&gt; SaveFileResourceHandler and content/browser/loader LGTM.  I made two
&gt; suggestions, but don&#39;t think it needs re-review regardless of whether or not
you
&gt; take them.

Okay.
&gt; 
&gt; I think I can defer to Randy&#39;s earlier signoff for the rest?

Yes, I believe this should be ready to land given Randy&#39;s and Asanka&#39;s earlier
reviews.

&gt;
<a href="https://codereview.chromium.org/2075273002/diff/200001/content/browser/download/save_file_resource_handler.h" rel="nofollow">https://codereview.chromium.org/2075273002/diff/200001/content/browser/downlo...</a>
&gt; File content/browser/download/save_file_resource_handler.h (right):
&gt; 
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/200001/content/browser/download/save_file_resource_handler.h#newcode76" rel="nofollow">https://codereview.chromium.org/2075273002/diff/200001/content/browser/downlo...</a>
&gt; content/browser/download/save_file_resource_handler.h:76: void
&gt; MarkAsUnauthorized() { is_authorized_ = false; }
&gt; optional suggestion:  To be really paranoid about this, could take this in the
&gt; constructor as an enum class object.
&gt; 
&gt; This forces the caller to explicitly declare if something is authorized
whenver
&gt; using this class.  Yes, only used in one place, but I&#39;m paranoid.

I don&#39;t know, that doesn&#39;t feel right.  SaveFileResourceHandler always begins
its life as authorized - I am not sure if explicitly forcing the caller to state
this helps here (because the thing we care about is not specifying the initial
authorized-vs-unauthorized state, but checking ChildProcessSecurityPolicy later
and marking as unauthorized if needed).
 
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/200001/content/browser/download/save_file_resource_handler.h#newcode76" rel="nofollow">https://codereview.chromium.org/2075273002/diff/200001/content/browser/downlo...</a>
&gt; content/browser/download/save_file_resource_handler.h:76: void
&gt; MarkAsUnauthorized() { is_authorized_ = false; }
&gt; optional:  Could add a comment either here or maybe better, to the RDH about
why
&gt; we set up everything as normal except this bit when the request isn&#39;t
&gt; authorized.

Good point.  I&#39;ve added comments in both places.

When writing the comments about having to call MarkAsUnauthorized before
starting the request, I thought it would be good to add a DCHECK for this.  I
think DCHECK(!is_pending()) does a good job here (I&#39;ve checked that it will get
hit if [for test purposes] calling MarkAsUnauthorized after
RDHI::BeginRequestInternal).</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg25"
           name="24">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(24)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>mmenke</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-24">
                          On 2016/07/27 18:48:02, Łukasz Anforowicz wrote: &gt; On 2016/07/27 14:45:19, mmenke wrote: &gt; &gt; Sorry ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 18:54:18 UTC)
                <a href="#msg25">#25</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-24"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-24"
            >On 2016/07/27 18:48:02, Łukasz Anforowicz wrote:
&gt; On 2016/07/27 14:45:19, mmenke wrote:
&gt; &gt; Sorry for the delay.
&gt; 
&gt; No worries.  Thanks for the review.
&gt; &gt; 
&gt; &gt; SaveFileResourceHandler and content/browser/loader LGTM.  I made two
&gt; &gt; suggestions, but don&#39;t think it needs re-review regardless of whether or not
&gt; you
&gt; &gt; take them.
&gt; 
&gt; Okay.
&gt; &gt; 
&gt; &gt; I think I can defer to Randy&#39;s earlier signoff for the rest?
&gt; 
&gt; Yes, I believe this should be ready to land given Randy&#39;s and Asanka&#39;s earlier
&gt; reviews.
&gt; 
&gt; &gt;
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/200001/content/browser/download/save_file_resource_handler.h" rel="nofollow">https://codereview.chromium.org/2075273002/diff/200001/content/browser/downlo...</a>
&gt; &gt; File content/browser/download/save_file_resource_handler.h (right):
&gt; &gt; 
&gt; &gt;
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/200001/content/browser/download/save_file_resource_handler.h#newcode76" rel="nofollow">https://codereview.chromium.org/2075273002/diff/200001/content/browser/downlo...</a>
&gt; &gt; content/browser/download/save_file_resource_handler.h:76: void
&gt; &gt; MarkAsUnauthorized() { is_authorized_ = false; }
&gt; &gt; optional suggestion:  To be really paranoid about this, could take this in
the
&gt; &gt; constructor as an enum class object.
&gt; &gt; 
&gt; &gt; This forces the caller to explicitly declare if something is authorized
&gt; whenver
&gt; &gt; using this class.  Yes, only used in one place, but I&#39;m paranoid.
&gt; 
&gt; I don&#39;t know, that doesn&#39;t feel right.  SaveFileResourceHandler always begins
&gt; its life as authorized - I am not sure if explicitly forcing the caller to
state
&gt; this helps here (because the thing we care about is not specifying the initial
&gt; authorized-vs-unauthorized state, but checking ChildProcessSecurityPolicy
later
&gt; and marking as unauthorized if needed).

Not going to fight over this, but I&#39;m not sure what &quot;begins its life as
authorized&quot; means - we could trivially check if it&#39;s authorized before we create
it.  It&#39;s not like we can only learn it&#39;s not authorized after we create the
handler.</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message  approval  "
           
           id="msg26"
           name="25">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(25)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>mmenke</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-25">
                          Still LGTM https://codereview.chromium.org/2075273002/diff/220001/content/browser/loader/resource_dispatcher_host_impl.cc File content/browser/loader/resource_dispatcher_host_impl.cc (right): https://codereview.chromium.org/2075273002/diff/220001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1900 content/browser/loader/resource_dispatcher_host_impl.cc:1900: // because we know MarkAsUnauthorized will cause ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 18:55:59 UTC)
                <a href="#msg26">#26</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-25"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-25"
            >Still LGTM

<a href="https://codereview.chromium.org/2075273002/diff/220001/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/220001/content/browser/loader...</a>
File content/browser/loader/resource_dispatcher_host_impl.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/220001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1900" rel="nofollow">https://codereview.chromium.org/2075273002/diff/220001/content/browser/loader...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1900: // because we know
MarkAsUnauthorized will cause the request to be
nit (x2):  Avoid &quot;we&quot; in comments, due to ambiguity (&quot;We the code&quot;, &quot;We the
programmers&quot;, &quot;We the pod people&quot;...)</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg27"
           name="26">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(26)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-26">
                          On 2016/07/27 18:54:18, mmenke wrote: https://codereview.chromium.org/2075273002/diff/200001/content/browser/download/save_file_resource_handler.h#newcode76 &gt; &gt; &gt; content/browser/download/save_file_resource_handler.h:76: void &gt; &gt; &gt; MarkAsUnauthorized() ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 19:16:51 UTC)
                <a href="#msg27">#27</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-26"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-26"
            >On 2016/07/27 18:54:18, mmenke wrote:
<a href="https://codereview.chromium.org/2075273002/diff/200001/content/browser/download/save_file_resource_handler.h#newcode76" rel="nofollow">https://codereview.chromium.org/2075273002/diff/200001/content/browser/downlo...</a>
&gt; &gt; &gt; content/browser/download/save_file_resource_handler.h:76: void
&gt; &gt; &gt; MarkAsUnauthorized() { is_authorized_ = false; }
&gt; &gt; &gt; optional suggestion:  To be really paranoid about this, could take this in
&gt; the
&gt; &gt; &gt; constructor as an enum class object.
&gt; &gt; &gt; 
&gt; &gt; &gt; This forces the caller to explicitly declare if something is authorized
&gt; &gt; whenver
&gt; &gt; &gt; using this class.  Yes, only used in one place, but I&#39;m paranoid.
&gt; &gt; 
&gt; &gt; I don&#39;t know, that doesn&#39;t feel right.  SaveFileResourceHandler always
begins
&gt; &gt; its life as authorized - I am not sure if explicitly forcing the caller to
&gt; state
&gt; &gt; this helps here (because the thing we care about is not specifying the
initial
&gt; &gt; authorized-vs-unauthorized state, but checking ChildProcessSecurityPolicy
&gt; later
&gt; &gt; and marking as unauthorized if needed).
&gt; 
&gt; Not going to fight over this, but I&#39;m not sure what &quot;begins its life as
&gt; authorized&quot; means - we could trivially check if it&#39;s authorized before we
create
&gt; it.  It&#39;s not like we can only learn it&#39;s not authorized after we create the
&gt; handler.

Oh, right.  Thanks for pointing out the obvious fact that MarkAsUnauthorized can
be folded into the constructor.  This is much nicer because setting the
authorization state via the constructor totally avoids the problem of calling
MarkAsUnauthorized after the request has already started.

Done (I think) in latest patchset.

<a href="https://codereview.chromium.org/2075273002/diff/220001/content/browser/loader/resource_dispatcher_host_impl.cc" rel="nofollow">https://codereview.chromium.org/2075273002/diff/220001/content/browser/loader...</a>
File content/browser/loader/resource_dispatcher_host_impl.cc (right):

<a href="https://codereview.chromium.org/2075273002/diff/220001/content/browser/loader/resource_dispatcher_host_impl.cc#newcode1900" rel="nofollow">https://codereview.chromium.org/2075273002/diff/220001/content/browser/loader...</a>
content/browser/loader/resource_dispatcher_host_impl.cc:1900: // because we know
MarkAsUnauthorized will cause the request to be
On 2016/07/27 18:55:59, mmenke wrote:
&gt; nit (x2):  Avoid &quot;we&quot; in comments, due to ambiguity (&quot;We the code&quot;, &quot;We the
&gt; programmers&quot;, &quot;We the pod people&quot;...)

Done :-)</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    generated"
           style="display: none"
           id="generated-msg28"
           name="27">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(27)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-27">
                          The CQ bit was checked by lukasza@chromium.org to run a CQ dry run
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 19:16:57 UTC)
                <a href="#msg28">#28</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-27"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-27"
            >The CQ bit was checked by <a href="mailto:lukasza@chromium.org">lukasza@chromium.org</a> to run a CQ dry run</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    generated"
           style="display: none"
           id="generated-msg29"
           name="28">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(28)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>commit-bot: I haz the power</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-28">
                          Dry run: CQ is trying da patch. Follow status at https://chromium-cq-status.appspot.com/v2/patch-status/codereview.chromium.org/2075273002/240001
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 19:17:19 UTC)
                <a href="#msg29">#29</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-28"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-28"
            >Dry run: CQ is trying da patch. Follow status at
 
<a href="https://chromium-cq-status.appspot.com/v2/patch-status/codereview.chromium.org/2075273002/240001" rel="nofollow">https://chromium-cq-status.appspot.com/v2/patch-status/codereview.chromium.or...</a></pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg30"
           name="29">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(29)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>mmenke</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-29">
                          On 2016/07/27 19:16:51, Łukasz Anforowicz wrote: &gt; On 2016/07/27 18:54:18, mmenke wrote: &gt; https://codereview.chromium.org/2075273002/diff/200001/content/browser/download/save_file_resource_handler.h#newcode76 &gt; ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 19:40:53 UTC)
                <a href="#msg30">#30</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-29"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-29"
            >On 2016/07/27 19:16:51, Łukasz Anforowicz wrote:
&gt; On 2016/07/27 18:54:18, mmenke wrote:
&gt;
<a href="https://codereview.chromium.org/2075273002/diff/200001/content/browser/download/save_file_resource_handler.h#newcode76" rel="nofollow">https://codereview.chromium.org/2075273002/diff/200001/content/browser/downlo...</a>
&gt; &gt; &gt; &gt; content/browser/download/save_file_resource_handler.h:76: void
&gt; &gt; &gt; &gt; MarkAsUnauthorized() { is_authorized_ = false; }
&gt; &gt; &gt; &gt; optional suggestion:  To be really paranoid about this, could take this
in
&gt; &gt; the
&gt; &gt; &gt; &gt; constructor as an enum class object.
&gt; &gt; &gt; &gt; 
&gt; &gt; &gt; &gt; This forces the caller to explicitly declare if something is authorized
&gt; &gt; &gt; whenver
&gt; &gt; &gt; &gt; using this class.  Yes, only used in one place, but I&#39;m paranoid.
&gt; &gt; &gt; 
&gt; &gt; &gt; I don&#39;t know, that doesn&#39;t feel right.  SaveFileResourceHandler always
&gt; begins
&gt; &gt; &gt; its life as authorized - I am not sure if explicitly forcing the caller to
&gt; &gt; state
&gt; &gt; &gt; this helps here (because the thing we care about is not specifying the
&gt; initial
&gt; &gt; &gt; authorized-vs-unauthorized state, but checking ChildProcessSecurityPolicy
&gt; &gt; later
&gt; &gt; &gt; and marking as unauthorized if needed).
&gt; &gt; 
&gt; &gt; Not going to fight over this, but I&#39;m not sure what &quot;begins its life as
&gt; &gt; authorized&quot; means - we could trivially check if it&#39;s authorized before we
&gt; create
&gt; &gt; it.  It&#39;s not like we can only learn it&#39;s not authorized after we create the
&gt; &gt; handler.
&gt; 
&gt; Oh, right.  Thanks for pointing out the obvious fact that MarkAsUnauthorized
can
&gt; be folded into the constructor.  This is much nicer because setting the
&gt; authorization state via the constructor totally avoids the problem of calling
&gt; MarkAsUnauthorized after the request has already started.
&gt; 
&gt; Done (I think) in latest patchset.

Looks done to me, thanks!</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    generated"
           style="display: none"
           id="generated-msg31"
           name="30">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(30)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>commit-bot: I haz the power</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-30">
                          The CQ bit was unchecked by commit-bot@chromium.org
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 20:15:39 UTC)
                <a href="#msg31">#31</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-30"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-30"
            >The CQ bit was unchecked by <a href="mailto:commit-bot@chromium.org">commit-bot@chromium.org</a></pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    generated"
           style="display: none"
           id="generated-msg32"
           name="31">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(31)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>commit-bot: I haz the power</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-31">
                          Dry run: Try jobs failed on following builders: win_chromium_rel_ng on master.tryserver.chromium.win (JOB_FAILED, http://build.chromium.org/p/tryserver.chromium.win/builders/win_chromium_rel_ng/builds/263305)
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 20:15:40 UTC)
                <a href="#msg32">#32</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-31"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-31"
            >Dry run: Try jobs failed on following builders:
  win_chromium_rel_ng on master.tryserver.chromium.win (JOB_FAILED,
<a href="http://build.chromium.org/p/tryserver.chromium.win/builders/win_chromium_rel_ng/builds/263305" rel="nofollow">http://build.chromium.org/p/tryserver.chromium.win/builders/win_chromium_rel_...</a>)</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    generated"
           style="display: none"
           id="generated-msg33"
           name="32">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(32)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-32">
                          The CQ bit was checked by lukasza@chromium.org
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 20:20:18 UTC)
                <a href="#msg33">#33</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-32"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-32"
            >The CQ bit was checked by <a href="mailto:lukasza@chromium.org">lukasza@chromium.org</a></pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    generated"
           style="display: none"
           id="generated-msg34"
           name="33">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(33)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>Łukasz Anforowicz</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-33">
                          The patchset sent to the CQ was uploaded after l-g-t-m from rdsmith@chromium.org, mmenke@chromium.org Link to ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 20:20:19 UTC)
                <a href="#msg34">#34</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-33"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-33"
            >The patchset sent to the CQ was uploaded after l-g-t-m from
<a href="mailto:rdsmith@chromium.org">rdsmith@chromium.org</a>, <a href="mailto:mmenke@chromium.org">mmenke@chromium.org</a>
Link to the patchset: <a href="https://codereview.chromium.org/2075273002/#ps240001" rel="nofollow">https://codereview.chromium.org/2075273002/#ps240001</a>
(title: &quot;Replace MarkAsUnauthorized with constructor argument.&quot;)</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message    "
           
           id="msg35"
           name="34">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(34)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>commit-bot: I haz the power</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-34">
                          CQ is trying da patch. Follow status at https://chromium-cq-status.appspot.com/v2/patch-status/codereview.chromium.org/2075273002/240001
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 20:20:29 UTC)
                <a href="#msg35">#35</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-34"
             style="display: none;">
          <div class="message-body">
            
            <pre name="cl-message-34"
            >CQ is trying da patch. Follow status at
 
<a href="https://chromium-cq-status.appspot.com/v2/patch-status/codereview.chromium.org/2075273002/240001" rel="nofollow">https://chromium-cq-status.appspot.com/v2/patch-status/codereview.chromium.or...</a></pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message issue_was_closed   "
           
           id="msg36"
           name="35">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(35)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>commit-bot: I haz the power</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-35">
                          Committed patchset #13 (id:240001)
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 21:03:42 UTC)
                <a href="#msg36">#36</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-35"
             style="display: none;">
          <div class="message-body">
            
              <span class="extra-note">
                Message was sent while issue was closed.
              </span>
            
            <pre name="cl-message-35"
            >Committed patchset #13 (id:240001)</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message issue_was_closed   generated"
           style="display: none"
           id="generated-msg37"
           name="36">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(36)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>commit-bot: I haz the power</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden;"
                           class="extra"
                           id="cl-preview-36">
                          Description was changed from ========== Resource requests from Save-Page-As should go through CanRequestURL checks. This ...
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 21:05:08 UTC)
                <a href="#msg37">#37</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-36"
             style="display: none;">
          <div class="message-body">
            
              <span class="extra-note">
                Message was sent while issue was closed.
              </span>
            
            <pre name="cl-message-36"
            >Description was changed from

==========
Resource requests from Save-Page-As should go through CanRequestURL checks.

This CL:

- Added checks to ResourceDispatcherHostImpl::BeginSaveFile to verify if
  the renderer process is authorized to access a given resource.

- Removed separate code path for file: URIs that used to be implemented
  in SaveFileManager::SaveLocalFile.  Avoiding a separate code path
  helps consolidate all authorization checks in one place.

BUG=616429
==========

to

==========
Resource requests from Save-Page-As should go through CanRequestURL checks.

This CL:

- Added checks to ResourceDispatcherHostImpl::BeginSaveFile to verify if
  the renderer process is authorized to access a given resource.

- Removed separate code path for file: URIs that used to be implemented
  in SaveFileManager::SaveLocalFile.  Avoiding a separate code path
  helps consolidate all authorization checks in one place.

BUG=616429

Committed: <a href="https://crrev.com/eff8e457298d01b437e4fd78194ad6de3c8d7ad6" rel="nofollow">https://crrev.com/eff8e457298d01b437e4fd78194ad6de3c8d7ad6</a>
Cr-Commit-Position: refs/heads/master@{#408235}
==========</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    
      <div class="message issue_was_closed   "
           
           id="msg38"
           name="37">
        <div class="header">
          <table border="0" width="100%" cellspacing="0" cellpadding="0">
            <tr class="comment_title"
                onclick="M_switchChangelistComment(37)">
              <td style="padding-left: 5px; white-space: nowrap;">
                <b>commit-bot: I haz the power</b>
              </td>
              <td width="100%" style="overflow:hidden;">
                <table style="table-layout:fixed; white-space: nowrap;"
                       width="100%">
                  <tr>
                    <td>
                      <span style="white-space: nowrap; overflow: hidden; display: none;"
                           class="extra"
                           id="cl-preview-37">
                          Patchset 13 (id:??) landed as https://crrev.com/eff8e457298d01b437e4fd78194ad6de3c8d7ad6 Cr-Commit-Position: refs/heads/master@{#408235}
                      </span>
                    </td>
                  </tr>
                </table>
              </td>
              <td align="right"
                  style="white-space: nowrap; padding-right: 5px; padding-left: 3px;">
                4 years, 4 months ago
		(2016-07-27 21:05:09 UTC)
                <a href="#msg38">#38</a>
              </td>
            </tr>
          </table>
        </div>

        <div id="cl-comment-37"
             >
          <div class="message-body">
            
              <span class="extra-note">
                Message was sent while issue was closed.
              </span>
            
            <pre name="cl-message-37"
            >Patchset 13 (id:??) landed as
<a href="https://crrev.com/eff8e457298d01b437e4fd78194ad6de3c8d7ad6" rel="nofollow">https://crrev.com/eff8e457298d01b437e4fd78194ad6de3c8d7ad6</a>
Cr-Commit-Position: refs/heads/master@{#408235}</pre>
          </div>
          <div class="message-footer"></div>
        </div>

      </div>
    

    <div>
      <a href="javascript:M_expandAllVisibleComments('cl', 38)">
        Expand Messages</a>
      |
      <a href="javascript:M_collapseAllVisibleComments('cl', 38)">
        Collapse Messages</a>
      
      |
      <a href="javascript:M_showGeneratedComments(38)">
        Show Generated Messages</a>
      |
      <a href="javascript:M_hideGeneratedComments(38)">
        Hide Generated Messages</a>
      
    </div>

  </div>

<script language="JavaScript" type="text/javascript">
<!--
var lastMsgID = 38;
// -->
</script>




<script language="JavaScript" type="text/javascript">
  <!--
    document.onkeydown = M_changelistKeyDown;
    var dashboardState = new M_DashboardState(window, 'patch', 'M_CLPatchMarker');
    var issueId = 2075273002;
    M_toggleIssueOverviewByAnchor();
  // -->
</script>



      </td>
    </tr>
  </table>

</div>

  
    <div class="popup" id="popup-issue">
      <b>Issue 2075273002: Resource requests from Save-Page-As should go through CanRequestURL checks.
     (Closed) </b><br/>
      Created 4 years, 6 months ago by Łukasz Anforowicz<br/>
      Modified 4 years, 4 months ago<br/>
      Reviewers: Randy Smith (Not in Mondays), asanka, mmenke<br/>
      Base URL: https://chromium.googlesource.com/chromium/src.git@master<br/>
      Comments: 31
      
    </div>
  


<p></p>
<div style="float: left;">
  <a target="_blank" href="http://code.google.com/appengine/"><img border="0"
   src="/static/appengine-noborder-120x30.gif"
   alt="Powered by Google App Engine" /></a>
</div>

<div class="extra" style="font-size: 9pt; float: right; text-align: right;">
  <div style="margin-top: .3em;">This is Rietveld <a href='http://code.google.com/p/rietveld/source/list'>408576698
</a></div>
</div>


<script>
  // Google Analytics.
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-55762617-11', {
    'allowLinker': true,
    'siteSpeedSampleRate': 100
  });
  ga('require', 'linker');
  ga('linker:autoLink',
     ['chromiumcodereview.appspot.com', 'codereview.chromium.org'] );
  ga('send', 'pageview');

  // CRDX Feedback button.
  (function(i,s,o,g,r,a,m){i['CrDXObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://storage.googleapis.com/crdx-feedback.appspot.com/feedback.js','crdx');

  crdx('setFeedbackButtonLink',
      'https://bugs.chromium.org/p/chromium/issues/entry?cc=andybons@chromium.org&components=Infra%3ECodereview%3ERietveld&labels=Infra-DX');
</script>


</body>
</html>
