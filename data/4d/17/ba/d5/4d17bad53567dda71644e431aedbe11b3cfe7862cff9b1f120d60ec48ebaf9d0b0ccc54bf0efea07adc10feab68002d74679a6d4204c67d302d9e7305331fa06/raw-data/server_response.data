<!DOCTYPE html>
<html lang="en">
  <head>
      <meta charset="UTF-8">

      <meta name="referrer" content="origin">
<script type="text/javascript" src="page.cgi?1635595599&amp;id=bayotbase/fielddefs.js"></script>




<script type="text/javascript">var BB_CONFIG = ({"defaults":{"op_sys":"Unspecified","severity":"Unspecified","platform":"Unspecified","bugentry_fields":["summary","product","component","rh_sub_components","severity","priority","comment"],"priority":"Unspecified"},"user":{"groups":[],"logged_in":false,"enterable_products":[]}});</script><script type="text/javascript">
var classifications = '[ { "name": "Red Hat", "description": "Red Hat Products"},{ "name": "Workflows", "description": "User driven workflows"},{ "name": "JBoss", "description": "JBoss Products"},{ "name": "CentOS", "description": "CentOS Projects"},{ "name": "Fedora", "description": "Fedora Products"},{ "name": "Community", "description": "Community Projects"},{ "name": "oVirt", "description": "oVirt Virtualization Management Projects"},{ "name": "Internal", "description": "Internal Projects."},{ "name": "Other", "description": "Other Miscellaneous Products"},{ "name": "Unclassified", "description": "Not assigned to any classification"},{ "name": "Retired", "description": "Products that have reached end of life, or were never released."} ]';
var c_optgroups = JSON.parse(classifications);
</script>
    <title>727644 &ndash; (CVE-2011-3200) CVE-2011-3200 rsyslog: parseLegacySyslogMsg off-by-two buffer overflow</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="js/yui/assets/skins/sam/autocomplete.css" rel="stylesheet" type="text/css"><link href="js/yui/assets/skins/sam/calendar.css" rel="stylesheet" type="text/css"><link href="skins/standard/global.css" rel="stylesheet" type="text/css"><link href="extensions/BayotBase/web/css/base.css" rel="stylesheet" type="text/css"><link href="extensions/BayotBase/web/jquery-ui-1.12.1.custom/jquery-ui.min.css" rel="stylesheet" type="text/css"><link href="skins/standard/bug.css" rel="stylesheet" type="text/css"><link href="extensions/Voting/web/style.css" rel="stylesheet" type="text/css"><link href="extensions/ExternalBugs/web/css/global.css" rel="stylesheet" type="text/css"><link href="extensions/FontAwesome/web/css/all.min.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/css/redhat.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/DataTables/datatables.min.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/alertify/css/alertify.min.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/alertify/css/themes/bootstrap.min.css" rel="stylesheet" type="text/css"><link href="extensions/SelectizeJS/web/css/selectize.bootstrap3.css" rel="stylesheet" type="text/css"><link href="extensions/SelectizeJS/web/css/SelectizeJS.css" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="js/yui/yahoo-dom-event/yahoo-dom-event.js"></script><script type="text/javascript" src="js/yui/cookie/cookie-min.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/jquery-3.6.0.min.js"></script><script type="text/javascript" src="extensions/BayotBase/web/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/jquery.cookie.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/jquery.jsonrpc.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/Base.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/bayot.util.js"></script><script type="text/javascript" src="js/yui/datasource/datasource-min.js"></script><script type="text/javascript" src="js/yui/connection/connection-min.js"></script><script type="text/javascript" src="js/yui/json/json-min.js"></script><script type="text/javascript" src="js/yui/autocomplete/autocomplete-min.js"></script><script type="text/javascript" src="js/yui/calendar/calendar-min.js"></script><script type="text/javascript" src="js/global.js"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 5,
                maxattachmentsize: 20000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug.",
                group_required:
                    "You must select at least one group for bugs in this product."
            }
            
              , api_token: ''
            
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "727644 – (CVE-2011-3200) CVE-2011-3200 rsyslog: parseLegacySyslogMsg off-by-two buffer overflow",
                             "show_bug.cgi?id=727644" );
        document.title = "727644 – (CVE-2011-3200) CVE-2011-3200 rsyslog: parseLegacySyslogMsg off-by-two buffer overflow";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "727644 – (CVE-2011-3200) CVE-2011-3200 rsyslog: parseLegacySyslogMsg off-by-two buffer overflow", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="js/util.js"></script><script type="text/javascript" src="js/field.js"></script><script type="text/javascript" src="extensions/ExternalBugs/web/js/external_bugs.js"></script><script type="text/javascript" src="extensions/RedHat/web/DataTables/datatables.min.js"></script><script type="text/javascript" src="extensions/RedHat/web/alertify/alertify.min.js"></script><script type="text/javascript" src="extensions/RedHat/web/colResize/dataTables.colResize.js"></script><script type="text/javascript" src="extensions/RedHat/web/js/redhat.js"></script><script type="text/javascript" src="extensions/SelectizeJS/web/js/standalone/selectize.min.js"></script><script type="text/javascript" src="extensions/SelectizeJS/web/js/SelectizeJS.js"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Red Hat Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="/extensions/RedHat/web/css/favicons/production.ico?v=0">
  </head>

  <body 
        class="bugzilla-redhat-com status_colours_pastel
                 bz_bug
                 bz_status_CLOSED
                 bz_product_Security_Response
                 bz_component_vulnerability
                 bz_bug_727644 yui-skin-sam">

  <div id="header"><div id="banner">
   <ul id="loginin_launcher"><a href="#" onclick="$('#loginin_launcher').addClass('bz_default_hidden');$('#login_container').removeClass('bz_default_hidden');"><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;Login</a></ul>
   <ul id="login_container" class="bz_default_hidden">
    <a href="#" id="hide_mini_login" onclick="$('#login_container').addClass('bz_default_hidden');$('#loginin_launcher').removeClass('bz_default_hidden');">[x]</a>
     
    <li id="mini_login_container"><div id="saml2_container">
    Log in using an account from:
  <div id="saml2auth_login_Fedora Account System">
    <a href="saml2_login.cgi?idp=Fedora%20Account%20System&amp;target=show_bug.cgi%3Fid%3D727644"><i class="fa fa-cogs" aria-hidden="true"></i>&nbsp;&nbsp;Fedora Account System</a>
  </div>
  <div id="saml2auth_login_Red Hat Associate">
    <a href="saml2_login.cgi?idp=Red%20Hat%20Associate&amp;target=show_bug.cgi%3Fid%3D727644"><i class="fa fa-user-secret" aria-hidden="true"></i>&nbsp;&nbsp;Red Hat Associate</a>
  </div>
  <div id="saml2auth_login_Red Hat Customer">
    <a href="saml2_login.cgi?idp=Red%20Hat%20Customer&amp;target=show_bug.cgi%3Fid%3D727644"><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;Red Hat Customer</a>
  </div>
  Or login using a Red Hat Bugzilla account
  <div>

  <form action="show_bug.cgi?id=727644" method="POST"
        class="mini_login "
        id="mini_login">
    <input id="Bugzilla_login" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in">
  </form>
</li>
<li id="forgot_container">
  <a id="forgot_link" href="#forgot"
     onclick="return show_forgot_form('')"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>&nbsp;&nbsp;Forgot&nbsp;Password</a>
  <form action="token.cgi" method="post" id="forgot_form"
        class="mini_forgot bz_default_hidden">
    <label for="login">Login:</label>
    <input name="loginname" size="20" id="login" required
        type="email" placeholder="Your Email Address">
    <input id="forgot_button" value="Reset Password" 
           type="submit">
    <input type="hidden" name="a" value="reqpw">
    <input type="hidden" id="token" name="token"
           value="1635628140-8dYgMQa5BeIbx6IKFgzod05opMax6OBwx2hM_nHHi54">
    <p>
    <a href="#" onclick="return hide_forgot_form('')"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>&nbsp;&nbsp;Hide Forgot</a>
  </form>
</li>
<li>
  <a href="createaccount.cgi"><span><i class="fas fa-plus" aria-hidden="true"></i>&nbsp;&nbsp;Create an Account</span></a>
</li>
    
   </ul>
  </div>

    <div id="titles">
      <span id="title">Red Hat Bugzilla &ndash; Bug&nbsp;727644</span>


    </div>


    <div id="common_links"><ul class="links">
  <li class="form">
    
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>
  <li><a href="./" title="Home"><i class="fas fa-home"></i></a></li>
  <li><a href="enter_bug.cgi">New</a></li>
  <li class="submenu">
    <a href="#" title="Search"><i class="fas fa-search"></i> <span class="fa fa-caret-down"></span></a>
    <div>
      <ul>
        <li><a href="query.cgi?format=specific">Simple Search</a></li>
        <li><a href="query.cgi?format=advanced">Advanced Search</a></li>
      </ul>
    </div>
  </li>
  <li class="submenu">
   <a href="#">My Links <span class="fa fa-caret-down"></span></a>
   <div>
    <ul>
      <li><a href="describecomponents.cgi">Browse</a></li>
      <li>
            <a href="request.cgi">Requests</a></li>
      <li class="submenu">
        <a  href="report.cgi">Reports <span class="fa fa-caret-right"></span></a>
        <div>
          <ul>
            </li>
            <li class="submenu">
              <a  href="#">Current State <span class="fa fa-caret-right"></span></a>
              <div>
                <ul>
                  <li id="report_search">
                    <a href="query.cgi">Search</a>
                  </li>
                  <li id="report_tabular">
                      <a href="query.cgi?format=report-table">Tabular reports</a>
                  </li>
                    <li id="report_graphical">
                        <a href="query.cgi?format=report-graph">Graphical reports</a>
                    </li>
                  <li id="report_duplicates">
                    <a href="duplicates.cgi">Duplicates</a>
                  </li>
                </ul>
              </div>
            </li>
            <li class="submenu">
              <a  href="#">Other Reports <span class="fa fa-caret-right"></span></a>
              <div>
                <ul>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=user_activity.html">User Changes</a>
                  </li>
                </ul>
              </div>
            </li>
            <li class="submenu">
              <a  href="#">Plotly Reports <span class="fa fa-caret-right"></span></a>
              <div>
                <ul>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=bug_status.html">Bug Status</a>
                  </li>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=bug_severity.html">Bug Severity</a>
                  </li>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=non_defaults.html">Non-Defaults</a>
                  </li>
                </ul>
              </div>
            </li>
          </ul>
        </div>
      </li><li><span class="separator"> | </span><a href="page.cgi?id=productdashboard.html">Product Dashboard</a></li>
    </ul>
   </div>
  </li>

  <li class="submenu">
   <a href="#">Help <span class="fa fa-caret-down"></span></a>
   <div>
    <ul><li><a href="docs/en/html/using/understanding.html" >Page Help!</a></li>
      <li><a href="page.cgi?id=bug-writing.html">Bug Writing Guidelines</a></li> 
      <li><a href="page.cgi?id=whats-new.html">What's new</a></li>
      <li><a href="https://access.redhat.com/help/browsers">Browser Support Policy</a></li>
      <li><a href="page.cgi?id=release-notes.html">5.0.4.rh64 Release notes</a></li>
      <li><a href="page.cgi?id=faq.html">FAQ</a></li>
      <li><a href="docs/en/html/index.html">Guides index</a></li>
      <li><a href="docs/en/html/using/index.html">User guide</a></li>
      <li><a href="docs/en/html/integrating/api/Bugzilla/WebService/Bug.html">Web Services</a></li>
      <li><a href="page.cgi?id=redhat/contact.html" >Contact</a></li> 
      <li><a href="page.cgi?id=terms-conditions.html" >Legal</a></li> 
    </ul>
   </div>
  </li>



</ul>
    </div>
  </div>


  <div id="bugzilla-body">



<noscript>
      <div id="no-js-message">This site requires JavaScript to be enabled to function correctly, please enable it.</div>
</noscript>

<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=727644" title="Format For Printing"><i class="fa fa-print"></i></a></li>
    <li><a href="show_bug.cgi?ctype=xml&amp;id=727644" title="Export as XML"><i class="far fa-file-excel"></i></a></li>
    <li><a href="enter_bug.cgi?cloned_bug_id=727644" title="Clone This Bug"><i class="fa fa-clone"></i></a></li>
    <li>
      <a href="enter_bug.cgi?cloned_bug_id=727644&lite=1" title="Copy is a lite weight clone that only copies the summary &amp; description">
       <i class="far fa-clone"></i>
      </a>
    </li>


          
    <li>
      <a href="#c42" title="Last Comment">
         <i class="fas fa-arrow-down" aria-hidden="true"></i>
      </a>
    </li><li>
  <a href="buglist.cgi?bug_id=727644&amp;bug_id_type=anddependson&amp;format=tvp" title="TreeView+">
    <i class="fa fa-tree"></i>
  </a>
</li>
    </ul>
<script type="text/javascript">
<!--

//-->
</script>




<form name="changeform" id="changeform" method="post" action="process_bug.cgi">





  <input type="hidden" name="delta_ts" value="2021-02-24 14:58:47">
  <input type="hidden" name="id" value="727644">
  <input type="hidden" name="token" value="1635628140--QdojEHmJI5ycyRoZhQ2XlY_vcvLZh7oSUX_Wxbf68s">
<div class="bz_short_desc_container edit_form">
    
    

     <a href="show_bug.cgi?id=727644"><b>Bug&nbsp;727644</b></a> <span id="summary_container" class="bz_default_hidden">
        (<span id="alias_nonedit_display">CVE-2011-3200</span>)
      - <span id="short_desc_nonedit_display"><a href="https://access.redhat.com/security/cve/CVE-2011-3200">CVE-2011-3200</a> rsyslog: parseLegacySyslogMsg off-by-two buffer overflow</span>
     </span>

    
    

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

  
  
</span>CVE-2011-3200 rsyslog: parseLegacySyslogMsg off-by-two buffer overflow
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'CVE-2011-3200 rsyslog: parseLegacySyslogMsg off-by-two buffer overflow' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
      <th class="field_label">
        <a href="describekeywords.cgi">Keywords</a>:
      </th>
      <td>
        <div class="keywords_select">
          <select id="keywords" name="keywords"  disabled="disabled" multiple="multiple">
              <option value="Security"
                      title="Bugs with the &quot;Security&quot; keyword are those that relate to a security vulnerability with a Red Hat product or service. For further information on how to report a security vulnerability to Red Hat please see the &quot;Security Contacts and Procedures&quot; page at http://www.redhat.com/security/team/contact/"
                      selected="selected"
              >Security
              </option>
          </select>
        </div>
      </td>
    </tr>

  <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">CLOSED
          ERRATA
      </span>
    </td>
  </tr>

<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

  
  
</th>
    <td>CVE-2011-3200
    </td>
  </tr>

<tr>

<th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components. Select a Classification to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_product" >Security Response

</td>


    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_classification" >Other

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Security Response"
  >Component:</a>

  
  
</th>
      <td>
        

            <input type="hidden" id="component" name="component" value="vulnerability">vulnerability
        
        
        <span class="show_others">
          <a href="buglist.cgi?component=vulnerability&amp;product=Security%20Response"
            title="Show other bugs for this component"><i class="fas fa-th-list"></i></a>
        
        
          <a href="enter_bug.cgi?component=vulnerability&amp;product=Security%20Response&amp;version=unspecified"
            title="Create a new bug for this component"><i class="fas fa-plus-circle"></i></a>
        
        </span>
      </td>
    </tr>
    <tr>
        <th id="bz_rh_sub_component_input_th"
            class="field_label bz_default_hidden">
          <label for="rh_sub_component">
            <a class="field_help_link" href="page.cgi?id=fields.html#rh_sub_components" title="The sub component of a specific component">Sub Component:</a>
          </label>
        </th>
        <td id="bz_rh_sub_component_input_td" class="bz_default_hidden">
          <input type="hidden" name="defined_rh_sub_component" id="defined_rh_sub_component" value="0">
          <select name="rh_sub_component" id="rh_sub_component"  disabled="disabled" onchange="assign_to_default();" >
            <option value="">---</option>
          </select>
          <script>
            $(document).ready(function () {
              init_sub_components();
            });
          </script>
        
          <span class="show_others">
            <a href="buglist.cgi?component=vulnerability&amp;product=Security%20Response" title="Show other bugs for this sub-component"><i class="fas fa-th-list"></i></a>
          
          </span>
        </td>
      </tr>

<script>
  function rh_check_sub_components () {
    var ret = '';
      var sub_comp_obj = document.getElementById('rh_sub_component');
        if ($('#defined_rh_sub_component').val() == 1 && !$("#rh_sub_component").selectize()[0].selectize.getValue()) {
          if (!ret) ret = sub_comp_obj;
          _sub_comps_errorFor(
            sub_comp_obj,
            "You must specify the sub component"
          );
      }

    return ret;
  }

  function _sub_comps_errorFor(field, error_text) {
      var new_node = document.createElement('div');
      YAHOO.util.Dom.addClass(new_node, 'validation_error_text');
      new_node.innerHTML = error_text;
      YAHOO.util.Dom.insertAfter(new_node, field);
      YAHOO.util.Dom.addClass(field, 'validation_error_field');
      new_node.scrollIntoView();
  }
</script>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

  
  
</th>
<td>
      <span id="version">unspecified
      </span></td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

  
  
</th>
      <td class="field_value">Unspecified
      </td>
    </tr>
    <tr><th class="field_label "
    id="field_label_op_sys">


  <a 
      title="The operating system the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#op_sys"
  >OS:</a>

  
  
</th>
      <td class="field_value">
        Unspecified
      </td>
    </tr>
          
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#priority">Priority:</a></label>
      </th>
      <td>medium
      </td>
    </tr>
    <tr>
      <th class="field_label">
        <label ><a href="page.cgi?id=fields.html#bug_severity">Severity:</a>
        </label>
      </th>
      <td>
       medium
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

  
  
</th><td>
      <span id="target_milestone">---
      </span></td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

  
  
</th>
      <td><span class="vcard redhat_user"><span class="fn">Red Hat Product Security</span>
</span>
      </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_qa_contact">


  <a 
      title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#qa_contact"
  >QA Contact:</a>

  
  
</th>
      <td><span class="vcard ">
</span>
      </td>
    </tr>
    
    <tr><th class="field_label "
    id="field_label_docs_contact">

    <label for="docs_contact" accesskey="q">

  <a 
      title="The person responsible for documenting once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#docs_contact"
  >Docs Contact:</a>
</label>
  
  
</th>
      <td><span class="vcard ">
</span>
      </td>
    </tr>
    
    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'security-response-team\x40redhat.com',
        '',
        '');
    </script>
          
          
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

  
  
</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>

    <tr><th class="field_label "
    id="field_label_status_whiteboard">


  <a 
      title="Each bug has a free-form single line text entry box for adding tags and status information."
      class="field_help_link"
      href="page.cgi?id=fields.html#status_whiteboard"
  >Whiteboard:</a>

  
  
</th><td>  
  </td>
    </tr>
          

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends On:</a>

  
  
</th>

  <td>
    <span id="dependson_input_area">
    </span>
<a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=733647">733647</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=733648">733648</a> <a class="bz_bug_link
          
          bz_status_CLOSED  bz_closed
                              
    "
   title="CLOSED ERRATA - CVE-2011-3200 rsyslog: parseLegacySyslogMsg off-by-two buffer overflow [fedora-all]"
   href="show_bug.cgi?id=735205">735205</a> 
  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

  
  
</th>

  <td>
    <span id="blocked_input_area">
    </span>
<a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=727687">727687</a> 
  </td>
  </tr>

          <tr>
    <th class="field_label">TreeView+</th>
    <td>
        <a href="buglist.cgi?bug_id=727644&amp;bug_id_type=anddependson&amp;format=tvp">
        depends on</a> /
        <a href="buglist.cgi?bug_id=727644&amp;bug_id_type=andblocked&amp;format=tvp&amp;tvp_dir=blocked">
        blocked</a>
    </td>
    <td></td>
</tr>
          
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#reporter">Reported:</a>
    </th>
    <td>2011-08-02 17:51 UTC by <span class="vcard redhat_user"><span class="fn">Martin Osvald</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#modified">Modified:</a>
    </th>
    <td>2021-02-24 14:58 UTC
      (<a href="show_activity.cgi?id=727644">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          <a href="page.cgi?id=fields.html#cclist">CC List:</a>
        </label>
      </th>
      <td>7 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="alorbach">alorbach</option>
                <option value="mbiebl">mbiebl</option>
                <option value="mjc">mjc</option>
                <option value="rgerhards">rgerhards</option>
                <option value="security-response-team">security-response-team</option>
                <option value="theinric">theinric</option>
                <option value="vdanen">vdanen</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>


 
<tr>
      <th class="field_label "
    id="field_label_cf_fixed_in">


  <a 
      title="The full package version. PGM uses to check if brew ..."
  >Fixed In Version:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_fixed_in"  colspan="2">rsyslog 4.6.8, rsyslog 5.8.5

</td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_doc_type">


  <a 
      title="Click the information icon to the right to see the description"
  >Doc Type:</a>

  
  <i class="fas fa-info-circle pop-text" onclick="alertify.alert('Doc Type', BB_FIELDS['cf_doc_type'].long_desc)" title="Click to see full description"></i>

  
</th>
  <td class="field_value "
      id="field_container_cf_doc_type"  colspan="2">Bug Fix

<span id="cf_doc_warn"></span></td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_release_notes">


  <a 
      title="Click the information icon to the right to see the description"
  >Doc Text:</a>

  
  <i class="fas fa-info-circle pop-text" onclick="alertify.alert('Doc Text', BB_FIELDS['cf_release_notes'].long_desc)" title="Click to see full description"></i>

  
</th>
  <td class="field_value "
      id="field_container_cf_release_notes"  colspan="2">
      <div class="uneditable_textarea"></div>

</td>
    </tr>
    
    

    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_clone_of">


  <a 
      title="The bug listed here was the bug cloned to create thi..."
  >Clone Of:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_clone_of"  colspan="2">

</td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_environment">


  <a 
      title="This field is used for unformatted text that helps t..."
  >Environment:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_environment"  colspan="2">
      <div class="uneditable_textarea"></div>

</td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_last_closed">


  <a 
      title="When this bug was last marked as closed. Used for st..."
  >Last Closed:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_last_closed"  colspan="2">2011-10-06 12:27:55 UTC
    

</td>
    </tr>




        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    
    <th align="left">
      Attachments
    </th>
    <th colspan="2" align="right">
      <a href="page.cgi?id=terms-conditions.html">(Terms of Use)</a>
    </th>
    
  </tr>


      <tr id="a1" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=517770"
               title="View the content of the attachment">
          <b>upstream fix</b></a>

          <span class="bz_attach_extra_info">
              (503 bytes,
                patch)

            <br>
            <a href="#attach_517770"
               title="Go to the comment associated with the attachment">2011-08-11 10:45 UTC</a>,

            <span class="vcard "><span class="fn">Rainer Gerhards</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>
          <a href="attachment.cgi?id=517770&amp;action=edit">Details</a>
            | <a href="attachment.cgi?id=517770&amp;action=diff">Diff</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=517785"
               title="View the content of the attachment">
          <b>v5 patch</b></a>

          <span class="bz_attach_extra_info">
              (475 bytes,
                patch)

            <br>
            <a href="#attach_517785"
               title="Go to the comment associated with the attachment">2011-08-11 12:28 UTC</a>,

            <span class="vcard "><span class="fn">Rainer Gerhards</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>
          <a href="attachment.cgi?id=517785&amp;action=edit">Details</a>
            | <a href="attachment.cgi?id=517785&amp;action=diff">Diff</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="3">
        <span class="bz_attach_view_hide">
            <a id="view_all" href="attachment.cgi?bugid=727644&amp;action=viewall">View All</a>
        </span>
        <a href="attachment.cgi?bugid=727644&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>

    

    <script>
  YAHOO.ExternalBugs.sUrlYUI = 'https://bugzilla.redhat.com/jsonrpc.cgi';
  YAHOO.ExternalBugs.sUrlRPC = 'https://bugzilla.redhat.com/xmlrpc.cgi';
  YAHOO.ExternalBugs.extRefreshList = [];
function _extbz_errorFor(field, error_text) {
    var new_node = document.createElement('div');
    YAHOO.util.Dom.addClass(new_node, 'validation_error_text');
    new_node.innerHTML = error_text;
    YAHOO.util.Dom.insertAfter(new_node, field);
    YAHOO.util.Dom.addClass(field, 'validation_error_field');
    return new_node;
}

function check_external_bugs (f) {
    var focus_me;
    var external_bugs = YAHOO.util.Dom.getElementsByClassName(
        'external_bug_id', null, f);
    for (var i = 0; i < external_bugs.length; i++) {
        var bug_id_key   = external_bugs[i].name;
        var bug_type_key = 'external_' + bug_id_key.substr(13);
        if($('#' + bug_id_key).length > 0) {
            var bug_id       = document.getElementById(bug_id_key).value;
            var bug_type     = document.getElementById(bug_type_key).value;
            if ((bug_type == '' || bug_type == '0') && bug_id != '') {
                focus_me = _extbz_errorFor(
                    document.getElementById(bug_type_key),
                    'You specified the external tracker id, but not the type'
                );
            }
            else if (bug_type != '' && bug_type != '0' && bug_id == '') {
                focus_me = _extbz_errorFor(
                    external_bugs[i],
                    'You specified the external tracker type, but not the id'
                );
            }
            else if (bug_type != '' && bug_id != '') {
            }
        }
    }

    return focus_me;
}

var bz_no_validate_enter_bug = false;
function validateChangeBug(changeform) {
    // This is for the "bookmarkable templates" button.
    if (bz_no_validate_enter_bug) {
        // Set it back to false for people who hit the "back" button
        bz_no_validate_enter_bug = false;
        return true;
    }

    var current_errors = YAHOO.util.Dom.getElementsByClassName(
        'validation_error_text', null, changeform);
    for (var i = 0; i < current_errors.length; i++) {
        current_errors[i].parentNode.removeChild(current_errors[i]);
    }
    var current_error_fields = YAHOO.util.Dom.getElementsByClassName(
        'validation_error_field', null, changeform);
    for (var i = 0; i < current_error_fields.length; i++) {
        var field = current_error_fields[i];
        YAHOO.util.Dom.removeClass(field, 'validation_error_field');
    }

    var focus_me;

    // REDHAT EXTENSION 1000743
    focus_me = check_external_bugs(changeform);

    if (focus_me) {
        focus_me.scrollIntoView(false);
        return false;
    }

    return true;
}

changeform.onsubmit = function() { return validateChangeBug(changeform)};
</script>

<br>
<table id="external_bugs_table" cellspacing="0" cellpadding="4">
  <caption name="et0" id="et0">Links</caption>
    <tr>
      <th>System</th>
      <th>ID</th>
      <th>Private</th>
      <th>Priority</th>
      <th>Status</th>
      <th>Summary</th>
      <th>Last Updated</th>
    </tr>

    
    <tr id="ext_row_691580" >
      <td>Red Hat Product Errata
      </td>
      <td>
        <a href="https://access.redhat.com/errata/RHSA-2011:1247">RHSA-2011:1247</a>
      </td>
      <td>
        <span id="ext_is_private_691580">0
        </span>
      </td>
      <td>
        <span id="ext_priority_691580">normal
        </span>
      </td>
      <td>
        <span id="ext_status_691580">SHIPPED_LIVE
        </span>
      </td>
      <td>
        <span id="ext_description_691580"
              title="Moderate: rsyslog security update">Moderate: rsyslog security update
        </span>
      </td>
      <td>
        <span id="ext_last_updated_691580">2011-09-01 20:01:45 UTC
        </span>
      </td>
    </tr>

</table>

<br>
    

  </td>

  <td class="groups">
  </td>
  </tr></table>

  
  <div id="comments"><script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>






<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment
            "
    >

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Martin Osvald</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-02 17:51:19 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Description of problem:

If we send to syslog a specially crafted log message, stack guard variable protecting bufParseTAG array in parseLegacySyslogMsg() gets rewritten and rsyslog gets terminated.


Version-Release number of selected component (if applicable):

rsyslog-4.6.2-3.el6_1.1.i686


How reproducible:

everytime on ia-32
on x86-64 stack guard variable won't get rewritten as it is located 8 bytes above bufParseTAG array


Actual results:

glibc prints the following message and rsyslog gets terminated:

*** stack smashing detected ***: rsyslogd terminated


Expected results:

No abortion.


Additional info:

For more info, please, see the following private comment.

</pre>
    </div>

    <div id="c1" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Martin Osvald</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-02 17:52:40 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">###############################################

The following is investigation of corefile from customer before finding the reproducer:

let's find the address of guard variable:

(gdb) disassemble parseLegacySyslogMsg
...
   0x00d74fc1 &lt;+33&gt;:    mov    %gs:0x14,%eax
   0x00d74fc7 &lt;+39&gt;:    mov    %eax,-0x1c(%ebp)
...
   0x00d75048 &lt;+168&gt;:   mov    -0x1c(%ebp),%edx
   0x00d7504b &lt;+171&gt;:   xor    %gs:0x14,%edx
   0x00d75052 &lt;+178&gt;:   jne    0xd75411 &lt;parseLegacySyslogMsg+1137&gt;
...
   0x00d75411 &lt;+1137&gt;:  call   0xda9140 &lt;__stack_chk_fail_local&gt;


from above we can see that it is stored 28 (0x1c) bytes below the base pointer and it is stored exactly above bufParseTAG array:

(gdb) f 12
#12 0x00d75416 in parseLegacySyslogMsg (pMsg=0xb4301338, flags=48) at syslogd.c:1322
1322    }
(gdb) p &amp;bufParseTAG
$1 = (uchar (*)[512]) 0xb7871f4c
(gdb) x/x 0xb7871f4c+512
0xb787214c:     0x45092900
(gdb) x/x $ebp-0x1c
0xb787214c:     0x45092900
(gdb)


If we look at the code which fills in the bufParseTAG buffer in parseLegacySyslogMsg() we can find the following code:

1189 int parseLegacySyslogMsg(msg_t *pMsg, int flags)
1190 {
1191         uchar *p2parse;
1192         int lenMsg;
...
1194         int i;  /* general index for parsing */
1195         uchar bufParseTAG[CONF_TAG_MAXSIZE];
...
1201         lenMsg = pMsg-&gt;iLenRawMsg - pMsg-&gt;offAfterPRI; /* note: offAfterPRI is already the number of PRI chars (do not add one!) */
...
1240         if(bParseHOSTNAMEandTAG &amp;&amp; !(flags &amp; INTERNAL_MSG)) {
...
1293                 i = 0;
1294                 while(lenMsg &gt; 0 &amp;&amp; *p2parse != ':' &amp;&amp; *p2parse != ' ' &amp;&amp; i &lt; CONF_TAG_MAXSIZE) {
1295                         bufParseTAG[i++] = *p2parse++;
1296                         --lenMsg;
1297                 }
1298                 if(lenMsg &gt; 0 &amp;&amp; *p2parse == ':') {
1299                         ++p2parse;
1300                         --lenMsg;
1301                         bufParseTAG[i++] = ':';
1302                 }
1303 
1304                 /* no TAG can only be detected if the message immediatly ends, in which case an empty TAG
1305                  * is considered OK. So we do not need to check for empty TAG. -- rgerhards, 2009-06-23
1306                  */
1307                 bufParseTAG[i] = '\0';  /* terminate string */
1308                 MsgSetTAG(pMsg, bufParseTAG, i);


and in conjunction with the fact that lenMsg variable had a value of 674 at the beginning of parseLegacySyslogMsg():

(gdb) p pMsg-&gt;iLenRawMsg 
$6 = 679
(gdb) p pMsg-&gt;offAfterPRI
$7 = 5
(gdb)

1201         lenMsg = pMsg-&gt;iLenRawMsg - pMsg-&gt;offAfterPRI; /* note: offAfterPRI is already the number of PRI chars (do not add one!) */


and value 162 at its end

(gdb) p lenMsg
$5 = 162
(gdb)


and according to malformed message which doesn't contain hostname in the required form:

(gdb) p pMsg-&gt; pszRawMsg
$4 = (
    uchar *) 0xb43014e0 &quot;&lt;174&gt;...&lt;real log message content removed&gt;...&quot;...
(gdb)


it must have happened that the following condition was skipped (also taken from parseLegacySyslogMsg()):

1255                 if(lenMsg &gt; 0 &amp;&amp; flags &amp; PARSE_HOSTNAME) {
1256                         i = 0;
1257                         while(i &lt; lenMsg &amp;&amp; (isalnum(p2parse[i]) || p2parse[i] == '.' || p2parse[i] == '.'
1258                                 || p2parse[i] == '_' || p2parse[i] == '-') &amp;&amp; i &lt; (CONF_HOSTNAME_MAXSIZE - 1)) {


which led to iterating the loop for maximum allowed times (CONF_TAG_MAXSIZE = 512):

1294                 while(lenMsg &gt; 0 &amp;&amp; *p2parse != ':' &amp;&amp; *p2parse != ' ' &amp;&amp; i &lt; CONF_TAG_MAXSIZE) {
1295                         bufParseTAG[i++] = *p2parse++;
1296                         --lenMsg;
1297                 }


which led to 'i' variable having a value of 512 at the end of above while loop which finally led to overwriting 1 byte memory after bufParseTAG array with zero:

1307                 bufParseTAG[i] = '\0';  /* terminate string */


We can see that the guard variable has one byte zeroed (and that is why the stack smashing protection terminated the process):

(gdb) x/xw 0xb787214c
0xb787214c:     0x45092900
(gdb) x/c 0xb787214c
0xb787214c:     0 '\000'
(gdb)


###############################################

The following are results if we use the mentioned reproducer:

# cat ../../rsyslog.batch 
set environment RSYSLOG_DEBUG debug nostdout
b parseLegacySyslogMsg
#
# gdb ./rsyslog-4.6.2/tools/rsyslogd -x ../../rsyslog.batch
...
Breakpoint 1 at 0x90bd: file syslogd.c, line 1190.
(gdb) r -c 4
Starting program: /root/00506609/mosvald/rsyslog/RHEL-6/rsyslog-4.6.2/tools/rsyslogd -c 4
[Thread debugging using libthread_db enabled]
[New Thread 0xb7dfeb70 (LWP 20328)]

Breakpoint 1, parseLegacySyslogMsg (pMsg=0x17d168, flags=1) at syslogd.c:1190
1190    {
Missing separate debuginfos, use: debuginfo-install zlib-1.2.3-25.el6.i686
(gdb) c
Continuing.
[New Thread 0xb71ffb70 (LWP 20329)]
[New Thread 0xb67feb70 (LWP 20330)]
[Switching to Thread 0xb71ffb70 (LWP 20329)]

Breakpoint 1, parseLegacySyslogMsg (pMsg=0xb5c00cf8, flags=4) at syslogd.c:1190
1190    {
(gdb) n
1201            lenMsg = pMsg-&gt;iLenRawMsg - pMsg-&gt;offAfterPRI; /* note: offAfterPRI is already the number of PRI chars (do not add one!) */
(gdb) 
1202            p2parse = pMsg-&gt;pszRawMsg + pMsg-&gt;offAfterPRI; /* point to start of text, after PRI */
(gdb) 
1210            if(datetime.ParseTIMESTAMP3339(&amp;(pMsg-&gt;tTIMESTAMP), &amp;p2parse, &amp;lenMsg) == RS_RET_OK) {
(gdb) p lenMsg
$1 = 512
(gdb) p p2parse
$2 = (uchar *) 0xb5c00ea5 '#' &lt;repeats 200 times&gt;...
(gdb) n
1212            } else if(datetime.ParseTIMESTAMP3164(&amp;(pMsg-&gt;tTIMESTAMP), &amp;p2parse, &amp;lenMsg) == RS_RET_OK) {
(gdb) 
1214            } else if(*p2parse == ' ' &amp;&amp; lenMsg &gt; 1) { /* try to see if it is slighly malformed - HP procurve seems to do that sometimes */
(gdb) 
1228            if(flags &amp; IGNDATE) {
(gdb) 
1230                    memcpy(&amp;pMsg-&gt;tTIMESTAMP, &amp;pMsg-&gt;tRcvdAt, sizeof(struct syslogTime));
(gdb) 
1240            if(bParseHOSTNAMEandTAG &amp;&amp; !(flags &amp; INTERNAL_MSG)) {
(gdb) 
1254                    bTAGCharDetected = 0;
(gdb) 
1255                    if(lenMsg &gt; 0 &amp;&amp; flags &amp; PARSE_HOSTNAME) {
(gdb) 
1293                    i = 0;
(gdb) 
1294                    while(lenMsg &gt; 0 &amp;&amp; *p2parse != ':' &amp;&amp; *p2parse != ' ' &amp;&amp; i &lt; CONF_TAG_MAXSIZE) {
(gdb) 
1295                            bufParseTAG[i++] = *p2parse++;
(gdb) 
1296                            --lenMsg;
(gdb) list
1291                     * outputs so that only 32 characters max are used by default.
1292                     */
1293                    i = 0;
1294                    while(lenMsg &gt; 0 &amp;&amp; *p2parse != ':' &amp;&amp; *p2parse != ' ' &amp;&amp; i &lt; CONF_TAG_MAXSIZE) {
1295                            bufParseTAG[i++] = *p2parse++;
1296                            --lenMsg;
1297                    }
1298                    if(lenMsg &gt; 0 &amp;&amp; *p2parse == ':') {
1299                            ++p2parse; 
1300                            --lenMsg;
(gdb) b 1298
Breakpoint 2 at 0x1194cf: file syslogd.c, line 1298.
(gdb) c
Continuing.

Breakpoint 2, parseLegacySyslogMsg (pMsg=0xb5c00cf8, flags=4) at syslogd.c:1298
1298                    if(lenMsg &gt; 0 &amp;&amp; *p2parse == ':') {
(gdb) n
1307                    bufParseTAG[i] = '\0';  /* terminate string */
(gdb) p i
$3 = 512
(gdb) p lenMsg
$4 = 0
(gdb) disassemble parseLegacySyslogMsg 
...
   0x001190bd &lt;+30&gt;:    mov    %gs:0x14,%eax
   0x001190c3 &lt;+36&gt;:    mov    %eax,-0xc(%ebp)
...
(gdb) x/x $ebp-0xc
0xb71fdd1c:     0x78462c4e
(gdb) n
1308                    MsgSetTAG(pMsg, bufParseTAG, i);
(gdb) x/x $ebp-0xc
0xb71fdd1c:     0x78462c00
(gdb) c
Continuing.
*** stack smashing detected ***: /root/00506609/mosvald/rsyslog/RHEL-6/rsyslog-4.6.2/tools/rsyslogd terminated
...
(gdb)

</pre>
    </div>

    <div id="c3" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Martin Osvald</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-02 19:19:33 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">forgot to mention backtrace, here it is:

(gdb) bt
#0  __kernel_vsyscall () at arch/x86/vdso/vdso32/sysenter.S:49
#1  0x00359d11 in raise (sig=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64
#2  0x0035b5ea in abort () at abort.c:92
#3  0x00d8d28e in sigsegvHdlr (signum=6) at debug.c:831
#4  &lt;signal handler called&gt;
#5  __kernel_vsyscall () at arch/x86/vdso/vdso32/sysenter.S:49
#6  0x00359d11 in raise (sig=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64
#7  0x0035b5ea in abort () at abort.c:92
#8  0x00397b9d in __libc_message (do_abort=2, fmt=0x47c3d2 &quot;*** %s ***: %s terminated\n&quot;) at ../sysdeps/unix/sysv/linux/libc_fatal.c:186
#9  0x00426fed in __fortify_fail (msg=0x47c3ba &quot;stack smashing detected&quot;) at fortify_fail.c:32
#10 0x00426f9a in __stack_chk_fail () at stack_chk_fail.c:29
#11 0x00da9154 in __stack_chk_fail_local ()
#12 0x00d75416 in parseLegacySyslogMsg (pMsg=0xb4301338, flags=48) at syslogd.c:1322
#13 0x00d82bf5 in parseMsg (pMsg=0xb4301338) at parser.c:323
#14 0x00d74967 in msgConsumer (notNeeded=0x0, pUsr=0xb4301338) at syslogd.c:941
#15 0x00d9d67b in qqueueConsumerReg (pThis=0x15f3930, pWti=0x15ec820, iCancelStateSave=0) at queue.c:1609
#16 0x00d980f2 in wtiWorker (pThis=0x15ec820) at wti.c:406
#17 0x00d97661 in wtpWorker (arg=0x15ec820) at wtp.c:463
#18 0x00fb89e9 in start_thread (arg=0xb7872b70) at pthread_create.c:301
#19 0x0040ccde in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:133
(gdb

</pre>
    </div>

    <div id="c4" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vincent Danen</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-02 20:35:15 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">This seems to only be a problem on RHEL6.  Using the above reproducer, I cannot reproduce on F15 or RHEL5 (rsyslog is available but not the default on RHEL5).

</pre>
    </div>

    <div id="c5" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vincent Danen</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-02 20:44:20 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">After thinking about this further, we just need confirmation as to whether or not this can be used to cause arbitrary code execution since rsyslogd runs as root.  I suspect SELinux would help us if it did.  At best this is a DoS since someone could use this to kill the system logger before doing other things (to help cover their tracks; especially useful if rsyslog is configured to send logs to a central log server).

I'm going to change this to an SRT bug since either way there is a vulnerability here.

Do we know if this can only be triggered locally, or if it can be triggered remotely as well?

</pre>
    </div>

    <div id="c6" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-03 08:47:48 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=727644#c1">comment #1</a>)
<span class="quote">&gt; which led to 'i' variable having a value of 512 at the end of above while loop
&gt; which finally led to overwriting 1 byte memory after bufParseTAG array with
&gt; zero:
&gt; 
&gt; 1307                 bufParseTAG[i] = '\0';  /* terminate string */</span >

I think we can sum <a href="show_bug.cgi?id=727644#c1">comment #1</a> as: the crash was caused by an off-by-one buffer overflow, which touched SSP guard cookie and resulted in SSP abort.  Well, it's actually off-by-two in some cases (see lines 1298 - 1301), but the overflow is limited to &quot;\0&quot; or &quot;:\0&quot;.  Test with buf='&lt;174&gt;'+'#'*512+':' in your reproducer.  We should make the relevant info from <a href="show_bug.cgi?id=727644#c1">comment #1</a> public when this bug is opened.

(In reply to <a href="show_bug.cgi?id=727644#c5">comment #5</a>)
<span class="quote">&gt; After thinking about this further, we just need confirmation as to whether or
&gt; not this can be used to cause arbitrary code execution since rsyslogd runs as
&gt; root.</span >

The overflow is too short here.  When SSP is used, gcc changes order of the local variables.  Hence all other local variables in parseLegacySyslogMsg() will be placed below bufParseTAG[] (and bufParseHOSTNAME[]) and can not be overwritten.  Overflow can touch SSP cookie, or not even reach it (as noted in <a href="show_bug.cgi?id=727644#c0">comment #0</a>).  SSP mitigates to crash-only.

</pre>
    </div>

    <div id="c7" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-03 08:50:03 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=727644#c2">comment #2</a>)
<span class="quote">&gt; I do not provide temporary fix even it would be consisted of restricting value
&gt; of 'i' variable after the line #1297</span >

i &lt; CONF_TAG_MAXSIZE - 2, similar to i &lt; (CONF_HOSTNAME_MAXSIZE - 1) possibly?

</pre>
    </div>

    <div id="c9" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Tomas Heinrich</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-03 14:04:35 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=727644#c5">comment #5</a>)
<span class="quote">&gt; Do we know if this can only be triggered locally, or if it can be triggered
&gt; remotely as well?</span >

If the daemon is configured to receive messages through udp or tcp, it can be triggered by using netcat from remote.

</pre>
    </div>

    <div id="c10" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vincent Danen</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-03 16:44:05 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=727644#c9">comment #9</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=727644#c5">comment #5</a>)
&gt; &gt; Do we know if this can only be triggered locally, or if it can be triggered
&gt; &gt; remotely as well?
&gt; 
&gt; If the daemon is configured to receive messages through udp or tcp, it can be
&gt; triggered by using netcat from remote.</span >

Ok, then we should probably ASYNC this once we get the fully list of what it affects (to be sure that some variation of the reproducer doesn't work on RHEL5, etc.) and a patch.  We should also coordinate a release with other vendors who may be shipping this as killing syslog is a great way to hide your tracks if you're planning to attack something.

</pre>
    </div>

    <div id="c11" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Martin Osvald</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-03 22:02:33 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=727644#c10">comment #10</a>)
<span class="quote">&gt; Ok, then we should probably ASYNC this once we get the fully list of what it
&gt; affects (to be sure that some variation of the reproducer doesn't work on
&gt; RHEL5, etc.)</span >

RHEL-4 doesn't ship rsyslog

just checked the RHEL-5 code and it cannot happen there. It doesn't iterate over buffer stored on the stack, but allocated by malloc. It doesn't use extra variable as index to access elements of the buffer nor variable holding a number of remaining bytes, but accesses it directly by incrementing a pointer until it reaches zero and as it allocates extra byte for terminating '\0' there isn't any alteration of memory past the buffer, the only problem I can see is that the while loop isn't restricted to stop after strlen(p2parse) iterations or the last byte of pBuf isn't zeroed.

rsyslog-3.22.1/tools/syslogd.c:
1404 static int parseLegacySyslogMsg(msg_t *pMsg, int flags)
1405 {
1406         char *p2parse;
...
1416         p2parse = (char*) pMsg-&gt;pszUxTradMsg;
...
1466                 if(pMsg-&gt;bParseHOSTNAME) {
1467                         /* TODO: quick and dirty memory allocation */
1468                         /* the memory allocated is far too much in most cases. But on the plus side,
1469                          * it is quite fast... - rgerhards, 2007-09-20
1470                          */
1471                         if((pBuf = malloc(sizeof(char)* (strlen(p2parse) +1))) == NULL)
1472                                 return 1;
1473                         pWork = pBuf;
1474                         /* this is the actual parsing loop */
1475                         while(*p2parse &amp;&amp; *p2parse != ' ' &amp;&amp; *p2parse != ':') {
1476                                 if(*p2parse == '[' || *p2parse == ']' || *p2parse == '/')
1477                                         bTAGCharDetected = 1;
1478                                 *pWork++ = *p2parse++;
1479                         }
1480                         /* we need to handle ':' seperately, because it terminates the
1481                          * TAG - so we also need to terminate the parser here!
1482                          * rgerhards, 2007-09-10 *p2parse points to a valid address here in 
1483                          * any case. We can reach this point only if we are at end of string,
1484                          * or we have a ':' or ' '. What the if below does is check if we are
1485                          * not at end of string and, if so, advance the parse pointer. If we 
1486                          * are already at end of string, *p2parse is equal to '\0', neither if
1487                          * will be true and the parse pointer remain as is. This is perfectly
1488                          * well.
1489                          */
1490                         if(*p2parse == ':') {
1491                                 bTAGCharDetected = 1;
1492                                 /* We will move hostname to tag, so preserve ':' (otherwise we 
1493                                  * will needlessly change the message format) */
1494                                 *pWork++ = *p2parse++;
1495                         } else if(*p2parse == ' ')
1496                                 ++p2parse;
1497                         *pWork = '\0';

</pre>
    </div>

    <div id="c12" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vincent Danen</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-04 15:58:43 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=727644#c11">comment #11</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=727644#c10">comment #10</a>)
&gt; &gt; Ok, then we should probably ASYNC this once we get the fully list of what it
&gt; &gt; affects (to be sure that some variation of the reproducer doesn't work on
&gt; &gt; RHEL5, etc.)
&gt; 
&gt; RHEL-4 doesn't ship rsyslog
&gt; 
&gt; just checked the RHEL-5 code and it cannot happen there. It doesn't iterate
&gt; over buffer stored on the stack, but allocated by malloc. It doesn't use extra
&gt; variable as index to access elements of the buffer nor variable holding a</span >

Perfect, thank you for checking!  So we only need to worry about this for RHEL6 then.  Have you looked at Fedora?  Maybe then this is only something that affects 4.x; I couldn't get it to reproduce on F15 (5.8.2), but have not tried Fedora 14.

Have you looked into a patch for this, or has this been reported to upstream at all?  If not, we should probably get in touch with them; it looks like 4.x is still supported.

</pre>
    </div>

    <div id="c13" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Martin Osvald</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-05 02:03:58 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=727644#c12">comment #12</a>)
<span class="quote">&gt; Have you looked at Fedora?  Maybe then this is only something that
&gt; affects 4.x; I couldn't get it to reproduce on F15 (5.8.2), but have not tried
&gt; Fedora 14.</span >

Yes, on F-14 it is reproducible as it contains the same code as in RHEL6 (4.6.3), I can see that F-15 (5.8.2) also contains the wrong code, but it is little bit refactored so need to debug it first to see what is happening there, as soon as I get to it I will let you know if nobody will be faster than me.

<span class="quote">&gt; Have you looked into a patch for this</span >

No, but I think Tomas's <a href="show_bug.cgi?id=727644#c9">comment #9</a> could be reasonable solution.

<span class="quote">&gt; or has this been reported to upstream at all?</span >

No, it hasn't been reported to anyone.

</pre>
    </div>

    <div id="c16" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vincent Danen</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-08 14:29:05 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Adding upstream (Rainer) to the bug.  Rainer, this is currently non-public, so please do not make any public commits to any repos, etc. without first coordinating a release date to unembargo with us (so that we have an opportunity to inform other vendors who may be shipping rsyslog before it is made public, so that they have the opportunity to patch it beforehand as well).

We have a preliminary patch idea in <a href="show_bug.cgi?id=727644#c7">comment #7</a>; do you think that fix would work?  Also, we've so far only been able to reproduce this on 4.x, but Martin has looked briefly at 5.x (<a href="show_bug.cgi?id=727644#c13">comment #13</a>) and we're not sure if it is affected, perhaps in a different way (or if something else is preventing it from being a problem).  It does not look like 3.x is affected, but confirmation of that from you would be fantastic.  Thank you!

</pre>
    </div>

    <div id="c17" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Rainer Gerhards</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-08 15:03:51 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Thanks for working with us in getting this fixed. I have just begun to dig into the details and will probably need tomorrow to get to a decent response. I'll also check the other important parser (RFC5424), which may have a similar issue. Will post when I have more info.

</pre>
    </div>

    <div id="c18" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Rainer Gerhards</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-08 15:39:56 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I have preliminary verified the problem in v4. The patch from <a href="show_bug.cgi?id=727644#c7">comment #7</a> is a temporary solution. The problematic code is definitely contained in v5 and v6. Even if it does not trigger an abort, the off-by-1/2 can happen there, too. 

As far as I can quickly see, v3 is not affected as no limit for the tag was set there.

</pre>
    </div>

    <div id="c19" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vincent Danen</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-10 20:23:50 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Adding the Debian maintainer Michael Biebl as per Rainer's request.

</pre>
    </div>

    <div id="c20" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Rainer Gerhards</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-11 10:45:12 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=517770&amp;action=diff" name="attach_517770" title="upstream fix">attachment 517770</a> <a href="attachment.cgi?id=517770&amp;action=edit" title="upstream fix">[details]</a></span>
upstream fix

The patch is identical to what has already been proposed on this bug tracker. Note that tt will effectively reduce the max supported tag size by two. However, the max size was choosen more or less random as an upper bound which by far is never expected to be seen in practice. So this doesn't really matter. If there are concerns, the max size can be increased in ./runtime/rsyslog.h.

</pre>
    </div>

    <div id="c21" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Rainer Gerhards</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-11 11:23:19 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I have analyzed the problem in detail. First of all, this for sure is a bug that needs to be fixed. However, it seems to be very hard to reproduce. Actually, I did not manage on any other platform than described here.

It is hard to reproduce because it depends on many factors that need to go together. Let's have a look at the code (from ./tools/syslogd.c, current git v4-stable, ln 1189+):

1193         int i;  /* general index for parsing */
1194         uchar bufParseTAG[CONF_TAG_MAXSIZE];
1195         uchar bufParseHOSTNAME[CONF_HOSTNAME_MAXSIZE];

The buffer potentially overrun is bufParseTAG. Let's assume the compiler does not reorder variables. Then the following happens:
(a) on most platforms, bufParseHOSTNAME is overrun. This is no problem, because it is no longer used when this happens. Also bufParseTAG is strcpy()'ed right away, so this causes no issue at all.

(b) on some platforms (I had none), variable i is partially overwritten. This index is used shortly thereafter. Truncation of TAG can happen, but no abort:
(ba) on big endian machines, not follow-up error occurs, as the overwritten location continued 0 and the same value is written
(bb) on little endian machines, the lowest byte is overwritten with zero, leading to a truncation of the tag value.

I have not analysed all possible permutations if the compiler reorders. But obviously, some of the them can cause problems. The most important cases are overwriting the parse pointer or, as seen here, the return address (if bufParseTAG is located right after it).

This rearrangement happens with stack guard. Without knowing the implementation details, it looks like stack guard seems to reorder EITHER bufParseTAG or bufParseHOSTNAME directly after the guard variable. If it is bufParseTAG, the overrun will be detected and an abort happens. However, if it is buf ParseHOSTNAME, the problem will neither be detected nor cause any damage (as described above). Thus the problem is not always reproducible even if stack guard is consistenly active.

I don't see any theoretical evidence why 32 vs 64 bitness should make a difference, but the postings here suggest it does.

The bug was introduced in v4-stable with 4.6.0 (released 2010-02-24). It currently is present in all stable versions above that release (including v5). I have NOT checked development versions, as they are not suitable for production use in any case. But the bug has been introduced some time during the 4.5.x performance optimization effort.

In conclusion, I think that the actual environment and compile-time settings seem to have very important impact on the damage caused by this bug. It seems not to cause damage on the majority of platforms in use. That probably explains why it was kept undetected for so long.

As with all bugs of this kind, the fix is trivial and now attached to the tracker.

As a general advise, it is suggested to NOT accept syslog from the public Internet. If this has been forbidden, the damage potential is further restricted. If syslog must be accepted from the Internet, it is highly suggested to use RFC5424/5425 TLS-protected syslog with mutual authentication, which would prevent an attacker from injecting malicious messages.

Thanks again everyone for diagnosing this issue and working with us to fix it. At this point, I'll hand over to Andre Lorbach for coordination of the actual relases as I am heading to vacation tomorrow. If there are any further concerns, I'll try to answer them ASAP.

</pre>
    </div>

    <div id="c22" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Rainer Gerhards</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-11 11:29:16 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I forgot to add: the 5424 parser is NOT affected, as it uses a totally different method relying on dynamically-sized buffers (and a sufficient size of them).

</pre>
    </div>

    <div id="c23" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-11 12:20:01 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=727644#c21">comment #21</a>)
<span class="quote">&gt; (a) on most platforms, bufParseHOSTNAME is overrun. This is no problem,
&gt; because it is no longer used when this happens. Also bufParseTAG is
&gt; strcpy()'ed right away, so this causes no issue at all.</span >

This does not sound correct.  At least on x86 Linux, bufParseHOSTNAME would be below bufParseTAG, which would be below i.  Hence i should be overwrite in the most common Linux builds without stack protector.

<span class="quote">&gt; This rearrangement happens with stack guard. Without knowing the
&gt; implementation details, it looks like stack guard seems to reorder EITHER
&gt; bufParseTAG or bufParseHOSTNAME directly after the guard variable.</span >

Stack protector should move all non-buffer variables below buffers.  This is to reduce the likelihood that some important variable is overwritten and used before stack canary is checked.  Hence all p2parse, lenMsg, bTAGCharDetected and i should be moved below the two buffers (unless optimized out), bufParseTAG and bufParseHOSTNAME should not get reordered.

<span class="quote">&gt; Thus the problem is not always reproducible even if stack guard is
&gt; consistenly active.</span >

Actually, it is reliably reproducible on at least current i686 RHEL-6 builds, leading to rsyslogd crash/abort.

<span class="quote">&gt; I don't see any theoretical evidence why 32 vs 64 bitness should make a
&gt; difference, but the postings here suggest it does.</span >

I'd suspect some memory alignment may come into play, but I've not tried to confirm that.

Thank you for providing the patch!

</pre>
    </div>

    <div id="c24" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c24">Comment 24</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Rainer Gerhards</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-11 12:28:37 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=517785&amp;action=diff" name="attach_517785" title="v5 patch">attachment 517785</a> <a href="attachment.cgi?id=517785&amp;action=edit" title="v5 patch">[details]</a></span>
v5 patch

Bascially same patch, but file location changed. So for your conveience a patch for v5+.

</pre>
    </div>

    <div id="c25" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c25">Comment 25</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Rainer Gerhards</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-12 08:05:45 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=727644#c23">comment #23</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=727644#c21">comment #21</a>)
&gt; &gt; (a) on most platforms, bufParseHOSTNAME is overrun. This is no problem,
&gt; &gt; because it is no longer used when this happens. Also bufParseTAG is
&gt; &gt; strcpy()'ed right away, so this causes no issue at all.
&gt; 
&gt; This does not sound correct.  At least on x86 Linux, bufParseHOSTNAME would be
&gt; below bufParseTAG, which would be below i.  Hence i should be overwrite in the
&gt; most common Linux builds without stack protector.</span >

Looks like I mixed up the two cases - sorry for that.

...

<span class="quote">&gt; &gt; Thus the problem is not always reproducible even if stack guard is
&gt; &gt; consistenly active.
&gt; 
&gt; Actually, it is reliably reproducible on at least current i686 RHEL-6 builds,
&gt; leading to rsyslogd crash/abort.</span >

Of course, but I was talking about different platforms. As I said, it is (consistently) reproducible on RHEL-6 builds and F14 (I think it was). But to me it is not consitently reproducible on all platforms. Just for clarification.

</pre>
    </div>

    <div id="c26" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c26">Comment 26</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vincent Danen</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-20 15:26:08 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">When do we plan on making this public?  If we have a reproducer and a patch, should we not consider when we should be alerting other vendors and making this issue public?

What works for upstream here?  If we let vendor-sec know, they have a policy of embargoes no longer than 14 days.  Is there more to do yet, or can we plan for a release date (this also depends on upstream release schedules, etc.).

Also note that I won't be around next week at all (not to say we can't release something next week, just pointing out that my responses will be delayed).  Thanks.

</pre>
    </div>

    <div id="c35" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c35">Comment 35</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Rainer Gerhards</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-31 12:06:30 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I am back from vacation and know that 9/1 was set as release date. We have prepared everything over here. Question now: at what time you usually release? We try to release security-related things around noon CET.

</pre>
    </div>

    <div id="c36" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c36">Comment 36</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-31 12:59:06 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Upstream release around noon CE(S)T sounds fine for us, we're likely to release our updated packages within few hours after that.

</pre>
    </div>

    <div id="c37" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c37">Comment 37</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Rainer Gerhards</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-08-31 13:06:35 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">OK, so I'll go for 11a UTC (1p CEST). It's a bit closer to your release. Thanks for all your help!

</pre>
    </div>

    <div id="c38" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c38">Comment 38</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Tomas Hoger</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-09-01 16:22:18 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Upstream advisory:
<a href="http://www.rsyslog.com/potential-dos-with-malformed-tag/">http://www.rsyslog.com/potential-dos-with-malformed-tag/</a>

Fixed upstream in stable releases 4.6.8 or 5.8.5.

Upstream commit:
<a href="http://git.adiscon.com/?p=rsyslog.git;a=commitdiff;h=1ca6cc236d1dabf1633238b873fb1c057e52f95e">http://git.adiscon.com/?p=rsyslog.git;a=commitdiff;h=1ca6cc236d1dabf1633238b873fb1c057e52f95e</a>

</pre>
    </div>

    <div id="c39" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c39">Comment 39</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vincent Danen</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-09-01 19:43:48 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Created rsyslog tracking bugs for this issue

Affects: fedora-all [<a class="bz_bug_link
          
          bz_status_CLOSED  bz_closed
                              
    "
   title="CLOSED ERRATA - CVE-2011-3200 rsyslog: parseLegacySyslogMsg off-by-two buffer overflow [fedora-all]"
   href="show_bug.cgi?id=735205">bug 735205</a>]

</pre>
    </div>

    <div id="c40" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c40">Comment 40</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">errata-xmlrpc</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-09-01 20:01:54 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">This issue has been addressed in following products:

  Red Hat Enterprise Linux 6

Via RHSA-2011:1247 <a href="https://rhn.redhat.com/errata/RHSA-2011-1247.html">https://rhn.redhat.com/errata/RHSA-2011-1247.html</a>

</pre>
    </div>

    <div id="c42" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=727644#c42">Comment 42</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vincent Danen</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2011-10-07 14:56:06 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">External References:

<a href="http://www.rsyslog.com/potential-dos-with-malformed-tag/">http://www.rsyslog.com/potential-dos-with-malformed-tag/</a>

</pre>
    </div>


  <script>
$(document).ready(function() {
  var mysel = document.getElementsByClassName('flag_type-415')[0];
  var relnotes = document.getElementById('cf_release_notes');
  if ( mysel && relnotes &&
      relnotes.value != '' &&
      relnotes.value != cf_doc_type_text[document.getElementById('cf_doc_type').value] &&
      mysel.options[mysel.selectedIndex].value != '+'
    )
      document.getElementById('cf_doc_warn').innerHTML = '<div class="warning "><b>Warning: Doc Text is not yet verified as correct</b></div>';
});
</script>

</td>
<td>
</td>
</tr></table>
  </div>

    <hr><div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=727644&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=727644" title="Format For Printing"><i class="fa fa-print"></i></a></li>
    <li><a href="show_bug.cgi?ctype=xml&amp;id=727644" title="Export as XML"><i class="far fa-file-excel"></i></a></li>
    <li><a href="enter_bug.cgi?cloned_bug_id=727644" title="Clone This Bug"><i class="fa fa-clone"></i></a></li>
    <li>
      <a href="enter_bug.cgi?cloned_bug_id=727644&lite=1" title="Copy is a lite weight clone that only copies the summary &amp; description">
       <i class="far fa-clone"></i>
      </a>
    </li><li>
  <a href="buglist.cgi?bug_id=727644&amp;bug_id_type=anddependson&amp;format=tvp" title="TreeView+">
    <i class="fa fa-tree"></i>
  </a>
</li>
    <li>
      <a href="#" title="Top of page">
        <i class="fa fa-arrow-up" aria-hidden="true"></i>
      </a>
    </li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li class="form">
    
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>
<script type="text/javascript">
function dt_submit() {
  var tables = $.fn.dataTable.tables( { visible: true, api: true } );
  $.each(tables.context, function() {
    var $myform = this.nTable.closest('form');

    // Checked checkboxes
    $.each(this.oInstance.$('input:checked'), function() {
      add_hidden(this.name, this.value, $myform)
    });

    // Inputs in selected rows
    $.each(this.oInstance.$('tr.selected'), function() {
      $(this).find('input').each( function() {
        add_hidden(this.name, this.value, $myform)
      });
    });

    // select boxes
    $.each(this.oInstance.$('select'), function() {
      if(($(this).val()!=="") && ($(this).val() !== 0)) {
        add_hidden(this.name, this.value, $myform);
      }
    });
  });
}

function add_hidden(nm, val, $frm) {
        $('<input />').attr('type', 'hidden')
          .attr('name', nm)
          .attr('value', val)
          .appendTo($frm);
}

$(document).ready(function() {
    $('form').submit(function( event ) {
        dt_submit();
        if( $(this).attr('id') === 'changeform') {
          return(validateEnterBug(this));
        }
    });
});

if (window.self !== window.top) {
    $('#header').addClass('bz_default_hidden');
    $('#footer').addClass('bz_default_hidden');
    $('.navigation').addClass('bz_default_hidden');
    $('body').css('background-image', 'none');
}
</script><script type="text/javascript">
$(document).ready(function() {
    $('select').not('.custom_search_condition select, #member_template select, #available_columns, #p2_component, #select_user_verify_class, #inclusion_to_remove, #exclusion_to_remove, #cc, #hide, #ack_col_edit #show, .noselectize, #j_top').each(function() {
        if(! $(this).hasClass('selectized')) {
            $(this).selectize({
                plugins: ['remove_button', 'minimum_search_length', 'extra_keys_control', 'related_fields', 'load_from_js'],
                selectOnTab: true,
                maxOptions: 'nolimit',
                minimum_search_length: 2,
                render: {
                    option: function(item, escape) {
                        var classes = "option";
                        var selected = this.items.indexOf(item.value) !== -1;
                        if(item.disabled) {
                            classes = classes + " bz_default_hidden" ;
                        }

                        return '<div class="' +  classes  + '" title="' + escape(item.title) + '" id="' + escape(item.id) + '" data-value="' + escape(item.value) + '">' +
                                    '<span>' + escape(item.text) + '</span>' +
                                '</div>';
                    }
                },
            });
        }
    });
});
</script>
  </body>
</html>