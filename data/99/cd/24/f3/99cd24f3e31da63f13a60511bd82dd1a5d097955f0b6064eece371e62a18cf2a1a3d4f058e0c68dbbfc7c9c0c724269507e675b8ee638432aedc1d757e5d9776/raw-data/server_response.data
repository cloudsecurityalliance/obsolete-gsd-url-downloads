<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='OpenSSL related Bug #79601 - RDF' href='rss/bug.php?id=79601'>
        <link rel='alternate' type='application/rss+xml' title='OpenSSL related Bug #79601 - RSS 2.0' href='rss/bug.php?id=79601&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Sec Bug #79601 :: Wrong ciphertext/tag in AES-CCM encryption for a 12 bytes IV</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=79601">Sec Bug</a>&nbsp;#79601</th>
            <td id="summary" colspan="5">Wrong ciphertext/tag in AES-CCM encryption for a 12 bytes IV</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2020-05-15 10:46 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2020-09-29 20:29 UTC</td>
            <td rowspan="6">


            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>bizxing &#x61;&#116; web &#x64;&#111;&#x74; de</td>
            <th class="details">Assigned:</th>
            <td><a href="search.php?cmd=display&amp;assign=bukka">bukka</a> (<a href="https://people.php.net/bukka">profile</a>)</td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=OpenSSL+related">OpenSSL related</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>Irrelevant</td>
            <th class="details">OS:</th>
            <td>*</td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7069 	" target="_blank">2020-7069 	</a></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=79601&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=79601&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=79601&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1589539616">&nbsp;</a><strong>[2020-05-15 10:46 UTC] bizxing &#x61;&#116; web &#x64;&#111;&#x74; de</strong>
<pre class='note'>Description:
------------
openssl_encrypt generates for AES-CCM for a 12 bytes IV a wrong ciphertext and a wrong tag. Ciphertext and tag are identical to the respective values for a 7 bytes IV, which results from the 12 bytes IV when the last 5 bytes are removed.


Test script:
---------------
The following test vector for a 12 bytes IV is from NIST Special Publication 800-38C (<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38c.pdf" rel="nofollow">https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38c.pdf</a>), Example 3, page 18:

Test vector (all data hex): Tag length: 8 bytes
Key:  					40414243 44454647 48494a4b 4c4d4e4f
Nonce/IV:  				10111213 14151617 18191a1b
AAD:  					00010203 04050607 08090a0b 0c0d0e0f 10111213
Plaintext: 				20212223 24252627 28292a2b 2c2d2e2f 30313233 34353637
Ciphertext || Tag (last 8 bytes): 	e3b201a9 f5b71a7a 9b1ceaec cd97e70b 6176aad9 a4428aa5 484392fb c1b09951

The following script calculates ciphertext and tag for this test vector. Additionally, ciphertext and tag are determined for the 7 bytes IV that results from the 12 bytes IV when the last 5 bytes are removed: 

&lt;?php
function printTag($plaintext, $key, $iv, $aad, $taglength){
    $encrypted = openssl_encrypt($plaintext, 'aes-128-ccm', $key, OPENSSL_RAW_DATA, $iv, $tag, $aad, $taglength);
    print('ciphertext: ' . bin2hex($encrypted) . ' - tag: ' .  bin2hex($tag) . &quot;\n&quot;);
}

$key = hex2bin('404142434445464748494a4b4c4d4e4f');
$aad = hex2bin('000102030405060708090a0b0c0d0e0f10111213');
$plaintext = hex2bin('202122232425262728292a2b2c2d2e2f3031323334353637');
$tagLength = 8;
                                                               
$iv = hex2bin('101112131415161718191a1b'); // 12 bytes
printTag($plaintext, $key, $iv, $aad, $tagLength); // ciphertext: 7162015bc051951e5918aeaf3c11f3d4ac363f8d5b6af3d3 - tag: af9831fb22f8931f

$iv = hex2bin('10111213141516'); // 7 bytes
printTag($plaintext, $key, $iv, $aad, $tagLength); // ciphertext: 7162015bc051951e5918aeaf3c11f3d4ac363f8d5b6af3d3 - tag: af9831fb22f8931f
?&gt; 


Expected result:
----------------
For the input data of the test vector, openssl_encrypt calculates that ciphertext and that tag which are specified in the test vector.


Actual result:
--------------
For the input data of the test vector, openssl_encrypt calculates a ciphertext and a tag that are different from those specified in the test vector. Ciphertext and tag are identical to the respective values for a 7 bytes IV, which results from the 12 bytes IV of the test vector when the last 5 bytes are removed.


</pre>
</div><h2>Patches</h2>
<a href="patch-display.php?bug_id=79601&amp;patch=openssl_aes_ccm_iv_fix&amp;revision=latest" >openssl_aes_ccm_iv_fix</a>
(last revision 2020-09-20 18:16 UTC by bukka@php.net)
<br><p><a href='patch-add.php?bug_id=79601'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=79601'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_log' ><a name="1589546872">&nbsp;</a><strong>[2020-05-15 12:47 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Type:           Bug</span>
<span class="added">+Type:           Security</span>
<span class="removed">-Private report: No</span>
<span class="added">+Private report: Yes</span>
</div></div></div><div class='comment type_comment' ><a name="1589546872">&nbsp;</a><strong>[2020-05-15 12:47 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<pre class='note'>Tentatively marking as sec issue.
</pre>
</div><div class='comment type_log' ><a name="1589552495">&nbsp;</a><strong>[2020-05-15 14:21 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Assigned To:</span>
<span class="added">+Assigned To: bukka</span>
</div></div></div><div class='comment type_comment' ><a name="1589552495">&nbsp;</a><strong>[2020-05-15 14:21 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<pre class='note'>It seems that our assumption that the user behaved[1] is invalid.
`iv_required_len` is retrieved via `EVP_CIPHER_iv_length()`, which
returns 12 for aes-128-ccm, while its default is actually 7.
Since we're bailing out for a given length of 12, the actually
desired length is not set, and therefore `openssl_encrypt()`
behaves as if an IV of length 7 would have been passed.

Or is our assumption correct, and the values would have to match
in OpenSSL?

Jakub, what do you think?

[1] &lt;<a href="https://github.com/php/php-src/blob/php-7.3.18/ext/openssl/openssl.c#L6444-L6447" rel="nofollow">https://github.com/php/php-src/blob/php-7.3.18/ext/openssl/openssl.c#L6444-L6447</a>&gt;
</pre>
</div><div class='comment type_log' ><a name="1589552611">&nbsp;</a><strong>[2020-05-15 14:23 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Operating System: Windows 10</span>
<span class="added">+Operating System: *</span>
</div></div></div><div class='comment type_comment' ><a name="1590144978">&nbsp;</a><strong>[2020-05-22 10:56 UTC] bizxing &#x61;&#116; web &#x64;&#111;&#x74; de</strong>
<pre class='note'>Some additional information: 

The PHP bug has been revealed in the context of this issue [1] on StackOverflow: openssl_encrypt returns a different ciphertext/tag for AES CCM on a 12 bytes IV than Python with the Cryptography library. A check with Java/BouncyCastle confirms the Python result. 

The same applies to the NIST test vector posted here: Python and Java fulfill the test vector, openssl_encrypt does not. 

OpenSSL itself also satisfies the test vector (verified using this code [2] adapted for the test case).

[1]: <a href="https://stackoverflow.com/a/61797909" rel="nofollow">https://stackoverflow.com/a/61797909</a>
[2]: <a href="https://wiki.openssl.org/index.php/EVP_Authenticated_Encryption_and_Decryption#Authenticated_Encryption_using_CCM_mode" rel="nofollow">https://wiki.openssl.org/index.php/EVP_Authenticated_Encryption_and_Decryption#Authenticated_Encryption_using_CCM_mode</a>
</pre>
</div><div class='comment type_comment' ><a name="1592153916">&nbsp;</a><strong>[2020-06-14 16:58 UTC] <a href="//people.php.net/bukka">bukka@php.net</a></strong>
<pre class='note'>Ah I see yeah that condition is wrong for CCM. I will fix this.

Is this really a security issue? If think so, can you please detail how the security is impacted by using a shorter IV in CCM mode?
</pre>
</div><div class='comment type_comment' ><a name="1592196442">&nbsp;</a><strong>[2020-06-15 04:47 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>I am not sure it can cause security problem like revealing credentials etc. but I think producing broken encryption is security-relevant...
</pre>
</div><div class='comment type_comment' ><a name="1592480666">&nbsp;</a><strong>[2020-06-18 11:44 UTC] bizxing &#x61;&#116; web &#x64;&#111;&#x74; de</strong>
<pre class='note'>IMO the following example illustrates a scenario where the bug severely affects the security of CCM:

For CCM the IV consists of a nonce (e.g. 12 bytes) and a counter (e.g. 3 bytes) [RFC3610, 2.3. Encryption, L = 3][1]. The counter is incremented with each block and ensures that different IVs are used within the same message. As nonce a random nonce for each message is generated or alternatively a random nonce that is incremented for each further message [RFC3610, 5. Nonce Sugesstions][2]. This reliably ensures that different IVs are also used across different messages.

A 12 bytes nonce that is incremented is converted by the bug into a 7 bytes nonce in which the last 5 bytes are truncated so that the nonce is identical for the first 0x100^5 = 2^40 (different) messages (most-significant-byte first order assumed). I.e. for all these messages, the i-th block of each message would be encrypted with the same key/IV(i) pair.

The crucial condition for CCM is that no key/IV pair may be used more than once, as this would destroy the security of CCM, [CCM mode][3], [RFC4309, 2. AES CCM Mode, last section][4].  

In case of a random nonce for each message (instead of an incremented one) the issue would not occur in this form. This means that the bug may have no or serious security implications depending on the implementation details.

[1]: <a href="https://tools.ietf.org/html/rfc3610#section-2.3" rel="nofollow">https://tools.ietf.org/html/rfc3610#section-2.3</a>
[2]: <a href="https://tools.ietf.org/html/rfc3610#section-5" rel="nofollow">https://tools.ietf.org/html/rfc3610#section-5</a>
[3]: <a href="https://en.wikipedia.org/wiki/CCM_mode" rel="nofollow">https://en.wikipedia.org/wiki/CCM_mode</a>
[4]: <a href="https://tools.ietf.org/html/rfc4309#section-2" rel="nofollow">https://tools.ietf.org/html/rfc4309#section-2</a>
</pre>
</div><div class='comment type_comment' ><a name="1592755437">&nbsp;</a><strong>[2020-06-21 16:03 UTC] <a href="//people.php.net/bukka">bukka@php.net</a></strong>
<pre class='note'>Ok I think we should treat it as a security issue then.

Just for the interest how can this have a serious security implications (not trying to say that it doesn't impact on security - just wondering why serious). I might be not understanding it correctly but with nonce being 7 bytes (it means L = 8), the counter should be 8 bytes so one can use larger messages for the price of having shorter nonce. With nonce 12 bytes, the pre computation attack will be more difficult so it's probably better for shorter messages but shouldn't the difficulty for 7 bytes nonce be still high enough when it's default?
</pre>
</div><div class='comment type_comment' ><a name="1592763161">&nbsp;</a><strong>[2020-06-21 18:12 UTC] bizxing &#x61;&#116; web &#x64;&#111;&#x74; de</strong>
<pre class='note'>The problem is not whether the 7 bytes nonce is in principle less secure than the 12 bytes nonce. CCM allows a nounce size of 7 to 13 bytes with regard to different requirements and the security should be comparable.

I don't see the problem with a new implementation either, because if the bug is known to the developers, the implementation can be designed so that the bug does not become a serious security risk. 

I see the problem with a part of already existing applications that were designed without knowledge of this bug. E.g. in the case of the scenario described in my last comment, the developers assume that a 12 bytes nonce is used, which is incremented for each message (at the end), and do not suspect that the nounce is truncated due to the bug, so that the same nounce and thus the same IV sequence is applied for practically all messages. For a mode related to the CTR mode this is the worst case, e.g.: &quot;The reuse of an AES-CCM or AES-GCM nonce/key combination destroys the security guarantees&quot; [1] or &quot;For ... CTR, reusing an IV completely destroys security&quot; [2]. Such a scenario most likely meets the criteria for a serious security problem. 

But of course, there will also be already existing applications that are designed in such a way that the bug has no impact.

[1]: <a href="https://tools.ietf.org/html/rfc5084#section-2" rel="nofollow">https://tools.ietf.org/html/rfc5084#section-2</a> 
[2]: <a href="https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Initialization_vector_(IV" rel="nofollow">https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Initialization_vector_(IV</a>)
</pre>
</div><div class='comment type_patch' ><a name="1600625816">&nbsp;</a><strong>[2020-09-20 18:16 UTC] <a href="//people.php.net/bukka">bukka@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: openssl_aes_ccm_iv_fix
Revision:   1600625816
URL:        <a href="https://bugs.php.net/patch-display.php?bug=79601&amp;patch=openssl_aes_ccm_iv_fix&amp;revision=1600625816" rel="nofollow">https://bugs.php.net/patch-display.php?bug=79601&amp;patch=openssl_aes_ccm_iv_fix&amp;revision=1600625816</a>
</pre>
</div><div class='comment type_comment' ><a name="1600626102">&nbsp;</a><strong>[2020-09-20 18:21 UTC] <a href="//people.php.net/bukka">bukka@php.net</a></strong>
<pre class='note'>Ok, the patch that applies fine to PHP 7.3 is attached. Will need to check if it applies to later version as there has been some code changes.

As this has been already exposed and the security issue can be treated in PHP code if the user has got a knowledge about the issue, I'm not really sure if we need to backport it to 7.2 and do a security release.

If everyone is fine with that, I can just push it to 7.3+.
</pre>
</div><div class='comment type_comment' ><a name="1600645952">&nbsp;</a><strong>[2020-09-20 23:52 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>I think unless it requires an extraordinary effort it should be backported. The patch doesn't seem to be too complicated...
</pre>
</div><div class='comment type_comment' ><a name="1600647785">&nbsp;</a><strong>[2020-09-21 00:23 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>In fact, 7.2 code looks the same as 7.3, and I just checked the patch seems to fix the issue for 7.2 too.
</pre>
</div><div class='comment type_log' ><a name="1600648265">&nbsp;</a><strong>[2020-09-21 00:31 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID:</span>
<span class="added">+CVE-ID: 2020-7069</span>
</div></div></div><div class='comment type_svn' ><a name="1601360002">&nbsp;</a><strong>[2020-09-29 06:13 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=0216630ea2815a5789a24279a1211ac398d4de79" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=0216630ea2815a5789a24279a1211ac398d4de79</a>
Log: Fix <a href='bug.php?id=79601'>bug #79601</a> (Wrong ciphertext/tag in AES-CCM encryption for a 12 bytes IV)
</pre>
</div><div class='comment type_log' ><a name="1601360002">&nbsp;</a><strong>[2020-09-29 06:13 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Closed</span>
</div></div></div><div class='comment type_svn' ><a name="1601360003">&nbsp;</a><strong>[2020-09-29 06:13 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=2f5cb702ffc31c8d88ff95a226723aeac0dec8be" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=2f5cb702ffc31c8d88ff95a226723aeac0dec8be</a>
Log: Fix <a href='bug.php?id=79601'>bug #79601</a> (Wrong ciphertext/tag in AES-CCM encryption for a 12 bytes IV)
</pre>
</div><div class='comment type_svn' ><a name="1601362345">&nbsp;</a><strong>[2020-09-29 06:52 UTC] <a href="//people.php.net/remi">remi@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=0216630ea2815a5789a24279a1211ac398d4de79" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=0216630ea2815a5789a24279a1211ac398d4de79</a>
Log: Fix <a href='bug.php?id=79601'>bug #79601</a> (Wrong ciphertext/tag in AES-CCM encryption for a 12 bytes IV)
</pre>
</div><div class='comment type_svn' ><a name="1601362345">&nbsp;</a><strong>[2020-09-29 06:52 UTC] <a href="//people.php.net/remi">remi@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=2f5cb702ffc31c8d88ff95a226723aeac0dec8be" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=2f5cb702ffc31c8d88ff95a226723aeac0dec8be</a>
Log: Fix <a href='bug.php?id=79601'>bug #79601</a> (Wrong ciphertext/tag in AES-CCM encryption for a 12 bytes IV)
</pre>
</div><div class='comment type_svn' ><a name="1601365846">&nbsp;</a><strong>[2020-09-29 07:50 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=de777c8fd22807c2121775e0f936336dc34a01a4" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=de777c8fd22807c2121775e0f936336dc34a01a4</a>
Log: Fix <a href='bug.php?id=79601'>bug #79601</a> (Wrong ciphertext/tag in AES-CCM encryption for a 12 bytes IV)
</pre>
</div><div class='comment type_comment' ><a name="1601374876">&nbsp;</a><strong>[2020-09-29 10:21 UTC] <a href="//people.php.net/bukka">bukka@php.net</a></strong>
<pre class='note'>@stas why did you change the author of the commit? I think you applied it incorrectly. You should be really using `git am`. Please can you re-apply it?
</pre>
</div><div class='comment type_comment' ><a name="1601375069">&nbsp;</a><strong>[2020-09-29 10:24 UTC] <a href="//people.php.net/bukka">bukka@php.net</a></strong>
<pre class='note'>I think you will need to revert and then apply it again. I spent a bit of time on this so I would really appriciate credit for this work. Thanks.
</pre>
</div><div class='comment type_comment' ><a name="1601376146">&nbsp;</a><strong>[2020-09-29 10:42 UTC] <a href="//people.php.net/bukka">bukka@php.net</a></strong>
<pre class='note'>Or maybe better could someone give me access so I can push to security branches so I don't bother Stas and others with things like this. I think it's not really productive and don't really see reason why we are doing this kind of blocking. At least the commiters that are aware of the process should be given access to commit to those branches as well because it seems like a waste of our time to provide patches and let others handle conflicts and other bits.
</pre>
</div><div class='comment type_comment' ><a name="1601398892">&nbsp;</a><strong>[2020-09-29 17:01 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Jakub, is only the author wrong or something else too?
</pre>
</div><div class='comment type_comment' ><a name="1601411389">&nbsp;</a><strong>[2020-09-29 20:29 UTC] <a href="//people.php.net/bukka">bukka@php.net</a></strong>
<pre class='note'>As discussed in the commit on GitHub - it's fine to leave it as it is.
</pre>
</div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
