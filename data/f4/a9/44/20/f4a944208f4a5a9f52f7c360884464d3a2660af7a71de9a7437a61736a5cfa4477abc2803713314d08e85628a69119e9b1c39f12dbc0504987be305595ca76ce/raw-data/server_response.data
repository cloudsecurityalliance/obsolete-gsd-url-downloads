<!DOCTYPE html>
<!--[if IE 7]>
<html class="ie ie7" lang="en-US">
<![endif]-->
<!--[if IE 8]>
<html class="ie ie8" lang="en-US">
<![endif]-->
<!--[if !(IE 7) & !(IE 8)]><!-->
<html lang="en-US">
<!--<![endif]-->
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width">
	<title>One URL standard please | daniel.haxx.se</title>
	<link rel="profile" href="https://gmpg.org/xfn/11">
	<link rel="pingback" href="https://daniel.haxx.se/blog/xmlrpc.php">
	<!--[if lt IE 9]>
	<script src="https://daniel.haxx.se/blog/wp-content/themes/twentyfourteen/js/html5.js?ver=3.7.0"></script>
	<![endif]-->
	<meta name='robots' content='max-image-preview:large' />
<link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link href='https://fonts.gstatic.com' crossorigin rel='preconnect' />
<link rel="alternate" type="application/rss+xml" title="daniel.haxx.se &raquo; Feed" href="https://daniel.haxx.se/blog/feed/" />
<link rel="alternate" type="application/rss+xml" title="daniel.haxx.se &raquo; Comments Feed" href="https://daniel.haxx.se/blog/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="daniel.haxx.se &raquo; One URL standard please Comments Feed" href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/feed/" />
		<script>
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/daniel.haxx.se\/blog\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.8.1"}};
			!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([10084,65039,8205,55357,56613],[10084,65039,8203,55357,56613])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style>
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='wp-block-library-css'  href='https://daniel.haxx.se/blog/wp-includes/css/dist/block-library/style.min.css?ver=5.8.1' media='all' />
<style id='wp-block-library-theme-inline-css'>
#start-resizable-editor-section{display:none}.wp-block-audio figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-audio figcaption{color:hsla(0,0%,100%,.65)}.wp-block-code{font-family:Menlo,Consolas,monaco,monospace;color:#1e1e1e;padding:.8em 1em;border:1px solid #ddd;border-radius:4px}.wp-block-embed figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-embed figcaption{color:hsla(0,0%,100%,.65)}.blocks-gallery-caption{color:#555;font-size:13px;text-align:center}.is-dark-theme .blocks-gallery-caption{color:hsla(0,0%,100%,.65)}.wp-block-image figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-image figcaption{color:hsla(0,0%,100%,.65)}.wp-block-pullquote{border-top:4px solid;border-bottom:4px solid;margin-bottom:1.75em;color:currentColor}.wp-block-pullquote__citation,.wp-block-pullquote cite,.wp-block-pullquote footer{color:currentColor;text-transform:uppercase;font-size:.8125em;font-style:normal}.wp-block-quote{border-left:.25em solid;margin:0 0 1.75em;padding-left:1em}.wp-block-quote cite,.wp-block-quote footer{color:currentColor;font-size:.8125em;position:relative;font-style:normal}.wp-block-quote.has-text-align-right{border-left:none;border-right:.25em solid;padding-left:0;padding-right:1em}.wp-block-quote.has-text-align-center{border:none;padding-left:0}.wp-block-quote.is-large,.wp-block-quote.is-style-large{border:none}.wp-block-search .wp-block-search__label{font-weight:700}.wp-block-group.has-background{padding:1.25em 2.375em;margin-top:0;margin-bottom:0}.wp-block-separator{border:none;border-bottom:2px solid;margin-left:auto;margin-right:auto;opacity:.4}.wp-block-separator:not(.is-style-wide):not(.is-style-dots){width:100px}.wp-block-separator.has-background:not(.is-style-dots){border-bottom:none;height:1px}.wp-block-separator.has-background:not(.is-style-wide):not(.is-style-dots){height:2px}.wp-block-table thead{border-bottom:3px solid}.wp-block-table tfoot{border-top:3px solid}.wp-block-table td,.wp-block-table th{padding:.5em;border:1px solid;word-break:normal}.wp-block-table figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-table figcaption{color:hsla(0,0%,100%,.65)}.wp-block-video figcaption{color:#555;font-size:13px;text-align:center}.is-dark-theme .wp-block-video figcaption{color:hsla(0,0%,100%,.65)}.wp-block-template-part.has-background{padding:1.25em 2.375em;margin-top:0;margin-bottom:0}#end-resizable-editor-section{display:none}
</style>
<link rel='stylesheet' id='cptch_stylesheet-css'  href='https://daniel.haxx.se/blog/wp-content/plugins/captcha/css/front_end_style.css?ver=4.4.5' media='all' />
<link rel='stylesheet' id='dashicons-css'  href='https://daniel.haxx.se/blog/wp-includes/css/dashicons.min.css?ver=5.8.1' media='all' />
<link rel='stylesheet' id='cptch_desktop_style-css'  href='https://daniel.haxx.se/blog/wp-content/plugins/captcha/css/desktop_style.css?ver=4.4.5' media='all' />
<link rel='stylesheet' id='twentyfourteen-lato-css'  href='https://fonts.googleapis.com/css?family=Lato%3A300%2C400%2C700%2C900%2C300italic%2C400italic%2C700italic&#038;subset=latin%2Clatin-ext&#038;display=fallback' media='all' />
<link rel='stylesheet' id='genericons-css'  href='https://daniel.haxx.se/blog/wp-content/themes/twentyfourteen/genericons/genericons.css?ver=3.0.3' media='all' />
<link rel='stylesheet' id='twentyfourteen-style-css'  href='https://daniel.haxx.se/blog/wp-content/themes/twentyfourteen/style.css?ver=20190507' media='all' />
<link rel='stylesheet' id='twentyfourteen-block-style-css'  href='https://daniel.haxx.se/blog/wp-content/themes/twentyfourteen/css/blocks.css?ver=20190102' media='all' />
<!--[if lt IE 9]>
<link rel='stylesheet' id='twentyfourteen-ie-css'  href='https://daniel.haxx.se/blog/wp-content/themes/twentyfourteen/css/ie.css?ver=20140701' media='all' />
<![endif]-->
<script src='https://daniel.haxx.se/blog/wp-includes/js/jquery/jquery.min.js?ver=3.6.0' id='jquery-core-js'></script>
<script src='https://daniel.haxx.se/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<link rel="https://api.w.org/" href="https://daniel.haxx.se/blog/wp-json/" /><link rel="alternate" type="application/json" href="https://daniel.haxx.se/blog/wp-json/wp/v2/posts/9725" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://daniel.haxx.se/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://daniel.haxx.se/blog/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 5.8.1" />
<link rel="canonical" href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/" />
<link rel='shortlink' href='https://daniel.haxx.se/blog/?p=9725' />
<link rel="alternate" type="application/json+oembed" href="https://daniel.haxx.se/blog/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fdaniel.haxx.se%2Fblog%2F2017%2F01%2F30%2Fone-url-standard-please%2F" />
<link rel="alternate" type="text/xml+oembed" href="https://daniel.haxx.se/blog/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fdaniel.haxx.se%2Fblog%2F2017%2F01%2F30%2Fone-url-standard-please%2F&#038;format=xml" />
<style>.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>		<style type="text/css" id="twentyfourteen-header-css">
				.site-title,
		.site-description {
			clip: rect(1px 1px 1px 1px); /* IE7 */
			clip: rect(1px, 1px, 1px, 1px);
			position: absolute;
		}
				</style>
		<link rel="icon" href="https://daniel.haxx.se/blog/wp-content/uploads/2015/08/cropped-Daniel-head-greenshirt-32x32.jpg" sizes="32x32" />
<link rel="icon" href="https://daniel.haxx.se/blog/wp-content/uploads/2015/08/cropped-Daniel-head-greenshirt-192x192.jpg" sizes="192x192" />
<link rel="apple-touch-icon" href="https://daniel.haxx.se/blog/wp-content/uploads/2015/08/cropped-Daniel-head-greenshirt-180x180.jpg" />
<meta name="msapplication-TileImage" content="https://daniel.haxx.se/blog/wp-content/uploads/2015/08/cropped-Daniel-head-greenshirt-270x270.jpg" />
</head>

<body class="post-template-default single single-post postid-9725 single-format-standard wp-embed-responsive header-image singular">
<div id="page" class="hfeed site">
		<div id="site-header">
		<a href="https://daniel.haxx.se/blog/" rel="home">
			<img src="https://daniel.haxx.se/blog/wp-content/uploads/2015/08/keyword-header-thin.jpg" width="1260" height="100" alt="daniel.haxx.se">
		</a>
	</div>
	
	<header id="masthead" class="site-header" role="banner">
		<div class="header-main">
			<h1 class="site-title"><a href="https://daniel.haxx.se/blog/" rel="home">daniel.haxx.se</a></h1>

			<div class="search-toggle">
				<a href="#search-container" class="screen-reader-text" aria-expanded="false" aria-controls="search-container">Search</a>
			</div>

			<nav id="primary-navigation" class="site-navigation primary-navigation" role="navigation">
				<button class="menu-toggle">Primary Menu</button>
				<a class="screen-reader-text skip-link" href="#content">Skip to content</a>
				<div id="primary-menu" class="nav-menu"><ul>
<li class="page_item page-item-2"><a href="https://daniel.haxx.se/blog/about/">About this blog</a></li>
<li class="page_item page-item-8378"><a href="https://daniel.haxx.se/blog/contact/">Contact</a></li>
</ul></div>
			</nav>
		</div>

		<div id="search-container" class="search-box-wrapper hide">
			<div class="search-box">
				<form role="search" method="get" class="search-form" action="https://daniel.haxx.se/blog/">
				<label>
					<span class="screen-reader-text">Search for:</span>
					<input type="search" class="search-field" placeholder="Search &hellip;" value="" name="s" />
				</label>
				<input type="submit" class="search-submit" value="Search" />
			</form>			</div>
		</div>
	</header><!-- #masthead -->

	<div id="main" class="site-main">

	<div id="primary" class="content-area">
		<div id="content" class="site-content" role="main">
			
<article id="post-9725" class="post-9725 post type-post status-publish format-standard hentry category-curl category-firefox-floss category-net category-web tag-chrome tag-curl-and-libcurl tag-edge tag-firefox tag-ietf tag-rfc tag-safari tag-url tag-wget tag-whatwg">
	
	<header class="entry-header">
				<div class="entry-meta">
			<span class="cat-links"><a href="https://daniel.haxx.se/blog/category/floss/curl/" rel="category tag">cURL and libcurl</a>, <a href="https://daniel.haxx.se/blog/category/floss/firefox-floss/" rel="category tag">Firefox</a>, <a href="https://daniel.haxx.se/blog/category/tech/net/" rel="category tag">Network</a>, <a href="https://daniel.haxx.se/blog/category/web/" rel="category tag">Web</a></span>
		</div>
			<h1 class="entry-title">One URL standard please</h1>
		<div class="entry-meta">
			<span class="entry-date"><a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/" rel="bookmark"><time class="entry-date" datetime="2017-01-30T08:29:51+01:00">January 30, 2017</time></a></span> <span class="byline"><span class="author vcard"><a class="url fn n" href="https://daniel.haxx.se/blog/author/daniel/" rel="author">Daniel Stenberg</a></span></span>			<span class="comments-link"><a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comments">19 Comments</a></span>
						</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

		<div class="entry-content">
		<p>Following up on the problem with our current lack of a universal URL standard that I blogged about in May 2016: <a href="https://daniel.haxx.se/blog/2016/05/11/my-url-isnt-your-url/">My URL isn&#8217;t your URL</a>. I want a <em>single, unified</em> URL standard that we would all stand behind, support and adhere to.</p>
<p>What triggers me this time, is yet another issue. A friendly <a href="https://curl.haxx.se/">curl</a> user sent me this URL:</p>
<pre>http://user@example.com:80@daniel.haxx.se</pre>
<p>&#8230; and pasting this URL into different tools and browsers show that there&#8217;s not a wide agreement on how this should work. Is the URL legal in the first place and if so, which host should a client contact?</p>
<ul>
<li><strong>curl</strong> treats the &#8216;@&#8217;-character as a separator between <a href="https://tools.ietf.org/html/rfc3986#section-3.2">userinfo</a> and host name so &#8216;example.com&#8217; becomes the host name, the port number is 80 followed by rubbish that curl ignores. (wget2, the next-gen wget that&#8217;s in development works identically)</li>
<li><strong>wget</strong> extracts the example.com host name but rejects the port number due to the rubbish after the zero.</li>
<li><strong>Edge</strong> and <strong>Safari</strong> say the URL is invalid and don&#8217;t go anywhere</li>
<li><strong>Firefox</strong> and <strong>Chrome</strong> allow &#8216;@&#8217; as part of the userinfo, take the &#8217;80&#8217; as a password and the host name then becomes &#8216;daniel.haxx.se&#8217;</li>
</ul>
<p>The only somewhat modern &#8220;spec&#8221; for URLs is the <a href="https://url.spec.whatwg.org/">WHATWG URL specification</a>. The other major, but now somewhat aged, URL spec is <a href="https://www.ietf.org/rfc/rfc3986.txt">RFC 3986</a>, made by the IETF and published in 2005.</p>
<p>In 2015, <a href="https://tools.ietf.org/html/draft-ruby-url-problem-01">URL problem statement and directions</a> was published as an Internet-draft by Masinter and Ruby and it brings up most of the current URL spec problems. Some of them are also discussed in Ruby&#8217;s <a href="http://intertwingly.net/blog/2014/10/02/WHATWG-URL-vs-IETF-URI">WHATWG URL vs IETF URI</a> post from 2014.</p>
<p>What I would like to see happen&#8230;<img loading="lazy" class="aligncenter size-large wp-image-8907" src="https://daniel.haxx.se/blog/wp-content/uploads/2016/05/URLs-1200x493.jpg" alt="" width="474" height="195" srcset="https://daniel.haxx.se/blog/wp-content/uploads/2016/05/URLs-1200x493.jpg 1200w, https://daniel.haxx.se/blog/wp-content/uploads/2016/05/URLs-200x82.jpg 200w, https://daniel.haxx.se/blog/wp-content/uploads/2016/05/URLs-450x185.jpg 450w, https://daniel.haxx.se/blog/wp-content/uploads/2016/05/URLs-768x315.jpg 768w, https://daniel.haxx.se/blog/wp-content/uploads/2016/05/URLs.jpg 1388w" sizes="(max-width: 474px) 100vw, 474px" /></p>
<h2>Which group? <em>A</em> group!</h2>
<p>Friends I know in the WHATWG suggest that I should dig in there and help them improve their spec. That would be a good idea if fixing the WHATWG spec would be the ultimate goal. I don&#8217;t think it is enough.</p>
<p>The WHATWG is highly browser focused and my interactions with members of that group that I have had in the past, have shown that there is little sympathy there for non-browsers who want to deal with URLs and there is even less sympathy or interest for URL schemes that the popular browsers don&#8217;t even support or care about. URLs cover much more than HTTP(S).</p>
<p>I have the feeling that WHATWG people <a href="https://wiki.whatwg.org/wiki/IETF">would not like this work to be done within the IETF</a> and vice versa. Since I&#8217;d like buy-in from both camps, and any other camps that might have an interest in URLs, this would need to be handled somehow.</p>
<p>It would also be great to get other major URL &#8220;consumers&#8221; on board, like authors of popular URL parsing libraries, tools and components.</p>
<p>Such a URL group would of course have to agree on the goal and how to get there, but I&#8217;ll still provide some additional things I want to see.</p>
<p><strong>Update</strong>: I want to emphasize that I do not consider the WHATWG&#8217;s job bad, wrong or lost. I think they&#8217;ve done a great job at unifying browsers&#8217; treatment of URLs. I don&#8217;t mean to belittle that. I just <em>know</em> that this group is only a small subset of the people who probably should be involved in a unified URL standard.</p>
<h2>A single fixed spec</h2>
<p>I can&#8217;t see any compelling reasons why a URL specification couldn&#8217;t reach a stable state and get published as *the* URL standard. The &#8220;living standard&#8221; approach may be fine for certain things (and in particular browsers that update every six weeks), but URLs are supposed to be long-lived and inter-operate far into the future so they really really should not change. Therefore, I think the IETF documentation model could work well for this.</p>
<p>The WHATWG spec documents what browsers do, and browsers do what is documented. At least that&#8217;s the theory I&#8217;ve been told, and it causes a spinning and never-ending loop that goes against my wish.</p>
<h2>Document the format</h2>
<p>The WHATWG specification is written in a pseudo code style, describing how a parser would &#8220;walk&#8221; over the string with a state machine and all. I know some people like that, I find it utterly annoying and really hard to figure out what&#8217;s allowed or not. I <em>much</em> more prefer the regular RFC style of describing protocol syntax.</p>
<h2>IDNA</h2>
<p>Can we please just say that host names in URLs should be handled according to IDNA2008 (<a href="https://tools.ietf.org/html/rfc5895">RFC 5895</a>)? WHATWG URL doesn&#8217;t state any IDNA spec number at all.</p>
<h2>Move out irrelevant sections</h2>
<p>&#8220;Irrelevant&#8221; when it comes to documenting the URL format that is. The WHATWG details several things that are related to URL for browsers but are mostly irrelevant to other URL consumers or producers. Like section &#8220;5. application/x-www-form-urlencoded&#8221; and &#8220;6. API&#8221;.</p>
<p>They would be better placed in a &#8220;URL considerations for browsers&#8221; companion document.</p>
<h2>Working doesn&#8217;t imply sensible</h2>
<p>So browsers accept URLs written with thousands of forward slashes instead of two. That is not a good reason for the spec to say that a URL may legitimately contain a thousand slashes. I&#8217;m totally convinced there&#8217;s no critical content anywhere using such formatted URLs and no soul will be sad if we&#8217;d restricted the number to a single-digit. So we should. And yeah, then browsers should reject URLs using more.</p>
<p>The slashes are only an example. The browsers have used a &#8220;liberal in what you accept&#8221; policy for a lot of things since forever, but we must resist to use that as a basis when nailing down a standard.</p>
<h2>The odds of this happening soon?</h2>
<p>I know there are individuals interested in seeing the URL situation getting worked on. We&#8217;ve seen articles and internet-drafts posted on the issue several times the last few years. Any year now I think we will see some movement for real trying to fix this. I hope I will manage to participate and contribute a little from my end.</p>
	</div><!-- .entry-content -->
	
	<footer class="entry-meta"><span class="tag-links"><a href="https://daniel.haxx.se/blog/tag/chrome/" rel="tag">Chrome</a><a href="https://daniel.haxx.se/blog/tag/curl-and-libcurl/" rel="tag">cURL and libcurl</a><a href="https://daniel.haxx.se/blog/tag/edge/" rel="tag">Edge</a><a href="https://daniel.haxx.se/blog/tag/firefox/" rel="tag">Firefox</a><a href="https://daniel.haxx.se/blog/tag/ietf/" rel="tag">IETF</a><a href="https://daniel.haxx.se/blog/tag/rfc/" rel="tag">RFC</a><a href="https://daniel.haxx.se/blog/tag/safari/" rel="tag">Safari</a><a href="https://daniel.haxx.se/blog/tag/url/" rel="tag">URL</a><a href="https://daniel.haxx.se/blog/tag/wget/" rel="tag">wget</a><a href="https://daniel.haxx.se/blog/tag/whatwg/" rel="tag">WHATWG</a></span></footer></article><!-- #post-9725 -->
		<nav class="navigation post-navigation" role="navigation">
		<h1 class="screen-reader-text">Post navigation</h1>
		<div class="nav-links">
			<a href="https://daniel.haxx.se/blog/2017/01/26/quic-is-h2-over-udp/" rel="prev"><span class="meta-nav">Previous Post</span>QUIC is h2 over UDP</a><a href="https://daniel.haxx.se/blog/2017/02/06/post-fosdem-2017/" rel="next"><span class="meta-nav">Next Post</span>Post FOSDEM 2017</a>			</div><!-- .nav-links -->
		</nav><!-- .navigation -->
		
<div id="comments" class="comments-area">

	
	<h2 class="comments-title">
		19 thoughts on &ldquo;One URL standard please&rdquo;	</h2>

		
	<ol class="comment-list">
				<li id="comment-17939" class="comment even thread-even depth-1 parent">
			<article id="div-comment-17939" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/c7f59c2515d8104bf46ef7d4422f2dab?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/c7f59c2515d8104bf46ef7d4422f2dab?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn">Stephan Sokolow</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17939"><time datetime="2017-01-30T09:53:39+01:00">January 30, 2017 at 09:53</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I&#8217;d be cautious about restrictions on use of slashes in URLs, given that I&#8217;ve seen some very weird URLs coming out of blind concatenation as a result of templating engines not wanting to provide proper URL handling functions.</p>
<p>(Especially Jekyll, as used by GitHub pages, where people tend to rely on their installation for convenience, so they can&#8217;t just extend it themselves with their own URL-manipulating template tags/filters.)</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-17940" class="comment byuser comment-author-daniel bypostauthor odd alt depth-2 parent">
			<article id="div-comment-17940" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='https://daniel.haxx.se/' rel='external nofollow ugc' class='url'>Daniel Stenberg</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17940"><time datetime="2017-01-30T10:01:24+01:00">January 30, 2017 at 10:01</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>@Stephan: then I&#8217;d like you to explain to me and the world the value in having browsers and tools accept more than (say) 9 slashes in a row. Sure there might be some very rare producers doing such URLs, but they should be identified, get bugs filed against them and fixed (or shamed, if they don&#8217;t fix them).</p>
<p>Just because there is stupid software in the world, it doesn&#8217;t mean we need to adjust the spec to make their crap compliant.</p>
<p>The &#8220;liberal in what you accept&#8221; rule is not working.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-17941" class="comment even depth-3">
			<article id="div-comment-17941" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/c7f59c2515d8104bf46ef7d4422f2dab?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/c7f59c2515d8104bf46ef7d4422f2dab?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn">Stephan Sokolow</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17941"><time datetime="2017-01-30T11:15:05+01:00">January 30, 2017 at 11:15</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I was more urging that you err on the &#8220;9 or less&#8221; side than the &#8220;two&#8221; side. I don&#8217;t see a problem from that for URLs originating in templating engines.</p>
<p>However, that does also remind me of another place where issues could creep out of the woodwork&#8230; applications which generate URLs from fileystem paths. (eg. native applications which rely on URL parsing to succeed before they can recognize the &#8220;file&#8221; scheme and apply realpath())</p>
<p>I know I&#8217;m probably just being skittish, but it feels uncomfortable to imagine what data loss bugs mightbe exacerbated in native applications coded to assume that all un-normalized but percent-escaped POSIX paths are valid URL path components.</p>
<p>(eg. While Geeqie doesn&#8217;t use URLs, it IS an example of an application where load/save cycling is not idempotent if a path in an image collection fails to load&#8230; ostensibly as a convenience feature for clearing out stale entries.)</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-17942" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="div-comment-17942" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/9767673d472c2f27307890c27061bca3?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/9767673d472c2f27307890c27061bca3?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn">Simon Pieters</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17942"><time datetime="2017-01-30T11:48:07+01:00">January 30, 2017 at 11:48</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>&gt; I’m totally convinced there’s no critical content anywhere using such formatted URLs and no soul will be sad if we’d restricted the number to a single-digit.</p>
<p>We can gather data to get an idea about where that limit should be, if we are to add a limit.</p>
<p>I checked httparchive (495,618 pages; 16,797,474 response bodies), looking for http or https URLs in src or href attributes with 3 or more slashes. 720 have 3 slashes, 271 have 4 slashes, 0 have 5+ slashes. </p>
<p>Searching in <a href="https://nerdydata.com/" rel="nofollow ugc">https://nerdydata.com/</a> (&#8220;We index approximately 160 million websites&#8221;) for href=&#8221;http:///// in &#8220;Deep Web&#8221; gives 0 results, 4 slashes approx. 5,170 found, 3+ slashes approx. 92,120 found. Searching for href=&#8221;https:///// gives 0 results, 4 slashes approx. 1,175 found, 3+ slashes approx. 3,290 found.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-17943" class="comment even thread-even depth-1">
			<article id="div-comment-17943" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/66e59bea2fca6cc5d75e977b6b64be7a?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/66e59bea2fca6cc5d75e977b6b64be7a?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='https://hsivonen.fi/' rel='external nofollow ugc' class='url'>Henri Sivonen</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17943"><time datetime="2017-01-30T12:09:53+01:00">January 30, 2017 at 12:09</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>&gt; my interactions with members of that group that I have had in the past, have shown that there is little sympathy there for non-browsers who want to deal with URLs</p>
<p>On the contrary, WHATWG specs are useful for non-browser software to know what to do in order to be able to interact with the Web as it is (for better or worse) authored by people who test mainly in browsers.</p>
<p>It would be more accurate to say that there&#8217;s little sympathy for non-browsers that want to deal with URLs in a browser-incompatible way.</p>
<p>&gt; interest for URL schemes that the popular browsers don’t even support or care about</p>
<p>Do you have examples of URL schemes that curl supports but are a problem if implementing from the WHATWG spec?</p>
<p>&gt; I can’t see any compelling reasons why a URL specification couldn’t reach a stable state and get published as *the* URL standard. The “living standard” approach may be fine for certain things (and in particular browsers that update every six weeks), but URLs are supposed to be long-lived and inter-operate far into the future so they really really should not change. Therefore, I think the IETF documentation model could work well for this.</p>
<p>What do you suggest is done if a spec bug is discovered after the spec has been declared &#8220;stable&#8221;?</p>
<p>&gt; The WHATWG specification is written in a pseudo code style, describing how a parser would “walk” over the string with a state machine and all. I know some people like that, I find it utterly annoying and really hard to figure out what’s allowed or not. I much more prefer the regular RFC style of describing protocol syntax.</p>
<p>The RFC style doesn&#8217;t work well for specifying how to handle erroneous input interoperably, which is why it&#8217;s not used for the parsing spec.</p>
<p>As for figuring out what you&#8217;re supposed to output, the URL Syntax section seems isomorphic to the RFC style even though it doesn&#8217;t use the exact same formatting.</p>
<p>&gt; So browsers accept URLs written with thousands of forward slashes instead of two. That is not a good reason for the spec to say that a URL may legitimately contain a thousand slashes.</p>
<p>And indeed the spec doesn&#8217;t say that! There are exactly two slashes in the relevant section at <a href="https://url.spec.whatwg.org/#scheme-relative-special-url-string" rel="nofollow ugc">https://url.spec.whatwg.org/#scheme-relative-special-url-string</a></p>
<p>&gt; I’m totally convinced there’s no critical content anywhere using such formatted URLs and no soul will be sad if we’d restricted the number to a single-digit. So we should. And yeah, then browsers should reject URLs using more.</p>
<p>Why does robustly handling excessive slashes make you sad? Again, the spec doesn&#8217;t say that an arbitrary number of slashes is legitimate. It just says how to handle that case if that&#8217;s what you encounter.</p>
<p>&gt; The slashes are only an example. The browsers have used a “liberal in what you accept” policy for a lot of things since forever, but we must resist to use that as a basis when nailing down a standard.</p>
<p>The whole XHTML episode is a counter example. I think countering that history needs more explanation.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-17944" class="comment byuser comment-author-daniel bypostauthor odd alt thread-odd thread-alt depth-1 parent">
			<article id="div-comment-17944" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='https://daniel.haxx.se/' rel='external nofollow ugc' class='url'>Daniel Stenberg</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17944"><time datetime="2017-01-30T13:31:23+01:00">January 30, 2017 at 13:31</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>> WHATWG specs are useful for non-browser software to know what to do in order to be able to interact with the Web</p>
<p>You then assume that the browsers decide what &#8220;the Web&#8221; is and how URLs work &#8211; I say the web and the Internet (as URLs go way outside of the web too) is bigger than that. If I use curl with a URL and then run wget with that same URL, I interacted with the web twice and didn&#8217;t use any browser. I would still like them both to understand the URL the same way. They do that by adhering to the same spec.</p>
<p>> Do you have examples of URL schemes that curl supports but are a problem if implementing from the WHATWG spec?</p>
<p>I keep adding support to my projects for URLs that browsers support but my projects didn&#8217;t. And that&#8217;s for things like many-slashes &#8211; which you even say the WHATWG spec doesn&#8217;t allow, which makes the situation even more crazy. If the syntax spec says there must be two, but all parsers handle thousands. What does &#8220;must be two&#8221; really mean then? </p>
<p>Some of the other minor discrepancies we have are problematic because we define our way of working with URLs as per RFC 3986 and we&#8217;ve done that since 2005, so breaking that compliance risk breaking things for users so we&#8217;re reluctant. That could be fixed, with communication and with code over time.</p>
<p>But I&#8217;m not discussing how to fix curl here. I&#8217;m discussing how to get us to a single unified URL standard and my discussion here is what I think could work to get the large community on board. Even the most hard-core IETF people. I don&#8217;t think we can land a single standard without a group that is more than WHATWG.</p>
<p>> What do you suggest is done if a spec bug is discovered after the spec has been declared “stable”?</p>
<p>Like we&#8217;ve always done for specs through the history of IETF and others: we write erratas and when the errors or the deviances are too many we make an updated spec. I don&#8217;t see how URLs are a unique &#8220;protocol&#8221; in that way. That way you could also more easily identify software and products that would still be supporting the old format.</p>
<p>> The whole XHTML episode is a counter example</p>
<p>First, XHTML came after users had already been taught how to do things and that browsers are tolerant, and secondly I don&#8217;t think URLs are at a &#8220;HTML-level&#8221; of forgiveness or that they need that.</p>
<p>Modern protocols are instead designed strictly to deny/reject/close hard if not adhering, just so that implementations instead are encouraged to follow the spec to the point, for the specs to be clearer and by doing that achieving inter-op faster and more solidly.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-17955" class="comment even depth-2 parent">
			<article id="div-comment-17955" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/43d0fc3cd1a4969dfee1772696b5f60a?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/43d0fc3cd1a4969dfee1772696b5f60a?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn">Robert O'Callahan</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17955"><time datetime="2017-01-30T23:26:21+01:00">January 30, 2017 at 23:26</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>A lot of URLs are created by people who paste them into HTML and tested only according to &#8220;does it work in browsers?&#8221; If you want a spec to handle all those URLs as the author intended, then it needs to handle them as browsers do. That&#8217;s not an opinion about how things should be, it&#8217;s just a fact.</p>
<p>&gt; Like we’ve always done for specs through the history of IETF and others: we write erratas and when the errors or the deviances are too many we make an updated spec.</p>
<p>The difference between that and a &#8220;living standard&#8221; is that in a living standard the errata are folded into the spec at all times so authors and developers don&#8217;t have to go chasing around to find the errata, or fail to do so and accidentally use an obsolete version of the spec.</p>
<p>&gt; Modern protocols are instead designed strictly to deny/reject/close hard if not adhering, just so that implementations instead are encouraged to follow the spec</p>
<p>That works when you have a very limited set of producers and consumers of the protocol. It doesn&#8217;t work when content is being directly produced by humans (e.g. HTML and URLs) and you have more than one consumer implementation (or even just multiple versions of one implementation).</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-17957" class="comment byuser comment-author-daniel bypostauthor odd alt depth-3">
			<article id="div-comment-17957" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='https://daniel.haxx.se/' rel='external nofollow ugc' class='url'>Daniel Stenberg</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17957"><time datetime="2017-01-30T23:36:16+01:00">January 30, 2017 at 23:36</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I know how URLs are made. I know what a &#8220;living standard&#8221; means. Yes I&#8217;m convinced we can be strict even with many producers and consumers (and it has been done elsewhere).</p>
<p>My post here was written with all that knowledge. I still firmly think that may laid out steps would be good and could help push toward a single unified URL standard.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-17947" class="comment even thread-even depth-1">
			<article id="div-comment-17947" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='https://mathiasbynens.be/' rel='external nofollow ugc' class='url'>Mathias</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17947"><time datetime="2017-01-30T13:45:27+01:00">January 30, 2017 at 13:45</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<blockquote><p>I can’t see any compelling reasons why a URL specification couldn’t reach a stable state and get published as *the* URL standard.</p></blockquote>
<p>That’s the ultimate goal of any standard. What makes you think the URL Standard is any different?</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-17949" class="comment byuser comment-author-daniel bypostauthor odd alt thread-odd thread-alt depth-1 parent">
			<article id="div-comment-17949" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='https://daniel.haxx.se/' rel='external nofollow ugc' class='url'>Daniel Stenberg</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17949"><time datetime="2017-01-30T13:53:12+01:00">January 30, 2017 at 13:53</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>@Mathias: that&#8217;s exactly what I&#8217;m saying. I don&#8217;t think URLs are  different.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-17952" class="comment even depth-2 parent">
			<article id="div-comment-17952" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='https://mathiasbynens.be/' rel='external nofollow ugc' class='url'>Mathias</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17952"><time datetime="2017-01-30T15:37:07+01:00">January 30, 2017 at 15:37</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>When I say “URL Standard”, I mean the existing WHATWG URL Standard. What makes you think the WHATWG doesn’t share the above-mentioned goal?</p>
<p>I’m confused as to how <a href="https://xkcd.com/927/" rel="nofollow">creating another standard</a> would somehow lead to a stable spec any quicker. That only seems possible if the spec ignores reality, which would make it not very useful as far as specs go.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-17956" class="comment byuser comment-author-daniel bypostauthor odd alt depth-3">
			<article id="div-comment-17956" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='https://daniel.haxx.se/' rel='external nofollow ugc' class='url'>Daniel Stenberg</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17956"><time datetime="2017-01-30T23:31:25+01:00">January 30, 2017 at 23:31</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>@Mathias: they have explicitly said it is not their goal, I think that&#8217;s wrong, as I write in this post.</p>
<p>We need &#8220;another standard&#8221; if whatwg is not up to the game to make that unified single standard. I don&#8217;t care who makes it, as long as it gets done. And as I already wrote, I don&#8217;t think whatwg is the right venue for that work.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-17963" class="comment even depth-3 parent">
			<article id="div-comment-17963" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='https://mathiasbynens.be/' rel='external nofollow ugc' class='url'>Mathias</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17963"><time datetime="2017-01-31T17:55:32+01:00">January 31, 2017 at 17:55</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<blockquote><p>they have explicitly said it is not their goal</p></blockquote>
<p><a href="https://twitter.com/annevk/status/826012526789931008" rel="nofollow ugc">https://twitter.com/annevk/status/826012526789931008</a> literally confirms this as the ultimate goal. Where did anyone say otherwise?</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
		<li id="comment-17964" class="comment byuser comment-author-daniel bypostauthor odd alt depth-3">
			<article id="div-comment-17964" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='https://daniel.haxx.se/' rel='external nofollow ugc' class='url'>Daniel Stenberg</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17964"><time datetime="2017-01-31T20:25:38+01:00">January 31, 2017 at 20:25</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>There&#8217;s no shortage of people telling me it is a &#8220;living standard&#8221; (as you can see in whatwg issues) and <a href="https://github.com/whatwg/url/issues/222" rel="nofollow">you can also see</a> that &#8220;the ultimate&#8221; goal of having a fixed version is so far away that even discussing setting a final dead-line or considering a cut-off data where we can say it is done for this version can&#8217;t be done yet.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-17950" class="comment even thread-even depth-1 parent">
			<article id="div-comment-17950" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/881c58b5fb48ce1b9889bbd5687ae96b?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/881c58b5fb48ce1b9889bbd5687ae96b?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='http://daurnimator.com' rel='external nofollow ugc' class='url'>Daurnimator</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17950"><time datetime="2017-01-30T14:40:18+01:00">January 30, 2017 at 14:40</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>I like my URI parsing to be as strict as possible.<br />
I&#8217;ve so found found that sticking to RFC3986 to be the most sensible option to take.<br />
I&#8217;d like to know what issues there are with RFC3986, and get an actual list of things to address.</p>
<p>I think the main issues, as you mention, is i18n.<br />
For domain name components, I think settling on IDNA2008 is sensible; though library support perhaps is barely there (libidn2 only gained proper support *this year*: it&#8217;ll take a while to filter out).<br />
For scheme, userinfo, path and query components, we probably want some form of UTF8. The IRI spec (RFC 3987) *might* be enough here?</p>
<p>I don&#8217;t want to support multiple slashes, or the other weird things browsers have gained support for in pursuit of postel&#8217;s maxim.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-17951" class="comment byuser comment-author-daniel bypostauthor odd alt depth-2">
			<article id="div-comment-17951" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='https://daniel.haxx.se/' rel='external nofollow ugc' class='url'>Daniel Stenberg</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17951"><time datetime="2017-01-30T15:01:40+01:00">January 30, 2017 at 15:01</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>@Daurminator: two things come to mind that we do in curl that aren&#8217;t RFC3986 (apart from adding support for one to three slashes): we escape-encode incoming spaces and we percent-encode > 7bit inputs, to act more like browsers. (Primarily important for redirects.)</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-17953" class="comment even thread-odd thread-alt depth-1 parent">
			<article id="div-comment-17953" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/9767673d472c2f27307890c27061bca3?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/9767673d472c2f27307890c27061bca3?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn">Simon Pieters</b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17953"><time datetime="2017-01-30T16:11:58+01:00">January 30, 2017 at 16:11</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>&gt; Like we’ve always done for specs through the history of IETF and others: we write erratas and when the errors or the deviances are too many we make an updated spec.</p>
<p>Then it&#8217;s still not a &#8220;fixed spec&#8221;, like you said you wanted? Errata is delaying publishing bug fixes until there are &#8220;too many&#8221;; meanwhile those bug fixes are often missed because people don&#8217;t pay attention to errata. Living standard means the number of too many errata is &gt; 0.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		<ol class="children">
		<li id="comment-17954" class="comment byuser comment-author-daniel bypostauthor odd alt depth-2">
			<article id="div-comment-17954" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/dbf187b5b45c400649ed7f946e8f00d6?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='https://daniel.haxx.se/' rel='external nofollow ugc' class='url'>Daniel Stenberg</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17954"><time datetime="2017-01-30T16:18:57+01:00">January 30, 2017 at 16:18</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>@Simon: that&#8217;s what I consider a fixed spec. Like how RFC2616 specified HTTP/1.1 until the RFC7230 series came out. A fixed spec that defined how it worked, until the update was out that then unified the world again. A &#8220;living&#8221; spec we can&#8217;t even know if we&#8217;re compliant with it at any point since it might&#8217;ve changed since last week. Who&#8217;s compliant then and to what?</p>
<p>I think URLs should be able to live for an extended period of times. Much much longer than the browsers update cycles.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
		<li id="comment-17962" class="comment even thread-even depth-1">
			<article id="div-comment-17962" class="comment-body">
				<footer class="comment-meta">
					<div class="comment-author vcard">
						<img alt='' src='https://secure.gravatar.com/avatar/111115e717bd7550d45c9401c558c974?s=34&#038;d=monsterid&#038;r=g' srcset='https://secure.gravatar.com/avatar/111115e717bd7550d45c9401c558c974?s=68&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-34 photo' height='34' width='34' loading='lazy'/>						<b class="fn"><a href='http://www.tobie.me' rel='external nofollow ugc' class='url'>Tobie Langel</a></b> <span class="says">says:</span>					</div><!-- .comment-author -->

					<div class="comment-metadata">
						<a href="https://daniel.haxx.se/blog/2017/01/30/one-url-standard-please/#comment-17962"><time datetime="2017-01-31T16:16:19+01:00">January 31, 2017 at 16:16</time></a>					</div><!-- .comment-metadata -->

									</footer><!-- .comment-meta -->

				<div class="comment-content">
					<p>&gt; I think URLs should be able to live for an extended period of times. Much much longer than the browsers update cycles.</p>
<p>That&#8217;s easily achievable by making every change to the URL spec backwards compatible.</p>
				</div><!-- .comment-content -->

							</article><!-- .comment-body -->
		</li><!-- #comment-## -->
	</ol><!-- .comment-list -->

		
			<p class="no-comments">Comments are closed.</p>
	
	
	
</div><!-- #comments -->
		</div><!-- #content -->
	</div><!-- #primary -->

<div id="content-sidebar" class="content-sidebar widget-area" role="complementary">
	
		<aside id="recent-posts-3" class="widget widget_recent_entries">
		<h1 class="widget-title">Recent Posts</h1><nav role="navigation" aria-label="Recent Posts">
		<ul>
											<li>
					<a href="https://daniel.haxx.se/blog/2021/10/26/a-github-wishlist/">a github wishlist</a>
											<span class="post-date">October 26, 2021</span>
									</li>
											<li>
					<a href="https://daniel.haxx.se/blog/2021/10/25/the-quic-api-openssl-will-not-provide/">The QUIC API OpenSSL will not provide</a>
											<span class="post-date">October 25, 2021</span>
									</li>
											<li>
					<a href="https://daniel.haxx.se/blog/2021/10/21/the-most-used-software-components-in-the-world/">The most used software components in the world</a>
											<span class="post-date">October 21, 2021</span>
									</li>
											<li>
					<a href="https://daniel.haxx.se/blog/2021/10/19/hackad-curl-use-on-tv/">Hackad: curl use on TV</a>
											<span class="post-date">October 19, 2021</span>
									</li>
											<li>
					<a href="https://daniel.haxx.se/blog/2021/10/15/curl-installations-per-capita/">curl installations per capita</a>
											<span class="post-date">October 15, 2021</span>
									</li>
											<li>
					<a href="https://daniel.haxx.se/blog/2021/10/12/coming-webinar-getting-started-with-libcurl/">Coming webinar: getting started with libcurl</a>
											<span class="post-date">October 12, 2021</span>
									</li>
					</ul>

		</nav></aside><aside id="recent-comments-3" class="widget widget_recent_comments"><h1 class="widget-title">Recent Comments</h1><nav role="navigation" aria-label="Recent Comments"><ul id="recentcomments"><li class="recentcomments"><span class="comment-author-link"><a href='https://daniel.haxx.se/' rel='external nofollow ugc' class='url'>Daniel Stenberg</a></span> on <a href="https://daniel.haxx.se/blog/2021/10/25/the-quic-api-openssl-will-not-provide/comment-page-1/#comment-25712">The QUIC API OpenSSL will not provide</a></li><li class="recentcomments"><span class="comment-author-link">Willy Tarreau</span> on <a href="https://daniel.haxx.se/blog/2021/10/25/the-quic-api-openssl-will-not-provide/comment-page-1/#comment-25709">The QUIC API OpenSSL will not provide</a></li><li class="recentcomments"><span class="comment-author-link"><a href='https://daniel.haxx.se/' rel='external nofollow ugc' class='url'>Daniel Stenberg</a></span> on <a href="https://daniel.haxx.se/blog/2021/10/25/the-quic-api-openssl-will-not-provide/comment-page-1/#comment-25708">The QUIC API OpenSSL will not provide</a></li><li class="recentcomments"><span class="comment-author-link">Willy Tarreau</span> on <a href="https://daniel.haxx.se/blog/2021/10/26/a-github-wishlist/comment-page-1/#comment-25707">a github wishlist</a></li><li class="recentcomments"><span class="comment-author-link">Willy Tarreau</span> on <a href="https://daniel.haxx.se/blog/2021/10/25/the-quic-api-openssl-will-not-provide/comment-page-1/#comment-25706">The QUIC API OpenSSL will not provide</a></li><li class="recentcomments"><span class="comment-author-link">Aaron</span> on <a href="https://daniel.haxx.se/blog/2021/10/21/the-most-used-software-components-in-the-world/comment-page-1/#comment-25705">The most used software components in the world</a></li><li class="recentcomments"><span class="comment-author-link">Sam Spencer</span> on <a href="https://daniel.haxx.se/blog/2021/10/25/the-quic-api-openssl-will-not-provide/comment-page-1/#comment-25703">The QUIC API OpenSSL will not provide</a></li><li class="recentcomments"><span class="comment-author-link">Colin 't Hart</span> on <a href="https://daniel.haxx.se/blog/2021/10/25/the-quic-api-openssl-will-not-provide/comment-page-1/#comment-25702">The QUIC API OpenSSL will not provide</a></li><li class="recentcomments"><span class="comment-author-link">Dan Neely</span> on <a href="https://daniel.haxx.se/blog/2021/10/21/the-most-used-software-components-in-the-world/comment-page-1/#comment-25701">The most used software components in the world</a></li><li class="recentcomments"><span class="comment-author-link">Biggles</span> on <a href="https://daniel.haxx.se/blog/2021/10/21/the-most-used-software-components-in-the-world/comment-page-1/#comment-25637">The most used software components in the world</a></li></ul></nav></aside></div><!-- #content-sidebar -->
<div id="secondary">
		<h2 class="site-description">tech, open source and networking</h2>
	
	
		<div id="primary-sidebar" class="primary-sidebar widget-area" role="complementary">
		<aside id="custom_html-2" class="widget_text widget widget_custom_html"><h1 class="widget-title">I&#8217;m Daniel Stenberg</h1><div class="textwidget custom-html-widget"><p>	 Founder and lead developer of curl. 188 cm grumpy Swede.</p>
<p>
	<a href="https://github.com/users/bagder/sponsorship">[Sponsor me on github]</a></p>
<p>	What you read here is my <i>personal</i> opinions and views. You may think differently. Organizations I'm involved with may have different stand-points and people I work with or know may think differently.</p>
<p>
	I'm <a href="https://twitter.com/bagder">@bagder</a> on twitter
</p></div></aside><aside id="calendar-3" class="widget widget_calendar"><div id="calendar_wrap" class="calendar_wrap"><table id="wp-calendar" class="wp-calendar-table">
	<caption>January 2017</caption>
	<thead>
	<tr>
		<th scope="col" title="Monday">M</th>
		<th scope="col" title="Tuesday">T</th>
		<th scope="col" title="Wednesday">W</th>
		<th scope="col" title="Thursday">T</th>
		<th scope="col" title="Friday">F</th>
		<th scope="col" title="Saturday">S</th>
		<th scope="col" title="Sunday">S</th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<td colspan="6" class="pad">&nbsp;</td><td>1</td>
	</tr>
	<tr>
		<td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td><a href="https://daniel.haxx.se/blog/2017/01/07/" aria-label="Posts published on January 7, 2017">7</a></td><td>8</td>
	</tr>
	<tr>
		<td><a href="https://daniel.haxx.se/blog/2017/01/09/" aria-label="Posts published on January 9, 2017">9</a></td><td><a href="https://daniel.haxx.se/blog/2017/01/10/" aria-label="Posts published on January 10, 2017">10</a></td><td>11</td><td>12</td><td>13</td><td>14</td><td>15</td>
	</tr>
	<tr>
		<td>16</td><td>17</td><td><a href="https://daniel.haxx.se/blog/2017/01/18/" aria-label="Posts published on January 18, 2017">18</a></td><td>19</td><td>20</td><td>21</td><td>22</td>
	</tr>
	<tr>
		<td>23</td><td><a href="https://daniel.haxx.se/blog/2017/01/24/" aria-label="Posts published on January 24, 2017">24</a></td><td>25</td><td><a href="https://daniel.haxx.se/blog/2017/01/26/" aria-label="Posts published on January 26, 2017">26</a></td><td>27</td><td>28</td><td>29</td>
	</tr>
	<tr>
		<td><a href="https://daniel.haxx.se/blog/2017/01/30/" aria-label="Posts published on January 30, 2017">30</a></td><td>31</td>
		<td class="pad" colspan="5">&nbsp;</td>
	</tr>
	</tbody>
	</table><nav aria-label="Previous and next months" class="wp-calendar-nav">
		<span class="wp-calendar-nav-prev"><a href="https://daniel.haxx.se/blog/2016/12/">&laquo; Dec</a></span>
		<span class="pad">&nbsp;</span>
		<span class="wp-calendar-nav-next"><a href="https://daniel.haxx.se/blog/2017/02/">Feb &raquo;</a></span>
	</nav></div></aside><aside id="archives-3" class="widget widget_archive"><h1 class="widget-title">Archive</h1>		<label class="screen-reader-text" for="archives-dropdown-3">Archive</label>
		<select id="archives-dropdown-3" name="archive-dropdown">
			
			<option value="">Select Month</option>
				<option value='https://daniel.haxx.se/blog/2021/10/'> October 2021 </option>
	<option value='https://daniel.haxx.se/blog/2021/09/'> September 2021 </option>
	<option value='https://daniel.haxx.se/blog/2021/08/'> August 2021 </option>
	<option value='https://daniel.haxx.se/blog/2021/07/'> July 2021 </option>
	<option value='https://daniel.haxx.se/blog/2021/06/'> June 2021 </option>
	<option value='https://daniel.haxx.se/blog/2021/05/'> May 2021 </option>
	<option value='https://daniel.haxx.se/blog/2021/04/'> April 2021 </option>
	<option value='https://daniel.haxx.se/blog/2021/03/'> March 2021 </option>
	<option value='https://daniel.haxx.se/blog/2021/02/'> February 2021 </option>
	<option value='https://daniel.haxx.se/blog/2021/01/'> January 2021 </option>
	<option value='https://daniel.haxx.se/blog/2020/12/'> December 2020 </option>
	<option value='https://daniel.haxx.se/blog/2020/11/'> November 2020 </option>
	<option value='https://daniel.haxx.se/blog/2020/10/'> October 2020 </option>
	<option value='https://daniel.haxx.se/blog/2020/09/'> September 2020 </option>
	<option value='https://daniel.haxx.se/blog/2020/08/'> August 2020 </option>
	<option value='https://daniel.haxx.se/blog/2020/07/'> July 2020 </option>
	<option value='https://daniel.haxx.se/blog/2020/06/'> June 2020 </option>
	<option value='https://daniel.haxx.se/blog/2020/05/'> May 2020 </option>
	<option value='https://daniel.haxx.se/blog/2020/04/'> April 2020 </option>
	<option value='https://daniel.haxx.se/blog/2020/03/'> March 2020 </option>
	<option value='https://daniel.haxx.se/blog/2020/02/'> February 2020 </option>
	<option value='https://daniel.haxx.se/blog/2020/01/'> January 2020 </option>
	<option value='https://daniel.haxx.se/blog/2019/12/'> December 2019 </option>
	<option value='https://daniel.haxx.se/blog/2019/11/'> November 2019 </option>
	<option value='https://daniel.haxx.se/blog/2019/10/'> October 2019 </option>
	<option value='https://daniel.haxx.se/blog/2019/09/'> September 2019 </option>
	<option value='https://daniel.haxx.se/blog/2019/08/'> August 2019 </option>
	<option value='https://daniel.haxx.se/blog/2019/07/'> July 2019 </option>
	<option value='https://daniel.haxx.se/blog/2019/06/'> June 2019 </option>
	<option value='https://daniel.haxx.se/blog/2019/05/'> May 2019 </option>
	<option value='https://daniel.haxx.se/blog/2019/04/'> April 2019 </option>
	<option value='https://daniel.haxx.se/blog/2019/03/'> March 2019 </option>
	<option value='https://daniel.haxx.se/blog/2019/02/'> February 2019 </option>
	<option value='https://daniel.haxx.se/blog/2019/01/'> January 2019 </option>
	<option value='https://daniel.haxx.se/blog/2018/12/'> December 2018 </option>
	<option value='https://daniel.haxx.se/blog/2018/11/'> November 2018 </option>
	<option value='https://daniel.haxx.se/blog/2018/10/'> October 2018 </option>
	<option value='https://daniel.haxx.se/blog/2018/09/'> September 2018 </option>
	<option value='https://daniel.haxx.se/blog/2018/08/'> August 2018 </option>
	<option value='https://daniel.haxx.se/blog/2018/07/'> July 2018 </option>
	<option value='https://daniel.haxx.se/blog/2018/06/'> June 2018 </option>
	<option value='https://daniel.haxx.se/blog/2018/05/'> May 2018 </option>
	<option value='https://daniel.haxx.se/blog/2018/04/'> April 2018 </option>
	<option value='https://daniel.haxx.se/blog/2018/03/'> March 2018 </option>
	<option value='https://daniel.haxx.se/blog/2018/02/'> February 2018 </option>
	<option value='https://daniel.haxx.se/blog/2018/01/'> January 2018 </option>
	<option value='https://daniel.haxx.se/blog/2017/12/'> December 2017 </option>
	<option value='https://daniel.haxx.se/blog/2017/11/'> November 2017 </option>
	<option value='https://daniel.haxx.se/blog/2017/10/'> October 2017 </option>
	<option value='https://daniel.haxx.se/blog/2017/09/'> September 2017 </option>
	<option value='https://daniel.haxx.se/blog/2017/08/'> August 2017 </option>
	<option value='https://daniel.haxx.se/blog/2017/06/'> June 2017 </option>
	<option value='https://daniel.haxx.se/blog/2017/05/'> May 2017 </option>
	<option value='https://daniel.haxx.se/blog/2017/04/'> April 2017 </option>
	<option value='https://daniel.haxx.se/blog/2017/03/'> March 2017 </option>
	<option value='https://daniel.haxx.se/blog/2017/02/'> February 2017 </option>
	<option value='https://daniel.haxx.se/blog/2017/01/'> January 2017 </option>
	<option value='https://daniel.haxx.se/blog/2016/12/'> December 2016 </option>
	<option value='https://daniel.haxx.se/blog/2016/11/'> November 2016 </option>
	<option value='https://daniel.haxx.se/blog/2016/10/'> October 2016 </option>
	<option value='https://daniel.haxx.se/blog/2016/09/'> September 2016 </option>
	<option value='https://daniel.haxx.se/blog/2016/08/'> August 2016 </option>
	<option value='https://daniel.haxx.se/blog/2016/07/'> July 2016 </option>
	<option value='https://daniel.haxx.se/blog/2016/06/'> June 2016 </option>
	<option value='https://daniel.haxx.se/blog/2016/05/'> May 2016 </option>
	<option value='https://daniel.haxx.se/blog/2016/04/'> April 2016 </option>
	<option value='https://daniel.haxx.se/blog/2016/03/'> March 2016 </option>
	<option value='https://daniel.haxx.se/blog/2016/02/'> February 2016 </option>
	<option value='https://daniel.haxx.se/blog/2016/01/'> January 2016 </option>
	<option value='https://daniel.haxx.se/blog/2015/12/'> December 2015 </option>
	<option value='https://daniel.haxx.se/blog/2015/11/'> November 2015 </option>
	<option value='https://daniel.haxx.se/blog/2015/10/'> October 2015 </option>
	<option value='https://daniel.haxx.se/blog/2015/09/'> September 2015 </option>
	<option value='https://daniel.haxx.se/blog/2015/08/'> August 2015 </option>
	<option value='https://daniel.haxx.se/blog/2015/07/'> July 2015 </option>
	<option value='https://daniel.haxx.se/blog/2015/06/'> June 2015 </option>
	<option value='https://daniel.haxx.se/blog/2015/05/'> May 2015 </option>
	<option value='https://daniel.haxx.se/blog/2015/04/'> April 2015 </option>
	<option value='https://daniel.haxx.se/blog/2015/03/'> March 2015 </option>
	<option value='https://daniel.haxx.se/blog/2015/02/'> February 2015 </option>
	<option value='https://daniel.haxx.se/blog/2015/01/'> January 2015 </option>
	<option value='https://daniel.haxx.se/blog/2014/12/'> December 2014 </option>
	<option value='https://daniel.haxx.se/blog/2014/11/'> November 2014 </option>
	<option value='https://daniel.haxx.se/blog/2014/10/'> October 2014 </option>
	<option value='https://daniel.haxx.se/blog/2014/09/'> September 2014 </option>
	<option value='https://daniel.haxx.se/blog/2014/08/'> August 2014 </option>
	<option value='https://daniel.haxx.se/blog/2014/07/'> July 2014 </option>
	<option value='https://daniel.haxx.se/blog/2014/06/'> June 2014 </option>
	<option value='https://daniel.haxx.se/blog/2014/05/'> May 2014 </option>
	<option value='https://daniel.haxx.se/blog/2014/04/'> April 2014 </option>
	<option value='https://daniel.haxx.se/blog/2014/03/'> March 2014 </option>
	<option value='https://daniel.haxx.se/blog/2014/02/'> February 2014 </option>
	<option value='https://daniel.haxx.se/blog/2014/01/'> January 2014 </option>
	<option value='https://daniel.haxx.se/blog/2013/12/'> December 2013 </option>
	<option value='https://daniel.haxx.se/blog/2013/11/'> November 2013 </option>
	<option value='https://daniel.haxx.se/blog/2013/10/'> October 2013 </option>
	<option value='https://daniel.haxx.se/blog/2013/08/'> August 2013 </option>
	<option value='https://daniel.haxx.se/blog/2013/07/'> July 2013 </option>
	<option value='https://daniel.haxx.se/blog/2013/06/'> June 2013 </option>
	<option value='https://daniel.haxx.se/blog/2013/04/'> April 2013 </option>
	<option value='https://daniel.haxx.se/blog/2013/03/'> March 2013 </option>
	<option value='https://daniel.haxx.se/blog/2013/02/'> February 2013 </option>
	<option value='https://daniel.haxx.se/blog/2013/01/'> January 2013 </option>
	<option value='https://daniel.haxx.se/blog/2012/12/'> December 2012 </option>
	<option value='https://daniel.haxx.se/blog/2012/11/'> November 2012 </option>
	<option value='https://daniel.haxx.se/blog/2012/10/'> October 2012 </option>
	<option value='https://daniel.haxx.se/blog/2012/09/'> September 2012 </option>
	<option value='https://daniel.haxx.se/blog/2012/08/'> August 2012 </option>
	<option value='https://daniel.haxx.se/blog/2012/07/'> July 2012 </option>
	<option value='https://daniel.haxx.se/blog/2012/06/'> June 2012 </option>
	<option value='https://daniel.haxx.se/blog/2012/05/'> May 2012 </option>
	<option value='https://daniel.haxx.se/blog/2012/04/'> April 2012 </option>
	<option value='https://daniel.haxx.se/blog/2012/03/'> March 2012 </option>
	<option value='https://daniel.haxx.se/blog/2012/02/'> February 2012 </option>
	<option value='https://daniel.haxx.se/blog/2012/01/'> January 2012 </option>
	<option value='https://daniel.haxx.se/blog/2011/12/'> December 2011 </option>
	<option value='https://daniel.haxx.se/blog/2011/11/'> November 2011 </option>
	<option value='https://daniel.haxx.se/blog/2011/10/'> October 2011 </option>
	<option value='https://daniel.haxx.se/blog/2011/09/'> September 2011 </option>
	<option value='https://daniel.haxx.se/blog/2011/08/'> August 2011 </option>
	<option value='https://daniel.haxx.se/blog/2011/07/'> July 2011 </option>
	<option value='https://daniel.haxx.se/blog/2011/06/'> June 2011 </option>
	<option value='https://daniel.haxx.se/blog/2011/05/'> May 2011 </option>
	<option value='https://daniel.haxx.se/blog/2011/04/'> April 2011 </option>
	<option value='https://daniel.haxx.se/blog/2011/03/'> March 2011 </option>
	<option value='https://daniel.haxx.se/blog/2011/02/'> February 2011 </option>
	<option value='https://daniel.haxx.se/blog/2011/01/'> January 2011 </option>
	<option value='https://daniel.haxx.se/blog/2010/12/'> December 2010 </option>
	<option value='https://daniel.haxx.se/blog/2010/11/'> November 2010 </option>
	<option value='https://daniel.haxx.se/blog/2010/10/'> October 2010 </option>
	<option value='https://daniel.haxx.se/blog/2010/09/'> September 2010 </option>
	<option value='https://daniel.haxx.se/blog/2010/08/'> August 2010 </option>
	<option value='https://daniel.haxx.se/blog/2010/07/'> July 2010 </option>
	<option value='https://daniel.haxx.se/blog/2010/06/'> June 2010 </option>
	<option value='https://daniel.haxx.se/blog/2010/05/'> May 2010 </option>
	<option value='https://daniel.haxx.se/blog/2010/04/'> April 2010 </option>
	<option value='https://daniel.haxx.se/blog/2010/03/'> March 2010 </option>
	<option value='https://daniel.haxx.se/blog/2010/02/'> February 2010 </option>
	<option value='https://daniel.haxx.se/blog/2010/01/'> January 2010 </option>
	<option value='https://daniel.haxx.se/blog/2009/12/'> December 2009 </option>
	<option value='https://daniel.haxx.se/blog/2009/11/'> November 2009 </option>
	<option value='https://daniel.haxx.se/blog/2009/10/'> October 2009 </option>
	<option value='https://daniel.haxx.se/blog/2009/09/'> September 2009 </option>
	<option value='https://daniel.haxx.se/blog/2009/08/'> August 2009 </option>
	<option value='https://daniel.haxx.se/blog/2009/07/'> July 2009 </option>
	<option value='https://daniel.haxx.se/blog/2009/06/'> June 2009 </option>
	<option value='https://daniel.haxx.se/blog/2009/05/'> May 2009 </option>
	<option value='https://daniel.haxx.se/blog/2009/04/'> April 2009 </option>
	<option value='https://daniel.haxx.se/blog/2009/03/'> March 2009 </option>
	<option value='https://daniel.haxx.se/blog/2009/02/'> February 2009 </option>
	<option value='https://daniel.haxx.se/blog/2009/01/'> January 2009 </option>
	<option value='https://daniel.haxx.se/blog/2008/12/'> December 2008 </option>
	<option value='https://daniel.haxx.se/blog/2008/11/'> November 2008 </option>
	<option value='https://daniel.haxx.se/blog/2008/10/'> October 2008 </option>
	<option value='https://daniel.haxx.se/blog/2008/09/'> September 2008 </option>
	<option value='https://daniel.haxx.se/blog/2008/08/'> August 2008 </option>
	<option value='https://daniel.haxx.se/blog/2008/07/'> July 2008 </option>
	<option value='https://daniel.haxx.se/blog/2008/06/'> June 2008 </option>
	<option value='https://daniel.haxx.se/blog/2008/05/'> May 2008 </option>
	<option value='https://daniel.haxx.se/blog/2008/04/'> April 2008 </option>
	<option value='https://daniel.haxx.se/blog/2008/03/'> March 2008 </option>
	<option value='https://daniel.haxx.se/blog/2008/02/'> February 2008 </option>
	<option value='https://daniel.haxx.se/blog/2008/01/'> January 2008 </option>
	<option value='https://daniel.haxx.se/blog/2007/12/'> December 2007 </option>
	<option value='https://daniel.haxx.se/blog/2007/11/'> November 2007 </option>
	<option value='https://daniel.haxx.se/blog/2007/10/'> October 2007 </option>
	<option value='https://daniel.haxx.se/blog/2007/09/'> September 2007 </option>
	<option value='https://daniel.haxx.se/blog/2007/08/'> August 2007 </option>

		</select>

<script>
/* <![CDATA[ */
(function() {
	var dropdown = document.getElementById( "archives-dropdown-3" );
	function onSelectChange() {
		if ( dropdown.options[ dropdown.selectedIndex ].value !== '' ) {
			document.location.href = this.options[ this.selectedIndex ].value;
		}
	}
	dropdown.onchange = onSelectChange;
})();
/* ]]> */
</script>
			</aside>	</div><!-- #primary-sidebar -->
	</div><!-- #secondary -->

		</div><!-- #main -->

		<footer id="colophon" class="site-footer" role="contentinfo">

			
			<div class="site-info">
												<a href="https://wordpress.org/" class="imprint">
					Proudly powered by WordPress				</a>
			</div><!-- .site-info -->
		</footer><!-- #colophon -->
	</div><!-- #page -->

	<script src='https://daniel.haxx.se/blog/wp-content/themes/twentyfourteen/js/functions.js?ver=20171218' id='twentyfourteen-script-js'></script>
<script src='https://daniel.haxx.se/blog/wp-includes/js/wp-embed.min.js?ver=5.8.1' id='wp-embed-js'></script>
</body>
</html>
