<!DOCTYPE html>
<html lang="en">
  <head>
    <title>8821 &ndash; mount.cifs arbitary file identification as root</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1">

<link href="data/assets/9a550fbe5564198f829468c7984d86b3.css" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 10
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "8821 – mount.cifs arbitary file identification as root",
                             "show_bug.cgi?id=8821" );
        document.title = "8821 – mount.cifs arbitary file identification as root";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "8821 – mount.cifs arbitary file identification as root", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="The Samba-Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="favicon.ico">
  </head>

  <body 
        class="bugzilla-samba-org
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_CifsVFS
                 bz_component_user_space_tools
                 bz_bug_8821 yui-skin-sam">

  <div id="header"><div style="background-image:url(/images/blueHeaderSimple.png);
 background-repeat:repeat-x;
 background-size: contain;
 height:24px;
 border-radius: 38px 10px;
">
</div>

    <div id="titles">
      <span id="title">The Samba-Bugzilla &ndash; Bug&nbsp;8821</span>

        <span id="subtitle" class="subheader">mount.cifs arbitary file identification as root</span>

        <span id="information" class="header_addl_info">Last modified: 2012-04-16 11:38:13 UTC</span>
    </div>


    <div id="common_links"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li>
      <span class="separator">| </span>
        <a href="request.cgi">Requests</a></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    
      <li id="new_account_container_top">
        <span class="separator">| </span>
        <a href="createaccount.cgi">New&nbsp;Account</a>
      </li>

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=8821&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=8821" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=8821&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635630140-aGx-pCUNyl8pIfdzu6jVrYKv1OXEZGF-7Pa2tMHD2ys">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2012-04-16 11:38:13">
  <input type="hidden" name="id" value="8821">
  <input type="hidden" name="token" value="1635630140-22m5zrptqCiV86PwCUZnDQL1P3BYUMWeGakKNRF0ECA">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=8821"><b>Bug&nbsp;8821</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">mount.cifs arbitary file identification as root</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>mount.cifs arbitary file identification as root
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'mount.cifs arbitary file identification as root' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >CifsVFS

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=CifsVFS"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >user space tools

  (<a href="buglist.cgi?component=user%20space%20tools&amp;product=CifsVFS&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>2.6
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">All
        Linux
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>P4
       major
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Jeff Layton</span>
</span>
      </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_qa_contact">


  <a 
      title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#qa_contact"
  >QA Contact:</a>

</th>
      <td><span class="vcard">
</span>
      </td>
    </tr>
    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'jlayton\x40samba.org',
        'cifs-qa\x40samba.org');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>


    <tr><th class="field_label "
    id="field_label_keywords">


  <a 
      title="You can add keywords from a defined list to bugs, in order to easily identify and group them."
      class="field_help_link"
      href="describekeywords.cgi"
  >Keywords:</a>

</th>
  <td class="field_value "
      id="field_container_keywords" >

</td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          <tr>
    <th class="field_label">
      <label>Duplicates (1)</label>:
    </th>
    <td class="field_value">
      <span id="duplicates"><a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED DUPLICATE - mount.cifs arbitary file identification as root"
   href="show_bug.cgi?id=8800">8800</a> 
      </span>
      (<a href="buglist.cgi?bug_id=8800">view as bug list</a>)
    </td>
  </tr>
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2012-03-21 09:39 UTC by <span class="vcard"><span class="fn">Jesus</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2012-04-16 11:38 UTC
      (<a href="show_activity.cgi?id=8821">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>0 
          users
        <div id="cc_edit_area">
          <br>
        </div>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr> 

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="3" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=7410"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">patch -- mount.cifs: don't enable CAP_DAC_READ_SEARCH before chdir for non-root users</span></b></a>

          <span class="bz_attach_extra_info">
              (1.71 KB,
                patch)

            <br>
            <a href="#attach_7410"
               title="Go to the comment associated with the attachment">2012-03-28 15:26 UTC</a>,

            <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>
          <a href="attachment.cgi?id=7410&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=7414"
               title="View the content of the attachment">
          <b>patch -- mount.cifs don't allow unprivileged users to mount onto directories they can't access</b></a>

          <span class="bz_attach_extra_info">
              (3.78 KB,
                patch)

            <br>
            <a href="#attach_7414"
               title="Go to the comment associated with the attachment">2012-03-31 14:10 UTC</a>,

            <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>
          <a href="attachment.cgi?id=7414&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a3" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=7416"
               title="View the content of the attachment">
          <b>patch -- don't allow unpriv. users to mount onto dirs they can't access</b></a>

          <span class="bz_attach_extra_info">
              (4.60 KB,
                patch)

            <br>
            <a href="#attach_7416"
               title="Go to the comment associated with the attachment">2012-04-02 13:13 UTC</a>,

            <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>
          <a href="attachment.cgi?id=7416&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="3">
        <span class="bz_attach_view_hide">
            <a href="#a0" onclick="return toggle_display(this);">Show
              Obsolete</a> (1)
            <a id="view_all" href="attachment.cgi?bugid=8821&amp;action=viewall&amp;hide_obsolete=1">View All</a>
        </span>
        <a href="attachment.cgi?bugid=8821&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=8821&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        replytext = prefix;


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jesus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-21 09:39:08 UTC
        </span>

      </div>




<pre class="bz_comment_text">The mount.cifs binary, setuided by default in most of the linux distributions, perform a privileged chdir() to the supplied directory, before the fstab check.

Then the user can deduce by the response, if is a existent file or a directory. 
This is setuided as root, then any user can identify /root/ files &amp; directories. 

$ /sbin/mount.cifs  //127.0.0.1/a  /root/secret_directory/secret_file


Example:

[sha0&#64;spinlock advs]$ ./root_eye.sh wordlist /root/
--- directories ---
.pulse1
.bash_history
.alsaplayer
.dbus
.mozilla
.VirtualBox
.vim
.links
.config
.cpan
.gnome2
--- files ---
.pulse-cookie
.keystore
.bash_profile
dead.letter
.mysql_history
.Xauthority
.vimrc
.viminfo
secret

This also can be used to identify any process descriptors:

[sha0&#64;spinlock advs]$ ./root_eye.sh wordlist /proc/905/fd/
--- directories ---
--- files ---
0
1
2
3
4
5
6
7
8
10
11
12
13

In linux almost all are files ...</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-27 12:09:05 UTC
        </span>

      </div>




<pre class="bz_comment_text">Well, in point of fact we changed mount.cifs to do this in order to fix
another security issue where someone could try to mount through a symlink
and then change the symlink after we had vetted the destination.

What do you propose as an appropriate fix here? Is it enough to simply
make it not report the reason for the failure? Something like:

diff --git a/mount.cifs.c b/mount.cifs.c
index 824cd3a..4cc3684 100644
--- a/mount.cifs.c
+++ b/mount.cifs.c
&#64;&#64; -1953,8 +1953,7 &#64;&#64; int main(int argc, char **argv)
                return rc;
        rc = chdir(mountpoint);
        if (rc) {
-               fprintf(stderr, &quot;Couldn't chdir to %s: %s\n&quot;, mountpoint,
-                       strerror(errno));
+               fprintf(stderr, &quot;Couldn't chdir to %s.\n&quot;, mountpoint);
                rc = EX_USAGE;
                goto mount_exit;
        }</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jesus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-27 15:28:26 UTC
        </span>

      </div>




<pre class="bz_comment_text">I suggest not to execute the chdir() if mountpoint is not on fstab,
is the safest way,

but if error message is exactly the same if is a directory, or a file, or if don't exits, it will be fine.

regards.


(In reply to <a href="show_bug.cgi?id=8821#c1">comment #1</a>)
<span class="quote">&gt; Well, in point of fact we changed mount.cifs to do this in order to fix
&gt; another security issue where someone could try to mount through a symlink
&gt; and then change the symlink after we had vetted the destination.
&gt; 
&gt; What do you propose as an appropriate fix here? Is it enough to simply
&gt; make it not report the reason for the failure? Something like:
&gt; 
&gt; diff --git a/mount.cifs.c b/mount.cifs.c
&gt; index 824cd3a..4cc3684 100644
&gt; --- a/mount.cifs.c
&gt; +++ b/mount.cifs.c
&gt; &#64;&#64; -1953,8 +1953,7 &#64;&#64; int main(int argc, char **argv)
&gt;                 return rc;
&gt;         rc = chdir(mountpoint);
&gt;         if (rc) {
&gt; -               fprintf(stderr, &quot;Couldn't chdir to %s: %s\n&quot;, mountpoint,
&gt; -                       strerror(errno));
&gt; +               fprintf(stderr, &quot;Couldn't chdir to %s.\n&quot;, mountpoint);
&gt;                 rc = EX_USAGE;
&gt;                 goto mount_exit;
&gt;         }</span ></pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Kurt Seifried</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-27 16:01:13 UTC
        </span>

      </div>




<pre class="bz_comment_text">Please use CVE-2012-1586 for this issue as per <a href="http://www.openwall.com/lists/oss-security/2012/03/27/6">http://www.openwall.com/lists/oss-security/2012/03/27/6</a></pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-27 16:05:11 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8821#c2">comment #2</a>)
<span class="quote">&gt; I suggest not to execute the chdir() if mountpoint is not on fstab,
&gt; is the safest way,
&gt; </span >

The *safest* thing to do is to just not setuid the damned program in the
first place. There are good reasons to limit mounting to root...

What you suggest seems like even more exposure. mount.cifs has privilege separation:

We chdir() into the mountpoint prior to doing a fork() and having the child
drop privileges. Once that's done we parse mount options, check the fstab
to ensure that it's really a legit &quot;user&quot; mount, etc...

If we check the fstab before the chdir call, then we'll end up doing the fstab
check as a privileged process. I don't think that's particularly good from a
security standpoint either.

We can't wait to do the chdir until after the fork either. It has to be done
prior to it so we can get result of realpath(&quot;.&quot;) prior to checking the fstab.

<span class="quote">&gt; but if error message is exactly the same if is a directory, or a file, or if
&gt; don't exits, it will be fine.</span >
&gt;

Well, if it's a file or doesn't exist, you'll get an error. If it's a directory
then you'll probably get a different error since the chdir will likely succeed,
but the mount itself will likely fail. Do you still feel that that is acceptable?</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jesus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-27 18:16:14 UTC
        </span>

      </div>




<pre class="bz_comment_text">Ok, in this case, lets do the privileged chdir() but the 3 responses must be the same, in order to not guessing if is a directory, a file and if exists or not.

regards.


(In reply to <a href="show_bug.cgi?id=8821#c4">comment #4</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=8821#c2">comment #2</a>)
&gt; &gt; I suggest not to execute the chdir() if mountpoint is not on fstab,
&gt; &gt; is the safest way,
&gt; &gt; 
&gt; 
&gt; The *safest* thing to do is to just not setuid the damned program in the
&gt; first place. There are good reasons to limit mounting to root...
&gt; 
&gt; What you suggest seems like even more exposure. mount.cifs has privilege
&gt; separation:
&gt; 
&gt; We chdir() into the mountpoint prior to doing a fork() and having the child
&gt; drop privileges. Once that's done we parse mount options, check the fstab
&gt; to ensure that it's really a legit &quot;user&quot; mount, etc...
&gt; 
&gt; If we check the fstab before the chdir call, then we'll end up doing the fstab
&gt; check as a privileged process. I don't think that's particularly good from a
&gt; security standpoint either.
&gt; 
&gt; We can't wait to do the chdir until after the fork either. It has to be done
&gt; prior to it so we can get result of realpath(&quot;.&quot;) prior to checking the fstab.
&gt; 
&gt; &gt; but if error message is exactly the same if is a directory, or a file, or if
&gt; &gt; don't exits, it will be fine.
&gt; &gt;
&gt; 
&gt; Well, if it's a file or doesn't exist, you'll get an error. If it's a directory
&gt; then you'll probably get a different error since the chdir will likely succeed,
&gt; but the mount itself will likely fail. Do you still feel that that is
&gt; acceptable?</span ></pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-28 12:15:33 UTC
        </span>

      </div>




<pre class="bz_comment_text">That may not be easily doable either. Once the chdir is done, then you fall
into the &quot;normal&quot; mount process and could hit an error at any point. Having
granular info as to why a mount is failing is helpful and I'm not keen on
making all of those errors generic just to suit user mounts (which are quite
frankly, ill-considered in the first place, IMO).

I'll have to ponder the problem a bit -- maybe we can come up with some other
means to handle this.</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jesus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-28 13:00:35 UTC
        </span>

      </div>




<pre class="bz_comment_text"><span class="quote">&gt;The *safest* thing to do is to just not setuid the damned program in the
&gt;first place.</span >

Linux distros shouldn't setuid mount.cifs by default this, 
I will report it to redhat, debian, archlinux, and so on ...


regards.</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-28 13:08:48 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8821#c7">comment #7</a>)
<span class="quote">&gt; &gt;The *safest* thing to do is to just not setuid the damned program in the
&gt; &gt;first place.
&gt; 
&gt; Linux distros shouldn't setuid mount.cifs by default this, 
&gt; I will report it to redhat, debian, archlinux, and so on ...
&gt; </span >

RHEL and Fedora already don't ship with mount.cifs setuid root, though
users occasionally do set it themselves. I believe the Debian-based distros
might ship with it as setuid root however. Not sure about Arch.

Certainly we want to make mount.cifs safe enough to be setuid root,
but it's generally safer not to do so.</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jesus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-28 13:11:22 UTC
        </span>

      </div>




<pre class="bz_comment_text">on Ubuntu, Debian, and Archlinux is setuided by default, 
I only checked it on this 3 distros.

regards</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-28 14:03:55 UTC
        </span>

      </div>




<pre class="bz_comment_text">Ok. I'd certainly recommend that they stop the practice, but it will certainly
cause a regression for people who depend on those currently.

One possibility to limit exposure might be to only add users who are &quot;trusted&quot;
to a group and then make the binary executable only by that group.

In the meantime, I'll continue to ponder what we should do for this.</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-28 14:54:55 UTC
        </span>

      </div>




<pre class="bz_comment_text">I really don't see a clean way to do this. There are a lot of operations that
need to occur between the point where we call chdir() and the point where we
vet the mount against the fstab. Note too that it's not sufficient to simply
cloak the messages that go to stderr, you also need to ensure that the return
code is genericized as well.

At this point, I'm tempted to just close this WONTFIX and go back to
recommending that distros and users do not make this program setuid root if
they don't want to be subject to this sort of information disclosure.

Perhaps I should switch the default setting of CIFS_DISABLE_SETUID_CAPABILITY
back to 1? Alternately, I suppose we could send a nice scary warning to stderr
whenever someone attempts to use mount.cifs as a setuid program...</pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-28 15:26:58 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=7410" name="attach_7410" title="patch -- mount.cifs: don't enable CAP_DAC_READ_SEARCH before chdir for non-root users">attachment 7410</a> <a href="attachment.cgi?id=7410&amp;action=edit" title="patch -- mount.cifs: don't enable CAP_DAC_READ_SEARCH before chdir for non-root users">[details]</a></span>
patch -- mount.cifs: don't enable CAP_DAC_READ_SEARCH before chdir for non-root users

Well, maybe I spoke too soon. Here's one possible fix though it might regress
user mounts in some situations.

Usually, we reenable CAP_DAC_READ_SEARCH prior to doing the chdir(). This patch
makes it only do that if the real uid is root. That has the effect of only
allowing non-privileged users to mount onto directories to which they can chdir.
User mounts are not documented to be limited in this way in mount(8), but
it's probably a reasonable limitation for most people.

Of course, this patch has no effect if the mount helper is not built with 
capabilities support. If we care about distros that don't build with it, then
we'll need to do something different for them.

Thoughts?</pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Steve French</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-28 16:20:45 UTC
        </span>

      </div>




<pre class="bz_comment_text">Other obvious question is how does FUSE mount handle the same kinds of problems.  Generally, user mounts can be restricted more as long as it is reasonably easy to understand (with e.g. what a fuse user would expect) and still allows the ultimate goal of allowing a user to be able to mount to directories they own, to get to network resources on the server that they have permissions for</pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Steve French</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-28 16:21:59 UTC
        </span>

      </div>




<pre class="bz_comment_text">I don't know ho common are distros without cap support these days, but an obvious possibility is to not worry about user mounts from those systems if we can't find a way to make them work.</pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-03-31 14:10:49 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=7414" name="attach_7414" title="patch -- mount.cifs don't allow unprivileged users to mount onto directories they can't access">attachment 7414</a> <a href="attachment.cgi?id=7414&amp;action=edit" title="patch -- mount.cifs don't allow unprivileged users to mount onto directories they can't access">[details]</a></span>
patch -- mount.cifs don't allow unprivileged users to mount onto directories they can't access

Ok, I think this patch should also fix it and should work even when mount.cifs
isn't compiled with support for capabilities. It's not quite complete yet, as
I'll need to make an autoconf test for sys/fsuid.h and setfsuid(), but it should
work when built against glibc.

Jesus, can you test this when you're able and confirm whether it fixes the
problem or not?</pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-02 12:34:01 UTC
        </span>

      </div>




<pre class="bz_comment_text">*** <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED DUPLICATE - mount.cifs arbitary file identification as root"
   href="show_bug.cgi?id=8800">Bug 8800</a> has been marked as a duplicate of this bug. ***</pre>
    </div>

    <div id="c17" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-02 13:13:42 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=7416" name="attach_7416" title="patch -- don't allow unpriv. users to mount onto dirs they can't access">attachment 7416</a> <a href="attachment.cgi?id=7416&amp;action=edit" title="patch -- don't allow unpriv. users to mount onto dirs they can't access">[details]</a></span>
patch -- don't allow unpriv. users to mount onto dirs they can't access

Ok, this should be fairly close to a final version of the patch. I've added an
autoconf test for setfsuid and a check for sys/fsuid.h. It looks like glibc
puts that in its own header, but other libc's may do it differently. We'll
probably need to wait for bug reports before we know whether I got that right
or not however.</pre>
    </div>

    <div id="c18" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-04 13:46:30 UTC
        </span>

      </div>




<pre class="bz_comment_text">Jesus, I'd like to go ahead and commit this patch if it fixes the issue. Will
you be able to test it and let me know if it does? If not, then I'll have
to rely on my own re-creation of this...</pre>
    </div>

    <div id="c19" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jesus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-04 15:18:21 UTC
        </span>

      </div>




<pre class="bz_comment_text">Hello, 

It seems safe until the user has the capability CAP_DAC_READ_SEARCH, isn't it?
it depends on the capability security, but seems ok.

regards.

 



(In reply to <a href="show_bug.cgi?id=8821#c18">comment #18</a>)
<span class="quote">&gt; Jesus, I'd like to go ahead and commit this patch if it fixes the issue. Will
&gt; you be able to test it and let me know if it does? If not, then I'll have
&gt; to rely on my own re-creation of this...</span ></pre>
    </div>

    <div id="c20" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-04 15:28:06 UTC
        </span>

      </div>




<pre class="bz_comment_text">With this patch, non-root users won't get CAP_DAC_READ_SEARCH -- that's just for root. With a non-root user, we'll switch the fsuid to the real uid to ensure that
permissions are respected.

So this should work whether mount.cifs is built with support for dropping
capabilities or not.

The question though is whether this fixes your testcase or not. Are you able
to test it?</pre>
    </div>

    <div id="c21" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jesus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-04 17:00:38 UTC
        </span>

      </div>




<pre class="bz_comment_text">Hello, 

I downloaded it from git://git.samba.org/cifs-utils.git
and patched it, 

but it still vulnerable.

I think you must replace getuid() by geteuid()

regards.</pre>
    </div>

    <div id="c22" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-04 19:33:56 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8821#c21">comment #21</a>)
<span class="quote">&gt; Hello, 
&gt; 
&gt; I downloaded it from git://git.samba.org/cifs-utils.git
&gt; and patched it, 
&gt; 
&gt; but it still vulnerable.
&gt; </span >

Hmm that is odd then. Perhaps I've misunderstood the bug. Can you post a
simplified reproducer here? I see where you're calling mount.cifs
in the initial bug report, but then there's some sort of reference to a
root_eye.sh script that I don't have. Perhaps I've missed something there.

<span class="quote">&gt; I think you must replace getuid() by geteuid()
&gt; </span >

No, I don't think so. In that patch, we want the real uid which is what
getuid() gives us. geteuid() would give us the effective uid, which should
always be 0 here if this is a setuid root program. getuid() should give us
the real uid

The idea here is that we want to switch the fsuid to the real uid temporarily
while we do chdir() and realpath() calls to ensure that the user has access to
the mountpoint.</pre>
    </div>

    <div id="c23" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-04 19:40:53 UTC
        </span>

      </div>




<pre class="bz_comment_text">Are you sure you tested it right? Here's what I've done. testuser does not have
access to /root:

Test an existing directory:

[testuser&#64;rawhide cifs-utils]$ ./mount.cifs //salusa/foo /root/testdir -o sec=none
Couldn't chdir to /root/testdir: Permission denied

Test an existing regular file:

[testuser&#64;rawhide cifs-utils]$ ./mount.cifs //salusa/foo /root/testfile -o sec=none
Couldn't chdir to /root/testfile: Permission denied

Test a dentry that doesn't exist:

[testuser&#64;rawhide cifs-utils]$ ./mount.cifs //salusa/foo /root/foobar -o sec=none
Couldn't chdir to /root/foobar: Permission denied

...I get the same error code/message in all cases. Isn't that what we need to
do to fix this bug? Or have I misunderstood the problem?</pre>
    </div>

    <div id="c24" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c24">Comment 24</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jesus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-05 09:17:28 UTC
        </span>

      </div>




<pre class="bz_comment_text">To reproduce de problem:

[sha0]$ git clone git://git.samba.org/cifs-utils.git
[sha0]$ cd cifs-utils/
[sha0]$ wget <a href="https://attachments.samba.org/attachment.cgi?id=7416">https://attachments.samba.org/attachment.cgi?id=7416</a> -O patch

Edit the patch to delete the header

[sha0&#64;spinlock cifs-utils]$ patch -p0  &lt; patch
patching file configure.ac
patching file mount.cifs.c

Verify the patch:
[sha0]$ vi mount.cifs.c 

search for chdir
realuid = getuid();
        if (realuid == 0) {
                dacrc = toggle_dac_capability(0, 1);
                if (dacrc)
                        return dacrc;
        } else {
                oldfsuid = setfsuid(realuid);
                oldfsgid = setfsgid(getgid());
        }

        rc = chdir(*mountpointp);
        if (rc) {
...
it's ok

[sha0]$ autoreconf -i
[sha0]$ ./configure
[sha0]$ make
[sha0]$ su
[root]# chown root:root mount.cifs
[root]# chmod 4755 mount.cifs
[root]# exit

And the verification:

[sha0]$ ./mount.cifs //aa/bb /root/tlds
Couldn't chdir to /root/tlds: Not a directory

[sha0]$ ./mount.cifs //aa/bb /root/lalalala
Couldn't chdir to /root/lalalala: No such file or directory


tlds exists and lalalala doesn't exists, becouse when you call getuid() is not 0, you must call geteuid() and then will be 0 becouse the file is setuied.

regards, 

PD: if you wish to chat or email:
<a href="mailto:jesus.olmos&#64;blueliv.com">jesus.olmos&#64;blueliv.com</a>
<a href="mailto:sha0&#64;badchecksum.net">sha0&#64;badchecksum.net</a></pre>
    </div>

    <div id="c25" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c25">Comment 25</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-05 09:42:05 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8821#c24">comment #24</a>)
<span class="quote">&gt; To reproduce de problem:
&gt; 
&gt; [sha0]$ git clone git://git.samba.org/cifs-utils.git
&gt; [sha0]$ cd cifs-utils/
&gt; [sha0]$ wget <a href="https://attachments.samba.org/attachment.cgi?id=7416">https://attachments.samba.org/attachment.cgi?id=7416</a> -O patch
&gt; 
&gt; Edit the patch to delete the header
&gt; 
&gt; [sha0&#64;spinlock cifs-utils]$ patch -p0  &lt; patch
&gt; patching file configure.ac
&gt; patching file mount.cifs.c
&gt; 
&gt; Verify the patch:
&gt; [sha0]$ vi mount.cifs.c 
&gt; 
&gt; search for chdir
&gt; realuid = getuid();
&gt;         if (realuid == 0) {
&gt;                 dacrc = toggle_dac_capability(0, 1);
&gt;                 if (dacrc)
&gt;                         return dacrc;
&gt;         } else {
&gt;                 oldfsuid = setfsuid(realuid);
&gt;                 oldfsgid = setfsgid(getgid());
&gt;         }
&gt; 
&gt;         rc = chdir(*mountpointp);
&gt;         if (rc) {
&gt; ...</span >

That looks correct to me.

<span class="quote">&gt; 
&gt; And the verification:
&gt; 
&gt; [sha0]$ ./mount.cifs //aa/bb /root/tlds
&gt; Couldn't chdir to /root/tlds: Not a directory
&gt; 
&gt; [sha0]$ ./mount.cifs //aa/bb /root/lalalala
&gt; Couldn't chdir to /root/lalalala: No such file or directory
&gt; </span >

That's not at all what I'm seeing when I run the same sort of test. What are
the permissions on /root on this box?

<span class="quote">&gt; 
&gt; tlds exists and lalalala doesn't exists, becouse when you call getuid() is not
&gt; 0, you must call geteuid() and then will be 0 becouse the file is setuied.</span >

That's not correct. We don't care what the effective uid is there because
we know it's always going to be 0 when the program is setuid root. What we
want to know is what the *real* uid is and that's what getuid() give us.

Look at it this way. When you run this program as root, you get:

real uid == 0
euid == 0
fsuid == 0

...in this case, we want to toggle CAP_DAC_READ_SEARCH back on so that the
mounting user (root in this case) has the ability to traverse into directories
to which he does not have explicit access.

Now, when you run it as uid = 5000 or another unprivileged user:

real uid == 5000
euid == 0
fsuid == 0

...in this case, we want to set the fsuid back to 5000 while we do the chdir
and realpath.

Calling geteuid() would be useless here because it always gives
you 0 when the program is setuid root.

I'm fairly certain this patch is correct since it does fix my similar
testcase. I've also tested it with and without capabilities support and it
seems to do the right thing. I'm baffled as to why you're getting different results however.</pre>
    </div>

    <div id="c26" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c26">Comment 26</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-06 10:22:49 UTC
        </span>

      </div>




<pre class="bz_comment_text">To further illustrate the point:

$ cat extid.c
#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/types.h&gt;

int
main(int argc, char **argv)
{
	uid_t uid, euid;

	uid = getuid();
	euid = geteuid();

	printf(&quot;uid=%u euid=%u\n&quot;, uid, euid);
	return 0;
}

$ gcc -Wall -o ./extid ./extid.c 
$ sudo chown root:root extid
$ sudo chmod 04755 extid
$ ./extid 
uid=5005 euid=0

...when run by root, the uid and euid are both 0, so again I'll assert that
there's no point in calling geteuid() there. If it's setuid root then we
know that will always come back 0 regardless of who runs it.

At this point, I can verify that this patch fixes the problem as I understand it in my environment. I'm inclined to go ahead and push it to the repo, and probably do a point release soon afterward.

Jesus, can you confirm or determine why this isn't working correctly in your
environment?</pre>
    </div>

    <div id="c27" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c27">Comment 27</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-07 12:15:13 UTC
        </span>

      </div>




<pre class="bz_comment_text">What might be helpful at this point is to understand what's happening at the
system call level. An strace of the mount.cifs command while you're reproducing
this would be ideal. For instance:

...first setuid root /usr/bin/strace so you can strace setuid binaries:

    # chmod 04755 /usr/bin/strace

...then, something like this after you setuid root the mount.cifs binary:

    $ strace -f -o /tmp/mount.cifs.strace -v -s 256 ./mount.cifs //aa/bb /root/tlds

...perhaps that will show us why it's not working for you.</pre>
    </div>

    <div id="c28" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c28">Comment 28</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-10 18:58:11 UTC
        </span>

      </div>




<pre class="bz_comment_text">Jesus...ping? Do you think you'll be able to track down why this patch isn't
working for you?</pre>
    </div>

    <div id="c29" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c29">Comment 29</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-12 10:53:22 UTC
        </span>

      </div>




<pre class="bz_comment_text">At this point. I'm going to go ahead and push this patch to the repo. It
does seem to fix the problem in my testing. Jesus, feel free to reopen the
bug if you still find that it doesn't fix the problem for you, or if you
have additional info to share.</pre>
    </div>

    <div id="c30" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c30">Comment 30</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Huzaifa Sidhpurwala</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-16 06:39:46 UTC
        </span>

      </div>




<pre class="bz_comment_text">Several points to remember here:

1. Even if mount.cifs is suid on a distro, mounting is allowed only if an the administrator has allowed doing so via fstab, where the mount directory is mentioned.

2. Its not likely that any sane admin will allow users to mount a cifs share on root or any other important directory, secondly the mount directory would most likely be empty.

So though it is definitely an information leak, i dont think arbitrary files could be probed using this flaw.</pre>
    </div>

    <div id="c31" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c31">Comment 31</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jesus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-16 09:22:26 UTC
        </span>

      </div>




<pre class="bz_comment_text">apology for the delay, 

you're right, the patch solves the problem,
when I tested the patch, for any reason i put +r on my root, 
with this patch, it seems safe.

thnx for all.</pre>
    </div>

    <div id="c32" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c32">Comment 32</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Huzaifa Sidhpurwala</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-16 09:37:08 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8821#c31">comment #31</a>)
<span class="quote">&gt; apology for the delay, 
&gt; 
&gt; you're right, the patch solves the problem,
&gt; when I tested the patch, for any reason i put +r on my root, 
&gt; with this patch, it seems safe.
&gt; 
&gt; thnx for all.</span >

Jesus, 

Do you have anything in fstab, which enables you can mount your cifs share on /root?</pre>
    </div>

    <div id="c33" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c33">Comment 33</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jesus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-16 09:39:34 UTC
        </span>

      </div>




<pre class="bz_comment_text">nope</pre>
    </div>

    <div id="c34" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8821#c34">Comment 34</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Layton</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2012-04-16 11:38:13 UTC
        </span>

      </div>




<pre class="bz_comment_text">Great. Thanks for the confirmation. I committed the patch a few days ago and it should make the 5.4 release (which will probably be soon).</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=8821">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=8821">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=8821">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li>
      <span class="separator">| </span>
        <a href="request.cgi">Requests</a></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    
      <li id="new_account_container_bottom">
        <span class="separator">| </span>
        <a href="createaccount.cgi">New&nbsp;Account</a>
      </li>

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=8821&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=8821" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=8821&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635630140-aGx-pCUNyl8pIfdzu6jVrYKv1OXEZGF-7Pa2tMHD2ys">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>