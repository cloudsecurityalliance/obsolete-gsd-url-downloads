<!DOCTYPE html>
<html lang="en">

  <head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <title>HTTP header splitting in gunicorn 19.4.5 (CVE-2018-1000164)</title>
  <meta name="description" content="An HTTP response splitting vulnerability reported to Gunicorn's GitHub repository was reported and fixed by the maintainers; but the vulnerability was never assigned a CVE ID. I reported this to the (now defunct) Distributed Weakness Filing System project.">

  <link rel="shortcut icon" href="/assets/img/favicon.ico">
  <link href="https://fonts.googleapis.com/css?family=Oswald:400,700|Roboto:400,700" rel="stylesheet">
  <link rel="stylesheet" href="/assets/fonts/font-awesome/css/font-awesome.css">
  <link rel="stylesheet" href="/assets/stylesheets/dark.css">
</head>


  <body>

    <header class="header">
  <h1 class="logo">
    <a href="/" class="logo-link">Everardo Padilla</a>
  </h1>
  <nav class="main-menu">
    <ul>
      <li><a href="/blog/">Blog</a></li>
    </ul>
  </nav>
</header>


    <main class="page-content" aria-label="Content">
      <div class="wrapper">
        <div class="page-header">
  <h1 class="page-title">HTTP header splitting in gunicorn 19.4.5 (CVE-2018-1000164)</h1>
  <span class="page-list-date">
    <i class="fa fa-calendar-o" aria-hidden="true"></i> April 2, 2018
  </span>
</div>
<div class="post-container">
  
   <img class="post-img" src=/assets/posts/2018/04/02/gunicorn.png alt="">
  
  <div class="post-content">
    <article>
      
      <p>Timeline:</p>
<ul>
  <li>02 Apr 2018: This post is published</li>
  <li>02 Apr 2018: CVE ID requested</li>
  <li>06 Apr 2018: <a target="_blank" href="https://access.redhat.com/security/cve/cve-2018-1000164">CVE-2018-1000164</a> assigned
<br />
<br /></li>
</ul>

<p>During a vulnerability research spree, I came across this GitHub issue titled <a href="https://github.com/benoitc/gunicorn/issues/1227" target="_blank">Potential HTTP Response Splitting Vulnerability</a>, belonging to the <a href="https://github.com/benoitc/gunicorn" target="_blank">gunicorn</a> project. The title says “potential”, but the vulnerability was present and got fixed in commit <a href="https://github.com/fofanov/gunicorn/commit/6c3d8f9c205f541a6ae0a1d5eba32b1cfca252ee" target="_blank">6c3d8</a>.
<br /></p>

<p>Unfortunately, this vulnerability hasn’t been reported to <a href="https://www.mitre.org/" target="_blank">MITRE</a> nor to the <a href="http://seclists.org/oss-sec/2016/q1/560">Distributed Weakness Filing System (DWF)</a>; therefore it’s not listed in any public <a href="https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures" target="_blank">CVE</a> database. In an effort to spread this information to anyone considering using this version of gunicorn, I’ll fill in a DWF report hoping this issue gets a CVE ID.
<br /></p>

<p>An HTTP header splitting vulnerability is caused by not sanitizing strings containing characters with special meaning in HTTP (such as <code class="language-plaintext highlighter-rouge">CR</code> and <code class="language-plaintext highlighter-rouge">LF</code>) in data that will later be used to generate HTTP headers.
<br /></p>

<p>We can test this vulnerability by creating a Python2 virtual environment with gunicorn 19.4.5 installed:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">user@pc:~<span class="nv">$ </span>virtualenv venv
user@pc:~<span class="nv">$ </span><span class="nb">source </span>venv/bin/activate
<span class="o">(</span>venv<span class="o">)</span> user@pc:~<span class="nv">$ </span>pip <span class="nb">install </span><span class="nv">gunicorn</span><span class="o">==</span>19.4.5</code></pre></figure>

<p>The following code (<code class="language-plaintext highlighter-rouge">myapp.py</code>) will define both <code class="language-plaintext highlighter-rouge">Foo</code> and <code class="language-plaintext highlighter-rouge">Bar</code>:</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">app</span><span class="p">(</span><span class="n">environ</span><span class="p">,</span> <span class="n">start_response</span><span class="p">):</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">b</span><span class="s">"Hello, World!</span><span class="se">\n</span><span class="s">"</span>
    <span class="n">start_response</span><span class="p">(</span><span class="s">"200 OK"</span><span class="p">,</span> <span class="p">[</span>
        <span class="p">(</span><span class="s">"Content-Type"</span><span class="p">,</span> <span class="s">"text/plain"</span><span class="p">),</span>
        <span class="p">(</span><span class="s">"Foo"</span><span class="p">,</span> <span class="s">"Foo</span><span class="se">\r\n</span><span class="s">Bar: Bar"</span><span class="p">),</span>
        <span class="p">(</span><span class="s">"Content-Length"</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">)))</span>
    <span class="p">])</span>
    <span class="k">return</span> <span class="nb">iter</span><span class="p">([</span><span class="n">data</span><span class="p">])</span></code></pre></figure>

<p>We can run this by executing <code class="language-plaintext highlighter-rouge">gunicorn -w 4 myapp:app</code> and going to <code class="language-plaintext highlighter-rouge">http://127.0.0.1:8000</code>. Here’s the resulting HTTP response:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">user@pc:~<span class="nv">$ </span>curl <span class="nt">-i</span> http://127.0.0.1:8000/
HTTP/1.1 200 OK
Server: gunicorn/19.4.5
Connection: close
Content-Type: text/plain
Foo: Foo
Bar: Bar
Content-Length: 14

Hello, World!</code></pre></figure>

<p>If we attempt to do this in gunicorn 19.5.0+, this will be the resulting HTTP response:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html">user@pc:~$ curl -i http://127.0.0.1:8000/
HTTP/1.1 400 Bad Request
Connection: close
Content-Type: text/html
Content-Length: 163

<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>Bad Request<span class="nt">&lt;/title&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h1&gt;&lt;p&gt;</span>Bad Request<span class="nt">&lt;/p&gt;&lt;/h1&gt;</span>
    Invalid HTTP Header: "'Foo\\r\\nBar: Bar'"
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span></code></pre></figure>

<p>This behavior is expected, thanks to commit <a href="https://github.com/fofanov/gunicorn/commit/6c3d8f9c205f541a6ae0a1d5eba32b1cfca252ee" target="_blank">6c3d8</a>.</p>

    </article>
    <div class="post-share">
  <h5>Share:</h5>
  
  <a href="" title="Share on Twitter" onclick="window.open('https://twitter.com/home?status=HTTP header splitting in gunicorn 19.4.5 (CVE-2... - https://epadillas.github.io/2018/04/02/http-header-splitting-in-gunicorn-19.4.5/ ', 'newwindow', 'width=500, height=225'); return false;" data-turbolinks="false">
    <i class="fa fa-twitter" aria-hidden="true"></i>
  </a>
  <a href="" title="Share on Facebook" onclick="window.open('https://www.facebook.com/sharer/sharer.php?u=https://epadillas.github.io/2018/04/02/http-header-splitting-in-gunicorn-19.4.5/', 'newwindow', 'width=500, height=500'); return false;" data-turbolinks="false">
    <i class="fa fa-facebook" aria-hidden="true"></i>
  </a>
</div>

    

  </div>
</div>

      </div>
    </main>

    <footer class="footer">
  <p class="copyright">2020 @ Everardo Padilla</p>
</footer>

    <!-- Main Js -->
<script src="/assets/js/function.js"></script>

    <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-113019047-1', 'auto');
  ga('send', 'pageview');
</script>

  </body>

</html>
