        <!DOCTYPE HTML>
        <html>
            <head>
                <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
                <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"/>
                <link rel="stylesheet" type="text/css" href="/style.css"/>
                <title>npm Blog Archive: Binary Planting with the npm CLI</title>
                <meta name="description" content="npm Blog (Archive); updates from the npm team are now published on the GitHub Blog and the GitHub Changelog"/>
                <meta name="og:title" content="npm Blog Archive: Binary Planting with the npm CLI"/>
                <meta name="og:description" content="npm Blog (Archive); updates from the npm team are now published on the GitHub Blog and the GitHub Changelog"/>
                <meta name="og:image" content="https://user-images.githubusercontent.com/29712634/81721690-e2fb5d80-9445-11ea-8602-4b2294c964f3.png"/>
                <link rel="icon" href="/favicon-32x32.png" type="image/png"/>
                <link rel="apple-touch-icon" sizes="48x48" href="/icons/icon-48x48.png"/>
                <link rel="apple-touch-icon" sizes="72x72" href="/icons/icon-72x72.png"/>
                <link rel="apple-touch-icon" sizes="96x96" href="/icons/icon-96x96.png"/>
                <link rel="apple-touch-icon" sizes="144x144" href="/icons/icon-144x144.png"/>
                <link rel="apple-touch-icon" sizes="192x192" href="/icons/icon-192x192.png"/>
                <link rel="apple-touch-icon" sizes="256x256" href="/icons/icon-256x256.png"/>
                <link rel="apple-touch-icon" sizes="384x384" href="/icons/icon-384x384.png"/>
                <link rel="apple-touch-icon" sizes="512x512" href="/icons/icon-512x512.png"/>
            </head>
            <body>
                <div id="rainbar"></div>
                <header>
                    <div id="logo_and_title">
                        <a href="/" class="logo"><svg height="32" width="32" viewBox="0 0 700 700" fill="currentColor"><polygon fill="#cb0000" points="0,700 700,700 700,0 0,0"></polygon><polygon fill="#ffffff" points="150,550 350,550 350,250 450,250 450,550 550,550 550,150 150,150 "></polygon></svg></a>
                        <a href="/" class="title">npm Blog (Archive)</a>
                    </div>
                    <div id="links">
                        <a href="https://npmjs.com/">npmjs.com</a>
                        <a href="https://status.npmjs.com/">Status</a>
                        <a href="https://npmjs.com/support/">Support</a>
                    </div>
                </header>

                <main>
                    <div id="retired">
                        <p>
                            The npm blog has been discontinued.
                        </p>

                        <p>
                            Updates from the npm team are now published on the
                            <a href="https://github.blog/">GitHub Blog</a> and
                            the <a href="https://github.blog/changelog/">GitHub
                            Changelog</a>.
                        </p>
                    </div>
                
                
                                    <h1>Binary Planting with the npm CLI</h1>
                    <p>tl;dr - Update to npm v6.13.4 as soon as possible on all your systems to fix a vulnerability allowing arbitrary path access.</p>

<h2>The Vulnerabilities</h2>

<p>In versions of npm prior to 6.13.3 (and versions of yarn prior to 1.21.1), a properly constructed entry in the package.json bin field would allow a package publisher to modify and/or gain access to arbitrary files on a user’s system when the package is installed.</p>

<p>In versions of npm prior to 6.13.4 (and all versions of yarn as of this announcement), it was possible for a globally-installed package with a binary entry to overwrite an existing binary in the target install location.  (That is, not any arbitrary file on the system, but any file in /usr/local/bin.)</p>

<p>A mitigating factor for both vulnerabilities is that a malicious actor would have to get their victim to install the package with the specially crafted bin entry.  However, as we have seen in the past, this is not an insurmountable barrier.</p>

<h2>Current Risk</h2>

<p>The npm, Inc. security team has been scanning the registry for examples of this attack, and have not found any published packages in the registry with this exploit.  That does not guarantee that it hasn’t been used, but it does mean that it isn’t currently being used in published packages on the registry.</p>

<p>We will continue monitoring, and will take action to prevent any bad actors from exploiting this vulnerability in the future.  However, we cannot scan all possible sources of npm packages (private registries, mirrors, git repositories, etc.), so it is important to update as soon as possible.</p>

<h2>The Fix</h2>

<p>The package.json parsing libraries in use in npm v6.13.3 were updated such that they would sanitize and validate all entries in the bin field to remove leading slashes, . and .. path entries, and other means of path escape, using the well tested and highly reliable path utility built into Node.js.</p>

<p>The fix was reviewed by npm, Inc.’s security team, and showed that it prevented the arbitrary path manipulation reported.</p>

<p>The bin script linking libraries in use in npm v6.13.4 were updated such that, when installing binary entries of top-level globally installed packages, they will only overwrite existing binary files if they are currently installed on behalf of the same package being installed.  For example, npm install &ndash;global foo could overwrite /usr/local/bin/foo if and only if /usr/local/bin/foo is currently a link to a previously installed version of foo.</p>

<p>This second fix was also reviewed by npm, Inc.’s security team, and showed that it prevented the bin file overwriting exploit.</p>

<p>To patch both vulnerabilities, please run npm install -g npm@6.13.4 as soon as possible.</p>

<h2>Thank you!</h2>

<p>The vulnerabilities were responsibly reported by Daniel Ruf, and we greatly appreciate Daniel’s help in keeping our community safe.</p>

<p>If you think you&rsquo;ve found a security issue in the npm CLI, we encourage you to report it to <a href="https://t.umblr.com/redirect?z=http%3A%2F%2Fmailto%3Asecurity%40npmjs.com&amp;t=MzY5Nzk1MzE4MGUwNzJhZjJkM2VhOTdlMmQ4MjAzYzEzYWM1NGI3NixkMDY5NTZjMzQyOGE3ZTcxY2VlNDEyMWQxOWE5YjY1ZDU4NzU2YTlj">security@npmjs.com</a> and we’ll help you through the triage and disclosure process.</p>
                
                
                
                
                
                
                                <div id="footer">
                <span id="timestamp"> December 11th, 2019 5:07pm </span>
                <span id="author">@npm-inc</span>
                                                          <span class="tag"><a href="/tagged/security">security</a></span>
                                          <span class="tag"><a href="/tagged/binary-planting">binary planting</a></span>
                                                    </div>
                </main>
            </body>
        </html>

        