<!DOCTYPE html>
<html lang="en" class="overflow-x">
<head>
    <!-- Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-164212227-1"></script>
    <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-164212227-1');
    </script>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1" /><![endif]-->
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="Doyensec is an independent security research and development company focused on vulnerability discovery and remediation." />
    <meta name="keywords" content="doyensec, doyensecurity, security, infosec, vulnerability, exploit, offensive, pentest, pentester, hacking, auditing, reverse engineering, automation" />
    <meta name="robots" content="index, follow" />
    <meta name="robots" content="noodp" />
    <meta name="robots" content="noydir" />
    <title>Doyensec :: Build with Security</title>
    <link href="css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="css/ie10.css" rel="stylesheet" type="text/css" />
    <link href="research.css" rel="stylesheet" type="text/css" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="images/apple-touch-icon-144-precomposed.png">
    <link rel="shortcut icon" href="images/favicon.ico">
    <!--[if lt IE 9]><script src="js/html5-respond.min.js"></script><![endif]-->
</head>
<body id="top" class="body overflow-x">
    <div class="wrapper">
        <header class="header" role="banner">
            <nav class="navbar navbar-default navbar-fixed-top navbar--custom">
                <div class="container">
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle collapsed navbar-toggle--custom" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                            <span class="sr-only">Menu</span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        <div class="navbar-brand"><a href="index.html"><img alt="Doyensec Logo" src="images/logo.svg" class="navbar-brand__image"></a></div>
                    </div>
                    <div id="navbar" class="collapse navbar-collapse navbar--right">
                        <ul class="nav navbar-nav navbar__list">
                            <li class="navbar__item"><a href="#">Services</a>
                                <ul class="sub-menu">
                                    <li class="navbar__item"><a href="auditing.html">Security Auditing</a></li>
                                    <li class="navbar__item"><a href="engineering.html">Reverse Engineering</a></li>
                                    <li class="navbar__item"><a href="automation.html">Security Automation</a></li>
                                </ul>
                            </li>
                            <li class="navbar__item"><a href="research.html">Research</a></li>
                            <li class="navbar__item"><a href="company.html">Company</a></li>
                            <li class="navbar__item"><a href="contact.html">Contact</a></li>
                            <li class="navbar__item"><a href="careers.html">Careers</a></li>
                            <li class="navbar__item"><a href="https://blog.doyensec.com">Blog</a></li>
                        </ul>
                    </div>
                </div>
            </nav>
            <div class="header__inner" style="background-image: url(images/research.jpg); background-size:100% 100%;">
                <div id="carousel" class="carousel slide layer" data-ride="carousel" data-interval="5000">
                    <div class="carousel-inner carousel__inner" role="listbox">
                        <div class="item slide-1 carousel__item active">
                            <div class="container--header">
                                <div class="container carousel--container">
                                    <div class="row">
                                        <div class="col-sm-8 col-sm-offset-2 align-center">
                                            <h1 class="inner__heading-1">Research</h1>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="arrow arrow--orange"><img src="images/triangle_edge_left.svg" alt="" class="arrow__image" /></div>
            </div>
        </header>
        <section class="main main--padding">
            <div class="container">
                <div class="row layer">
                    <div class="col-sm-10 col-sm-offset-1 align-justify">
                        <p class="research__paragraph">Research is one of our founding principles and we invest in it heavily. All of our researchers have the privilege to use %25 of their time, or one week every month, exclusively for self-directed research. We aim to provide research-driven application security, enabling trust in our client's products and evolving the resilience of the digital ecosystem. By discovering new vulnerabilities and attack techniques, we are constantly improving our capabilities and contributing to the security of the digital world.</p>
                    </div>
                </div>
                <div class="sign sign--light xs--hidden sm--hidden-only"><img src="images/sign_dark.svg" alt="" class="sign__image" /></div>
            </div>
        </section>
        <section class="list list--padding">

                <div class="form-group">
                    <div class="filters-button-group button-group js-radio-button-group text-center">
                        <button class="button" data-filter=".publication">Publication</button>
                        <button class="button" data-filter=".blogpost">Blog Post</button>
                        <button class="button" data-filter=".advisory">Advisory</button>
                        <button class="button" data-filter=".code" id="showCodeBtn">Code</button>
                        <button class="button is-checked" data-filter="*" id="showAllBtn">Show all</button>
                        <input type="text" class="quicksearch" placeholder="Search" />
                    </div>
                </div>

            <!-- Here starts the Isotope Grid -->
            <div class="container container--orange layer" id="isotopeGridContainer">
                <!-- TEMPLATE -->
                <!--
                    In order to add a new entry you should:
                      - Copy the corresponding research item to add (.offer-data). There are different categories available (either blogpost, publication, advisory, or code) to choose from.
                      - Remember to populate the item dates (MM/DD/YYYY), title, descriptions and links
                      - Increment by 1 the "id" attribute of .row.post-content (e.g. from "p10" to "p11") together with the "rel" attribute of .show, or else the expand-details-on-click feature won't work!

                      Research items are sorted by date via JS when the page loads. Still, sort them so it is easy to pick the right p ID.
                -->
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">05/20/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">GraphQL CSRF: that single GraphQL issue that you keep missing</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">05/20/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p69" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p69">
                        <div class="col-sm-12 align-justify">
                            <p><a href="https://graphql.org/">GraphQL</a> is getting more popular every day. Despite that, it is not immune to Cross-Site Request Forgery attacks. We spent the last few weeks testing a variety of GraphQL frameworks and applications to understand how widespread this issue is.</p>
                            <p>Read the full story on our blog: <a href="https://blog.doyensec.com/2021/05/20/graphql-csrf.html">https://blog.doyensec.com/2021/05/20/graphql-csrf.html</a></p>
                        </div>
                    </div>
                </div>                
                <div class="offer-data publication">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Publication</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">deliverable</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">05/11/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Security Auditing of Teleport Cloud (Q1 2021)</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">05/11/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p68" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p68">
                        <div class="col-sm-12 align-justify">
                          <p><a href="https://goteleport.com">GoTeleport</a> engaged Doyensec to perform an in-depth security assessment of the <i>Teleport Cloud</i> platform. From their technical blog post: <br>
                          <div style="border-left: 3px solid #eee; margin-left:10px; padding-left: 5px; font-style: italic;"><p>“Doyensec has demonstrated that their teams’ skill and attention to detail in attacking our infrastructure are unmatched.”</p></div><br>
                          <p>The full technical deliverable for this engagement is now available.</p>                            
                          <p>Download the Teleport Cloud testing deliverable: <a href="resources/teleport-cloud-audit-q1-2021.pdf" target="_blank">teleport-cloud-audit-q1-2021.pdf</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">CVE-2021-xxxx</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">04/27/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Multiple Privilege Escalation Vulnerabilities in Pritunl VPN client</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">04/27/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p67" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p67">
                        <div class="col-sm-12 align-justify">
                            <p>Pritunl-client-electron is a free and open source cross platform OpenVPN client. Doyensec discovered two local privilege escalation issues. Due to insufficient configuration sanitization, a low-privileges attacker can obtain root level access. These vulnerabilities were fixed in version v1.2.2768.85.</p>
                            <p>Link to the public PDF advisory: <a href="resources/Doyensec_Advisory_Pritunl_Client_Q22021.pdf">Doyensec_Advisory_Pritunl_Client_Q22021.pdf</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data publication">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Publication</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">deliverable</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">04/12/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Security Auditing of Teleport (Q4 2020)</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">04/12/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p66" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p66">
                        <div class="col-sm-12 align-justify">
                            <p><a href="https://goteleport.com">GoTeleport</a> engaged Doyensec to perform an in-depth security assessment of the <i>Teleport</i> product. The full technical deliverable for this engagement is now available.</p>                            
                            <p>Download the Teleport testing deliverable: <a href="resources/teleport-audit-q4-2020.pdf" target="_blank">teleport-audit-q4-2020.pdf</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data code">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/code_icon.svg" alt="Code Icon" class="offer-data__image offer-data__image--c" /><p class="offer-data__paragraph">Code</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">regexploit</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">03/11/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Regexploit</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">03/11/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p65" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p65">
                        <div class="col-sm-12 align-justify">
                            <p><a href="https://github.com/doyensec/regexploit">Regexploit - a tool to find regular expressions which are vulnerable to ReDoS</a>. Many default regular expression parsers have unbounded worst-case complexity. Regex matching may be quick when presented with a matching input string. However, certain non-matching input strings can make the regular expression matcher go into crazy backtracking loops and take ages to process. This can cause denial of service, as the CPU will be stuck trying to match the regex.</p>
                            <p>This tool is designed to:<br>
                                &bull; find regular expressions which are vulnerable to ReDoS<br>
                                &bull; give an example malicious string which will cause catastrophic backtracking
                            </p>
                            <p>Download the latest release from <a href="https://github.com/doyensec/regexploit/releases"> Regexploit's Github releases page</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">03/11/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Regexploit: DoS-able Regular Expressions</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">03/11/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p64" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p64">
                        <div class="col-sm-12 align-justify">
                            <p>In this blog post, we’re releasing a new tool to analyse regular expressions and hunt for ReDoS vulnerabilities. Our heuristic has been proven to be extremely effective, as demonstrated by many vulnerabilities discovered across popular NPM, Python and Ruby dependencies.</p>
                            <p>Read the full story on our blog: <a href="https://blog.doyensec.com/2021/03/11/regexploit.html">https://blog.doyensec.com/2021/03/11/regexploit.html</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">CVE-2021-xxxx</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">03/11/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Regular Expression Denial of Service (ReDoS) in various open-source packages</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">03/11/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p63" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p63">
                        <div class="col-sm-12 align-justify">
                            <p>During our research on ReDoS, Doyensec reported several vulnerabilities:</p>
                            <p>
                                &bull; <a href="https://github.com/ua-parser/uap-core/security/advisories/GHSA-cmcx-xhr8-3w9p">CVE-2020-5243: uap-core</a> affecting uap-python, <a href="https://github.com/ua-parser/uap-ruby/security/advisories/GHSA-pcqq-5962-hvcw">uap-ruby</a>, etc. (User-Agent header parsing)<br />
                                &bull; <a href="https://github.com/python/cpython/commit/0b297d4ff1c0e4480ad33acae793fbaf4bf015b4">CVE-2020-8492: cpython’s urllib.request</a> (WWW-Authenticate header parsing)<br />
                                &bull; <a href="https://github.com/advisories/GHSA-hq37-853p-g5cf">CVE-2021-21236: CairoSVG</a> (SVG parsing)<br />
                                &bull; <a href="https://github.com/httplib2/httplib2/security/advisories/GHSA-93xj-8mrv-444m">CVE-2021-21240: httplib2</a> (WWW-Authenticate header parsing)<br />
                                &bull; <a href="https://github.com/python-pillow/Pillow/commit/3bce145966374dd39ce58a6fc0083f8d1890719c">CVE-2021-25292: python-pillow</a> (PDF parsing)<br />
                                &bull; <a href="https://github.com/trentm/python-markdown2/pull/387">CVE-2021-26813: python-markdown2</a> (Markdown parsing)<br />
                                &bull; <a href="resources/Doyensec_Advisory_ssri_redos.pdf">CVE-2021-27290: npm/ssri</a> (SRI parsing)<br />
                                &bull; <a href="https://github.com/pygments/pygments/commit/2e7e8c4a7b318f4032493773732754e418279a14">CVE-2021-27291: pygments</a> lexers for ADL, CADL, Ceylon, Evoque, Factor, Logos, Matlab, Octave, ODIN, Scilab &amp; Varnish VCL (Syntax highlighting)<br />
                                &bull; <a href="https://github.com/faisalman/ua-parser-js/commit/809439e20e273ce0d25c1d04e111dcf6011eb566">CVE-2021-27292: ua-parser-js</a> (User-Agent header parsing)<br />
                                &bull; <a href="https://github.com/restsharp/RestSharp/issues/1556">CVE-2021-27293: RestSharp</a> (JSON deserialisation in a .NET C# package)<br />
                                &bull; <a href="https://github.com/python/cpython/pull/17157">bpo-38804: cpython’s http.cookiejar</a> (Set-Cookie header parsing)<br />
                                &bull; <a href="resources/Doyensec_Advisory_simplecrawler_redos.pdf">SimpleCrawler (archived)</a> (HTML parsing)<br />
                                &bull; Plus many more unpublished bugs in a handful of pypi, npm, ruby and nuget packages. We will update this list on <a href="https://github.com/doyensec/regexploit">Regexploit's Github page</a>.
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">02/16/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Electron APIs Misuse: An Attacker’s First Choice</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">02/16/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p62" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p62">
                        <div class="col-sm-12 align-justify">
                            <p><a href="https://www.electronjs.org/">ElectronJs</a> is getting more secure every day. <a href="https://www.electronjs.org/docs/tutorial/context-isolation">Context isolation</a> and other security settings are planned to become enabled by default with the upcoming release of Electron 12 stable, seemingly ending the somewhat deserved reputation of a systemically insecure framework.</p>
                            <p>From an attacker’s perspective, Electron-specific APIs are very often the easiest path to gain remote code execution, read or write access to the host’s filesystem, or leak sensitive user’s data. Malicious JavaScript running in the renderer can often subvert the application using such primitives.</p>
                            <p>Read the full story on our blog: <a href="https://blog.doyensec.com/2021/02/16/electron-apis-misuse.html">https://blog.doyensec.com/2021/02/16/electron-apis-misuse.html</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">CVE-2021-21288</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">02/15/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Server-Side Request Forgery (SSRF) Vulnerability in CarrierWave's Remote File Upload Feature</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">02/15/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p61" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p61">
                        <div class="col-sm-12 align-justify">
                            <p>CarrierWave is an open-source RubyGem which provides a simple and flexible way to upload files for Rails, Sinatra and other Ruby-based web frameworks. In CarrierWave before versions 1.3.2 and 2.1.1 the download feature has an SSRF vulnerability, allowing attacks to provide DNS entries or IP addresses that are intended for internal use and gather information about the Intranet infrastructure of the platform. This vulnerability was fixed in versions 1.3.2 and 2.1.1.</p>
                            <p>Link to the public Github Advisory: <a href="https://github.com/carrierwaveuploader/carrierwave/security/advisories/GHSA-fwcm-636p-68r5">GHSA-fwcm-636p-68r5</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">CVE-2021-3377</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">02/01/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Cross-Site Scripting (XSS) in ansi_up v4</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">02/01/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p60" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p60">
                        <div class="col-sm-12 align-justify">
                            <p>The npm package <a href="https://github.com/drudru/ansi_up">ansi_up</a> converts ANSI escape codes (used by terminal emulators to, for example, set text color) into HTML. Since ansi_up v4, ANSI escape codes can be used to create HTML hyperlinks. Due to insufficient URL sanitization, extra HTML attributes and javascript code can be injected into the returned HTML. This can be used in a Cross-Site Scripting (XSS) attack. This vulnerability was fixed in v5.0.0.</p>
                            <p>Download the advisory PDF file: <a href="resources/Doyensec_Advisory_ansi_up4_XSS.pdf">Doyensec_Advisory_ansi_up4_XSS.pdf</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">CVE-2020-24025</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">01/11/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">node-sass Missing Certificate Validation Vulnerability</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">01/11/2021</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p59" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p59">
                        <div class="col-sm-12 align-justify">
                            <p>During a customer engagement, Doyensec discovered a <a href="https://github.com/sass/node-sass/pull/567#issuecomment-656609236">Certificate Validation vulnerability</a> affecting the <a href="https://github.com/sass/node-sass">node-sass</a> package, used for the Node.js bindings to libsass. Because of an optional flag misconfiguration, libsass binaries fetched from the official github.com CDN may be tampered in-transit. Versions 2.0.0 to 4.14.1 are affected.</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">12/10/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Novel Abuses On Wi-Fi Direct Mobile File Transfers</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">12/10/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p58" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p58">
                        <div class="col-sm-12 align-justify">
                            <p>Doyensec researched mobile P2P Wi-Fi protocols and their obscure file-sharing implementations. As a result, an overlooked problem common to every Android vendor-provided solution was identified.</p>
                            <p>Read the full story on our blog: <a href="https://blog.doyensec.com/2020/12/10/novel-abuses-wifi-direct-mobile-file-transfers.html">https://blog.doyensec.com/2020/12/10/novel-abuses-wifi-direct-mobile-file-transfers.html</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">11/19/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">InQL Scanner v3 Release</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">11/19/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p57" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p57">
                        <div class="col-sm-12 align-justify">
                            <p>A new major release of InQL, our GraphQL security testing tool, is out! This release includes a Cycles Detector, Request Timer, Precise Query Generation and many bug fixes.</p>
                            <p>Read more on our blog: <a href="https://blog.doyensec.com/2020/11/19/inql-scanner-v3.html">https://blog.doyensec.com/2020/11/19/inql-scanner-v3.html</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">09/09/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Fuzzing JavaScript Engines with Fuzzilli</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">09/09/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p56" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p56">
                        <div class="col-sm-12 align-justify">
                            <p>As part of our fuzzing initiatives, we worked on a few techniques to target popular JavaScript engines (JSE). Our research resulted in a contribution to the well known fuzzer "Fuzzilli". By integrating Fuzzilli with JerryScript, Doyensec was able to identify multiple security vulnerabilities over the course of just four weeks.</p>
                            <p>Read more on our latest blog post: <a href="https://blog.doyensec.com/2020/09/09/fuzzilli-jerryscript.html">https://blog.doyensec.com/2020/09/09/fuzzilli-jerryscript.html<a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">08/20/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">CSRF Protection Bypass in Play Framework</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">08/20/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p54" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p54">
                        <div class="col-sm-12 align-justify">
                            <p>This blog post illustrates a vulnerability affecting the <a href="https://www.playframework.com/">Play Framework</a> that we discovered during a client engagement. This issue allows a complete Cross-Site Request Forgery (CSRF) protection bypass under specific configurations.</p>
                            <p>Read more on the blog: <a href="https://blog.doyensec.com/2020/08/20/playframework-csrf-bypass.html">https://blog.doyensec.com/2020/08/20/playframework-csrf-bypass.html<a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">CVE-2020-12480</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">08/10/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Play Framework below 2.8.2/2.7.5 CSRF Protection Bypass</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">08/10/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p53" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p53">
                        <div class="col-sm-12 align-justify">
                            <p>During a customer engagement, Doyensec discovered a <a href="https://www.playframework.com/security/vulnerability/CVE-2020-12480-CsrfBlacklistBypass">CSRF Protection Bypass vulnerability</a> affecting the <a href="https://www.playframework.com/">Play Framework</a>. If a black list is used, the result is that a malicious user may be able to perform a CSRF attack on the Play application.</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data publication">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Publication</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">resource</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">06/17/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Awesome Electron.js hacking & pentesting resources</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">06/17/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p52" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p52">
                        <div class="col-sm-12 align-justify">
                            <p>A frequently-updated repository with presentations, bug write-ups, and all kinds of content to help during Electron security testing and hacking.</p>
                            <p>You can find it over at <a href="https://github.com/doyensec/awesome-electronjs-hacking">doyensec/awesome-electronjs-hacking</a>.</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">06/11/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">InQL Scanner v2 is out!</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">06/11/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p51" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p51">
                        <div class="col-sm-12 align-justify">
                            <p>A new version of InQL, our GraphQL security testing tool, is out! This release includes a new stand-alone UI, which integrates an <a href="https://github.com/graphql/graphiql">embedded GraphiQL server</a> and many other features.</p>
                            <p>Read more on the blog: <a href="https://blog.doyensec.com/2020/06/11/inql-scanner-v2.html">https://blog.doyensec.com/2020/06/11/inql-scanner-v2.html</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">05/14/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Fuzzing TLS Certificates From Their ASN.1 Grammar</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">05/14/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p50" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p50">
                        <div class="col-sm-12 align-justify">
                            <p>We are building a flexible ASN.1 grammar-based fuzzer for testing TLS certificate parsers. In this blog post, we introduce our research and provide references for security practitioners that are interested in the topic.
                            <p>Find more details at <a href="https://blog.doyensec.com/2020/05/14/asn1fuzz.html">https://blog.doyensec.com/2020/05/14/asn1fuzz.html</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">04/30/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Researching Polymorphic Images for XSS on Google Scholar</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">04/30/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p49" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p49">
                        <div class="col-sm-12 align-justify">
                            <p>Google Scholar was found to be vulnerable to multiple stored XSS using an exotic technique involving polymorphic images. In this blog post, we explain the bug found and all the possible ways to create and leverage polymorphic images for XSS through a survey of how popular image manipulation libraries in web apps behave when presented with a polymorphic image.
                            <p>Find more details at <a href="https://blog.doyensec.com/2020/04/30/polymorphic-images-for-xss.html">https://blog.doyensec.com/2020/04/30/polymorphic-images-for-xss.html</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data publication">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Publication</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">slides</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">04/23/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">InQL: GraphQL security testing made easy!<br>GitHub Security Virtual Meetup (April 23, 2020)</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">04/23/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p48" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p48">
                        <div class="col-sm-12 align-justify">
                            <p>Download the presentation PDF file: <a href="resources/Doyensec_InQL_AB_Github.pdf">Doyensec_InQL_AB_Github.pdf</a></p>
                            <p>Given the rising popularity of GraphQL in web applications, Andrea Brancaleoni presented a turbo-talk on GraphQL security and the use of <a href="https://github.com/doyensec/inql">InQL</a> to augment manual security testing.</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">04/08/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">LibreSSL and OSS-Fuzz</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">04/08/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p47" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p47">
                        <div class="col-sm-12 align-justify">
                            <p>A different pick on bounty programs. Discover how to participate in securing free and open source software, while leveraging your blue team skills.
                            In one of our early research projects we ported <a href="https://www.libressl.org/">libressl</a> to <a href="https://opensource.google/projects/oss-fuzz">OSS-fuzz</a>, a Google sponsored fuzzer infrastructure for open source projects.</p>
                            <p>Find more details at <a href="https://blog.doyensec.com/2020/04/08/libressl-fuzzer.html">https://blog.doyensec.com/2020/04/08/libressl-fuzzer.html</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">CVE-2020-5284</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">03/27/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Next.JS below 9.3.2 Path Traversal</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">03/27/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p46" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p46">
                        <div class="col-sm-12 align-justify">
                            <p>During a customer engagement, Doyensec discovered a <a href="https://github.com/zeit/next.js/security/advisories/GHSA-fq77-7p7r-83rj">path traversal vulnerability</a> affecting the Next.js framework. Attackers could craft special requests to access files in the dist directory (.next), leading to the disclosure of source code and application's secrets. This issue affects Next.js below 9.3.2, when executed using <i>next start</i></p>
                            <p>Release note: <a href="https://github.com/zeit/next.js/releases/tag/v9.3.2">https://github.com/zeit/next.js/releases/tag/v9.3.2</a><br/></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data code">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/code_icon.svg" alt="Code Icon" class="offer-data__image offer-data__image--c" /><p class="offer-data__paragraph">Code</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">InQL</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">03/26/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">A Burp Extension for GraphQL Security Testing</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">03/26/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p45" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p45">
                        <div class="col-sm-12 align-justify">
                            <p><a href="https://github.com/doyensec/inql">InQL Scanner</a> is security testing tool to facilitate GraphQL technology security auditing efforts. The tool can be used as a stand-alone script, or as a <a href="https://portswigger.net/burp">Burp Suite</a> extension.</p>
                            <p>Download the latest release from <a href="https://github.com/doyensec/inql/releases">InQL's Github releases page</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">03/16/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Don't Clone That Repo: Visual Studio Code^2 Execution</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">03/16/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p44" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p44">
                        <div class="col-sm-12 align-justify">
                            <p>Doyensec discovered a Code Execution vulnerability in Microsoft Visual Studio Code Python Extension (16.5M+ installations at the time of writing).</p>
                            <p>Find more details and the Proof of Concept in our blogpost: <a href="https://blog.doyensec.com/2020/03/16/vscode_codeexec.html">https://blog.doyensec.com/2020/03/16/vscode_codeexec.html</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">CVE-2019-17636</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">03/10/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Eclipse Theia Arbitrary File Read</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">03/10/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p43" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p43">
                        <div class="col-sm-12 align-justify">
                            <p>In Eclipse Theia versions 0.3.9 through 0.15.0, one of the default pre-packaged Theia extensions is "Mini-Browser", published as "@theia/mini-browser" on npmjs.com. This extension, for its own needs, exposes a HTTP endpoint that allows to read the content of files on the host's filesystem, given their path, without restrictions on the requester's origin. This design is vulnerable to being exploited remotely through a DNS rebinding attack or a drive-by download of a carefully crafted exploit.</p>
                            <p>Original Theia Bug Tracker issue: <a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=551747">https://bugs.eclipse.org/bugs/show_bug.cgi?id=551747</a><br/>
                            PR of the fix: <a href="https://github.com/eclipse-theia/theia/pull/7205">https://github.com/eclipse-theia/theia/pull/7205</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">CVE-2020-9402</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">03/04/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Django SQL Injection Via Tolerance Parameter in GIS Functions and Aggregates</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">03/04/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p55" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p55">
                        <div class="col-sm-12 align-justify">
                            <p>During a targeted security research effort on the Django Framework, Doyensec discovered that GIS functions and aggregates on Oracle were subject to a <a href="https://www.djangoproject.com/weblog/2020/mar/04/security-releases/">SQL injection</a>, using a suitably crafted <i>tolerance</i> parameter.</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data publication">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Publication</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">deliverable</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">03/02/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Security Auditing of Gravitational's Teleport and Gravity</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">03/02/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p42" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p42">
                        <div class="col-sm-12 align-justify">
                            <p><a href="https://gravitational.com/">Gravitational</a> engaged Doyensec to perform an in-depth security assessment of the <a href="https://gravitational.com/teleport">Teleport</a> and <a href="https://gravitational.com/gravity">Gravity</a> enteprise products. Quoting <a href="https://gravitational.com/blog/security-audit-2019-1/">Gravitational's engineers:</a> <i>"This year, we had an opportunity to work with Doyensec, which provided the most thorough independent analysis of Gravity and Teleport to date."</i></p>                            
                            <p>Download the Teleport testing deliverable PDF file: <a href="resources/Doyensec_Gravitational_Teleport_Report_Q22019_WithRetesting.pdf" target="_blank">Doyensec_Gravitational_Teleport_Report_Q22019_WithRetesting.pdf</a><br>Download the Gravity testing deliverable PDF file: <a href="resources/Doyensec_Gravitational_Gravity_Report_Q22019_WithRetesting.pdf" target="_blank">Doyensec_Gravitational_Gravity_Report_Q22019_WithRetesting.pdf</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">02/24/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Signature Validation Bypass Leading to RCE In Electron-Updater</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">02/24/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p41" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p41">
                        <div class="col-sm-12 align-justify">
                            <p>This blog post illustrates a vulnerability we discovered in the popular <a href="https://github.com/electron-userland/electron-builder">electron-builder</a> package: a signature validation bypass in the auto-update mechanism could be abused to push malicious updates and execute arbitrary code on the victims' machine. In this blog post, we explain the details of the vulnerability and demonstrate why such fail-open designs are inherently dangerous for security.</p>
                            <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html" target="_blank">https://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data code">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/code_icon.svg" alt="Code Icon" class="offer-data__image offer-data__image--c" /><p class="offer-data__paragraph">Code</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">burp-rest-api</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">02/24/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">burp-rest-api</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">05/11/2018</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p40" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p40">
                        <div class="col-sm-12 align-justify">
                            <p><a href="https://github.com/vmware/burp-rest-api/">burp-rest-api</a> is a REST/JSON API to the Burp Suite security tool. Since the first commit back in 2016, burp-rest-api has been the default tool for BurpSuite-powered web scanning automation. Many security professionals and organizations have relied on this extension to orchestrate the work of Burp Spider and Scanner. Starting in June 2018, <a href="https://blog.doyensec.com/2018/11/05/burp-rest-api-v2.html">Doyensec joined VMware</a> in the development and support of the growing burp-rest-api community. </p>
                            <p>Download the source and binary from <a href="https://github.com/vmware/burp-rest-api/releases">burp-rest-api's Github page</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data code">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/code_icon.svg" alt="Code Icon" class="offer-data__image offer-data__image--c" /><p class="offer-data__paragraph">Code</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">electronegativity</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">01/24/2019</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Electronegativity</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">01/24/2019</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p39" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p39">
                        <div class="col-sm-12 align-justify">
                            <p><a href="https://blog.doyensec.com/2019/01/24/electronegativity.html">Electronegativity</a> is a tool to identify misconfigurations and security anti-patterns in Electron-based applications. Electronegativity is the first-of-its-kind tool that helps software developers and security auditors to detect and mitigate potential weaknesses in Electron applications; it is now the baseline for every Electron app’s security review for many professionals and organizations.</p>
                            <p>Download the source and binary from <a href="https://github.com/doyensec/electronegativity/releases">electronegativity's Github page</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data code">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/code_icon.svg" alt="Code Icon" class="offer-data__image offer-data__image--c" /><p class="offer-data__paragraph">Code</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">hopper theme</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">08/08/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Hopper Disassembler Doyensec Theme</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">08/08/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p38" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p38">
                        <div class="col-sm-12 align-justify">
                            <p>Doyensec theme for the Hopper Disassembler - chill and functional for long RE nights.</p>
                            <p>Download <a href="https://github.com/doyensec/HopperTheme">Doyensec.hopperTheme</a> and import the file through the Preferences menu.</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data code">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/code_icon.svg" alt="Code Icon" class="offer-data__image offer-data__image--c" /><p class="offer-data__paragraph">Code</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">training</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">02/02/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Developing Burp Suite Extensions: Training Material</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">02/02/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p37" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p37">
                        <div class="col-sm-12 align-justify">
                            <p>We have open-sourced the repository containing the templates and code for the training <i>"Developing Burp Suite Extensions - From Manual Testing to Security Automation"</i>.</p>
                            <p>The repository is accessible at <a href="https://github.com/doyensec/burpdeveltraining">https://github.com/doyensec/burpdeveltraining</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data publication">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Publication</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">deliverable</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">02/19/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Security Auditing of the Solo Firmware</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">02/19/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p36" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p36">
                        <div class="col-sm-12 align-justify">
                            <p>Download the deliverable PDF file: <a href="resources/Doyensec_SoloKeys_TestingReport_Q12020_v3.pdf">Doyensec_SoloKeys_TestingReport_Q12020_v3.pdf</a></p>
                            <p><a href="https://solokeys.com/">SoloKeys</a> engaged Doyensec to perform a security assessment of the SoloKeys software
                                components. The project commenced on January 20, 2020, and ended on January 31, 2020, requiring one security researcher. The audit resulted in three (3) findings of which one (1) was rated as high severity. </p><p>The final deliverable, <a href="https://github.com/doyensec/SoloKeys-2020Q1-fw-downgrade-PoC">Proof-of-Concept exploits</a> and our instrumentation for AFL fuzzing have been publicly released.</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">post</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">02/03/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Heap Overflow in F-Secure Internet Gatekeeper</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">02/03/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p35" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p35">
                        <div class="col-sm-12 align-justify">
                            <p>This blog post illustrates a vulnerability we discovered in the F-Secure Internet Gatekeeper application. It shows how a simple mistake can lead to an exploitable unauthenticated remote code execution vulnerability.</p>
                            <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2020/02/03/heap-exploit.html" target="_blank">https://blog.doyensec.com/2020/02/03/heap-exploit.html</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data publication">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Publication</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">slides</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">01/24/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Modern Web Security: The Art of Creating and Breaking Assertions<br>AppSec California 2020 (Santa Monica)</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">01/24/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p34" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p34">
                        <div class="col-sm-12 align-justify">
                            <p>Download the presentation PDF file: <a href="resources/Villamil-Modern-Web-Security-Assertions.pdf">Villamil-Modern-Web-Security-Assertions.pdf</a></p>
                            <p>Modern web security is a mix of relatively recent frameworks, methods, languages, and abstractions. The age of injection bugs has come and gone. We are firmly in the age of assertions. This age is widely defined by business logic flaws. On a deeper level this age is governed by the security auditor's skill in creating and breaking assertions in the target. Assertions come from any source and they represent statements of security or functionality made by the target.</p><p>We'll talk about our experience auditing modern web applications over the last three years. We'll talk about the current state of web application security, how its evolved, and where its going. We give examples of assertions (big and small) created and broken during various security audits and the value this brought to the customer. Our goal is to introduce the age of assertions into the zeitgeist and provide auditors a more refined way of thinking beyond injection bugs.</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data publication">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Publication</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">slides</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">01/24/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Democratizing Electron.js Security<br>Covalence 2020 (San Francisco)</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">01/24/2020</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p33" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p33">
                        <div class="col-sm-12 align-justify">
                            <p>Download the presentation PDF file: <a href="resources/Covalence-2020-Carettoni-DemocratizingElectronSecurity.pdf">Covalence-2020-Carettoni-DemocratizingElectronSecurity.pdf</a></p>
                            <p>We love Electron.js so much, that we break it. Since 2017, we have audited dozens of  Electron-based applications and witnessed a remarkable commitment to security. Back then, breaking the framework’s security mechanisms wasn’t too difficult. Fast forward to 2020, Electron.js is getting better, secure-by-default settings are slowly becoming the norm, vulnerability disclosure is handled with consolidated practices, and the dev community is gradually learning all common pitfalls.</p><p>It is better, but there is still a long road ahead. Responsibilities must be equally shared between core contributors and application developers. While the most effective way to bring security capabilities to everyone is to have them built into the framework, it is also important to have a community that considers security as a core value. Closing the web-native desktop gap is not trivial as we have to balance security with usability and framework flexibility.</p><p>In this talk we want to celebrate the progress made and discuss the technical challenges that both Electron.js maintainers and application developers are facing when building secure desktop applications. We will show common vulnerabilities and misconfigurations, discuss root causes and provide practical tips on how to mitigate existing attacks. If you care about Electron.js security, this talk is for you!</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">cve-2019-xxxx</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">08/13/2019</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Matomo - Cookie Signature Bypass Through PHP Type Confusion</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">08/13/2019</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p32" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p32">
                        <div class="col-sm-12 align-justify">
                            <p>The "Cookie" handling class, responsible for validating the signature of a cookie value through the "extractSignedContent" function, is vulnerable to PHP Type Confusion.</p>
                            <p>Matomo Github's PR: <a href="https://github.com/matomo-org/matomo/pull/14760">https://github.com/matomo-org/matomo/pull/14760</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">08/22/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Modern Android Password Managers and FLAG_SECURE Misuse</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">08/22/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p31" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p31">
                            <div class="col-sm-12 align-justify">
                                <p>Doyensec discovered that an old Android vulnerability involving the `FLAG_SECURE` setting still affected popular mobile password managers for Android (1Password, Keeper, Dashlane, et al).</p><p>The article showcases the vulnerabilities found and explains the common underlying problem.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2019/08/22/modern-password-managers-flag-secure.html" target="_blank">https://blog.doyensec.com/2019/08/22/modern-password-managers-flag-secure.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data publication">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Publication</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">slides</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">08/07/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Electronegativity: Identify Misconfigurations and Security Anti-Patterns in Electron Applications</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">08/07/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p30" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p30">
                            <div class="col-sm-12 align-justify">
                                <p>Download the presentation PDF file: <a href="resources/Electronegativity_ArsenalBHUS2019.pdf">Electronegativity_ArsenalBHUS2019.pdf</a></p>
                                <p><a href="https://github.com/doyensec/electronegativity">Electronegativity</a> is a tool to identify misconfigurations and security anti-patterns in Electron-based applications.</p><p>This is the first and only tool capable of detecting potential weaknesses and implementation bugs when developing applications using Electron, as recommended in the official security guidelines of the Electron project. Software developers and security auditors can use this tool to create secure desktop applications using web technologies.</p><p>After being first introduced at Black Hat US 2017 (Electronegativity - A Study of Electron Security) and featured at Black Hat Asia 2019 (Preloading Insecurity In Your Electron), the tool was showcased for the first time ever at the <a href="https://www.blackhat.com/us-19/arsenal/schedule/#electronegativity-identify-misconfigurations-and-security-anti-patterns-in-electron-applications-15485">Black Hat USA 2019 Arsenal</a> where we demonstrated its potential by scanning well-known applications.</p>
                            </div>
                        </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">08/01/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Lessons in auditing cryptocurrency wallets, systems, and infrastructures</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">08/01/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p29" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p29">
                            <div class="col-sm-12 align-justify">
                                <p>In the past three years, Doyensec has been providing security testing services for some of the global brands in the cryptocurrency world. We have audited desktop and mobile wallets, exchanges web interfaces, custody systems, and backbone infrastructure components.</p><p>We have seen many things done right, but also discovered many design and implementation vulnerabilities. Failure is a great lesson in security and can always be turned into positive teaching for the future. Learning from past mistakes is the key to create better systems.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2019/08/01/common-crypto-bugs.html" target="_blank">https://blog.doyensec.com/2019/08/01/common-crypto-bugs.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">07/22/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Jackson gadgets - Anatomy of a vulnerability (CVE-2019-12384)</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">07/22/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p28" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p28">
                            <div class="col-sm-12 align-justify">
                                <p>In this article, we explore a Jackson deserialization bug (CVE-2019-12384) discovered during one of our engagements. In particular, we illustrate how an attacker may leverage this deserialization vulnerability to trigger Server-Side Request Forgery (SSRF) and Remote Code Execution (RCE) using a new technique that relies on the popular JDBC/H2 library.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2019/07/22/jackson-gadgets.html" target="_blank">https://blog.doyensec.com/2019/07/22/jackson-gadgets.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">06/11/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Electronegativity 1.3.0 released!</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">06/11/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p27" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p27">
                            <div class="col-sm-12 align-justify">
                                <p>After the first public release of Electronegativity, we had a great response from the community and the tool quickly became the baseline for every Electron app’s security review for many professionals and organizations. This pushed us forward, improving Electronegativity and expanding our research in the field. Today we are proud to release version 1.3.0 with many new improvements and security checks for your Electron applications.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2019/06/11/electronegativity-1.3.html" target="_blank">https://blog.doyensec.com/2019/06/11/electronegativity-1.3.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">04/24/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">On insecure zip handling, Rubyzip and Metasploit RCE (CVE-2019-5624)</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">04/24/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p26" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p26">
                            <div class="col-sm-12 align-justify">
                                <p>During one of our projects we had the opportunity to audit a Ruby-on-Rails (RoR) web application handling zip files using the Rubyzip gem. Zip files have always been an interesting entry-point to triggering multiple vulnerability types, including path traversals and symlink file overwrite attacks. As the library under testing had symlink processing disabled, we focused on path traversal exploitation. <br>This blog post discusses our results, the “bug” discovered in the library itself and the implication of such an issue in a popular piece of software - Metasploit.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2019/04/24/rubyzip-bug.html" target="_blank">https://blog.doyensec.com/2019/04/24/rubyzip-bug.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">04/03/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Subverting Electron Apps via Insecure Preload</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">04/03/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p25" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p25">
                            <div class="col-sm-12 align-justify">
                                <p>We’re back from BlackHat Asia 2019 where we introduced a relatively unexplored class of vulnerabilities affecting Electron-based applications.<br>Despite popular belief, secure-by-default settings are slowly becoming the norm and the dev community is gradually learning common pitfalls. Isolation is now widely deployed across all top Electron applications and so turning XSS into RCE isn’t child’s play anymore.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2019/04/03/subverting-electron-apps-via-insecure-preload.html" target="_blank">https://blog.doyensec.com/2019/04/03/subverting-electron-apps-via-insecure-preload.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">01/24/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Electronegativity is finally out!</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">01/24/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p24" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p24">
                            <div class="col-sm-12 align-justify">
                                <p>We’re excited to announce the public release of Electronegativity, an opensource tool capable of identifying misconfigurations and security anti-patterns in Electron-based applications.<br>Electronegativity is the first-of-its-kind tool that can help software developers and security auditors to detect and mitigate potential weaknesses in Electron applications.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2019/01/24/electronegativity.html" target="_blank">https://blog.doyensec.com/2019/01/24/electronegativity.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">11/05/2018</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Introducing burp-rest-api v2</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">11/05/2018</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p23" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p23">
                            <div class="col-sm-12 align-justify">
                                <p>Since the first commit back in 2016, burp-rest-api has been the default tool for BurpSuite-powered web scanning automation. Many security professionals and organizations have relied on this extension to orchestrate the work of Burp Spider and Scanner.<br>Today, we’re proud to announce a new major release of the tool: burp-rest-api v2.0.1.<br>Starting in June 2018, Doyensec joined VMware in the development and support of the growing burp-rest-api community. After several years of experience in big tech companies and startups, we understand the need for security automation to improve efficacy and efficiency during software security activities. Unfortunately internal security tools are rarely open-sourced, and still, too many companies are reinventing the wheel. We believe that working together on foundational components, such as burp-rest-api, represents the future of security automation as it empowers companies of any size to build customized solutions.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2018/11/05/burp-rest-api-v2.html" target="_blank">https://blog.doyensec.com/2018/11/05/burp-rest-api-v2.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">07/19/2018</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Instrumenting Electron Apps for Security Testing</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">07/19/2018</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p22" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p22">
                            <div class="col-sm-12 align-justify">
                                <p>With the increasing popularity of the Electron Framework, we have created this post to summarize a few techniques which can be used to instrument an Electron-based application, change its behavior, and perform in-depth security assessments.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2018/07/19/instrumenting-electron-app.html" target="_blank">https://blog.doyensec.com/2018/07/19/instrumenting-electron-app.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">05/24/2018</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Electron Windows Protocol Handler MITM/RCE</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">05/24/2018</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p21" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p21">
                            <div class="col-sm-12 align-justify">
                                <p>As part of an engagement for one of our clients, we analyzed the patch for the recent Electron Windows Protocol handler RCE bug (CVE-2018-1000006) and identified a bypass.<br>Under certain circumstances this bypass leads to session hijacking and remote code execution. The vulnerability is triggered by simply visiting a web page through a browser. Electron apps designed to run on Windows that register themselves as the default handler for a protocol and do not prepend dash-dash in the registry entry are affected.<br>We reported the issue to the Electron core team (via security@electronjs.org) on May 14, 2018 and received immediate notification that they were already working on a patch. The issue was also reported by Google’s Nicolas Ruff a few days earlier.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2018/05/24/electron-win-protocol-handler-bug-bypass.html" target="_blank">https://blog.doyensec.com/2018/05/24/electron-win-protocol-handler-bug-bypass.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">05/17/2018</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">GraphQL - Security Overview and Testing Tips</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">05/17/2018</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p20" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p20">
                            <div class="col-sm-12 align-justify">
                                <p>With the increasing popularity of GraphQL technology, in this blog post we are summarizing some documentation and tips about common security mistakes.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2018/05/17/graphql-security-overview.html" target="_blank">https://blog.doyensec.com/2018/05/17/graphql-security-overview.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">11/15/2017</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Staring into the Spotlight</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">11/15/2017</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p19" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p19">
                            <div class="col-sm-12 align-justify">
                                <p>Spotlight is the all pervasive seeing eye of the OSX userland. It drinks from a spout of file events sprayed out of the kernel and neatly indexes such things for later use. It is an amalgamation of binaries and libraries, all neatly fitted together just to give a user oversight of their box. It presents interesting attack surface and this blog post is an explanation of how some of it works.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2017/11/15/osx-spotlight.html" target="_blank">https://blog.doyensec.com/2017/11/15/osx-spotlight.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data blogpost">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/blogpost_icon.svg" alt="Blog Post Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Blog</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">post</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">08/03/2017</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Modern Alchemy: Turning XSS into RCE</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">08/03/2017</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p18" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p18">
                            <div class="col-sm-12 align-justify">
                                <p>At the recent Black Hat Briefings 2017, Doyensec’s co-founder Luca Carettoni presented a new research on Electron security. After a quick overview of Electron’s security model, we disclosed design weaknesses and implementation bugs that can be leveraged to compromise any Electron-based application. In particular, we discussed a bypass that would allow reliable Remote Code Execution (RCE) when rendering untrusted content (for example via Cross-Site Scripting) even with framework-level protections in place.<br>In this blog post, we would like to provide insight into the bug (CVE-2017-12581) and remediations.</p>
                                <p><strong>Link:</strong> <a href="https://blog.doyensec.com/2017/08/03/electron-framework-security.html" target="_blank">https://blog.doyensec.com/2017/08/03/electron-framework-security.html</a></p>
                            </div>
                        </div>
                </div>
                <div class="offer-data publication">
                        <div class="row">
                            <div class="col-xs-4 col-sm-1 align-center">
                                <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Publication</p>
                            </div>
                            <div class="col-xs-4 col-sm-2 align-center">
                                <p class="offer-data__paragraph">slides</p>
                            </div>
                            <div class="col-sm-4 align-center sm--hidden">
                                <p class="offer-data__paragraph">04/02/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                                <p class="offer-data__paragraph">Preloading Insecurity In Your Electron<br>Black Hat Asia 2019 (Singapore)</p>
                            </div>
                            <div class="col-sm-2 align-center xs--hidden">
                                <p class="offer-data__paragraph">04/02/2019</p>
                            </div>
                            <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                                <a href="#" rel="#p17" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                            </div>
                        </div>
                        <div class="row post-content post-content--margin-top" id="p17">
                            <div class="col-sm-12 align-justify">
                                <p>Download the presentation PDF file: <a href="resources/Asia-19-Carettoni-Preloading-Insecurity-In-Your-Electron.pdf">Asia-19-Carettoni-Preloading-Insecurity-In-Your-Electron.pdf</a></p>
                                <p>Modern browsers are complicated systems. They enforce numerous security mechanisms to ensure isolation between sites, facilitate web security protections and preventing untrusted remote content to compromise the security of the host. When working with Electron (https://electronjs.org/), things get even more complicated. 
                                <br><br>
                                The good news is that building secure Electron-based desktop applications is possible. Despite popular belief, the average Electron-based app is more secure than the average web application. The framework itself is getting better, secure-by-default settings are slowly becoming the norm and the dev community is gradually learning all common pitfalls.
                                <br><br>
                                It's time to shift gears. In this presentation, we will discuss a relatively unexplored class of vulnerabilities that can turn a boring XSS into RCE. Even without a framework bug (e.g. nodeIntegration bypass), BrowserWindow preload introduces a new interesting attack surface to Electron-based applications. 
                                <br><br>
                                Abusing Electron's internal IPC, loggers and other application components we will show how we can turn a Cross-Site Scripting vulnerability into a reliable exploitation mechanism to fully compromise popular desktop applications.</p>
                            </div>
                        </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">cve-2018-18604</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">10/23/2018</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Saml_idp - AssertionConsumerServiceURL Allows Account Takeover/Information Leakage</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">10/23/2018</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p16" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p16">
                        <div class="col-sm-12 align-justify">
                            <p>A vulnerability affects the /saml/auth endpoint of the saml_idp Ruby library (<= v0.7.2) during the processing of SAML requests. The AssertionConsumerServiceURL field is not properly validated. An attacker can abuse this issue to leak the full SAML response or even perform account takeover.</p>
                            <p>saml-idp Github's PR: <a href="https://github.com/saml-idp/saml_idp/pull/102">https://github.com/saml-idp/saml_idp/pull/102</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data publication">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Publication</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">slides</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">09/13/2018</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">A Drone Tale, All Your Drones Are Belong To Us<br>SEC-T 2018 (Stockholm, Sweden)</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">09/13/2018</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p15" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p15">
                        <div class="col-sm-12 align-justify">
                            <p>Download the presentation PDF file: <a href="resources/A-Drone-Tale-by-Paolo-Stagno-SEC-T.pdf">A-Drone-Tale-by-Paolo-Stagno-SEC-T.pdf</a></p>
                            <p>Drones have increased their field of application and are actively used across various industries (law enforcement and first responders, utility companies, governments and universities) to perform critical operations on a daily basis. As a result of that, security has also become a crucial aspect when operating remote-controlled pilotless aircrafts. This talk provides a comprehensive overview of the security model and security issues affecting a popular consumer drone product: the DJI Phantom 3.</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">cve-2018-1000006</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">05/24/2018</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Electron Windows Protocol Handler MITM/RCE</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">05/24/2018</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p14" class="show"><img src="images/plus_circle.svg" alt="Learn More" title="Learn More"/></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p14">
                        <div class="col-sm-12 align-justify">
                            <p>As part of an engagement for one of our clients, Doyensec analyzed the patch for the recent Electron Windows Protocol handler RCE bug (<a href="https://electronjs.org/blog/protocol-handler-fix">CVE-2018-1000006</a>) and identified a bypass.</p>
                            <p>Under certain circumstances this bypass leads to session hijacking and remote code execution. The vulnerability is triggered by simply visiting a web page through a browser. Electron apps designed to run on Windows that register themselves as the default handler for a protocol and do not prepend dash-dash in the registry entry are affected.</p>
				            <p>More details in our blog post: <a href="https://blog.doyensec.com/2018/05/24/electron-win-protocol-handler-bug-bypass.html">https://blog.doyensec.com/2018/05/24/electron-win-protocol-handler-bug-bypass.html</a></p>
			            </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">cve-2017-13850</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">10/31/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">macOS Font Importer Information Disclosure</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">10/31/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p13" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p13">
                        <div class="col-sm-12 align-justify">
                            <p>Doyensec researchers discovered a bug in Apple's macOS Font Importer. Parsing a malicious font file will result in memory corruption and information leakage.</p>
                            <p>Apple's original advisory: <a href="https://support.apple.com/en-us/HT208221">https://support.apple.com/en-us/HT208221</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">cve-2017-13820</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">10/31/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">macOS ATS Information Disclosure</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">10/31/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p12" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p12">
                        <div class="col-sm-12 align-justify">
                            <p>Doyensec researchers discovered a bug in Apple's macOS ATS. Parsing a malicious font file will result in memory corruption and information leakage.</p>
                            <p>Apple's original advisory: <a href="https://support.apple.com/en-us/HT208144">https://support.apple.com/en-us/HT208144</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">cve-2017-12621</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">09/27/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Apache Commons Jelly XML External Entity (XXE)</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">09/27/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p11" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p11">
                        <div class="col-sm-12 align-justify">
                            <p>An XXE vulnerability was identified in Apache Commons Jelly by Doyensec researchers. During Jelly (xml) file parsing with Apache Xerces, if a custom doctype entity is declared with a "SYSTEM" entity with a URL and that entity is used in the body of the Jelly file, during parser instantiation the parser will attempt to connect to said URL. This could lead to XML External Entity (XXE) attacks.</p>
                            <p>Apache Commons' original advisory: <a href="http://commons.apache.org/proper/commons-jelly/security-reports.html#CVE-2017-12621">http://commons.apache.org/proper/commons-jelly/security-reports.html#CVE-2017-12621</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">cve-2017-xxxx</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">09/12/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">QNAP QTS 4.3.3 arbitrary file retrieval (as root)</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">09/12/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p10" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p10">
                        <div class="col-sm-12 align-justify">
                            <p>An arbitrary file retrieval vulnerability was identified in QNAP QTS 4.3.3 File Manager. This functionality can be abused to download arbitrary files from the NAS filesystem as root, leading to system compromise.</p>
                            <p>Download the advisory PDF file: <a href="resources/Doyensec_Advisory_QNAPQTS4.3_FileRetrieval.pdf">Doyensec_Advisory_QNAPQTS4.3_FileRetrieval.pdf</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data publication">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Publication</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">slides</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">07/27/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Electronegativity - A Study of Electron Security<br>Black Hat USA 2017 (Las Vegas, Nevada)</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">07/27/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p9" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p9">
                        <div class="col-sm-12 align-justify">
                            <p>Download the presentation PDF file: <a href="resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security.pdf">us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security.pdf</a></p>
                            <p>Despite all predictions, native Desktop apps are back. After years porting stand-alone apps to the web, we are witnessing an inverse trend. Many companies have started providing native desktop apps built using the same technologies as their web counterparts. In this trend, Github's Electron has become a popular framework to build cross-platform desktop apps with JavaScript, HTML, and CSS. While it seems to be easy, embedding a webapp in a self-contained web environment (Chromium, Node.Js) introduces new security challenges. In this presentation, we will illustrate Electron's security model and describe current isolation mechanisms to prevent untrusted content from using Node.js primitives. Electron's IPC messaging, preloading and other internals will be comprehensively discussed. BrowserWindow and WebView security-relevant options will be also analyzed, together with design-level weaknesses and implementation bugs in Electron.</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data publication">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Publication</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">whitepaper</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">07/27/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Electron Security Checklist - A guide for developers and auditors<br>Black Hat USA 2017 (Las Vegas, Nevada)</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">07/27/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p8" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p8">
                        <div class="col-sm-12 align-justify">
                            <p>Download the whitepaper PDF file: <a href="resources/us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security-wp.pdf">us-17-Carettoni-Electronegativity-A-Study-Of-Electron-Security-wp.pdf</a></p>
                            <p>This document introduces a checklist of security anti-patterns and must-have features to illustrate misconfigurations and vulnerabilities in Electron-based applications. Software developers and security auditors can benefit from this document as it provides a concise, yet comprehensive, summary of potential weaknesses and implementation bugs when developing applications using Electron.</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">cve-2017-2379</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">04/11/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">macOS, iOS, tvOS, watchOS CarbonCore Buffer Overflow</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">04/11/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p7" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p7">
                        <div class="col-sm-12 align-justify">
                            <p>A memory corruption vulnerability was identified in a core component of Apple's font parsing - CarbonCore. This issue could allow an attacker to execute code during the parsing of a malicious Datafork TrueType font.</p>
                            <p>Download the advisory PDF file: <a href="resources/Doyensec_Advisory_FontParsingOSX.pdf">Doyensec_Advisory_FontParsingOSX.pdf</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">cve-2017-2435</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">04/11/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">macOS, iOS, tvOS, watchOS CoreText Corrupted Loop Index</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">04/11/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p6" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p6">
                        <div class="col-sm-12 align-justify">
                            <p>A memory corruption vulnerability was identified in a core component of Apple's font parsing - CoreText. Through a malicious True Type Collection (ttc) font file, CoreText will enter a loop unintentionally referencing out of bounds memory.</p>
                            <p>Download the advisory PDF file: <a href="resources/Doyensec_Advisory_FontParsingOSX.pdf">Doyensec_Advisory_FontParsingOSX.pdf</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">cve-2017-2439</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">04/11/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">macOS, iOS, tvOS, watchOS FontParser Infoleak</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">04/11/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p5" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p5">
                        <div class="col-sm-12 align-justify">
                            <p>An information leakage vulnerability (out-of-bounds read) was discovered in Apple's FontParser, which could allow an attacker to disclose the process memory. This issue could facilitate further exploitation.</p>
                            <p>Download the advisory PDF file: <a href="resources/Doyensec_Advisory_FontParsingOSX.pdf">Doyensec_Advisory_FontParsingOSX.pdf</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data advisory">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/advisory_icon.svg" alt="Advisory Icon" class="offer-data__image offer-data__image--a" /><p class="offer-data__paragraph">Advisory</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">cve-2017-2450</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">04/11/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">macOS, iOS, tvOS, watchOS CoreText Infoleak</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">04/11/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p4" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p4">
                        <div class="col-sm-12 align-justify">
                            <p>An information leakage vulnerability (out-of-bounds read) was discovered in Apple's CoreText, which could allow an attacker to disclose the process memory. This issue could facilitate further exploitation.</p>
                            <p>Download the advisory PDF file: <a href="resources/Doyensec_Advisory_FontParsingOSX.pdf">Doyensec_Advisory_FontParsingOSX.pdf</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data publication">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/publication_icon.svg" alt="Publication Icon" class="offer-data__image offer-data__image--b" /><p class="offer-data__paragraph">Publication</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">slides</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">03/30/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">Application security recipes for fast paced environments<br>Computerworld SEMAFOR 2017 (Warsaw, Poland)</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">03/30/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p3" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p3">
                        <div class="col-sm-12 align-justify">
                            <p>Download the presentation PDF file: <a href="resources/Application_Security_Recipes_for_Fast-Paced_Environments.pdf">Application_Security_Recipes_for_Fast-Paced_Environments.pdf</a></p>
                            <p>Ensuring the security of web applications in continuous delivery environments is an open challenge for many organizations. In fast-paced environments (e.g. startups, agile SDLC shops, etc.), traditional application security practices can slow continuous delivery or simply not address security at all. Instead, a new approach based on security automation and tactical security testing is required to make sure that important components are tested before going live. In this presentation, I will illustrate a few examples on how Silicon Valley-based startups approach security testing while seeking the perfect balance between compliance, security and business productivity.</p>
                        </div>
                    </div>
                </div>
                <div class="offer-data code">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/code_icon.svg" alt="Code Icon" class="offer-data__image offer-data__image--c" /><p class="offer-data__paragraph">Code</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">ajpfuzzer</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">02/27/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">A command-line fuzzer for the Apache JServ Protocol (ajp13)</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">02/27/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p2" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p2">
                        <div class="col-sm-12 align-justify">
                            <p><b>AJPFuzzer</b> is a rudimental fuzzer for the <a href="https://tomcat.apache.org/connectors-doc/ajp/ajpv13a.html">Apache JServ Protocol</a>, also known as 'ajp13'. Built on top of <a href="https://github.com/doyensec/libajp13">libajp13</a>, the tool allows you to create and send AJP messages using an easy-to-use command line interface. AJPFuzzer can craft properly formatted AJP13 messages (all message types) as well as mutations (e.g. bit flipping, messages with type mismatch, etc.), which facilitates security testing efforts targeting AJP-based services like web servers AJP modules, J2EE containers, and many others.</p>
                            <p>Download the source and binary from <a href="https://github.com/doyensec/ajpfuzzer">AJPFuzzer's Github page</a></p>
                        </div>
                    </div>
                </div>
                <div class="offer-data code">
                    <div class="row">
                        <div class="col-xs-4 col-sm-1 align-center">
                            <img src="images/code_icon.svg" alt="Code Icon" class="offer-data__image offer-data__image--c" /><p class="offer-data__paragraph">Code</p>
                        </div>
                        <div class="col-xs-4 col-sm-2 align-center">
                            <p class="offer-data__paragraph">libajp13</p>
                        </div>
                        <div class="col-sm-4 align-center sm--hidden">
                            <p class="offer-data__paragraph">02/27/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-xs--align-center col-xs--margin-top-xs">
                            <p class="offer-data__paragraph">A complete AJPv1.3 Java library</p>
                        </div>
                        <div class="col-sm-2 align-center xs--hidden">
                            <p class="offer-data__paragraph">02/27/2017</p>
                        </div>
                        <div class="col-xs-12 col-sm-1 col-xs--margin-top-xs align-center">
                            <a href="#" rel="#p1" class="show"><img src="images/plus_circle.svg" alt="Lean More" title="Learn More" /></a>
                        </div>
                    </div>
                    <div class="row post-content post-content--margin-top" id="p1">
                        <div class="col-sm-12 align-justify">
                            <p><b>libajp13</b> is a fully featured open source library implementing the Apache JServ Protocol version 1.3 (ajp13), based on the <a href="https://tomcat.apache.org/connectors-doc/ajp/ajpv13a.html">Apache Protocol Reference</a>. Thanks to libajp13, it is now possible to craft properly formatted AJP binary packets with a single line of code.</p>
                            <p>Download the source and binary from <a href="https://github.com/doyensec/libajp13">libajp13's Github page</a></p>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Here ends the Isotope Grid -->
        </section>
        <section class="contact contact--padding">
            <div class="container">
                <div class="row">
                    <div class="col-sm-3">
                        <p></p>
			<p><span class="contact__span">US Office</span><br />350 Townsend Street, Suite 840<br />94107 San Francisco - USA</p>
                        <p><span class="contact__span">John Villamil</span><br /><a href="" class="contact__paragraph-link contact__paragraph-link--white">john@doyensec.com</a></p>
                    </div>
                    <div class="col-sm-3">
                        <p></p>
                        <p><span class="contact__span">EMEA Office</span><br />Ul. Florianska 6, Suite 1B<br />03-707 Warsaw - Poland</p>
                        <p><span class="contact__span">Luca Carettoni</span><br /><a href="" class="contact__paragraph-link contact__paragraph-link--white">luca@doyensec.com</a></p>
                    </div>
                    <div class="col-sm-3">
                        <p></p>
                        <p>When working with Doyensec, you will be working directly with its founders. We are the points of contact, the negotiators, the problem solvers, and the hackers.</p>
                        <p>For proposals or questions: <a href="mailto:info@doyensec.com" class="contact__paragraph-link contact__paragraph-link--orange">info@doyensec.com</a> or <a href="tel:+16283339093" class="contact__paragraph-link contact__paragraph-link--orange">+1 (628) 333 9093</a></p>
                    </div>
                    <div class="col-sm-3 align-center">
                        <a href="careers.html"><img src="images/hiring.svg" alt="Doyensec is hiring!" title="Join us!" class="contact__image" style="height: auto; max-width: 161px; margin-top: 20px;"></a>
                    </div>
                </div>
            </div>
        </section>
        <footer class="footer footer--padding" role="contentinfo">
            <div class="container">
                <div class="row">
                    <div class="col-sm-3 col-xs--align-center">
                        <p>&copy; 2017-2021 Doyensec LLC.</p>
                    </div>
                    <div class="col-sm-6 col-xs--margin-top align-center">
                        <ul class="social__list">
                            <li class="social__item"><a href="https://www.linkedin.com/company/doyensec"><img alt="Doyensec Linkedin Page" src="images/social_in.svg" class="social__image" /></a></a></li>
                            <li class="social__item"><a href="https://twitter.com/doyensec"><img alt="Doyensec Twitter Account" src="images/social_twitter.svg" class="social__image" /></a></li>
                            <li class="social__item"><a href="https://github.com/doyensec"><img alt="Doyensec Github Organization" src="images/social_github.svg" class="social__image" /></a></li>
                        </ul>
                    </div>
                    <div class="col-sm-3 col-xs--margin-top col-xs--align-center col-sm--align-right">
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <script src="js/jquery.min.js" type="text/javascript"></script>
    <script src="js/bootstrap.min.js" type="text/javascript"></script>
    <script src="js/ie10.js" type="text/javascript"></script>
    <script src="js/jquery.showhide.js" type="text/javascript"></script>
    <script src="js/config.js" type="text/javascript"></script>
	<script src="js/isotope.pkgd.min.js" type="text/javascript"></script>
    <script>
        var qsRegex;
        var buttonFilter;

        var $grid =$('#isotopeGridContainer').isotope({
          itemSelector: '.offer-data',
          layoutMode: 'vertical',
            filter: function() {
            var $this = $(this);
            var searchResult = qsRegex ? $this.text().match( qsRegex ) : true;
            var buttonResult = buttonFilter ? $this.is( buttonFilter ) : true;
            return searchResult && buttonResult;
          },
          sortBy : 'date',
          sortAscending : false,
          getSortData: {
            date: function ($elem) {
              return Date.parse($($elem).find('.offer-data__paragraph:last').text());
            }
          }
        });

        var $quicksearch = $('.quicksearch').keyup( debounce( function(e) {
          e.preventDefault();
          qsRegex = new RegExp( escapeRegExp($quicksearch.val()), 'gi' );
          $grid.isotope();
        }) );

        $('.filters-button-group').on( 'click', 'button', function(e) {
          e.preventDefault();
          buttonFilter = $( this ).attr('data-filter');
          $grid.isotope();
        });

        // change is-checked class on buttons
        $('.button-group').each( function( i, buttonGroup ) {
          var $buttonGroup = $( buttonGroup );
          $buttonGroup.on( 'click', 'button', function() {
            $buttonGroup.find('.is-checked').removeClass('is-checked');
            $( this ).addClass('is-checked');
          });
        });

        $('.quicksearch').focus(function() {
            $(this).animate({ width: '160px'});
        }).blur(function() {
            $(this).animate({ width: '85px'});
        });

        // debounce so filtering doesn't happen every millisecond
        function debounce( fn, threshold ) {
          var timeout;
          threshold = threshold || 100;
          return function debounced() {
            clearTimeout( timeout );
            var args = arguments;
            var _this = this;
            function delayed() {
              fn.apply( _this, args );
            }
            timeout = setTimeout( delayed, threshold );
          };
        }

        function escapeRegExp(text) {
          return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
        }
    </script>
</body>
</html>
