<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge"><![endif]-->
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Asciidoctor 1.5.6.1">
<title>Hazelcast IMDG Enterprise Release Notes</title>
<style>
@import url(https://fonts.googleapis.com/css?family=Cousine);
/*! normalize.css v2.1.2 | MIT License | git.io/normalize */
/* ========================================================================== HTML5 display definitions ========================================================================== */
/** Correct `block` display not defined in IE 8/9. */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary { display: block; }

/** Correct `inline-block` display not defined in IE 8/9. */
audio, canvas, video { display: inline-block; }

/** Prevent modern browsers from displaying `audio` without controls. Remove excess height in iOS 5 devices. */
audio:not([controls]) { display: none; height: 0; }

/** Address `[hidden]` styling not present in IE 8/9. Hide the `template` element in IE, Safari, and Firefox < 22. */
[hidden], template { display: none; }

script { display: none !important; }

/* ========================================================================== Base ========================================================================== */
/** 1. Set default font family to sans-serif. 2. Prevent iOS text size adjust after orientation change, without disabling user zoom. */
html { font-family: sans-serif; /* 1 */ -ms-text-size-adjust: 100%; /* 2 */ -webkit-text-size-adjust: 100%; /* 2 */ }

/** Remove default margin. */
body { margin: 0; }

/* ========================================================================== Links ========================================================================== */
/** Remove the gray background color from active links in IE 10. */
a { background: transparent; }

/** Address `outline` inconsistency between Chrome and other browsers. */
a:focus { outline: thin dotted; }

/** Improve readability when focused and also mouse hovered in all browsers. */
a:active, a:hover { outline: 0; }

/* ========================================================================== Typography ========================================================================== */
/** Address variable `h1` font-size and margin within `section` and `article` contexts in Firefox 4+, Safari 5, and Chrome. */
h1 { font-size: 2em; margin: 0.67em 0; }

/** Address styling not present in IE 8/9, Safari 5, and Chrome. */
abbr[title] { border-bottom: 1px dotted; }

/** Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome. */
b, strong { font-weight: bold; }

/** Address styling not present in Safari 5 and Chrome. */
dfn { font-style: italic; }

/** Address differences between Firefox and other browsers. */
hr { -moz-box-sizing: content-box; box-sizing: content-box; height: 0; }

/** Address styling not present in IE 8/9. */
mark { background: #ff0; color: #000; }

/** Correct font family set oddly in Safari 5 and Chrome. */
code, kbd, pre, samp { font-family: monospace, serif; font-size: 0.875em; }

/** Improve readability of pre-formatted text in all browsers. */
pre { white-space: pre-wrap; }

/** Set consistent quote types. */
q { quotes: "\201C" "\201D" "\2018" "\2019"; }

/** Address inconsistent and variable font size in all browsers. */
small { font-size: 80%; }

/** Prevent `sub` and `sup` affecting `line-height` in all browsers. */
sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

/* ========================================================================== Embedded content ========================================================================== */
/** Remove border when inside `a` element in IE 8/9. */
img { border: 0; }

/** Correct overflow displayed oddly in IE 9. */
svg:not(:root) { overflow: hidden; }

/* ========================================================================== Figures ========================================================================== */
/** Address margin not present in IE 8/9 and Safari 5. */
figure { margin: 0; }

/* ========================================================================== Forms ========================================================================== */
/** Define consistent border, margin, and padding. */
fieldset { border: 1px solid #c0c0c0; margin: 0 2px; padding: 0.35em 0.625em 0.75em; }

/** 1. Correct `color` not being inherited in IE 8/9. 2. Remove padding so people aren't caught out if they zero out fieldsets. */
legend { border: 0; /* 1 */ padding: 0; /* 2 */ }

/** 1. Correct font family not being inherited in all browsers. 2. Correct font size not being inherited in all browsers. 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome. */
button, input, select, textarea { font-family: inherit; /* 1 */ font-size: 100%; /* 2 */ margin: 0; /* 3 */ }

/** Address Firefox 4+ setting `line-height` on `input` using `!important` in the UA stylesheet. */
button, input { line-height: normal; }

/** Address inconsistent `text-transform` inheritance for `button` and `select`. All other form control elements do not inherit `text-transform` values. Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+. Correct `select` style inheritance in Firefox 4+ and Opera. */
button, select { text-transform: none; }

/** 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls. 2. Correct inability to style clickable `input` types in iOS. 3. Improve usability and consistency of cursor style between image-type `input` and others. */
button, html input[type="button"], input[type="reset"], input[type="submit"] { -webkit-appearance: button; /* 2 */ cursor: pointer; /* 3 */ }

/** Re-set default cursor for disabled elements. */
button[disabled], html input[disabled] { cursor: default; }

/** 1. Address box sizing set to `content-box` in IE 8/9. 2. Remove excess padding in IE 8/9. */
input[type="checkbox"], input[type="radio"] { box-sizing: border-box; /* 1 */ padding: 0; /* 2 */ }

/** 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome. 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome (include `-moz` to future-proof). */
input[type="search"] { -webkit-appearance: textfield; /* 1 */ -moz-box-sizing: content-box; -webkit-box-sizing: content-box; /* 2 */ box-sizing: content-box; }

/** Remove inner padding and search cancel button in Safari 5 and Chrome on OS X. */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration { -webkit-appearance: none; }

/** Remove inner padding and border in Firefox 4+. */
button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0; }

/** 1. Remove default vertical scrollbar in IE 8/9. 2. Improve readability and alignment in all browsers. */
textarea { overflow: auto; /* 1 */ vertical-align: top; /* 2 */ }

/* ========================================================================== Tables ========================================================================== */
/** Remove most spacing between table cells. */
table { border-collapse: collapse; border-spacing: 0; }

meta.foundation-mq-small { font-family: "only screen and (min-width: 768px)"; width: 768px; }

meta.foundation-mq-medium { font-family: "only screen and (min-width:1280px)"; width: 1280px; }

meta.foundation-mq-large { font-family: "only screen and (min-width:1440px)"; width: 1440px; }

*, *:before, *:after { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }

html, body { font-size: 16px; }

body { background: white; color: #222222; padding: 0; margin: 0; font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif; font-weight: normal; font-style: normal; line-height: 1; position: relative; cursor: auto; }

a:hover { cursor: pointer; }

img, object, embed { max-width: 100%; height: auto; }

object, embed { height: 100%; }

img { -ms-interpolation-mode: bicubic; }

#map_canvas img, #map_canvas embed, #map_canvas object, .map_canvas img, .map_canvas embed, .map_canvas object { max-width: none !important; }

.left { float: left !important; }

.right { float: right !important; }

.text-left { text-align: left !important; }

.text-right { text-align: right !important; }

.text-center { text-align: center !important; }

.text-justify { text-align: justify !important; }

.hide { display: none; }

.antialiased { -webkit-font-smoothing: antialiased; }

img { display: inline-block; vertical-align: middle; }

textarea { height: auto; min-height: 50px; }

select { width: 100%; }

object, svg { display: inline-block; vertical-align: middle; }

.center { margin-left: auto; margin-right: auto; }

.spread { width: 100%; }

p.lead, .paragraph.lead > p, #preamble > .sectionbody > .paragraph:first-of-type p { font-size: 1.21875em; line-height: 1.6; }

.subheader, .admonitionblock td.content > .title, .audioblock > .title, .exampleblock > .title, .imageblock > .title, .listingblock > .title, .literalblock > .title, .stemblock > .title, .openblock > .title, .paragraph > .title, .quoteblock > .title, table.tableblock > .title, .verseblock > .title, .videoblock > .title, .dlist > .title, .olist > .title, .ulist > .title, .qlist > .title, .hdlist > .title { line-height: 1.4; color: #777777; font-weight: 300; margin-top: 0.2em; margin-bottom: 0.5em; }

/* Typography resets */
div, dl, dt, dd, ul, ol, li, h1, h2, h3, #toctitle, .sidebarblock > .content > .title, h4, h5, h6, pre, form, p, blockquote, th, td { margin: 0; padding: 0; direction: ltr; }

/* Default Link Styles */
a { color: #4183c4; text-decoration: none; line-height: inherit; }
a:hover, a:focus { color: #4183c4; }
a img { border: none; }

/* Default paragraph styles */
p { font-family: helvetica, arial, freesans, clean, sans-serif; font-weight: normal; font-size: 1em; line-height: 1.5; margin-bottom: 0.9375em; text-rendering: optimizeLegibility; }
p aside { font-size: 0.875em; line-height: 1.35; font-style: italic; }

/* Default header styles */
h1, h2, h3, #toctitle, .sidebarblock > .content > .title, h4, h5, h6 { font-family: helvetica, arial, freesans, clean, sans-serif; font-weight: bold; font-style: normal; color: #333333; text-rendering: optimizeLegibility; margin-top: 0.2em; margin-bottom: 0.5em; line-height: 1.2125em; }
h1 small, h2 small, h3 small, #toctitle small, .sidebarblock > .content > .title small, h4 small, h5 small, h6 small { font-size: 60%; color: gray; line-height: 0; }

h1 { font-size: 1.25em; }

h2 { font-size: 0.875em; }

h3, #toctitle, .sidebarblock > .content > .title { font-size: 0.8125em; }

h4 { font-size: 0.6875em; }

h5 { font-size: 1em; }

h6 { font-size: 1em; }

hr { border: solid #dddddd; border-width: 1px 0 0; clear: both; margin: 1.25em 0 1.1875em; height: 0; }

/* Helpful Typography Defaults */
em, i { font-style: italic; line-height: inherit; }

strong, b { font-weight: bold; line-height: inherit; }

small { font-size: 60%; line-height: inherit; }

code { font-family: Cousine, Consolas, "Liberation Mono", Courier, monospace; font-weight: normal; color: #c83b41; }

/* Lists */
ul, ol, dl { font-size: 1em; line-height: 1.5; margin-bottom: 0.9375em; list-style-position: outside; font-family: helvetica, arial, freesans, clean, sans-serif; }

ul, ol { margin-left: 0.65625em; }
ul.no-bullet, ol.no-bullet { margin-left: 0.65625em; }

/* Unordered Lists */
ul li ul, ul li ol { margin-left: 1.25em; margin-bottom: 0; font-size: 1em; /* Override nested font-size change */ }
ul.square li ul, ul.circle li ul, ul.disc li ul { list-style: inherit; }
ul.square { list-style-type: square; }
ul.circle { list-style-type: circle; }
ul.disc { list-style-type: disc; }
ul.no-bullet { list-style: none; }

/* Ordered Lists */
ol li ul, ol li ol { margin-left: 1.25em; margin-bottom: 0; }

/* Definition Lists */
dl dt { margin-bottom: 0.3125em; font-weight: bold; }
dl dd { margin-bottom: 1.25em; }

/* Abbreviations */
abbr, acronym { text-transform: uppercase; font-size: 90%; color: #333333; border-bottom: 1px dotted #dddddd; cursor: help; }

abbr { text-transform: none; }

/* Blockquotes */
blockquote { margin: 0 0 0.9375em; padding: 0; border-left: none; }
blockquote cite { display: block; font-size: 0.8125em; color: #666666; }
blockquote cite:before { content: "\2014 \0020"; }
blockquote cite a, blockquote cite a:visited { color: #666666; }

blockquote, blockquote p { line-height: 1.5; color: #666666; }

/* Microformats */
.vcard { display: inline-block; margin: 0 0 1.25em 0; border: 1px solid #dddddd; padding: 0.625em 0.75em; }
.vcard li { margin: 0; display: block; }
.vcard .fn { font-weight: bold; font-size: 0.9375em; }

.vevent .summary { font-weight: bold; }
.vevent abbr { cursor: auto; text-decoration: none; font-weight: bold; border: none; padding: 0 0.0625em; }

@media only screen and (min-width: 768px) { h1, h2, h3, #toctitle, .sidebarblock > .content > .title, h4, h5, h6 { line-height: 1.4; }
  h1 { font-size: 1.875em; }
  h2 { font-size: 2.1em; }
  h3, #toctitle, .sidebarblock > .content > .title { font-size: 1.525em; }
  h4 { font-size: 1.3em; } }
/* Tables */
table { background: white; margin-bottom: 1.25em; border: solid 1px #dddddd; }
table thead, table tfoot { background: whitesmoke; font-weight: bold; }
table thead tr th, table thead tr td, table tfoot tr th, table tfoot tr td { padding: 0.5em 0.625em 0.625em; font-size: 0.875em; color: #222222; text-align: left; }
table tr th, table tr td { padding: 0.5625em 0.625em; font-size: 0.9375em; color: #222222; }
table tr.even, table tr.alt, table tr:nth-of-type(even) { background: #f9f9f9; }
table thead tr th, table tfoot tr th, table tbody tr td, table tr td, table tfoot tr td { display: table-cell; line-height: 1.5; }

body { -moz-osx-font-smoothing: grayscale; -webkit-font-smoothing: antialiased; tab-size: 4; }

h1, h2, h3, #toctitle, .sidebarblock > .content > .title, h4, h5, h6 { line-height: 1.4; }

a:hover, a:focus { text-decoration: underline; }

.clearfix:before, .clearfix:after, .float-group:before, .float-group:after { content: " "; display: table; }
.clearfix:after, .float-group:after { clear: both; }

*:not(pre) 8 font-size: 0.9375em; font-style: normal !important; letter-spacing: 0; padding: 1px 5px 1px 5px; background-color: #f7f7f7; border: 1px solid #dddddd; -webkit-border-radius: 3px; border-radius: 3px; line-height: inherit; word-wrap: break-word; }
*:not(pre) > code.nobreak { word-wrap: normal; }
*:not(pre) > code.nowrap { white-space: nowrap; }

pre, pre > code { line-height: 1.45; color: #333333; font-family: Cousine, Consolas, "Liberation Mono", Courier, monospace; font-size: 0.8375em; font-weight: normal; }

em em { font-style: normal; }

strong strong { font-weight: normal; }

.keyseq { color: #666666; }

kbd { font-family: Cousine, Consolas, "Liberation Mono", Courier, monospace; display: inline-block; color: #333333; font-size: 0.65em; line-height: 1.45; background-color: #f7f7f7; border: 1px solid #ccc; -webkit-border-radius: 3px; border-radius: 3px; -webkit-box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), 0 0 0 0.1em white inset; box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), 0 0 0 0.1em white inset; margin: 0 0.15em; padding: 0.2em 0.5em; vertical-align: middle; position: relative; top: -0.1em; white-space: nowrap; }

.keyseq kbd:first-child { margin-left: 0; }

.keyseq kbd:last-child { margin-right: 0; }

.menuseq, .menuref { color: #000; }

.menuseq b:not(.caret), .menuref { font-weight: inherit; }

.menuseq { word-spacing: -0.02em; }
.menuseq b.caret { font-size: 1.25em; line-height: 0.8; }
.menuseq i.caret { font-weight: bold; text-align: center; width: 0.45em; }

b.button:before, b.button:after { position: relative; top: -1px; font-weight: normal; }

b.button:before { content: "["; padding: 0 3px 0 2px; }

b.button:after { content: "]"; padding: 0 2px 0 3px; }

#header, #content, #footnotes, #footer { width: 100%; margin-left: auto; margin-right: auto; margin-top: 0; margin-bottom: 0; max-width: 62.5em; *zoom: 1; position: relative; padding-left: 0.9375em; padding-right: 0.9375em; }
#header:before, #header:after, #content:before, #content:after, #footnotes:before, #footnotes:after, #footer:before, #footer:after { content: " "; display: table; }
#header:after, #content:after, #footnotes:after, #footer:after { clear: both; }

#content { margin-top: 1.25em; }

#content:before { content: none; }

#header > h1:first-child { color: #333333; font-weight: 300; margin-top: 2.25rem; margin-bottom: 0; }
#header > h1:first-child + #toc { margin-top: 8px; border-top: 1px solid #dddddd; }
#header > h1:only-child, body.toc2 #header > h1:nth-last-child(2) { border-bottom: 1px solid #dddddd; padding-bottom: 8px; }
#header .details { border-bottom: 1px solid #dddddd; line-height: 1.45; padding-top: 0.25em; padding-bottom: 0.25em; padding-left: 0.25em; color: #666666; display: -ms-flexbox; display: -webkit-flex; display: flex; -ms-flex-flow: row wrap; -webkit-flex-flow: row wrap; flex-flow: row wrap; }
#header .details span:first-child { margin-left: -0.125em; }
#header .details span.email a { color: #666666; }
#header .details br { display: none; }
#header .details br + span:before { content: "\00a0\2013\00a0"; }
#header .details br + span.author:before { content: "\00a0\22c5\00a0"; color: #666666; }
#header .details br + span#revremark:before { content: "\00a0|\00a0"; }
#header #revnumber { text-transform: capitalize; }
#header #revnumber:after { content: "\00a0"; }

#content > h1:first-child:not([class]) { color: #333333; font-weight: 300; border-bottom: 1px solid #dddddd; padding-bottom: 8px; margin-top: 0; padding-top: 1rem; margin-bottom: 1.25rem; }

#toc { border-bottom: 0 solid #dddddd; padding-bottom: 0.5em; }
#toc > ul { margin-left: 0.125em; }
#toc ul.sectlevel0 > li > a { font-style: italic; }
#toc ul.sectlevel0 ul.sectlevel1 { margin: 0.5em 0; }
#toc ul { font-family: helvetica, arial, freesans, clean, sans-serif; list-style-type: none; }
#toc li { line-height: 1.3334; margin-top: 0.3334em; }
#toc a { text-decoration: none; }
#toc a:active { text-decoration: underline; }

#toctitle { color: #777777; font-size: 1.2em; }

@media only screen and (min-width: 768px) { #toctitle { font-size: 1.375em; }
  body.toc2 { padding-left: 15em; padding-right: 0; }
  #toc.toc2 { margin-top: 0 !important; background-color: #f7f7f7; position: fixed; width: 15em; left: 0; top: 0; border-right: 1px solid #dddddd; border-top-width: 0 !important; border-bottom-width: 0 !important; z-index: 1000; padding: 1.25em 1em; height: 100%; overflow: auto; }
  #toc.toc2 #toctitle { margin-top: 0; margin-bottom: 0.8rem; font-size: 1.2em; }
  #toc.toc2 > ul { font-size: 0.9em; margin-bottom: 0; }
  #toc.toc2 ul ul { margin-left: 0; padding-left: 1em; }
  #toc.toc2 ul.sectlevel0 ul.sectlevel1 { padding-left: 0; margin-top: 0.5em; margin-bottom: 0.5em; }
  body.toc2.toc-right { padding-left: 0; padding-right: 15em; }
  body.toc2.toc-right #toc.toc2 { border-right-width: 0; border-left: 1px solid #dddddd; left: auto; right: 0; } }
@media only screen and (min-width: 1280px) { body.toc2 { padding-left: 20em; padding-right: 0; }
  #toc.toc2 { width: 20em; }
  #toc.toc2 #toctitle { font-size: 1.375em; }
  #toc.toc2 > ul { font-size: 0.95em; }
  #toc.toc2 ul ul { padding-left: 1.25em; }
  body.toc2.toc-right { padding-left: 0; padding-right: 20em; } }
#content #toc { border-style: solid; border-width: 1px; border-color: #dedede; margin-bottom: 1.25em; padding: 1.25em; background: #f7f7f7; -webkit-border-radius: 3px; border-radius: 3px; }
#content #toc > :first-child { margin-top: 0; }
#content #toc > :last-child { margin-bottom: 0; }

#footer { max-width: 100%; background-color: whitesmoke; padding: 1.25em; }

#footer-text { color: #333333; line-height: 1.35; }

#content { margin-bottom: 0.625em; }

.sect1 { padding-bottom: 0.625em; }

@media only screen and (min-width: 768px) { #content { margin-bottom: 1.25em; }
  .sect1 { padding-bottom: 1.25em; } }
.sect1:last-child { padding-bottom: 0; }

.sect1 + .sect1 { border-top: 0 solid #dddddd; }

#content h1 > a.anchor, h2 > a.anchor, h3 > a.anchor, #toctitle > a.anchor, .sidebarblock > .content > .title > a.anchor, h4 > a.anchor, h5 > a.anchor, h6 > a.anchor { position: absolute; z-index: 1001; width: 1.5ex; margin-left: -1.5ex; display: block; text-decoration: none !important; visibility: hidden; text-align: center; font-weight: normal; }
#content h1 > a.anchor:before, h2 > a.anchor:before, h3 > a.anchor:before, #toctitle > a.anchor:before, .sidebarblock > .content > .title > a.anchor:before, h4 > a.anchor:before, h5 > a.anchor:before, h6 > a.anchor:before { content: "\00A7"; font-size: 0.85em; display: block; padding-top: 0.1em; }
#content h1:hover > a.anchor, #content h1 > a.anchor:hover, h2:hover > a.anchor, h2 > a.anchor:hover, h3:hover > a.anchor, #toctitle:hover > a.anchor, .sidebarblock > .content > .title:hover > a.anchor, h3 > a.anchor:hover, #toctitle > a.anchor:hover, .sidebarblock > .content > .title > a.anchor:hover, h4:hover > a.anchor, h4 > a.anchor:hover, h5:hover > a.anchor, h5 > a.anchor:hover, h6:hover > a.anchor, h6 > a.anchor:hover { visibility: visible; }
#content h1 > a.link, h2 > a.link, h3 > a.link, #toctitle > a.link, .sidebarblock > .content > .title > a.link, h4 > a.link, h5 > a.link, h6 > a.link { color: #333333; text-decoration: none; }
#content h1 > a.link:hover, h2 > a.link:hover, h3 > a.link:hover, #toctitle > a.link:hover, .sidebarblock > .content > .title > a.link:hover, h4 > a.link:hover, h5 > a.link:hover, h6 > a.link:hover { color: #262626; }

.audioblock, .imageblock, .literalblock, .listingblock, .stemblock, .videoblock { margin-bottom: 1.25em; }

.admonitionblock td.content > .title, .audioblock > .title, .exampleblock > .title, .imageblock > .title, .listingblock > .title, .literalblock > .title, .stemblock > .title, .openblock > .title, .paragraph > .title, .quoteblock > .title, table.tableblock > .title, .verseblock > .title, .videoblock > .title, .dlist > .title, .olist > .title, .ulist > .title, .qlist > .title, .hdlist > .title { text-rendering: optimizeLegibility; text-align: left; }

table.tableblock > caption.title { white-space: nowrap; overflow: visible; max-width: 0; }

.paragraph.lead > p, #preamble > .sectionbody > .paragraph:first-of-type p { color: #333333; }

table.tableblock #preamble > .sectionbody > .paragraph:first-of-type p { font-size: inherit; }

.admonitionblock > table { border-collapse: separate; border: 0; background: none; width: 100%; }
.admonitionblock > table td.icon { text-align: center; width: 80px; }
.admonitionblock > table td.icon img { max-width: none; }
.admonitionblock > table td.icon .title { font-weight: bold; font-family: helvetica, arial, freesans, clean, sans-serif; text-transform: uppercase; }
.admonitionblock > table td.content { padding-left: 1.125em; padding-right: 1.25em; border-left: 1px solid #dddddd; color: #666666; }
.admonitionblock > table td.content > :last-child > :last-child { margin-bottom: 0; }

.exampleblock > .content { border-style: solid; border-width: 1px; border-color: #e6e6e6; margin-bottom: 1.25em; padding: 1.25em; background: white; -webkit-border-radius: 3px; border-radius: 3px; }
.exampleblock > .content > :first-child { margin-top: 0; }
.exampleblock > .content > :last-child { margin-bottom: 0; }

.sidebarblock { border-style: solid; border-width: 1px; border-color: #dedede; margin-bottom: 1.25em; padding: 1.25em; background: #f7f7f7; -webkit-border-radius: 3px; border-radius: 3px; }
.sidebarblock > :first-child { margin-top: 0; }
.sidebarblock > :last-child { margin-bottom: 0; }
.sidebarblock > .content > .title { color: #777777; margin-top: 0; border-width: 0 0 1px 0; border-style: solid; border-color: #cacaca; }

.exampleblock > .content > :last-child > :last-child, .exampleblock > .content .olist > ol > li:last-child > :last-child, .exampleblock > .content .ulist > ul > li:last-child > :last-child, .exampleblock > .content .qlist > ol > li:last-child > :last-child, .sidebarblock > .content > :last-child > :last-child, .sidebarblock > .content .olist > ol > li:last-child > :last-child, .sidebarblock > .content .ulist > ul > li:last-child > :last-child, .sidebarblock > .content .qlist > ol > li:last-child > :last-child { margin-bottom: 0; }

.literalblock pre, .listingblock pre:not(.highlight), .listingblock pre[class="highlight"], .listingblock pre[class^="highlight "], .listingblock pre.CodeRay, .listingblock pre.prettyprint { background: #f9f9f9; }
.sidebarblock .literalblock pre, .sidebarblock .listingblock pre:not(.highlight), .sidebarblock .listingblock pre[class="highlight"], .sidebarblock .listingblock pre[class^="highlight "], .sidebarblock .listingblock pre.CodeRay, .sidebarblock .listingblock pre.prettyprint { background: #f2f1f1; }

.literalblock pre, .literalblock pre[class], .listingblock pre, .listingblock pre[class] { border: 2px solid #d4d4d4; -webkit-border-radius: 3px; border-radius: 3px; word-wrap: break-word; padding: 0.75em; font-size: 0.8125em; }
.literalblock pre.nowrap, .literalblock pre[class].nowrap, .listingblock pre.nowrap, .listingblock pre[class].nowrap { overflow-x: auto; white-space: pre; word-wrap: normal; }
@media only screen and (min-width: 768px) { .literalblock pre, .literalblock pre[class], .listingblock pre, .listingblock pre[class] { font-size: 0.90625em; } }
@media only screen and (min-width: 1280px) { .literalblock pre, .literalblock pre[class], .listingblock pre, .listingblock pre[class] { font-size: 1em; } }

.literalblock.output pre { color: #f9f9f9; background-color: #333333; }

.listingblock pre.highlightjs { padding: 0; }
.listingblock pre.highlightjs > code { padding: 0.75em; -webkit-border-radius: 3px; border-radius: 3px; }

.listingblock > .content { position: relative; }

.listingblock code[data-lang]:before { display: none; content: attr(data-lang); position: absolute; font-size: 0.75em; top: 0.425rem; right: 0.5rem; line-height: 1; text-transform: uppercase; color: #999; }

.listingblock:hover code[data-lang]:before { display: block; }

.listingblock.terminal pre .command:before { content: attr(data-prompt); padding-right: 0.5em; color: #999; }

.listingblock.terminal pre .command:not([data-prompt]):before { content: "$"; }

table.pyhltable { border-collapse: separate; border: 0; margin-bottom: 0; background: none; }

table.pyhltable td { vertical-align: top; padding-top: 0; padding-bottom: 0; line-height: 1.45; }

table.pyhltable td.code { padding-left: .75em; padding-right: 0; }

pre.pygments .lineno, table.pyhltable td:not(.code) { color: #999; padding-left: 0; padding-right: .5em; border-right: 1px solid #dddddd; }

pre.pygments .lineno { display: inline-block; margin-right: .25em; }

table.pyhltable .linenodiv { background: none !important; padding-right: 0 !important; }

.quoteblock { margin: 0 1em 0.9375em 1.5em; display: table; }
.quoteblock > .title { margin-left: -1.5em; margin-bottom: 0.75em; }
.quoteblock blockquote, .quoteblock blockquote p { color: #666666; font-size: 1.15rem; line-height: 1.75; word-spacing: 0.1em; letter-spacing: 0; font-style: italic; text-align: justify; }
.quoteblock blockquote { margin: 0; padding: 0; border: 0; }
.quoteblock blockquote:before { content: "\201c"; float: left; font-size: 2.75em; font-weight: bold; line-height: 0.6em; margin-left: -0.6em; color: #777777; text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); }
.quoteblock blockquote > .paragraph:last-child p { margin-bottom: 0; }
.quoteblock .attribution { margin-top: 0.5em; margin-right: 0.5ex; text-align: right; }
.quoteblock .quoteblock { margin-left: 0; margin-right: 0; padding: 0.5em 0; border-left: 3px solid #666666; }
.quoteblock .quoteblock blockquote { padding: 0 0 0 0.75em; }
.quoteblock .quoteblock blockquote:before { display: none; }

.verseblock { margin: 0 1em 0.9375em 1em; }
.verseblock pre { font-family: "Open Sans", "DejaVu Sans", sans; font-size: 1.15rem; color: #666666; font-weight: 300; text-rendering: optimizeLegibility; }
.verseblock pre strong { font-weight: 400; }
.verseblock .attribution { margin-top: 1.25rem; margin-left: 0.5ex; }

.quoteblock .attribution, .verseblock .attribution { font-size: 0.8125em; line-height: 1.45; font-style: italic; }
.quoteblock .attribution br, .verseblock .attribution br { display: none; }
.quoteblock .attribution cite, .verseblock .attribution cite { display: block; letter-spacing: -0.025em; color: #666666; }

.quoteblock.abstract { margin: 0 0 0.9375em 0; display: block; }
.quoteblock.abstract blockquote, .quoteblock.abstract blockquote p { text-align: left; word-spacing: 0; }
.quoteblock.abstract blockquote:before, .quoteblock.abstract blockquote p:first-of-type:before { display: none; }

table.tableblock { max-width: 100%; border-collapse: separate; }
table.tableblock td > .paragraph:last-child p > p:last-child, table.tableblock th > p:last-child, table.tableblock td > p:last-child { margin-bottom: 0; }

table.tableblock, th.tableblock, td.tableblock { border: 0 solid #dddddd; }

table.grid-all > thead > tr > .tableblock, table.grid-all > tbody > tr > .tableblock { border-width: 0 1px 1px 0; }

table.grid-all > tfoot > tr > .tableblock { border-width: 1px 1px 0 0; }

table.grid-cols > * > tr > .tableblock { border-width: 0 1px 0 0; }

table.grid-rows > thead > tr > .tableblock, table.grid-rows > tbody > tr > .tableblock { border-width: 0 0 1px 0; }

table.grid-rows > tfoot > tr > .tableblock { border-width: 1px 0 0 0; }

table.grid-all > * > tr > .tableblock:last-child, table.grid-cols > * > tr > .tableblock:last-child { border-right-width: 0; }

table.grid-all > tbody > tr:last-child > .tableblock, table.grid-all > thead:last-child > tr > .tableblock, table.grid-rows > tbody > tr:last-child > .tableblock, table.grid-rows > thead:last-child > tr > .tableblock { border-bottom-width: 0; }

table.frame-all { border-width: 1px; }

table.frame-sides { border-width: 0 1px; }

table.frame-topbot { border-width: 1px 0; }

th.halign-left, td.halign-left { text-align: left; }

th.halign-right, td.halign-right { text-align: right; }

th.halign-center, td.halign-center { text-align: center; }

th.valign-top, td.valign-top { vertical-align: top; }

th.valign-bottom, td.valign-bottom { vertical-align: bottom; }

th.valign-middle, td.valign-middle { vertical-align: middle; }

table thead th, table tfoot th { font-weight: bold; }

tbody tr th { display: table-cell; line-height: 1.5; background: whitesmoke; }

tbody tr th, tbody tr th p, tfoot tr th, tfoot tr th p { color: #222222; font-weight: bold; }

p.tableblock > code:only-child { background: none; padding: 0; }

p.tableblock { font-size: 1em; }

td > div.verse { white-space: pre; }

ol { margin-left: 0.90625em; }

ul li ol { margin-left: 0.65625em; }

dl dd { margin-left: 1.125em; }

dl dd:last-child, dl dd:last-child > :last-child { margin-bottom: 0; }

ol > li p, ul > li p, ul dd, ol dd, .olist .olist, .ulist .ulist, .ulist .olist, .olist .ulist { margin-bottom: 0.46875em; }

ul.checklist, ul.none, ol.none, ul.no-bullet, ol.no-bullet, ol.unnumbered, ul.unstyled, ol.unstyled { list-style-type: none; }

ul.no-bullet, ol.no-bullet, ol.unnumbered { margin-left: 0.625em; }

ul.unstyled, ol.unstyled { margin-left: 0; }

ul.checklist { margin-left: 0.625em; }

ul.checklist li > p:first-child > .fa-square-o:first-child, ul.checklist li > p:first-child > .fa-check-square-o:first-child { width: 1.25em; font-size: 0.8em; position: relative; bottom: 0.125em; }

ul.checklist li > p:first-child > input[type="checkbox"]:first-child { margin-right: 0.25em; }

ul.inline { display: -ms-flexbox; display: -webkit-box; display: flex; -ms-flex-flow: row wrap; -webkit-flex-flow: row wrap; flex-flow: row wrap; list-style: none; margin: 0 0 0.46875em -0.9375em; }

ul.inline > li { margin-left: 0.9375em; }

.unstyled dl dt { font-weight: normal; font-style: normal; }

ol.arabic { list-style-type: decimal; }

ol.decimal { list-style-type: decimal-leading-zero; }

ol.loweralpha { list-style-type: lower-alpha; }

ol.upperalpha { list-style-type: upper-alpha; }

ol.lowerroman { list-style-type: lower-roman; }

ol.upperroman { list-style-type: upper-roman; }

ol.lowergreek { list-style-type: lower-greek; }

.hdlist > table, .colist > table { border: 0; background: none; }
.hdlist > table > tbody > tr, .colist > table > tbody > tr { background: none; }

td.hdlist1, td.hdlist2 { vertical-align: top; padding: 0 0.625em; }

td.hdlist1 { font-weight: bold; padding-bottom: 0.9375em; }

.literalblock + .colist, .listingblock + .colist { margin-top: -0.5em; }

.colist td:not([class]):first-child { padding: 0.4em 0.75em 0 0.75em; line-height: 1; vertical-align: top; }
.colist td:not([class]):first-child img { max-width: none; }
.colist td:not([class]):last-child { padding: 0.25em 0; }

.thumb, .th { line-height: 0; display: inline-block; border: solid 4px white; -webkit-box-shadow: 0 0 0 1px #dddddd; box-shadow: 0 0 0 1px #dddddd; }

.imageblock.left, .imageblock[style*="float: left"] { margin: 0.25em 0.625em 1.25em 0; }
.imageblock.right, .imageblock[style*="float: right"] { margin: 0.25em 0 1.25em 0.625em; }
.imageblock > .title { margin-bottom: 0; }
.imageblock.thumb, .imageblock.th { border-width: 6px; }
.imageblock.thumb > .title, .imageblock.th > .title { padding: 0 0.125em; }

.image.left, .image.right { margin-top: 0.25em; margin-bottom: 0.25em; display: inline-block; line-height: 0; }
.image.left { margin-right: 0.625em; }
.image.right { margin-left: 0.625em; }

a.image { text-decoration: none; display: inline-block; }
a.image object { pointer-events: none; }

sup.footnote, sup.footnoteref { font-size: 0.875em; position: static; vertical-align: super; }
sup.footnote a, sup.footnoteref a { text-decoration: none; }
sup.footnote a:active, sup.footnoteref a:active { text-decoration: underline; }

#footnotes { padding-top: 0.75em; padding-bottom: 0.75em; margin-bottom: 0.625em; }
#footnotes hr { width: 20%; min-width: 6.25em; margin: -0.25em 0 0.75em 0; border-width: 1px 0 0 0; }
#footnotes .footnote { padding: 0 0.375em 0 0.225em; line-height: 1.3334; font-size: 0.875em; margin-left: 1.2em; margin-bottom: 0.2em; }
#footnotes .footnote a:first-of-type { font-weight: bold; text-decoration: none; margin-left: -1.05em; }
#footnotes .footnote:last-of-type { margin-bottom: 0; }
#content #footnotes { margin-top: -0.625em; margin-bottom: 0; padding: 0.75em 0; }

.gist .file-data > table { border: 0; background: #fff; width: 100%; margin-bottom: 0; }
.gist .file-data > table td.line-data { width: 99%; }

div.unbreakable { page-break-inside: avoid; }

.big { font-size: larger; }

.small { font-size: smaller; }

.underline { text-decoration: underline; }

.overline { text-decoration: overline; }

.line-through { text-decoration: line-through; }

.aqua { color: #00bfbf; }

.aqua-background { background-color: #00fafa; }

.black { color: black; }

.black-background { background-color: black; }

.blue { color: #0000bf; }

.blue-background { background-color: #0000fa; }

.fuchsia { color: #bf00bf; }

.fuchsia-background { background-color: #fa00fa; }

.gray { color: #606060; }

.gray-background { background-color: #7d7d7d; }

.green { color: #006000; }

.green-background { background-color: #007d00; }

.lime { color: #00bf00; }

.lime-background { background-color: #00fa00; }

.maroon { color: #600000; }

.maroon-background { background-color: #7d0000; }

.navy { color: #000060; }

.navy-background { background-color: #00007d; }

.olive { color: #606000; }

.olive-background { background-color: #7d7d00; }

.purple { color: #600060; }

.purple-background { background-color: #7d007d; }

.red { color: #bf0000; }

.red-background { background-color: #fa0000; }

.silver { color: #909090; }

.silver-background { background-color: #bcbcbc; }

.teal { color: #006060; }

.teal-background { background-color: #007d7d; }

.white { color: #bfbfbf; }

.white-background { background-color: #fafafa; }

.yellow { color: #bfbf00; }

.yellow-background { background-color: #fafa00; }

span.icon > .fa { cursor: default; }
a span.icon > .fa { cursor: inherit; }

.admonitionblock td.icon [class^="fa icon-"] { font-size: 2.5em; text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); cursor: default; }
.admonitionblock td.icon .icon-note:before { content: "\f05a"; color: #2e6295; }
.admonitionblock td.icon .icon-tip:before { content: "\f0eb"; text-shadow: 1px 1px 2px rgba(155, 155, 0, 0.8); color: #111; }
.admonitionblock td.icon .icon-warning:before { content: "\f071"; color: #bf6900; }
.admonitionblock td.icon .icon-caution:before { content: "\f06d"; color: #bf3400; }
.admonitionblock td.icon .icon-important:before { content: "\f06a"; color: #bf0000; }

.conum[data-value] { display: inline-block; color: #fff !important; background-color: #333333; -webkit-border-radius: 100px; border-radius: 100px; text-align: center; font-size: 0.75em; width: 1.67em; height: 1.67em; line-height: 1.67em; font-family: "Open Sans", "DejaVu Sans", sans-serif; font-style: normal; font-weight: bold; }
.conum[data-value] * { color: #fff !important; }
.conum[data-value] + b { display: none; }
.conum[data-value]:after { content: attr(data-value); }
pre .conum[data-value] { position: relative; top: -0.125em; }

b.conum * { color: inherit !important; }

.conum:not([data-value]):empty { display: none; }

p.lead, .paragraph.lead > p, #preamble > .sectionbody > .paragraph:first-of-type p { font-size: 1em; color: #666666; }

h2 { color: #325D72; border-bottom: 1px solid #dddddd; }

#content h1 > a.anchor, h2 > a.anchor, h3 > a.anchor, #toctitle > a.anchor, .sidebarblock > .content > .title > a.anchor, h4 > a.anchor, h5 > a.anchor, h6 > a.anchor { color: #333333; }

#header, #content, #footnotes { max-width: 700px; padding-left: 0; padding-right: 0; }

body.toc2.toc-left #toc.toc2 #toctitle { font-size: 0.9375em; }

.olist.procedure > ol { counter-reset: li; list-style: none; position: relative; }
.olist.procedure > ol > li { position: relative; padding: 5px 0 5px 55px; margin-bottom: 5px; }
.olist.procedure > ol > li:before { content: counter(li); counter-increment: li; position: absolute; top: 0; left: 0; height: 100%; width: 30px; padding: 0 10px 0 0; color: #999; font-size: 1.375em; font-weight: bold; line-height: 1.6; text-align: right; border-right: 1px solid #ddd; }

.quoteblock blockquote { padding-left: 1em; }

.sidebarblock > .content > .title { margin-top: -20px; margin-right: -20px; margin-left: -20px; margin-bottom: 20px; padding: 1em; font-size: 0.75em; background: #eaeaea; }

.literalblock pre, .listingblock pre { background: #f9f9f9; }

</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css">
<style>
/* Stylesheet for CodeRay to match GitHub theme | MIT License | http://foundation.zurb.com */
/*pre.CodeRay {background-color:#f7f7f8;}*/
.CodeRay .line-numbers{border-right:1px solid #d8d8d8;padding:0 0.5em 0 .25em}
.CodeRay span.line-numbers{display:inline-block;margin-right:.5em;color:rgba(0,0,0,.3)}
.CodeRay .line-numbers strong{color:rgba(0,0,0,.4)}
table.CodeRay{border-collapse:separate;border-spacing:0;margin-bottom:0;border:0;background:none}
table.CodeRay td{vertical-align: top;line-height:1.45}
table.CodeRay td.line-numbers{text-align:right}
table.CodeRay td.line-numbers>pre{padding:0;color:rgba(0,0,0,.3)}
table.CodeRay td.code{padding:0 0 0 .5em}
table.CodeRay td.code>pre{padding:0}
.CodeRay .debug{color:#fff !important;background:#000080 !important}
.CodeRay .annotation{color:#007}
.CodeRay .attribute-name{color:#000080}
.CodeRay .attribute-value{color:#700}
.CodeRay .binary{color:#509}
.CodeRay .comment{color:#998;font-style:italic}
.CodeRay .char{color:#04d}
.CodeRay .char .content{color:#04d}
.CodeRay .char .delimiter{color:#039}
.CodeRay .class{color:#458;font-weight:bold}
.CodeRay .complex{color:#a08}
.CodeRay .constant,.CodeRay .predefined-constant{color:#008080}
.CodeRay .color{color:#099}
.CodeRay .class-variable{color:#369}
.CodeRay .decorator{color:#b0b}
.CodeRay .definition{color:#099}
.CodeRay .delimiter{color:#000}
.CodeRay .doc{color:#970}
.CodeRay .doctype{color:#34b}
.CodeRay .doc-string{color:#d42}
.CodeRay .escape{color:#666}
.CodeRay .entity{color:#800}
.CodeRay .error{color:#808}
.CodeRay .exception{color:inherit}
.CodeRay .filename{color:#099}
.CodeRay .function{color:#900;font-weight:bold}
.CodeRay .global-variable{color:#008080}
.CodeRay .hex{color:#058}
.CodeRay .integer,.CodeRay .float{color:#099}
.CodeRay .include{color:#555}
.CodeRay .inline{color:#000}
.CodeRay .inline .inline{background:#ccc}
.CodeRay .inline .inline .inline{background:#bbb}
.CodeRay .inline .inline-delimiter{color:#d14}
.CodeRay .inline-delimiter{color:#d14}
.CodeRay .important{color:#555;font-weight:bold}
.CodeRay .interpreted{color:#b2b}
.CodeRay .instance-variable{color:#008080}
.CodeRay .label{color:#970}
.CodeRay .local-variable{color:#963}
.CodeRay .octal{color:#40e}
.CodeRay .predefined{color:#369}
.CodeRay .preprocessor{color:#579}
.CodeRay .pseudo-class{color:#555}
.CodeRay .directive{font-weight:bold}
.CodeRay .type{font-weight:bold}
.CodeRay .predefined-type{color:inherit}
.CodeRay .reserved,.CodeRay .keyword {color:#000;font-weight:bold}
.CodeRay .key{color:#808}
.CodeRay .key .delimiter{color:#606}
.CodeRay .key .char{color:#80f}
.CodeRay .value{color:#088}
.CodeRay .regexp .delimiter{color:#808}
.CodeRay .regexp .content{color:#808}
.CodeRay .regexp .modifier{color:#808}
.CodeRay .regexp .char{color:#d14}
.CodeRay .regexp .function{color:#404;font-weight:bold}
.CodeRay .string{color:#d20}
.CodeRay .string .string .string{background:#ffd0d0}
.CodeRay .string .content{color:#d14}
.CodeRay .string .char{color:#d14}
.CodeRay .string .delimiter{color:#d14}
.CodeRay .shell{color:#d14}
.CodeRay .shell .delimiter{color:#d14}
.CodeRay .symbol{color:#990073}
.CodeRay .symbol .content{color:#a60}
.CodeRay .symbol .delimiter{color:#630}
.CodeRay .tag{color:#008080}
.CodeRay .tag-special{color:#d70}
.CodeRay .variable{color:#036}
.CodeRay .insert{background:#afa}
.CodeRay .delete{background:#faa}
.CodeRay .change{color:#aaf;background:#007}
.CodeRay .head{color:#f8f;background:#505}
.CodeRay .insert .insert{color:#080}
.CodeRay .delete .delete{color:#800}
.CodeRay .change .change{color:#66f}
.CodeRay .head .head{color:#f4f}
</style>
<link rel="icon" href="images/favicon.ico" type="image/x-icon">
<meta name="keywords" content="open source, documentation, imdg, hazelcast, release notes">
<meta name="description" content="Hazelcast IMDG Enterprise Edition Release Notes lists the new features, enhancements and fixed issues for each Hazelcast IMDG release.">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.3.1/themes/default/style.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.3.1/jstree.min.js"></script>
<script src="https://unpkg.com/lunr/lunr.js"></script>

<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-M267KFN');</script>
<!-- End Google Tag Manager-->
</head>
<body class="article toc2 toc-left">
<div id="header">
<div id="toc" class="toc2">
<div id="toctitle">Table of Contents</div>
<ul class="sectlevel1">
<li><a href="#hazelcast-imdg-enterprise-release-notes">Hazelcast IMDG Enterprise Release Notes</a>
<ul class="sectlevel2">
<li><a href="#4-2-2">4.2.2</a></li>
<li><a href="#4-2-1">4.2.1</a></li>
<li><a href="#4-2">4.2</a></li>
<li><a href="#4-1-6">4.1.6</a></li>
<li><a href="#4-1-5">4.1.5</a></li>
<li><a href="#4-1-4">4.1.4</a></li>
<li><a href="#4-1-3">4.1.3</a></li>
<li><a href="#4-1-2">4.1.2</a></li>
<li><a href="#4-1-1">4.1.1</a></li>
<li><a href="#4-1">4.1</a></li>
<li><a href="#4-0-3">4.0.3</a></li>
<li><a href="#4-0-2">4.0.2</a></li>
<li><a href="#4-0-1">4.0.1</a></li>
<li><a href="#4-0">4.0</a></li>
<li><a href="#3-12-12">3.12.12</a></li>
<li><a href="#3-12-11">3.12.11</a></li>
<li><a href="#3-12-10">3.12.10</a></li>
<li><a href="#3-12-9">3.12.9</a></li>
<li><a href="#3-12-8">3.12.8</a></li>
<li><a href="#3-12-7">3.12.7</a></li>
<li><a href="#3-12-6">3.12.6</a></li>
<li><a href="#3-12-5">3.12.5</a></li>
<li><a href="#3-12-4">3.12.4</a></li>
<li><a href="#3-12-3">3.12.3</a></li>
<li><a href="#3-12-2">3.12.2</a></li>
<li><a href="#3-12-1">3.12.1</a></li>
<li><a href="#3-12">3.12</a></li>
<li><a href="#3-11-7">3.11.7</a></li>
<li><a href="#3-11-6">3.11.6</a></li>
<li><a href="#3-11-5">3.11.5</a></li>
<li><a href="#3-11-4">3.11.4</a></li>
<li><a href="#3-11-3">3.11.3</a></li>
<li><a href="#3-11-2">3.11.2</a></li>
<li><a href="#3-11-1">3.11.1</a></li>
<li><a href="#3-11">3.11</a></li>
<li><a href="#3-10-7">3.10.7</a></li>
<li><a href="#3-10-6">3.10.6</a></li>
<li><a href="#3-10-5">3.10.5</a></li>
<li><a href="#3-10-4">3.10.4</a></li>
<li><a href="#3-10-3">3.10.3</a></li>
<li><a href="#3-10-2">3.10.2</a></li>
<li><a href="#3-10-1">3.10.1</a></li>
<li><a href="#3-10">3.10</a></li>
<li><a href="#3-9-4">3.9.4</a></li>
<li><a href="#3-9-3">3.9.3</a></li>
<li><a href="#3-9-2">3.9.2</a></li>
<li><a href="#3-9-1">3.9.1</a></li>
<li><a href="#3-9">3.9</a></li>
<li><a href="#3-8-9">3.8.9</a></li>
<li><a href="#3-8-8">3.8.8</a></li>
<li><a href="#3-8-7">3.8.7</a></li>
<li><a href="#3-8-6">3.8.6</a></li>
<li><a href="#3-8-5">3.8.5</a></li>
<li><a href="#3-8-4">3.8.4</a></li>
<li><a href="#3-8-3">3.8.3</a></li>
<li><a href="#3-8-2">3.8.2</a></li>
<li><a href="#3-8-1">3.8.1</a></li>
<li><a href="#3-8">3.8</a></li>
<li><a href="#3-7-8">3.7.8</a></li>
<li><a href="#3-7-7">3.7.7</a></li>
<li><a href="#3-7-6">3.7.6</a></li>
<li><a href="#3-7-5">3.7.5</a></li>
<li><a href="#3-7-4">3.7.4</a></li>
<li><a href="#3-7-3">3.7.3</a></li>
<li><a href="#3-7-2">3.7.2</a></li>
<li><a href="#3-7-1">3.7.1</a></li>
<li><a href="#3-7">3.7</a></li>
<li><a href="#3-6-8">3.6.8</a></li>
<li><a href="#3-6-7">3.6.7</a></li>
<li><a href="#3-6-6">3.6.6</a></li>
<li><a href="#3-6-5">3.6.5</a></li>
<li><a href="#3-6-4">3.6.4</a></li>
<li><a href="#3-6-3">3.6.3</a></li>
<li><a href="#3-6-2">3.6.2</a></li>
<li><a href="#3-6-1">3.6.1</a></li>
<li><a href="#3-6">3.6</a></li>
<li><a href="#3-5-5">3.5.5</a></li>
<li><a href="#3-5-4">3.5.4</a></li>
<li><a href="#3-5-3">3.5.3</a></li>
<li><a href="#3-5-2">3.5.2</a></li>
<li><a href="#3-5-1">3.5.1</a></li>
<li><a href="#3-5">3.5</a></li>
<li><a href="#3-4-8">3.4.8</a></li>
<li><a href="#3-4-7">3.4.7</a></li>
<li><a href="#3-4-6">3.4.6</a></li>
<li><a href="#3-4-5">3.4.5</a></li>
<li><a href="#3-4-4">3.4.4</a></li>
<li><a href="#3-4-3">3.4.3</a></li>
<li><a href="#3-4-2">3.4.2</a></li>
<li><a href="#3-4-1">3.4.1</a></li>
<li><a href="#3-4">3.4</a></li>
<li><a href="#3-3-5">3.3.5</a></li>
<li><a href="#3-3-4">3.3.4</a></li>
<li><a href="#3-3-3">3.3.3</a></li>
<li><a href="#3-3-2">3.3.2</a></li>
<li><a href="#3-3-1">3.3.1</a></li>
<li><a href="#3-3">3.3</a></li>
<li><a href="#3-2-7">3.2.7</a></li>
<li><a href="#3-2-6">3.2.6</a></li>
<li><a href="#3-2-5">3.2.5</a></li>
<li><a href="#3-2-4">3.2.4</a></li>
<li><a href="#3-2-3">3.2.3</a></li>
<li><a href="#3-2-2">3.2.2</a></li>
<li><a href="#3-2-1">3.2.1</a></li>
<li><a href="#3-2">3.2</a></li>
<li><a href="#3-1-9">3.1.9</a></li>
<li><a href="#3-1-8">3.1.8</a></li>
<li><a href="#3-0-3">3.0.3</a></li>
<li><a href="#2-6-9">2.6.9</a></li>
<li><a href="#2-6-8">2.6.8</a></li>
<li><a href="#2-6-6">2.6.6</a></li>
<li><a href="#2-6-3">2.6.3</a></li>
<li><a href="#2-6-2">2.6.2</a></li>
<li><a href="#2-6-1">2.6.1</a></li>
<li><a href="#2-6">2.6</a></li>
<li><a href="#2-5-1">2.5.1</a></li>
<li><a href="#2-5">2.5</a></li>
<li><a href="#2-4-1">2.4.1</a></li>
<li><a href="#2-4">2.4</a></li>
<li><a href="#2-3-1">2.3.1</a></li>
<li><a href="#2-3">2.3</a></li>
<li><a href="#2-2">2.2</a></li>
<li><a href="#2-1-3">2.1.3</a></li>
<li><a href="#2-1-2">2.1.2</a></li>
<li><a href="#2-1-1">2.1.1</a></li>
<li><a href="#2-1">2.1</a></li>
<li><a href="#2-0-4">2.0.4</a></li>
<li><a href="#2-0-3">2.0.3</a></li>
<li><a href="#2-0">2.0</a></li>
<li><a href="#1-9-4-9">1.9.4.9</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="content">
<div class="imageblock">
<div class="content">
<a class="image" href="https://hazelcast.com/" target="_blank" rel="noopener"><img src="images/logo_blue.png" alt="Hazelcast IMDG"></a>
</div>
</div>
<div class="sect1">
<h2 id="hazelcast-imdg-enterprise-release-notes"><a class="anchor" href="#hazelcast-imdg-enterprise-release-notes"></a><a class="link" href="#hazelcast-imdg-enterprise-release-notes">Hazelcast IMDG Enterprise Release Notes</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Welcome to the Hazelcast IMDG Enterprise Edition Release Notes. This document includes the new features, enhancements and fixed issues both for Enterprise (EE) and Open Source (OS) editions of Hazelcast IMDG releases.</p>
</div>
<div class="paragraph">
<p>Please select a release from the Table of Contents on the left panel to see its release notes.</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
The numbers in the square brackets refer to the issue number in Hazelcast IMDG GitHub repository.
</td>
</tr>
</table>
</div>
<div class="sect2">
<h3 id="4-2-2"><a class="anchor" href="#4-2-2"></a><a class="link" href="#4-2-2">4.2.2</a></h3>
<div class="sect3">
<h4 id="fixes-422"><a class="anchor" href="#fixes-422"></a><a class="link" href="#fixes-422">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the client state listener was not properly working
with failover clients (in blue-green deployments); it was failing with
invalid configuration exception.
<a href="https://github.com/hazelcast/hazelcast/pull/19115">#19115</a></p>
</li>
<li>
<p>Fixed an issue where the LDAP login modules could not properly handle multi-value attributes:
when multiple values, e.g., roles, are referenced by an LDAP attribute, only the first value
was taken into account by the login modules. #4151</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-2-1"><a class="anchor" href="#4-2-1"></a><a class="link" href="#4-2-1">4.2.1</a></h3>
<div class="sect3">
<h4 id="enh-421"><a class="anchor" href="#enh-421"></a><a class="link" href="#enh-421">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Enhanced the <code>getPartitionGroupStrategy()</code> method to have cluster members
as arguments so that useful partitioning strategies can be implemented
by accessing the members using this method.
<a href="https://github.com/hazelcast/hazelcast/pull/18904">#18904</a></p>
</li>
<li>
<p>The log message for infinite cluster connection timeout is clearer now.
Previously, it was represented as the value of <code>Long.MAX_VALUE</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/18648">#18648</a></p>
</li>
<li>
<p>Introduced a new mechanism in the background expiration tasks;
now a thread local array controls the allocations for these tasks
otherwise which may cause increased garbage collection pressure and
CPU usage spikes when you use aggressive expiration configurations,
e.g., low time-to-live values.
<a href="https://github.com/hazelcast/hazelcast/pull/18507">#18507</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-421"><a class="anchor" href="#fixes-421"></a><a class="link" href="#fixes-421">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the health monitor was incorrectly showing the
value for free metadata memory.
<a href="https://github.com/hazelcast/hazelcast/pull/18953">#18953</a></p>
</li>
<li>
<p>Fixed an issue where the updates made to a persistent map store might be lost
when the write coalescing is enabled.
<a href="https://github.com/hazelcast/hazelcast/pull/18929">#18929</a></p>
</li>
<li>
<p>Some merge policies like <code>LatestUpdateMergePolicy</code> for the map and WAN replication configurations
require the <a href="https://docs.hazelcast.com/imdg/4.2.1/data-structures/map.html#accessing-entry-statistics">per-entry statistics</a> to be enabled. Previously, this configuration inconsistency was causing the related member
to fail at runtime. Now, the Hazelcast member fails to start, i.e., fast fails, in such a case.
<a href="https://github.com/hazelcast/hazelcast/pull/18875">#18875</a></p>
</li>
<li>
<p>Fixed an issue where the maximum size policy for a map was being ignored
when the policy is <code>PER_NODE</code> and the cluster is scaled down
(due to losing or killing a member).
<a href="https://github.com/hazelcast/hazelcast/pull/18873">#18873</a></p>
</li>
<li>
<p>Fixed an issue where the map&#8217;s Near Cache was setting its maximum size as 10.000
even if the configured eviction policy is <code>NONE</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/18812">#18812</a></p>
</li>
<li>
<p>The LRU eviction policy now takes last access time value into account to prevent
premature removal of the lately added but not yet accessed map entries.
<a href="https://github.com/hazelcast/hazelcast/pull/18624">#18624</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors"><a class="anchor" href="#contributors"></a><a class="link" href="#contributors">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open
source community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/lprimak">Lenny Primak</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-2"><a class="anchor" href="#4-2"></a><a class="link" href="#4-2">4.2</a></h3>
<div class="sect3">
<h4 id="nf-42"><a class="anchor" href="#nf-42"></a><a class="link" href="#nf-42">New Features</a></h4>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Open Source New Features:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Sorting Support for Hazelcast SQL:</strong> Added the support of SQL sorting feature.
By using the newly implemented ORDER BY, LIMIT, and OFFSET constructions,
you can see the query results being ordered in ascending or descending fashion,
limit the count of results, or skip some results. See the
<a href="https://docs.hazelcast.com/imdg/4.2/sql/select-statement.html#sorting">documentation</a> for examples.</p>
</li>
<li>
<p><strong>Node Aware Partition Grouping:</strong> Added the support of
partition grouping mechanism in the Hazelcast discovery plugin for Kubernetes.
You can create partition groups according to the name of the node which is
provided by this plugin and on which the containers/pods run.
See the <a href="https://docs.hazelcast.com/imdg/4.2/clusters/partition-group-configuration.html#node-aware-partition-grouping">NODE_AWARE section</a>
of the IMDG Reference Manual for more information.</p>
</li>
<li>
<p><strong>Placement Aware Partition Grouping:</strong> Added the support of
partition grouping mechanism in the Hazelcast discovery plugin for AWS.
You can group members according to their placement metadata provided by the cloud providers,
such as rack, fault domain, power sources, network, and resources of a virtual machine in a zone.
See the <a href="https://docs.hazelcast.com/imdg/4.2/clusters/partition-group-configuration.html#placement-aware">PLACEMENT_AWARE section</a>
of the IMDG Reference Manual for more information.</p>
</li>
<li>
<p><strong>Dynamic Log Level Support</strong>: Added the support of changing Hazelcast log levels
without restarting cluster members.
See the <a href="https://docs.hazelcast.com/imdg/4.2/clusters/logging-configuration.html#dynamically-changing-log-levels">Dynamically Changing Log Levels section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="bc-42"><a class="anchor" href="#bc-42"></a><a class="link" href="#bc-42">Breaking Changes</a></h4>
<div class="sect4">
<h5 id="beta-api-changes"><a class="anchor" href="#beta-api-changes"></a><a class="link" href="#beta-api-changes">BETA API Changes</a></h5>
<div class="ulist">
<ul>
<li>
<p>Being in its BETA stage, we improved the <code>GenericRecord</code> API, and performed various related changes
in the serialization API due to these improvements:</p>
<div class="ulist">
<ul>
<li>
<p><code>GenericRecord#read()</code> and <code>GenericRecord.Builder#write()</code> methods have been renamed as
<code>get()</code>  and <code>set()</code>, respectively.</p>
</li>
<li>
<p><code>GenericRecord.Builder</code> has been moved to its own class as <code>GenericRecordBuilder</code>.</p>
</li>
<li>
<p><code>UTF</code> has been renamed as <code>String</code> for the following methods, which are now deprecated:</p>
<div class="ulist">
<ul>
<li>
<p><code>ClassDefinitionBuilder.addUTFField()</code></p>
</li>
<li>
<p><code>ClassDefinitionBuilder.addUTFArrayField()</code></p>
</li>
<li>
<p><code>PortableWriter.writeUTF()</code></p>
</li>
<li>
<p><code>PortableWriter.writeUTFArray()</code></p>
</li>
<li>
<p><code>PortableReader.readUTF()</code></p>
</li>
<li>
<p><code>PortableReader.readUTFArray()</code></p>
</li>
<li>
<p><code>ObjectDataOutput.writeUTF()</code></p>
</li>
<li>
<p><code>ObjectDataOutput.writeUTFArray()</code></p>
</li>
<li>
<p><code>ObjectDataInput.readUTF()</code></p>
</li>
<li>
<p><code>ObjectDataInput.readUTFArray()</code></p>
</li>
</ul>
</div>
</li>
<li>
<p><code>UTF</code> has been renamed as <code>String</code> for the following without deprecation:</p>
<div class="ulist">
<ul>
<li>
<p><code>GenericRecord.readUTF()</code></p>
</li>
<li>
<p><code>GenericRecord.readUTFArray()</code></p>
</li>
<li>
<p><code>GenericRecordBuilder.writeUTF()</code></p>
</li>
<li>
<p><code>GenericRecordBuilder.writeUTFArray()</code></p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/18100">#18100</a></p>
</div>
</li>
</ul>
</div>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="default-settings-change"><a class="anchor" href="#default-settings-change"></a><a class="link" href="#default-settings-change">Default Settings Change</a></h5>
<div class="ulist">
<ul>
<li>
<p>Seeing that getting entry level statistics in a map has not been
a common use case and it has been creating unnecessary memory overhead that can be otherwise
used for storing user data, per-entry statistics of maps now are disabled by default; they were enabled in
the previous releases. See the <a href="#enh-42">Enhancements</a> section below.</p>
</li>
<li>
<p>The default value for cluster connection timeout for clients has been set as <code>-1</code> (infinite timeout):
This is the timeout value for the client to give up to connect to the current cluster.
For this new default value, the client will not stop trying to connect to the target cluster.
This change has been made to prevent the clients from shutting down when a cluster is
unavailable; otherwise (previous default value was 2 minutes), it often meant restarting the whole application.
The reason for keeping the previous default value has been not to break the backward
compatibility; with this release we introduced this breaking change which would be better for users.
See <a href="https://docs.hazelcast.com/imdg/4.2/clients/java.html#configuring-client-connection-retry">here</a>
for more information.
<a href="https://github.com/hazelcast/hazelcast/pull/18094">#18094</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect3">
<h4 id="enh-42"><a class="anchor" href="#enh-42"></a><a class="link" href="#enh-42">Enhancements</a></h4>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Open Source Enhancements:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Per-Entry Statistics of Maps:</strong> Introduced a configuration option (<code>per-entry-stats-enabled</code>)
for retrieving per-entry statistics of a map, which is disabled by default.
See the <a href="https://docs.hazelcast.com/imdg/4.2/data-structures/map.html#accessing-entry-statistics">Accessing Map and Entry statistics section</a>.</p>
</li>
<li>
<p><strong>Default Serializer Overriding:</strong> Added the ability to override Hazelcast&#8217;s built-in serializers.
Also added the serialization support of <code>java.util.Optional</code>.
See the <a href="https://docs.hazelcast.com/imdg/4.2/serialization/serialization.html">Serialization chapter</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the improvements performed to solve the enhancement
issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Added support of named parameters in SQL&#8217;s <code>HazelcastFunction</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/18328">#18328</a></p>
</li>
<li>
<p>Added the HTTPS/TLS support for phone home pings. Also enhanced the phone home data
by adding the following information:</p>
<div class="ulist">
<ul>
<li>
<p>Java classpath on which the member runs</p>
</li>
<li>
<p>Detailed client information such as total connection durations and client versions</p>
</li>
<li>
<p>Total number of created proxies for each distributed object service</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/18337">#18337</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/18326">#18326</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/18307">#18307</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/18287">#18287</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Improved the <code>LIKE</code> query predicate so that it now supports indexes.
<a href="https://github.com/hazelcast/hazelcast/pull/18289">#18289</a></p>
</li>
<li>
<p>Added <code>management-permission</code> to the client permissions that defines which
Management Center client principals/endpoints are allowed to perform management tasks.
<a href="https://github.com/hazelcast/hazelcast/pull/18264">#18264</a></p>
</li>
<li>
<p>Added the temporal types support for indexes by introducing converters
for the missing types (<code>LocalTime</code>, <code>LocalDate</code>, <code>LocalDateTime</code> and <code>OffsetDateTime</code>)
<a href="https://github.com/hazelcast/hazelcast/pull/18244">#18244</a></p>
</li>
<li>
<p>Added the support of bitmap index statistics to be propagated to local
map statistics.
<a href="https://github.com/hazelcast/hazelcast/pull/18220">#18220</a></p>
</li>
<li>
<p>Improved the map store configuration such that it is enabled unless
you explicitly disable it; this improvement has been introduced to eliminate
the inconsistencies between map store&#8217;s declarative and programmatic
configurations.
<a href="https://github.com/hazelcast/hazelcast/pull/18217">#18217</a></p>
</li>
<li>
<p>Implemented the High-Density Metadata Store to store all the metadata
for on-heap and off-heap storages. This new store is based on <code>BinaryElasticHashMap</code>.
A new type of record called <code>HDMetadataRecord</code> has been introduced for
this purpose that references the key and value part of the metadata.
<a href="https://github.com/hazelcast/hazelcast/pull/18186">#18186</a></p>
</li>
<li>
<p>Added the ability to register the class definition of the parent generic record
and check the class definition compatibility for nested portable fields.
<a href="https://github.com/hazelcast/hazelcast/pull/18180">#18180</a></p>
</li>
<li>
<p>Improved the SQL engine so that it attempts to re-use the already deserialized
values stored in an index; this has been improved the map scan operations
performance when there is at least one index on an IMap.
<a href="https://github.com/hazelcast/hazelcast/pull/18172">#18172</a></p>
</li>
<li>
<p>Added the <code>iterator()</code> and <code>iterable()</code> methods with different parameter
combinations to the map.
<a href="https://github.com/hazelcast/hazelcast/pull/18126">#18126</a></p>
</li>
<li>
<p>Added the support of non-nullable columns for the SQL service.
<a href="https://github.com/hazelcast/hazelcast/pull/18114">#18114</a></p>
</li>
<li>
<p>Implemented the fetch and offset SQL clauses without
pushing the operator on the individual member.
<a href="https://github.com/hazelcast/hazelcast/pull/18091">#18091</a></p>
</li>
<li>
<p>Introduced a new serialization mechanism for SQL row data. Previously, every value
was being serialized as <code>Data</code> which was inefficient and the non-Java clients could not
read some types, e.g., <code>decimal</code>. With this new mechanism, a new custom codec <code>SqlPageCodec</code>
has been introduced that serializes values using a custom built-in list serializer
depending on the type of the column.
<a href="https://github.com/hazelcast/hazelcast/pull/18089">#18089</a></p>
</li>
<li>
<p>Added <code>Nonnull</code> annotations to <code>StreamSerializer</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/18071">#18071</a></p>
</li>
<li>
<p>Added the ability to cancel queries on the client side when there are active requests sent to
the member; this enhancement facilitates the future implementation of a non-blocking
SQL client handler.
<a href="https://github.com/hazelcast/hazelcast/pull/18047">#18047</a></p>
</li>
<li>
<p>Added the support of <code>OBJECT</code> type in the comparison operators in Hazelcast&#8217;s SQL service.
<a href="https://github.com/hazelcast/hazelcast/pull/18016">#18016</a></p>
</li>
<li>
<p>Implemented the <code>ORDER BY</code> clause for the SQL service; it supports
the ASC and DESC sortings with limitations.
<a href="https://github.com/hazelcast/hazelcast/pull/18013">#18013</a></p>
</li>
<li>
<p>Added the support of <code>remainder</code> operation to Hazelcast&#8217;s SQL service.
<a href="https://github.com/hazelcast/hazelcast/pull/17997">#17997</a></p>
</li>
<li>
<p>Added the support of <code>NOT LIKE</code> expression to Hazelcast&#8217;s SQL service.
<a href="https://github.com/hazelcast/hazelcast/pull/17996">#17996</a></p>
</li>
<li>
<p>Introduced a new SQL threading model to improve its performance.
<a href="https://github.com/hazelcast/hazelcast/pull/17985">#17985</a></p>
</li>
<li>
<p>Introduced the support of schemas for the SQL public API.
<a href="https://github.com/hazelcast/hazelcast/pull/17953">#17953</a></p>
</li>
<li>
<p>Implemented the <code>IMap.entrySet()</code> method for the partition ID set.
<a href="https://github.com/hazelcast/hazelcast/pull/17937">#17937</a></p>
</li>
<li>
<p>Improved the discovery by external smart clients in the cloud environments:
the clients now only need to know the address of any member (or that of a load balancer
if members are exposed via load balancer).
<a href="https://github.com/hazelcast/hazelcast/pull/17895">#17895</a></p>
</li>
<li>
<p>Introduced a configuration property to ignore errors during enabling the
XXE protection. This protection works with JAXP 1.5 (Java 7 Update 40) and newer.
When an older JAXP implementation is added to the classpath, e.g., Xerces and Xalan,
an exception is thrown. The newly introduced property, namely <code>hazelcast.ignoreXxeProtectionFailures</code>,
allows you to ignore those exceptions.
<a href="https://github.com/hazelcast/hazelcast/issues/17839">#17839</a></p>
</li>
<li>
<p>Added the missing <code>replicatedmap-permission</code> support to the XML and YAML
configuration handlers.
<a href="https://github.com/hazelcast/hazelcast/pull/17810">#17810</a></p>
</li>
<li>
<p>Replaced <code>Charset</code> with <code>StandardCharsets</code> to be used in JSON querying.
<a href="https://github.com/hazelcast/hazelcast/pull/17741">#17741</a></p>
</li>
<li>
<p>Implemented migration listener for the Java client.
<a href="https://github.com/hazelcast/hazelcast/pull/17713">#17713</a></p>
</li>
<li>
<p>Introduced tenant control when creating JCache caches.
<a href="https://github.com/hazelcast/hazelcast/pull/17673">#17673</a></p>
</li>
<li>
<p>Added the <code>BigDecimal</code>,<code>LocalTime</code>,<code>LocalDate</code>,<code>LocalDateTime</code>,<code>OffsetDateTime</code> types to the Portable Serialization.
<a href="https://github.com/hazelcast/hazelcast/pull/17257">#17257</a></p>
</li>
<li>
<p>Introduced the <code>unparkAll()</code> method for event journal read operations.
<a href="https://github.com/hazelcast/hazelcast/pull/14081">#14081</a></p>
</li>
<li>
<p>Eliminated the possibility of losing WAN events when rebalancing
the cluster by introducing a new, specialized WAN queue. #3941</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-42"><a class="anchor" href="#fixes-42"></a><a class="link" href="#fixes-42">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed a regression issue where the locked and expired entry keys could not be
reached over indexes.
<a href="https://github.com/hazelcast/hazelcast/pull/18386">#18386</a></p>
</li>
<li>
<p>Improved the deserialization for indexes: when having multiple indexes on a map,
each time an entry is put in the map and thus to the index, the entry is
deserialized for each index instead just once. This was causing performance issues.
<a href="https://github.com/hazelcast/hazelcast/pull/18343">#18343</a></p>
</li>
<li>
<p>Fixed an issue where SQL&#8217;s <code>ORDER BY</code> statement was failing if the field is indexed
and there are other clauses such as <code>WHERE</code> in the query.
<a href="https://github.com/hazelcast/hazelcast/pull/18341">#18341</a></p>
</li>
<li>
<p>Fixed an issue where <code>GenericRecord</code> could not be queried when the
in-memory format of the map is <code>OBJECT</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/18336">#18336</a></p>
</li>
<li>
<p>Fixed a discrepancy between the behaviors of index-scan and full-scan in maps; the
eviction of the idle map entries was not stable in IMDG 4.x series due to this
discrepancy.
<a href="https://github.com/hazelcast/hazelcast/pull/18334">#18334</a></p>
</li>
<li>
<p>Fixed an issue where the health monitor was logging no values for
garbage collection metrics.
<a href="https://github.com/hazelcast/hazelcast/pull/18317">#18317</a></p>
</li>
<li>
<p>Fixed an issue that occurred when there is Near Cache configured for both the member and
client sides for the same map and <code>serialize-keys</code> option is <code>false</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/18312">#18312</a></p>
</li>
<li>
<p>Fixed an issue where the transactions was not throwing <code>TransactionTimeOutException</code>
in case of a timeout.
<a href="https://github.com/hazelcast/hazelcast/pull/18305">#18305</a></p>
</li>
<li>
<p>Fixed an issue where Hazelcast IMDG was not picking the <code>hazelcast.xml</code>
configuration file from the download package but from the current working
directory where IMDG has been started.
<a href="https://github.com/hazelcast/hazelcast/pull/18304">#18304</a></p>
</li>
<li>
<p>Fixed the race condition occurring during the serialization of writes for the
copy-on-write data structures.
<a href="https://github.com/hazelcast/hazelcast/pull/18285">#18285</a></p>
</li>
<li>
<p>Fixed an issue where the clients, in a blue/green deployment,
were hanging while reconnecting to the alternative cluster due to
mishandling of member list.
<a href="https://github.com/hazelcast/hazelcast/pull/18276">#18276</a></p>
</li>
<li>
<p>Fixed an issue where <code>CachedQueryEntry</code> could not be serialized since it didn&#8217;t
have a default serializer.
<a href="https://github.com/hazelcast/hazelcast/pull/18238">#18238</a></p>
</li>
<li>
<p>Fixed an issue where the Java client was not receiving membership events
in its membership listener when a member with Hot Restart Persistence enabled is restarted.
<a href="https://github.com/hazelcast/hazelcast/issues/18234">#18234</a></p>
</li>
<li>
<p>Fixed a regression issue: when overlapping wildcard configurations
are defined declaratively, the most specific one was inheriting
attributes from the more generic one during parsing.
<a href="https://github.com/hazelcast/hazelcast/pull/18187">#18187</a></p>
</li>
<li>
<p>Fixed an issue where the non-UTF characters in a JSON value was
causing query failures.
<a href="https://github.com/hazelcast/hazelcast/pull/18183">#18183</a></p>
</li>
<li>
<p>Fixed an issue where tasks were not running in parallel when
they are submitted to all the cluster members in some scenarios.
<a href="https://github.com/hazelcast/hazelcast/pull/18107">#18107</a></p>
</li>
<li>
<p>Fixed an issue that prohibited Hazelcast from being used as Tomcat session manager
when it is also deployed in a web application context:
When a client application that uses Hazelcast tries to connect to the Hazelcast cluster and this
application&#8217;s web sessions are persisted using Hazelcast&#8217;s Tomcat session manager,
the session manager could not connect to the cluster. This has been
fixed by improving Hazelcast&#8217;s service loader mechanism.
<a href="https://github.com/hazelcast/hazelcast/pull/18103">#18103</a></p>
</li>
<li>
<p>When the in-memory format of a map is NATIVE and the uploaded user code has missing
classes (in case the user code deployment feature is used), the resulting exception
could not be seen on the client side when a map query is run. This was causing the
client to hang indefinitely and fixed by improving the failure handling for this case.
<a href="https://github.com/hazelcast/hazelcast/pull/18081">#18081</a></p>
</li>
<li>
<p>Fixed an issue where the queue items were being delivered more than once
when they are reproduced after a member leaves the cluster.
<a href="https://github.com/hazelcast/hazelcast/issues/18057">#18057</a></p>
</li>
<li>
<p>Fixed the syntax for <code>inMemoryFormat</code> variable in the <code>MapConfig.toString()</code> method.
<a href="https://github.com/hazelcast/hazelcast/pull/17976">#17976</a></p>
</li>
<li>
<p>Fixed a failure which happened when a client is recreated with the same
client failover configuration after creating a map that has the default near cache eviction
configuration.
<a href="https://github.com/hazelcast/hazelcast/issues/17952">#17952</a></p>
</li>
<li>
<p>Fixed several issues when handling the SQL expressions. The fixes
include not relying on Apache Calcite for inference and coercion anymore and
introducing custom operand checker implementations provided by every operator.
<a href="https://github.com/hazelcast/hazelcast/pull/17947">#17947</a></p>
</li>
<li>
<p>Fixed an issue where the metrics for map hits statistics in Management Center
were decreasing as the map entries are being expired.
<a href="https://github.com/hazelcast/hazelcast/issues/17930">#17930</a></p>
</li>
<li>
<p>Fixed an issue where the clients were opening two connections
to the same member when the member is behind a private network.
<a href="https://github.com/hazelcast/hazelcast/pull/17844">#17844</a></p>
</li>
<li>
<p>Fixed an issue where the failures in <code>SessionAwareSemaphore</code> was preventing
the acquired permits from their releases.
<a href="https://github.com/hazelcast/hazelcast/pull/17826">#17826</a></p>
</li>
<li>
<p>Fixed an issue where the Javadoc of release methods for
session-aware semaphore structure was incorrectly addressing
"threads" instead of "Hazelcast instances".
<a href="https://github.com/hazelcast/hazelcast/pull/17823">#17823</a></p>
</li>
<li>
<p>Fixed an issue where the <code>remove()</code> and <code>delete()</code> operations
of maps were not updating the local map statistics.
<a href="https://github.com/hazelcast/hazelcast/pull/17771">#17771</a></p>
</li>
<li>
<p>Fixed the metrics unit for cache statistics to be declared in
microseconds.
<a href="https://github.com/hazelcast/hazelcast/pull/17742">#17742</a></p>
</li>
<li>
<p>Fixed a failure when retrieving the member state before the member becomes ACTIVE
on Kubernetes using Helm charts.
<a href="https://github.com/hazelcast/hazelcast/pull/17773">#17773</a></p>
</li>
<li>
<p>Fixed an issue where the parsing of configurations for some Hazelcast features, such as
Hot Restart and user code deployment, was
overriding the existing configuration values.
<a href="https://github.com/hazelcast/hazelcast/issues/17675">#17675</a>,
<a href="https://github.com/hazelcast/hazelcast/issues/17681">#17681</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17885">#17885</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17917">#17917</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17923">#17923</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17924">#17924</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17940">#17940</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17945">#17945</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17946">#17946</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17875">#17875</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17878">#17878</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17969">#17969</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17971">#17971</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17972">#17972</a></p>
</li>
<li>
<p>Removed <code>InetSocketAddressCache</code> from the Java client code
so that the client can continue to work, while preserving the
behaviors in a Blue/Green Deployment scenario; the Java client was not able
to resolve the new address of a restarted member, e.g., for a setup in Docker environment.
<a href="https://github.com/hazelcast/hazelcast/pull/17239">#17239</a></p>
</li>
<li>
<p>Fixed an issue where the statistics entry for WAN replication state of a member was
retrieving the hardcoded STOPPED value instead of the configured initial
publisher state. #3834</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="rd-42"><a class="anchor" href="#rd-42"></a><a class="link" href="#rd-42">Removed/Deprecated Features</a></h4>
<div class="ulist">
<ul>
<li>
<p>The Symmetric Encryption feature has been deprecated. You can
use the TLS/SSL protocol to establish an encrypted communication
across your Hazelcast cluster.</p>
</li>
<li>
<p>The following system properties have been deprecated:</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.partition.group.rack</code></p>
</li>
<li>
<p><code>hazelcast.partition.group.host</code></p>
</li>
<li>
<p><code>hazelcast.hotrestart.free.native.memory.percentage</code></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-42"><a class="anchor" href="#contributors-42"></a><a class="link" href="#contributors-42">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/lprimak">Lenny Primak</a></p>
</li>
<li>
<p><a href="https://github.com/petprog">Farinu Taiwo</a></p>
</li>
<li>
<p><a href="https://github.com/abdullahcevik">Abdullah Cevik</a></p>
</li>
<li>
<p><a href="https://github.com/peterjot">Piotr Jasina</a></p>
</li>
<li>
<p><a href="https://github.com/zalintyre">Franz Wimmer</a></p>
</li>
<li>
<p><a href="https://github.com/sgflt">Lukáš Kvídera</a></p>
</li>
<li>
<p><a href="https://github.com/alekseybeliyb">Aleksey Kaurov</a></p>
</li>
<li>
<p><a href="https://github.com/aaronriekenberg">Aaron Riekenberg</a></p>
</li>
<li>
<p><a href="https://github.com/TomaszGaweda">Tomasz Gaweda</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-1-6"><a class="anchor" href="#4-1-6"></a><a class="link" href="#4-1-6">4.1.6</a></h3>
<div class="sect3">
<h4 id="enh-416"><a class="anchor" href="#enh-416"></a><a class="link" href="#enh-416">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Improved the log message that is displayed when using the <code>hazelcast.io.selectorMode</code>
property to decrease the high CPU usage. The previous misleading message read as
"Recreated Selector because of possible java/network stack bug". It has been changed
to "Selector was rebuilt, consider updating Java and/or your network stack drivers".
<a href="https://github.com/hazelcast/hazelcast/pull/19761">#19761</a></p>
</li>
<li>
<p>Introduced the <code>hazelcast.internal.map.expired.key.scan.timeout.nanos</code> property
to limit the execution time of the cleanup operations, i.e., entry expiration tasks of a map;
this is to prevent the increased CPU usage as the partition size grows.
<a href="https://github.com/hazelcast/hazelcast/issues/19663">#19663</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-416"><a class="anchor" href="#fixes-416"></a><a class="link" href="#fixes-416">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Hazelcast was executing cluster wide operations when you query
the state of a member using the health check endpoint - it was causing to kill all the members
in a cluster; this issue has been fixed.
<a href="https://github.com/hazelcast/hazelcast/pull/19837">#19837</a></p>
</li>
<li>
<p>The increment command (<code>incr</code>) in the Memcache client
was returning the ASCII code of the expected result; this interpretation
issue has been fixed.
<a href="https://github.com/hazelcast/hazelcast/pull/19681">#19681</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-1-5"><a class="anchor" href="#4-1-5"></a><a class="link" href="#4-1-5">4.1.5</a></h3>
<div class="sect3">
<h4 id="fixes-415"><a class="anchor" href="#fixes-415"></a><a class="link" href="#fixes-415">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where a high amount of garbage collection pressure was occurring
during repartitioning especially when having a high partition count.
<a href="https://github.com/hazelcast/hazelcast/pull/19295">#19295</a></p>
</li>
<li>
<p>Fixed an issue where the client state listener was not properly working
with failover clients (in blue-green deployments); it was failing with
invalid configuration exception.
<a href="https://github.com/hazelcast/hazelcast/pull/19116">#19116</a></p>
</li>
<li>
<p>Fixed an issue where the Hot Restart service was failing due to the update operations
occurring concurrently on a map with <code>NATIVE</code> memory format during and after migrations.
With this, the Hot Restart failure <code>Stuck while waiting for a record to be retired</code> has been
fixed. #3659</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="rf-415"><a class="anchor" href="#rf-415"></a><a class="link" href="#rf-415">Deprecated/Removed Features</a></h4>
<div class="ulist">
<ul>
<li>
<p>Deprecated the following properties:</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.client.statistics.period.seconds</code></p>
</li>
<li>
<p><code>hazelcast.client.statistics.enabled</code></p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/19234">#19234</a></p>
</div>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-1-4"><a class="anchor" href="#4-1-4"></a><a class="link" href="#4-1-4">4.1.4</a></h3>
<div class="sect3">
<h4 id="fixes-414"><a class="anchor" href="#fixes-414"></a><a class="link" href="#fixes-414">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the updates made to a persistent map store might be lost
when the write coalescing is enabled.
<a href="https://github.com/hazelcast/hazelcast/pull/18924">#18924</a></p>
</li>
<li>
<p>Fixed an issue where the maximum size policy for a map was being ignored
when the policy is <code>PER_NODE</code> and the cluster is scaled down
(due to losing or killing a member).
<a href="https://github.com/hazelcast/hazelcast/pull/18871">#18871</a></p>
</li>
<li>
<p>Fixed an issue where the map&#8217;s Near Cache was setting its maximum size as 10.000
even if the configured eviction policy is <code>NONE</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/18834">#18834</a></p>
</li>
<li>
<p>The LRU eviction policy now takes last access time value into account to prevent
premature removal of the lately added but not yet accessed map entries.
<a href="https://github.com/hazelcast/hazelcast/pull/18632">#18632</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-1-3"><a class="anchor" href="#4-1-3"></a><a class="link" href="#4-1-3">4.1.3</a></h3>
<div class="sect3">
<h4 id="enh-413"><a class="anchor" href="#enh-413"></a><a class="link" href="#enh-413">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Introduced a new mechanism in the background expiration tasks;
now a thread local array controls the allocations for these tasks
otherwise which may cause increased garbage collection pressure
and CPU usage spikes when you use aggressive expiration configurations, e.g., low time-to-live values.
<a href="https://github.com/hazelcast/hazelcast/pull/18480">#18480</a></p>
</li>
<li>
<p>Updated the Hazelcast Kubernetes plugin dependency version to 2.2.2.
<a href="https://github.com/hazelcast/hazelcast/pull/18331">#18331</a></p>
</li>
<li>
<p>Added the ability to register the class definition of the parent generic record and check the class definition compatibility for nested portable fields.
<a href="https://github.com/hazelcast/hazelcast/pull/18284">#18284</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-413"><a class="anchor" href="#fixes-413"></a><a class="link" href="#fixes-413">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>The difference between the Near Cache configurations before and after
a client is recreated with the same client failover configuration is
fixed now.
<a href="https://github.com/hazelcast/hazelcast/pull/18361">#18361</a></p>
</li>
<li>
<p>The eviction of the idle entries is now stable in IMDG 4.x series
by aligning the behaviors of index-scan and full-scan in maps.
<a href="https://github.com/hazelcast/hazelcast/pull/18346">#18346</a></p>
</li>
<li>
<p>The <code>IllegalArgumentException</code> is not thrown anymore when there is Near Cache
configured for both the member and client sides for the same map and
<code>serialize-keys</code> option is <code>false</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/18313">#18313</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-1-2"><a class="anchor" href="#4-1-2"></a><a class="link" href="#4-1-2">4.1.2</a></h3>
<div class="sect3">
<h4 id="fixes-412"><a class="anchor" href="#fixes-412"></a><a class="link" href="#fixes-412">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the Java client was not receiving membership events
when a member with Hot Restart Persistence is restarted.
<a href="https://github.com/hazelcast/hazelcast/pull/18268">#18268</a></p>
</li>
<li>
<p>Fixed an issue where the Near Cache configuration of a map in client
was not the same after the client is recreated with the
same client failover configuration.
<a href="https://github.com/hazelcast/hazelcast/pull/18356">#18356</a></p>
</li>
<li>
<p>Fixed an issue that prohibited Hazelcast from being used as Tomcat session manager
when it is also deployed in a web application context:
When a client application that uses Hazelcast tries to connect to the Hazelcast cluster and this
application&#8217;s web sessions are persisted using Hazelcast&#8217;s Tomcat session manager,
the session manager could not connect to the cluster. This has been
fixed by improving Hazelcast&#8217;s service loader mechanism.
<a href="https://github.com/hazelcast/hazelcast/pull/18116">#18116</a></p>
</li>
<li>
<p>Fixed an issue where the metrics for map hits statistics in Management Center
were decreasing as the map entries are being expired.
<a href="https://github.com/hazelcast/hazelcast/pull/18112">#18112</a></p>
</li>
<li>
<p>When the in-memory format of a map is <code>NATIVE</code> and the uploaded user code
has missing classes (in case the user code deployment feature is used),
the resulting exception could not be seen on the client side when a map query is run.
This was causing the client to hang indefinitely and fixed by improving the
failure handling for this case.
<a href="https://github.com/hazelcast/hazelcast/pull/18084">#18084</a></p>
</li>
<li>
<p>Fixed an issue where the queue items were being delivered more
than once when they are reproduced after a member leaves the cluster.
<a href="https://github.com/hazelcast/hazelcast/issues/18057">#18057</a></p>
</li>
<li>
<p>When the user code deployment is used and the classes to be deployed
have <code>com.hazelcast</code> prefix, it was causing failures in other Hazelcast
products, e.g., Jet. This has been fixed by making use of the context classloader
when loading such classes.
<a href="https://github.com/hazelcast/hazelcast/pull/17915">#17915</a></p>
</li>
<li>
<p>The <code>-c</code> parameter of the <code>cp-subsystem.sh</code> script
was used for both cluster name and group variables. This has
been fixed by introducing the <code>-g</code> parameter for groups.
<a href="https://github.com/hazelcast/hazelcast/pull/17907">#17907</a></p>
</li>
<li>
<p>Fixed an issue where the <code>remove()</code> and <code>delete()</code> operations
of maps were not updating the local map statistics.
<a href="https://github.com/hazelcast/hazelcast/issues/17750">#17750</a></p>
</li>
<li>
<p>Fixed an issue where the custom expiry policy in the variants of <code>ICache#replace()</code>
was not taken into account when cache&#8217;s in-memory format is <code>NATIVE</code>. [#3883]</p>
</li>
<li>
<p>Fixed an issue where there was a loss in the WAN outbound queue events
when the WAN replicated members are restarted. [#3867]</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-1-1"><a class="anchor" href="#4-1-1"></a><a class="link" href="#4-1-1">4.1.1</a></h3>
<div class="sect3">
<h4 id="nf-411"><a class="anchor" href="#nf-411"></a><a class="link" href="#nf-411">New Features</a></h4>
<div class="ulist">
<ul>
<li>
<p><strong>Node Aware Partition Grouping:</strong> Added the support of
partition grouping mechanism in the Hazelcast discovery plugin for Kubernetes.
You can create partition groups according to the name of the
node which is provided by this plugin and on which the containers/pods run.
See the <a href="https://docs.hazelcast.org/docs/4.1.1/manual/html-single/#node-aware-partition-grouping" target="_blank" rel="noopener">NODE_AWARE section</a> of the IMDG Reference Manual for more information.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enh-411"><a class="anchor" href="#enh-411"></a><a class="link" href="#enh-411">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Introduced a configuration property to ignore errors during
enabling the XXE protection. This protection works with JAXP 1.5 (Java 7 Update 40)
and newer. When an older JAXP implementation is added to
the classpath, e.g., Xerces and Xalan, an exception is thrown.
The newly introduced property, namely <code>hazelcast.ignoreXxeProtectionFailures</code>,
allows you to ignore those exceptions.
See the <a href="https://docs.hazelcast.org/docs/4.1.1/manual/html-single/#system-properties" target="_blank" rel="noopener">System Properties appendix</a> of the IMDG Reference Manual for more information.</p>
</li>
<li>
<p>Updated the Hazelcast Kubernetes plugin dependency to 2.2.1.
<a href="https://github.com/hazelcast/hazelcast/pull/17928">#17928</a></p>
</li>
<li>
<p>Separated the <code>hazelcast-sql</code> Maven module into <code>hazelcast-sql-core</code> and <code>hazelcast-sql</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/17922">#17922</a></p>
</li>
<li>
<p>Implemented the <code>IMap.entrySet()</code> method for the partition ID set.
<a href="https://github.com/hazelcast/hazelcast/pull/17886">#17886</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-411"><a class="anchor" href="#fixes-411"></a><a class="link" href="#fixes-411">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the clients were opening two connections to
the same member when the member is behind a private network.
<a href="https://github.com/hazelcast/hazelcast/pull/17888">#17888</a></p>
</li>
<li>
<p>Fixed an issue where the Javadoc of <code>release</code> methods for session-aware semaphore
structure was incorrectly addressing "threads" instead of "Hazelcast
instances".
<a href="https://github.com/hazelcast/hazelcast/pull/17827">#17827</a></p>
</li>
<li>
<p>Fixed an issue where the Hazelcast Java client was not
able to resolve the new address of a restarted member, e.g.,
for a setup in Docker environment.
<a href="https://github.com/hazelcast/hazelcast/issues/17062">#17062</a></p>
</li>
<li>
<p>Fixed an issue where the statistics entry for WAN replication state of a member
was retrieving the hardcoded <code>STOPPED</code> value instead of the configured
initial publisher state. #3834</p>
</li>
<li>
<p>Added the missing <code>replicatedmap-permission</code> support to the XML and
YAML configuration handlers. #3836</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-1"><a class="anchor" href="#4-1"></a><a class="link" href="#4-1">4.1</a></h3>
<div class="sect3">
<h4 id="nf-41"><a class="anchor" href="#nf-41"></a><a class="link" href="#nf-41">New Features</a></h4>
<div class="ulist">
<ul>
<li>
<p><strong>SQL Implementation:</strong> Implemented the SQL engine that
supports map scans, index scans, projections and filters.
It also introduces the <code>hazelcast-sql</code> module to handle the
SQL engine&#8217;s dependencies on Apache Calcite.
See the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/index.html#sql" target="_blank" rel="noopener">SQL section</a>.</p>
</li>
<li>
<p><strong>Automatic Discovery Strategy Detection:</strong> Hazelcast now automatically detects
the cloud environment it&#8217;s running on (Kubernetes, AWS, GCP or Azure) and applies
the necessary discovery strategy for the environment. This allows automatically
forming the Hazelcast clusters in cloud environments without any configuration.
See the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/index.html#auto-detection" target="_blank" rel="noopener">Auto Detection section</a>.</p>
</li>
<li>
<p><strong>Security Audit Logging:</strong> This feature allows observing some important cluster events.
Auditable events have a unique type ID, and contain a timestamp and importance level.
See the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/index.html#auditlog" target="_blank" rel="noopener">Logging Auditable Events section</a>.</p>
</li>
<li>
<p><strong>Overriding Configuration:</strong> You can now override the configuration entries
of your cluster without changing the declarative configuration files (XML/YAML).
See the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/index.html#overriding-configuration" target="_blank" rel="noopener">Overriding Configuration section</a>.</p>
</li>
<li>
<p><strong>Instance Tracking:</strong> Hazelcast now writes a file on a Hazelcast member startup
at the configured location. This file contains metadata about the member such as version, product name
and process ID, and it is not deleted on the member shutdown.
See the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/#instance-tracking" target="_blank" rel="noopener">Instance Tracking section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="bc-41"><a class="anchor" href="#bc-41"></a><a class="link" href="#bc-41">Breaking Changes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Starting a standalone Hazelcast instance requires disabling Auto Detection joiner
(before it required disabling Multicast joiner).
<a href="https://github.com/hazelcast/hazelcast/pull/17112">#17112</a></p>
</li>
<li>
<p>In a CP subsystem session, a generic <code>IllegalStateException</code> was being thrown when Hazelcast
is shutdown. Now the same situation throws <code>HazelcastInstanceNotActiveException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/17120">#17120</a></p>
</li>
<li>
<p>Implemented and/or overridden the default methods in Java 8 collections,
such as <code>computeIfAbsent()</code>, <code>forEach()</code> <code>compute()</code> and <code>replaceAll()</code> for maps.
<a href="https://github.com/hazelcast/hazelcast/issues/14913">#14913</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enh-41"><a class="anchor" href="#enh-41"></a><a class="link" href="#enh-41">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p><strong>Improvements in Partial Network Disconnections:</strong> Introduced properties
to be configured to detect and resolve the partial network issues among the
Hazelcast IMDG members.
See <a href="https://github.com/hazelcast/hazelcast/pull/16680" target="_blank" rel="noopener">#16680</a> and the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/#partial-network-partitions" target="_blank" rel="noopener">Partial Network Partitions section</a>.</p>
</li>
<li>
<p><strong>Parallel Independent Migrations:</strong> Parallelized the partition replica migrations so that
the time needed for rebalancing the partitions after adding
or removing a member to/from a cluster is reduced. See the <code>hazelcast.partition.max.parallel.migrations</code> property explanation in the
<a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/#system-properties" target="_blank" rel="noopener">System Properties appendix</a>.</p>
</li>
<li>
<p><strong>Multiple Persistent Directories:</strong> Added support for multiple mounting
directories in the persistent memory configuration and also thread affinity for NVMs
(Non-Volatile Main Memories).
See the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/#using-persistent-memory" target="_blank" rel="noopener">Using Persistent Memory section</a>.</p>
</li>
<li>
<p><strong>CP Subsystem Listeners and Metrics:</strong> Added membership and group availability
listeners for CP Subsystem. Also, added support for publishing CP Subsystem and CP data structure
statistics via Metrics.
See the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/#cp-subsystem-listeners" target="_blank" rel="noopener">CP Subsystem Listeners section</a>.</p>
</li>
<li>
<p><strong>GenericRecord:</strong> Added support for accessing domain objects without domain classes.
See the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/#accessing-domain-objects-without-domain-classes" target="_blank" rel="noopener">GenericRecord section</a>.</p>
</li>
<li>
<p><strong>Thread Affinity:</strong> Introduced the CPU thread affinity; threads can have affinity for particular CPUs and using this you have a better control on the latency and a better throughput.
See the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/#cpu-thread-affinity" target="_blank" rel="noopener">CPU Thread Affinity section</a>.</p>
</li>
<li>
<p><strong>Trusted Interfaces:</strong> It is now possible to restrict the source IP addresses
from which the Management Center operations are allowed.
See the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/#limiting-source-addresses" target="_blank" rel="noopener">Limiting Source Addresses section</a>.</p>
</li>
<li>
<p><strong>Out-of-the-Box Kerberos Support:</strong> Introduced support for Kerberos
authentication protocol which is one of the standard
solutions for single-sign-on. It also adds the GSSAPI authentication support in
LDAP configuration.
See the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/#kerberos-authentication-type" target="_blank" rel="noopener">Kerberos Authentication Type section</a>.</p>
</li>
<li>
<p><strong>WAN Throttling Mechanism</strong>: This prevents the WAN consumers from
getting overloaded by the WAN producers if transferring the WAN events takes
less time than processing them in the target cluster. This can be the case with
WAN synchronization if the network latency is low enough. It can be configured using
the following properties:</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.wan.consumer.invocation.threshold</code></p>
</li>
<li>
<p><code>hazelcast.wan.consumer.ack.delay.backoff.init</code></p>
</li>
<li>
<p><code>hazelcast.wan.consumer.ack.delay.backoff.max</code></p>
</li>
<li>
<p><code>hazelcast.wan.consumer.ack.delay.backoff.multiplier</code></p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/17113">#17113</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p><strong>Priority Queue:</strong> Added support for the queues with comparators. Using Priority
Queue, you can define items with higher priority to be polled first.
See the <a href="https://docs.hazelcast.org/docs/4.1/manual/html-single/#priority-queue" target="_blank" rel="noopener">Priority Queue section</a>.</p>
</li>
<li>
<p>Implemented a new concurrent High-Density Memory Store index
for the queries, based on B+ tree that is enabled by default;
brings better performance for lookup queries and enables SQL queries.</p>
</li>
<li>
<p><strong>Statistics for Durable and Scheduled Executor Services:</strong> Added the statistics for scheduled and durable executor services, and for the executor of offloaded entry
processors to be monitored by Management Center.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the other improvements performed to solve the enhancement
issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Added the missing <code>replicatedmap-permission</code> support to the
XML and YAML configuration handlers.
<a href="https://github.com/hazelcast/hazelcast/pull/17812">#17812</a></p>
</li>
<li>
<p>Replaced the word "should" with "must" in the exception messages
to improve the user focus and indicate obligation rather than advice.
<a href="https://github.com/hazelcast/hazelcast/pull/17710">#17710</a></p>
</li>
<li>
<p>Added the <code>getAndDecrement()</code> operation support for the <code>IAtomicLong</code>
data structure.
<a href="https://github.com/hazelcast/hazelcast/pull/17699">#17699</a></p>
</li>
<li>
<p>Introduced the <code>mode</code> configuration attribute for the
persistent memory. It defines operational mode of it which can be
either <code>MOUNTED</code> or SYSTEM_MEMORY.
<a href="https://github.com/hazelcast/hazelcast/pull/17696">#17696</a></p>
</li>
<li>
<p>Added the support for checking duplicate fields when building
class definitions.
<a href="https://github.com/hazelcast/hazelcast/pull/17682">#17682</a></p>
</li>
<li>
<p>Added the support for IList with nullable items to the client protocol.
<a href="https://github.com/hazelcast/hazelcast/pull/17690">#17690</a></p>
</li>
<li>
<p>Improved the robustness of the diagnostics log writer and its plugins.
<a href="https://github.com/hazelcast/hazelcast/pull/17665">#17665</a></p>
</li>
<li>
<p>Added the client name tag to the client related metrics.
<a href="https://github.com/hazelcast/hazelcast/pull/17654">#17654</a></p>
</li>
<li>
<p>Added a check for IMap <code>READ</code> permissions for the maps involved in the
SQL query executions.
<a href="https://github.com/hazelcast/hazelcast/pull/17612">#17612</a></p>
</li>
<li>
<p>Added the support for accessing the Hazelcast instance in the
login modules and credential factories.
<a href="https://github.com/hazelcast/hazelcast/pull/17605">#17605</a></p>
</li>
<li>
<p>Introduced a simplified configuration of Kerberos authentication
for simple scenarios.
<a href="https://github.com/hazelcast/hazelcast/pull/17573">#17573</a></p>
</li>
<li>
<p>Added statistics support for IBM, OpenJ9, ZGC and Shenandoah.
<a href="https://github.com/hazelcast/hazelcast/pull/17561">#17561</a></p>
</li>
<li>
<p>Introduced a state-tracking mechanism for the external configuration
parser; all mismatched/unapplied configuration entries coming from
environment variables or system properties are now logged.
<a href="https://github.com/hazelcast/hazelcast/pull/17559">#17559</a></p>
</li>
<li>
<p>Updated the <code>jackson.version</code> to 2.11.2 and
<code>SnakeYAML</code> to 2.1.
<a href="https://github.com/hazelcast/hazelcast/pull/17484">#17484</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/17446">#17446</a></p>
</li>
<li>
<p>Added support for the merge operation in IMap.
<a href="https://github.com/hazelcast/hazelcast/pull/17419">#17419</a></p>
</li>
<li>
<p>Added public classes to expose the member- and
client-side caching provider implementations (in the JCache implementation)
without referring to internal classes.
<a href="https://github.com/hazelcast/hazelcast/pull/17320">#17320</a></p>
</li>
<li>
<p>Improved the entry processing mechanism so that the read-only processors on backups
are not executed anymore.
<a href="https://github.com/hazelcast/hazelcast/pull/17318">#17318</a></p>
</li>
<li>
<p>Improved <code>CacheSimpleConfig</code> so that it now accepts cache name in its constructors.
<a href="https://github.com/hazelcast/hazelcast/issues/17287">#17287</a></p>
</li>
<li>
<p>Cleaned up the noisy initial log messages on Hazelcast startups.
<a href="https://github.com/hazelcast/hazelcast/pull/17243">#17243</a></p>
</li>
<li>
<p>Introduced auto-disposable tasks for the scheduled executor service.
<a href="https://github.com/hazelcast/hazelcast/pull/17215">#17215</a></p>
</li>
<li>
<p>Added client labels to <code>ClientEndpointImpl.toString()</code>
to simplify the client identification (in addition to client uuid)
on the Hazelcast member side.
<a href="https://github.com/hazelcast/hazelcast/issues/17178">#17178</a></p>
</li>
<li>
<p>Added exception handling when creating caches with tenant control.
<a href="https://github.com/hazelcast/hazelcast/pull/17122">#17122</a></p>
</li>
<li>
<p>Added support for <code>IMap.compute()</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/17030">#17030</a></p>
</li>
<li>
<p>Added support to allow submitting and executing operations while a member
is shutting down to increase the availability of a cluster more that keeps
large data.
<a href="https://github.com/hazelcast/hazelcast/pull/17028">#17028</a></p>
</li>
<li>
<p>Added <code>ExtendedMapEntry</code> in order to create a mechanism for setting TTLs in
entry processors.
<a href="https://github.com/hazelcast/hazelcast/pull/16991">#16991</a></p>
</li>
<li>
<p>Added <code>hazelcast-azure</code> discovery plugin to the <code>hazelcast-all</code> module.
<a href="https://github.com/hazelcast/hazelcast/pull/16982">#16982</a></p>
</li>
<li>
<p>Introduced the <code>ConfigRecognition</code> API that determines if a
provided declarative configuration is recognized by the rules defined in a given
implementation. Along with the API the following three implementations are added:</p>
<div class="ulist">
<ul>
<li>
<p><code>MemberConfigRecognizer</code> for recognizing member XML and YAML configurations</p>
</li>
<li>
<p><code>ClientConfigRecognizer</code> for recognizing client XML and YAML configurations</p>
</li>
<li>
<p><code>ClientFailoverConfigRecognizer</code> for recognizing failover client XML and YAML configurations</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/16958">#16958</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Added the <code>publishAll()</code>, <code>publishAllAsync()</code> and <code>publishAsync()</code>
methods to ITopic.
<a href="https://github.com/hazelcast/hazelcast/pull/16946">#16946</a></p>
</li>
<li>
<p>Made the diagnostics logs cloud-friendly so that they
can also be sent to <code>stdout</code> in addition to sending to local files.
<a href="https://github.com/hazelcast/hazelcast/pull/16941">#16941</a></p>
</li>
<li>
<p>Improved the mechanism of partition table updates to
eliminate the latencies when these updates are sent to the clients by a member.
<a href="https://github.com/hazelcast/hazelcast/pull/16939">#16939</a></p>
</li>
<li>
<p>Improved the client configuration such that when the client
failover configuration is provided, the reconnect mode cannot
be set as <code>off</code>; it now fails fast in this case.
<a href="https://github.com/hazelcast/hazelcast/pull/16886">#16886</a></p>
</li>
<li>
<p>Introduced the <code>forEach()</code> loop support for IMap.
<a href="https://github.com/hazelcast/hazelcast/pull/16877">#16877</a></p>
</li>
<li>
<p>Added the <code>load()</code> method to <code>Config</code>, <code>ClientConfig</code> and
<code>ClientFailoverConfig</code> classes. This method loads the configuration
with the known locations. If not found, the default configuration is returned.
<a href="https://github.com/hazelcast/hazelcast/pull/16864">#16864</a></p>
</li>
<li>
<p>Improved the <code>deleteAll()</code> (MapStore) and ITopic Javadocs.
<a href="https://github.com/hazelcast/hazelcast/pull/16862">#16862</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/16861">#16861</a>,</p>
</li>
<li>
<p>Added support for <code>IMap.computeIfAbsent()</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/16808">#16808</a></p>
</li>
<li>
<p>Added the <code>setAll()</code> and <code>setAllAsync()</code> methods for IMap.
<a href="https://github.com/hazelcast/hazelcast/pull/16787">#16787</a></p>
</li>
<li>
<p>Added the creation time metric for the executor service.
<a href="https://github.com/hazelcast/hazelcast/pull/16775">#16775</a></p>
</li>
<li>
<p>Improved an unclear exception message for credentials.
<a href="https://github.com/hazelcast/hazelcast/pull/16756">#16756</a></p>
</li>
<li>
<p>Updated the related aspects of Hazelcast IMDG after the
changes done on the client protocol side to add the ability
to add new parameters, methods, services, events and custom types
to codecs.
<a href="https://github.com/hazelcast/hazelcast/pull/16718">#16718</a></p>
</li>
<li>
<p>Introduced the <code>putAllAsync()</code> method for MultiMap.
<a href="https://github.com/hazelcast/hazelcast/pull/16698">#16698</a></p>
</li>
<li>
<p>Defined metrics for ISet and IList collections.
<a href="https://github.com/hazelcast/hazelcast/pull/16665">#16665</a></p>
</li>
<li>
<p>Upgraded log4j2 version to 2.13.0.
<a href="https://github.com/hazelcast/hazelcast/pull/16654">#16654</a></p>
</li>
<li>
<p>Improved the <code>computeIfPresent()</code> implementation so that now it keeps a
clone of the old/existing value and uses that for replace/delete operations.
<a href="https://github.com/hazelcast/hazelcast/pull/16636">#16636</a></p>
</li>
<li>
<p>Introduced the <code>hazelcast.logging.details.enabled</code> property
to make the logging of cluster version, name and IP optional to
decrease the noise in the logs when, for example, you have a single-member cluster.
<a href="https://github.com/hazelcast/hazelcast/pull/16622">#16622</a></p>
</li>
<li>
<p>Upgraded the Hazelcast Kubernetes plugin version to 2.0.1.
<a href="https://github.com/hazelcast/hazelcast/pull/16590">#16590</a></p>
</li>
<li>
<p>Added the support for automatically detecting the classloader
of a type for the user code deployment feature.
<a href="https://github.com/hazelcast/hazelcast/pull/16585">#16585</a></p>
</li>
<li>
<p>Made <code>IMap.putAllAsync()</code> and <code>IMap.submitToKeys()</code> methods public API.
<a href="https://github.com/hazelcast/hazelcast/issues/16449">#16449</a></p>
</li>
<li>
<p>Clarified the exception message when you connect to a cluster with an
invalid cluster name.
<a href="https://github.com/hazelcast/hazelcast/issues/15099">#15099</a></p>
</li>
<li>
<p>Refactored the check and retry initialization logic of
<code>ReplicatedMapProxy</code> so that they are performed in parallel for different
partitions.
<a href="https://github.com/hazelcast/hazelcast/pull/14331">#14331</a></p>
</li>
<li>
<p>Improved the behavior of <code>ConcurrentMap.computeIfPresent</code>:
combined single client-server round trips instead of two (for <code>get</code> and
<code>replace</code> methods).
<a href="https://github.com/hazelcast/hazelcast/issues/11958">#11958</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-41"><a class="anchor" href="#fixes-41"></a><a class="link" href="#fixes-41">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an exception in the <code>/node-state</code> REST calls when the member
is not fully activated.
<a href="https://github.com/hazelcast/hazelcast/pull/17798">#17798</a></p>
</li>
<li>
<p>Fixed an issue where Hazelcast was not releasing the acquired lock
sessions that fail for the reasons other than session expiration and
wait key cancellation.
<a href="https://github.com/hazelcast/hazelcast/pull/17697">#17697</a></p>
</li>
<li>
<p>Fixed an issue where Hazelcast was returning <code>false</code> if a client
is successfully deregistered from any member, but events are still
delivered for the non-deregistered ones.
<a href="https://github.com/hazelcast/hazelcast/pull/17646">#17646</a></p>
</li>
<li>
<p>Fixed a data loss issue that was happening while promoting a lite member
to a data member.
<a href="https://github.com/hazelcast/hazelcast/issues/17621">#17621</a></p>
</li>
<li>
<p>Fixed an issue where the configuration was not updating entries' time-to-live
values if the entry processor implements the <code>Offloadable</code> interface.
<a href="https://github.com/hazelcast/hazelcast/issues/17606">#17606</a></p>
</li>
<li>
<p>Fixed an issue where the caller stacktrace was missing on the
rethrown async runtime exceptions.
<a href="https://github.com/hazelcast/hazelcast/pull/17546">#17546</a></p>
</li>
<li>
<p>Fixed the rendering of diagnostics in case there is an exception
inside a diagnostics plugin.
<a href="https://github.com/hazelcast/hazelcast/pull/17501">#17501</a></p>
</li>
<li>
<p>Fixed an exception that is thrown when using the entry store API and issuing
a <code>put</code> into the IMap for an item which is not in the map but
exists in the backing store.
<a href="https://github.com/hazelcast/hazelcast/issues/17441">#17441</a></p>
</li>
<li>
<p>Fixed an issue where the custom load balancers
could not be configured declaratively.
<a href="https://github.com/hazelcast/hazelcast/pull/17415">#17415</a></p>
</li>
<li>
<p>Fixed a race issue when creating a cache (JCache) using
multiple methods with the same cache name but having different keys.
<a href="https://github.com/hazelcast/hazelcast/pull/17286">#17286</a></p>
</li>
<li>
<p>Fixed an issue where the repeated calls of <code>executeOnKeys()</code>
in Hazelcast clients for <code>NATIVE</code> maps was causing a continuous
increase in the used memory and exhaustion of the memory pool after a while.
<a href="https://github.com/hazelcast/hazelcast/pull/17276">#17276</a></p>
</li>
<li>
<p>Fixed an issue where <code>ReliableTopicMessageListener</code> was firing
a warning when the client is shutting down.
<a href="https://github.com/hazelcast/hazelcast/pull/17153">#17153</a></p>
</li>
<li>
<p>Fixed an issue where the client was stuck with an outdated
member list after a split-brain scenario.
<a href="https://github.com/hazelcast/hazelcast/pull/17147">#17147</a></p>
</li>
<li>
<p>Fixed the member side user code deployment; it was throwing an exception
when inner classes are used to be loaded.
<a href="https://github.com/hazelcast/hazelcast/issues/17044">#17044</a></p>
</li>
<li>
<p>Fixed the broken interoperability between the <code>CompletableFuture</code> methods.
<a href="https://github.com/hazelcast/hazelcast/pull/17020">#17020</a></p>
</li>
<li>
<p>Fixed an issue where touching a map entry having an entry processor working on it
was modifying its time-to-live.
<a href="https://github.com/hazelcast/hazelcast/issues/16987">#16987</a></p>
</li>
<li>
<p>Fixed an issue in the cache service where its pre-join
operation was considering <code>CacheConfig</code> as resolved: it
was assuming that key/value types, user customizations and
other cache configurations have been loaded. This was an issue
when the cache is not touched yet.
<a href="https://github.com/hazelcast/hazelcast/pull/16917">#16917</a></p>
</li>
<li>
<p>Fixed an issue where Management Center was not working as expected
when the cluster is set up using advanced network configuration.
<a href="https://github.com/hazelcast/hazelcast/pull/16910">#16910</a></p>
</li>
<li>
<p>Fixed an issue where <code>ServiceLoader</code> was round-tripping between URL and URI,
and consequently loses the associated <code>URLStreamHandler</code> when trying to load
Hazelcast from a custom class loader.
<a href="https://github.com/hazelcast/hazelcast/issues/16846">#16846</a></p>
</li>
<li>
<p>Fixed an issue where the class definitions, that are registered explicitly in
the serialization configuration and have the same class ID in different factories,
were not handled properly.
<a href="https://github.com/hazelcast/hazelcast/pull/16831">#16831</a></p>
</li>
<li>
<p>Fixed the <code>NullPointerException</code> in <code>IndexCopyBehavior.NEVER</code> mode.
<a href="https://github.com/hazelcast/hazelcast/pull/16784">#16784</a></p>
</li>
<li>
<p>Fixed an issue where the client XML configuration could not
properly handle the empty Near Cache name.
<a href="https://github.com/hazelcast/hazelcast/issues/16768">#16768</a></p>
</li>
<li>
<p>Fixed an issue where the client permissions for Reliable Topic and Ringbuffer
were missing.
<a href="https://github.com/hazelcast/hazelcast/pull/16755">#16755</a></p>
</li>
<li>
<p>Fixed an issue where the type information was missing the Metrics MBeans.
<a href="https://github.com/hazelcast/hazelcast/pull/16747">#16747</a></p>
</li>
<li>
<p>Fixed an issue where the REST API was always requiring the call URLs
to end with a slash character.
<a href="https://github.com/hazelcast/hazelcast/pull/16688">#16688</a></p>
</li>
<li>
<p>Fixed an issue where the service URL for Eureka could not be set
using the declarative configuration.
<a href="https://github.com/hazelcast/hazelcast/pull/16679">#16679</a></p>
</li>
<li>
<p>Fixed an issue where the wait key of a blocking call within
a Raft invocation was still being reported as a live operation,
when the key times out.
<a href="https://github.com/hazelcast/hazelcast/pull/16614">#16614</a></p>
</li>
<li>
<p>Fixed an issue where the upload of classes using the client
user code deployment were not successful when they are retrieved not
in their created order.
<a href="https://github.com/hazelcast/hazelcast/pull/16612">#16612</a></p>
</li>
<li>
<p>Fixed an issue where the size() method was returning a negative
value when map, cache and multimap contain more than Integer.MAX_VALUE entries.
<a href="https://github.com/hazelcast/hazelcast/pull/16594">#16594</a></p>
</li>
<li>
<p>Fixed an invalidation issue when using a transactional map
from a cache with a Near Cache: the cache invalidation event occurs
when the <code>transactionalMap.put</code> method is called. As a result,
the entry was getting invalidated before the change is committed to the map.
<a href="https://github.com/hazelcast/hazelcast/pull/16579">#16579</a></p>
</li>
<li>
<p>Fixed an issue where <code>InPredicate</code> was not invoking value comparison when the
read attribute is null.
<a href="https://github.com/hazelcast/hazelcast/issues/15100">#15100</a></p>
</li>
<li>
<p>Fixed an issue where Map, Cache, MultiMap data structures
were returning negative values (<code>size()</code>) when the size is more than
<code>Integer.MAX_VALUE</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/14935">#14935</a></p>
</li>
<li>
<p>Fixed an issue when a Hazelcast client calls the distributed executor service
and the callable throws an exception with a custom type, then the exception
was not being transported to the client.
<a href="https://github.com/hazelcast/hazelcast/issues/9753">#9753</a></p>
</li>
<li>
<p>Fixed an issue where the permission configurations without
endpoint specification were not working on IPv6 connections. #3815</p>
</li>
<li>
<p>Fixed an issue where forced eviction and High-Density Memory Store index addition
were causing JVM crash and memory leak. #3618</p>
</li>
<li>
<p>Fixed the behavior of WAN sync when the cluster contains
lite members for dynamically added WAN configurations. WAN sync
can now be invoked on the lite members for dynamically added WAN
configurations only if the configuration was added using that lite member.
Other lite members can still fail if WAN sync is invoked on them for the
dynamically added configuration. In addition to this, the member coordinating
the WAN sync will no longer broadcast the event to lite members, as they don’t
own any data which needs to be synchronized. #3600</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-41"><a class="anchor" href="#contributors-41"></a><a class="link" href="#contributors-41">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/inelpandzic">Inel Pandzic</a></p>
</li>
<li>
<p><a href="https://github.com/omidp">Omid Pourhadi</a></p>
</li>
<li>
<p><a href="https://github.com/ryanlindeborg">Ryan Lindeborg</a></p>
</li>
<li>
<p><a href="https://github.com/santhoshkumarbs">Santhosh Kumar</a></p>
</li>
<li>
<p><a href="https://github.com/KowalczykBartek">Bartek Kowalczyk</a></p>
</li>
<li>
<p><a href="https://github.com/webashutosh">Ashutosh Agrawal</a></p>
</li>
<li>
<p><a href="https://github.com/aberkecz">Ádám Berkecz</a></p>
</li>
<li>
<p><a href="https://github.com/HugeOrangeDev">HugeOrangeDev</a></p>
</li>
<li>
<p><a href="https://github.com/pertsodian">Harry Tran</a></p>
</li>
<li>
<p><a href="https://github.com/StephenOTT">Stephen Russett</a></p>
</li>
<li>
<p><a href="https://github.com/ulfjack">Ulf Adams</a></p>
</li>
<li>
<p><a href="https://github.com/abdulazizali77">Abdul Aziz Ali</a></p>
</li>
<li>
<p><a href="https://github.com/netudima">Dmitry Konstantinov</a></p>
</li>
<li>
<p><a href="https://github.com/chanmol1999">Anmol Chaddha</a></p>
</li>
<li>
<p><a href="https://github.com/lprimak">lprimak</a></p>
</li>
<li>
<p><a href="https://github.com/keteracel">keteracel</a></p>
</li>
<li>
<p><a href="https://github.com/buraksezer">Burak Sezer</a></p>
</li>
<li>
<p><a href="https://github.com/wangumer">wangumer</a></p>
</li>
<li>
<p><a href="https://github.com/the-thing">Marcin L</a></p>
</li>
<li>
<p><a href="https://github.com/stefanbirkner">Stefan Birkner</a></p>
</li>
<li>
<p><a href="https://github.com/andrewoelfing">André Wölfing</a></p>
</li>
<li>
<p><a href="https://github.com/ndeevy">ndeevy</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-0-3"><a class="anchor" href="#4-0-3"></a><a class="link" href="#4-0-3">4.0.3</a></h3>
<div class="sect3">
<h4 id="enh-403"><a class="anchor" href="#enh-403"></a><a class="link" href="#enh-403">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added the declarative configuration support for the client load balancer.
<a href="https://github.com/hazelcast/hazelcast/pull/17482">#17482</a></p>
</li>
<li>
<p>Added public classes to expose the member and client side caching
provider implementations without referring to internal classes.
<a href="https://github.com/hazelcast/hazelcast/pull/17421">#17421</a></p>
</li>
<li>
<p>Updated the Hazelcast Kubernetes dependency to 2.0.2.
<a href="https://github.com/hazelcast/hazelcast/pull/17255">#17255</a></p>
</li>
<li>
<p>Added the ability to set the expiration times for entries when
using entry processors.
<a href="https://github.com/hazelcast/hazelcast/pull/17175">#17175</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-403"><a class="anchor" href="#fixes-403"></a><a class="link" href="#fixes-403">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed <code>NullPointerException</code> when using IMap with <code>HASH</code> indexes.
<a href="https://github.com/hazelcast/hazelcast/pull/17527">#17527</a></p>
</li>
<li>
<p>Fixed the rendering of diagnostics in case there is an exception inside a diagnostics plugin.
<a href="https://github.com/hazelcast/hazelcast/pull/17502">#17502</a></p>
</li>
<li>
<p>Increased the dependency versions for Jackson and SnakeYAML to mitigate the security vulnerabilities.
<a href="https://github.com/hazelcast/hazelcast/pull/17510">#17510</a></p>
</li>
<li>
<p>Fixed the propagation of exception from a function registered on a not-yet completed <code>CompletionStage</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/17520">#17520</a></p>
</li>
<li>
<p>Fixed a race condition when overwriting <code>CacheManager</code> during JCache creation.
<a href="https://github.com/hazelcast/hazelcast/pull/17292">#17292</a></p>
</li>
<li>
<p>Fixed the <code>NATIVE</code> memory leak when using <code>IMap.executeOnKeys()</code> from an IMDG client.
<a href="https://github.com/hazelcast/hazelcast/pull/17274">#17274</a></p>
</li>
<li>
<p>Resolved a performance issue when using <code>PagingPredicate</code> in combination with JDK8.
<a href="https://github.com/hazelcast/hazelcast/pull/17211">#17211</a></p>
</li>
<li>
<p>Fixed the client behavior when cluster encounters a split-brain.
In some cases, the client was unable to reconnect to the cluster, even after the cluster is healed.
<a href="https://github.com/hazelcast/hazelcast/pull/17148">#17148</a></p>
</li>
<li>
<p>Improved disposing of off-heap memory when metrics are being used.
<a href="https://github.com/hazelcast/hazelcast/pull/17145">#17145</a></p>
</li>
<li>
<p>Fixed the LDAP bind issue in <code>LdapLoginModule</code> when <code>system-user-dn</code> is used. #3781</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-0-2"><a class="anchor" href="#4-0-2"></a><a class="link" href="#4-0-2">4.0.2</a></h3>
<div class="sect3">
<h4 id="enh-402"><a class="anchor" href="#enh-402"></a><a class="link" href="#enh-402">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Introduced the <code>ConfigRecognition</code> API that determines
if a provided declarative configuration is recognized by the
rules defined in a given implementation. Along with the API the
following three implementations are added:</p>
<div class="ulist">
<ul>
<li>
<p><code>MemberConfigRecognizer</code> for recognizing member XML and YAML
configurations</p>
</li>
<li>
<p><code>ClientConfigRecognizer</code> for recognizing client XML and YAML
configurations</p>
</li>
<li>
<p><code>ClientFailoverConfigRecognizer</code> for recognizing failover client XML and
YAML configurations</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/17093">#17093</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Introduced WAN throttling mechanism: this prevents the
WAN consumers from getting overloaded by the WAN producers
if transferring the WAN events takes less time than processing
them in the target cluster. This can be the case with WAN
synchronization if the network latency is low
enough. It can be configured using the following properties:</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.wan.consumer.invocation.threshold</code></p>
</li>
<li>
<p><code>hazelcast.wan.consumer.ack.delay.backoff.init</code></p>
</li>
<li>
<p><code>hazelcast.wan.consumer.ack.delay.backoff.max</code></p>
</li>
<li>
<p><code>hazelcast.wan.consumer.ack.delay.backoff.multiplier</code></p>
<div class="paragraph">
<p>See <a href="https://github.com/hazelcast/hazelcast/blob/4.0.2/hazelcast/src/main/java/com/hazelcast/spi/properties/ClusterProperty.java#L1112">here</a> for their explanations.</p>
</div>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/17092">#17092</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Removed a constraint which was rejecting all the operations
except the ones marked with <code>AllowedDuringPassiveState</code> while a
member is shutting down. With this enhancement, operations are allowed
during shutdown. This keeps the same safety guarantees while increasing
availability, especially for the members holding large amounts of data.
<a href="https://github.com/hazelcast/hazelcast/pull/17029">#17029</a></p>
</li>
<li>
<p>Introduced a packet flag to distinguish between the connections of members
having the same Hazelcast version and different versions.
<a href="https://github.com/hazelcast/hazelcast/pull/16993">#16993</a></p>
</li>
<li>
<p>Updated <code>pom.xml</code> to have the latest version of the Hazelcast AWS plugin,
which introduced the support for AWS Fargate.
See <a href="https://github.com/hazelcast/hazelcast-aws/pull/170" target="_blank" rel="noopener">here</a> for details.
<a href="https://github.com/hazelcast/hazelcast/pull/16990">#16990</a></p>
</li>
<li>
<p>Improved the client partition table update push mechanism to prevent latency
spikes when there is a partition table change and many clients need to be notified.
<a href="https://github.com/hazelcast/hazelcast/pull/16938">#16938</a></p>
</li>
<li>
<p>Added the <code>load()</code> method to <code>Config</code>, <code>ClientConfig</code> and
<code>ClientFailoverConfig</code> classes. This method loads the configuration
with the known locations. If not found, the default configuration is returned.
<a href="https://github.com/hazelcast/hazelcast/pull/16903">#16903</a></p>
</li>
<li>
<p>Added the missing partition/active partition count descriptor constants
to the metrics.
<a href="https://github.com/hazelcast/hazelcast/pull/16858">#16858</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-402"><a class="anchor" href="#fixes-402"></a><a class="link" href="#fixes-402">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the split-brain protection events were triggered during the
startup of members, but before they join the cluster. With this fix,
these listeners will not be fired until the minimum cluster size (quorum) is met after the
member startups.
<a href="https://github.com/hazelcast/hazelcast/pull/17090">#17090</a></p>
</li>
<li>
<p>Fixed an issue where the CP client message tasks were deserializing
the responses.
<a href="https://github.com/hazelcast/hazelcast/pull/17055">#17055</a></p>
</li>
<li>
<p>Fixed the broken interoperability between the <code>CompletableFuture</code>
methods.
<a href="https://github.com/hazelcast/hazelcast/pull/17048">#17048</a></p>
</li>
<li>
<p>Fixed map store initialization behavior when instance is running under a
Java Security Manager.
<a href="https://github.com/hazelcast/hazelcast/pull/17033">#17033</a></p>
</li>
<li>
<p>Fixed an issue where the Hazelcast cluster having advanced network
configuration was not sending the proper connection information
to Management Center.
<a href="https://github.com/hazelcast/hazelcast/pull/17003">#17003</a></p>
</li>
<li>
<p>Fixed an issue in the cache service where its pre-join
operation was considering <code>CacheConfig</code> as resolved: it
was assuming that key/value types, user customizations and
other cache configurations have been loaded. This was an issue
when the cache is not touched yet.
<a href="https://github.com/hazelcast/hazelcast/pull/16918">#16918</a></p>
</li>
<li>
<p>Fixed an issue where the Hazelcast instances were failing to start
due to a missing flag for the cluster status.
<a href="https://github.com/hazelcast/hazelcast/issues/16852">#16852</a></p>
</li>
<li>
<p>Reverted the change where Hazelcast was not retrying an invocation if it is sent
to a specific member and returns the  <code>TargetNotMemberException</code> exception.
<a href="https://github.com/hazelcast/hazelcast/pull/16843">#16843</a></p>
</li>
<li>
<p>Fixed an issue where the class definitions, that are registered explicitly in
the serialization configuration and have the same class ID in different factories,
were not handled properly.
<a href="https://github.com/hazelcast/hazelcast/pull/16833">#16833</a></p>
</li>
<li>
<p>Fixed the behavior of WAN sync when the cluster contains lite members for dynamically
added WAN configurations. WAN sync can now be invoked on the lite members for dynamically
added WAN configurations only if the configuration was added using that lite member. Other lite
members can still fail if WAN sync is invoked on them for the dynamically added
configuration. In addition to this, the member coordinating the WAN sync will no longer
broadcast the event to lite members, as they don&#8217;t own any data which needs to be
synchronized.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-0-1"><a class="anchor" href="#4-0-1"></a><a class="link" href="#4-0-1">4.0.1</a></h3>
<div class="sect3">
<h4 id="enh-401"><a class="anchor" href="#enh-401"></a><a class="link" href="#enh-401">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Introduced trusted interfaces concept for the Management Center
connections. It is now possible to restrict the source IP addresses
from which the Management Center operations are allowed.
See the <a href="https://docs.hazelcast.org/docs/4.0.1/manual/html-single/#limiting-source-addresses">Limiting Source Addresses section</a>.</p>
</li>
<li>
<p>Added the <code>creationTime</code> field to the <code>Executor</code> JMX bean.
<a href="https://github.com/hazelcast/hazelcast/pull/16774">#16774</a></p>
</li>
<li>
<p>Promoted the <code>IMap.putAllAsync()</code> and <code>IMap.submitToKeys()</code> methods to IMDG&#8217;s public API.
<a href="https://github.com/hazelcast/hazelcast/pull/16771">#16771</a></p>
</li>
<li>
<p>Upgraded the Spring, Hibernate 5 and Session Clusterin (hazelcast-wm) dependency
versions for Hazelcast IMDG 4.x. <a href="https://github.com/hazelcast/hazelcast/pull/16731">#16731</a></p>
</li>
<li>
<p>Updated the related aspects of Hazelcast IMDG after the changes done on the client protocol
side to add the ability to add new parameters, methods, services, events and custom types to codecs.
<a href="https://github.com/hazelcast/hazelcast/pull/16719">#16719</a></p>
</li>
<li>
<p>Upgraded Log4J2 version to 2.13.0.
<a href="https://github.com/hazelcast/hazelcast/pull/16658">#16658</a></p>
</li>
<li>
<p>Introduced the <code>hazelcast.logging.details.enabled</code> property to make the logging
of cluster version, name and IP optional to decrease the noise in the logs when, for
example, you have a single-member cluster.
<a href="https://github.com/hazelcast/hazelcast/pull/16630">#16630</a></p>
</li>
<li>
<p>Updated the <a href="https://hazelcast.org/hub/?project=kubernetes-cloud-discovery" target="_blank" rel="noopener">Hazelcast Kubernetes</a>
plugin to 2.0.1.
<a href="https://github.com/hazelcast/hazelcast/pull/16591">#16591</a></p>
</li>
<li>
<p>Added the support for automatically detecting the classloader of a type for the user
code deployment feature.
<a href="https://github.com/hazelcast/hazelcast/pull/16584">#16584</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-401"><a class="anchor" href="#fixes-401"></a><a class="link" href="#fixes-401">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the <code>Metrics</code> beans were missing the standard <code>Type</code>
information when monitoring with JMX.
<a href="https://github.com/hazelcast/hazelcast/issues/16729">#16729</a></p>
</li>
<li>
<p>Fixed an issue when a Raft leader stops receiving heartbeats from the majority
and it switches to the follower role in the same term: during this switch, it was also
deleting its own vote in the term.
<a href="https://github.com/hazelcast/hazelcast/pull/16645">#16645</a></p>
</li>
<li>
<p>Fixed an invalidation issue when using a transactional map
from a cache with a Near Cache: the cache invalidation event occurs when
the <code>transactionalMap.put</code> method is called. As a result, the entry was getting
invalidated before the change is committed to the map.
<a href="https://github.com/hazelcast/hazelcast/pull/16638">#16638</a></p>
</li>
<li>
<p>Fixed an issue where the wait key of a blocking call within a Raft
invocation was still being reported as a live operation, when the key times out.
<a href="https://github.com/hazelcast/hazelcast/pull/16615">#16615</a></p>
</li>
<li>
<p>Fixed an issue where the upload of classes using the client user
code deployment were not successful when they are retrieved not in their
created order.
<a href="https://github.com/hazelcast/hazelcast/pull/16611">#16611</a></p>
</li>
<li>
<p>Fixed an issue where the <code>size()</code> method was returning a negative value
when map, cache and multimap contain more than <code>Integer.MAX_VALUE</code> entries.
<a href="https://github.com/hazelcast/hazelcast/issues/14935">#14935</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="4-0"><a class="anchor" href="#4-0"></a><a class="link" href="#4-0">4.0</a></h3>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#upgrading-to-hazelcast-imdg-4-0" target="_blank" rel="noopener">Hazelcast IMDG 4.0 Migration Guide</a>
for the detailed guidelines to be followed when upgrading Hazelcast IMDG to 4.0.
</td>
</tr>
</table>
</div>
<div class="sect3">
<h4 id="nf-40"><a class="anchor" href="#nf-40"></a><a class="link" href="#nf-40">New Features</a></h4>
<div class="ulist">
<ul>
<li>
<p><strong>Persistent Memory Integration:</strong> Added support for persistent memory,
such as Intel&#174; Optane&#8482; DC, to be used by Hazelcast&#8217;s
High-Density Memory Store feature.
See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/index.html#using-persistent-memory" target="_blank" rel="noopener">Using Persistent Memory section</a>.</p>
</li>
<li>
<p><strong>Encrypting Data in Hot Restart Store:</strong> Provided a framework and implementation to encrypt
data in Hot Restart stores ("at rest") for data held in distributed structures.
See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#encryption-at-rest" target="_blank" rel="noopener">Encryption at Rest section</a>.</p>
</li>
<li>
<p><strong>X.509 Certificate Authentication:</strong> Added support for credential retrieval by the members
from the X.509 certificates configured on the clients.
See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#tls-authentication-type" target="_blank" rel="noopener">Security chapter</a>.</p>
</li>
<li>
<p><strong>Out of the Box LDAP Configuration:</strong> Introduced a new LDAP login module
where you do not need to provide your own JAAS login module for this purpose.
See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#ldap-authentication-type" target="_blank" rel="noopener">Security chapter</a>.</p>
</li>
<li>
<p><strong>CP Subsystem Persistence:</strong> Implemented persistency for Hazelcast&#8217;s
CP (Consistency &amp; Partition Tolerance) subsystem.
See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#cp-subsystem-persistence" target="_blank" rel="noopener">CP Subsystem Persistence section</a>.</p>
</li>
<li>
<p><strong>CP Subsystem Development Mode:</strong> Introduced <code>UNSAFE</code> mode for the CP data
structures. This way, you do not need to have at least three IMDG members
to use CP subsystem: you can benefit from its functionalities using only one
or two members.
See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#cp-subsystem-unsafe-mode" target="_blank" rel="noopener">CP Subsystem Unsafe Mode section</a>.</p>
</li>
<li>
<p><strong>Bitmap Indexes:</strong> Introduced this feature to significantly lower
index memory usage for low-cardinality columns and also to speed up
the queries and lower memory requirements for them
when the queries have multiple predicates acting on the same bitmap index.
Note that bitmap indexes usage, currently, is a good fit for
array/collection attribute indexing, rather than regular
single-valued attributes.
See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#bitmap-indexes" target="_blank" rel="noopener">Bitmap Indexes section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="bc-40"><a class="anchor" href="#bc-40"></a><a class="link" href="#bc-40">Breaking Changes</a></h4>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Please see the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#upgrading-to-hazelcast-imdg-4-0" target="_blank" rel="noopener">Upgrading to Hazelcast IMDG 4.0</a> for the details of following breaking changes to be considered while upgrading to IMDG 4.0.
</td>
</tr>
</table>
</div>
<div class="sect4">
<h5 id="distributed-data-structures"><a class="anchor" href="#distributed-data-structures"></a><a class="link" href="#distributed-data-structures">Distributed Data Structures</a></h5>
<div class="ulist">
<ul>
<li>
<p>Externalized the hardcoded Flake ID Generator properties.
So the following constants are now in <code>FlakeIdGeneratorConfig</code>:</p>
<div class="ulist">
<ul>
<li>
<p><code>EPOCH_START</code></p>
</li>
<li>
<p><code>BITS_TIMESTAMP</code></p>
</li>
<li>
<p><code>BITS_SEQUENCE</code></p>
</li>
<li>
<p><code>BITS_NODE_ID</code></p>
</li>
<li>
<p><code>ALLOWED_FUTURE_MILLIS</code></p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/16278">#16278</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Removed the <code>values()</code> and <code>entrySet()</code> from map and replicated
map&#8217;s <code>MBeans</code> since these are potentially dangerous operations that can
cause an <code>OutOfMemoryException</code> on the member since by default there is no
limit on how many entries can be returned as a response for a query.
<a href="https://github.com/hazelcast/hazelcast/pull/16238">#16238</a></p>
</li>
<li>
<p>Changed the behavior of the <code>getAll()</code> method: when
either of the loaded key or value returned by the <code>MapLoader</code> is null,
this method now fails fast.
<a href="https://github.com/hazelcast/hazelcast/pull/16204">#16204</a></p>
</li>
<li>
<p>Removed the <code>MapEvictionPolicy</code> class and its related
configurations. This has brought the following changes:</p>
<div class="ulist">
<ul>
<li>
<p><code>EvictionConfig</code> is used instead of <code>MapEvictionPolicy</code> for
custom eviction policies.</p>
</li>
<li>
<p><code>MapEvictionPolicy</code> has been removed and <code>MapEvictionPolicyComparator</code>
has been addd for the same tasks.</p>
</li>
<li>
<p><code>EvictionPolicyComparator</code>, <code>MapEvictionPolicyComparator</code> and
<code>CacheEvictionPolicyComparator</code> have become interfaces.</p>
</li>
<li>
<p>Moved <code>EvictionPolicyComparator</code>  and <code>EvictableEntryView</code> to
the <code>com.hazelcast.spi.eviction</code> package.</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15939">#15939</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Removed deprecated <code>IMap</code> methods accepting <code>EntryListener</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15781">#15781</a></p>
</li>
<li>
<p>Removed deprecated <code>DistributedObjectEvent.getObjectId</code>.
The replacement is <code>DistributedObjectEvent.getObjectName</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15773">#15773</a></p>
</li>
<li>
<p>Removed the deprecated <code>getReplicationEventCount()</code> method of
local replicated map statistics.
<a href="https://github.com/hazelcast/hazelcast/pull/15676">#15676</a></p>
</li>
<li>
<p>Removed the legacy <code>AtomicLong</code> and deprecated <code>IdGenerator</code>
implementations.
<a href="https://github.com/hazelcast/hazelcast/pull/15601">#15601</a></p>
</li>
<li>
<p>Removed the legacy <code>ILock</code> implementation and
the <code>HazelcastInstance.getLock()</code> method. Instead
we provide the unsafe mode of CP Subsystem&#8217;s <code>FencedLock</code>.
The <code>ICondition</code> is not supported anymore.
<a href="https://github.com/hazelcast/hazelcast/pull/15625">#15625</a></p>
</li>
<li>
<p>Removed the legacy <code>AtomicReference</code> implementation and
the <code>HazelcastInstance.getAtomicReference()</code> method. Instead
we provide the unsafe mode for all CP data structures.
<a href="https://github.com/hazelcast/hazelcast/pull/15593">#15593</a></p>
</li>
<li>
<p>Removed the legacy <code>Semaphore</code> implementation and
the <code>HazelcastInstance.getSemaphore()</code> method. Instead
we provide the unsafe mode for all CP data structures.
<a href="https://github.com/hazelcast/hazelcast/pull/15539">#15539</a></p>
</li>
<li>
<p>Removed the legacy <code>CountdownLatch</code> implementation and
the <code>HazelcastInstance.getCountdownLatch()</code> method. Instead
we provide the unsafe mode for all CP data structures.
<a href="https://github.com/hazelcast/hazelcast/pull/15538">#15538</a></p>
</li>
<li>
<p>Added <code>Nullable</code> and <code>Nonnull</code> annotations to IQueue, IMap,
<code>HazelcastInstance</code>, Cardinality Estimator, IExecutor, Durable Executor,
<code>QuorumService</code>, CP subsystem, logging service,
lifecycle service, partition service and client service.
<a href="https://github.com/hazelcast/hazelcast/pull/15156">#15156</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15003">#15003</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15442">#15442</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15842">#15842</a></p>
</li>
<li>
<p>Added null checks and annotations to <code>Cluster</code>, Ringbuffer, Replicated Map,
IList, ISet, ITopic and MultiMap interfaces.
<a href="https://github.com/hazelcast/hazelcast/pull/15351">#15351</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15220">#15220</a></p>
</li>
<li>
<p>Made the collection clones of IMap immutable so that
<code>UnsupportedOperationException</code> is thrown consistently
upon the attempts to update a collection returned by the <code>keySet</code>,
<code>entrySet</code>, <code>localKeySet</code>, <code>values</code> and <code>getAll</code> methods.
<a href="https://github.com/hazelcast/hazelcast/pull/15013">#15013</a></p>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="distributed-events"><a class="anchor" href="#distributed-events"></a><a class="link" href="#distributed-events">Distributed Events</a></h5>
<div class="ulist">
<ul>
<li>
<p>Removed the unused entry listener configuration code since
the return type of <code>getImplementation()</code> has been changed from
<code>EntryListener</code> to <code>MapListener</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/16051">#16051</a></p>
</li>
<li>
<p>Fixed <code>MemberAttributeEvent</code>s <code>getMembers()</code> method to return
the correct members list for the client.
<a href="https://github.com/hazelcast/hazelcast/pull/15231">#15231</a></p>
</li>
<li>
<p>Refactored the <code>MigrationListener</code> API. With this change,
an event is published when a new migration process starts
and another one when migration is completed. Additionally,
on each replica migration, both for primary and backup
replica migrations, a migration event is published.
<a href="https://github.com/hazelcast/hazelcast/pull/15071">#15071</a></p>
</li>
<li>
<p>Removed the backward compatible <code>ADDED</code> event from the
<code>loadAll</code> method.
<a href="https://github.com/hazelcast/hazelcast/pull/14964">#14964</a></p>
</li>
<li>
<p>Refactored and cleaned up the internal partition/migration listeners:</p>
<div class="ulist">
<ul>
<li>
<p>Renamed <code>PartitionListener</code> to <code>PartitionReplicaInterceptor</code> and
removed registering child listeners, which is not used.</p>
</li>
<li>
<p>Renamed <code>InternalMigrationListener</code> to <code>MigrationInterceptor</code> and
converted to interface with default methods.</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15051">#15051</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Added <code>EntryExpiredListener</code> to the <code>EntryListener</code> interface.
<a href="https://github.com/hazelcast/hazelcast/pull/14959">#14959</a></p>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="configuration"><a class="anchor" href="#configuration"></a><a class="link" href="#configuration">Configuration</a></h5>
<div class="ulist">
<ul>
<li>
<p><code>CachingProvider</code> no longer resolves an URI as the instance name
since it was used both as the namespace for the cache manager and as a
means to locate a running Hazelcast instance.
<a href="https://github.com/hazelcast/hazelcast/pull/15995">#15995</a></p>
</li>
<li>
<p>Removed the configuration for user defined services SPI.
<a href="https://github.com/hazelcast/hazelcast/pull/15951">#15951</a></p>
</li>
<li>
<p>The group name in the client configuration renamed to cluster name.
<a href="https://github.com/hazelcast/hazelcast/pull/15772">#15772</a></p>
</li>
<li>
<p>Unified <code>InvalidConfigurationException</code> and <code>ConfigurationException</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15132">#15132</a></p>
</li>
<li>
<p>Removed the deprecated <code>AwsConfig</code> getter/setter methods, e.g.,
<code>getAccessKey()</code>. They have been replaced with the <code>getProperty()</code>
methods, e.g., <code>getProperty("access-key")</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15758">#15758</a></p>
</li>
<li>
<p>Moved the following client statistics properties to the public <code>ClientProperty</code>
class.</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.client.statistics.enabled</code></p>
</li>
<li>
<p><code>hazelcast.client.statistics.period.seconds</code></p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15752">#15752</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Undeprecated the following group properties:</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.memcache.enabled</code></p>
</li>
<li>
<p><code>hazelcast.rest.enabled</code></p>
</li>
<li>
<p><code>hazelcast.http.healthcheck.enabled</code></p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15743">#15743</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Removed the deprecated <code>get/setImplementation()</code> methods of
login module configuration. They have been replaced with
<code>get/setClassName()</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15729">#15729</a></p>
</li>
<li>
<p>Removed the deprecated <code>get/setPartitionStrategy()</code> methods of
<code>PartitioningStrategyConfig</code> configuration. They have been replaced with
<code>get/setPartitioningStrategy()</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15730">#15730</a></p>
</li>
<li>
<p>Removed the deprecated <code>get/setSyncBackupCount()</code> methods of
<code>MultiMap</code> configuration. They have been replaced with
<code>get/setBackupCount()</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15720">#15720</a></p>
</li>
<li>
<p>Removed the deprecated <code>get/setServiceImpl()</code> methods of
service configuration. They have been replaced with
<code>get/setImplementation()</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15680">#15680</a></p>
</li>
<li>
<p>Removed the <code>connection-attempt-period</code> and <code>connection-attempt-limit</code>
configuration elements. Instead, the elements of <code>connection-retry</code>
are now used.
<a href="https://github.com/hazelcast/hazelcast/pull/15675">#15675</a></p>
</li>
<li>
<p>Renamed <code>MapAttributeConfig</code> as <code>AttributeConfig</code>. Also, its
<code>extractor</code> field is renamed as <code>extractorClassName</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15548">#15548</a></p>
</li>
<li>
<p>Improved the index configuration API so that now you
can specify the name of the index. Also, instead of boolean type,
you can use index type enumeration.
<a href="https://github.com/hazelcast/hazelcast/pull/15537">#15537</a></p>
</li>
<li>
<p>Renamed the <code>group-name</code> configuration element as <code>cluster-name</code> and
removed the <code>GroupConfig</code> class.
<a href="https://github.com/hazelcast/hazelcast/pull/15540">#15540</a></p>
</li>
<li>
<p>Removed the deprecated configuration parameters from
Replicated Map, i.e., <code>concurrency-level</code> and <code>replication-delay-millis</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15404">#15404</a></p>
</li>
<li>
<p>Removed the deprecated configuration parameters from the Near
Cache configuration.
<a href="https://github.com/hazelcast/hazelcast/pull/15313">#15313</a></p>
</li>
<li>
<p>Moved the Event Journal configuration inside the map/cache
configuration. Before, it was configured as a parent-level
element.
<a href="https://github.com/hazelcast/hazelcast/pull/15185">#15185</a></p>
</li>
<li>
<p>Moved the Merkle tree configuration under map configuration.
<a href="https://github.com/hazelcast/hazelcast/pull/15180">#15180</a></p>
</li>
<li>
<p>Removed the XSDs for Hazelcast IMDG 3.x versions.
<a href="https://github.com/hazelcast/hazelcast/pull/15177">#15177</a></p>
</li>
<li>
<p>Removed deprecated client configuration methods such as
<code>isInsideAws()</code> and <code>newAliasedDiscoveryConfig()</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15012">#15012</a></p>
</li>
<li>
<p>Removed the <code>hazelcast.executionservice.taskscheduler.remove.oncancel</code>
system property and related methods.
<a href="https://github.com/hazelcast/hazelcast/pull/14998">#14998</a></p>
</li>
<li>
<p>Changed the <code>non-space-string</code> XSD type to collapse all
whitespaces, so they are handled correctly in the declarative
Hazelcast IMDG configuration files.
<a href="https://github.com/hazelcast/hazelcast/issues/14919">#14919</a></p>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="management-center"><a class="anchor" href="#management-center"></a><a class="link" href="#management-center">Management Center</a></h5>
<div class="ulist">
<ul>
<li>
<p>Scripting is now disabled by default for both Hazelcast
IMDG Open Source and Enterprise editions. Previously, it was disabled
only for the Enterprise edition.
<a href="https://github.com/hazelcast/hazelcast/issues/16526">#16526</a></p>
</li>
<li>
<p>Removed all the codes providing HTTP based communications
between Hazelcast Management Center  and Hazelcast IMDG. Therefore:</p>
<div class="ulist">
<ul>
<li>
<p>Removed the <code>MCMutualAuthConfig</code> class.</p>
</li>
<li>
<p>Removed the <code>enabled</code>, <code>url</code>, <code>mutualAuthConfig</code>, and <code>updateInterval</code>
fields from the <code>ManagementCenterConfig</code> class.</p>
</li>
<li>
<p>Declarative XML configuration simply looks like the following:</p>
<div class="listingblock">
<div class="content">
<pre class="CodeRay highlight"><code data-lang="java">&lt;management-center scripting-enabled=<span class="string"><span class="delimiter">&quot;</span><span class="content">true|false</span><span class="delimiter">&quot;</span></span>/&gt;</code></pre>
</div>
</div>
</li>
<li>
<p>Declarative YAML configuration simply looks like the following:</p>
<div class="listingblock">
<div class="content">
<pre class="CodeRay highlight"><code data-lang="java">management-center
  scripting-enabled: <span class="predefined-constant">true</span>|<span class="predefined-constant">false</span></code></pre>
</div>
</div>
</li>
<li>
<p>Related REST API changes are as follows:</p>
<div class="ulist">
<ul>
<li>
<p>Removed the <code>/hazelcast/rest/mancenter/changeurl</code> endpoint.</p>
</li>
<li>
<p>Renamed <code>/hazelcast/rest/mancenter/security/permissions</code> as <code>/hazelcast/rest/management/security/permissions</code>.</p>
</li>
<li>
<p>Renamed the <code>/hazelcast/rest/mancenter/wan/*</code> endpoints as <code>/hazelcast/rest/wan/*</code>.</p>
</li>
<li>
<p>Removed the legacy <code>/hazelcast/rest/mancenter/clearWanQueues</code> alternative URL in favor
of <code>/hazelcast/rest/wan/clearWanQueues</code>.</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="wan-replication"><a class="anchor" href="#wan-replication"></a><a class="link" href="#wan-replication">WAN Replication</a></h5>
<div class="ulist">
<ul>
<li>
<p>Aligned the naming of WAN classes, interfaces and getters/setters.
Some examples are listed below:</p>
<div class="ulist">
<ul>
<li>
<p><code>WanReplicationPublisher</code> &#8594; <code>WanPublisher</code></p>
</li>
<li>
<p><code>WanReplicationConsumer</code> &#8594; <code>WanConsumer</code></p>
</li>
<li>
<p><code>WanReplicationEvent</code> &#8594; <code>WanEvent</code></p>
</li>
<li>
<p><code>WanBatchPublisherConfig</code> &#8594; <code>WanBatchPublisherConfig</code></p>
</li>
<li>
<p><code>WanCustomPublisherConfig</code> &#8594; <code>WanCustomPublisherConfig</code></p>
<div class="paragraph">
<p>See <a href="https://github.com/hazelcast/hazelcast/pull/16174">#16174</a> for
all the changes.</p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Cleaned up the WAN publisher SPI to make it easier to implement integration between map/cache entry mutation and an external system.</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15195">#15195</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15432">#15432</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15527">#15527</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/16052">#16052</a></p>
</div>
</li>
<li>
<p>Replaced the <code>WAN</code> prefix of classes with <code>Wan</code> for the
sake of naming consistencies.
<a href="https://github.com/hazelcast/hazelcast/pull/15571">#15571</a></p>
</li>
<li>
<p>Separated WAN private and public classes into different packages.
<a href="https://github.com/hazelcast/hazelcast/pull/15195">#15195</a></p>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="split-brain-protection-and-split-brain-merge"><a class="anchor" href="#split-brain-protection-and-split-brain-merge"></a><a class="link" href="#split-brain-protection-and-split-brain-merge">Split-Brain Protection and Split-Brain Merge</a></h5>
<div class="ulist">
<ul>
<li>
<p>Removed the dependencies on <code>Data</code> from the <code>SplitBrainMergePolicy</code>
API:</p>
<div class="ulist">
<ul>
<li>
<p>The newly introduced <code>getRawValue/Key</code> methods (which supersede
the old getValue/Key) in <code>MergingValue/MergingEntry</code> classes
return the in-memory representation as <code>OBJECT</code>. The deserialized
value can be obtained using <code>getDeserializedValue/Key</code>.</p>
</li>
<li>
<p>The merge types in SplitBrainMergeTypes no longer depend on Data.
Also, the value type has been removed from the various "view"
interfaces such as <code>MergingHits</code>, <code>MergingCreationTime</code>, etc.</p>
</li>
<li>
<p>The new marker super-interface <code>MergingView</code> has been introduced that
all the "view" interfaces (including <code>MergingValue</code>) now extend.</p>
</li>
<li>
<p>The generic type signature of <code>SplitBrainMergePolicy</code> has been changed
to specify the (deserialized) type of the merging value.</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/16423">#16423</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Introduced "split brain protection" concept to replace "quorum"
to make it more explicit and unambiguous. Classes and configuration
elements including the term "quorum" has been replaced by "splitbrainprotection".
<a href="https://github.com/hazelcast/hazelcast/pull/15444">#15444</a></p>
</li>
<li>
<p>Renamed the <code>isMinimumClusterSizeSatisfied()</code> method as
<code>hasMinimumSize().</code>
<a href="https://github.com/hazelcast/hazelcast/pull/15554">#15554</a></p>
</li>
<li>
<p>Removed the legacy merge policies specific to a data structure
in favour of generic merge policies.</p>
<div class="ulist">
<ul>
<li>
<p>PASS_THROUGH</p>
</li>
<li>
<p>PUT_IF_ABSENT</p>
</li>
<li>
<p>HIGHER_HITS</p>
</li>
<li>
<p>LATEST_ACCESS</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15292">#15292</a></p>
</div>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="serialization"><a class="anchor" href="#serialization"></a><a class="link" href="#serialization">Serialization</a></h5>
<div class="ulist">
<ul>
<li>
<p>Now, <code>Data</code> and <code>SerializationService</code> are not exposed
in <code>ObjectDataOutput/Input</code> and <code>ObjectDataInput</code>,
respectively.
<a href="https://github.com/hazelcast/hazelcast/pull/16064">#16064</a></p>
</li>
<li>
<p>Since <code>SerializationService</code> is now an internal API,
the implementations of <code>ObjectDataOutput</code> make use of
<code>SerializationServiceSupport</code> where serialization service
is needed in the user customizations.
<a href="https://github.com/hazelcast/hazelcast/pull/16046">#16046</a></p>
</li>
<li>
<p>Added support for the following default Java serializers for collections:</p>
<div class="ulist">
<ul>
<li>
<p><code>ArrayDeque</code></p>
</li>
<li>
<p><code>HashSet</code></p>
</li>
<li>
<p><code>TreeSet</code></p>
</li>
<li>
<p><code>TreeMap</code></p>
</li>
<li>
<p><code>LinkedHashSet</code></p>
</li>
<li>
<p><code>LinkedHashMap</code></p>
</li>
<li>
<p><code>LinkedBlockingQueue</code></p>
</li>
<li>
<p><code>ArrayBlockingQueue</code></p>
</li>
<li>
<p><code>PriorityBlockingQueue</code></p>
</li>
<li>
<p><code>DelayQueue</code></p>
</li>
<li>
<p><code>SynchronousQueue</code></p>
</li>
<li>
<p><code>LinkedBlockingDeque</code></p>
</li>
<li>
<p><code>LinkedTransferQueue</code></p>
</li>
<li>
<p><code>CopyOnWriteArrayList</code></p>
</li>
<li>
<p><code>CopyOnWriteArraySet</code></p>
</li>
<li>
<p><code>ConcurrentSkipListSet</code></p>
</li>
<li>
<p><code>ConcurrentHashMap</code></p>
</li>
<li>
<p><code>ConcurrentSkipListMap</code></p>
</li>
<li>
<p><code>Map.Entry</code></p>
</li>
<li>
<p><code>PriorityQueue</code></p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15371">#15371</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/16102">#16102</a>,</p>
</div>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="rest"><a class="anchor" href="#rest"></a><a class="link" href="#rest">REST</a></h5>
<div class="ulist">
<ul>
<li>
<p>Performed the following cleanups:</p>
<div class="ulist">
<ul>
<li>
<p>Made all the HTTP status codes (including 200) to return a response body.</p>
</li>
<li>
<p>The exception handling now always returns a HTTP 500 for an error.</p>
</li>
<li>
<p>HTTP 400 is NOT returned now if any handler throws an
<code>IndexOutOfBoundsException</code>.</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/16148">#16148</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Aligned the output format of the REST API to return JSON:</p>
<div class="ulist">
<ul>
<li>
<p>Changed the output format of the <code>healthcheck</code> and <code>cluster</code> URIs to return
JSON since the other URIs already return JSON.</p>
</li>
<li>
<p>Now all the <code>POST</code> handlers use the <code>checkCredentials()</code> method
since it handles the case when there is no data sent.</p>
</li>
<li>
<p>Now all the handlers use the common <code>prepareResponse()</code> method
which prepares the response for different response types appropriately.</p>
</li>
<li>
<p>Expanded the return value of the <code>cluster</code> URI to return an array with
JSON objects for each cluster member so you do not need to parse the
member list but keep the list as a separate value.</p>
</li>
<li>
<p>Added credentials checks to the WAN URIs.</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/16087">#16087</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Changed the <code>application/javascript</code> "Content-Type" header used
by REST API to respond to the JSON documents. Now, it uses
<code>application/json</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/14972">#14972</a></p>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="distribution-package-changes"><a class="anchor" href="#distribution-package-changes"></a><a class="link" href="#distribution-package-changes">Distribution Package Changes</a></h5>
<div class="ulist">
<ul>
<li>
<p>Merged the client module into the core module: All the classes
in the <code>hazelcast-client</code> module have been moved to <code>hazelcast</code>.
<code>hazelcast-client.jar</code> will not be created anymore.
<a href="https://github.com/hazelcast/hazelcast/pull/15366">#15366</a></p>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="query-engine-api"><a class="anchor" href="#query-engine-api"></a><a class="link" href="#query-engine-api">Query Engine API</a></h5>
<div class="ulist">
<ul>
<li>
<p>The Predicate API has been cleaned up to eliminate exposing internal
interfaces and classes. The end result is that the public Predicate API
provides only interfaces (Predicate, PagingPredicate, and
PartitionPredicate) with no dependencies on internal APIs.
<a href="https://github.com/hazelcast/hazelcast/pull/15142">#15142</a></p>
</li>
<li>
<p>Converted <code>Projection</code> to a functional interface so that it has become
lambda friendly.
<a href="https://github.com/hazelcast/hazelcast/pull/15204">#15204</a></p>
</li>
<li>
<p>Converted the <code>Aggregator</code> abstract class to an interface.
<a href="https://github.com/hazelcast/hazelcast/pull/15764">#15764</a></p>
</li>
<li>
<p>Converted the following custom query attribute abstract classes to
functional interfaces so that they have become
lambda friendly.</p>
<div class="ulist">
<ul>
<li>
<p><code>ArgumentParser</code></p>
</li>
<li>
<p><code>ValueCallback</code></p>
</li>
<li>
<p><code>ValueCollector</code></p>
</li>
<li>
<p><code>ValueReader</code></p>
</li>
<li>
<p><code>ValueExtractor</code></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="api-package-interface-changes"><a class="anchor" href="#api-package-interface-changes"></a><a class="link" href="#api-package-interface-changes">API Package/Interface Changes</a></h5>
<div class="ulist">
<ul>
<li>
<p>Relocated the following classes:</p>
<div class="ulist">
<ul>
<li>
<p><code>com.hazelcast.monitor.LocalQueueStats</code> &#8594; <code>com.hazelcast.collection.LocalQueueStats</code></p>
</li>
<li>
<p><code>com.hazelcast.monitor.LocalExecutorStats</code> &#8594; <code>com.hazelcast.executor.LocalExecutorStats</code></p>
</li>
<li>
<p><code>com.hazelcast.monitor.LocalInstanceStats</code> &#8594; <code>com.hazelcast.instance.LocalInstanceStats</code></p>
</li>
<li>
<p><code>com.hazelcast.internal.management.JsonSerializable</code> &#8594; <code>com.hazelcast.json.internal.JsonSerializable</code></p>
</li>
<li>
<p><code>com.hazelcast.monitor.LocalMapStats</code> &#8594; <code>com.hazelcast.map.LocalMapStats</code></p>
</li>
<li>
<p><code>com.hazelcast.monitor.LocalMultiMapStats</code> &#8594; <code>com.hazelcast.multimap.LocalMultiMapStats</code></p>
</li>
<li>
<p><code>com.hazelcast.monitor.NearCacheStats</code> &#8594; <code>com.hazelcast.nearcache.NearCacheStats</code></p>
</li>
<li>
<p><code>com.hazelcast.monitor.LocalReplicatedMapStats</code> &#8594; <code>com.hazelcast.replicatedmap.LocalReplicatedMapStats</code></p>
</li>
<li>
<p><code>com.hazelcast.monitor.LocalTopicStats</code> &#8594; <code>com.hazelcast.topic.LocalTopicStats</code></p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15888">#15888</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Moved the <code>getXaResource()</code> method from the <code>TransactionContext</code> class
to <code>HazelcastInstance</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15728">#15728</a></p>
</li>
<li>
<p>Moved various private classes to internal packages.
<a href="https://github.com/hazelcast/hazelcast/pull/15569">#15569</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15570">#15570</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15588">#15588</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15599">#15599</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15603">#15603</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15616">#15616</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15171">#15171</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15151">#15151</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15146">#15146</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15145">#15145</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15129">#15129</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15124">#15124</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15123">#15123</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15122">#15122</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15121">#15121</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15888">#15888</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15887">#15887</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15888">#15888</a></p>
</li>
<li>
<p>The APIs that returned <code>UUID</code> string now returns <code>UUID</code>. These include <code>Endpoint.getUUID</code>,
listener registrations/deregistrations, keys of replica timestamps of <code>VectorClock</code>,
<code>UUID</code>s in the executor service, <code>UUID</code> in the <code>MigrationInfo</code>, cluster ID and transaction ID.
<a href="https://github.com/hazelcast/hazelcast/pull/15473">#15473</a></p>
</li>
<li>
<p>Removed <code>ICompletableFuture</code> which was a replacement for the missing JDK
8&#8217;s <code>CompletableFuture</code>. Now, it has been replaced by <code>CompletionStage</code>.
See <a href="https://github.com/hazelcast/hazelcast/pull/15441">#15441</a> for more details.</p>
</li>
<li>
<p>Removed the usage of <code>com.hazelcast.core.IBifunction</code>, replaced
it with <code>java.util.function.Bifunction</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15201">#15201</a></p>
</li>
<li>
<p>Renamed the <code>getId</code> method of <code>IdentifiedDataSerializable</code>
to <code>getClassId</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15127">#15127</a></p>
</li>
<li>
<p>Made the <code>EntryProcessor</code> interface lambda friendly.
<a href="https://github.com/hazelcast/hazelcast/pull/14995">#14995</a></p>
</li>
<li>
<p>Removed the <code>LegacyAsyncMap</code> interface.
<a href="https://github.com/hazelcast/hazelcast/pull/14994">#14994</a></p>
</li>
<li>
<p>Removed the support for primitives for <code>setAttribute</code> and
<code>getAttribute</code> member attributes.
All member attributes support only <code>String</code> attributes now.
<a href="https://github.com/hazelcast/hazelcast/pull/14974">#14974</a></p>
</li>
<li>
<p>Removed the <code>java.util.function</code> back ports.
<a href="https://github.com/hazelcast/hazelcast/pull/14912">#14912</a></p>
</li>
<li>
<p><code>CacheService</code> now implements <code>StatisticsAwareService</code>
<a href="https://github.com/hazelcast/hazelcast/issues/14904">#14904</a></p>
</li>
<li>
<p>Renamed the class to start a Hazelcast member from
<code>com.hazelcast.core.server.StartServer</code> to
<code>com.hazelcast.core.server.HazelcastMemberStarter</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/12791">#12791</a></p>
</li>
<li>
<p>The packages of the following classes have been changed:</p>
<table class="tableblock frame-all grid-all spread">
<colgroup>
<col style="width: 33.3333%;">
<col style="width: 22.2222%;">
<col style="width: 33.3333%;">
<col style="width: 11.1112%;">
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>Classes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>Package Before IMDG 4.0</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>Package After IMDG 4.0</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>Details</p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>LdapLoginModule</code>, <code>BasicLdapLoginModule</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.security.impl</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.security.loginimpl</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15929">#15929</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>EventJournalMapEvent</code>, <code>EventJournalCacheEvent</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="ulist">
<ul>
<li>
<p><code>com.hazelcast.map.impl.journal</code></p>
</li>
<li>
<p><code>com.hazelcast.cache.impl.journal</code></p>
</li>
</ul>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="ulist">
<ul>
<li>
<p><code>com.hazelcast.map</code></p>
</li>
<li>
<p><code>com.hazelcast.cache</code></p>
</li>
</ul>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15900">#15900</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>All private classes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="ulist">
<ul>
<li>
<p><code>com.hazelcast.client.config</code></p>
</li>
<li>
<p><code>com.hazelcast.config</code></p>
</li>
<li>
<p><code>com.hazelcast.spi.partition</code></p>
</li>
<li>
<p><code>com.hazelcast.map.journal</code></p>
</li>
<li>
<p><code>com.hazelcast.query.extractor</code></p>
</li>
</ul>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="ulist">
<ul>
<li>
<p><code>com.hazelcast.client.config.impl</code></p>
</li>
<li>
<p><code>com.hazelcast.internal.config</code></p>
</li>
<li>
<p><code>com.hazelcast.internal.partition</code></p>
</li>
<li>
<p><code>com.hazelcast.map.impl.journal</code></p>
</li>
<li>
<p><code>com.hazelcast.query.impl</code></p>
</li>
</ul>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15887">#15887</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>All classes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.internal.util.function</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.function</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15802">#15802</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>WanPublisherState</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.config</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.wan</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15791">#15791</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>All private classes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.spi.hotrestart</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.internal.hotrestart</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15603">#15603</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>All private NIO and serialization classes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.nio</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.internal.nio</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15599">#15599</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>All private YAML, CRDT and memory classes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="ulist">
<ul>
<li>
<p><code>com.hazelcast.config.yaml</code></p>
</li>
<li>
<p><code>com.hazelcast.crdt</code></p>
</li>
<li>
<p><code>com.hazelcast.memory</code></p>
</li>
<li>
<p><code>com.hazelcast.elastic</code></p>
</li>
</ul>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="ulist">
<ul>
<li>
<p><code>com.hazelcast.internal.config.yaml</code></p>
</li>
<li>
<p><code>com.hazelcast.internal.crdt</code></p>
</li>
<li>
<p><code>com.hazelcast.internal.memory</code></p>
</li>
<li>
<p><code>com.hazelcast.internal.elastic</code></p>
</li>
</ul>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15588">#15588</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>All</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.util</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.internal.util</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15570">#15570</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>SerializationService</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.spi.serialization</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.internal.serialization</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15418">#15418</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>Private client classes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="ulist">
<ul>
<li>
<p><code>client.connection</code></p>
</li>
<li>
<p><code>client.proxy</code></p>
</li>
<li>
<p><code>client.spi.properties</code></p>
</li>
<li>
<p><code>client.spi</code></p>
</li>
<li>
<p><code>client.util.ClientDelegatingFuture</code></p>
</li>
<li>
<p><code>client.api</code></p>
</li>
</ul>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="ulist">
<ul>
<li>
<p><code>client.impl.connection</code></p>
</li>
<li>
<p><code>client.impl.proxy</code></p>
</li>
<li>
<p><code>client.properties</code></p>
</li>
<li>
<p><code>client.impl.spi</code></p>
</li>
<li>
<p><code>client.impl.ClientDelegatingFuture</code></p>
</li>
<li>
<p><code>client</code></p>
</li>
</ul>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15377">#15377</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>Joiner</code> and <code>TcpIpJoiner</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.cluster</code> and <code>com.hazelcast.cluster.impl</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.internal.cluster</code> and <code>com.hazelcast.internal.cluster.impl</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15335">#15335</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>All IExecutor classes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.core</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.executor</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15187">#15187</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>Address</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.nio</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.cluster</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15172">#15172</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>ClassNameFilter</code>, <code>SerializationClassNameFilter</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.nio</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.nio.serialization</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15171">#15171</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>All IMap classes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.core</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.map</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15149">#15149</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>ReplicatedMap</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.core</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.replicatedmap</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15146">#15146</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>IAtomicLong</code>, <code>IAtomicReference</code>, <code>ILock</code>, <code>ICondition</code>, <code>ISemaphore</code>, <code>ICountDownLatch</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.core</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.cp</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15143">#15143</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>IndexAwarePredicate</code>, <code>VisitablePredicate</code>, <code>SqlPredicate/Parser</code>, <code>TruePredicate</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.query</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.query.impl.predicates</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15142">#15142</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>Transaction collection classes (<code>TransactionalMap</code>, <code>TransactionalList</code>, etc.)</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.core</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.transaction</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15129">#15129</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>IQueue</code>, <code>QueueStore</code>, <code>IList</code>, <code>ISet</code>, <code>ItemEvent</code>, <code>ItemListener</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.core</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.collection</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15127">#15127</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>MultiMap</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.core</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.multimap</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15123">#15123</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>ITopic</code>, <code>Message</code>, <code>MessageListener</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.core</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.topic</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15122">#15122</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>RingbufferStoreFactory</code>, <code>RingbufferStore</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.core</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.ringbuffer</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15121">#15121</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>Operation classes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.spi</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.spi.impl.operationservice</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15115">#15115</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>Partition SPI classes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.spi</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.spi.partition</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15088">#15088</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>Member and membership classes (<code>Cluster</code>, <code>Member</code>, etc.)</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.core</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.cluster</code></p>
</div></div></td>
<td class="tableblock halign-center valign-middle" rowspan="2"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15046">#15046</a></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>Client classes (<code>Client</code>, <code>ClientService</code>, etc.)</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.core</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.client.api</code></p>
</div></div></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p>Partition classes</p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.core</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><code>com.hazelcast.partition</code></p>
</div></div></td>
<td class="tableblock halign-left valign-top"><div><div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15039">#15039</a></p>
</div></div></td>
</tr>
</tbody>
</table>
</li>
</ul>
</div>
</div>
</div>
<div class="sect3">
<h4 id="enh-40"><a class="anchor" href="#enh-40"></a><a class="link" href="#enh-40">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p><strong>Separating WAN Publisher Configuration:</strong> The previously known <code>wan-publisher</code>
(or <code>WanPublisherConfig</code>) has been separated into two configuration elements
to be used for built-in and custom WAN publishers:</p>
<div class="ulist">
<ul>
<li>
<p><code>batch-publisher</code> (or <code>WanBatchPublisherConfig</code>)</p>
</li>
<li>
<p><code>custom-publisher</code>  (or <code>WanCustomPublisherConfig</code>)</p>
<div class="paragraph">
<p>See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/index.html#defining-wan-replication" target="_blank" rel="noopener">Defining WAN Replication section</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p><strong>Tracking WAN Synchronization Events:</strong> Management Center, logs and diagnostics now report
the progress of a WAN synchronization. <a href="https://github.com/hazelcast/hazelcast/pull/15221">#15221</a></p>
</li>
<li>
<p><strong>Improvements in the JAAS Authentication Mechanism:</strong></p>
<div class="ulist">
<ul>
<li>
<p>Aligned with JAAS best practices.</p>
</li>
<li>
<p>Added support for the standard JAAS callbacks, i.e., <code>NameCallback</code> and <code>PasswordCallback</code></p>
</li>
<li>
<p>Avoided automatic deserialization of custom credentials in the client protocol.</p>
</li>
<li>
<p>Introduce the concept of security roles to distinguish between (a single) connecting side identity and its privileges.</p>
</li>
<li>
<p>Used <code>Credentials</code> object only for authentication to prevent secrets leaks.</p>
</li>
<li>
<p>Cleaned up the <code>Credentials</code> interface.</p>
<div class="paragraph">
<p>See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#jaas-authentication" target="_blank" rel="noopener">JAAS Authentication section</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p><strong>Improvements in the Security Configuration:</strong></p>
<div class="ulist">
<ul>
<li>
<p>Replaced the <code>&lt;group&gt;</code> configuration by simple <code>&lt;cluster-name&gt;</code>.</p>
</li>
<li>
<p>Removed the <code>group-password</code> configuration.</p>
</li>
<li>
<p>Introduced the concept of security realms on the members. <a href="https://github.com/hazelcast/hazelcast/pull/15651">#15651</a></p>
</li>
<li>
<p>Added typed authentication and identity configuration (e.g. <code>&lt;ldap&gt;</code> authentication, <code>&lt;token&gt;</code> identity)</p>
</li>
<li>
<p>Used similar identity configuration in client config</p>
<div class="paragraph">
<p>See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#changes-in-the-security-configuration" target="_blank" rel="noopener">Hazelcast IMDG 4.0 Migration Guide</a>
and <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#security" target="_blank" rel="noopener">Security chapter</a>.</p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p><strong>Javadoc for the Hazelcast IMDG Enterprise Edition:</strong> Added Javadoc JAR file
for the Hazelcast IMDG Enterprise Edition.
See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#getting-started" target="_blank" rel="noopener">Getting Started section</a></p>
</li>
<li>
<p><strong>HTTPS for Scripts:</strong> Enabled the REST endpoints for the <code>cluster.sh</code> and
<code>healthcheck.sh</code> scripts to use HTTPS. Before, they were
using HTTP. See the
<a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#using-the-script-cluster-sh" target="_blank" rel="noopener">cluster.sh</a> and
<a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#health-check-script" target="_blank" rel="noopener">healtcheck.sh</a> sections.</p>
</li>
<li>
<p><strong>MapLoader with Custom time-to-live:</strong> Introduced the <code>EntryStore</code> and <code>EntryLoader</code>
interfaces (adding expiration support for MapStore). See the
<a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/index.html#loading-and-storing-persistent-data">Loading and Storing Persistent Data section</a>.</p>
</li>
<li>
<p><strong>Moby Naming:</strong> Introduced friendly names for the Hazelcast instances to be shown
in the Hazelcast Management Center. See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#checking-the-name-of-the-instance-for-rest-client" target="_blank" rel="noopener">Checking the Instances' Name section</a>. Also, a new system property, <code>hazelcast.member.naming.moby.enabled</code>, is introduced for this purpose.</p>
</li>
<li>
<p><strong>Improved Client Performance:</strong> Introduced a way to eliminate the sync backup
wait from the client and send the backup ACK to the client:
the smart clients have been made backup aware and the backups
now are redirected to the client directly from the backup members.
See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#configuring-backup-acknowledgment" target="_blank" rel="noopener">Configuring Backup Acknowledgment section</a>.</p>
</li>
<li>
<p><strong>Ownerless Client:</strong> Previously, the clients had an owner member
responsible for cleaning up their resources after they leave the cluster. Also, the
ownership information was needed to be replicated to the whole cluster when a client joins the cluster.
This mechanism have been made simpler by introducing the following system properties
to control the lifecycle of the clients on the member side:</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.client.cleanup.period.millis</code></p>
</li>
<li>
<p><code>hazelcast.client.cleanup.timeout.millis</code></p>
<div class="paragraph">
<p>See the <a href="https://docs.hazelcast.org/docs/4.0/manual/html-single/#system-properties" target="_blank" rel="noopener">System Properties section</a>.</p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p><strong>Single Thread Hazelcast Clients Performance:</strong> Hazelcast clients have been designed to be
used by multiple threads; the more threads you throw at it, the better the performance
(until it is saturated). Now, it has also been optimized for a single thread doing requests:
The default values for the <code>hazelcast.client.io.write.through</code> and <code>hazelcast.client.response.thread.dynamic</code>
have been changed from <code>false</code> to <code>true</code>.</p>
</li>
<li>
<p><strong>JSON Support for REST:</strong> Added support for <code>HazelcastJsonValue</code> over REST API: When a
<code>HazelcastJsonValue</code> is requested, now a UTF8 encoded JSON value is returned. The
response  has the JSON string in the payload and "Content-Type"
header is set to <code>application/json</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15017">#15017</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the other improvements performed to solve the enhancement
issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Removed the following duplicated MBeans since the metrics MBean
have been exposed:</p>
<div class="ulist">
<ul>
<li>
<p><code>ClientEngineMBean</code></p>
</li>
<li>
<p><code>EventServiceMBean</code></p>
</li>
<li>
<p><code>NetworkingServiceMBean</code></p>
</li>
<li>
<p><code>OperationServiceMBean</code></p>
</li>
<li>
<p><code>ProxyServiceMBean</code></p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/16425">#16425</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Renamed the <code>WanReplicationRef.setMergePolicy()</code> method
as <code>setMergePolicyClassName()</code> and made the <code>PassThroughMergePolicy</code>
the default merge policy for WAN replication if none is specified.
<a href="https://github.com/hazelcast/hazelcast/pull/16403">#16403</a></p>
</li>
<li>
<p>Added convenience constructor for <code>SpringManagedContext</code>
to easily create it in the programmatic way.
<a href="https://github.com/hazelcast/hazelcast/pull/16401">#16401</a></p>
</li>
<li>
<p>Added support for AWS PrivateLink. Now, Hazelcast IMDG
Java client can work with Hazelcast Cloud when it uses AWS PrivateLink.
<a href="https://github.com/hazelcast/hazelcast/pull/16371">#16371</a></p>
</li>
<li>
<p>Added the <code>getOrCreate()</code> method to the client configuration
to fix the issue with <code>setInstanceName()</code> when using Spring Boot
and Hazelcast client.
<a href="https://github.com/hazelcast/hazelcast/issues/16362">#16362</a></p>
</li>
<li>
<p>Improved the Ringbuffer data structure so that it does not
throw <code>StaleSequenceException</code> when using <code>ReadManyOperation</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/16303">#16303</a></p>
</li>
<li>
<p>Removed the shortened <code>mancenter</code> phrase from the source code.
<a href="https://github.com/hazelcast/hazelcast/pull/16282">#16282</a></p>
</li>
<li>
<p>Removed the client side user executor and related configuration,
i.e., <code>executor-pool-size</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/16215">#16215</a></p>
</li>
<li>
<p>Added the following client operations related to CP subsystem,
Hot Restart and WAN replication to be used by Management Center:</p>
<div class="ulist">
<ul>
<li>
<p><code>getCPMembers</code></p>
</li>
<li>
<p><code>promoteToCPMember</code></p>
</li>
<li>
<p><code>removeCPMember</code></p>
</li>
<li>
<p><code>resetCPSubsystem</code></p>
</li>
<li>
<p><code>triggerPartialStart</code></p>
</li>
<li>
<p><code>triggerForceStart</code></p>
</li>
<li>
<p><code>triggerHotRestartBackup</code></p>
</li>
<li>
<p><code>interruptHotRestartBackup</code></p>
</li>
<li>
<p><code>changeWanReplicationState</code></p>
</li>
<li>
<p><code>clearWanQueues</code></p>
</li>
<li>
<p><code>addWanReplicationConfig</code></p>
</li>
<li>
<p><code>wanSyncMap</code></p>
</li>
<li>
<p><code>checkWanConsistency</code></p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/16226">#16226</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/16262">#16262</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/16078">#16078</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Added the support for <code>yml</code> extension, in addition to <code>yaml</code>,
for the Hazelcast configuration locator.
<a href="https://github.com/hazelcast/hazelcast/issues/16205">#16205</a></p>
</li>
<li>
<p>Improved the <code>IMap.putAll()</code> and <code>IMap.put()</code> behaviors
so that they match when they trigger listener events.
<a href="https://github.com/hazelcast/hazelcast/pull/16144">#16144</a></p>
</li>
<li>
<p>Added option to disable retrieving the
<code>OSMBean.getFreePhysicalMemorySize()</code> method.
<a href="https://github.com/hazelcast/hazelcast/pull/16039">#16039</a></p>
</li>
<li>
<p>The <code>recreateCachesOnCluster</code> invocation is not being checked
for the maximum invocations count anymore during cluster restarts.
<a href="https://github.com/hazelcast/hazelcast/pull/16026">#16026</a></p>
</li>
<li>
<p>Introduced a special Java client type to be used by
Management Center.
<a href="https://github.com/hazelcast/hazelcast/pull/16006">#16006</a></p>
</li>
<li>
<p>Removed the PID management from the IMDG start and stop
scripts. You can now start multiple Hazelcast instances, when
using the start script, without the need to create another
copy of the <code>/bin</code> directory, i.e., it now allows running
multiple processes.
<a href="https://github.com/hazelcast/hazelcast/pull/15934">#15934</a></p>
</li>
<li>
<p>Added the cache statistics to the dynamically collected metrics
<a href="https://github.com/hazelcast/hazelcast/pull/15926">#15926</a></p>
</li>
<li>
<p>Removed <code>fail-on-maxbackoff</code> element in the connection retry
configuration and added <code>cluster-connect-timeout-millis</code>
instead to allow retrying with fixed amount of time
and shutdown after some time.
<a href="https://github.com/hazelcast/hazelcast/pull/15923">#15923</a></p>
</li>
<li>
<p>Introduced cluster fail-fast when there are missing security
realms.
<a href="https://github.com/hazelcast/hazelcast/pull/15872">#15872</a></p>
</li>
<li>
<p>Added binary compatibility tests for the client protocol.
<a href="https://github.com/hazelcast/hazelcast/pull/15822">#15822</a></p>
</li>
<li>
<p>Added <code>ConnectionRetryConfig</code> to <code>ClientConfigXmlGenerator</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15821">#15821</a></p>
</li>
<li>
<p>Renamed the <code>restart()</code> method of <code>CPSubsystemManagementService</code>
to <code>reset()</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15798">#15798</a></p>
</li>
<li>
<p>Unified the IMap and ICache eviction configurations to decrease
the configuration complexity.
<a href="https://github.com/hazelcast/hazelcast/pull/15592">#15592</a></p>
</li>
<li>
<p>Introduced dynamic metric collection. Previously, Hazelcast metrics were
reported programmatically to the Hazelcast Management Center, one by one.
Introducing new metrics required changes both in IMDG and in MC, which limited the
number of metrics sent to MC. In 4.0 this has been changed to collecting and reporting
all available metrics dynamically just by declaring them in IMDG. Besides reporting
the metrics dynamically to MC exposing them on JMX is done dynamically as well.
Both reporting to MC and exposing on JMX are toggleable by using the <code>metric</code>
configuration element introduced in 4.0.</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15560">#15560</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15650">#15650</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15667">#15667</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15779">#15779</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15782">#15782</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15818">#15818</a></p>
</div>
</li>
<li>
<p>Set the log level to <code>FINEST</code> for <code>PartitionMigratingException</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15577">#15577</a></p>
</li>
<li>
<p>Added the support for nested JSON objects in arrays.
<a href="https://github.com/hazelcast/hazelcast/pull/15425">#15425</a></p>
</li>
<li>
<p>To be shown on Management Center, the clients now send both its IP
address and canonical hostname. Before, only the hostname of the
client was shown.
<a href="https://github.com/hazelcast/hazelcast/pull/15421">#15421</a></p>
</li>
<li>
<p>Added a new implementation of <code>SecondsBasedEntryTaskScheduler</code> for the
<code>FOR_EACH</code> mode to improve the performance of <code>TransactionContext.commit()</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15414">#15414</a></p>
</li>
<li>
<p>Added a level of memory protection to the Hazelcast client protocol:
untrusted connections (the ones which haven&#8217;t finished
authentication yet) do not accept fragmented messages; they check the
frame size against a configurable limit.
<a href="https://github.com/hazelcast/hazelcast/pull/15396">#15396</a></p>
</li>
<li>
<p>Made the Hazelcast specific root nodes in the YAML
configurations optional.
<a href="https://github.com/hazelcast/hazelcast/pull/15389">#15389</a></p>
</li>
<li>
<p>Updated the <code>JavaVersion</code> class to support JDK 13 and 14 builds.
<a href="https://github.com/hazelcast/hazelcast/pull/15372">#15372</a></p>
</li>
<li>
<p>Added support for updating the licenses of all the running
members of a Hazelcast IMDG cluster using the REST API.
<a href="https://github.com/hazelcast/hazelcast/pull/15370">#15370</a></p>
</li>
<li>
<p>Introduced configuration of initial permits for CP subsystem
semaphore.
<a href="https://github.com/hazelcast/hazelcast/issues/15208">#15208</a></p>
</li>
<li>
<p>Added support for null keys for the client side implementations of
<code>IMap.addEntryListener()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/15155">#15155</a></p>
</li>
<li>
<p>Improved the generics for the API with Projection, Predicate and EntryListener
by adding lower bounded wildcards to accept a wider range of parameters.
<a href="https://github.com/hazelcast/hazelcast/pull/15153">#15153</a></p>
</li>
<li>
<p>Improved the performance of <code>TransactionLog.add()</code> by avoiding
the <code>LinkedList.remove()</code> call.
<a href="https://github.com/hazelcast/hazelcast/pull/15111">#15111</a></p>
</li>
<li>
<p>Made <code>ClientConfig</code> to override <code>toString</code> as it is the situation
with <code>Config</code> to make it easier to troubleshoot.
<a href="https://github.com/hazelcast/hazelcast/issues/15061">#15061</a></p>
</li>
<li>
<p>Added the full example configuration files (XML and YAML) for the
Hazelcast Java client.
<a href="https://github.com/hazelcast/hazelcast/pull/15056">#15056</a></p>
</li>
<li>
<p>Introduced functional and serializable interfaces having a single
abstract method which declares a checked exception. The interfaces
are also serializable and can be readily used in the IMDG API when
providing a lambda which is then serialized.
<a href="https://github.com/hazelcast/hazelcast/pull/14993">#14993</a></p>
</li>
<li>
<p>Enhanced the queries (read-only operations) in the CP Subsystem so that
they are executed with linearizability but they are not appended to the Raft log.
By this way, the grow of Raft logs and snapshots of read-only operations are
prevented, leading to throughput improvement
<a href="https://github.com/hazelcast/hazelcast/pull/14986">#14986</a></p>
</li>
<li>
<p>Improved the WAN feature so that now lazy deserialization is used
when merging entries received via WAN. Otherwise, the unconditional
deserialization was causing overhead.
<a href="https://github.com/hazelcast/hazelcast/pull/14982">#14982</a></p>
</li>
<li>
<p>Updated the following packages to Java 8 and removed the
3.x rolling upgrade compatibility paths: cache, MultiMap, cluster,
partition, WAN replication, CP subsystem, Hot Restart.
<a href="https://github.com/hazelcast/hazelcast/issues/14896">#14896</a></p>
</li>
<li>
<p>Added the support for Java 8 <code>Optionals</code> in the queries.
<a href="https://github.com/hazelcast/hazelcast/pull/14827">#14827</a></p>
</li>
<li>
<p>Fixed the Javadoc markup issues.
<a href="https://github.com/hazelcast/hazelcast/pull/14971">#14971</a></p>
</li>
<li>
<p>Updated the Hazelcast Kubernetes dependency to version 1.5.
<a href="https://github.com/hazelcast/hazelcast/pull/14898">#14898</a></p>
</li>
<li>
<p>Cleaned up the Maven repositories in Hazelcast&#8217;s <code>pom.xml</code>
to simplify the usage of Maven proxies.
<a href="https://github.com/hazelcast/hazelcast/pull/14850">#14850</a></p>
</li>
<li>
<p>Updated the web session manager dependency to its latest
version.
<a href="https://github.com/hazelcast/hazelcast/pull/14822">#14822</a></p>
</li>
<li>
<p>Separated the statistics for <code>IMap.set()</code> and <code>IMap.put()</code> methods.
<a href="https://github.com/hazelcast/hazelcast/pull/14811">#14811</a></p>
</li>
<li>
<p>Introduced a warning log for illegal reflective access operation when
using Java 9 and higher, and OpenJ9.
<a href="https://github.com/hazelcast/hazelcast/pull/14798">#14798</a></p>
</li>
<li>
<p>Added a method to easily identify when all replicas of a
partition have been lost: <code>allReplicasInPartitionLost()</code>
<a href="https://github.com/hazelcast/hazelcast/pull/11983">#11983</a></p>
</li>
<li>
<p>Changed the Scheduled Executor&#8217;s capacity value from "per partition"
to "per member".
<a href="https://github.com/hazelcast/hazelcast/issues/11629">#11629</a></p>
</li>
<li>
<p>Improved the fluent interface of configuration classes by adding
the <code>return this</code> statements to the setter methods.
<a href="https://github.com/hazelcast/hazelcast/pull/11107">#11107</a></p>
</li>
<li>
<p>Aligned the put mechanism for IMap and ICache: As in ICache,
now the put operations without time-to-live (TTL) in IMap makes an
entry either to live forever or use the TTL in the map&#8217;s
configuration (if configured).
<a href="https://github.com/hazelcast/hazelcast/issues/10965">#10965</a></p>
</li>
<li>
<p>Added support for falling back to a "default" configuration for
the cache data structure.
<a href="https://github.com/hazelcast/hazelcast/issues/10695">#10695</a></p>
</li>
<li>
<p>Improved the  security policy mechanism so that the
secrets (group password, symmetric encryption password, etc.)
are not being checked for the disabled features anymore. This
has also been an improvement for the startup logs related to
secrets. [#3398]</p>
</li>
<li>
<p>If the system detects that OpenSSL is available, then it
is now enabled by default (both on the members and clients)
unless others mechanisms are configured.
If Java 11+ is detected, OpenSSL is not defaulted due to the performance
improvements in the TLS part of <code>SSLEngine</code>. #3168</p>
</li>
<li>
<p>Introduced two login modules for LDAP authentication: <code>BasicLdapLoginModule</code>
and <code>LdapLoginModule</code>. #3114</p>
</li>
<li>
<p>Reworded and improved the license expiration log message. #3055</p>
</li>
<li>
<p>Removed some unneeded overridden methods such as <code>createClientAwareService()</code>
and <code>createEventPublishingService()</code> since the methods in the Open Source
edition are sufficient. #3005</p>
</li>
<li>
<p>Improved the Hot Restart mechanism so that the base directory is kept
during the force start. Only its subdirectories and files are deleted now,
as opposed to removal of the whole base directory as it was done previously. #2996</p>
</li>
<li>
<p>Added the full example IMDG configurations (member, client and client failover) to
the Hazelcast IMDG Enterprise Edition package artifact. #2991</p>
</li>
<li>
<p>Removed the WAN specific <code>MapOperationProvider</code>. #2952</p>
</li>
<li>
<p>Removed all the High-Density Memory Store map operations and moved
the <code>NativeOutOfMemory</code> retry logic to <code>MapOperation</code>. #2936</p>
</li>
<li>
<p>Moved the <code>HDMapConfigValidator</code> class to the Hazelcast IMDG Open Source edition. #2934</p>
</li>
<li>
<p>Optimized the WAN objects' serialized format and removed the compatibility hacks. #2920</p>
</li>
<li>
<p>Added warning message to the logs when truststore is not configured. #2652</p>
</li>
<li>
<p>Improved the log lines for hot backup so that they now state the units of time taken. #2045</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-40"><a class="anchor" href="#fixes-40"></a><a class="link" href="#fixes-40">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where disabling the quorum had not an effect
and was still checking the presence of split-brain protection.
<a href="https://github.com/hazelcast/hazelcast/issues/16510">#16510</a></p>
</li>
<li>
<p>Fixed an issue where the <code>Imap.containsKey()</code> method was not
able to find Near Cached entries when it is called from a
client.
<a href="https://github.com/hazelcast/hazelcast/issues/16462">#16462</a></p>
</li>
<li>
<p>Fixed an issue where the serializable singleton comparators
for natural and reverse order was creating new instances
on deserialization.
<a href="https://github.com/hazelcast/hazelcast/pull/16439">#16439</a></p>
</li>
<li>
<p>Fixed the missing client XML/YAML configurations in <code>mvn assembly</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/16331">#16331</a></p>
</li>
<li>
<p>Fixed an issue where the Near Cache
was not being updated with the new value as soon as <code>putAsync</code>
future is completed, when local update policy is <code>CACHE_ON_UPDATE</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/16314">#16314</a></p>
</li>
<li>
<p>Fixed an issue where the destruction of a proxy that is not
yet initialized was blocking on its construction, leading to the risk of deadlock.
<a href="https://github.com/hazelcast/hazelcast/pull/16297">#16297</a></p>
</li>
<li>
<p>Fixed an issue where the <code>MembershipEvent.getMembers()</code> was
not returning the cluster member list in the proper order
at the time of event (when a new member joins).
<a href="https://github.com/hazelcast/hazelcast/pull/16243">#16243</a></p>
</li>
<li>
<p>Fixed an issue where the CP group IDs were not unique
for different CP subsystem initializations.
<a href="https://github.com/hazelcast/hazelcast/pull/16240">#16240</a></p>
</li>
<li>
<p>Fixed an issue where a REST URI not matching any pattern
was returning a response belonging in <code>CLUSTER_WRITE</code> endpoint
group. Now, it throws an exception.
<a href="https://github.com/hazelcast/hazelcast/pull/16237">#16237</a></p>
</li>
<li>
<p>Fixed the joining mechanism so that when the discovery
strategy is enabled, multiple join configurations are prevented.
<a href="https://github.com/hazelcast/hazelcast/pull/16177">#16177</a></p>
</li>
<li>
<p>Fixed an issue where the client-side <code>HazelcastInstance</code>
was throwing a configuration exception when there is a conflict
between the dynamic and static configurations.
<a href="https://github.com/hazelcast/hazelcast/issues/16165">#16165</a></p>
</li>
<li>
<p>Fixed an issue where the configuration objects, that have
both implementation/class and name as the configuration, were
not equal after (de)serializations.
<a href="https://github.com/hazelcast/hazelcast/issues/16156">#16156</a></p>
</li>
<li>
<p>Eliminated the unnecessary iterations and object creations on
the bulk client responses.
<a href="https://github.com/hazelcast/hazelcast/pull/16138">#16138</a></p>
</li>
<li>
<p>Fixed an issue where repetitive calls of <code>IMap.loadAll()</code>
may cause memory leaks.
<a href="https://github.com/hazelcast/hazelcast/issues/16096">#16096</a></p>
</li>
<li>
<p>Fixed an issue where <code>Address.equals()</code> and <code>hashCode</code> was
using hostname instead of IP addresses.
<a href="https://github.com/hazelcast/hazelcast/pull/16075">#16075</a></p>
</li>
<li>
<p>Fixed an issue where a client in <code>CLIENT_DISCONNECTED</code> state
was not aware of possible attribute changes in the cluster after
its state becomes <code>CLIENT_CONNECTED</code>: Hazelcast now does not allow
changing member attributes after restarts.
<a href="https://github.com/hazelcast/hazelcast/pull/16168">#16168</a></p>
</li>
<li>
<p>Fixed the inconsistency in Near Cache when using <code>CacheOnUpdate</code>:
Normally, a Near Cache is updated with get operations; another
option is <code>CacheOnUpdate</code> and when it is enabled, put operations also
update the Near Cache. To never miss any invalidation and never read
any stale data indefinitely, get based updates use reservations. With this fix,
this reservation based solution also applies to the put operations when
<code>CacheOnUpdate</code> is configured.
<a href="https://github.com/hazelcast/hazelcast/issues/12548">#12548</a></p>
</li>
<li>
<p>Fixed an issue where <code>ProxyManager</code> was not removing <code>Proxy</code>
even after the original distributed object is destroyed.
<a href="https://github.com/hazelcast/hazelcast/issues/12470">#12470</a></p>
</li>
<li>
<p>Fixed the corrupted state of <code>NativeMemoryData</code> when an entry
is modified using entry processor with High-Density Memory Store
is enabled. #3130</p>
</li>
</ul>
</div>
<div class="sect4">
<h5 id="fixes-40beta2"><a class="anchor" href="#fixes-40beta2"></a><a class="link" href="#fixes-40beta2">4.0-Beta-2</a></h5>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where an HTTP request via
<code>hazelcast/rest/cluster</code> was failing when using the advanced network
configuration and a client endpoint is
not specified. In this case, this request&#8217;s response
has been improved to report <code>0</code> as the client connection count.
<a href="https://github.com/hazelcast/hazelcast/pull/16152">#16152</a></p>
</li>
<li>
<p>Fixed the following Hot Restart issues:</p>
<div class="ulist">
<ul>
<li>
<p>Introduced an additional stage to the Hot Restart
procedure, i.e., <code>HotRestartIntegrationService.startup()</code>,
which waits until all members transition from the <code>PASSIVE</code> state.
This guarantees all members to have the same state after Hot
Restart operation is finished.</p>
</li>
<li>
<p>IMap proxies created during Hot Restart are not initialized
and published to other cluster members. So the operation
has been improved to force initialize any uninitialized proxies
and publish them. This fixed the issue where the
<code>getDistributedObjects()</code> method was not reporting the persisted
objects after a Hot Restart.</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/16116">#16116</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15930">#15930</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Forced eviction was evicting all the entries
regardless of the eviction configuration. This has
been fixed: forced eviction now runs only if a map has
eviction configured. Otherwise, it does not run and throws
native <code>OutOfMemoryException</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/16085">#16085</a></p>
</li>
<li>
<p>Renamed the <code>GroupProperty</code> class as <code>ClusterProperty</code>
due to the <code>group</code> &#8594; <code>cluster</code> term change.
<a href="https://github.com/hazelcast/hazelcast/pull/16076">#16076</a></p>
</li>
<li>
<p>Fixed possible statistics miscalculations by checking an
entry&#8217;s expiration in a Near Cache only if its state is
<code>READ_PERMITTED</code>
<a href="https://github.com/hazelcast/hazelcast/pull/16067">#16067</a></p>
</li>
<li>
<p>Fixed an issue where a <code>StreamSerializer</code> is added using
<code>setTypeClass</code> instead of <code>setTypeClassName</code>; this was not correctly handled.
<a href="https://github.com/hazelcast/hazelcast/issues/16047">#16047</a></p>
</li>
<li>
<p>Fixed an issue where some functions may not be working when
a client provides a new client type: removed <code>ClientType</code> and
<code>ConnectionType</code> enums and introduced free strings for them
instead.
<a href="https://github.com/hazelcast/hazelcast/pull/16030">#16030</a></p>
</li>
<li>
<p>Fixed a race condition between the new cluster member join and post-join
operations executed as part of the concurrent member join.
<a href="https://github.com/hazelcast/hazelcast/pull/16020">#16020</a></p>
</li>
<li>
<p>Fixed an issue where an enabled <code>redoOperation()</code> was not
throwing an exception when an empty list is tried to be retrieved
on the client.
<a href="https://github.com/hazelcast/hazelcast/pull/16015">#16015</a></p>
</li>
<li>
<p>Aligned the exception mechanism of <code>CacheManager.createCache()</code>
with the <code>getCache()</code> and <code>getCacheManager().getCache()</code> methods of the
same class.
<a href="https://github.com/hazelcast/hazelcast/pull/16007">#16007</a></p>
</li>
<li>
<p>Fixed an issue where a Raft node may leak and stay in the ACTIVE
state after a CP member terminates, because of a race between
the Hazelcast member shutdown and Raft node termination logic.
<a href="https://github.com/hazelcast/hazelcast/pull/16022">#16022</a></p>
</li>
<li>
<p>Fixed an issue where gathering MultiMap statistics was breaking
the split-brain healing with <code>LatestAccessMergePolicy</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/16001">#16001</a></p>
</li>
<li>
<p>Fixed an issue where enabling REST API configuration
(<code>getRestApiConfig().setEnabled(true)</code>) was throwing
<code>NullPointerException</code> since its default value was null.
<a href="https://github.com/hazelcast/hazelcast/pull/15981">#15981</a></p>
</li>
<li>
<p>Fixed an issue where the configuration validator was not checking
if the maximum size policy is appropriate for the selected in-memory
format.
<a href="https://github.com/hazelcast/hazelcast/pull/15964">#15964</a></p>
</li>
<li>
<p>Fixed an issue where <code>ManagementCenterService</code> was shutting down
itself when it encounters an exception during the creation of <code>TimedMemberState</code>.
This was causing the cluster to disappear from Management Center.
<a href="https://github.com/hazelcast/hazelcast/issues/15946">#15946</a></p>
</li>
<li>
<p>Fixed an issue in the query operation for offloaded cases.
<a href="https://github.com/hazelcast/hazelcast/pull/15944">#15944</a></p>
</li>
<li>
<p>Fixed the cache statistics handling: Previously used
<code>Config.findCacheConfig()</code> could only lookup
cache configurations added statically or dynamically
via <code>Config.addCacheConfig()</code>, but was missing configurations
of dynamically created caches via <code>CacheManager.createCache()</code>.
Now, <code>CacheService.getCacheConfigs()</code> is used to fix this.
<a href="https://github.com/hazelcast/hazelcast/pull/15937">#15937</a></p>
</li>
<li>
<p>Fixed an issue where an exception thrown from a dynamic
metric provider was stopping the dynamic metric collector task.
<a href="https://github.com/hazelcast/hazelcast/issues/15932">#15932</a></p>
</li>
<li>
<p>Fixed an issue where the map and Replicated Map in a client
share the same near cache when they have identical names.
<a href="https://github.com/hazelcast/hazelcast/issues/15912">#15912</a></p>
</li>
<li>
<p>Fixed the extensive <code>Overwriting existing probe</code> logs when
starting a Hazelcast member.
<a href="https://github.com/hazelcast/hazelcast/pull/15910">#15910</a></p>
</li>
<li>
<p>Fixed the <code>InvocationTargetException</code> thrown by the metrics
service on JDK 11.
<a href="https://github.com/hazelcast/hazelcast/issues/15884">#15884</a></p>
</li>
<li>
<p>Fixed an issue where <code>tcp.connection.clientCount</code> was
collected and published twice.
<a href="https://github.com/hazelcast/hazelcast/issues/15883">#15883</a></p>
</li>
<li>
<p>Fixed an issue where the client connection count
was retrieved using an incorrect method.
<a href="https://github.com/hazelcast/hazelcast/pull/15861">#15861</a></p>
</li>
<li>
<p>Fixed an issue where calling the <code>IMap.removeAll()</code> method
without index was updating the last access and expiry time
for all records.
<a href="https://github.com/hazelcast/hazelcast/pull/15850">#15850</a></p>
</li>
<li>
<p>Fixed the consistency issue between the configuration replacers
and XML configuration imports.
<a href="https://github.com/hazelcast/hazelcast/pull/15810">#15810</a></p>
</li>
<li>
<p>Fixed a configuration failure with YAML for composite
key indexes.
<a href="https://github.com/hazelcast/hazelcast/issues/15806">#15806</a></p>
</li>
<li>
<p>Fixed an issue where <code>Predicates.ilike()</code> was not working
for Cyrillic strings.
<a href="https://github.com/hazelcast/hazelcast/issues/15748">#15748</a></p>
</li>
<li>
<p>Fixed an issue where the gauges could not be created from the
dynamic metrics.
<a href="https://github.com/hazelcast/hazelcast/issues/15718">#15718</a></p>
</li>
<li>
<p>Fixed an issue where the client&#8217;s Near Cache was not being
invalidated after the <code>IMap.executeOnKeys()</code> method is called.
<a href="https://github.com/hazelcast/hazelcast/issues/15468">#15468</a></p>
</li>
<li>
<p>Fixed the inconsistent behavior for sending a null message
via <code>Topic.publish()</code> on the members and clients. Now, the client
side also is not allowed to send it.
<a href="https://github.com/hazelcast/hazelcast/issues/15338">#15338</a></p>
</li>
<li>
<p>Made the public <code>createCachingProvider()</code> method private
since its class, <code>HazelcastServerCachingProvider</code>, is a private one.
<a href="https://github.com/hazelcast/hazelcast/issues/15144">#15144</a></p>
</li>
<li>
<p>Fixed an issue where the <code>client.getDistributedObjects()</code> method
may cause recreation of the destroyed objects.
<a href="https://github.com/hazelcast/hazelcast/issues/14571">#14571</a></p>
</li>
<li>
<p>Fixed an issue where the query cache was missing key and value
information for entries.
<a href="https://github.com/hazelcast/hazelcast/issues/13423">#13423</a></p>
</li>
<li>
<p>Fixed an issue where V4 WEB_SESSIONS feature license was incorrectly
mapped to the V5 CLIENT_FORWARDING feature. #3352</p>
</li>
<li>
<p>Fixed an issue where <code>WeakSecretsConfigChecker</code> was not
checking the properties specified in <code>SSLConfig</code>. #3074</p>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="fixes-40beta1"><a class="anchor" href="#fixes-40beta1"></a><a class="link" href="#fixes-40beta1">4.0-Beta-1</a></h5>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where a new CP member could create the Raft nodes before its
local CP member field is not initialized yet, when it is being promoted.
This could create non-determinism issues for CP groups relying on the
local CP member information.
<a href="https://github.com/hazelcast/hazelcast/pull/15803">#15803</a></p>
</li>
<li>
<p>Fixed an issue where the <code>CompletableFuture#defaultExecutor()</code> method
caused compilation failure on JDK 9 due to the "protected" access.
<a href="https://github.com/hazelcast/hazelcast/pull/15702">#15702</a></p>
</li>
<li>
<p>Fixed a race issue by initializing the local CP members before
initializing the metadata group.
<a href="https://github.com/hazelcast/hazelcast/pull/15684">#15684</a></p>
</li>
<li>
<p>Fixed an issue where the CP subsystems' restart operations were
not being canceled and waiting the running/scheduled discovery tasks.
<a href="https://github.com/hazelcast/hazelcast/pull/15567">#15567</a></p>
</li>
<li>
<p>Fixed an issue where the executor service message task
was blocking the partition thread.
<a href="https://github.com/hazelcast/hazelcast/pull/15522">#15522</a></p>
</li>
<li>
<p>Fixed an issue where the used memory in metrics was becoming
a negative value.
<a href="https://github.com/hazelcast/hazelcast/issues/15485">#15485</a></p>
</li>
<li>
<p>Moved the <code>checkWanReplicationQueues</code> operation from the caller side
to the callee. <a href="https://github.com/hazelcast/hazelcast/pull/15412">#15412</a></p>
</li>
<li>
<p>Fixed an issue where the map configuration options <code>readBackupData</code>
and <code>statisticsEnabled</code> were not being respected when a new
<code>MapConfig</code> is dynamically added from a client to a running Hazelcast cluster.
<a href="https://github.com/hazelcast/hazelcast/issues/15382">#15382</a></p>
</li>
<li>
<p>Fixed an issue where the comparators were not able to act on
both keys and values. A custom paging predicate comparator may act on
keys and values at the same time even if only the keys are requested, e.g., using
the <code>IMap.keySet()</code> method. Before this fix only the keys were fetched for
this method, making comparators unable to act on values.
<a href="https://github.com/hazelcast/hazelcast/pull/15380">#15380</a></p>
</li>
<li>
<p>Optimized the shutdown for on-heap indexes: These indexes are cleaned on shutdown and
the index entries are removed one by one. For large indexes, e.g.,
for array/collection attribute indexes, this was taking a considerable amount of time.
<a href="https://github.com/hazelcast/hazelcast/issues/15340">#15340</a></p>
</li>
<li>
<p>Fixed the deserialization filtering for Externalizables and Deadlock in the
map index. The deserialization filter was not properly protecting against the
vulnerable Externalizable classes. The filtering has been extended.
<a href="https://github.com/hazelcast/hazelcast/pull/15358">#15358</a></p>
</li>
<li>
<p>Fixed an issue where the named scheduled tasks was not respecting
the <code>HazelcastInstanceAware</code> marker.
<a href="https://github.com/hazelcast/hazelcast/pull/15352">#15352</a></p>
</li>
<li>
<p>Fixed a possible <code>NullPointerException</code> for the <code>remove-if-same</code> map
operation.
<a href="https://github.com/hazelcast/hazelcast/pull/15344">#15344</a></p>
</li>
<li>
<p>Fixed an issue where storing <code>MapStore</code> instances in <code>MapStoreConfig</code>
could cause member failures when the configuration is added
dynamically.
<a href="https://github.com/hazelcast/hazelcast/pull/15224">#15224</a></p>
</li>
<li>
<p>Fixed a <code>NullPointerException</code> in the query caches by setting
the <code>publisher-listener-id</code> if a query cache has already one.
<a href="https://github.com/hazelcast/hazelcast/pull/15215">#15215</a></p>
</li>
<li>
<p>Fixed an issue where <code>SimpleTokenCredentials</code> could not be
deserialized due to the missing handling in <code>SpiPortableHook</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/15196">#15196</a></p>
</li>
<li>
<p>Fixed an issue where the commit phase of transactional maps
was not checking the member-wide upper limit for the entries in
write behind queues.
<a href="https://github.com/hazelcast/hazelcast/pull/15186">#15186</a></p>
</li>
<li>
<p>Fixed an issue where the queries like <code>labels[any] = 0</code> and <code>labels[any] = 1</code>
were optimized only to <code>false</code> since <code>labels[any]</code> was interpreted as a
regular attribute name having a single value.
<a href="https://github.com/hazelcast/hazelcast/pull/15163">#15163</a></p>
</li>
<li>
<p>For on-heap indexes, fixed an issue where a record&#8217;s <code>lastAccessTime</code>
was not updated when it is being accessed through an index.
Now, this way, the expiration <code>maxIdle</code> mechanism takes this into account.
<a href="https://github.com/hazelcast/hazelcast/pull/15136">#15136</a></p>
</li>
<li>
<p>Fixed an issue where <code>ExecutorServiceProxy</code> was unnecessarily
serializing the same task multiple times before submitting it
to multiple members.
<a href="https://github.com/hazelcast/hazelcast/pull/15069">#15069</a></p>
</li>
<li>
<p>Added the missing user code deployment section to the configuration
which is sent to Management Center.
<a href="https://github.com/hazelcast/hazelcast/pull/15044">#15044</a></p>
</li>
<li>
<p>Fixed an issue where two client listeners are not registered since
they listen on a single connection (not cluster wide listeners) by
adding cleanups for them.
<a href="https://github.com/hazelcast/hazelcast/pull/15041">#15041</a></p>
</li>
<li>
<p>Fixed the authentication mechanism between the clients and members
by adding a check to prevent re-verification while the client is changing
its owner member.
<a href="https://github.com/hazelcast/hazelcast/pull/15030">#15030</a></p>
</li>
<li>
<p>Added support for the missing aliased discovery strategies,
e.g., <code>gcp</code> and <code>kubernetes</code>, to <code>ClientConfigXmlGenerator</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/15010">#15010</a></p>
</li>
<li>
<p>Fixed an issue where the client user code deployment was
becoming non-operational when assertions are enabled.
<a href="https://github.com/hazelcast/hazelcast/pull/15006">#15006</a></p>
</li>
<li>
<p>Some operations such as heartbeat checks and partition
migrations share common threads with the client login module.
In case of the long running client login module implementations,
some symptoms such as split brain syndrome can be seen. This has
been fixed by introducing a blocking executor which is used only
for the client authentications.
<a href="https://github.com/hazelcast/hazelcast/pull/14956">#14956</a></p>
</li>
<li>
<p>Fixed an issue where the <code>IMap.removeInterceptor()</code> method
was returning <code>void</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/14955">#14955</a></p>
</li>
<li>
<p>Removed the <code>entryEvicted</code> event from the event firing mechanism
in the case of eviction. Before, both <code>entryEvicted</code> and <code>entryExpired</code>
events were being fired.
<a href="https://github.com/hazelcast/hazelcast/pull/14954">#14954</a></p>
</li>
<li>
<p>Fixed an issue where the Hazelcast IMDG configuration files, that
have an extension other than <code>.xml</code>, <code>.yaml</code> or <code>.yml</code> or do not have
an extension, were ignored silently. This was happening
when the configuration file is set by using the <code>hazelcast.config</code>
system property.
<a href="https://github.com/hazelcast/hazelcast/pull/14953">#14953</a></p>
</li>
<li>
<p>Fixed an issue where the client was not considering the new
address of a restarted member, which has the same UUID but could
have a different IP address after it is restarted.
<a href="https://github.com/hazelcast/hazelcast/pull/14842">#14842</a></p>
</li>
<li>
<p>Fixed an issue where the migration operations were running
before the previous finalization is completed.
<a href="https://github.com/hazelcast/hazelcast/pull/14832">#14832</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/16189">#16189</a></p>
</li>
<li>
<p>Fixed an issue where the outbound pipeline was not waking up
properly after various optimizations for write-through
persistence is made.
<a href="https://github.com/hazelcast/hazelcast/pull/14831">#14831</a></p>
</li>
<li>
<p>Fixed an issue caused by the cache being not ready to be used
immediately after the cache proxy was created.
<a href="https://github.com/hazelcast/hazelcast/pull/14821">#14821</a></p>
</li>
<li>
<p>Fixed an issue where the performance of <code>IMap.values()</code> was low when
using <code>PartitionPredicate</code>. Also, <code>PartitionPredicate</code> was not
respecting indexes. So, now global indexes are used for partition
queries.
<a href="https://github.com/hazelcast/hazelcast/pull/14814">#14814</a></p>
</li>
<li>
<p>Fixed a performance issue where there were unneeded iterations and
object creations while converting the client messages to user objects.
<a href="https://github.com/hazelcast/hazelcast/pull/13784">#13784</a></p>
</li>
<li>
<p>Fixed an issue where the locked entries with a time-to-live were not evicted.
With this fix, the lock operation checks if an entry has already expired.
<a href="https://github.com/hazelcast/hazelcast/issues/13272">#13272</a></p>
</li>
<li>
<p>Fixed an issue where there were excessive amount of logs on the target cluster
when <code>cache</code> config is missing for the WAN replication.
<a href="https://github.com/hazelcast/hazelcast/issues/12826">#12826</a></p>
</li>
<li>
<p>Fixed an issue where there was an inconsistent <code>removeIf</code> behavior among the
collection views of IMap.
<a href="https://github.com/hazelcast/hazelcast/issues/12198">#12198</a></p>
</li>
<li>
<p>Fixed a leak in the query cache due to <code>ListenerRegistrationHelper</code>, which
has been removed with this fix.
<a href="https://github.com/hazelcast/hazelcast/pull/11914">#11914</a></p>
</li>
<li>
<p>Fixed an issue where the <code>IMap.replace()</code> method was not loading entries
from the MapLoader when the keys could not be found in the memory.
<a href="https://github.com/hazelcast/hazelcast/issues/11300">#11300</a></p>
</li>
<li>
<p>Fixed an issue where <code>partitionsSynced</code> and <code>partitionsToSync</code>
fields were providing the same value to <code>WanSyncProgressUpdateEvents</code>
which is sent to Management Center. #3138</p>
</li>
<li>
<p>Fixed an inconsistency issue between time-to-live and idle time
behavior with respect to the propagation over WAN. #3129</p>
</li>
<li>
<p>Fixed an issue where the High-Density Memory Store queries
were broken if assertions are enabled. #3019</p>
</li>
<li>
<p>Fixed an issue where the WAN consistency check and synchronization
were getting stuck when requested on a <code>PASSIVE</code> cluster. #2968</p>
</li>
<li>
<p>Fixed an issue where the Merkle tree synchronization was failing to
push over data restored from the Hot Restart procedure. #2960</p>
</li>
<li>
<p>Fixed a split-brain healing issue in WAN replication:
Before, WAN replication had no split-brain support. With this fix,
all the WAN publishers on the members of the smaller cluster are reset, before
merging them. This reset includes clearing all the partition WAN queues and
resetting the WAN counters to zero. #2948</p>
</li>
<li>
<p>Fixed an issue where data was being collected even for maps not configured for WAN replication
when synchronizing all maps over WAN. #2524</p>
</li>
<li>
<p>Fixed an issue where the WAN event counters were not properly working
when the backup count is <code>0</code> or <code>3</code>. #2519</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect3">
<h4 id="removed-40"><a class="anchor" href="#removed-40"></a><a class="link" href="#removed-40">Removed Features</a></h4>
<div class="sect4">
<h5 id="removed-40beta2"><a class="anchor" href="#removed-40beta2"></a><a class="link" href="#removed-40beta2">4.0-Beta-2</a></h5>
<div class="ulist">
<ul>
<li>
<p>Deprecated the following properties:</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.client.statistics.period.seconds</code></p>
</li>
<li>
<p><code>hazelcast.client.statistics.enabled</code></p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15963">#15963</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Removed the deprecated <code>SimpleEntryView.evictionCriteriaNumber()</code>
method.
<a href="https://github.com/hazelcast/hazelcast/pull/15846">#15846</a></p>
</li>
<li>
<p>Removed the deprecated IMap methods accepting <code>EntryListener</code>.
This has been replaced with <code>MapListener</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15781">#15781</a></p>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="removed-40beta1"><a class="anchor" href="#removed-40beta1"></a><a class="link" href="#removed-40beta1">4.0-Beta-1</a></h5>
<div class="ulist">
<ul>
<li>
<p>Removed the User Defined Services (Hazelcast&#8217;s SPI) feature.
<a href="https://github.com/hazelcast/hazelcast/pull/15403">#15403</a>,
<a href="https://github.com/hazelcast/hazelcast/pull/15401">#15401</a></p>
</li>
<li>
<p>Removed the <code>setLicenseKey()</code> method of <code>ClientConfig</code>.</p>
</li>
<li>
<p>Removed the methods in the <code>Member</code> and <code>AddressPicker</code> classes.</p>
</li>
<li>
<p>Removed the deprecated diagnostics property names.</p>
</li>
<li>
<p>Removed the deprecated <code>EvictionPolicyType</code> class. Instead, use the
enhanced <code>EvictionPolicy</code> class.</p>
</li>
<li>
<p>Removed the legacy <code>IdGenerator</code> interface. Instead, <code>FlakeIdGenerator</code> has been used.</p>
</li>
<li>
<p>Removed the deprecated <code>AsyncAtomicLong</code> and <code>AsyncAtomicReference</code> classes.</p>
</li>
<li>
<p>Removed the deprecated cache eviction configurations.</p>
</li>
<li>
<p>Removed the MapReduce feature.</p>
</li>
<li>
<p>Removed the deprecated <code>LOCAL</code> transaction type (<code>TransactionType.LOCAL</code>)</p>
</li>
<li>
<p>Removed the deprecated <code>optimizeQueries</code> map configuration parameter.</p>
</li>
<li>
<p>Removed the following deprecated system properties:</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.version.check.enabled</code></p>
</li>
<li>
<p><code>hazelcast.icmp.enabled</code></p>
</li>
<li>
<p><code>hazelcast.icmp.parallel.mode</code></p>
</li>
<li>
<p><code>hazelcast.icmp.echo.fail.fast.on.startup</code></p>
</li>
<li>
<p><code>hazelcast.icmp.timeout</code></p>
</li>
<li>
<p><code>hazelcast.icmp.interval</code></p>
</li>
<li>
<p><code>hazelcast.icmp.max.attempts</code></p>
</li>
<li>
<p><code>hazelcast.icmp.ttl</code></p>
</li>
<li>
<p><code>hazelcast.mc.url.change.enabled</code></p>
</li>
<li>
<p><code>hazelcast.slow.invocation.detector.threshold.millis</code></p>
</li>
</ul>
</div>
</li>
<li>
<p>Removed the legacy <code>AtomicLong</code> and deprecated <code>IdGenerator</code>
implementations.
<a href="https://github.com/hazelcast/hazelcast/pull/15601">#15601</a></p>
</li>
<li>
<p>Removed the legacy <code>ILock</code> implementation and
the <code>HazelcastInstance.getLock()</code> method. Instead
we provide the unsafe mode of CP Subsystem&#8217;s <code>FencedLock</code>.
The <code>ICondition</code> is not supported anymore.
<a href="https://github.com/hazelcast/hazelcast/pull/15625">#15625</a></p>
</li>
<li>
<p>Removed the legacy <code>AtomicReference</code> implementation and
the <code>HazelcastInstance.getAtomicReference()</code> method. Instead
we provide the unsafe mode for all CP data structures.
<a href="https://github.com/hazelcast/hazelcast/pull/15593">#15593</a></p>
</li>
<li>
<p>Removed the legacy <code>Semaphore</code> implementation and
the <code>HazelcastInstance.getSemaphore()</code> method. Instead
we provide the unsafe mode for all CP data structures.
<a href="https://github.com/hazelcast/hazelcast/pull/15539">#15539</a></p>
</li>
<li>
<p>Removed the legacy <code>CountdownLatch</code> implementation and
the <code>HazelcastInstance.getCountdownLatch()</code> method. Instead
we provide the unsafe mode for all CP data structures.
<a href="https://github.com/hazelcast/hazelcast/pull/15538">#15538</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect3">
<h4 id="contributors-40"><a class="anchor" href="#contributors-40"></a><a class="link" href="#contributors-40">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/acl-oss">ACL-OSS</a></p>
</li>
<li>
<p><a href="https://github.com/gdela">Wojciech Gdela</a></p>
</li>
<li>
<p><a href="https://github.com/sbespalov">Sergey Bespalov</a></p>
</li>
<li>
<p><a href="https://github.com/lukasherman">Lukáš Herman</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12-12"><a class="anchor" href="#3-12-12"></a><a class="link" href="#3-12-12">3.12.12</a></h3>
<div class="admonitionblock important">
<table>
<tr>
<td class="icon">
<i class="fa icon-important" title="Important"></i>
</td>
<td class="content">
Starting with Hazelcast IMDG 3.12, the Hazelcast IMDG download package does not include
the documentation; please see <a href="https://docs.hazelcast.com/home/index.html" class="bare">https://docs.hazelcast.com/home/index.html</a>.
</td>
</tr>
</table>
</div>
<div class="sect3">
<h4 id="enh-31212"><a class="anchor" href="#enh-31212"></a><a class="link" href="#enh-31212">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Updated the version of Hazelcast Kubernetes plugin to 1.5.5.
<a href="https://github.com/hazelcast/hazelcast/pull/17927">#17927</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-31212"><a class="anchor" href="#fixes-31212"></a><a class="link" href="#fixes-31212">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>When the in-memory format of a map is <code>NATIVE</code> and the uploaded user code
has missing classes (in case the user code deployment feature is used),
the resulting exception could not be seen on the client side when a map query is run.
This was causing the client to hang indefinitely and fixed by improving the
failure handling for this case.
<a href="https://github.com/hazelcast/hazelcast/issues/18052">#18052</a>, [#3908]</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12-11"><a class="anchor" href="#3-12-11"></a><a class="link" href="#3-12-11">3.12.11</a></h3>
<div class="sect3">
<h4 id="nf-31211"><a class="anchor" href="#nf-31211"></a><a class="link" href="#nf-31211">New Features</a></h4>
<div class="ulist">
<ul>
<li>
<p><strong>Node Aware Partition Grouping:</strong> Added the support of
partition grouping mechanism in the Hazelcast discovery plugin for Kubernetes.
You can create partition groups according to the name of the
node which is provided by this plugin and on which the containers/pods run.
See the <a href="https://docs.hazelcast.org/docs/3.12.11/manual/html-single/#node-aware-partition-grouping">NODE_AWARE section</a> of the IMDG Reference Manual for more information.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enh-31211"><a class="anchor" href="#enh-31211"></a><a class="link" href="#enh-31211">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added protection against XML External Entity attacks (XXE).
<a href="https://github.com/hazelcast/hazelcast/pull/17754">#17754</a></p>
</li>
<li>
<p>Introduced a configuration property to ignore errors during
enabling the XXE protection. This protection works with JAXP 1.5 (Java 7 Update 40)
and newer. When an older JAXP implementation is added to
the classpath, e.g., Xerces and Xalan, an exception is thrown.
The newly introduced property, namely <code>hazelcast.ignoreXxeProtectionFailures</code>,
allows you to ignore those exceptions.
See the <a href="https://docs.hazelcast.org/docs/3.12.11/manual/html-single/#system-properties">System Properties appendix</a> of the IMDG Reference Manual for more information.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-31211"><a class="anchor" href="#fixes-31211"></a><a class="link" href="#fixes-31211">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the Javadoc of <code>release</code> methods for session-aware semaphore
structure was incorrectly addressing "threads" instead of "Hazelcast
instances".
<a href="https://github.com/hazelcast/hazelcast/pull/17828">#17828</a></p>
</li>
<li>
<p>Fixed a data loss issue that was happening while promoting a lite
member to a data member.
<a href="https://github.com/hazelcast/hazelcast/pull/17758">#17758</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12-10"><a class="anchor" href="#3-12-10"></a><a class="link" href="#3-12-10">3.12.10</a></h3>
<div class="sect3">
<h4 id="enh-31210"><a class="anchor" href="#enh-31210"></a><a class="link" href="#enh-31210">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added the support for checking duplicate fields when building
class definitions.
<a href="https://github.com/hazelcast/hazelcast/pull/17683">#17683</a></p>
</li>
<li>
<p>Enhanced the tracking of missing CP subsystem members after a
split-brain merge situation.
<a href="https://github.com/hazelcast/hazelcast/pull/17634">#17634</a></p>
</li>
<li>
<p>Added the missing validation checks to the client&#8217;s connection retry
configuration.
<a href="https://github.com/hazelcast/hazelcast/pull/17570">#17570</a></p>
</li>
<li>
<p>Upgraded the versions of Hazelcast&#8217;s snakeyaml-engine and Jackson
library dependencies to eliminate the denial of service vulnerabilities.
<a href="https://github.com/hazelcast/hazelcast/issues/17425">#17425</a>,
<a href="https://github.com/hazelcast/hazelcast/issues/17444">#17444</a></p>
</li>
<li>
<p>Added timeout values for connect and read operations to the
Management Center service&#8217;s task connection method.
<a href="https://github.com/hazelcast/hazelcast/issues/17387">#17387</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-31210"><a class="anchor" href="#fixes-31210"></a><a class="link" href="#fixes-31210">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where Hazelcast was not releasing the acquired lock
sessions that fail for the reasons other than session expiration and
wait key cancellation.
<a href="https://github.com/hazelcast/hazelcast/pull/17701">#17701</a></p>
</li>
<li>
<p>Fixed an issue where the lock requests in clients' maps with
infinite time lease were returning <code>Long.MAX_VALUE</code>; now it returns <code>-1</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/17680">#17680</a></p>
</li>
<li>
<p>Fixed an issue where Hazelcast was returning <code>false</code> if a client
is successfully deregistered from any member, but events are still
delivered for the non-deregistered ones.
<a href="https://github.com/hazelcast/hazelcast/pull/17648">#17648</a></p>
</li>
<li>
<p>Fixed the member side user code deployment; it was throwing an exception
when inner classes are used to be loaded.
<a href="https://github.com/hazelcast/hazelcast/pull/17579">#17579</a></p>
</li>
<li>
<p>Fixed an issue where the diagnostic plugins were not being rendered
properly when they fail.
<a href="https://github.com/hazelcast/hazelcast/pull/17500">#17500</a></p>
</li>
<li>
<p>Fixed an issue where the load balancer for clients
could not be configured declaratively.
<a href="https://github.com/hazelcast/hazelcast/issues/17228">#17228</a></p>
</li>
<li>
<p>Fixed a <code>NullPointerException</code> on the member startup when it
has Merkle tree configured and Hot Restart enabled. #3825</p>
</li>
<li>
<p>Fixed an issue where a dynamically added WAN configuration
was not persistent after the member is restarted. #3598</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-31210"><a class="anchor" href="#contributors-31210"></a><a class="link" href="#contributors-31210">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/the-thing">Marcin L</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12-9"><a class="anchor" href="#3-12-9"></a><a class="link" href="#3-12-9">3.12.9</a></h3>
<div class="sect3">
<h4 id="enh-3129"><a class="anchor" href="#enh-3129"></a><a class="link" href="#enh-3129">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Updated the <code>hazelcast-kubernetes</code> dependency version to 1.5.4.
<a href="https://github.com/hazelcast/hazelcast/pull/17256">#17256</a></p>
</li>
<li>
<p>Added support for tenant control when creating caches.
<a href="https://github.com/hazelcast/hazelcast/pull/17121">#17121</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3129"><a class="anchor" href="#fixes-3129"></a><a class="link" href="#fixes-3129">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed a race issue when creating a cache (JCache) using multiple
methods with the same cache name but having different keys.
<a href="https://github.com/hazelcast/hazelcast/issues/17284">#17284</a></p>
</li>
<li>
<p>Fixed a performance issue when using paging predicates with
JDK 8.
<a href="https://github.com/hazelcast/hazelcast/pull/17213">#17213</a></p>
</li>
<li>
<p>Fixed an issue where <code>ReliableTopicMessageListener</code> was
firing a warning when the client is shutting down.
<a href="https://github.com/hazelcast/hazelcast/issues/17070">#17070</a></p>
</li>
<li>
<p>Fixed an issue where the client-side <code>HazelcastInstance</code>
was not throwing a configuration exception when there is a conflict
between the dynamic and static configurations.
<a href="https://github.com/hazelcast/hazelcast/issues/16927">#16927</a></p>
</li>
<li>
<p>Fixed an issue where the repeated calls of <code>executeOnKeys()</code>
in Hazelcast clients for <code>NATIVE</code> maps was causing a continuous increase
in the used memory and exhaustion of the memory pool after a while.
<a href="https://github.com/hazelcast/hazelcast/pull/17271">#17271</a>,
#3689</p>
</li>
<li>
<p>Fixed an issue where the <code>Invalid License Key</code> exception
was not being logged when the logging type is Log4j2, and Chef
is used for a Hazelcast installation. [#3629]</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-3129"><a class="anchor" href="#contributors-3129"></a><a class="link" href="#contributors-3129">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/lprimak">lprimak</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12-8"><a class="anchor" href="#3-12-8"></a><a class="link" href="#3-12-8">3.12.8</a></h3>
<div class="sect3">
<h4 id="enh-3128"><a class="anchor" href="#enh-3128"></a><a class="link" href="#enh-3128">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Introduced WAN throttling mechanism: this prevents the
WAN consumers from getting overloaded by the WAN producers
if transferring the WAN events takes less time than processing
them in the target cluster. This can be the case with WAN
synchronization if the network latency is low
enough. It can be configured using the following properties:</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.wan.consumer.invocation.threshold</code></p>
</li>
<li>
<p><code>hazelcast.wan.consumer.ack.delay.backoff.init</code></p>
</li>
<li>
<p><code>hazelcast.wan.consumer.ack.delay.backoff.max</code></p>
</li>
<li>
<p><code>hazelcast.wan.consumer.ack.delay.backoff.multiplier</code></p>
<div class="paragraph">
<p>See <a href="https://github.com/hazelcast/hazelcast/blob/v3.12.8/hazelcast/src/main/java/com/hazelcast/spi/properties/GroupProperty.java#L1056">here</a> for their explanations.</p>
</div>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3128"><a class="anchor" href="#fixes-3128"></a><a class="link" href="#fixes-3128">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the CP client message tasks were deserializing
the responses.
<a href="https://github.com/hazelcast/hazelcast/issues/17050">#17050</a></p>
</li>
<li>
<p>Fixed an issue where the split-brain protection events were triggered during the
startup of members, but before they join the cluster. With this fix,
these events will not be fired until the minimum cluster size (quorum) is met after the
member startups.
<a href="https://github.com/hazelcast/hazelcast/issues/17038">#17038</a></p>
</li>
<li>
<p>Fixed an issue where notifying the partition table updates to
the clients by a member was causing latencies.
<a href="https://github.com/hazelcast/hazelcast/pull/16937">#16937</a></p>
</li>
<li>
<p>Fixed an issue in the cache service where its pre-join
operation was considering <code>CacheConfig</code> as resolved: it
was assuming that key/value types, user customizations and
other cache configurations have been loaded. This was an issue
when the cache is not touched yet.
<a href="https://github.com/hazelcast/hazelcast/pull/16919">#16919</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12-7"><a class="anchor" href="#3-12-7"></a><a class="link" href="#3-12-7">3.12.7</a></h3>
<div class="sect3">
<h4 id="enh-3127"><a class="anchor" href="#enh-3127"></a><a class="link" href="#enh-3127">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added a public API to load configuration files: the new <code>load()</code> method in <code>Config</code>,
<code>ClientConfig</code>, and <code>ClientFailoverConfig</code> loads the configurations with
given locations. If not found, the default configuration is returned.
<a href="https://github.com/hazelcast/hazelcast/pull/16864">#16864</a></p>
</li>
<li>
<p>Updated the version of Hazelcast Kubernetes discovery plugin to 1.5.3.
<a href="https://github.com/hazelcast/hazelcast/pull/16589">#16589</a></p>
</li>
<li>
<p>Added the support for automatically detecting the classloader of a type for
the user code deployment feature.
<a href="https://github.com/hazelcast/hazelcast/issues/16421">#16421</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3127"><a class="anchor" href="#fixes-3127"></a><a class="link" href="#fixes-3127">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where Map, Cache, MultiMap data structures
were returning negative values (<code>size()</code>) when the size is more than
<code>Integer.MAX_VALUE</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/16897">#16897</a></p>
</li>
<li>
<p>Fixed an issue where explicitly registering portable class definitions
was failing with multiple portable factories and overlapping class IDs.
<a href="https://github.com/hazelcast/hazelcast/pull/16832">#16832</a></p>
</li>
<li>
<p>Fixed an issue where Reliable Topic was not working properly due to
missing permissions.
<a href="https://github.com/hazelcast/hazelcast/pull/16773">#16773</a></p>
</li>
<li>
<p>Fixed an issue where the wait key of a blocking call within a Raft
invocation was still being reported as a live operation, when the key times out.
<a href="https://github.com/hazelcast/hazelcast/pull/16616">#16616</a></p>
</li>
<li>
<p>Fixed an issue where the upload of classes using the client user code
deployment were not successful when they are retrieved not in their created order.
<a href="https://github.com/hazelcast/hazelcast/pull/16610">#16610</a></p>
</li>
<li>
<p>Fixed an issue where <code>InPredicate</code> was not invoking value comparison when the
read attribute is null.
<a href="https://github.com/hazelcast/hazelcast/pull/16578">#16578</a></p>
</li>
<li>
<p>Fixed an invalidation issue when using a transactional map from a cache
with Near Cache: the cache invalidation event occurs when the
<code>transactionalMap.put</code> method is called. As a result, the entry was getting
invalidated before the change is committed to the map.
<a href="https://github.com/hazelcast/hazelcast/issues/16577">#16577</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12-6"><a class="anchor" href="#3-12-6"></a><a class="link" href="#3-12-6">3.12.6</a></h3>
<div class="sect3">
<h4 id="features-3126"><a class="anchor" href="#features-3126"></a><a class="link" href="#features-3126">New Features</a></h4>
<div class="ulist">
<ul>
<li>
<p>Introduced Bitmap Indexes to significantly lower
index memory usage for low-cardinality columns and also to speed up
the queries and lower memory requirements for them
when the queries have multiple predicates acting on the same bitmap index.
Note that bitmap indexes usage, currently, is a good fit for
array/collection attribute indexing, rather than regular
single-valued attributes.
See the <a href="https://docs.hazelcast.org/docs/3.12.6/manual/html-single/#bitmap-indexes">Bitmap Indexes section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enh-3126"><a class="anchor" href="#enh-3126"></a><a class="link" href="#enh-3126">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added support for <a href="https://aws.amazon.com/privatelink/" target="_blank" rel="noopener">AWS PrivateLink</a>:
Now, Hazelcast IMDG Java client can work with Hazelcast Cloud when it uses AWS PrivateLink.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3126"><a class="anchor" href="#fixes-3126"></a><a class="link" href="#fixes-3126">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed the map configuration so that now the value of
<code>optimize-queries</code> element is not serialized anymore.
<a href="https://github.com/hazelcast/hazelcast/pull/16524">#16524</a></p>
</li>
<li>
<p>Fixed an issue where disabling the quorum had not an effect
and was still checking the presence of split-brain protection.
<a href="https://github.com/hazelcast/hazelcast/issues/16507">#16507</a></p>
</li>
<li>
<p>Fixed an issue where the <code>Imap.containsKey()</code> method was not
able to find Near Cached entries when it is called from a
client.
<a href="https://github.com/hazelcast/hazelcast/issues/16472">#16472</a></p>
</li>
<li>
<p>Fixed a race condition caused by using on-heap indexes
while indexing is in progress.
<a href="https://github.com/hazelcast/hazelcast/pull/16461">#16461</a></p>
</li>
<li>
<p>Fixed the issue with <code>setInstanceName()</code> when using Spring Boot
and Hazelcast client: the <code>getOrCreate()</code> method
has been added to the client configuration.
<a href="https://github.com/hazelcast/hazelcast/pull/16363">#16363</a></p>
</li>
<li>
<p>Fixed an issue where wildcard usage at
<code>CLASSPATH</code> was breaking the <code>stop.bat</code> and
<code>start.bat</code> scripts.
<a href="https://github.com/hazelcast/hazelcast/issues/16355">#16355</a></p>
</li>
<li>
<p>Fixed an issue where the migration operations were running
before the previous finalization is completed.
<a href="https://github.com/hazelcast/hazelcast/pull/16190">#16190</a></p>
</li>
<li>
<p>Fixed an issue where repetitive calls of <code>IMap.loadAll()</code>
may cause memory leaks.
<a href="https://github.com/hazelcast/hazelcast/pull/16172">#16172</a></p>
</li>
<li>
<p>Fixed the joining mechanism so that when the discovery
strategy is enabled, multiple join configurations are prevented.
<a href="https://github.com/hazelcast/hazelcast/pull/16143">#16143</a></p>
</li>
<li>
<p>Fixed an issue where a client in the <code>CLIENT_DISCONNECTED</code>
status was never receiving the changes in the cluster member attributes.
<a href="https://github.com/hazelcast/hazelcast/issues/15623">#15623</a></p>
</li>
<li>
<p>Fixed an issue where the <code>MembershipListener.memberAdded()</code>
method after a split-brain merge was showing a different
member order.
<a href="https://github.com/hazelcast/hazelcast/issues/15353">#15353</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12-5"><a class="anchor" href="#3-12-5"></a><a class="link" href="#3-12-5">3.12.5</a></h3>
<div class="sect3">
<h4 id="enh-3125"><a class="anchor" href="#enh-3125"></a><a class="link" href="#enh-3125">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added option to disable retrieving the
<code>OSMBean.getFreePhysicalMemorySize()</code> method.
<a href="https://github.com/hazelcast/hazelcast/pull/16065">#16065</a></p>
</li>
<li>
<p>The <code>recreateCachesOnCluster</code> invocation is not being checked
for the maximum invocations count anymore during cluster restarts.
<a href="https://github.com/hazelcast/hazelcast/pull/16014">#16014</a></p>
</li>
<li>
<p>Improved the  security policy mechanism so that the
secrets (group password, symmetric encryption password, etc.)
are not being checked for the disabled features anymore. This
has also been an improvement for the startup logs related to
secrets. [#3397]</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3125"><a class="anchor" href="#fixes-3125"></a><a class="link" href="#fixes-3125">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where repetitive calls of <code>IMap.loadAll()</code>
may cause memory leaks.
<a href="https://github.com/hazelcast/hazelcast/pull/16171">#16171</a></p>
</li>
<li>
<p>Fixed an issue where an HTTP request via
<code>hazelcast/rest/cluster</code> was failing when using the advanced network
configuration and a client endpoint is
not specified. In this case, this request&#8217;s response
has been improved to report <code>0</code> as the client connection count.
<a href="https://github.com/hazelcast/hazelcast/pull/16150">#16150</a></p>
</li>
<li>
<p>Fixed an issue where an enabled <code>redoOperation()</code> was not
throwing an exception when an empty list is tried to be retrieved
on the client.
<a href="https://github.com/hazelcast/hazelcast/pull/16019">#16019</a></p>
</li>
<li>
<p>Fixed an issue where gathering MultiMap statistics was breaking
the split-brain healing with <code>LatestAccessMergePolicy</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/16003">#16003</a></p>
</li>
<li>
<p>Fixed the <code>multiplier</code> element of client&#8217;s connection
retry configuration to be set as a <code>double</code> in the
XML configuration (`hazelcast-client.xml).
<a href="https://github.com/hazelcast/hazelcast/pull/15990">#15990</a></p>
</li>
<li>
<p>Fixed the following Hot Restart issues:</p>
<div class="ulist">
<ul>
<li>
<p>Introduced an additional stage to the Hot Restart
procedure, i.e., <code>HotRestartIntegrationService.startup()</code>,
which waits until all members transition from the <code>PASSIVE</code> state.
This guarantees all members to have the same state after Hot
Restart operation is finished.</p>
</li>
<li>
<p>IMap proxies created during Hot Restart are not initialized
and published to other cluster members. So the operation
has been improved to force initialize any uninitialized proxies
and publish them. This fixed the issue where the
<code>getDistributedObjects()</code> method was not reporting the persisted
objects after a Hot Restart.</p>
<div class="paragraph">
<p><a href="https://github.com/hazelcast/hazelcast/pull/15986">#15986</a>,</p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Fixed an issue where, after forming a cluster, certain members
occasionally do not contain <code>EventService</code> registrations for
some other members.
<a href="https://github.com/hazelcast/hazelcast/issues/15950">#15950</a></p>
</li>
<li>
<p>Fixed an issue where calling the <code>IMap.removeAll()</code> method
without index was updating the last access and expiry time
for all records.
<a href="https://github.com/hazelcast/hazelcast/pull/15853">#15853</a></p>
</li>
<li>
<p>Fixed an issue where the client connection count
was retrieved using an incorrect method.
<a href="https://github.com/hazelcast/hazelcast/issues/15681">#15681</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12-4"><a class="anchor" href="#3-12-4"></a><a class="link" href="#3-12-4">3.12.4</a></h3>
<div class="sect3">
<h4 id="enh-3124"><a class="anchor" href="#enh-3124"></a><a class="link" href="#enh-3124">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added support for the <code>PartitionLostListener</code> configuration
on the client side.
<a href="https://github.com/hazelcast/hazelcast/issues/15762">#15762</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3124"><a class="anchor" href="#fixes-3124"></a><a class="link" href="#fixes-3124">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the query was ignoring the index
but was processing successfully.
<a href="https://github.com/hazelcast/hazelcast/pull/15808">#15808</a></p>
</li>
<li>
<p>Fixed an issue where the predicate queries to retrieve
multi-values were failing on the nested JSON objects in arrays.
<a href="https://github.com/hazelcast/hazelcast/pull/15789">#15789</a></p>
</li>
<li>
<p>Fixed a possible livelock when many threads were trying to
use the <code>incrementMod()</code> method causing an infinite loop.
<a href="https://github.com/hazelcast/hazelcast/pull/15777">#15777</a></p>
</li>
<li>
<p>Fixed shutting down Management Center service caused by
an NPE when MultiMap statistics are gathered after
<code>MultiMapService.shutdown()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/15656">#15656</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12-3"><a class="anchor" href="#3-12-3"></a><a class="link" href="#3-12-3">3.12.3</a></h3>
<div class="sect3">
<h4 id="enh-3123"><a class="anchor" href="#enh-3123"></a><a class="link" href="#enh-3123">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added a new implementation of <code>SecondsBasedEntryTaskScheduler</code> for the
<code>FOR_EACH</code> mode to improve the performance of <code>TransactionContext.commit()</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/15586">#15586</a></p>
</li>
<li>
<p>Improved the client graceful shutdown mechanism so that
its tasks are executed before marking a client as inactive.
<a href="https://github.com/hazelcast/hazelcast/pull/15565">#15565</a></p>
</li>
<li>
<p>Added sent/received bytes logs for each <code>ProtocolType</code> into the diagnostics.
<a href="https://github.com/hazelcast/hazelcast/pull/15541">#15541</a></p>
</li>
<li>
<p>Improved the performance of <code>TransactionLog.add()</code> by avoiding
the <code>LinkedList.remove()</code> call.
<a href="https://github.com/hazelcast/hazelcast/pull/15435">#15435</a></p>
</li>
<li>
<p>To be shown on Management Center, the clients now send both its IP
address and canonical hostname. Before, only the hostname of the
client was shown.
<a href="https://github.com/hazelcast/hazelcast/pull/15421">#15421</a></p>
</li>
<li>
<p>Added the support for nested JSON objects in the arrays.
<a href="https://github.com/hazelcast/hazelcast/issues/15368">#15368</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3123"><a class="anchor" href="#fixes-3123"></a><a class="link" href="#fixes-3123">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the <code>node.isMaster()</code> method could cause
inconsistent behaviors when it is executed during a partition service lock.
<a href="https://github.com/hazelcast/hazelcast/pull/15618">#15618</a></p>
</li>
<li>
<p>Fixed an issue where Management Center was not able to see the 3.12.2 members
(members with CP subsystem enabled) after performing a rolling upgrade from Hazelcast IMDG 3.11.4 to
3.12.2. 'ManagementCenterService' was shutting down and throwing an exception
when a CP-subsystem-enabled member was trying to report to Management Center for the first time. [#15609]</p>
</li>
<li>
<p>Made <code>PagingPredicate</code> a <code>VisitablePredicate</code> so the optimizer is able to
visit its inner predicate to optimize it or to select an index to evaluate the
inner predicate with.
<a href="https://github.com/hazelcast/hazelcast/issues/15602">#15602</a></p>
</li>
<li>
<p>Fixed an issue where CP subsystem restarts were not being canceled
or waited the running/scheduled discovery tasks. Otherwise, two different
discovery tasks could overlap and run concurrently or one of the discovery
tasks could run in a corrupted state.
<a href="https://github.com/hazelcast/hazelcast/pull/15568">#15568</a></p>
</li>
<li>
<p>Fixed an issue where the cleaner task for expired records
was logging the exceptions during migrations: the log level for <code>PartitionMigratingException</code>
has been set to <code>FINEST</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/15543">#15543</a></p>
</li>
<li>
<p>Fixed an issue where the executor service message task
was blocking the partition thread.
<a href="https://github.com/hazelcast/hazelcast/pull/15526">#15526</a></p>
</li>
<li>
<p>Fixed an issue where <code>normalFramesRead</code> and <code>priorityFramesRead</code> were
never incremented as seen in the diagnostic logs.
<a href="https://github.com/hazelcast/hazelcast/issues/15479">#15479</a></p>
</li>
<li>
<p>Fixed an issue where the <code>readBackupData</code> and <code>statisticsEnabled</code>
options were not respected when a new map configuration is dynamically
added from a client to a running Hazelcast cluster.
<a href="https://github.com/hazelcast/hazelcast/pull/15392">#15392</a></p>
</li>
<li>
<p>Fixed an issue where a lock was required when registering metrics
on the happy path.
<a href="https://github.com/hazelcast/hazelcast/pull/15378">#15378</a></p>
</li>
<li>
<p>Fixed an issue where some updates to the entries got lost from
the write behind queue: It was a concurrency issue when there are
updates to <code>CoalescedWriteBehindQueue</code> while <code>StoreWorker</code> is running.
<a href="https://github.com/hazelcast/hazelcast/issues/15060">#15060</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-3123"><a class="anchor" href="#contributors-3123"></a><a class="link" href="#contributors-3123">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/gdela">Wojciech Gdela</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12-2"><a class="anchor" href="#3-12-2"></a><a class="link" href="#3-12-2">3.12.2</a></h3>
<div class="sect3">
<h4 id="enh-3122"><a class="anchor" href="#enh-3122"></a><a class="link" href="#enh-3122">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Enabled the REST endpoints for the <code>cluster.sh</code>, <code>cp-subsystem.sh</code> and
<code>healthcheck.sh</code> scripts to use HTTPS. Before, they were
using HTTP. See the
<a href="https://docs.hazelcast.org/docs/3.12.2/manual/html-single/#using-the-script-cluster-sh" target="_blank" rel="noopener">cluster.sh</a>,
<a href="https://docs.hazelcast.org/docs/3.12.2/manual/html-single/#cp-subsystem-management-apis" target="_blank" rel="noopener">cp-subsystem.sh</a>
and <a href="https://docs.hazelcast.org/docs/3.12.2/manual/html-single/#health-check-script" target="_blank" rel="noopener">healthcheck.sh</a> sections.</p>
</li>
<li>
<p>Introduced complete example configurations (XML and YAML) for
Hazelcast Java client and client failover.
See the <a href="https://docs.hazelcast.org/docs/3.12.2/manual/html-single/#configuring-declaratively" target="_blank" rel="noopener">Configuring Declaratively section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3122"><a class="anchor" href="#fixes-3122"></a><a class="link" href="#fixes-3122">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the <code>UNKNOWN</code> current runtime version in
the <code>JavaVersion.isAtLeast()</code> method was not handled properly.
To avoid having runtime functionality, that relies on
this method, broken with each new major Java release, <code>UNKNOWN</code>
as a detected current runtime version is now considered to be at least any
other version.
<a href="https://github.com/hazelcast/hazelcast/pull/15362">#15362</a></p>
</li>
<li>
<p>Updated the <code>JavaVersion</code> class to support JDK 13 and 14 builds.
<a href="https://github.com/hazelcast/hazelcast/pull/15354">#15354</a></p>
</li>
<li>
<p>Fixed the deserialization filtering for Externalizables and Deadlock in the
map index. The deserialization filter was not properly protecting against the
vulnerable Externalizable classes. The filtering has been extended.
<a href="https://github.com/hazelcast/hazelcast/issues/15346">#15346</a></p>
</li>
<li>
<p>Fixed an issue where the comparators were not able to act on both keys and values.
A custom paging predicate comparator may act on keys and values at the
same time even if only the keys are requested, e.g., using the <code>IMap.keySet()</code>
method. Before this fix only the keys were fetched for this method, making
comparators unable to act on values.
<a href="https://github.com/hazelcast/hazelcast/pull/15324">#15324</a></p>
</li>
<li>
<p>Fixed an issue where the locked entries with a time-to-live were not evicted.
With this fix, the lock operation checks if an entry has already expired.
<a href="https://github.com/hazelcast/hazelcast/pull/15310">#15310</a></p>
</li>
<li>
<p>Fixed an issue where the named scheduled tasks was not respecting
the <code>HazelcastInstanceAware</code> marker.
<a href="https://github.com/hazelcast/hazelcast/pull/15233">#15233</a></p>
</li>
<li>
<p>Fixed an issue where storing <code>MapStore</code> instances in <code>MapStoreConfig</code>
could cause member failures when the configuration is added
dynamically: When you configure the map store by the class name
and start Hazelcast with this configuration, the <code>MapStoreConfig#implementation</code>
field was altered to store the reference to the <code>MapStore</code> instance
created by Hazelcast (this meant that someone can access the created map store
instance via <code>MapStoreConfig#getImplementation()</code>). With this fix,
<code>MapStoreConfig</code> behavior has become aligned with other data structures' configuration,
i.e., it is not altered anymore and if you did not set anything as <code>implementation</code>
then <code>MapStoreConfig#getImplementation()</code> returns <code>null</code> after Hazelcast is started.
Also, this fix eliminates the side effects with the
dynamically added map configurations, potentially breaking this functionality
for the maps with map stores configured.
<a href="https://github.com/hazelcast/hazelcast/pull/15225">#15225</a></p>
</li>
<li>
<p>Fixed an issue where IMap&#8217;s <code>localLockedEntryCount</code> metric was not considering
the entries with null values.
<a href="https://github.com/hazelcast/hazelcast/issues/15218">#15218</a></p>
</li>
<li>
<p>Fixed a possible <code>NullPointerException</code> for the <code>remove</code> variable in
<code>DeafultRecordStore</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/15217">#15217</a></p>
</li>
<li>
<p>Fixed an issue where an executor was serialized multiple times when it
is sent to multiple members by a Java client. Now, it is serialized
only once as expected.
<a href="https://github.com/hazelcast/hazelcast/issues/15007">#15007</a></p>
</li>
<li>
<p>Fixed an issue where the WAN consistency check and synchronization was
getting stuck when requested on a <code>PASSIVE</code> cluster: WAN consistency
check and WAN synchronization performed on a cluster in the <code>PASSIVE</code>
state was keeping the WAN synchronization state at <code>IN_PROGRESS</code> even
after the cluster state has set to <code>ACTIVE</code>.
This was preventing serving future consistency check and synchronization requests.
This fix allows WAN replication, consistency check and
WAN synchronization while the source cluster is in the <code>PASSIVE</code> state. #2968</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12-1"><a class="anchor" href="#3-12-1"></a><a class="link" href="#3-12-1">3.12.1</a></h3>
<div class="sect3">
<h4 id="new-features-3121"><a class="anchor" href="#new-features-3121"></a><a class="link" href="#new-features-3121">New Features</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added support for updating the licenses of all the running
members of a Hazelcast IMDG cluster using the REST API.
See the <a href="https://docs.hazelcast.org/docs/3.12.1/manual/html-single/#rest-update-license" target="_blank" rel="noopener">License Information section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enh-3121"><a class="anchor" href="#enh-3121"></a><a class="link" href="#enh-3121">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Introduced complete example configurations (XML and YAML) for
Hazelcast Java client and client failover. See the
<a href="https://docs.hazelcast.org/docs/3.12.1/manual/html-single/#configuring-declaratively" target="_blank" rel="noopener">Configuring Declaratively section</a>.</p>
</li>
<li>
<p>Updated Hazelcast JCache implementation to support
JCache 1.1.1. This version of JCache does not introduce new
functionalities; it resolves the errata and issues in JCache 1.1.0.
See the <a href="https://docs.hazelcast.org/docs/3.12.1/manual/html-single/#jcache-111" target="_blank" rel="noopener">Upgrading to JCache 1.1.1 section</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the other improvements performed to solve the enhancement
issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Improved <code>Config#getConfigurationUrl()</code>'s Javadoc to mention
that it returns <code>null</code> if the <code>Config</code> instance has been built from
a source different than URL or file.
<a href="https://github.com/hazelcast/hazelcast/pull/15109">#15109</a></p>
</li>
<li>
<p>Improved the Raft snapshotting so that the old log entries are not
kept when there is no follower with an unknown match index.
<a href="https://github.com/hazelcast/hazelcast/pull/15068">#15068</a></p>
</li>
<li>
<p>Updated the client failover XSD to include <code>targetNamespace</code> that
has been delivered with Hazelcast IMDG 3.12.
<a href="https://github.com/hazelcast/hazelcast/pull/15057">#15057</a></p>
</li>
<li>
<p>Updated the Hazelcast Kubernetes dependency to the latest version.
<a href="https://github.com/hazelcast/hazelcast/pull/14899">#14899</a></p>
</li>
<li>
<p>Added the getter method for the YAML configuration builder properties.
<a href="https://github.com/hazelcast/hazelcast/pull/14884">#14884</a></p>
</li>
<li>
<p>Eliminated the excessive logging when NIO networking is shutdown by
deregistering the IO threads.
<a href="https://github.com/hazelcast/hazelcast/pull/14837">#14837</a></p>
</li>
<li>
<p>Introduced a warning log for illegal reflective access operation when
using Java 9 and higher, and OpenJ 9.
<a href="https://github.com/hazelcast/hazelcast/pull/14835">#14835</a></p>
</li>
<li>
<p>Updated the Hazelcast web session manager dependency to the latest version.
<a href="https://github.com/hazelcast/hazelcast/pull/14822">#14822</a></p>
</li>
<li>
<p>Improved the force start mechanism for Hot Restart so that only the
subdirectories and files under the base Hot Restart directory are now deleted
(not the base directory). #2997</p>
</li>
<li>
<p>Updated the Netty version to fix the unknown signature algorithm
issues in BoringSSL integration. #2907</p>
</li>
<li>
<p>Added Maven&#8217;s animal sniffer plugin to check the JDK 6 compatibility. #2906</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3121"><a class="anchor" href="#fixes-3121"></a><a class="link" href="#fixes-3121">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the queries like <code>labels[any] = 0</code> and <code>labels[any] = 1</code>
were optimized only to <code>false</code> since <code>labels[any]</code> was interpreted as a
regular attribute name having a single value.
<a href="https://github.com/hazelcast/hazelcast/issues/15138">#15138</a></p>
</li>
<li>
<p>Fixed an issue which was causing <code>OutOfMemoryException</code> in a
split-brain situation, due to the client listeners.
<a href="https://github.com/hazelcast/hazelcast/pull/15042">#15042</a></p>
</li>
<li>
<p>Fixed the authentication mechanism between the clients and members
by adding a check to prevent re-verification while the client is changing
its owner member.
<a href="https://github.com/hazelcast/hazelcast/pull/15015">#15015</a></p>
</li>
<li>
<p>Fixed an issue where the Hazelcast IMDG configuration files, that
have an extension other than <code>.xml</code>, <code>.yaml</code> or <code>.yml</code> or do not have
an extension, were ignored silently. This was happening
when the configuration file is set by using the <code>hazelcast.config</code>
system property. <a href="https://github.com/hazelcast/hazelcast/pull/14945">#14945</a></p>
</li>
<li>
<p>Some operations such as heartbeat checks and partition
migrations share common threads with the client login module.
In case of the long running client login module implementations,
some symptoms such as split brain syndrome can be seen. This has
been fixed by introducing a blocking executor which is used only
for the client JAAS authentications.
<a href="https://github.com/hazelcast/hazelcast/pull/14957">#14957</a></p>
</li>
<li>
<p>Fixed an issue where the client was not considering the new
address of a restarted member, which has the same UUID but could
have a different IP address after it is restarted.
<a href="https://github.com/hazelcast/hazelcast/pull/14843">#14843</a></p>
</li>
<li>
<p>Fixed an issue where the migration operations were running
before the previous finalization is completed.
<a href="https://github.com/hazelcast/hazelcast/pull/14834">#14834</a></p>
</li>
<li>
<p>Fixed an issue where the data loaded by Hot Restart was not being
recognized after a Merkle tree synchronization. #2960</p>
</li>
<li>
<p>Fixed an issue where the WAN queues were not reset during
a split-brain healing which caused duplicate WAN events to be
enqueued and WAN counters to be broken. #2947</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-12"><a class="anchor" href="#3-12"></a><a class="link" href="#3-12">3.12</a></h3>
<div class="sect3">
<h4 id="nf-312"><a class="anchor" href="#nf-312"></a><a class="link" href="#nf-312">New Features</a></h4>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Enterprise New Features:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Blue-Green and Disaster Recovery for Java Clients:</strong> Introduced the
support for Hazelcast Java clients to switch between alternative clusters. See the
<a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/index.html#blue-green-deployment-and-disaster-recovery">Blue Green Deployment and Disaster Recovery section</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Open Source New Features:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>CP Subsystem:</strong> Implementing the <a href="https://raft.github.io/">Raft consensus algorithm</a>,
Hazelcast introduces its CP subsystem which runs within a Hazelcast cluster and
offers linearizable implementations of Hazelcast&#8217;s concurrency APIs. See the
<a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/index.html#cp-subsystem">CP Subsystem chapter</a>.</p>
</li>
<li>
<p><strong>Querying JSON Strings:</strong>  You can now query JSON strings stored inside your
Hazelcast clusters. See the <a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/#querying-json-strings">Querying JSON Strings section</a>.</p>
</li>
<li>
<p><strong>Pipelining:</strong> Introduced pipelining mechanism using which you can send
multiple requests in parallel to Hazelcast members or clients, and read the
responses in a single step. See the
<a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/index.html#pipelining">Pipelining section</a>.</p>
</li>
<li>
<p><strong>Support for Multiple Endpoints When Configuring Member’s Networking:</strong> Added
the ability to configure the Hazelcast members with separate server sockets
for different protocols. See the
<a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/#advanced-network-configuration">Advanced Network Configuration section</a>.</p>
</li>
<li>
<p><strong>YAML Configuration Support:</strong> Added the support for configuring
Hazelcast in YAML. See the
<a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/#configuring-declaratively-yaml">Configuring Declaratively with YAML section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="bc-312"><a class="anchor" href="#bc-312"></a><a class="link" href="#bc-312">Breaking Changes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Support for JDK 6 and 7 has been dropped. The minimum Java version
that Hazelcast supports now is Java 8. See the
<a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/#supported-jvms">Supports JVMs section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enh-312"><a class="anchor" href="#enh-312"></a><a class="link" href="#enh-312">Enhancements</a></h4>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Enterprise Enhancements:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Sharing Hot Restart <code>base-dir</code> among Multiple Members:</strong> The base
directory for the Hot Restart feature (<code>base-dir</code>) is now used as a
shared directory between
multiple members, and each member uses a unique sub-directory
inside this base directory. This allows using the same configuration
on all the members. Previously, each member had to use a separate directory
which complicated the deployments on cloud-like environments. During the
restart, a member tries to lock an already existing Hot Restart directory
inside the base directory. If it cannot acquire any, then it creates a fresh new directory. See the
<a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/index.html##configuring-hot-restart">Configuring Hot Restart section</a>.</p>
</li>
<li>
<p><strong>Lower Latencies and Higher Throughput in WAN Replication:</strong> Improved
the design of the WAN replication mechanism to allow configuring it for
lower latencies and higher throughput. See the
<a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/index.html##tune-wr">Tuning WAN Replication For Lower Latencies and Higher Throughput section</a>.</p>
</li>
<li>
<p><strong>Add/Remove WAN Publishers in a Running Cluster:</strong> Introduced the
ability to dynamically add or remove WAN publishers (target clusters).
See the <a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/index.html#dynamically-adding-wan-publishers">Dynamically Adding WAN Publishers section</a>.</p>
</li>
<li>
<p><strong>Automatic Removal of Stale Hot Restart Data:</strong> Introduced an option
that allows the stale Hot Restart data to be removed automatically. See
the description of the <code>auto-remove-stale-data</code> configuration element in the
<a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/index.html#configuring-hot-restart">Configuring Hot Restart section</a>.</p>
</li>
<li>
<p><strong>Client Permission Handling When a New Member Joins:</strong> Introduced a
declarative configuration attribute <code>on-join-operation</code> for the client
permission in the Security configuration (its programmatic configuration
equivalent is the <code>setOnJoinPermissionOperation()</code> method). This attribute
allows to choose whether a new member joining to a cluster will apply the
client permissions stored in its own configuration, or will use the ones
defined in the cluster. See the
<a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/#handling-permissions-when-a-new-member-joins">Handling Permissions When a New Member Joins section</a>.</p>
</li>
<li>
<p><strong>Automatic Cluster Version Change after a Rolling Upgrade:</strong> Introduced
the ability to automatically upgrade the cluster version after a rolling
upgrade. See the <a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/#upgrading-cluster-version">Upgrading Cluster Version section</a>.</p>
</li>
<li>
<p><strong>FIPS 140-2 Validation:</strong> Hazelcast now can be configured to use a
FIPS 140-2 validated module. See the <a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/#fips-140-2">FIPS 140-2 section</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Open Source Enhancements:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Client Instance Names and Labels:</strong> You can now retrieve the names
of client instances on the member side. Moreover, client labels have
been introduced so that you can group your clients and/or perform special
operations for specific clients. See the
<a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/index.html#defining-client-labels">Defining Client Labels section</a>.</p>
</li>
<li>
<p><strong>Composite Indexes:</strong> Introduced the ability to recognize the
queries that use all the indexed properties and treat them as a composite,
e.g., <code>foo = 1 and bar = 2 and foobar = 3</code>. See the
<a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/index.html#composite-indexes">Composite Indexes section</a>.</p>
</li>
<li>
<p><strong>REST Endpoint Groups:</strong> With this enhancement you can enable or disable:</p>
<div class="ulist">
<ul>
<li>
<p>REST API completely</p>
</li>
<li>
<p>Memcache protocol</p>
</li>
<li>
<p>REST endpoint groups</p>
<div class="paragraph">
<p>See the <a href="https://docs.hazelcast.org/docs/3.12/manual/html-single/#using-the-rest-endpoint-groups">Using the REST Endpoint Groups section</a>.</p>
</div>
</li>
</ul>
</div>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the other improvements performed to solve
the enhancement issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Improved the YAML configuration so that you can configure multiple
WAN member sockets. <a href="https://github.com/hazelcast/hazelcast/issues/14800">#14800</a></p>
</li>
<li>
<p>Members now fail fast when the <code>max-idle-seconds</code> element for the
entries in a map is set to 1 second. See the note in the
<a href="https://docs.hazelcast.org/docs/latest-dev/manual/html-single/#configuring-map-eviction">Configuring Map Eviction section</a>
for this element. <a href="https://github.com/hazelcast/hazelcast/issues/14697">#14697</a></p>
</li>
<li>
<p>Removed group password from the Hazelcast’s default XML configuration
file. Also improved the non-empty password <code>INFO</code> message. It&#8217;s now only
logged if security is disabled, password is not empty and password is not
the Hazelcast default one. <a href="https://github.com/hazelcast/hazelcast/pull/14603">#14603</a></p>
</li>
<li>
<p>Improved the code comments for the <code>HazelcastInstance</code> interface.
<a href="https://github.com/hazelcast/hazelcast/issues/14439">#14439</a></p>
</li>
<li>
<p>Improved the speed of partition migrations. This has been achieved by
sharing only the latest completed migration information with the members,
instead of sending the whole partition table after each migration.
Additionally, there was no need to send the completed migrations
to all cluster members after each migration. Instead, completed migrations
are sent to the source and destination members of the migration
inside migration operations. Remaining members, now, receive
the completed migrations in batches asynchronously.
<a href="https://github.com/hazelcast/hazelcast/pull/14351">#14351</a></p>
</li>
<li>
<p>Improved the Javadoc of <code>HazelcastClient</code> so that the code comments now
use "unisocket client" instead of "dumb client". <a href="https://github.com/hazelcast/hazelcast/issues/14213">#14213</a></p>
</li>
<li>
<p>Added the ability to perform an LDAP <code>subtree</code> search for groups in Hazelcast
Management Center’s LDAP authenticator. <a href="https://github.com/hazelcast/hazelcast/issues/14118">#14118</a></p>
</li>
<li>
<p>Added the ability to set the <code>EvictionConfig.comparatorClassName()</code> in the
client’s declarative configuration, too. <a href="https://github.com/hazelcast/hazelcast/issues/14093">#14093</a></p>
</li>
<li>
<p>Introduced the <code>/ready</code> endpoint to the REST API to allow checking a
member if it is ready to be used after it joins to the cluster.
<a href="https://github.com/hazelcast/hazelcast/issues/14089">#14089</a></p>
</li>
<li>
<p>Improved the syncing of XSD files. <a href="https://github.com/hazelcast/hazelcast/issues/14070">#14070</a></p>
</li>
<li>
<p>The <code>IMap.removeAll()</code> method now supports <code>PartitionPredicate</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/12238">#12238</a></p>
</li>
<li>
<p>Improved the diagnostics tool so that it automatically creates the
configured directory for the diagnostic outputs.
<a href="https://github.com/hazelcast/hazelcast/issues/11946">#11946</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-312"><a class="anchor" href="#fixes-312"></a><a class="link" href="#fixes-312">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the state of member list on the clients were broken after a hot
restart in the cluster.https://github.com/hazelcast/hazelcast/issues/14839[#14839]</p>
</li>
<li>
<p>Fixed an issue where the outbound pipeline was not waking up properly
after merging the write-through changes. <a href="https://github.com/hazelcast/hazelcast/issues/14830">#14830</a></p>
</li>
<li>
<p>Fixed an issue where the <code>like</code> and <code>ilike</code> predicates didn’t catch
any entity with the <code>text</code> field containing the <code>\n</code> character.
<a href="https://github.com/hazelcast/hazelcast/issues/14751">#14751</a></p>
</li>
<li>
<p>Fixed an issue where <code>NullPointerException</code>s was thrown recursively
when a client is connected to an unreachable member during a split-brain.
<a href="https://github.com/hazelcast/hazelcast/issues/14722">#14722</a></p>
</li>
<li>
<p>Fixed an issue where Hazelcast running on RHEL (OpenJDK8) shows <code>unknown gc</code>
in the logs, instead of <code>major gc</code> and <code>minor gc</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/14701">#14701</a></p>
</li>
<li>
<p>Fixed an issue where the IP client selector was not working for the
local clients. <a href="https://github.com/hazelcast/hazelcast/issues/14654">#14654</a></p>
</li>
<li>
<p>Fixed the wording of a misleading error in the first attempt to connect
to a wrongly configured cluster. The error message has been changed to
“Unable to connect to any cluster”.  <a href="https://github.com/hazelcast/hazelcast/issues/14574">#14574</a></p>
</li>
<li>
<p>Fixed an issue where the <code>setAsync()</code> method was throwing <code>NullPointerException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/14445">#14445</a></p>
</li>
<li>
<p>Fixed an issue where the collection attributes indexed with <code>[any]</code> were causing
incorrect SQL query results, if the first data inserted to the map has no value for
the attribute or the collection is empty. <a href="https://github.com/hazelcast/hazelcast/issues/14358">#14358</a></p>
</li>
<li>
<p>Fixed an issue where <code>mapEvictionPolicy</code> couldn’t be specified in the JSON
configuration file. <a href="https://github.com/hazelcast/hazelcast/issues/14092">#14092</a></p>
</li>
<li>
<p>Fixed an issue where the rolling upgrade was failing when all members change
their IP addresses. <a href="https://github.com/hazelcast/hazelcast/issues/14088">#14088</a></p>
</li>
<li>
<p>Fixed an issue where the resources were not wholly cleared when destroying
<code>DurableExecutorService</code> causing some resources to be left in the heap.
<a href="https://github.com/hazelcast/hazelcast/issues/14087">#14087</a></p>
</li>
<li>
<p>Fixed an issue where the REST API was not handling the HTTP requests without
headers correctly: when a client sends an HTTP request without headers to the
Hazelcast REST API, the <code>HttpCommand</code> class was wrongly expecting an additional
new line. <a href="https://github.com/hazelcast/hazelcast/issues/14353">#14353</a></p>
</li>
<li>
<p>Fixed an issue where <code>QueryCache</code> was not returning the copies of the found
objects. <a href="https://github.com/hazelcast/hazelcast/issues/14280">#14280</a></p>
</li>
<li>
<p>Fixed an issue where the locks were not cleaned up after the members are restarted.
<a href="https://github.com/hazelcast/hazelcast/issues/14215">#14215</a></p>
</li>
<li>
<p>Fixed an issue where the MultiMap&#8217;s <code>RemoveOperation</code> was iterating through the
backing collection, which caused performance degradation (when using the <code>SET</code>
collection type). <a href="https://github.com/hazelcast/hazelcast/issues/14145">#14145</a></p>
</li>
<li>
<p>Fixed an issue where the user code deployment feature was throwing <code>NullPointerException</code>
while loading multiple nested classes and using entry processors.
<a href="https://github.com/hazelcast/hazelcast/issues/14105">#14105</a></p>
</li>
<li>
<p>Fixed an issue where the newly joining members could not form a cluster when
the existing members are killed. <a href="https://github.com/hazelcast/hazelcast/issues/14051">#14051</a></p>
</li>
<li>
<p>Fixed an issue where the <code>IMap.get()</code> method was not resetting the idle time
counter when <code>read-backup-data</code> is enabled. <a href="https://github.com/hazelcast/hazelcast/issues/14026">#14026</a></p>
</li>
<li>
<p>Fixed an issue where the <code>addIndex()</code> method was performing a full copy of
entries when a new member joins the cluster, which is not needed.
<a href="https://github.com/hazelcast/hazelcast/issues/13964">#13964</a></p>
</li>
<li>
<p>Fixed an issue where the initialization failure of <code>discoveryService</code>
was causing some threads to remain open and the JVM could not be terminated
because of these threads. <a href="https://github.com/hazelcast/hazelcast/issues/13821">#13821</a></p>
</li>
<li>
<p>Fixed the discrepancy between the XSD on the website and the one in the
download package. <a href="https://github.com/hazelcast/hazelcast/issues/13011">#13011</a></p>
</li>
<li>
<p><code>PagingPredicate</code> with comparator was failing to serialize when sending
from the client or member when the cluster size is more than 1. This has been
fixed by making the <code>PagingPredicateQuery</code> comparator serializable.
<a href="https://github.com/hazelcast/hazelcast/issues/12208">#12208</a></p>
</li>
<li>
<p>Fixed an issue where <code>TcpIpConnectionManager</code> was putting the connections in
a map under the remote endpoint bind address but not under the address to which
Hazelcast connects. <a href="https://github.com/hazelcast/hazelcast/issues/11256">#11256</a></p>
</li>
<li>
<p>Fixed an issue where a restarted member cannot join to the active cluster
when <code>hot-restart-persistence</code> and <code>auto-remove-stale-data</code> are enabled. [#2842]</p>
</li>
<li>
<p>Fixed an issue when a member emits lots of <code>AddWanConfigIgnoredEvent</code>s
after receiving a request to add WAN configuration. [#2838]</p>
</li>
<li>
<p>Fixed an issue where <code>wan-endpoint-config</code> under <code>advanced-network</code> does
not work properly when the member is bound to more IP addresses, e.g., when NAT is used. [#2808]</p>
</li>
<li>
<p>Fixed an issue where the connection to Memcache endpoint configured with SSL
was throwing <code>NullPointerException</code>. [#2783]</p>
</li>
<li>
<p>Fixed an issue where <code>EvictBatchBackupOperation</code> was throwing a
<code>ClassCastException</code> for High-Density Memory Store lazy  entry view. [#2780]</p>
</li>
<li>
<p>Fixed an issue where the Memcache endpoint from <code>AdvancedNetworkConfig</code> was
expecting <code>CLIENT</code> protocol with Hazelcast IMDG Enterprise sources. [#2778]</p>
</li>
<li>
<p>Fixed an issue where Hazelcast couldn’t start and threw <code>NullPointerException</code>
when SSL in <code>AdvancedNetworkConfig</code> is configured. [#2755]</p>
</li>
<li>
<p>Fixed an issue where the partition migration was throwing exceptions due to
the serialization of <code>PublishCompletedMigrationOperation</code>. [#2771]</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="rdf-312"><a class="anchor" href="#rdf-312"></a><a class="link" href="#rdf-312">Removed/Deprecated Features</a></h4>
<div class="ulist">
<ul>
<li>
<p><code>ILock</code> interface and implementation of <code>ILock</code> has been deprecated, and
<code>FencedLock</code> has been introduced.</p>
</li>
<li>
<p>The original implementations of <code>IAtomicLong</code>, <code>IAtomicReference</code>,
<code>ISemaphore</code> and <code>ICountDownLatch</code> have been deprecated. Instead, the
implementations provided by the CP Subsystem have been introduced.</p>
</li>
<li>
<p>The following system properties are deprecated:</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.rest.enabled</code></p>
</li>
<li>
<p><code>hazelcast.mc.url.change.enabled</code></p>
</li>
<li>
<p><code>hazelcast.memcache.enabled</code></p>
</li>
<li>
<p><code>hazelcast.http.healthcheck.enabled</code></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-312"><a class="anchor" href="#contributors-312"></a><a class="link" href="#contributors-312">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/vblagushin">Vladimir Blagushin</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-11-7"><a class="anchor" href="#3-11-7"></a><a class="link" href="#3-11-7">3.11.7</a></h3>
<div class="sect3">
<h4 id="fixes-3117"><a class="anchor" href="#fixes-3117"></a><a class="link" href="#fixes-3117">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the Near Cache invalidation was not
working properly when used with Transactional Map.
<a href="https://github.com/hazelcast/hazelcast/pull/16618">#16618</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-11-6"><a class="anchor" href="#3-11-6"></a><a class="link" href="#3-11-6">3.11.6</a></h3>
<div class="sect3">
<h4 id="enh-3116"><a class="anchor" href="#enh-3116"></a><a class="link" href="#enh-3116">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Improved the  security policy mechanism so that the
secrets (group password, symmetric encryption password, etc.)
are not being checked for the disabled features anymore. This
has also been an improvement for the startup logs related to
secrets. [#3396]</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3116"><a class="anchor" href="#fixes-3116"></a><a class="link" href="#fixes-3116">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the <code>OSMBean.getFreePhysicalMemorySize()</code>
method was being excessively executed on AIX operating
systems: added the option to disable the retrieval using
this method.
<a href="https://github.com/hazelcast/hazelcast/pull/16091">#16091</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-11-5"><a class="anchor" href="#3-11-5"></a><a class="link" href="#3-11-5">3.11.5</a></h3>
<div class="sect3">
<h4 id="fixes-3115"><a class="anchor" href="#fixes-3115"></a><a class="link" href="#fixes-3115">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the newly joining members could not form
a cluster when the existing members go down. For this, the joiner
mechanism has been improved, details of which can be seen in
<a href="https://github.com/hazelcast/hazelcast/pull/15871">#15871</a>.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-11-4"><a class="anchor" href="#3-11-4"></a><a class="link" href="#3-11-4">3.11.4</a></h3>
<div class="sect3">
<h4 id="fixes-3114"><a class="anchor" href="#fixes-3114"></a><a class="link" href="#fixes-3114">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Some operations such as heartbeat checks and partition
migrations share common threads with the client login module.
In case of the long running client login module implementations,
some symptoms such as split brain syndrome can be seen. This has
been fixed by introducing a blocking executor which is used only
for the client authentications.
<a href="https://github.com/hazelcast/hazelcast/pull/14941">#14941</a></p>
</li>
<li>
<p>Fixed the WAN replication leak occurred in a split-brain case by
clearing the WAN queues and resetting the WAN counters before merging
the split clusters. #2945</p>
</li>
<li>
<p>Fixed the issue where the WAN counters could be broken if the snapshotting
for a WAN publisher is enabled, i.e., <code>snapshot.enabled=true</code> (it disabled by default).
The counters were not taking coalesced events into effect. #2943</p>
</li>
<li>
<p>Fixed the issue where WAN queues were not reset during the split-brain healing.
This was causing duplicate WAN events to be enqueued during the healing and WAN counters
to be broken. #2942</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-11-3"><a class="anchor" href="#3-11-3"></a><a class="link" href="#3-11-3">3.11.3</a></h3>
<div class="sect3">
<h4 id="enh-3113"><a class="anchor" href="#enh-3113"></a><a class="link" href="#enh-3113">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added the security manager protection to member configuration methods so
that the user code deployments can be used in a more secure way.
<a href="https://github.com/hazelcast/hazelcast/pull/14634">#14634</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3113"><a class="anchor" href="#fixes-3113"></a><a class="link" href="#fixes-3113">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the partition table was not being
updated correctly on the client side when the connection
was changed due to the changes in the member list.
<a href="https://github.com/hazelcast/hazelcast/pull/14793">#14793</a></p>
</li>
<li>
<p>Disabled the migrations while the mastership claim is in
progress to prevent the creation and submission of migrations
before its claim is approved by all the final cluster
members. <a href="https://github.com/hazelcast/hazelcast/pull/14745">#14745</a></p>
</li>
<li>
<p>Fixed an issue where some of the operation statistics
were incorrectly reporting operations per partition.
<a href="https://github.com/hazelcast/hazelcast/pull/14726">#14726</a></p>
</li>
<li>
<p>Fixed an issue where the entries in the Transactional Map were
ignored while promoting from the backups.
<a href="https://github.com/hazelcast/hazelcast/pull/14714">#14714</a></p>
</li>
<li>
<p>Fixed an issue where there was a leak in the socket channel
when the networking is restarted after the cluster merge.
<a href="https://github.com/hazelcast/hazelcast/pull/14699">#14699</a></p>
</li>
<li>
<p>Fixed an issue during the backup expirations of maps with
High-Density Memory Store when there is no eviction configured.
<a href="https://github.com/hazelcast/hazelcast/pull/14626">#14626</a></p>
</li>
<li>
<p>Fixed an issue where the map statistics are not updated when the
<code>IMap.delete()</code> method is called from the client.
<a href="https://github.com/hazelcast/hazelcast/issues/14471">#14471</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-11-2"><a class="anchor" href="#3-11-2"></a><a class="link" href="#3-11-2">3.11.2</a></h3>
<div class="sect3">
<h4 id="enh-3112"><a class="anchor" href="#enh-3112"></a><a class="link" href="#enh-3112">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Introduced a new system property (<code>hazelcast.security.permissions.operation.on-join</code>) that allows to choose whether a new member joining to a cluster will apply the client permissions stored in its own configuration, or will use the ones defined in the cluster. See the <a href="https://docs.hazelcast.org/docs/3.11.2/manual/html-single/#handling-permissions-when-a-new-member-joins">Handling Permissions When a New Member Joins section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3112"><a class="anchor" href="#fixes-3112"></a><a class="link" href="#fixes-3112">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where <code>InitialMembershipEvent</code> was being fired with empty member list, when client async start is enabled. <a href="https://github.com/hazelcast/hazelcast/issues/14364">#14364</a></p>
</li>
<li>
<p>Fixed an issue where the <code>invokeOnPartitionsAsync()</code> method was not returning a value when the <code>memberPartitions</code> is empty. <a href="https://github.com/hazelcast/hazelcast/pull/14266">#14266</a></p>
</li>
<li>
<p>Removed a misleading	exception on the member side when the Java client is disconnected via the method <code>hazelcast.shutdown()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/14244">#14244</a></p>
</li>
<li>
<p>Fixed an issue where the <code>getOperationCount</code> statistics were not updated as expected when performing get operations from the Java client. <a href="https://github.com/hazelcast/hazelcast/issues/14143">#14143</a></p>
</li>
<li>
<p>Difference between the clocks of target and source clusters had a potential to completely block the WAN communication which may cause the WAN queues to be filled up. This has been fixed by ignoring the call timeout check for WAN operations. <a href="https://github.com/hazelcast/hazelcast/issues/13301">#13301</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="bc-3112"><a class="anchor" href="#bc-3112"></a><a class="link" href="#bc-3112">Behavioral Changes</a></h4>
<div class="ulist">
<ul>
<li>
<p>If you have multiple Hazelcast members on a single machine and you are using unisocket clients, we recommend you to set explicit ports for each member. Then you should provide those ports in your client configuration when you give the member addresses. Otherwise, all the load coming from your clients may go through a single member.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-3112"><a class="anchor" href="#contributors-3112"></a><a class="link" href="#contributors-3112">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/MichaelRisthausAtos">Michael Risthaus</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-11-1"><a class="anchor" href="#3-11-1"></a><a class="link" href="#3-11-1">3.11.1</a></h3>
<div class="sect3">
<h4 id="enh-3111"><a class="anchor" href="#enh-3111"></a><a class="link" href="#enh-3111">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p><strong>Toggle Scripting Support</strong>: Introduced the <code>scripting-enabled</code> configuration attribute so that you can allow or prevent sending commands to the members from the Hazelcast Management Center. See the <a href="https://docs.hazelcast.org/docs/3.11.1/manual/html-single/index.html#toggle-scripting-support">Toggle Scripting Support section</a> for information on how to configure it.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3111"><a class="anchor" href="#fixes-3111"></a><a class="link" href="#fixes-3111">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the client&#8217;s Near Cache on Replicated Map with <code>Binary</code> storage was causing an exception on the member. <a href="https://github.com/hazelcast/hazelcast/issues/14210">#14210</a></p>
</li>
<li>
<p>Fixed an issue where the performance of <code>DefaultQueryCache</code> was degraded because of the flow in case of the index-aware queries. <a href="https://github.com/hazelcast/hazelcast/issues/14177">#14177</a></p>
</li>
<li>
<p>When the client (having a Reliable Topic) reconnects to the cluster, the <code>MessageListener</code> added to the client was no longer receiving messages, unlike the <code>MapListener</code>. This has been fixed by making the Reliable Topic structure to continue from the last known sequence ID, in case
of an <code>HazelcastClientOfflineException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/14123">#14123</a></p>
</li>
<li>
<p>Fixed an issue where the members and clients were not disconnecting the connection as soon as a heartbeat timeout is detected. The member side heartbeat monitor was still checking if the connection is the owner connection. This activity has also been removed. <a href="https://github.com/hazelcast/hazelcast/issues/14094">#14094</a></p>
</li>
<li>
<p>Fixed an issue where the <code>mapEvictionPolicy</code> configuration became null, when the JSON file is used to start a Hazelcast instance on the PCF environment. <a href="https://github.com/hazelcast/hazelcast/issues/14086">#14086</a></p>
</li>
<li>
<p>Fixed an issue where the failed store operations was filling the write-behind queues by duplicating themselves, in each run of the store-worker thread (this was happening when <code>write-batch-size</code> is larger than 1 and <code>write-coalescing</code> is disabled, there was and is no issue for the default values of these properties). <a href="https://github.com/hazelcast/hazelcast/issues/14019">#14019</a></p>
</li>
<li>
<p>Fixed an issue where the querying performance dropped when running Hazelcast within OSGi. <a href="https://github.com/hazelcast/hazelcast/issues/13785">#13785</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="bc-3111"><a class="anchor" href="#bc-3111"></a><a class="link" href="#bc-3111">Behavioral Changes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Starting with Hazelcast IMDG 3.11.1 and for the future releases, when you enable TLS/SSL and do not provide the <code>trustStore</code> property, the default trusted certificates are/will be used, i.e., the Java provided list of trusted CA certificates.</p>
</li>
<li>
<p>Due to the API change in <code>evictionPolicy</code> in maps (related issue is listed above as #14086), you may face with
a configuration conflict while using dynamic configuration,
i.e., the exception <code>Cannot add a dynamic configuration</code>. You can use the
<code>hazelcast.dynamicconfig.ignore.conflicts</code> property when restarting your cluster after
this conflict to heal it.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-11"><a class="anchor" href="#3-11"></a><a class="link" href="#3-11">3.11</a></h3>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Hazelcast IMDG 3.11 and the upcoming releases are fully compatible with JDK 9, 10 and 11. For information on the other JDK compatibility details, see the <a href="https://docs.hazelcast.org/docs/3.11/manual/html-single/index.html#supported-jvms">Supported Java Virtual Machines section</a> in Hazelcast IMDG Reference Manual.
</td>
</tr>
</table>
</div>
<div class="sect3">
<h4 id="enh-311"><a class="anchor" href="#enh-311"></a><a class="link" href="#enh-311">Enhancements</a></h4>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Enterprise Enhancements:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Fine-Grained Control over WAN Replication Events</strong>: Introduced the new event type <code>LOADED</code> and the class <code>EntryLoadedListener</code> through which all the loads can be listened to. Also introduced the new configuration element <code>persist-wan-replicated-data</code> to specify whether to persist an incoming event over WAN replication or not. See the <a href="https://docs.hazelcast.org/docs/3.11/manual/html-single/index.html#configuring-consumer">Configuring Consumer section</a>.</p>
</li>
<li>
<p><strong>License Enforcements and Warnings</strong>: Introduced a license monitor daemon that warns about expirations and instructs about the next steps. These information are also available through REST/JMX APIs. See the <a href="https://docs.hazelcast.org/docs/3.11/manual/html-single/index.html#license-info">License Information section</a>.</p>
</li>
<li>
<p><strong>Delta WAN Synchronization</strong>: Introduced WAN anti-entropy mechanism utilizing Merkle Tree to synchronize only the affected subsets for Maps, improving network and heap utilization. See the <a href="https://docs.hazelcast.org/docs/3.11/manual/html-single/index.html#delta-wan-synchronization">Delta WAN Synchronization section</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Open Source Enhancements:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Ability to Set Custom TTL for Map and Cache Entries</strong>: Added a new method, <code>setExpiryPolicy(key, expirePolicy)</code>, to allow interacting with the TTL value of an entry without updating the value. Also, the IMap interface for the operation of putting a value into a map was not clear where the resulting value of the entry&#8217;s TTL is concerned. This is fixed by adding the method <code>setTTL()</code> on both the member and client sides. See the <a href="https://docs.hazelcast.org/docs/3.11/javadoc/com/hazelcast/core/IMap.html#setTtl-K-long-java.util.concurrent.TimeUnit-">here</a>.</p>
</li>
<li>
<p><strong>Ability to Set Custom Maximum Idle Timeouts for Map Entries</strong>: Extended the put operation so that now it has a <code>maxIdle</code> parameter that represents the idleness seconds for specific entries. See the <a href="https://docs.hazelcast.org/docs/3.11/manual/html-single/#evicting-specific-entries">Evicting Specific Entries section</a>.</p>
</li>
<li>
<p><strong>Configurable Backoff Strategy for Client Reconnections</strong>: Introduced a highly configurable exponential backoff mechanism for the client with which you can set the duration for waiting after connection failures, upper limit for the wait, etc. See the <a href="https://docs.hazelcast.org/docs/3.11/manual/html-single/index.html#configuring-client-connection-retry">Client Connection Retry Configuration section</a>.</p>
</li>
<li>
<p><strong>Map Index Statistics</strong>: Introduced statistics related to indexes. To achieve this, map statistics have been extended with per index information about indexes associated with a certain map. See the <a href="https://docs.hazelcast.org/docs/3.11/manual/html-single/index.html#map-index-statistics">Map Index Statistics section</a>.</p>
</li>
<li>
<p><strong>JCache Expired Entries Disposal</strong>: Improved JCache&#8217;s lazy eviction with a periodic cleanup that eventually removes all expired entries and frees up the occupied space.</p>
</li>
<li>
<p><strong>Improved Network I/O</strong>: Enhanced network I/O to allow TLS handshake in a block-free manner and to support offloadable tasks, improving the latency and security.</p>
</li>
<li>
<p>Now, Hazelcast supports discovering members in the GCP Compute Engine environment. See the <a href="https://github.com/hazelcast/hazelcast-gcp/blob/master/README.md">documentation</a> for more information.</p>
</li>
<li>
<p>Introduced the ability which allows adding the user libraries to the classpath. See the <a href="https://docs.hazelcast.org/docs/3.11/manual/html-single/#adding-user-library-to-classpath">Adding User Library to CLASSPATH section</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the other improvements performed to solve the enhancement issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Added support to capture <code>LOADED</code> events for <code>MapEventJournal</code>.  <a href="https://github.com/hazelcast/hazelcast/issues/13667">#13667</a></p>
</li>
<li>
<p>The method <code>ClientCloudConfig.setEnabled()</code> has been improved so that now it returns its own instance. <a href="https://github.com/hazelcast/hazelcast/issues/13640">#13640</a></p>
</li>
<li>
<p>The client was always constructed with an empty <code>userContext</code>. This has been improved by adding the method <code>setUserContext()</code> for the object <code>ClientConfig</code>. <a href="https://github.com/hazelcast/hazelcast/issues/13398">#13398</a></p>
</li>
<li>
<p>Added Java 9+ support (modularization), hence improved the user experience on Java versions 9+ which are based on Java Platform Module System. <a href="https://github.com/hazelcast/hazelcast/issues/13182">#13182</a></p>
</li>
<li>
<p><code>MigrationRequestOperation</code> has been improved with the new Offload abstraction. <a href="https://github.com/hazelcast/hazelcast/issues/11989">#11989</a></p>
</li>
<li>
<p>Improved the multicast discovery strategy for clients. <a href="https://github.com/hazelcast/hazelcast/issues/11357">#11357</a></p>
</li>
<li>
<p>Removed group <code>password</code> from Hazelcast configuration. The password is not checked anymore during member joins. <a href="https://github.com/hazelcast/hazelcast/issues/11667">#11667</a></p>
</li>
<li>
<p>Introduced a more proper way of heap-data conversion: the method <code>toHeapData</code>. Before, <code>ToHeapDataConverter</code> was being used. <a href="https://github.com/hazelcast/hazelcast/issues/10249">#10249</a></p>
</li>
<li>
<p>The method <code>EntryListener.entryAdded()</code> is not called after <code>IMap.evict()</code> is triggered followed by the method <code>IMap.get()</code>. To fix this, a new entry event type has been introduced: <code>LOADED</code>. <a href="https://github.com/hazelcast/hazelcast/issues/1542">#1542</a></p>
</li>
<li>
<p>Introduced <code>publisher-id</code> attribute for WAN publishers to simplify the configuration for a WAN replication scheme that has several publishers with the same group names. #2419</p>
</li>
<li>
<p>Added <code>pause</code>, <code>stop</code>, <code>resume</code> and <code>consistencyCheck</code> REST calls for <code>WanReplicationService</code>. #2418</p>
</li>
<li>
<p>The license extractor classes are included (shaded) in both <code>hazelcast-enterprise.jar</code> and <code>hazelcast-enterprise-client.jar</code>.
It has been only added into the core as the client has dependency on the core. #2170</p>
</li>
<li>
<p>When a WAN publisher is removed, currently you get `NullPointerException`s when you restart a member in the ACTIVE cluster since the WAN queues are migrated from other members. To overcome this, ability to stop WAN replication has been added; it prevents adding new events to the WAN queues and stop replication of existing events. #1861</p>
</li>
<li>
<p>Client could not determine the cluster version. Now, as the cluster version can change while the client is running, the client knows what it can expect in terms of behavior. #1802</p>
</li>
<li>
<p>The log level of dropped WAN events are now higher and that of striped executor are lower. #1747</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-311"><a class="anchor" href="#fixes-311"></a><a class="link" href="#fixes-311">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>PN counters were not replicating for the following scenario:</p>
<div class="ulist">
<ul>
<li>
<p>start a member</p>
</li>
<li>
<p>wait <code>replication-period-millis</code> to pass</p>
</li>
<li>
<p>start a second member</p>
</li>
<li>
<p>kill the first member</p>
<div class="paragraph">
<p>PN counter data from the first member was lost. This is fixed by removing PN counter statistics on migrations. <a href="https://github.com/hazelcast/hazelcast/issues/13793">#13793</a></p>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>Fixed the incorrect TCP connection probe registration in outgoing member connections. It was <code>[null&#8594;null]</code> instead of <code>[address&#8594;address]</code>. <a href="https://github.com/hazelcast/hazelcast/issues/13768">#13768</a></p>
</li>
<li>
<p>Clients were sometimes failing to reconnect to another owner member with the <code>ExecutionException</code>. This is fixed by making <code>ClientReauthOperation</code> to be retryable. <a href="https://github.com/hazelcast/hazelcast/issues/13758">#13758</a></p>
</li>
<li>
<p>Event Journal was throwing <code>StaleSequenceException</code> when TTL is greater than 0. This is fixed by skipping expired events in the journal during reading. <a href="https://github.com/hazelcast/hazelcast/issues/13746">#13746</a></p>
</li>
<li>
<p>Fixed the <code>HazelcastOverloadException</code> when trying to shutdown the cluster. It was also not performing a graceful shutdown. Now cluster state operations are marked as <code>UrgentSystemOperation</code> since otherwise, these operations might get rejected by backpressure. <a href="https://github.com/hazelcast/hazelcast/issues/13730">#13730</a></p>
</li>
<li>
<p>Fixed the noisy health check logging when starting Hazelcast. <a href="https://github.com/hazelcast/hazelcast/issues/13662">#13662</a></p>
</li>
<li>
<p>When an <code>unserializableResponse</code> is tried to be sent to the client as a response from the executor service tasks, the exception was logged on the server side and there was no response returned back to the client. This has been fixed by removing the logging and  sending <code>HazelcastSerializationException</code> to the client. <a href="https://github.com/hazelcast/hazelcast/issues/13639">#13639</a></p>
</li>
<li>
<p>Fixed the issue where IMap entries having a <code>max-idle-timeout</code> were not expiring when the member shuts down. <a href="https://github.com/hazelcast/hazelcast/issues/13630">#13630</a></p>
</li>
<li>
<p>Reliable Topic was not working after the correct partition migration to previous owner member (where it was created the first time and message listener was attached); there were no exceptions or warnings. This is fixed by removing stale caching of Ringbuffer in <code>AbstractRingBufferOperation</code>. <a href="https://github.com/hazelcast/hazelcast/issues/13602">#13602</a></p>
</li>
<li>
<p>Fixed the repeatedly thrown <code>IllegalAccessException</code> when the client statistics is enabled. <a href="https://github.com/hazelcast/hazelcast/issues/13565">#13565</a></p>
</li>
<li>
<p>Fixed the accidental leakage of <code>InternalSerializationService</code> through <code>DataSerializable</code> interface. <a href="https://github.com/hazelcast/hazelcast/issues/13505">#13505</a></p>
</li>
<li>
<p>Fixed the <code>InaccessibleObjectException</code> which is caused by the operating system level metrics silently dropping on Java 9 when a Hazelcast member is started. <a href="https://github.com/hazelcast/hazelcast/issues/13463">#13463</a></p>
</li>
<li>
<p><code>SerializationServiceBuilder</code> does not ignore the method <code>useNativeByteOrder()</code> anymore. <a href="https://github.com/hazelcast/hazelcast/issues/13410">#13410</a></p>
</li>
<li>
<p>Attribute extractor now falls back to the user code deployment: it was not using the user code deployment to search for the extractor implementation. <a href="https://github.com/hazelcast/hazelcast/issues/13400">#13400</a></p>
</li>
<li>
<p>Fixed the connected clients being slow when the server port is connected without receiving anything. <a href="https://github.com/hazelcast/hazelcast/issues/13298">#13298</a></p>
</li>
<li>
<p>When using the <code>hazelcast-all</code> artifact for 3.10.1, the version of <code>hazelcast-hibernate</code> included within is the one built using Hibernate 3. This is fixed by updating the default Hibernate version to 5. <a href="https://github.com/hazelcast/hazelcast/issues/13250">#13250</a></p>
</li>
<li>
<p>Built-in predicate implementations now implement the equals/hashCode. <a href="https://github.com/hazelcast/hazelcast/issues/13245">#13245</a></p>
</li>
<li>
<p>When adding a dynamic data structure configuration, Hazelcast fails fast when the same structure is already configured statically (even when both configurations are equal. This is fixed so that the submitted dynamic configuration is silently ignored when it is equal to an existing static configuration, or Hazelcast fails with a <code>ConfigurationException</code> when a conflicting static configuration already exists. <a href="https://github.com/hazelcast/hazelcast/issues/13158">#13158</a></p>
</li>
<li>
<p>There was a warning when Hazelcast is used on Java 10 JRE: <code>An illegal reflective access operation has occurred</code>. This is fixed by making Hazelcast fully compatible with Java 10. <a href="https://github.com/hazelcast/hazelcast/issues/13151">#13151</a></p>
</li>
<li>
<p>Fixed the <code>EOFException</code> which is thrown when using <code>PagingPredicate</code> with Kryo in Hazelcast 3.8.7. <a href="https://github.com/hazelcast/hazelcast/issues/13147">#13147</a></p>
</li>
<li>
<p>Fixed the exception <code>Cannot override cache&#8217;s CacheManager</code> which is thrown when a cache is recreated after the restart of remote Hazelcast. <a href="https://github.com/hazelcast/hazelcast/issues/12975">#12975</a></p>
</li>
<li>
<p>When a member is killed, events are lost and the method <code>QueryCache.tryRecover()</code> is triggered in a loop even if data is not lost. This is fixed by resetting the query cache sequence numbers by the local promotions. <a href="https://github.com/hazelcast/hazelcast/issues/12928">#12928</a></p>
</li>
<li>
<p>Fixed the memory leak on <code>NonBlockingSocketWriter</code> when the client disconnects: the member instance was holding onto a write buffer when a client disconnects abruptly, while there is pending data to be sent. <a href="https://github.com/hazelcast/hazelcast/issues/12353">#12353</a></p>
</li>
<li>
<p>The comparison of values during the operation <code>CacheRecordStore.merge()</code> was incorrect. This is fixed by not firing an update event when merging values are equal. <a href="https://github.com/hazelcast/hazelcast/issues/12175">#12175</a></p>
</li>
<li>
<p>Hazelcast lacks a mechanism for the client/server recovery within Spring cache context. This is fixed by recreating the local cache configurations when the client is connecting to a restarted member. <a href="https://github.com/hazelcast/hazelcast/issues/12128">#12128</a></p>
</li>
<li>
<p><code>Ringbuffer.readManyAsync()</code>: Client unwraps the <code>ExecutionException</code> before throwing it to the user cod; the member never does it. It also does not happen on other async proxies. This is fixed so that the client does not unwrap this exception. <a href="https://github.com/hazelcast/hazelcast/issues/12108">#12108</a></p>
</li>
<li>
<p>Removed group <code>password</code> based credentials check in for the client connections. <a href="https://github.com/hazelcast/hazelcast/issues/11867">#11867</a></p>
</li>
<li>
<p>When IPv6 is enabled for Hazelcast, the started member was still setting an IPv4 as a local address by default. This is fixed by improving the IPv6 bind address selection mechanism. <a href="https://github.com/hazelcast/hazelcast/issues/11820">#11820</a></p>
</li>
<li>
<p>Fixed an issue for hostname and local network interface matching in the <code>DefaultAddressPicker</code>. The member was picking the hostname which resolves to an IP not present locally. <a href="https://github.com/hazelcast/hazelcast/issues/8211">#8211</a></p>
</li>
<li>
<p>The method <code>MapLoader.load()</code> does not create an entry event, as it is essentially a get operation. But, the method <code>MapLoader.loadAll()</code> uses <code>IMap.putTransient()</code> and so it generates <code>EntryAdded</code> events. This was inconsistent and the latter was problematic for WAN replicated clusters. It is fixed  by avoiding the invocation of MapLoader on <code>containsKey()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7771">#7771</a></p>
</li>
<li>
<p>The attribute <code>group-name</code> attribute of WAN publisher was used both as an identifier for a specific publisher in a WAN replication scheme and as a group name
for authentication. This did not allow replicating to two distinct clusters with the same group name as the latter one was overwritten. To fix this, the ability to configure the group name for authentication in the publisher group properties has been added. The <code>group-name</code> attribute still must be unique but now it can be used only for identification of a single publisher in a WAN replication scheme.#2393</p>
</li>
<li>
<p>Added forced eviction and cleanup for per record High-Density Memory Store expiry policies, to fix the leak when a TTL is set for High-Density Memory Store. #2249</p>
</li>
<li>
<p>Java 9&#8217;s modularization makes private OpenJDK API inaccessible by default. So, a new Java argument has been added to make Hot Restart working on Java 9. #875</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="bc-311"><a class="anchor" href="#bc-311"></a><a class="link" href="#bc-311">Behavioral Changes</a></h4>
<div class="ulist">
<ul>
<li>
<p>When the TLS/SSL is configured and no <code>trustStore</code> property is provided, no default trusted certificates are used; neither the keystore, nor the Java provided list of trusted CA certificates. Therefore, you ALWAYS have to configure the <code>trustStore</code> property. See the <a href="https://docs.hazelcast.org//docs/latest-dev/manual/html-single/#tls-ssl-for-hazelcast-members">TLS/SSL section</a>.</p>
</li>
<li>
<p>WAN Replication:</p>
<div class="ulist">
<ul>
<li>
<p>Loaded entries were listened using <code>EntryAddedListener</code>. Now, a new event type for the loaded entries is introduced (<code>LOADED</code>) and they are listened using the new <code>EntryLoadedListener</code>.</p>
</li>
<li>
<p>Loaded entries are not replicated to the target cluster by default anymore.</p>
</li>
<li>
<p>Replicated entries were being persisted at the target cluster (in its map store). Now, they are not being persisted by default anymore. You can use the newly introduced configuration element <code>persist-wan-replicated-data</code> and set it to "true" (the default is "false") to make these entries to be persisted.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Map entries timestamps: Entry timestamps (i.e., <code>LastAccessedTime</code>, <code>LastUpdatedTime</code>, <code>CreationTime</code>, etc.) are now using <code>SECONDS</code> resolution, rather than milliseconds.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="rd-311"><a class="anchor" href="#rd-311"></a><a class="link" href="#rd-311">Removed/Deprecated Features</a></h4>
<div class="ulist">
<ul>
<li>
<p>The data structure <code>IdGenerator</code> is deprecated. Use <a href="https://docs.hazelcast.org/docs/3.11/manual/html-single/index.html#flakeidgenerator">Flake ID Generator</a>.</p>
</li>
<li>
<p>Following system properties are removed:</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.master.confirmation.interval.seconds</code></p>
</li>
<li>
<p><code>hazelcast.max.no.master.confirmation.seconds</code></p>
</li>
<li>
<p><code>hazelcast.mc.max.visible.instance.count</code></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-311"><a class="anchor" href="#contributors-311"></a><a class="link" href="#contributors-311">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/Mak-Sym">Mak-Sym</a></p>
</li>
<li>
<p><a href="https://github.com/hgvanpariya">Harikrushna V</a></p>
</li>
<li>
<p><a href="https://github.com/carstenartur">Carsten Hammer</a></p>
</li>
<li>
<p><a href="https://github.com/webashutosh">Ashutosh Agrawal</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-10-7"><a class="anchor" href="#3-10-7"></a><a class="link" href="#3-10-7">3.10.7</a></h3>
<div class="sect3">
<h4 id="fixes-3107"><a class="anchor" href="#fixes-3107"></a><a class="link" href="#fixes-3107">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed an issue where the Near Cache invalidation was not
working properly when used with Transactional Map.
<a href="https://github.com/hazelcast/hazelcast/pull/16617">#16617</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-10-6"><a class="anchor" href="#3-10-6"></a><a class="link" href="#3-10-6">3.10.6</a></h3>
<div class="sect3">
<h4 id="enh-3106"><a class="anchor" href="#enh-3106"></a><a class="link" href="#enh-3106">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added the ability to log <code>IOException</code>s thrown by the ICMP ping task as ping failures. <a href="https://github.com/hazelcast/hazelcast/pull/13826">#13826</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3106"><a class="anchor" href="#fixes-3106"></a><a class="link" href="#fixes-3106">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Entry processors equipped with predicates try to utilize global indexes to
narrow down the key set to operate on. <a href="https://github.com/hazelcast/hazelcast/pull/13892">#13892</a> fixes the following
issues for this utilization:</p>
<div class="ulist">
<ul>
<li>
<p>There were no migration stamp validations performed to prevent entry processors from operating on stale index data.</p>
</li>
<li>
<p><code>WrongTargetException</code> was not thrown for out-migrated partitions, as a result the caller (<code>InvokeOnPartitions</code>) was not retrying entry processors on such partitions.</p>
</li>
<li>
<p>Partition scope provided to <code>PartitionIteratingOperation</code> was not respected. As a result, operations produced by factories providing
their own partition sets were running on more partitions than expected.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Fixed the incorrect dependencies in <code>hazelcast-all.pom</code>. <a href="https://github.com/hazelcast/hazelcast/pull/13885">#13885</a></p>
</li>
<li>
<p>Hazelcast lacks a mechanism for the client/server recovery within Spring cache context. This is fixed by recreating the local cache configurations when the client is connecting to a restarted member. <a href="https://github.com/hazelcast/hazelcast/pull/13811">#13811</a></p>
</li>
<li>
<p>Clients were sometimes failing to reconnect to another owner member with the <code>ExecutionException</code>. This is fixed by making <code>ClientReauthOperation</code> to be retryable. <a href="https://github.com/hazelcast/hazelcast/issues/13790">#13790</a></p>
</li>
<li>
<p>When an <code>unserializableResponse</code> is tried to be sent to the client as a response from the executor service tasks, the exception was logged on the server side and there was no response returned back to the client. This has been fixed by removing the logging and  sending <code>HazelcastSerializationException</code> to the client. <a href="https://github.com/hazelcast/hazelcast/pull/13777">#13777</a></p>
</li>
<li>
<p>Queryable entries returned by High-Density Memory Store indexes were unaware of the map value extractors, so it was not possible to extract
values provided by the extractors from the returned entries. This is fixed by forwarding the map value extractor to these indexes. <a href="https://github.com/hazelcast/hazelcast/pull/13775">#13775</a></p>
</li>
<li>
<p>Hazelcast 3.10.5 client was not being auto-discovered on Kubernetes. This is fixed by using a specific TLS version, namely v1.2, for <code>SSLContext</code>. <a href="https://github.com/hazelcast/hazelcast/issues/13760">#13760</a></p>
</li>
<li>
<p>There is a scheduled task to clean the client resources. When an endpoint is removed, this task keeps a reference to it and this was causing unnecessary leak. This is fixed by passing only the necessary field objects of the client endpoint to this task to avoid keeping reference to the client endpoint itself. <a href="https://github.com/hazelcast/hazelcast/pull/13755">#13755</a></p>
</li>
<li>
<p>When merging MultiMap entries, <code>MERGE</code> events were being fired. Now they are not since MultiMap does not have a merging listener. <a href="https://github.com/hazelcast/hazelcast/pull/13714">#13714</a></p>
</li>
<li>
<p>Fixed the heartbeat resume mechanism where the heartbeat of a connection was becoming unhealthy when the last read time is lower than the heartbeat timeout. <a href="https://github.com/hazelcast/hazelcast/pull/13684">#13684</a></p>
</li>
<li>
<p>Added the <code>storage.clear</code> operation before <code>storage.destroy</code> to release the High-Density (HD) Memory Store resources, since using only <code>storage.destroy</code> releases the internal resources of backing data structure, not the HD resources. <a href="https://github.com/hazelcast/hazelcast/pull/13659">#13659</a></p>
</li>
<li>
<p>Moved the alive check in <code>ClientConnectionManager</code> to a more centralized method and fixed the exception type. <a href="https://github.com/hazelcast/hazelcast/pull/13525">#13525</a></p>
</li>
<li>
<p>Fixed an issue where a joining member was not validating the initial cluster version. <a href="https://github.com/hazelcast/hazelcast/pull/13390">#13390</a></p>
</li>
<li>
<p>When a Near Cache is used for an IMap and a TransactionalMap is used on a client then the <code>get(key)</code> operation fails reporting a wrong key type. This is fixed by skipping the Near Cache lookup at the member side, for the client&#8217;s transaction request.  <a href="https://github.com/hazelcast/hazelcast/issues/13371">#13371</a></p>
</li>
<li>
<p><code>HDTxnSetOperation</code> was not taking the changes made by <code>MapInterceptor</code> into account while sending the backups. Now it replicates the result of <code>interceptPut</code>. <a href="https://github.com/hazelcast/hazelcast/issues/12705">#12705</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-10-5"><a class="anchor" href="#3-10-5"></a><a class="link" href="#3-10-5">3.10.5</a></h3>
<div class="sect3">
<h4 id="enh-3105"><a class="anchor" href="#enh-3105"></a><a class="link" href="#enh-3105">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Introduced OperationThreadSamples as a new diagnostics plugin. It samples the operation threads and checks the running operations/tasks. See the <a href="http://docs.hazelcast.org/docs/3.10.5/manual/html-single/#operationthreadsamples">OperationThreadSamples section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3105"><a class="anchor" href="#fixes-3105"></a><a class="link" href="#fixes-3105">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added a workaround for the <code>Constructor</code> cache, which performs caching under incorrect keys, such that you have now the option not to use that cache. <a href="https://github.com/hazelcast/hazelcast/pull/13679">#13679</a></p>
</li>
<li>
<p>A client connection could not detect whether it has been idle and hence the member was closing the connection. This is fixed now so that the member does not close the connections when the clients only listen. <a href="https://github.com/hazelcast/hazelcast/issues/13576">#13576</a></p>
</li>
<li>
<p>Fixed the <code>MultiMapValue</code> serialization error occurred when merging MultiMap entries. It was caused by firing MERGE events which expect the entry values to be serialized. Since MultiMap does not have a MERGE listener, there was no need to fire these events; this has been fixed and now no MERGE events are fired during the merging process. <a href="https://github.com/hazelcast/hazelcast/issues/13559">#13559</a></p>
</li>
<li>
<p>When a client is waiting for a lock to be released for a period more than invocation timeout seconds and the member dies, the client was getting an operation timeout exception. This behavior is fixed so that the operation is now retried on the new member of that lock. <a href="https://github.com/hazelcast/hazelcast/issues/13551">#13551</a></p>
</li>
<li>
<p>By default Hazelcast map evicts just a single entry in each eviction cycle. This was insufficient when inserting entries with increasingly larger payload size - as evicting a single entry cannot make sufficient room for a new (larger) entry. This is fixed by introducing a configurable batch size for map eviction. <a href="https://github.com/hazelcast/hazelcast/issues/13529">#13529</a></p>
</li>
<li>
<p>Fixed the incorrect unit declaration in <code>EntryView</code> class' Javadoc: the method <code>getTtl()</code> returns a value in milliseconds, it was declared that it is in seconds.  <a href="https://github.com/hazelcast/hazelcast/pull/13523">#13523</a></p>
</li>
<li>
<p>When a client is disconnected, the member was cleaning up resources but not the pending invocations. This is fixed so that the member now cleans up the pending invocations.  <a href="https://github.com/hazelcast/hazelcast/issues/13388">#13388</a></p>
</li>
<li>
<p>In active-active WAN setups, it may happen that "remove replication" events get routed back to the source cluster where the actual "remove replication" event is originated from. If in the meantime, a record with the same key has been added in the source cluster, the record is deleted again and this is seen by the source cluster as a data loss. This is fixed by removing operations routed back to the source cluster. #2340</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-10-4"><a class="anchor" href="#3-10-4"></a><a class="link" href="#3-10-4">3.10.4</a></h3>
<div class="sect3">
<h4 id="enh-3104"><a class="anchor" href="#enh-3104"></a><a class="link" href="#enh-3104">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>License information was not sent to Hazelcast Management Center. With this enhancement, Hazelcast Management Center shows information about the cluster license. <a href="https://github.com/hazelcast/hazelcast/pull/13451">#13451</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3104"><a class="anchor" href="#fixes-3104"></a><a class="link" href="#fixes-3104">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Fixed inconsistencies in <code>mapEventJournal</code> calls coming from <code>DefaultRecordStore</code>. <a href="https://github.com/hazelcast/hazelcast/pull/13470">#13470</a></p>
</li>
<li>
<p>Fixed index data loss after rolling upgrade: when a rolling update of an application is performed; first instance is turned off, updated and after it is done, the second instance takes place. After such a rolling update (without the downtime) some of the data was lost. It turned out that after the Split-Brain merge process, the index gets corrupted. <a href="https://github.com/hazelcast/hazelcast/issues/13456">#13456</a></p>
</li>
<li>
<p>Changed repartitioning mechanism so that it is triggered only when needed during the change of cluster state. <a href="https://github.com/hazelcast/hazelcast/pull/13446">#13446</a></p>
</li>
<li>
<p>Made attribute extractor to use User Code Deployment for searching extractor implementation. <a href="https://github.com/hazelcast/hazelcast/issues/13400">#13400</a></p>
</li>
<li>
<p>Fixed the Hot Restart failure caused by the migration rebalancing when cluster becomes ACTIVE. #2253</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-10-3"><a class="anchor" href="#3-10-3"></a><a class="link" href="#3-10-3">3.10.3</a></h3>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Starting with Hazelcast 3.10.3, Hazelcast IMDG Enterprise license keys are required only for members. You do not need to set a license key for your Java clients for which you want to use Enterprise features.
</td>
</tr>
</table>
</div>
<div class="sect3">
<h4 id="enh-3103"><a class="anchor" href="#enh-3103"></a><a class="link" href="#enh-3103">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Descriptive null checks should be added when accessing a data structure on the client. <a href="https://github.com/hazelcast/hazelcast/pull/13256">#13256</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3103"><a class="anchor" href="#fixes-3103"></a><a class="link" href="#fixes-3103">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>There is a memory leak in <code>SecondsBasedEntryTaskScheduler</code> of Replicated Map: assuming a TTL is set when an entry is put into the Replicated Map; when the map is cleared, the heap still contains a lot of instances of <code>SecondsBasedEntryTaskScheduler</code>. <a href="https://github.com/hazelcast/hazelcast/issues/13409">#13409</a></p>
</li>
<li>
<p>In <code>AbstractInternalQueryCache</code>, the private method <code>getQueryCacheConfig()</code> is called in multiple places. <a href="https://github.com/hazelcast/hazelcast/issues/13402">#13402</a></p>
</li>
<li>
<p>Permission type for PN Counter is missing. <a href="https://github.com/hazelcast/hazelcast/issues/13399">#13399</a></p>
</li>
<li>
<p>Setting <code>ExpirationTimeMergePolicy</code> throws exception during configuration validation. <a href="https://github.com/hazelcast/hazelcast/issues/13392">#13392</a></p>
</li>
<li>
<p>Close task problems in <code>NioOutboundPipeline</code>: There happens a temporary stall since a task is executed on an I/O thread from that same I/O thread and then the I/O thread waits for it. Because the thread will not execute its own task (yet) there is a 3 seconds of stall in the I/O pipeline. This is a problem since it blocks all the traffic for that I/O thread. Also the close task is scheduled as a packet. If the pipeline already is scheduled, scheduling the close task will not get picked up as part of an optimization. <a href="https://github.com/hazelcast/hazelcast/pull/13363">#13363</a></p>
</li>
<li>
<p>When a cache is closed, it is no longer managed by the <code>CacheManager</code>;
its <code>CacheManager</code> should be reset to null and the method <code>getCacheManager()</code> should
return null as per specification. <a href="https://github.com/hazelcast/hazelcast/pull/13236">#13236</a></p>
</li>
<li>
<p>Hazelcast client produces <code>OutOfMemoryError</code> when there is no Hazelcast member available at startup. <a href="https://github.com/hazelcast/hazelcast/issues/13186">#13186</a></p>
</li>
<li>
<p>When security is enabled and <code>config-permission</code> is added in the permission configuration, Hazelcast member startup fails. #2228</p>
</li>
<li>
<p>Not used High-Density Memory Store after the method <code>disposeDeferredBlocks()</code> is run should be released. #2182</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="rd-3103"><a class="anchor" href="#rd-3103"></a><a class="link" href="#rd-3103">Removed/Deprecated Features</a></h4>
<div class="ulist">
<ul>
<li>
<p>The method 'ClientConfig.setLicenseKey()' is deprecated.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-10-2"><a class="anchor" href="#3-10-2"></a><a class="link" href="#3-10-2">3.10.2</a></h3>
<div class="sect3">
<h4 id="enh-3102"><a class="anchor" href="#enh-3102"></a><a class="link" href="#enh-3102">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Added utility methods to drain a queue. <a href="https://github.com/hazelcast/hazelcast/pull/13108">#13108</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3102"><a class="anchor" href="#fixes-3102"></a><a class="link" href="#fixes-3102">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>If the inner predicate of the paging predicate returns an empty result set, the paging predicate returns null as the indexed query result: this is interpreted as an absence of the indexed result by the query engine and the execution falls back to the full scan. <a href="https://github.com/hazelcast/hazelcast/issues/13159">#13159</a></p>
</li>
<li>
<p>While doing a rolling upgrade with a mixed 3.9 - 3.10 cluster running on 3.9 cluster version, cache configurations must be converted to <code>CacheConfig</code> before dispatched to 3.9 members. Otherwise, a <code>PreJoinCacheConfig</code> could be stored on a 3.9 member&#8217;s cache configurations registry (<code>AbstractCacheService.configs</code>) and from there it may leak to a client getting the cache configuration causing deserialization errors on the client side. <a href="https://github.com/hazelcast/hazelcast/issues/13137">#13137</a></p>
</li>
<li>
<p><code>NullPointerException</code> is thrown when accessing endpoints on the message task using <code>AbstractMessageTask.getClientVersion</code>. <a href="https://github.com/hazelcast/hazelcast/issues/13119">#13119</a></p>
</li>
<li>
<p><code>NullPointerException</code> is thrown during the authentication, if the connection is closed right before <code>bind</code>. <a href="https://github.com/hazelcast/hazelcast/issues/13118">#13118</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-10-1"><a class="anchor" href="#3-10-1"></a><a class="link" href="#3-10-1">3.10.1</a></h3>
<div class="sect3">
<h4 id="enhancements-3101"><a class="anchor" href="#enhancements-3101"></a><a class="link" href="#enhancements-3101">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Protection for untrusted deserialization has been added using blacklisting and whitelisting the class/package names. See the  <a href="http://docs.hazelcast.org/docs/3.10.1/manual/html-single/#untrusted-deserialization-protection">Untrusted Deserialization Protection section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-3101"><a class="anchor" href="#fixes-3101"></a><a class="link" href="#fixes-3101">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>The method <code>readManyAsync()</code> throws different exceptions when there is no quorum: The client fails with <code>QuorumException</code>, and member fails with <code>ExecutionException</code>. <a href="https://github.com/hazelcast/hazelcast/pull/13065">#13065</a></p>
</li>
<li>
<p>It is expected to get <code>HazelcastSerializationException</code> from the method <code>future.get()</code>, however, it hangs when the response is not serializable. <a href="https://github.com/hazelcast/hazelcast/issues/12956">#12956</a></p>
</li>
<li>
<p><code>CachePutBackupOperation</code>: When an entry is evicted on the primary member, it is also evicted on the backup members. This causes the method <code>LocalCacheStats.getCacheEvictions()</code> to return incorrect numbers. <a href="https://github.com/hazelcast/hazelcast/issues/12931">#12931</a></p>
</li>
<li>
<p>The connections to the members after they are removed from the cluster should be closed. <a href="https://github.com/hazelcast/hazelcast/pull/12926">#12926</a></p>
</li>
<li>
<p>More descriptive exception must be thrown when the WAN endpoint cannot be found by <code>groupName</code>. #2085</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-10"><a class="anchor" href="#3-10"></a><a class="link" href="#3-10">3.10</a></h3>
<div class="sect3">
<h4 id="features-310"><a class="anchor" href="#features-310"></a><a class="link" href="#features-310">New Features</a></h4>
<div class="ulist">
<ul>
<li>
<p><strong>PN Counter</strong>: Introduced CRDT PN Counter (Positive-Negative Counter), which allows incrementing and decrementing a counter value and propagating the results to all cluster members. See the <a href="http://docs.hazelcast.org/docs/3.10/manual/html-single/index.html#pn-counter">PN Counter section</a>.</p>
</li>
<li>
<p><strong>Flake ID Generator</strong>: Introduced to overcome the duplicate ID generation in case of a network split, by the deprecated <code>IdGenerator</code> data structure. See the <a href="http://docs.hazelcast.org/docs/3.10/manual/html-single/index.html#flakeidgenerator">FlakeIdGenerator section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enh-310"><a class="anchor" href="#enh-310"></a><a class="link" href="#enh-310">Enhancements</a></h4>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Enterprise Enhancements:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Split-Brain Healing for Hazelcast Data Structures with High-Density (HD) Memory Store</strong>: Added implementations to allow the merging of HD Memory Store backed data structures.</p>
</li>
<li>
<p><strong>Multiple Users/Roles in a Single Security Mapping</strong>: Added support for allowing multiple principals, i.e., users or roles/groups, to be attributed to a security realm. See the <a href="http://docs.hazelcast.org/docs/3.10/manual/html-single/index.html#authorization">Authorization section</a> for more information.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Open Source Enhancements:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Extended Split-Brain Protection</strong>: Split-Brain protection has been implemented for all the Hazelcast data structures (it was only for IMap, ICache, IQueue and ILock before 3.10). See the <a href="http://docs.hazelcast.org/docs/3.10/manual/html-single/index.html#distributed-data-structures">Distributed Data Structures chapter</a>.</p>
</li>
<li>
<p><strong>Shorter Split-Brain Detection Window</strong>: In addition to the current quorum function, which uses the list of members to determine whether a minimum number of members is available in the cluster, a new quorum implementation has been introduced to shorten the time between the occurrence of a network partitioning and its detection: it takes advantage of information about the cluster health (heartbeats and ICMP pings). See the <a href="http://docs.hazelcast.org/docs/3.10/manual/html-single/index.html#split-brain-protection">Split-Brain Protection section</a> for the new quorum functions.</p>
</li>
<li>
<p><strong>Extended Merge Policies</strong>: Merge policies applied after a Split-Brain syndrome has been implemented for more Hazelcast data structures (it was for IMap, ICache and Replicated Map before 3.10). See the <a href="http://docs.hazelcast.org/docs/3.10/manual/html-single/index.html#split-brain-recovery">Split-Brain Recovery section</a> for more information.</p>
</li>
<li>
<p><strong>Health Check Script</strong>: Introduced a command line tool to check the health of your Hazelcast cluster. See the <a href="http://docs.hazelcast.org/docs/3.10/manual/html-single/index.html#health-check-script">Health Check Script section</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the other improvements performed to solve the enhancement issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Split-brain merge policy design issues: the SPI design requires downcasting in the merge policy classes. It is also unclear which merge policy is compatible with which data structure. <a href="https://github.com/hazelcast/hazelcast/issues/12721">#12721</a></p>
</li>
<li>
<p>Added ID count to flake ID generators statistics. <a href="https://github.com/hazelcast/hazelcast/pull/12612">#12612</a></p>
</li>
<li>
<p><code>MemberMap.SINGLETON_MEMBER_LIST_VERSION</code> value should be configurable. <a href="https://github.com/hazelcast/hazelcast/issues/12528">#12528</a></p>
</li>
<li>
<p>It is still required to provide a group and password while configuring with Spring: the attribute <code>required</code> should be removed from the tag <code>group</code> both for name and password elements. <a href="https://github.com/hazelcast/hazelcast/issues/12462">#12462</a></p>
</li>
<li>
<p>Group passwords should not be serialized in <code>ConfigCheck</code>. <a href="https://github.com/hazelcast/hazelcast/issues/12303">#12303</a></p>
</li>
<li>
<p>When custom merge policy is not appropriate, there should be a fail-fast. <a href="https://github.com/hazelcast/hazelcast/issues/12284">#12284</a></p>
</li>
<li>
<p>Code comments for <code>Hazelcast.shutdownAll()</code> should be improved: it talks about shutting down all running Hazelcast instances in the JVM. However, native clients, which are also Hazelcast instances, are not shut down when this method is called. <a href="https://github.com/hazelcast/hazelcast/issues/12217">#12217</a></p>
</li>
<li>
<p>An initialization exception should be thrown when Symmetric Encryption is configured on Hazelcast Open Source edition. <a href="https://github.com/hazelcast/hazelcast/issues/12203">#12203</a></p>
</li>
<li>
<p><code>IAtomicLong</code> and <code>IAtomicReference</code> miss <code>MergePolicyConfig</code> support in <code>ClientDynamicClusterConfig</code>. <a href="https://github.com/hazelcast/hazelcast/issues/12126">#12126</a></p>
</li>
<li>
<p><code>ConfigXmlGenerator</code> masking should be optional: it masks certain fields like passwords. This is unnecessary since the user creating the <code>hazelcast.xml</code> should already know the values or they should be input by the user installing the application. By masking the fields automatically, the user is forced to manually edit the <code>hazelcast.xml</code> creating a manual step. <a href="https://github.com/hazelcast/hazelcast/issues/12012">#12012</a></p>
</li>
<li>
<p>The <code>CharConverter</code> conversion behavior should be improved: When given an empty string, <code>IllegalArgumentException</code> should be thrown instead of the obscure <code>StringIndexOutOfBoundsException</code>. Also, when given a <code>Number</code>, a <code>Character</code> should be returned instead of an <code>Integer</code>. <a href="https://github.com/hazelcast/hazelcast/issues/11981">#11981</a></p>
</li>
<li>
<p>Currently when reading from event journal, the reader throws <code>StaleSequenceException</code> when the consumer is behind the current head of the journal. The exception contains the new head of the journal, however by the time the client gets to read again this new head can be stale again. It can mean that the reader is never able to catch up once it falls behind. <a href="https://github.com/hazelcast/hazelcast/issues/11895">#11895</a></p>
</li>
<li>
<p>The Javadoc for IMap must be enhanced to clarify the value vs. reference semantics. <a href="https://github.com/hazelcast/hazelcast/issues/11816">#11816</a></p>
</li>
<li>
<p>The class <code>com.hazelcast.query.Predicates</code> contains public factory methods for query predicates. Most of the methods are missing Javadoc. <a href="https://github.com/hazelcast/hazelcast/issues/11734">#11734</a></p>
</li>
<li>
<p>The value of Main-Class in <code>hazelcast-all.jar</code> should be fixed. The class <code>StartServer</code> should be used instead of <code>ConsoleApp</code>. Currently, when the JAR is executed, the ConsoleApp demo application is started. <a href="https://github.com/hazelcast/hazelcast/issues/11655">#11655</a></p>
</li>
<li>
<p>The error message for failed client connections should not talk about "address in the config" as multicast discovery may have been used. <a href="https://github.com/hazelcast/hazelcast/issues/11652">#11652</a></p>
</li>
<li>
<p>Doing a rolling upgrade without a Hazelcast Enterprise key should produce a better error message. <a href="https://github.com/hazelcast/hazelcast/issues/11602">#11602</a></p>
</li>
<li>
<p>IMap contract should describe how it interacts with Map{Loader/Store}. <a href="https://github.com/hazelcast/hazelcast/issues/10969">#10969</a></p>
</li>
<li>
<p>New HTTP connections should be logged with DEBUG or a lower level. <a href="https://github.com/hazelcast/hazelcast/issues/10924">#10924</a></p>
</li>
<li>
<p>Out-of-the-box Hazelcast on Docker experience should be improved due to the "This node is not requested endpoint" errors. <a href="https://github.com/hazelcast/hazelcast/issues/9219">#9219</a></p>
<div class="ulist">
<ul>
<li>
<p>A hardening property to deny access when there are missing permissions should be introduced. #1959</p>
</li>
<li>
<p>The error message for WAN authorization connection should be improved. #1925</p>
</li>
<li>
<p>The entries dropped on each WAN replication endpoint should be monitored. #1853</p>
</li>
<li>
<p>WAN synchronization does not work if no endpoint is preset; this is incompatible with endpoint discovery. If a publisher exists, it should be considered useable even if it has no endpoints. #1534</p>
</li>
<li>
<p>Assertions should be added to the methods which are supposed to be accessed by partition threads only. #1262</p>
</li>
<li>
<p>All configured High-Density Memory Stores should be allocated eagerly. #953</p>
</li>
<li>
<p>A High-Density Memory Store backed Near Cache should be sizable based on entry count. #950</p>
</li>
<li>
<p>IMap: A fail-fast is needed when the eviction percentage option is used in combination with High-Density Memory Store. #665</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-310"><a class="anchor" href="#fixes-310"></a><a class="link" href="#fixes-310">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Split-brain merge policy configuration validation is not properly working: The merge policy checks in <code>ConfigValidator</code> are based on false assumptions regarding <code>SomeConfig.isStatisticsEnabled()</code> and valid split-brain merge types. <a href="https://github.com/hazelcast/hazelcast/issues/12722">#12722</a></p>
</li>
<li>
<p><code>XmlConfigBuilder</code> wrongly uses Locale dependent number format for <code>nativeMemory.metadataSpacePercentage</code>. <a href="https://github.com/hazelcast/hazelcast/issues/12656">#12656</a></p>
</li>
<li>
<p><code>NullPointerException</code> is thrown when the method <code>QueryCache#getAll</code> is called. <a href="https://github.com/hazelcast/hazelcast/issues/12656">#12656</a></p>
</li>
<li>
<p>Query cache is not consistent with its IMap: After the construction of a continuous query cache, all changes on the underlying IMap are immediately reflected to this cache as a stream of events. Therefore, this cache will be an always up-to-date view of the IMap. This is not always true. <a href="https://github.com/hazelcast/hazelcast/issues/12599">#12599</a></p>
</li>
<li>
<p>When minority of members have network delays, there occurs transactional exceptions on the client. <a href="https://github.com/hazelcast/hazelcast/issues/12252">#12252</a></p>
</li>
<li>
<p>Delayed resolutions for other types in <code>CacheConfig</code> should be implemented: In addition to key and value types, the following need to be deferred:
<code>cacheLoaderFactory</code>, <code>cacheWriterFactory</code>, <code>expiryPolicyFactory</code> and <code>listenerConfiguration</code>s. <a href="https://github.com/hazelcast/hazelcast/issues/11905">#11905</a></p>
<div class="ulist">
<ul>
<li>
<p>Rolling upgrade compatibility for some High-Density operations should be checked. #1996</p>
</li>
<li>
<p>The WAN plugin for Hazelcast diagnostics is not documented in 3.9.3&#8217;s Reference Manual. #1988</p>
</li>
<li>
<p>A client exception is received when the initial WAN setup fails. #1936</p>
</li>
<li>
<p>AWS WAN Discovery does not perform retries when the initial attempt fails. #1935</p>
</li>
<li>
<p>A <code>NativeOutOfMemoryError</code> occurred after sequent Split-Brain merge events. #1902</p>
</li>
<li>
<p>The WAN replication property <code>discovery.useEndpointPrivateAddress</code> is not documented. #1834</p>
</li>
<li>
<p>The WAN Replication queue size statistics is not correct when <code>snapshot.enabled</code> is set to  <code>true</code>. #1798</p>
</li>
<li>
<p>Behavior of the WAN replication when serialization compression is enabled on both clusters must be investigated. #1750</p>
</li>
<li>
<p>After a single entry processing, it is possible that the backup and primary WAN events are different. #1441</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
<div class="sect4">
<h5 id="3-10-beta-2"><a class="anchor" href="#3-10-beta-2"></a><a class="link" href="#3-10-beta-2">3.10-BETA-2</a></h5>
<div class="ulist">
<ul>
<li>
<p><code>ReplicatedMapConfig</code> must not be mutated while constructing read-only variant. <a href="https://github.com/hazelcast/hazelcast/pull/12620">#12620</a></p>
</li>
<li>
<p>Added ID count to flake ID generators statistics. <a href="https://github.com/hazelcast/hazelcast/pull/12612">#12612</a></p>
</li>
<li>
<p>Exception in Node constructor doesn&#8217;t shutdown services properly. <a href="https://github.com/hazelcast/hazelcast/issues/12587">#12587</a></p>
</li>
<li>
<p><code>CacheNotExistsException</code> must be thrown when cache configuration does not exist. <a href="https://github.com/hazelcast/hazelcast/pull/12593">#12593</a></p>
</li>
<li>
<p>Index configurations must be respected in query caches. <a href="https://github.com/hazelcast/hazelcast/pull/12577">#12577</a></p>
</li>
<li>
<p>Issues with replicated map and lite members: (i) replicated map cannot be used after lite member promotion, (ii) replicated map runs into <code>NPE</code> after a split-brain healing. <a href="https://github.com/hazelcast/hazelcast/issues/12537">#12537</a></p>
</li>
<li>
<p>It is still required to provide a group and password while configuring with Spring: the attribute <code>required</code> should be removed from the tag <code>group</code> both for name and password elements. <a href="https://github.com/hazelcast/hazelcast/issues/12462">#12462</a></p>
</li>
<li>
<p>Eviction causes absence of an entry in IMap and MapStore at the same time: just after the method <code>evictAll</code> is invoked, the map is cleared and the eviction is done in a different thread. This causes the objects not being available both IMap and MapStore. <a href="https://github.com/hazelcast/hazelcast/issues/12455">#12455</a></p>
</li>
<li>
<p>JCache 1.1 TCK: the test <code>org.jsr107.tck.event.CacheListenerTest</code> passes, but there are assertion errors in the log. <a href="https://github.com/hazelcast/hazelcast/issues/12390">#12390</a></p>
</li>
<li>
<p>An index aware predicate does not invoke its <code>apply</code> method:  only the index operation is performed and the apply filter is silently ignored. <a href="https://github.com/hazelcast/hazelcast/issues/12352">#12352</a></p>
</li>
<li>
<p>Query with predicates on IMap does not use index when running locally. <a href="https://github.com/hazelcast/hazelcast/issues/12351">#12351</a></p>
</li>
<li>
<p><code>EventJournal</code> loses data if two members terminate: Scenario is starting a cluster with four members and a client, producing data for the event journal, terminating one member and terminating another member after some time. When checking the total count of events, it is seen that some data is lost. <a href="https://github.com/hazelcast/hazelcast/issues/12300">#12300</a></p>
</li>
<li>
<p>When minority of members are removed from the network, read/write failures occur on the cluster. <a href="https://github.com/hazelcast/hazelcast/issues/12240">#12240</a></p>
</li>
<li>
<p>A merge policy cannot be defined for replicated maps using declarative configuration (XML). <a href="https://github.com/hazelcast/hazelcast/issues/12223">#12223</a></p>
</li>
<li>
<p>All dynamic configurations are sent out in a prejoin operation regardless of the cluster version. <a href="https://github.com/hazelcast/hazelcast/issues/12151">#12151</a></p>
</li>
<li>
<p>When using <code>PagingPredicate</code>, setting a too big page ends up with <code>IllegalArgumentException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/12079">#12079</a></p>
</li>
<li>
<p>There is a performance regression on predicate queries for 3.9.1 and 3.8.7 versions. <a href="https://github.com/hazelcast/hazelcast/issues/12018">#12018</a></p>
</li>
<li>
<p>Each new configuration method introduced in 3.10 must be overridden in the client-side dynamic configuration support class. <a href="https://github.com/hazelcast/hazelcast/issues/12010">#12010</a></p>
</li>
<li>
<p>For some of the scheduled jobs, the method <code>getLastRunDuration()</code> returns negative values for quick executions. <a href="https://github.com/hazelcast/hazelcast/issues/11929">#11929</a></p>
</li>
<li>
<p>Exception in <code>ResponseThreadRunnable</code> causes the REST API to fail: When there is an exception while processing a single command, the entire thread is killed. It causes an unrecoverable condition when the system does not process any incoming REST commands, and hence the memory leak (incoming commands are accumulated in blockingQueue). <a href="https://github.com/hazelcast/hazelcast/issues/11722">#11722</a></p>
</li>
<li>
<p>Accessing a query cache with a reasonable amount of data can result in an <code>NPE</code>. <a href="https://github.com/hazelcast/hazelcast/issues/11675">#11675</a></p>
</li>
<li>
<p><code>IMap.add</code> and <code>IMap.remove</code>: EntryListener randomly hangs. <a href="https://github.com/hazelcast/hazelcast/issues/11470">#11470</a></p>
</li>
<li>
<p>Members not rejoining cluster after an elongated network disconnectivity: Assuming that, initially there is a cluster of 8 members and when the connectivity for a member is broken it gets eliminated from the cluster. The original cluster contains now 7 members and this is working as expected. However, when the connectivity is restored, the disconnected member is not able to join the original cluster and remains isolated. <a href="https://github.com/hazelcast/hazelcast/issues/11267">#11267</a></p>
</li>
<li>
<p>There is a minor decrease in the performance of indexed searches for 3.7.6 and higher versions. <a href="https://github.com/hazelcast/hazelcast/issues/11231">#11231</a></p>
</li>
<li>
<p>The code comments for time-to-live expiration is not clear. <a href="https://github.com/hazelcast/hazelcast/issues/11787">#11787</a></p>
</li>
<li>
<p>When setting the same key value twice, <code>NPE</code> is thrown on the member. <a href="https://github.com/hazelcast/hazelcast/issues/10556">#10556</a></p>
</li>
<li>
<p>JCache fails to initialize when the type of a key or value is not available on a remote member. <a href="https://github.com/hazelcast/hazelcast/issues/8972">#8972</a></p>
</li>
<li>
<p>In Hazelcast 3.7, <code>PollOperation</code> invocation is failing to complete due to <code>operation-heartbeat-timeout</code>. <a href="https://github.com/hazelcast/hazelcast/issues/8831">#8831</a></p>
</li>
<li>
<p>Custom <code>LoggerFactory</code> is instantiating two times. <a href="https://github.com/hazelcast/hazelcast/issues/5641">#5641</a></p>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="3-10-beta-1"><a class="anchor" href="#3-10-beta-1"></a><a class="link" href="#3-10-beta-1">3.10-BETA-1</a></h5>
<div class="ulist">
<ul>
<li>
<p>Health Monitor reports load statistics incorrectly. <a href="https://github.com/hazelcast/hazelcast/issues/12190">#12190</a></p>
</li>
<li>
<p>Time-to-live for IMap is not working as documented: outdated warnings should be removed from the code comments. <a href="https://github.com/hazelcast/hazelcast/issues/12144">#12144</a></p>
</li>
<li>
<p>There are multiple top-level types missing in <code>HazelcastNamespaceHandler</code>, for example <code>serializer</code>. <a href="https://github.com/hazelcast/hazelcast/issues/12121">#12121</a></p>
</li>
<li>
<p>The full stack trace of <code>QuorumException</code> should be logged into the log file instead of the console. <a href="https://github.com/hazelcast/hazelcast/issues/12188">#12188</a></p>
</li>
<li>
<p><code>ConfigXmlGeneratorTest</code>: There are missing tests for many attributes of multiple data structures. <a href="https://github.com/hazelcast/hazelcast/issues/12119">#12119</a></p>
</li>
<li>
<p>Beta annotation from DurableExecutor classes should be removed. <a href="https://github.com/hazelcast/hazelcast/issues/12083">#12083</a></p>
</li>
<li>
<p>Hazelcast should not allow to add dynamic configurations for concurrent data structures during rolling upgrades: new configurations have been introduced for <code>IAtomicLong</code> and <code>IAtomicReference</code> for the split-brain healing. There may come more for the split-brain protection; these should not be added dynamically when the cluster is on version 3.9, since old members will fail to process them. <a href="https://github.com/hazelcast/hazelcast/issues/12000">#12000</a></p>
</li>
<li>
<p>Using <code>MemberAddressProvider</code> with custom discovery strategy SPI does not seem to work. <a href="https://github.com/hazelcast/hazelcast/issues/11997">#11997</a></p>
</li>
<li>
<p>Hit count gets incremented by two (instead of one) when entry is updated using <code>EntryProcessor</code>. <a href="https://github.com/hazelcast/hazelcast/issues/11993">#11993</a></p>
</li>
<li>
<p>The objects <code>BufferObjectDataInput</code> and <code>BufferObjectDataOutput</code> are pooled. While being used for serialization, their version may be set, however when cleared (so they can be returned to the pool), their version is not reset to <code>UNKNOWN</code>. <a href="https://github.com/hazelcast/hazelcast/issues/11900">#11900</a></p>
</li>
<li>
<p>The default network interface selection chooses a wrong interface in some cases. <a href="https://github.com/hazelcast/hazelcast/issues/11795">#11795</a></p>
</li>
<li>
<p>The memory limit setting for a queue store is ignored and the entries are getting inserted into both the store and the queue, even If the limit is reached. <a href="https://github.com/hazelcast/hazelcast/issues/11682">#11682</a></p>
</li>
<li>
<p>When trying to integrate Spring and Hazelcast with MapStore implementation, the JdbcTemplate cannot be autowired in the MapStore class. <a href="https://github.com/hazelcast/hazelcast/issues/11656">#11656</a></p>
</li>
<li>
<p>PER_NODE capacity calculation algorithm is not precise. <a href="https://github.com/hazelcast/hazelcast/issues/11646">#11646</a></p>
</li>
<li>
<p>Currently ILock operations are not logged at any level. It would be very helpful diagnostic log output can be enabled, with the log lines containing the name of the ILock, the operation (create, lock, unlock, destroy) and the usual timestamp, and thread ID information. <a href="https://github.com/hazelcast/hazelcast/issues/11622">#11622</a></p>
</li>
<li>
<p>The <code>Echo</code> task used to execute the operations demo in <code>ConsoleApp</code> fails to deserialize because of missing no-arg constructor. <a href="https://github.com/hazelcast/hazelcast/issues/11612">#11612</a></p>
</li>
<li>
<p>Wrong Hazelcast configuration XSD schema is used when minor/major or minor has more than 1 digit (e.g., 3.1x). <a href="https://github.com/hazelcast/hazelcast/issues/11586">#11586</a></p>
</li>
<li>
<p>The XSD (<code>hazelcast-spring.xsd</code>) should work independently of the <code>hazelcast-spring.jar</code>. <a href="https://github.com/hazelcast/hazelcast/issues/11577">#11577</a></p>
</li>
<li>
<p>IMap with MapStore has duplicate keys. <a href="https://github.com/hazelcast/hazelcast/issues/11462">#11462</a></p>
</li>
<li>
<p>Backups' view of the Ringbuffer differs from that of the primary&#8217;s in case of an exception is thrown by the store underlying the Ringbuffer. <a href="https://github.com/hazelcast/hazelcast/issues/11209">#11209</a></p>
</li>
<li>
<p>It does not seem to be possible to configure a list of cipher suites nor a list of SSL/TLS protocols. Client authorization is implemented, but it has to be passed in a populated <code>Properties</code> object. <a href="https://github.com/hazelcast/hazelcast/issues/10750">#10750</a></p>
</li>
<li>
<p>Transaction could not obtain a lock for the key while calling the method <code>TransactionalMap.getForUpdate()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/9374">#9374</a></p>
</li>
<li>
<p>JCache fails to initialize when the type of a key or value is not available on a remote member. <a href="https://github.com/hazelcast/hazelcast/issues/8972">#8972</a></p>
</li>
<li>
<p>There is no way to set the HazelcastClient name and/or InstanceName programmatically. So, the method <code>HazelcastClient.getHazelcastClientByName(String name)</code> does not work. <a href="https://github.com/hazelcast/hazelcast/issues/7289">#7289</a></p>
</li>
<li>
<p>IMap JMX statistics are evicted together with the map entry: When system starts and caches are populated,  and get the hits, the statistics presents the relevant values for <code>localHits</code> and <code>localGetOperationCount</code> attributes. But after 1 hour of idle and some entries are evicted, these attributes become less and less, till 0. Looks like these statistics are stored together with the entry itself and they are evicted together with the entry. <a href="https://github.com/hazelcast/hazelcast/issues/4321">#4321</a></p>
</li>
</ul>
</div>
</div>
<div class="sect4">
<h5 id="cf-310"><a class="anchor" href="#cf-310"></a><a class="link" href="#cf-310">Coverity Fixes</a></h5>
<div class="ulist">
<ul>
<li>
<p>The methods <code>readObject(&#8230;&#8203;)</code> and <code>writeObject(&#8230;&#8203;)</code> should call the method from the superclass instead of handling the <code>attributeName</code> field themselves in the classes <code>LikePredicate</code> and <code>RegexPredicate</code>. <a href="https://github.com/hazelcast/hazelcast/issues/11768">#11768</a></p>
</li>
<li>
<p>The field <code>retryCounter</code> is not atomically updated in the method <code>RestartingMemberIterator.retry(Set)</code>. <a href="https://github.com/hazelcast/hazelcast/issues/11750">#11750</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect3">
<h4 id="bc-310"><a class="anchor" href="#bc-310"></a><a class="link" href="#bc-310">Behavioral Changes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Up to 3.9.x, the method <code>Config.findCacheConfig</code> looks up a <code>CacheSimpleConfig</code>: if none is found, then <code>null</code> is returned. This behavior has been not like all the other <code>findXXConfig</code> methods in the following ways:</p>
</li>
<li>
<p><code>findXXConfig</code> never returns <code>null</code>, it falls back to defaults, creates the missing data structure configuration and stores it in <code>Config</code>.</p>
</li>
<li>
<p><code>findXXConfig</code> returns a read-only copy of the actual configuration, while <code>findCacheConfig</code> returns the found configuration object itself.</p>
<div class="paragraph">
<p>With 3.10, the method <code>Config.findCacheConfig</code> is aligned to behave like the other <code>findXXConfig</code> methods; it now returns a read-only copy and does fallback to defaults. If you who want the old behavior for this method in 3.10.x, you should use the method <code>Config.findCacheConfigOrNull</code>.</p>
</div>
</li>
<li>
<p>Starting with 3.10, any unknown property of Discovery SPI in the Hazelcast configuration will <strong>result in an exception blocking the Hazelcast member from starting</strong>. This approach restricts the configuration (both XML and Object-based) and prevents typos.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="kp-310"><a class="anchor" href="#kp-310"></a><a class="link" href="#kp-310">Known Problems</a></h4>
<div class="ulist">
<ul>
<li>
<p><code>PartitionPredicate</code>s only works if you upgrade all of your members to 3.9.3. It may not work</p>
<div class="ulist">
<ul>
<li>
<p>when running a mixed cluster having members from 3.9.0, 3.9.1, 3.9.2 and 3.9.3, and</p>
</li>
<li>
<p>when rolling up from 3.8.x to 3.9.x.</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="rd-310"><a class="anchor" href="#rd-310"></a><a class="link" href="#rd-310">Removed/Deprecated Features</a></h4>
<div class="ulist">
<ul>
<li>
<p>The data structure <code>IdGenerator</code> is deprecated. It could produce duplicate IDs in case of a network split, even with split-brain protection being enabled. Use <a href="http://docs.hazelcast.org/docs/3.10/manual/html-single/index.html#flakeidgenerator">Flake ID Generator</a> for an alternative implementation which does not suffer from the mentioned issue.</p>
</li>
<li>
<p>Following system properties are deprecated:</p>
<div class="ulist">
<ul>
<li>
<p><code>hazelcast.master.confirmation.interval.seconds</code></p>
</li>
<li>
<p><code>hazelcast.max.no.master.confirmation.seconds</code></p>
</li>
<li>
<p><code>hazelcast.mc.max.visible.instance.count</code></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-310"><a class="anchor" href="#contributors-310"></a><a class="link" href="#contributors-310">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/elFarto">Stephen</a></p>
</li>
<li>
<p><a href="https://github.com/vmarquez">Vincent Marquez</a></p>
</li>
<li>
<p><a href="https://github.com/LukasVyhlidka">Lukáš Vyhlídka</a></p>
</li>
<li>
<p><a href="https://github.com/Mak-Sym">Mak-Sym</a></p>
</li>
<li>
<p><a href="https://github.com/mumukiller">Gerasimov Gennady</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-9-4"><a class="anchor" href="#3-9-4"></a><a class="link" href="#3-9-4">3.9.4</a></h3>
<div class="sect3">
<h4 id="enhancements-394"><a class="anchor" href="#enhancements-394"></a><a class="link" href="#enhancements-394">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Introduced variable replacers. See its documentation
<a href="http://docs.hazelcast.org/docs/3.9.4/manual/html-single/index.html#variable-replacers">here</a>.
<a href="https://github.com/hazelcast/hazelcast/pull/12809">#12809</a></p>
</li>
<li>
<p>Reporting of the <code>ExecuteScriptRequest</code> and <code>ThreadDumpRequest</code>: These
two types of requests are sent from the Hazelcast Management Center to
members. When they finish, there is no distinction between the logs (it
is not obvious whether the responses end up with error or success).
<a href="https://github.com/hazelcast/hazelcast/pull/12437">#12437</a></p>
</li>
<li>
<p>Version of the client should be added to the Statistics API.
<a href="https://github.com/hazelcast/hazelcast/pull/12394">#12394</a></p>
</li>
<li>
<p>Outdated warnings regarding to time-to-live should be removed from
IMap’s Javadoc.
<a href="https://github.com/hazelcast/hazelcast/pull/12357">#12357</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-394"><a class="anchor" href="#fixes-394"></a><a class="link" href="#fixes-394">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Reliable Topic cannot continue to operate if owner and backup of the backed ringbuffer go down at the same time. <a href="https://github.com/hazelcast/hazelcast/issues/12919">#12919</a></p>
</li>
<li>
<p><code>NullPointerException</code> is thrown when the method <code>QueryCache.getAll()</code> is called. <a href="https://github.com/hazelcast/hazelcast/issues/12918">#12918</a></p>
</li>
<li>
<p>Query cache listener which is configured declaratively is not
registered properly.
<a href="https://github.com/hazelcast/hazelcast/issues/12825">#12825</a></p>
</li>
<li>
<p>Query cache is created after each <code>getQueryCache()</code> call.
<a href="https://github.com/hazelcast/hazelcast/issues/12814">#12814</a></p>
</li>
<li>
<p>Portable serialization is mistakenly reporting incompatible class
definitions when nested portables are used in certain scenarios.
<a href="https://github.com/hazelcast/hazelcast/issues/12733">#12733</a></p>
</li>
<li>
<p>ILock cannot the release lock properly based on the leasing time, if
the lock name contains <code>@</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/12614">#12614</a></p>
</li>
<li>
<p>When map has a query cache, <code>oldValue</code> must be published after the
method <code>IMap.set()</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/12576">#12576</a></p>
</li>
<li>
<p>The method <code>IMap.addEntryListener</code> throws <code>NullPointerException</code> when
a <code>null</code> is provided instead of a listener object. The same check should
be done in all similar <code>addListener</code> methods in all proxies.
<a href="https://github.com/hazelcast/hazelcast/pull/12552">#12552</a></p>
</li>
<li>
<p>When an entry event listener is registered with
<code>oldValueRequired==false</code> then both <code>CacheEntryEvent#value</code> and
<code>CacheEntryEvent#oldValue</code> must be null or equal to the value that was
removed/expired.
<a href="https://github.com/hazelcast/hazelcast/pull/12507">#12507</a></p>
</li>
<li>
<p>When using AWS discovery on a Hazelcast client, if the initial
connection fails due to a 503 error being returned from AWS, then the
connection is not retried as per the configured retry count.
<a href="https://github.com/hazelcast/hazelcast/issues/12457">#12457</a></p>
</li>
<li>
<p>IMap MBean is not created when a client reconnects to the cluster
(when it uses cached map proxy).
<a href="https://github.com/hazelcast/hazelcast/issues/12417">#12417</a></p>
</li>
<li>
<p><code>ClientJoinOperation</code> should be moved to <code>PreJoin</code>: the client
ownership information is carried via the method <code>OnJoinClientOperation</code>.
It is invoked after the joins, which creates a potential race. In rare
cases, it is possible that a recently joined member is not aware of the
client, if a client is also joined recently.
<a href="https://github.com/hazelcast/hazelcast/pull/12375">#12375</a></p>
</li>
<li>
<p>Authentication timeout logic must be revised to prevent the slow
shutdowns: the clients need to wait all the scheduled tasks to finish
before shutdown.
<a href="https://github.com/hazelcast/hazelcast/pull/12362">#12362</a></p>
</li>
<li>
<p>The method <code>HazelcastCache#getNativeCache</code> should define a narrowed
type: Currently, it does not narrow the return type to the actual native
cache that is used internally. This requires unnecessary cast in the
calling code.
<a href="https://github.com/hazelcast/hazelcast/pull/12342">#12342</a></p>
</li>
<li>
<p>Shutting down members via console on Hazelcast Management Center
should be disabled: it does not ask for credentials when stopping a
member. <a href="https://github.com/hazelcast/hazelcast/pull/12328">#12328</a></p>
</li>
<li>
<p>The text connection send buffer is not correctly sized: it is based on
the server setting, not on the client.
<a href="https://github.com/hazelcast/hazelcast/pull/12326">#12326</a></p>
</li>
<li>
<p>Adding dynamic map configuration from <code>HazelcastClient</code> omits the
<code>time-to-live-seconds</code> value.
<a href="https://github.com/hazelcast/hazelcast/pull/12292">#12292</a></p>
</li>
<li>
<p>The methods <code>QueryCache#destroy</code> and then <code>create</code> does not give a
fresh query cache.
<a href="https://github.com/hazelcast/hazelcast/issues/12246">#12246</a></p>
</li>
<li>
<p>When using a <code>HazelcastClient</code> instance to add dynamic map
configuration, it generally works for most of other parameters but the
parameter <code>timeToLiveSeconds</code> is always 0.
<a href="https://github.com/hazelcast/hazelcast/issues/12273">#12273</a></p>
</li>
<li>
<p>A dynamically added configuration for Replicate Map structure causes a
<code>ConfigurationException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/12222">#12222</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-394"><a class="anchor" href="#contributors-394"></a><a class="link" href="#contributors-394">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/mumukiller">Gerasimov Gennady</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-9-3"><a class="anchor" href="#3-9-3"></a><a class="link" href="#3-9-3">3.9.3</a></h3>
<div class="sect3">
<h4 id="enhancements-393"><a class="anchor" href="#enhancements-393"></a><a class="link" href="#enhancements-393">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p><strong>Ping Failure Detector for Hazelcast Java Client:</strong> Ping Failure Detector provides a quicker and more deterministic detection of hardware and other lower level events. It has been available for Hazelcast members; now, it can also be used for Hazelcast Java clients. The related PR is <a href="https://github.com/hazelcast/hazelcast/pull/12049">#12049</a>. See the <a href="http://docs.hazelcast.org/docs/3.9.3/manual/html-single/index.html#client-ping-failure-detector">Client Ping Failure Detector section</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the other improvements performed to solve the enhancement issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Enhancements in the WAN Diagnostics: Introduced latency tracking for WAN endpoints and
counters for sent and received WAN events. Note that WAN Replication is an Hazelcast IMDG Enterprise Edition feature. <a href="https://github.com/hazelcast/hazelcast/pull/12165">#12615</a></p>
</li>
<li>
<p>Introduced a system property to allow overriding the configured serialization byte order for better testing. <a href="https://github.com/hazelcast/hazelcast/issues/12145">#12145</a></p>
</li>
<li>
<p>Performed updates for JCache 1.1 compatibility. <a href="https://github.com/hazelcast/hazelcast/pull/12014">#12014</a></p>
</li>
<li>
<p>Allow ciphersuites and protocol configuration in the <code>SSLEngine</code> provided by the JRE. This support is already present in the OpenSSL engine. #1884</p>
</li>
<li>
<p>Enhancements in the WAN Diagnostics: Introduced latency tracking for WAN endpoints and
counters for sent and received WAN events. #1878</p>
</li>
<li>
<p>Introduced a system property to allow overriding the configured
serialization byte order for better testing. #1868</p>
</li>
<li>
<p>Performed updates for JCache 1.1 compatibility. #1857</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-393"><a class="anchor" href="#fixes-393"></a><a class="link" href="#fixes-393">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p><code>CacheMergeOperation</code> does not publish WAN events. <a href="https://github.com/hazelcast/hazelcast/issues/12186">#12186</a></p>
</li>
<li>
<p>Java serialization compression issue: Since GZipInputStream read more bytes than it needs, the fields coming after a compressed data is not able to be read. <a href="https://github.com/hazelcast/hazelcast/issues/12104">#12104</a></p>
</li>
<li>
<p>Setting the property <code>hazelcast.mc.max.visible.instance.count</code> to <code>Integer.MAX</code> or a huge value causes OOME. <a href="https://github.com/hazelcast/hazelcast/issues/12095">#12095</a></p>
</li>
<li>
<p>The Javadoc for <code>SHUFFLE_MEMBER_LIST</code> in the class <code>ClientProperty</code> is not correct. The shuffling is done when the related property (<code>hazelcast.client.shuffle.member.list</code>) is set to <code>true</code>. Also the description in the Hazelcast Reference Manual should be corrected accordingly. <a href="https://github.com/hazelcast/hazelcast/issues/12082">#12082</a></p>
</li>
<li>
<p>Endianness not taken into account consistently for serializer type IDs. <a href="https://github.com/hazelcast/hazelcast/issues/12077">#12077</a></p>
</li>
<li>
<p>Hazelcast client throws "AuthenticationException: Invalid credentials after owner member left". Clients should detect when a member is gone ungracefully. <a href="https://github.com/hazelcast/hazelcast/issues/12038">#12038</a></p>
</li>
<li>
<p>Query results should be converted to OBJECT in-memory format while creating the query-result-set, if the transaction is not originated from the client. <a href="https://github.com/hazelcast/hazelcast/issues/12050">#12050</a></p>
</li>
<li>
<p>IMap&#8217;s <code>aggregate</code>, <code>projection</code>, <code>localKeySet</code> and <code>executeOnEntries</code> methods throws exception when <code>PartitionPredicate</code> is being used. <a href="https://github.com/hazelcast/hazelcast/issues/11962">#11962</a></p>
</li>
<li>
<p>There is a race condition in the client&#8217;s Near Cache: "File is already being used by this Hazelcast instance". This was caused by the a problem with the synchronization between Near Cache creation and the <code>destroy</code> inside the Near Cache manager. <a href="https://github.com/hazelcast/hazelcast/issues/11648">#11648</a></p>
</li>
<li>
<p>The map screen of Management Center does not show throughput info for <code>TransactionalMap</code>s. <a href="https://github.com/hazelcast/hazelcast/issues/11640">#11640</a></p>
</li>
<li>
<p>Support for multiple Principals in JAAS Subject: With this support, permission checking in <code>DefaultPermissionPolicy</code> is fixed to allow multiple <code>ClusterPrincipal</code> instances assigned to a JAAS Subject. The resulting permission set is the union of permissions mapped to all the <code>ClusterPrincipal</code> names in JAAS Subject. #1879</p>
</li>
<li>
<p>WAN replication event should be generated inside the method <code>afterRun</code> of the merge operation. #1875</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="bc-393"><a class="anchor" href="#bc-393"></a><a class="link" href="#bc-393">Behavioral Changes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Default value of the system property <code>hazelcast.mc.max.visible.instance.count</code> changed from 100 to Integer.MAX_VALUE. So you may see more than usual data in your Management Center, if you have more than 100 data structures in your Hazelcast cluster.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-9-2"><a class="anchor" href="#3-9-2"></a><a class="link" href="#3-9-2">3.9.2</a></h3>
<div class="sect3">
<h4 id="enhancements-392"><a class="anchor" href="#enhancements-392"></a><a class="link" href="#enhancements-392">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Expiration operations can be stopped/canceled during the <code>SHUTTING_DOWN</code> state. Otherwise it causes graceful shutdowns which take longer, especially on clusters with a large amount of data, e.g., High-Density Memory Store backed maps. It is not necessary to block the shutdown for these operations since it will eventually be handled on the new owner of the entries. <a href="https://github.com/hazelcast/hazelcast/issues/11919">#11919</a></p>
</li>
<li>
<p>Changed Hazelcast base images from Debian to Alpine Linux. Hence, the size of the image is reduced. <a href="https://github.com/hazelcast/hazelcast-docker/pull/48">#48</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-392"><a class="anchor" href="#fixes-392"></a><a class="link" href="#fixes-392">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p><code>PartitionPredicate</code> on <code>MapAggregation</code> throws exception when it is called from the client. <a href="https://github.com/hazelcast/hazelcast/issues/11923">#11923</a></p>
</li>
<li>
<p>Some client <code>TransactionalMap</code> operations deserializes on the server side, while <code>IMap.values()</code> does not do so. This causes serialization exceptions on a client-member setup when members do not have the serialization information, e.g., in case where portables are used. <a href="https://github.com/hazelcast/hazelcast/issues/11885">#11885</a></p>
</li>
<li>
<p>Replicated map&#8217;s Javadoc contains only member behaviors/requirements which the client cannot meet due to its technical difference. <a href="https://github.com/hazelcast/hazelcast/issues/11707">#11707</a></p>
</li>
<li>
<p>Ringbuffer access throws HazelcastInstanceNotActiveException when cluster state is PASSIVE. <a href="https://github.com/hazelcast/hazelcast/issues/11664">#11664</a></p>
</li>
<li>
<p>Due to a problem in the TLS mechanism, IO threads could become stuck and fail to process further frames. Once this happens, traffic between members stops and the cluster ceases to operate correctly. Symptoms included heartbeat timeouts and split-brains. This fix resolves this issue. #1825</p>
</li>
</ul>
</div>
<div class="sect4">
<h5 id="cf-392"><a class="anchor" href="#cf-392"></a><a class="link" href="#cf-392">Coverity Fixes</a></h5>
<div class="ulist">
<ul>
<li>
<p>The method <code>addressTranslator.translate(target)</code> of <code>com.hazelcast.client.connection.nio.ClientConnectionManagerImpl.InitConnectionTask.run()</code> may return null. The returned value is used as an argument for the method <code>createSocketConnection(Address)</code> which uses the value without a null-check. <a href="https://github.com/hazelcast/hazelcast/issues/11771">#11771</a></p>
</li>
</ul>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-9-1"><a class="anchor" href="#3-9-1"></a><a class="link" href="#3-9-1">3.9.1</a></h3>
<div class="sect3">
<h4 id="features-391"><a class="anchor" href="#features-391"></a><a class="link" href="#features-391">New Features</a></h4>
<div class="ulist">
<ul>
<li>
<p><strong>Ping Failure Detector:</strong> Ping Failure Detector provides a quicker and
more deterministic detection of hardware and other lower level events.
See the
<a href="http://docs.hazelcast.org/docs/3.9.1/manual/html-single/index.html#ping-failure-detector">Ping
Failure Detector section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-391"><a class="anchor" href="#fixes-391"></a><a class="link" href="#fixes-391">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p><code>MulticastJoiner</code> may cause <code>OutOfMemoryException</code> due to the
self-amplification in <code>SplitBrainJoinMessage</code> sending.
<a href="https://github.com/hazelcast/hazelcast/issues/11836">#11836</a></p>
</li>
<li>
<p>Dynamic configuration added on the lite member is not found after a
Split-Brain healing.
<a href="https://github.com/hazelcast/hazelcast/issues/11815">#11815</a></p>
</li>
<li>
<p>Client transactions does not respect to unisocket behavior.
<a href="https://github.com/hazelcast/hazelcast/issues/11802">#11802</a></p>
</li>
<li>
<p>Incorrect null log message in <code>DelegatingAddressPicker</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/11783">#11783</a></p>
</li>
<li>
<p>A high number of <code>EntryEventType[]</code> is created in a client application
which receives many entry events. In a specific application,
<code>EntryEventType[]</code> dominates the application’s overall memory
allocation.
<a href="https://github.com/hazelcast/hazelcast/issues/11777">#11777</a></p>
</li>
<li>
<p>Hazelcast client fails to connect to the cluster if the first cluster
member is down.
<a href="https://github.com/hazelcast/hazelcast/issues/11735">#11735</a></p>
</li>
<li>
<p>After promoting a member
(<code>HazelcastInstance.getCluster().promoteLocalLiteMember()</code>) the instance
of the member retrieved by <code>getMembers()</code> is not updated.
<a href="https://github.com/hazelcast/hazelcast/issues/11720">#11720</a></p>
</li>
<li>
<p>Enqueued item gets lost when the client stops and reconnects sooner
than <code>hazelcast.client.endpoint.remove.delay.seconds</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/11700">#11700</a></p>
</li>
<li>
<p>While trying to setup Hazelcast on AWS, the order of member
initialization is wrong.
<a href="https://github.com/hazelcast/hazelcast/issues/11681">#11681</a></p>
</li>
<li>
<p>Query cache on an IMap that is subsequently destroyed and recreated
does not work.
<a href="https://github.com/hazelcast/hazelcast/issues/11666">#11666</a></p>
</li>
<li>
<p>The method <code>DefaultQueryCache::getAll</code> does not check for null values.
<a href="https://github.com/hazelcast/hazelcast/issues/11665">#11665</a></p>
</li>
<li>
<p>When the method <code>HazelcastInstance.shutdown()</code> is called, the
following error is thrown: <code>Could not retrieve ringbuffer service to
destroy event journal</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/11662">#11662</a></p>
</li>
<li>
<p>Defining management center in the configuration causes partition
migrations even though there is no data.
<a href="https://github.com/hazelcast/hazelcast/issues/11598">#11598</a></p>
</li>
<li>
<p>Weird Split-Brain like issue with Hazelcast 3.8.4.
<a href="https://github.com/hazelcast/hazelcast/issues/11533">#11533</a></p>
</li>
<li>
<p>Consider logging new HTTP connections with DEBUG or lower level.
<a href="https://github.com/hazelcast/hazelcast/issues/11196">#11196</a></p>
</li>
<li>
<p><code>HashSet</code> and <code>HashMap</code> are initialized with a too small size.
<a href="https://github.com/hazelcast/hazelcast/issues/9445">#9445</a></p>
</li>
<li>
<p>Introduce configuration option for WAN to connect to a private address when using Discovery SPI. #1176</p>
</li>
<li>
<p>Member throws <code>OutOfMemoryException</code> in the smaller cluster side on Split-Brain recovery cycle. #1763</p>
</li>
</ul>
</div>
<div class="sect4">
<h5 id="cf-391"><a class="anchor" href="#cf-391"></a><a class="link" href="#cf-391">Coverity Fixes</a></h5>
<div class="ulist">
<ul>
<li>
<p>Dereference null return value in the
method`ClientConnectionManagerImpl.encodeAuthenticationRequest()`.
<a href="https://github.com/hazelcast/hazelcast/issues/11767">#11767</a></p>
</li>
<li>
<p>Using invalid iterator in the method
<code>SmartClientListenerService.deregisterListenerInternal(String)</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/11760">#11760</a></p>
</li>
<li>
<p>Resource leak in client’s <code>ProxyManager</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/11751">#11751</a></p>
</li>
</ul>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-9"><a class="anchor" href="#3-9"></a><a class="link" href="#3-9">3.9</a></h3>
<div class="sect3">
<h4 id="features-39"><a class="anchor" href="#features-39"></a><a class="link" href="#features-39">New Features</a></h4>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Enterprise Features:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>WAN Replication Using Discovery API</strong>: With this new feature, you can
run multiple clusters within environments, that have Hazelcast’s
Discovery SPI implemented, without manually configuring IP addresses and
use Hazelcast’s WAN replication to keep them in sync. See the
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#defining-wan-replication-using-discovery-spi">Defining
WAN Replication Using Discovery SPI section</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Open Source Features:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Dynamic Creation of Distributed Objects Configuration</strong>: You can
perform on the fly configuration of your distributed objects. See
the
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#dynamically-adding-configuration-on-a-cluster">Dynamically
Adding Configuration on a Cluster section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enhancements-39"><a class="anchor" href="#enhancements-39"></a><a class="link" href="#enhancements-39">Enhancements</a></h4>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Enterprise Enhancements:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>OpenSSL Integration</strong>: OpenSSL is integrated into Hazelcast. Please
see the
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#integrating-openssl">Integrating
OpenSSL section</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Open Source Enhancements:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Client Support for User Code Deployment</strong>: You can now perform dynamic
class loading from Hazelcast clients too. See the
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#client-user-code-deployment-beta">Client
User Code Deployment section</a>.</p>
</li>
<li>
<p><strong>Event Journal</strong>: This new distributed data structure stores the
history of mutation actions on data structures such as map or cache.
See the
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#event-journal">Event
Journal section</a>.</p>
</li>
<li>
<p><strong>Fine-Grained Anti-Entropy Mechanism</strong>: Allows to detect
inconsistencies for each data structure in a single partition and
replicate only the specific fragment of it instead of the whole
partition. See the
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#consistency-and-replication-model">Consistency
and Replication Model chapter</a>.</p>
</li>
<li>
<p><strong>Gigantic Cache Migration Enhancements</strong>: It enables manual control on
the partition migrations. Partitions can be migrated/replicated in small
fragments. See the
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#system-properties">hazelcast.partition.migration.fragments.enabled</a>
system property and
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#managing-cluster-and-member-states">NO_MIGRATION</a>
cluster state.</p>
</li>
<li>
<p><strong>Storing Near Cache Keys by Reference</strong>: This enhancement provides a
functionality to skip the serialization of keys for Near Caches to
improve the performance of the Near Caches. See the
<code>serialize-keys</code> option in the
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#configuring-near-cache">Near
Cache section</a>.</p>
</li>
<li>
<p><strong>Client Connection Strategy Enhancements</strong>: Allows lazy initiation for
Hazelcast Clients. See the
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#client-connection-strategy">Configuring
Client Connection Strategy section</a>.</p>
</li>
<li>
<p><strong>Default Group Password and Symmetric Encryption Default Credentials
Policy</strong>: Hazelcast requires the default group password and default
symmetric encryption password/salt to be changed. See the
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#validating-secrets-using-strength-policy">Validating
Secrets Using Strength Policy section</a>.</p>
</li>
<li>
<p><strong>Hazelcast Consistency Model Documentation</strong>: We added a new chapter
explaining the full picture of Hazelcast’s consistency model. See
the
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#consistency-and-replication-model">Consistency
and Replication Model chapter</a>.</p>
</li>
<li>
<p><strong>Keeping JCache Implementation Updated</strong>: Hazelcast JCache
implementation is updated for JSR 1.1 compliance when it is released.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the other improvements performed to solve the
enhancement issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Support for <code>properties</code> in <code>RingbufferStoreConfig</code> must be added.
<a href="https://github.com/hazelcast/hazelcast/issues/11077">#11077</a></p>
</li>
<li>
<p>There should be the ability to add a timeout to get operations for
Spring <code>HazelcastCache</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10756">#10756</a></p>
</li>
<li>
<p>Exception causes get lost when using <code>IExecutorService</code> with the
Hazelcast client.
<a href="https://github.com/hazelcast/hazelcast/issues/10591">#10591</a></p>
</li>
<li>
<p>The attribute <code>override-java-serialization</code> should be added to the
element <code>global-serializer</code> in <code>hazelcast-client-config.xsd</code>. <a href="https://github.com/hazelcast/hazelcast/issues/10449">#10449</a></p>
</li>
<li>
<p>Hazelcast should have a method like <code>gerOrCreateHazelcastInstance()</code>
to detect a default configuration file and either create an instance or
get an existing one. <a href="https://github.com/hazelcast/hazelcast/issues/10007">#10007</a></p>
</li>
<li>
<p>Allow binding any port without using the method
<code>setPortAutoIncrement()</code> and specifying the port count. <a href="https://github.com/hazelcast/hazelcast/issues/9775">#9775</a></p>
</li>
<li>
<p>Consistent interface for IMap and TransactionalMap is needed. <a href="https://github.com/hazelcast/hazelcast/issues/8729">#8729</a></p>
</li>
<li>
<p>Hazelcast instance’s name should be added as a prefix to the name of
the threads managed by Hazelcast. <a href="https://github.com/hazelcast/hazelcast/issues/8542">#8542</a></p>
</li>
<li>
<p>When back pressure is enabled members always use back-off and clients
always throws <code>HazelcastOverloadedException</code>. This is not consistent and
the behavior should be configurable on both members and clients. <a href="https://github.com/hazelcast/hazelcast/issues/8533">#8533</a></p>
</li>
<li>
<p>There should be a Spring property placeholder for
<code>cache-deserialized-values</code> in the map configuration.
<a href="https://github.com/hazelcast/hazelcast/issues/8487">#8487</a></p>
</li>
<li>
<p>For <code>OperationService</code>, the contention on the counters should be
reduced. <a href="https://github.com/hazelcast/hazelcast/issues/4925">#4925</a></p>
</li>
<li>
<p>Some of the properties mentioned in <code>GroupProperties</code> are not used
anymore, it should be cleaned up. <a href="https://github.com/hazelcast/hazelcast/issues/4505">#4505</a></p>
</li>
<li>
<p>When a grid member is configured to use port 0, it should be handled
properly. <a href="https://github.com/hazelcast/hazelcast/issues/2506">#2506</a></p>
</li>
<li>
<p>There should be the ability to configure the distributed objects on
the fly. <a href="https://github.com/hazelcast/hazelcast/issues/592">#592</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-39"><a class="anchor" href="#fixes-39"></a><a class="link" href="#fixes-39">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Members cannot join to 3.9 cluster when using cache with a key/value
type that is only resolvable from the user code deployment repository.
<a href="https://github.com/hazelcast/hazelcast/issues/11505">#11505</a></p>
</li>
<li>
<p>Hazelcast listeners may fail to be registered to a new joined member.
This is caused by a race condition between <code>PostJoinOperations</code> and the
member doing the listener registration.
<a href="https://github.com/hazelcast/hazelcast/issues/11490">#11490</a></p>
</li>
<li>
<p>Regression occurs after returning <code>ResultSet</code> instead of
<code>SortedQueryResultSet</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/11489">#11489</a></p>
</li>
<li>
<p>Performance issue in <code>MapProxyImpl.readFromEventJournal</code> with
projection. Projection cloning on the method <code>readFromEventJournal</code> must
be skipped.
<a href="https://github.com/hazelcast/hazelcast/issues/11410">#11410</a></p>
</li>
<li>
<p>There is an issue with <code>MapStore</code>: the method
<code>hcInstance.getMap(mapName)</code> gets blocked when a new member joins and
data is being loaded.
<a href="https://github.com/hazelcast/hazelcast/issues/11407">#11407</a></p>
</li>
<li>
<p>Migration operation during the member startup raises <code>ERROR</code> level
exception. <a href="https://github.com/hazelcast/hazelcast/issues/11406">#11406</a></p>
</li>
<li>
<p><code>SpringAware</code> and <code>NodeAware</code> are not taken into account when
injecting dependencies to various cache resources.
<a href="https://github.com/hazelcast/hazelcast/issues/11406">#11406</a></p>
</li>
<li>
<p>When the method <code>execute()</code> from <code>OperationServiceImpl</code> is used and if
it times out, the operation cannot send a response since
<code>responseHandler</code> is null (assuming the caller did not set it
initially). This leads to <code>NullPointerException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/11375">#11375</a></p>
</li>
<li>
<p>In the method <code>DataRecordComparator.isEqual()</code>, the objects are always
serialized so that the binary form is used to determine if something
equals another object. This can lead to a lot of unwanted
serializations.
<a href="https://github.com/hazelcast/hazelcast/issues/11290">#11290</a></p>
</li>
<li>
<p>There is an inconsistent behavior for the method <code>exists()</code> of
<code>CacheEntryProcessorEntry</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/11266">#11266</a></p>
</li>
<li>
<p>Hazelcast 3.8.4 source code does not match the JAR classes.
<a href="https://github.com/hazelcast/hazelcast/issues/11261">#11261</a></p>
</li>
<li>
<p><code>OperationTimeoutException</code> should include the cause of exception.
<a href="https://github.com/hazelcast/hazelcast/issues/11233">#11233</a></p>
</li>
<li>
<p>There is no way to configure the <code>port-count</code> element within Spring
context. <a href="https://github.com/hazelcast/hazelcast/issues/11224">#11224</a></p>
</li>
<li>
<p>Registration objects cause a memory leak while using
<code>ScheduledExecutor</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/11221">#11221</a></p>
</li>
<li>
<p>Incorrect <code>UnsupportedOperationException</code> message: <code>Event journal
actions are not available when cluster version is 3.9 or higher</code>. It
should be <code>.. are available ..</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/11220">#11220</a></p>
</li>
<li>
<p><code>loadClasses</code> of client user code deployment throws
<code>ClassNotFoundException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/11217">#11217</a></p>
</li>
<li>
<p>Dead cluster member causes a high reconnect count.
<a href="https://github.com/hazelcast/hazelcast/issues/11176">#11176</a></p>
</li>
<li>
<p><code>MapGetInvalidationMetaDataOperation</code> throws <code>NullPointerException</code> in
a Near Cache scenario.
<a href="https://github.com/hazelcast/hazelcast/issues/11147">#11147</a></p>
</li>
<li>
<p>REST endpoints for cluster version management should be documented.
<a href="https://github.com/hazelcast/hazelcast/issues/11139">#11139</a></p>
</li>
<li>
<p><code>CacheDestroyOperation</code> must be invoked on the generic operation
thread. <a href="https://github.com/hazelcast/hazelcast/issues/11137">#11137</a></p>
</li>
<li>
<p>Hazelcast members keep leaving and rejoining from/to the cluster in
Docker (via the plugin Hazelcast AWS).
<a href="https://github.com/hazelcast/hazelcast/issues/11118">#11118</a></p>
</li>
<li>
<p>The method <code>ICache.getAndRemove()</code> doesn’t invalidate the Near Cache.
<a href="https://github.com/hazelcast/hazelcast/issues/11110">#11110</a></p>
</li>
<li>
<p><code>IScheduledExecutorService</code> with <code>@SpringAware</code> does not inject
ApplicationContext or Beans.
<a href="https://github.com/hazelcast/hazelcast/issues/11108">#11108</a></p>
</li>
<li>
<p>IMap allows passing null collection in <code>putAll</code> and <code>getAll</code>, and null
keys in <code>loadAll</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/11099">#11099</a></p>
</li>
<li>
<p>MapLoader <code>NullPointerException</code> occurs on <code>loadAll(Collection)</code> when
the value is null and MapLoader implements <code>PostProcessingMapStore</code> or
has an Interceptor.
<a href="https://github.com/hazelcast/hazelcast/issues/11081">#11081</a></p>
</li>
<li>
<p><code>CacheNotExistsException</code> is thrown when a new member joins a
cluster where the primary member is creating and destroying JCaches.
<a href="https://github.com/hazelcast/hazelcast/issues/11047">#11047</a></p>
</li>
<li>
<p><code>NullPointerException</code> on <code>ScheduledExecutor</code> when handling multiple
migration requests on the same source should be fixed.
<a href="https://github.com/hazelcast/hazelcast/issues/11046">#11046</a></p>
</li>
<li>
<p>The exception
<code>NoClassDefFoundError: com/hazelcast/com/eclipsesource/json/JsonObject</code>
is thrown when using Payara Server and Hazelcast-AWS.
<a href="https://github.com/hazelcast/hazelcast/issues/10994">#10994</a></p>
</li>
<li>
<p>There should be a warning or an information message when
<code>DiscoveryStrategy</code> SPI is not on the classpath.
<a href="https://github.com/hazelcast/hazelcast/issues/10993">#10993</a></p>
</li>
<li>
<p>There is a rolling upgrade compatibility issue for native queries in
Hazelcast 3.9. It will fail when a 3.8 member send a <code>QueryOperation</code> to
3.9. <a href="https://github.com/hazelcast/hazelcast/issues/10973">#10973</a></p>
</li>
<li>
<p>SSL Incorrect Error Message: Memcached not enabled. Connecting to a
Hazelcast Cluster that has SSL/Security disabled with a Hazelcast Client
that has SSL enabled gives this error.
<a href="https://github.com/hazelcast/hazelcast/issues/10971">#10971</a></p>
</li>
<li>
<p>Statistics <code>getTotalGetLatency</code>, <code>getTotalRemoveLatency</code>, and
<code>getTotalPutLatency</code> works incorrectly.
<a href="https://github.com/hazelcast/hazelcast/issues/10938">#10938</a></p>
</li>
<li>
<p>Map destroy doesn’t remove invalidation sequences and this causes
<code>OutOfMemoryException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10936">#10936</a></p>
</li>
<li>
<p>Ensure dynamic configuration is available before <code>HazelcastInstance</code>
is returned to user.
<a href="https://github.com/hazelcast/hazelcast/issues/10926">#10926</a></p>
</li>
<li>
<p>Illegal character exception is thrown at index for the character
''^''. <a href="https://github.com/hazelcast/hazelcast/issues/10921">#10921</a></p>
</li>
<li>
<p>The method <code>ScheduledTaskHandler.of(urn)</code> fails when IPv6 address is
used. <a href="https://github.com/hazelcast/hazelcast/issues/10898">#10898</a></p>
</li>
<li>
<p>There is a thread leak after calling the method
<code>HazelcastInstance.shutdown()</code> in 3.8.2; so, JVM won’t exit.
<a href="https://github.com/hazelcast/hazelcast/issues/10886">#10886</a></p>
</li>
<li>
<p>Transactional Queue: Backup reserve is failed, itemId: is not found.
<a href="https://github.com/hazelcast/hazelcast/issues/10867">#10867</a></p>
</li>
<li>
<p>Map configurations inconsistency between members.
<a href="https://github.com/hazelcast/hazelcast/issues/10860">#10860</a></p>
</li>
<li>
<p><code>PostJoinMapOperation</code> is running on a generic thread; it means it
cannot create high-density memory store indexes. It should probably
spawn partition specific operations.
<a href="https://github.com/hazelcast/hazelcast/issues/10841">#10841</a></p>
</li>
<li>
<p>The element <code>config-permission</code> cannot be configured in Hazelcast
Spring XML.
<a href="https://github.com/hazelcast/hazelcast/issues/10835">#10835</a></p>
</li>
<li>
<p><code>DynamicSecurityConfig</code> and <code>SecurityService</code> lifecycle should be
clarified. <a href="https://github.com/hazelcast/hazelcast/issues/10834">#10834</a></p>
</li>
<li>
<p>Eliminate synchronization when checking task permissions.
<a href="https://github.com/hazelcast/hazelcast/issues/10833">#10833</a></p>
</li>
<li>
<p>Dynamic configuration tasks should be non-blocking.
<a href="https://github.com/hazelcast/hazelcast/issues/10813">#10813</a></p>
</li>
<li>
<p>Hazelcast declares <code>commons-logging</code> (OSGi) as a required dependency,
but it is not required.
<a href="https://github.com/hazelcast/hazelcast/issues/10770">#10770</a></p>
</li>
<li>
<p>Comparing <code>Version.UNKNOWN</code> with other versions results in strange
results. <a href="https://github.com/hazelcast/hazelcast/issues/10755">#10755</a></p>
</li>
<li>
<p>Multiple threads from Spring boot application are able to acquire lock
on the same document id ( String ).
<a href="https://github.com/hazelcast/hazelcast/issues/10754">#10754</a></p>
</li>
<li>
<p>The system property
<code>hazelcast.cache.invalidation.batchfrequency.seconds</code> does not work for
IMap. <a href="https://github.com/hazelcast/hazelcast/issues/10743">#10743</a></p>
</li>
<li>
<p>The method <code>isEnterprise()</code> for <code>BuildInfoProvider</code> does not work in
Hazelcast 3.7.x.
<a href="https://github.com/hazelcast/hazelcast/issues/10740">#10740</a></p>
</li>
<li>
<p>Infinite loop trying to initialize Cache configuration when
deserialization fails.
<a href="https://github.com/hazelcast/hazelcast/issues/10728">#10728</a></p>
</li>
<li>
<p>There is a race between <code>CacheConfig</code> addition and Proxy creation when
a new member joins cluster.
<a href="https://github.com/hazelcast/hazelcast/issues/10727">#10727</a></p>
</li>
<li>
<p>There is an infinite loop trying to initialize cache configuration
when deserialization fails.
<a href="https://github.com/hazelcast/hazelcast/issues/10723">#10723</a></p>
</li>
<li>
<p>Fail fast should occur when the cache’s in-memory format is
incompatible with its eviction configuration.
<a href="https://github.com/hazelcast/hazelcast/issues/10716">#10716</a></p>
</li>
<li>
<p>When a Java application is run with Hazelcast 3.8.2 within Docker, and
after switching from <code>openjdk:8u121-jre-alpine</code> to
<code>openjdk:8u131-jre-alpine</code>, <code>IllegalArgumentException</code> is thrown during
cluster bootstrap. <a href="https://github.com/hazelcast/hazelcast/issues/10704">#10704</a></p>
</li>
<li>
<p>Performance Issue in Hazelcast 3.8.1: <code>QueueStore.loadAll()</code> is called
way too often when draining items from Queue. <a href="https://github.com/hazelcast/hazelcast/issues/10621">#10621</a></p>
</li>
<li>
<p>Hazelcast instance is not injected into predicate. It occurs when the
predicate is not serialized and deserialized because it was invoked on
the partition owner.
<a href="https://github.com/hazelcast/hazelcast/issues/10620">#10620</a>.</p>
</li>
<li>
<p>Hazelcast client always tries to connect to localhost when using
<code>DiscoveryStrategy</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10606">#10606</a></p>
</li>
<li>
<p>Scheduled task remains cancelled after migration. <a href="https://github.com/hazelcast/hazelcast/issues/10603">#10603</a></p>
</li>
<li>
<p><code>SplitBrainMergeValidationOperation</code> ignores the join check from
[NODEB]:5701, because that node is not master.
<a href="https://github.com/hazelcast/hazelcast/issues/10587">#10587</a></p>
</li>
<li>
<p>Problem setting up a cluster into Docker Swarm (overlay network).</p>
</li>
<li>
<p>New cache eviction is populated among nodes very slowly. <a href="https://github.com/hazelcast/hazelcast/issues/10470">#10470</a></p>
</li>
<li>
<p>WAN backup events are published twice. The
<code>publishWanReplicationEventBackups</code> method is called in the <code>run</code> and
<code>afterRun</code> method in the <code>PartitionWideEntryBackupOperation</code>. Elsewhere
it is only called in <code>afterRun</code>. This needs to be checked but possibly
the fix is just to remove the call in <code>run</code>. <a href="https://github.com/hazelcast/hazelcast/issues/10457">#10457</a></p>
</li>
<li>
<p><code>PortableFactory[-22] is already registered</code> error when using Spring
Boot 1.4.2 and Hazelcast 3.7.x.
<a href="https://github.com/hazelcast/hazelcast/issues/10438">#10438</a></p>
</li>
<li>
<p>Source parameter is null on <code>JCache.loadAll()</code> call. <a href="https://github.com/hazelcast/hazelcast/issues/10328">#10328</a></p>
</li>
<li>
<p><code>TransactionalMapProxy</code> depends on <code>MapContainer</code>. Also, creating a
<code>TransactionalMapProxy</code> should not trigger creation of the backing
<code>MapContainer</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10254">#10254</a></p>
</li>
<li>
<p>It is impossible to stop a Hazelcast Client service if it has never
connected to the server.
<a href="https://github.com/hazelcast/hazelcast/issues/10237">#10237</a></p>
</li>
<li>
<p><code>TcpIpJoiner</code> throws the
exception`ConcurrentModificationException: null`. <a href="https://github.com/hazelcast/hazelcast/issues/10207">#10207</a></p>
</li>
<li>
<p><code>Cache.cacheManager</code> may be overwritten with a different
<code>CacheManager</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10200">#10200</a></p>
</li>
<li>
<p>It seems like the Near Cache statistics seem to be off-by-one for at
least the <code>ownedEntryCount</code>. Sometimes the <code>ownedEntryMemoryCost</code> seems
to be affected as well. <a href="https://github.com/hazelcast/hazelcast/issues/10193">#10193</a></p>
</li>
<li>
<p><code>PagingPredicate</code> does not work for the method <code>executeOnEntries()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10174">#10174</a></p>
</li>
<li>
<p>Setting up a Hazelcast listener in a Spring configuration format does
not seem to work when using the class property of <code>hz:listener</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10154">#10154</a></p>
</li>
<li>
<p>Test coverage for <code>NearCacheClientCacheProxy</code> should be increased.
<a href="https://github.com/hazelcast/hazelcast/issues/10127">#10127</a></p>
</li>
<li>
<p>Fast Aggregations for <code>any</code> operator on empty arrays do not work.
<a href="https://github.com/hazelcast/hazelcast/issues/10126">#10126</a></p>
</li>
<li>
<p><code>CachingProvider</code> should attempt to get or create <code>HazelcastInstance</code>
with the default configuration when only instance name is provided.
<a href="https://github.com/hazelcast/hazelcast/issues/10094">#10094</a></p>
</li>
<li>
<p><code>MulticastDiscoveryStrategy</code> does not work correctly with client
discovery. <a href="https://github.com/hazelcast/hazelcast/issues/10089">#10089</a></p>
</li>
<li>
<p>Updates with <code>IMap#putTransient</code> should trigger
<code>EntryUpdatedListener</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10077">#10077</a></p>
</li>
<li>
<p>The method <code>loadAll(boolean replaceExistingValues)</code> does not reload
the map store after the method <code>cache.evictAll</code> is called.
<a href="https://github.com/hazelcast/hazelcast/issues/10057">#10057</a></p>
</li>
<li>
<p>Hazelcast XML configuration does not allow <code>RANDOM</code> eviction as an
eviction policy. <a href="https://github.com/hazelcast/hazelcast/issues/10053">#10053</a></p>
</li>
<li>
<p>There is a race condition in <code>TestClientRegistry</code> where the tests are
calling <code>blockFrom</code> and <code>blockTo</code> before any connection was made (via
<code>createSocketConnection</code>). This causes <code>NullPointerException</code> in those
block methods. <a href="https://github.com/hazelcast/hazelcast/issues/10021">#10021</a></p>
</li>
<li>
<p>Client side query cache declarative configuration does not support
wildcard usage <code>mapName</code> configuration.
<a href="https://github.com/hazelcast/hazelcast/issues/9990">#9990</a></p>
</li>
<li>
<p>When health check is enabled, the user can send a garbage request like
<code>http://&lt;your member&#8217;s host IP&gt;:5701/hazelcast/healthqqq</code> and it returns
a correct response. <a href="https://github.com/hazelcast/hazelcast/issues/9967">#9967</a></p>
</li>
<li>
<p>Durable Executor Service re-executes the completed tasks in case of a
member failure. <a href="https://github.com/hazelcast/hazelcast/issues/9965">#9965</a></p>
</li>
<li>
<p>There is a problem with virtual IP assignments when Hazelcast is used
into a Docker Swarm cluster.
<a href="https://github.com/hazelcast/hazelcast/issues/9963">#9963</a></p>
</li>
<li>
<p>Currently there is no Spring support for Near Cache preloader.
<a href="https://github.com/hazelcast/hazelcast/issues/9771">#9771</a></p>
</li>
<li>
<p>MapStore: write delay is not precisely respected as it has been in the
previous Hazelcast releases (before 3.7.4).
<a href="https://github.com/hazelcast/hazelcast/issues/9745">#9745</a></p>
</li>
<li>
<p>The option <code>cache-local-entries</code> is not supported at the client side
Near Cache configuration. <a href="https://github.com/hazelcast/hazelcast/issues/9712">#9712</a></p>
</li>
<li>
<p>Latest member-list may not be received when <code>FinalizeJoinOperation</code>
invocation timeouts. <a href="https://github.com/hazelcast/hazelcast/issues/9501">#9501</a></p>
</li>
<li>
<p>Cluster member-list update operations are not ordered, new member
addition and removal operations can get reordered on
receiving/processing side. Also periodic member-list publish operation
has no order with other member adding/removing operations. That can
cause having different member lists on different members. [#9486]</p>
</li>
<li>
<p>Hazelcast Client API (3.7.3) is not able to execute get/put/delete
operations on the maps when used in AWS with smart-routing enabled
(values and clear operation work).
<a href="https://github.com/hazelcast/hazelcast/issues/9419">#9419</a></p>
</li>
<li>
<p>Single map with ten items and three members, Split-Brain case: After
isolating one member, the merge occurs only with some of the keys, not
all of them. <a href="https://github.com/hazelcast/hazelcast/issues/9358">#9358</a></p>
</li>
<li>
<p>When attempting to start a cluster member (3.6.5) with JMX enabled,
<code>IllegalArgumentException</code> is thrown and the member is self-terminated
immediately. <a href="https://github.com/hazelcast/hazelcast/issues/9293">#9293</a></p>
</li>
<li>
<p>Backup is lost if <code>maxIdle</code> property is used. <a href="https://github.com/hazelcast/hazelcast/issues/9153">#9153</a></p>
</li>
<li>
<p>MultiMap lock: Thread is getting stuck when calling <code>lock(key)</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/9055">#9055</a></p>
</li>
<li>
<p>Near Cache on the Hazelcast Client side returns old values.
<a href="https://github.com/hazelcast/hazelcast/issues/8838">#8838</a></p>
</li>
<li>
<p>Behavior of TTL when it is a negative value should be clarified.
<a href="https://github.com/hazelcast/hazelcast/issues/7729">#7729</a></p>
</li>
<li>
<p>Heartbeat only removes a member if it is related to the master member.
<a href="https://github.com/hazelcast/hazelcast/issues/5253">#5253</a></p>
</li>
<li>
<p>Multicast discovery does not work after loading some data.
<a href="https://github.com/hazelcast/hazelcast/issues/4721">#4721</a></p>
</li>
<li>
<p>The HD <code>CachePutAllOperation</code> loses backup entries, when a NOOME occurs and the operation is executed again after the forced eviction. [#1753]</p>
</li>
<li>
<p>If an HD map operation runs on a generic partition thread, the <code>RecordStore</code> will be null, which leads to a <code>NullPointerException</code> in the forced eviction code. [#1749]</p>
</li>
<li>
<p>When you execute an Offloadable entry processor on a High-Density Memory Store backed map and the operation cannot find any entries, <code>NullPointerException</code> is thrown.  [#1740], [#11453](<a href="https://github.com/hazelcast/hazelcast/issues/11453" class="bare">https://github.com/hazelcast/hazelcast/issues/11453</a>)</p>
</li>
<li>
<p>The HD Near Cache record store is not properly disposed on <code>destroy()</code> calls. This affects all HD Near Cache scenarios. #1672</p>
</li>
<li>
<p>WAN replication&#8217;s <code>EnterpriseMapReplicationRemove</code> event causes <code>SerializationException</code>. #1636</p>
</li>
<li>
<p>When OpenSSL integration is configured, it would be nice to have something in the logs like "OpenSSL integration enabled.". Current status is that there is only "SSL is enabled", which is confusing. #1627</p>
</li>
<li>
<p><code>WanReplicationService</code> should implement <code>FragmentedMigrationAwareService</code>. #1596</p>
</li>
<li>
<p>Map evictions fail on HD maps with indexes. #1585</p>
</li>
<li>
<p>OpenSSL chapter in the reference manual should list supported configurations. #1582</p>
</li>
<li>
<p><code>HeapData</code> cannot be cast to <code>NativeMemoryData</code> on <code>HDEntryOperation</code>. #1580</p>
</li>
<li>
<p>WAN synchronization using REST fails. #1548</p>
</li>
<li>
<p><code>CachePutAllOperation</code> does not emit WAN events. #1531</p>
</li>
<li>
<p>Rolling Upgrade: 3.9 member cannot join to 3.8 cluster. #1492</p>
</li>
<li>
<p>ObjectNamespace cannot be serialized compatibly. #1471</p>
</li>
<li>
<p>When serializing a Versioned DataSerializable, Input/Output.getVersion() returns UNKNOWN when a non-versioned field is serialized inside outer Versioned. #1369</p>
</li>
<li>
<p>Object passed to <code>LoginModuleConfig.setImplementation</code> is never used. #1337</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="bc-39"><a class="anchor" href="#bc-39"></a><a class="link" href="#bc-39">Behavioral Changes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Maximum timeout of heartbeat for a member to assume it is dead was 300
seconds. Starting with Hazelcast 3.9, it is reduced to 60 seconds.
Related property is <code>hazelcast.max.no.heartbeat.seconds</code>. Also, starting
with Hazelcast 3.9, maximum timeout of master confirmation from other
members is reduced to 150 seconds from 450 seconds. Related property is
<code>hazelcast.max.no.master.confirmation.seconds</code>.</p>
</li>
<li>
<p>Starting with Hazelcast 3.9, the default <code>Cache</code> merge policy is <strong>Put
if Absent</strong>. It was <strong>Pass Through</strong> before Hazelcast 3.9.</p>
</li>
<li>
<p>Starting with Hazelcast 3.9, the format of member list shown in the
logs is changed. Before Hazelcast 3.9, it was like the following:</p>
<div class="literalblock">
<div class="content">
<pre>Members [3] {
    Member [127.0.0.1]:5701 - c1ccc8d4-a549-4bff-bf46-9213e14a9fd2 this
    Member [127.0.0.1]:5702 - 33a82dbf-85d6-4780-b9cf-e47d42fb89d4
    Member [127.0.0.1]:5703 - 813ec82f-9d9e-4712-bae1-6c95b32d6d7d
}</pre>
</div>
</div>
<div class="paragraph">
<p>Starting with Hazelcast 3.9, it is shown as follows:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>Members {size:3, ver:3} [
  Member [127.0.0.1]:5701 - e40081de-056a-4ae5-8ffe-632caf8a6cf1 this
  Member [127.0.0.1]:5702 - 93e82109-16bf-4b16-9c87-f4a6d0873080
  Member [127.0.0.1]:5703 - 06fb4e61-9757-443b-a19f-7af1f3966f30
]</pre>
</div>
</div>
<div class="paragraph">
<p>Here, you can see the size of your cluster (<code>size</code>) and member list
version (<code>ver</code>). The member list version will be incremented when
changes happen to the cluster, e.g., a member leaving from or joining to
the cluster.</p>
</div>
<div class="paragraph">
<p>You can set the system property
<code>hazelcast.legacy.memberlist.format.enabled</code> to <code>true</code> if you want to
see the member list in its old format.</p>
</div>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-39"><a class="anchor" href="#contributors-39"></a><a class="link" href="#contributors-39">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/gaganis">Giorgos Gaganis</a></p>
</li>
<li>
<p><a href="https://github.com/dpwegener">dpwegener</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-8-9"><a class="anchor" href="#3-8-9"></a><a class="link" href="#3-8-9">3.8.9</a></h3>
<div class="sect3">
<h4 id="fixes-389"><a class="anchor" href="#fixes-389"></a><a class="link" href="#fixes-389">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Due to a problem in the TLS mechanism, IO threads could become stuck and fail to process further frames. Once this happens, traffic between members stops and the cluster ceases to operate correctly. Symptoms included heartbeat timeouts and split-brains. This fix resolves this issue. #1831</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-8-8"><a class="anchor" href="#3-8-8"></a><a class="link" href="#3-8-8">3.8.8</a></h3>
<div class="paragraph">
<p>The following is the enhancement for Hazelcast 3.8.8 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>MulticastJoiner’s split-brain handler should broadcast a new
split-brain message only when it detects the other side should join, not
on every merge interval.
<a href="https://github.com/hazelcast/hazelcast/pull/11888">#11888</a></p>
</li>
<li>
<p>Trim configured WAN endpoints and use only non-empty ones. #1809</p>
</li>
<li>
<p>When <code>snapshot.enabled=true</code>, <code>eventList</code> in <code>WanBatchEvent</code> class becomes a Map. <code>WanBatchReplicationclass</code> updates the stats for each event. But when snapshot is enabled, there can be many events for the same key, and the event count will be only 1, the but queue size is the total number of events. This causes users to think there are events in the queue, even though there are not. #1808</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-8-7"><a class="anchor" href="#3-8-7"></a><a class="link" href="#3-8-7">3.8.7</a></h3>
<div class="paragraph">
<p>The following are fixed issues and enhancements for Hazelcast 3.8.7
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>MapStore: Map initialization is blocked when new members join during
the data loading.
<a href="https://github.com/hazelcast/hazelcast/issues/11407">#11407</a></p>
</li>
<li>
<p>Split-brain is not working as expected on a 2-member cluster. There
occurs a cluster merge deadlock when the core size is 1.
<a href="https://github.com/hazelcast/hazelcast/issues/11403">#11403</a></p>
</li>
<li>
<p>Unable to connect any address in the configuration.
<a href="https://github.com/hazelcast/hazelcast/issues/11288">#11288</a></p>
</li>
<li>
<p><code>OperationTimeoutException</code> thrown at Hazelcast clients should include
a more informative text.
<a href="https://github.com/hazelcast/hazelcast/issues/11241">#11241</a>,
<a href="https://github.com/hazelcast/hazelcast/issues/11236">#11236</a></p>
</li>
<li>
<p>Stale reads must be guaranteed from the map inside a transaction, when
Near Cache and delayed MapStore are enabled.
<a href="https://github.com/hazelcast/hazelcast/issues/9248">#9248</a></p>
</li>
<li>
<p>A GroupProperty <code>INDEX_COPY_BEHAVIOR</code> was added to enable fine-tuning
of index query behavior. Related to performance degradation reported in
<a href="https://github.com/hazelcast/hazelcast/issues/11280">#11280</a></p>
</li>
<li>
<p>OpenSSL in combination with Netty 4.1.14+ is problematic related to socket buffers. #1692</p>
</li>
<li>
<p>After a split-brain, a member cannot join to the cluster; throws <code>IllegalStateException</code>. #1371</p>
</li>
<li>
<p>The user should be warned when High-Density Memory Store is used along with indexes on a map. #1255</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-8-6"><a class="anchor" href="#3-8-6"></a><a class="link" href="#3-8-6">3.8.6</a></h3>
<div class="paragraph">
<p>The following are fixed issues and enhancements for Hazelcast 3.8.6
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Fixed local execution Spring context injection on the Scheduled
Executor tasks.
<a href="https://github.com/hazelcast/hazelcast/pull/11374/">#11374</a></p>
</li>
<li>
<p><code>toHeapData</code> should be used when converting native data to heap data.
<a href="https://github.com/hazelcast/hazelcast/pull/11361/">#11361</a></p>
</li>
<li>
<p>Prefix for the diagnostics file name should be configurable.
<a href="https://github.com/hazelcast/hazelcast/issues/11345">#11345</a></p>
</li>
<li>
<p>Client 3.8.4 (and newer versions) with near cache gets
<code>java.lang.UnsupportedOperationException</code> when it is connected to 3.7.x
cluster. <a href="https://github.com/hazelcast/hazelcast/issues/11343">#11343</a></p>
</li>
<li>
<p>Notifications from a Hazelcast member through ITopic listeners
(MessageListener) are being lost.
<a href="https://github.com/hazelcast/hazelcast/issues/11264">#11264</a></p>
</li>
<li>
<p>Address validation for the client network configuration is missing.
<a href="https://github.com/hazelcast/hazelcast/issues/11242">#11242</a></p>
</li>
<li>
<p>The client is unable to connect to any address in the configuration,
after some hours.
<a href="https://github.com/hazelcast/hazelcast/issues/11194">#11194</a></p>
</li>
<li>
<p>There are errors when using discovery strategy in the Hazelcast
client. <a href="https://github.com/hazelcast/hazelcast/issues/11116">#11116</a></p>
</li>
<li>
<p>Hazelcast terminates the listeners incorrectly (for 3.7.6).
<a href="https://github.com/hazelcast/hazelcast/issues/10101">#10101</a></p>
</li>
<li>
<p>The explanation for <code>InvalidConfigurationException</code> (for query caches)
should be more clear.
<a href="https://github.com/hazelcast/hazelcast/issues/9988">#9988</a></p>
</li>
<li>
<p>Wrap and unwrap are both reading from/writing to the <code>sslEngineResult</code> field from the <code>SSLEngine</code>, and wrap can be called concurrently with unwrap.#1696</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-8-5"><a class="anchor" href="#3-8-5"></a><a class="link" href="#3-8-5">3.8.5</a></h3>
<div class="paragraph">
<p>The following are fixed issues and enhancements for Hazelcast 3.8.5
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Fix for map-loader put in case of size-based eviction NPE.
<a href="https://github.com/hazelcast/hazelcast/pull/11253/">#11253</a></p>
</li>
<li>
<p>Checked existence of key in-memory before proceeding.
<a href="https://github.com/hazelcast/hazelcast/pull/11251/">#11251</a></p>
</li>
<li>
<p>Registration objects cause memory leak while using ScheduledExecutor.
<a href="https://github.com/hazelcast/hazelcast/pull/11227/">#11227</a></p>
</li>
<li>
<p>Implement HTTPCommunicator using Apache HttpClient.
<a href="https://github.com/hazelcast/hazelcast/pull/11214/">#11214</a></p>
</li>
<li>
<p>Notify invocations when a member leaves in FROZEN/PASSIVE cluster
state. <a href="https://github.com/hazelcast/hazelcast/pull/11202/">#11202</a></p>
</li>
<li>
<p>The client should not use localhost if it is not explicitly configured
and the discovery is configured.
<a href="https://github.com/hazelcast/hazelcast/pull/11199/">#11199</a></p>
</li>
<li>
<p>Query cache fix for map destroy.
<a href="https://github.com/hazelcast/hazelcast/pull/11197/">#11197</a></p>
</li>
<li>
<p>Add system property to process WAN map remove events as delete.
<a href="https://github.com/hazelcast/hazelcast/pull/11178/">#11178</a></p>
</li>
<li>
<p>Add forgotten public address check from cache.
<a href="https://github.com/hazelcast/hazelcast/pull/11169/">#11169</a></p>
</li>
<li>
<p><code>CacheDestroyOperation</code> must be invoked from generic operation thread.
<a href="https://github.com/hazelcast/hazelcast/pull/11165/">#11165</a></p>
</li>
<li>
<p><code>RemoveOperation</code> returns old value causing <code>SerializationException</code>
in WAN replication when sources are not available and the store type is
binary. <a href="https://github.com/hazelcast/hazelcast/issues/11157/">#11157</a></p>
</li>
<li>
<p>Error in Spring configuration: <code>${hazelcast.queue.capacity}</code> is not
a valid value for ’integer''. The property <code>queue-capacity</code>’s type
should be changed.
<a href="https://github.com/hazelcast/hazelcast/issues/11150/">#11150</a></p>
</li>
<li>
<p>The Javadoc for the method <code>MapEvictionPolicy.compare</code> is not correct.
<a href="https://github.com/hazelcast/hazelcast/issues/11074/">#11074</a></p>
</li>
<li>
<p>When handling multiple migration requests on the same source,
<code>NullPointerException</code> can be thrown due to the null future reference
from the previous migration processing.
<a href="https://github.com/hazelcast/hazelcast/pull/11067/">#11067</a></p>
</li>
<li>
<p>An exception can’t be rethrown from a different thread; it will lead
to exceptions with very obscure stacktraces.
<a href="https://github.com/hazelcast/hazelcast/issues/11022/">#11022</a></p>
</li>
<li>
<p>Wrong property name <code>partition.count</code> in XSD files.
<a href="https://github.com/hazelcast/hazelcast/issues/10544/">#10544</a></p>
</li>
<li>
<p>Hazelcast 3.7: <code>PollOperation</code> invocation fails to complete due to
<code>operation-heartbeat-timeout</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/8831/">#8831</a></p>
</li>
<li>
<p>Leak of offloaded operation set in WAN service: There was a race that could lead to an operation first being processed in a different thread and then being added to the set of live operations (to notify the invocation monitor the operation is being processed in a different thread). This caused a memory leak. #1595</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-8-4"><a class="anchor" href="#3-8-4"></a><a class="link" href="#3-8-4">3.8.4</a></h3>
<div class="paragraph">
<p>The following are fixed issues and enhancements for Hazelcast 3.8.4
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Added timeout option for the <code>get</code> operation when Hazelcast is used
within the Spring context.
<a href="https://github.com/hazelcast/hazelcast/pull/11001/">#11001</a></p>
</li>
<li>
<p>HTTP HEAD support added to the REST interface.
<a href="https://github.com/hazelcast/hazelcast/pull/11000/">#11000</a></p>
</li>
<li>
<p><code>ClientProxy</code> gets <code>NullPointerException</code> from the method <code>getClient</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10961">#10961</a></p>
</li>
<li>
<p>Added support for collecting and tracking statistics for all reliable
topic proxies on a local member. The statistics are destroyed when the
proxy is destroyed.
<a href="https://github.com/hazelcast/hazelcast/pull/10932/">#10932</a></p>
</li>
<li>
<p>The method <code>containsKey</code> returns <code>true</code> even the key does not exist
in the map.
<a href="https://github.com/hazelcast/hazelcast/issues/10923">#10923</a></p>
</li>
<li>
<p>Assuming a scenario in which invalidations are generated previously
for some other near caches and then later a new near cached map is
created, all entries that are near cached before the first
reconciliation period will be removed.
<a href="https://github.com/hazelcast/hazelcast/issues/10913">#10913</a></p>
</li>
<li>
<p>HTTP upload to Hazelcast fails. The code fails with the exception
<code>BufferOverflowException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10878">#10878</a></p>
</li>
<li>
<p>The method <code>MapProxyImpl.executeOnKeys()</code> does not work when
<code>ConcurrentSkipListSet</code> is passed and throws <code>NullPointerException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10877">#10877</a></p>
</li>
</ul>
</div>
<div class="sect3">
<h4 id="known-issues"><a class="anchor" href="#known-issues"></a><a class="link" href="#known-issues">Known Issues</a></h4>
<div class="ulist">
<ul>
<li>
<p><strong>Upgrading from 3.6.x to 3.8.x (Hazelcast IMDG Enterprise) when using
<code>JCache</code>:</strong> Due to a compatibility problem, <code>CacheConfig</code> serialization
may not work if your member is 3.8.x where x &lt; 5. Hence, you will need
to use Hazelcast 3.8.5 or higher version where the problem is being
fixed. This issue affects Hazelcast IMDG Enterprise only.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-8-3"><a class="anchor" href="#3-8-3"></a><a class="link" href="#3-8-3">3.8.3</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for Hazelcast 3.8.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Hazelcast 3.8.1: calling <code>replace(K, old, new)</code> keeps the expiry time
as creation time + duration. But Hazelcast doesn’t seem to honor this
expiration even after calling <code>get()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10817">#10817</a></p>
</li>
<li>
<p>When using a client side Near Cache, the cache statistics seem
incorrect when asking for a key that doesn’t exist.
<a href="https://github.com/hazelcast/hazelcast/issues/10806">#10806</a></p>
</li>
<li>
<p>Ringbuffer is not adjusting <code>headSeq</code> while setting <code>tailSeq</code> due to
capacity. <a href="https://github.com/hazelcast/hazelcast/issues/10774">#10774</a></p>
</li>
<li>
<p>Older versions of Mulesoft clash with Hazelcast Client classpath.
<a href="https://github.com/hazelcast/hazelcast/issues/10706">#10706</a></p>
</li>
<li>
<p>Fixed an issue where <code>NonBlockingIOThread</code> was not shutting down
since a thread interruption could be suppressed/cleared in the flow of
operations; an explicit <code>stop</code> flag has been introduced to close it.
<a href="https://github.com/hazelcast/hazelcast/pull/10651">#10651</a></p>
</li>
<li>
<p>In the case when the master node is terminated in the middle of a
2-phase transaction, the rollback for that transaction is not performed.
This causes loss of data.
<a href="https://github.com/hazelcast/hazelcast/issues/10637">#10637</a></p>
</li>
<li>
<p>Adding/removing listeners fails if a member is removed in the
progress. <a href="https://github.com/hazelcast/hazelcast/issues/10595">#10595</a></p>
</li>
<li>
<p>When two callbacks are registered as callback to
<code>ClientDelegatingFuture</code>, if one of them wants to deserialize the
response while the other is does not, Hazelcast falsely gives null
response to the one waiting a deserialized value.
<a href="https://github.com/hazelcast/hazelcast/issues/10581">#10581</a></p>
</li>
<li>
<p>Eviction and <code>max-size</code> for less then 271 cause map to never populate.
<a href="https://github.com/hazelcast/hazelcast/issues/10179">#10179</a></p>
</li>
<li>
<p><code>IOException</code> at the client side must be produced only if
<code>hazelcast.client.invocation.timeout.seconds</code> is passed.
<a href="https://github.com/hazelcast/hazelcast/issues/9696">#9696</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-8-2"><a class="anchor" href="#3-8-2"></a><a class="link" href="#3-8-2">3.8.2</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for Hazelcast 3.8.2 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Even though a <code>CachePermission</code> already exists, the respective
<code>PermissionType</code> does not exist and cannot be configured
programmatically or declaratively.
<a href="https://github.com/hazelcast/hazelcast/issues/10503">#10503</a></p>
</li>
<li>
<p>Management Center reports incorrect values for backups. Given that
there is one copy of the data across a native map, it is expected to see
identical memory footprint on the entry and the backups with identical
sum across a server. But it is not the case.
<a href="https://github.com/hazelcast/hazelcast/issues/10454">#10454</a></p>
</li>
<li>
<p>There is a memory leak caused by <code>ThreadGroup</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10394">#10394</a></p>
</li>
<li>
<p>Split-Brain messages still occupy the memory after recovery.
<a href="https://github.com/hazelcast/hazelcast/issues/10325">#10325</a></p>
</li>
<li>
<p>When shutting down a client with a topic subscription, it logs a
warning level exception which seems harmless. It is not good to log a
harmless exception as warning.
<a href="https://github.com/hazelcast/hazelcast/issues/10291">#10291</a></p>
</li>
<li>
<p>There is a race condition in the back pressure at the client side
which causes the back pressure not to work.
<a href="https://github.com/hazelcast/hazelcast/issues/10253">#10253</a></p>
</li>
<li>
<p>Ringbuffer OutOfMemoryError: GC overhead limit exceeded.
<a href="https://github.com/hazelcast/hazelcast/issues/10189">#10189</a></p>
</li>
<li>
<p><code>ClientContext</code> is created for every proxy and it causes unneeded
resource allocations.
<a href="https://github.com/hazelcast/hazelcast/issues/10117">#10117</a></p>
</li>
<li>
<p>Hazelcast terminates listeners incorrectly.
<a href="https://github.com/hazelcast/hazelcast/issues/10101">#10101</a></p>
</li>
<li>
<p>When hostname is used in the Hazelcast member configuration instead of
IP address, <code>NullPointerException</code> is thrown.
<a href="https://github.com/hazelcast/hazelcast/issues/9884">#9884</a></p>
</li>
<li>
<p>When using a Hazelcast Client instance, if the <code>redoOperation</code> is set
to true, operations which failed to be sent to the cluster are retried,
but failures from executing the operation itself in the cluster are not.
<a href="https://github.com/hazelcast/hazelcast/issues/8545">#8545</a></p>
</li>
<li>
<p>Hot Restart fails when map has an index configured. #1430</p>
</li>
<li>
<p>License key HD check is not done until second node joins. #1329</p>
</li>
</ul>
</div>
<div class="sect3">
<h4 id="behavioral-changes"><a class="anchor" href="#behavioral-changes"></a><a class="link" href="#behavioral-changes">Behavioral Changes</a></h4>
<div class="ulist">
<ul>
<li>
<p>Starting with 3.8.2, members with the same group name but with
different group passwords (that do not use authentication) form a
cluster. Before this release, group passwords needed to be the same too.
Please see
<a href="http://docs.hazelcast.org/docs/3.8.2/manual/html-single/index.html#creating-cluster-groups">Cluster
Groups</a> for more information on creating cluster groups.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-8-1"><a class="anchor" href="#3-8-1"></a><a class="link" href="#3-8-1">3.8.1</a></h3>
<div class="paragraph">
<p>The following are the enhancements introduced with 3.8.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Mutual authentication with TLS certificates: It allows the clients
also to have their keyStores and members to have their trustStores so
that the members can know which clients they can trust.</p>
</li>
<li>
<p>Introduced Offloadable and Readonly entry processors in order to
significantly improve entry processors’ throughput. Please see the
<a href="http://docs.hazelcast.org/docs/3.9/manual/html-single/index.html#entry-processor-performance-optimizations">Entry
Processor Performance Optimizations section</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the fixed issues for Hazelcast 3.8.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>BackupEntryProcessor</code> returned from <code>AbstractEntryProcessor</code> does not
support <code>HazelcastInstanceAware</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10083">#10083</a></p>
</li>
<li>
<p>Updates performed with IMap’s <code>putTransient</code> method should trigger
<code>EntryUpdatedListener</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/10077">#10077</a></p>
</li>
<li>
<p>Missing documentation for configuring log4j2 as logging framework.
<a href="https://github.com/hazelcast/hazelcast/issues/9970">#9970</a></p>
</li>
<li>
<p>Management Center section in the Reference Manual is misleading when
it explains tool’s behavior for clusters having more than two members.
<a href="https://github.com/hazelcast/hazelcast/issues/9969">#9969</a></p>
</li>
<li>
<p>JCache bootstrap should have a way to reconciliate the existing
<code>HazelcastInstance</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/9958">#9958</a></p>
</li>
<li>
<p>Multicast configuration’s <code>trusted-interfaces</code> element is not handled
properly on startup of the members.
<a href="https://github.com/hazelcast/hazelcast/issues/9953">#9953</a></p>
</li>
<li>
<p>For Hazelcast 3.7.*, MigrationListener’s <code>migrationStarted</code> and
<code>migrationCompleted</code> methods are called for all partitions.
<a href="https://github.com/hazelcast/hazelcast/issues/9919">#9919</a></p>
</li>
<li>
<p>While performing async operations test, OOME is thrown due to
exceeding garbage collection overhead, at the client side.
<a href="https://github.com/hazelcast/hazelcast/issues/9665">#9665</a></p>
</li>
<li>
<p>Behavior of aggregators when extracted value is null should be
well-documented.
<a href="https://github.com/hazelcast/hazelcast/issues/9858">#9858</a></p>
</li>
<li>
<p>Hazelcast Java client disconnects from the cluster with heartbeat
problems. <a href="https://github.com/hazelcast/hazelcast/issues/8956">#8956</a></p>
</li>
<li>
<p>Currently the near cache updates does not guarantee the order of
events for a certain key. The updates are performed via asynchronous
executor runs and it does not guarantee the order of updates.
Furthermore, the invalidations via event service is also not ordered.
<a href="https://github.com/hazelcast/hazelcast/issues/8652">#8652</a></p>
</li>
<li>
<p>Client’s near cache implementation uses <code>userExecutor</code> which is also
used for other purposes such as making callbacks to lifecycle listeners.
A client may block an operation of the near cache updates by a slow
lifecycle listener. This needs to be addressed.
<a href="https://github.com/hazelcast/hazelcast/issues/8651">#8651</a></p>
</li>
<li>
<p>Client has a configurable
<code>hazelcast.client.max.concurrent.invocations</code> property which limits the
outstanding client requests. It is observed that at some cases, for
async calls, it is possible that this limit may not work as expected and
this may cause outstanding requests to grow which may cause OOM.
<a href="https://github.com/hazelcast/hazelcast/issues/8568">#8568</a></p>
</li>
<li>
<p>When using a Hazelcast Client instance, if the <code>redoOperation</code> is set
to true, operations which failed to be sent to the cluster are retried,
but failures from executing the operation itself in the cluster are not.
<a href="https://github.com/hazelcast/hazelcast/issues/8545">#8545</a></p>
</li>
<li>
<p>While updating the Hazelcast maps in the clustered environment, the
exception <code>TargetNotMember</code> is thrown.
<a href="https://github.com/hazelcast/hazelcast/issues/7584">#7584</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-8"><a class="anchor" href="#3-8"></a><a class="link" href="#3-8">3.8</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements, fixed issues and,
removed or deprecated features for 3.8 release.</p>
</div>
<div class="sect3">
<h4 id="features-38"><a class="anchor" href="#features-38"></a><a class="link" href="#features-38">New Features</a></h4>
<div class="paragraph">
<p>The following are the new features introduced with 3.8 release.</p>
</div>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Enterprise Features:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Rolling Member Upgrades for Minor Releases</strong>: You can upgrade your
Hazelcast members to the next minor release without service
interruption. See the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#rolling-member-upgrades">Rolling Member Upgrades chapter</a>.</p>
</li>
<li>
<p><strong>Restore Hot Restart Data in a Different Cluster</strong>: You will be able to
restore Hot Restart data on a completely new cluster with different IP
addresses or on a cluster of machines formed by existing and new IP
addresses. Since this is a removal of a restriction or limitation,
nothing will change for current Hot Restart Store users. See
the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#moving-copying-hot-restart-data">Moving/Copying Hot Restart Data section</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong><em>Hazelcast IMDG Open Source Features:</em></strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Continuous Query Cache</strong>: With this release, the previously Enterprise
feature Continuous Query Cache becomes open source. See the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#continuous-query-cache">Continuous Query Cache section</a>.</p>
</li>
<li>
<p><strong>Cardinality Estimator</strong>: Cardinality Estimator data structure is
implemented on top of Hazelcast to estimate cardinality. See
the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#cardinality-estimator-service">Cardinality Estimator Service section</a>.</p>
</li>
<li>
<p><strong>Scheduled Executor Service</strong>: Distributed implementation of Java’s
<code>ScheduledExecutorService</code> API. See the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#scheduled-executor-service">Scheduled Executor
Service section</a>.</p>
</li>
<li>
<p><strong>User Code Deployment</strong>: Load your new classes to Hazelcast IMDG
members dynamically without restarting all of them.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enhancements-38"><a class="anchor" href="#enhancements-38"></a><a class="link" href="#enhancements-38">Enhancements</a></h4>
<div class="paragraph">
<p>The following are the enhancements introduced with 3.8 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Fast Aggregations for Queries</strong>: See the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#fast-aggregations">Fast Aggregations
section</a>.</p>
</li>
<li>
<p><strong>Projections for Queries</strong>: See the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#projections">Projections section</a>.</p>
</li>
<li>
<p><strong>Eventually Consistent Near Cache</strong>: With this improvement, possible
losses of invalidation events are detected and stale reads are
prevented. See the <a href="http://docs.hazelcast.org/docs/latest/manual/html-single/index.html#eventual-consistency">Near Cache Eventual Consistency section</a>.</p>
</li>
<li>
<p><strong>Cluster Split-Brain Protection for Queue and Lock</strong>: Split-brain
protection is now available for the queue and lock data structures.
See the sections <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#split-brain-protection-for-lock">Lock Split-Brain Protection</a> and <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#split-brain-protection-for-queue">Queue
Split-Brain Protection.</a></p>
</li>
<li>
<p><strong>Unified Near Cache Implementation</strong>: Different near cache
implementations for JCache, map, client side and member side are
unified. See the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#near-cache">Near Cache section</a>.</p>
</li>
<li>
<p><strong>High Performance Near Cache</strong>: A near cache preloader is introduced to
preserve the information about which keys are used in a populated near
cache. See the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#near-cache-preloader">Near Cache Preloader section</a>.</p>
</li>
<li>
<p><strong><code>removeAll(predicate)</code> for Map</strong>: You can remove all map entries that
match your predicate. See the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#removing-bulk-map-entries-with-predicates">Removing Bulk Map Entries
with Predicates section</a>.</p>
</li>
<li>
<p><strong>Ringbuffer with Persistent Datastore</strong>: Implemented for the Ringbuffer
which is similar to the existing queue store mechanism. See the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#ringbuffer-with-persistent-datastore">Ringbuffer with Persistent Datastore section</a>.</p>
</li>
<li>
<p><strong>Hazelcast Striim Hot Cache Adapter</strong>: Hot Cache functionality based on
Striim’s Change Data Capture (CDC) for the underlying database updates.
Note that this enhancement is available for Hazelcast Enterprise.
See the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#hazelcast-striim-hot-cache">Hazelcast Striim Hot Cache section</a>.</p>
</li>
<li>
<p><strong>One-off WAN Synchronization with Dynamically Added Endpoint</strong>:
Improvement to allow copying the maps’ all content to a target cluster
dynamically in runtime. Note that this enhancement is available
for Hazelcast Enterprise.</p>
</li>
<li>
<p><strong>Hot Restart Usability Improvements</strong>: When a cluster with Hot Restart
enabled is restarted, it starts in the ACTIVE state. Note that
this enhancement is available for Hazelcast Enterprise. See
the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#hot-restart-types">Hot Restart Types section</a>.</p>
</li>
<li>
<p><strong>Hot Restart with Incomplete Members</strong>: The restart procedure for a
cluster having Hot Restart enabled is now more flexible by allowing you
to do a partial start, which basically means that once the cluster is
shutdown, it can be restarted with some missing members. Note
that this enhancement is available for Hazelcast Enterprise. See the
<a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#partial-start">Partial Start section</a>.</p>
</li>
<li>
<p><strong>Copy Hot Restart Store data from Source to Target</strong>: You can copy Hot
Restart Store data from a running cluster to a target without shutting
down the source cluster. Note that this enhancement is available
for Hazelcast Enterprise. See the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#movingcopying-hot-restart-data">Moving/Copying Hot Restart Data section</a>.</p>
</li>
<li>
<p><strong>Improvement in WAN Queue Full Behavior</strong>: Now, Hazelcast throws an
exception when the queue is full and replication is active, unless it is
stopped on the Management Center. Note that this enhancement is
available for Hazelcast Enterprise. See the <a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#queue-full-behavior">Queue Full
Behavior section</a>.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the other improvements performed to solve the
enhancement issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Currently there are only MERGING and MERGED states for lifecycle, but
no event is fired for a failed merge. This would be informative and
further give an idea to user to understand a reason of a SHUTTING_DOWN
event since a failed merge is followed by a shutdown. <a href="https://github.com/hazelcast/hazelcast/issues/9856">#9856</a></p>
</li>
<li>
<p>Tests are needed to prove that <code>removeAll</code> does not deserialize
portables. <a href="https://github.com/hazelcast/hazelcast/issues/9474">#9474</a></p>
</li>
<li>
<p>Client support for distributed scheduled executor service. <a href="https://github.com/hazelcast/hazelcast/issues/9385">#9385</a></p>
</li>
<li>
<p>When a member without JCache service joins a cluster where JCache
service is enabled but not used, the member should not fail. <a href="https://github.com/hazelcast/hazelcast/issues/9301">#9301</a></p>
</li>
<li>
<p>It would be nice to have names assigned to all threads created by
Hazelcast (and not the default ones, e.g., <code>pool-2-thread-1</code>,
<code>pool-2-thread-2</code>). <a href="https://github.com/hazelcast/hazelcast/issues/9210">#9210</a></p>
</li>
<li>
<p>There should be a more detailed and clarifying information in the
diagnostics of <code>PartitionIteratingOperation</code>. <a href="https://github.com/hazelcast/hazelcast/issues/8855">#8855</a></p>
</li>
<li>
<p>When there is no access to <code>NodeEngine</code>, the logger should be able to
be used from a static context without any side effects to the logging
configuration. <a href="https://github.com/hazelcast/hazelcast/issues/8760">#8760</a></p>
</li>
<li>
<p>Client tasks should be bounced back when a member has not completely
start yet. <a href="https://github.com/hazelcast/hazelcast/issues/8715">#8715</a></p>
</li>
<li>
<p>A method <code>size(Predicate)</code> should be added to determine the size of
predicate results. <a href="https://github.com/hazelcast/hazelcast/issues/8555">#8555</a></p>
</li>
<li>
<p>Currently the property
<code>com.hazelcast.map.impl.eviction.ExpirationManager.PERIOD</code> is hard-coded
to 5 seconds. Making it a configurable property will help in tuning the
eviction. <a href="https://github.com/hazelcast/hazelcast/issues/8277">#8277</a></p>
</li>
<li>
<p>The method <code>com.hazelcast.topic.impl.TopicProxy#publish</code> serializes
the message even if the message is never sent due to having no
subscribers. In the case of non-global-ordering and non-client use, the
implementation should defer serialization until it has established that
there are subscribers. <a href="https://github.com/hazelcast/hazelcast/issues/8262">#8262</a></p>
</li>
<li>
<p>Hazelcast should provide an abstract Mapper implementation which
invokes the Supplier given to <code>Aggregation#getMapper()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7477">#7477</a></p>
</li>
<li>
<p>Configuration setting for WAN replication queue should be only for
primary entries. <a href="https://github.com/hazelcast/hazelcast/issues/7124">#7124</a></p>
</li>
<li>
<p>Currently if you want to use Container-Managed Transactions with
Hazelcast within a JEE Application Server, you need to use the provided
JCA Adapter. This JCA Adapter creates a Hazelcast instance. This should
be allowed: configuration of the JCA Adapter to be either Server or
Client-based. <a href="https://github.com/hazelcast/hazelcast/issues/5667">#5667</a></p>
</li>
<li>
<p>Currently <code>PartitionIteratingOperation</code> consumes a generic operation
thread, while the operations for the partitions are running. This means
that the generic thread pool can dry out and this can cause a lot of
problems for important tasks that cannot be executed since the thread
pool is empty. A <code>PartitionIteratingService</code> should be introduced where
the system can lookup TraceableOperations. <a href="https://github.com/hazelcast/hazelcast/issues/4889">#4889</a></p>
</li>
<li>
<p>Hazelcast Shutdown Hook calls the method <code>terminate()</code> instead of
<code>shutdown()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/46468">#4648</a></p>
</li>
<li>
<p>Hazelcast should support <code>ScheduledExecutorService</code>. <a href="https://github.com/hazelcast/hazelcast/issues/115">#115</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-38"><a class="anchor" href="#fixes-38"></a><a class="link" href="#fixes-38">Fixes</a></h4>
<div class="paragraph">
<p>The following are the issues solved for Hazelcast 3.8 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>TaskDefinition</code> should be removed from the client protocol. <a href="https://github.com/hazelcast/hazelcast/issues/9846">#9846</a></p>
</li>
<li>
<p><code>AggregationResult</code> should be serialized via Codec instead of IDS.
<a href="https://github.com/hazelcast/hazelcast/issues/9845">#9845</a></p>
</li>
<li>
<p><code>MetaDataResponse</code> should be serialized via Codec instead of IDS.
<a href="https://github.com/hazelcast/hazelcast/issues/9844">#9844</a></p>
</li>
<li>
<p>The script <code>stop.bat</code> does not stop the running Hazelcast instances.
<a href="https://github.com/hazelcast/hazelcast/issues/9822">#9822</a></p>
</li>
<li>
<p>The script <code>start.bat</code> allows multiple instances to be started in the
same folder; it should not. <a href="https://github.com/hazelcast/hazelcast/issues/9820">#9820</a></p>
</li>
<li>
<p>Ordering consistency for the the method <code>writePortable</code> should be
explained in the Reference Manual. <a href="https://github.com/hazelcast/hazelcast/issues/9813">#9813</a></p>
</li>
<li>
<p>A client cannot add index to map using Portable values without
registering Portable classes on member. <a href="https://github.com/hazelcast/hazelcast/issues/9808">#9808</a></p>
</li>
<li>
<p>Index is not updated after entry processors change values. <a href="https://github.com/hazelcast/hazelcast/issues/9801">#9801</a></p>
</li>
<li>
<p>When using Entry Processor and index on a field the Entry Processor
uses, wrong data is returned when executing a Predicate. <a href="https://github.com/hazelcast/hazelcast/issues/9798">#9798</a></p>
</li>
<li>
<p><code>NullPointerException</code> in <code>LockServiceImpl</code>: an NPE is thrown in
<code>LockServiceImpl</code> when creating one map with a quorum configuration
(which activates the <code>QuorumServiceImpl</code> for all <code>QuorumAware</code>
operations) and then calling a <code>QuorumAware</code> operation on another data
structure without a quorum configuration. <a href="https://github.com/hazelcast/hazelcast/issues/9792">#9792</a></p>
</li>
<li>
<p><code>ClusterVersion</code> is missing convenience methods for comparing easily.
<a href="https://github.com/hazelcast/hazelcast/issues/9789">#9789</a></p>
</li>
<li>
<p>When scheduling tasks with multiple executors, calling
<code>getAllScheduled</code> on one of them returns tasks scheduled per member but
for all executors, rather than for the one we called the
<code>getAllScheduled</code> from. <a href="https://github.com/hazelcast/hazelcast/issues/9784">#9784</a></p>
</li>
<li>
<p>There are too many log entries when quorum is not present. <a href="https://github.com/hazelcast/hazelcast/issues/9781">#9781</a></p>
</li>
<li>
<p>Hazelcast terminates listener incorrectly. <a href="https://github.com/hazelcast/hazelcast/issues/9766">#9766</a></p>
</li>
<li>
<p>When <code>storeAll</code>/<code>deleteAll</code> methods are used in the MapStore
interface, it is possible that the underlying implementation has
stored/deleted some entries from the supplied batch and then gets an
exception on some particular entry in the middle of the batch. In order
to handle this scenario properly the MapStore could remove from the
supplied batch entries which were properly stored in the underlying
persistent store. The only thing to improve in the
<code>DefaultWiteBehindProcessor</code> is to properly synchronize the map passed
to <code>processBatch</code> method with the initial <code>batchMap</code>. <a href="https://github.com/hazelcast/hazelcast/issues/9733">#9733</a></p>
</li>
<li>
<p>If <code>hazelcast.discovery.enabled</code> on the client side: If neither
<code>DiscoveryServiceProvider</code> nor <code>DiscoveryStrategyConfig</code> is specified,
an NPE is thrown. A more helpful exception should be provided. <a href="https://github.com/hazelcast/hazelcast/issues/9722">#9722</a></p>
</li>
<li>
<p>The <code>hazelcast-all.jar</code>, which is the one included in Hazelcast
Docker, downloaded from Maven repo, contains an outdated version of
<code>hazelcast-aws</code> library. <a href="https://github.com/hazelcast/hazelcast/issues/9698">#9698</a></p>
</li>
<li>
<p>When scheduling on random partitions and trying to get all the
scheduled tasks from the service, the number of tasks is wrong. The
returned figure seems to match <code>num_of_tasks * backup_count</code>. <a href="https://github.com/hazelcast/hazelcast/issues/9694">#9694</a></p>
</li>
<li>
<p>When a scheduled Callable/Runnable throws an exception, invoking
<code>future.get()</code> on the client side does not throw the expected
<code>ExecutionException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/9685">#9685</a></p>
</li>
<li>
<p>The client is not updating listener registrations when the member
restarts with a new version. <a href="https://github.com/hazelcast/hazelcast/issues/9677">#9677</a></p>
</li>
<li>
<p><code>IScheduledExecutorService</code> does not use <code>HazelcastInstanceAware</code> on
local operations. <a href="https://github.com/hazelcast/hazelcast/issues/9675">#9675</a></p>
</li>
<li>
<p>Near cache compatibility with 3.7 clients is broken for TTL
expirations. <a href="https://github.com/hazelcast/hazelcast/issues/9674">#9674</a></p>
</li>
<li>
<p>Fix inconsistent Ringbuffer TTL defaults: when starting a
<code>HazelcastInstance</code> without an explicit configuration
(<code>HazelcastInstance hz = Hazelcast.newHazelcastInstance();</code>), the
default Ringbuffer TTL was 30 seconds, instead of correct value 0. This
change may break existing applications relying on the default
configuration. <a href="https://github.com/hazelcast/hazelcast/issues/9610">#9610</a></p>
</li>
<li>
<p>Replicated Map configured with <code>async-fillup</code> as <code>false</code> prevents
further members from joining the cluster. Members are stuck in an
endless loop. <a href="https://github.com/hazelcast/hazelcast/issues/9592">#9592</a></p>
</li>
<li>
<p>When an exception is thrown from an <code>InitializingObject</code>’s initialize
method, it is logged in WARNING level but then swallowed and the proxy
object is added to the <code>ProxyRegistry</code>. Instead, the exception should
result in removing the object from the <code>ProxyRegistry</code>, as it is already
done for exceptions thrown from <code>service.createDistributedObject</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/9578">#9578</a></p>
</li>
<li>
<p>Near cache pre-loader fails when invalidations are enabled. <a href="https://github.com/hazelcast/hazelcast/issues/9536">#9536</a></p>
</li>
<li>
<p>There is a memory leak in <code>MetaDataGenerator</code> when (1) near cache
invalidations are enabled, (2) map/cache is created and destroyed, and
(3) the map name is stays referenced from <code>MetaDataGenerator</code>. <a href="https://github.com/hazelcast/hazelcast/issues/9495">#9495</a></p>
</li>
<li>
<p>JCache client needs access to <code>CacheLoader</code> implementation to work.
<a href="https://github.com/hazelcast/hazelcast/issues/9453">#9453</a></p>
</li>
<li>
<p>The matching wildcard is strict, but no declaration can be found for
element <code>hz:hazelcast</code>. <a href="https://github.com/hazelcast/hazelcast/issues/9406">#9406</a></p>
</li>
<li>
<p><code>Connection Reset</code> warning shows up in the class <code>CloudyUtility</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/9404">#9404</a></p>
</li>
<li>
<p>Key state marking in near cached <code>getAll</code> should be improved. Instead
of key based marking, partition based approach can be used. <a href="https://github.com/hazelcast/hazelcast/issues/9403">#9403</a></p>
</li>
<li>
<p>Scheduled executor service tests are too slow. <a href="https://github.com/hazelcast/hazelcast/issues/9386">#9386</a></p>
</li>
<li>
<p>The method <code>getAll</code> is not updating the <code>localMapStats</code>. <a href="https://github.com/hazelcast/hazelcast/issues/9373">#9373</a></p>
</li>
<li>
<p>Hazelcast 3.7.3 and Spring Boot 1.4.2 get the error
<code>PortableFactory[-22] is already registered</code>. <a href="https://github.com/hazelcast/hazelcast/issues/9353">#9353</a></p>
</li>
<li>
<p>There is an issue when integrating with WebLogic 12c. Classloading
logging should be added when <code>DefaultNodeExtension</code> is loaded by
multiple classloaders. <a href="https://github.com/hazelcast/hazelcast/issues/9291">#9291</a></p>
</li>
<li>
<p>The method <code>MapLoader.loadAll(true)</code> does not reload after reloading
with new keys. <a href="https://github.com/hazelcast/hazelcast/issues/9255">#9255</a></p>
</li>
<li>
<p>Problems with timeout in blocking calls. <a href="https://github.com/hazelcast/hazelcast/issues/9250">#9250</a></p>
</li>
<li>
<p>Stale reads from Map inside a transaction should be guaranteed, when
Near Cache and delayed MapStore are enabled. <a href="https://github.com/hazelcast/hazelcast/issues/9248">#9248</a></p>
</li>
<li>
<p>Client protocol cannot handle <code>null</code>s in the collection. <a href="https://github.com/hazelcast/hazelcast/issues/9240">#9240</a></p>
</li>
<li>
<p><code>LifecycleState</code> events are not received when Hazelcast docker image
is used. <a href="https://github.com/hazelcast/hazelcast/issues/9189">#9189</a></p>
</li>
<li>
<p>If there is no network, multicast socket exception is thrown. <a href="https://github.com/hazelcast/hazelcast/issues/9081">#9081</a></p>
</li>
<li>
<p>Hazelcast is not handling XML configuration attribute for
<code>DurableExecutorService</code>. <a href="https://github.com/hazelcast/hazelcast/issues/9078">#9078</a></p>
</li>
<li>
<p>If <code>DurableExecutorService.retrieveResult(long)</code> is run from a client
for a task that does not exist, two exceptions appear at the client
side. At the member side, it logs <code>StaleTaskIdException</code>. This should
not be logged to the member if re-thrown to the client. <a href="https://github.com/hazelcast/hazelcast/issues/9051">#9051</a></p>
</li>
<li>
<p>When retrieving data from Java Hazelcast instance,
<code>HazelcastSerializationException</code> is thrown from the .NET client. <a href="https://github.com/hazelcast/hazelcast/issues/8985">#8985</a></p>
</li>
<li>
<p>Callback for time to live (for map eviction) is invoked with a
significant delay. <a href="https://github.com/hazelcast/hazelcast/issues/8894">#8894</a></p>
</li>
<li>
<p><code>Warning 2</code> in <code>IMap::tryRemove</code> method’s code comments is not
correct. This method returns only a boolean. <a href="https://github.com/hazelcast/hazelcast/issues/8884">#8884</a></p>
</li>
<li>
<p>There are too many log messages when members of a cluster are not
joined to another cluster (multicast) having a different group name in
Hazelcast 3.6 and 3.7, which is already expected. <a href="https://github.com/hazelcast/hazelcast/issues/8867">#8867</a></p>
</li>
<li>
<p>When clients lose connection to the members in the cluster, even after
the clients are reconnected to the cluster, the Entry/Message Listeners
are never fired again. <a href="https://github.com/hazelcast/hazelcast/issues/8847">#8847</a></p>
</li>
<li>
<p>Nested queries on <code>VersionedPortables</code> with different versions cannot
be performed. Hazelcast throws IllegalArgumentException. <a href="https://github.com/hazelcast/hazelcast/issues/8846">#8846</a></p>
</li>
<li>
<p>Fixed <code>max-size</code> value behavior for Near Cache configuration. If you
set 0 for the <code>max-size</code>, now, it is valued as <code>Integer.MAX_VALUE</code> as
expected and documented. <a href="https://github.com/hazelcast/hazelcast/issues/8826">#8826</a></p>
</li>
<li>
<p>While generating the XML string from a configuration object in
<code>ConfigXmlGenerator.generate()</code> method, <code>native-memory</code> configuration is
not appended to the result string. This causes the <code>native-memory</code>
configuration for members not to be shown on the Management Center.
<a href="https://github.com/hazelcast/hazelcast/issues/8825">#8825</a></p>
</li>
<li>
<p><code>Client heartbeat is timed out, closing connection</code> warning shows
up indefinitely on AWS. <a href="https://github.com/hazelcast/hazelcast/issues/8777">#8777</a></p>
</li>
<li>
<p>Spring XML configuration: The smart routing attribute defaults to
false while the documentation says it defaults to true. <a href="https://github.com/hazelcast/hazelcast/issues/8746">#8746</a></p>
</li>
<li>
<p>Distributed objects present in the cluster do not show the same
values. <a href="https://github.com/hazelcast/hazelcast/issues/8743">#8743</a></p>
</li>
<li>
<p>In Hazelcast 3.6.3, the error
<code>Current thread is not owner of the lock</code> shows up when using Hazelcast
client to perform the actions. <a href="https://github.com/hazelcast/hazelcast/issues/8730">#8730</a></p>
</li>
<li>
<p>There is an unchecked <code>CancelledKeyException</code> when client disconnects
from the cluster. <a href="https://github.com/hazelcast/hazelcast/issues/8681">#8681</a></p>
</li>
<li>
<p>Bulk <code>get</code> operation with 100 keys fails. <a href="https://github.com/hazelcast/hazelcast/issues/8535">#8535</a></p>
</li>
<li>
<p>An <code>IllegalThreadStateException</code> may be thrown sometimes on a member
of a cluster with two or more members when a Hazelcast client creates a
new map with configured indexes. This exception is not thrown when
indexes are created programmatically. <a href="https://github.com/hazelcast/hazelcast/issues/8492">#8492</a></p>
</li>
<li>
<p>Group and password attributes in Hibernate integration module should
be validated. <a href="https://github.com/hazelcast/hazelcast/issues/7978">#7978</a></p>
</li>
<li>
<p>There appears to be an inconsistency where JCache uses the
<code>EvictionConfig</code> object, but IMap directly uses properties of the
<code>NearCacheConfig</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7788">#7788</a></p>
</li>
<li>
<p>Topic listeners are lost after merging from a split-brain scenario.
<a href="https://github.com/hazelcast/hazelcast/issues/7742">#7742</a></p>
</li>
<li>
<p>Member attributes go missing after merging from a split-brain
scenario. <a href="https://github.com/hazelcast/hazelcast/issues/7697">#7697</a></p>
</li>
<li>
<p>There should be a distributed class loading feature to perform
distributed loading of classes so that jobs like MapReduce and Aggregate
can be done more effectively. <a href="https://github.com/hazelcast/hazelcast/issues/7394">#7394</a></p>
</li>
<li>
<p>MapLoader misses state updates on second load on the receiver members.
<a href="https://github.com/hazelcast/hazelcast/issues/7364">#7364</a></p>
</li>
<li>
<p>If the system retries an operation because a member is leaving the
cluster, the invocation can be retried due to the response but also due
to the <code>member-left</code> event. In most cases this should not lead to a
problem, but the invocation may be executed twice. This can be a problem
and can lead to a permanent inconsistent system. <a href="https://github.com/hazelcast/hazelcast/issues/7270">#7270</a></p>
</li>
<li>
<p>Using Lock and Map, the heap memory on Hazelcast server keeps
increasing. All the created Locks and Maps are destroyed by the method
<code>destroy()</code>, but the memory cannot be destroyed by the garbage collector
even via FGC. When an application runs for some time, Hazelcast server
goes down. <a href="https://github.com/hazelcast/hazelcast/issues/7246">#7246</a></p>
</li>
<li>
<p>Hazelcast 3.5 throws <code>InvalidConfigurationException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/6523">#6523</a></p>
</li>
<li>
<p>More granular mutexes should be used when creating and removing a set
of closeable cache resources. <a href="https://github.com/hazelcast/hazelcast/issues/6273">#6273</a></p>
</li>
<li>
<p>Running <code>PredicateBuilder</code> queries when nodes join causes timeouts and
cluster crash. <a href="https://github.com/hazelcast/hazelcast/issues/6242">#6242</a></p>
</li>
<li>
<p>The method <code>setEvictionPolicy</code> for near cache configuration wants a
string argument whereas the same for map configuration wants an enum
value. <a href="https://github.com/hazelcast/hazelcast/issues/2010">#2010</a></p>
</li>
<li>
<p>The configuration schemas Hazelcast Spring XSD and Hazelcast default
configuration XSD are out of sync. They must have the same elements.
<a href="https://github.com/hazelcast/hazelcast/issues/5034">#5034</a></p>
</li>
<li>
<p>Enterprise DataSerializable serializer should take the output version into account. [1295]</p>
</li>
<li>
<p>The method IMap.keyset() throws ClassCastException when Hot Restart is enabled. [1270]</p>
</li>
<li>
<p>High-Density backed near cache calculates the entry cost in a different way than map. [1260]</p>
</li>
<li>
<p>JVM crashes for NATIVE in-memory format for near cache preloader. [1228]</p>
</li>
<li>
<p>Hazelcast Enterprise HD on Docker: Incorrect memory check message. [1215]</p>
</li>
<li>
<p>Near cache configuration should fail for the clients when cacheLocalEntries is true. [1183]</p>
</li>
<li>
<p>There should be a WAN replication option to throw exception, except when replication is stopped. [1120]</p>
</li>
<li>
<p>When stopping WAN replication on a member, this should be logged. [1119]</p>
</li>
<li>
<p>Forced Eviction mechanism should be described in the Reference Manual. [1066]</p>
</li>
<li>
<p>Hazelcast Enterprise should display which revision of Hazelcast open source was used. [1033]</p>
</li>
<li>
<p>Poor error message when Native Memory is disabled yet High-Density backed IMap is used. [573]</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="bc-38"><a class="anchor" href="#bc-38"></a><a class="link" href="#bc-38">Behavioral Changes</a></h4>
<div class="ulist">
<ul>
<li>
<p>A separate thread pool for query requests coming from the clients has
been introduced. The goal for this is to avoid <code>OutOfMemoryException</code> s
under heavy query load. This separate thread pool’s size is configurable
via the system property <code>hazelcast.clientengine.query.thread.count</code>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="rd-38"><a class="anchor" href="#rd-38"></a><a class="link" href="#rd-38">Removed/Deprecated Features</a></h4>
<div class="ulist">
<ul>
<li>
<p>Aggregators feature is deprecated. Instead, Fast-Aggregations feature
should be used.</p>
</li>
<li>
<p>MapReduce feature is deprecated. See the
<a href="http://docs.hazelcast.org/docs/3.8/manual/html-single/index.html#mapreduce-deprecation">MapReduce
Deprecation section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-38"><a class="anchor" href="#contributors-38"></a><a class="link" href="#contributors-38">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/LoneRifle">LoneRifle</a></p>
</li>
<li>
<p><a href="https://github.com/cpiotr">Piotr Ciruk</a></p>
</li>
<li>
<p><a href="https://github.com/rvanheest">Richard van Heest</a></p>
</li>
<li>
<p><a href="https://github.com/kedar-joshi">Kedar Joshi</a></p>
</li>
<li>
<p><a href="https://github.com/fredang">Frederic Dang Ngoc</a></p>
</li>
<li>
<p><a href="https://github.com/dsukhoroslov">Denis Sukhoroslov</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-7-8"><a class="anchor" href="#3-7-8"></a><a class="link" href="#3-7-8">3.7.8</a></h3>
<div class="paragraph">
<p>The following is the fixed issue for 3.7.8 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>When the cluster state is <code>PASSIVE</code>, the background expiration task
can get an exception (in <code>ClearExpiredOperation</code>) during execution. But
after the cluster state transitions to <code>ACTIVE</code>, it should continue to
process. The task’s progress conditions should be reset in case of any
execution exception. <a href="https://github.com/hazelcast/hazelcast/issues/10636">#10636</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-7-7"><a class="anchor" href="#3-7-7"></a><a class="link" href="#3-7-7">3.7.7</a></h3>
<div class="paragraph">
<p>The following is the fixed issue for 3.7.7 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Servers should throw exception when message type is not known. Client
protocol is defined to throw an exception when a client sends a client
message with unknown type to server. <a href="https://github.com/hazelcast/hazelcast/issues/10196">#10196</a>, <a href="https://github.com/hazelcast/hazelcast/issues/10203">#10203</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-7-6"><a class="anchor" href="#3-7-6"></a><a class="link" href="#3-7-6">3.7.6</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.7.6 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>In the case of using multiple lite members with near cache, when a
<code>clear</code> is called it tries to use the same operation and results in
<code>IllegalStateException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/9879">#9879</a></p>
</li>
<li>
<p>Near cache eviction does not work. <a href="https://github.com/hazelcast/hazelcast/issues/9723">#9723</a></p>
</li>
<li>
<p>Connection exception is logged in <code>ClientListenerSupport</code> after the
client disconnects. <a href="https://github.com/hazelcast/hazelcast/issues/9709">#9709</a></p>
</li>
<li>
<p>IMap entry eviction issue; some keys stay forever. <a href="https://github.com/hazelcast/hazelcast/issues/9095">#9095</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-7-5"><a class="anchor" href="#3-7-5"></a><a class="link" href="#3-7-5">3.7.5</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.7.5 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Map statistics are disappeared in Management Center when the member is
restarted. <a href="https://github.com/hazelcast/hazelcast/issues/9590">#9590</a></p>
</li>
<li>
<p>Clients are not updated when <code>DistributedObject</code> is removed from the
member. <a href="https://github.com/hazelcast/hazelcast/issues/">#9457</a>, <a href="https://github.com/hazelcast/hazelcast/issues/9243">#9423</a></p>
</li>
<li>
<p>Hazelcast Management Center is not working with Tomcat 8 and higher.
<a href="https://github.com/hazelcast/hazelcast/issues/9452">#9452</a></p>
</li>
<li>
<p><code>TextReadHandler</code> (for REST and Memcache) commands has a size
restriction. Large responses cannot be handled. There is a hardcoded
buffer size in <code>TextReadHandler</code> but it should be converted as dynamic
so that it can handle responses of any size. <a href="https://github.com/hazelcast/hazelcast/issues/9355">#9355</a></p>
</li>
<li>
<p>The configuration schema <code>hazelcast-spring.xsd</code> should use <code>&lt;xs:all&gt;</code>
instead of <code>&lt;xs:sequence&gt;</code> for <code>hazelcast-bean</code> base type. <a href="https://github.com/hazelcast/hazelcast/issues/9289">#9289</a></p>
</li>
<li>
<p>Stuck threads are seen in Hazelcast 3.6.2 client when session
replication is used. <a href="https://github.com/hazelcast/hazelcast/issues/9060">#9060</a></p>
</li>
<li>
<p>When cluster service starts when a member starts, it registers itself
as the only member and publishes the membership event. <code>QuorumService</code>
is a <code>MembershipAwareService</code>, therefore it is expected to update
quorums when it receives these membership events. The problem is as
follows: services are not registered to <code>ServiceManager</code> yet when the
cluster service publishes this event on a member start. So, it seems
that <code>QuorumService</code> is missing it and failing to update its internal
quorum status. <a href="https://github.com/hazelcast/hazelcast/issues/8820">#8820</a></p>
</li>
<li>
<p>Client disconnection leads to a stuck <code>clusterExecutor</code> shutdown in
Hazelcast 3.6.2. <a href="https://github.com/hazelcast/hazelcast/issues/8721">#8721</a></p>
</li>
<li>
<p>Near cache updates may cause <code>OutOfMemoryException</code> under high load
and high number of <code>ICache.getAsync</code> calls. <a href="https://github.com/hazelcast/hazelcast/issues/8593">#8593</a></p>
</li>
<li>
<p>The tag <code>hot-restart</code> cannot resolve the placeholder for the value of
<code>enabled</code> and <code>fsync</code> within Spring context. <a href="https://github.com/hazelcast/hazelcast/issues/8500">#8500</a></p>
</li>
<li>
<p><code>HazelcastInstanceAware</code> should be supported for <code>QuorumFunction</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/7499">#7499</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-7-4"><a class="anchor" href="#3-7-4"></a><a class="link" href="#3-7-4">3.7.4</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.7.4 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Client protocol should be updated to support old .NET clients that
have an issue preventing them to connect to 3.7.3 and newer clusters.
<a href="https://github.com/hazelcast/hazelcast/issues/9388">#9388</a></p>
</li>
<li>
<p>Fixed <code>keyStateMarker</code> problems. <a href="https://github.com/hazelcast/hazelcast/issues/9382">#9382</a></p>
</li>
<li>
<p>When nodes terminates concurrently, clusterService.removeAddress can
fail because target node is already shutdown. <a href="https://github.com/hazelcast/hazelcast/issues/9324">#9324</a></p>
</li>
<li>
<p>Cache event listeners trigger multiple events when the listener is
configured declaratively (XML). <a href="https://github.com/hazelcast/hazelcast/issues/9315">#9315</a></p>
</li>
<li>
<p>When client is connected and the client process is paused, e.g., using
a debugger, then the member starts printing the warning message
(<code>Client heartbeat is timed out</code>) every 10 seconds. <a href="https://github.com/hazelcast/hazelcast/issues/9308">#9308</a></p>
</li>
<li>
<p>Hazelcast client outside the AWS cloud cannot connect to Hazelcast
member inside the AWS cloud. <a href="https://github.com/hazelcast/hazelcast/issues/9290">#9290</a></p>
</li>
<li>
<p>In case of a retrying operation, an old heartbeat could still be
stored on the invocation. If the invocation monitor sees this, it does
not understand that this is from an old invocation. It concludes that
the invocation has not received any recent heartbeats and aborts the
invocation. <a href="https://github.com/hazelcast/hazelcast/issues/9287">#9287</a></p>
</li>
<li>
<p>Client endpoint may have a different connection than the one it was
initially constructed. <a href="https://github.com/hazelcast/hazelcast/issues/9282">#9282</a></p>
</li>
<li>
<p>The method <code>loadAll(keys)</code> has to notify <code>RecordStores</code> about the end
of loading. <a href="https://github.com/hazelcast/hazelcast/issues/9260">#9260</a></p>
</li>
<li>
<p>Partitions should be unavailable/inaccessible until
<code>MigrationAwareServices</code> complete commit/rollback during migration
and/or promotion. <a href="https://github.com/hazelcast/hazelcast/issues/9235">#9235</a></p>
</li>
<li>
<p>When backups are reordered and a backup with a version greater than
(localVersion + 1) is received, backup is applied but partition replica
versions are not updated. <a href="https://github.com/hazelcast/hazelcast/issues/9206">#9206</a></p>
</li>
<li>
<p>Continuous query cache license checks should be removed. #1185</p>
</li>
<li>
<p>Hazelcast Enterprise license could not be found, but no exception is thrown to user. #1100</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-7-3"><a class="anchor" href="#3-7-3"></a><a class="link" href="#3-7-3">3.7.3</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.7.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>MapLoader.loadAll(true)</code> does not reload after reloading with given
keys. <a href="https://github.com/hazelcast/hazelcast/issues/9263">#9263</a></p>
</li>
<li>
<p>The <code>scheduler</code> in <code>TcpIpConnectionManager</code> is not completing after
the method <code>instance.shutdown()</code> is called. <a href="https://github.com/hazelcast/hazelcast/issues/9187">#9187</a></p>
</li>
<li>
<p><code>EntryView</code>’s <code>storeTime</code> and <code>expirationTime</code> are not available even
though they are set. <a href="https://github.com/hazelcast/hazelcast/issues/9166">#9166</a></p>
</li>
<li>
<p><code>NullPointerException</code> is thrown while deleting an entry through Entry
Processor by setting value to NULL. <a href="https://github.com/hazelcast/hazelcast/issues/9135">#9135</a></p>
</li>
<li>
<p>There is a discrepancy between the Reference Manual and source code in
the default value of <code>hazelcast.heartbeat.interval.seconds</code>. <a href="https://github.com/hazelcast/hazelcast/issues/9070">#9070</a></p>
</li>
<li>
<p>When Hazelcast is upgraded from 3.6.5 to 3.7.1, calls to Spring cache
generate exceptions. <a href="https://github.com/hazelcast/hazelcast/issues/9023">#9023</a></p>
</li>
<li>
<p>Hazelcast 3.6.x client cannot obtain cache proxy from 3.7.x cluster.
Configuration creation and retrieval seem to be not working on 3.6.x
clients when they connect to a 3.7.x cluster. Two new system properties
added, namely <code>hazelcast.compatibility.3.6.server</code> and
<code>hazelcast.compatibility.3.6.client</code>. When upgrading from (assuming that
you are using ICache) 3.6.x to 3.7.3 then the servers should be started
with <code>-Dhazelcast.compatibility.3.6.client=true</code> to enable existing
3.6.x clients work properly. When upgrading from 3.7.1 and 3.7.2 to
3.7.3 this is not needed.https://github.com/hazelcast/hazelcast/issues/9006[#9006]</p>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Please note that there is no change in the Hazelcast cluster
member upgrade procedure; the cluster members cannot have mixed major
versions (e.g., a cluster of 3.6.x member and 3.7.x member). The above
change only relates to clients (the mixed clients are supported starting
from version 3.6 with the Open Binary Client Protocol). Hence, you can
have a 3.6.x client running with a 3.7.x cluster.
</td>
</tr>
</table>
</div>
</li>
<li>
<p>When clients lose connection to the nodes in the cluster, even after
the clients reconnected to the cluster, the Entry/MessageListeners never
fired again. When you register a listener, the registration to the
members are invoked with a timeout value of connection-timeout. Keeping
this value short can cause a timeout exception during a listener
registration. Therefore, you may need to increase the default value
(i.e., 5 seconds), see the
<a href="http://docs.hazelcast.org/docs/latest/manual/html-single/index.html#setting-connection-timeout">#Setting Connection Timeout section</a>. <a href="https://github.com/hazelcast/hazelcast/issues/8847">#8847</a></p>
</li>
<li>
<p>There is an unnecessary warning about member side near cache
invalidation operations. <a href="https://github.com/hazelcast/hazelcast/issues/8841">#8841</a></p>
</li>
<li>
<p>EWRRemoveBackup uses the same operation for multiple invocations. #1103</p>
</li>
<li>
<p>There is a failure in the rolling restart, when Hot Restart is enabled. Internal states used during Hot Restart should be reset after a start. #1081</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-7-2"><a class="anchor" href="#3-7-2"></a><a class="link" href="#3-7-2">3.7.2</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.7.2 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>The container <code>WaitingOperation</code> (which wraps <code>BlockingOperation</code>) is
asked for call ID/caller address. But this container object does not
have any sensible information, so the heartbeat is not constructed
correctly for a blocked operation. <a href="https://github.com/hazelcast/hazelcast/issues/8979">#8979</a></p>
</li>
<li>
<p>JCache backup operation does not propagate the exception
<code>CacheNotExists</code>. <a href="https://github.com/hazelcast/hazelcast/issues/8955">#8955</a></p>
</li>
<li>
<p>The log message <code>unsafe unavailable</code> is at WARNING level and it also
displays the full stack trace. <a href="https://github.com/hazelcast/hazelcast/issues/8852">#8852</a></p>
</li>
<li>
<p>When a predicate for distributed query is executed on a lite member it
throws the exception <code>ClassNotFound</code>. <a href="https://github.com/hazelcast/hazelcast/issues/8849">#8849</a></p>
</li>
<li>
<p>While running under non-HotSpot JVM, the exception <code>NoSuchField</code> is
thrown. <a href="https://github.com/hazelcast/hazelcast/issues/8835">#8835</a></p>
</li>
<li>
<p>WAN replication events are created unnecessarily and stay in the queue forever in active-active WAN replication use case. #1043</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-7-1"><a class="anchor" href="#3-7-1"></a><a class="link" href="#3-7-1">3.7.1</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.7.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Behavior of JCache near cache invalidation events changed: (i) the
method <code>Cache.close</code> now delivers near cache invalidation events, (ii)
the method <code>Cache.destroy</code> no longer delivers invalidation events, (iii)
the method <code>CacheManager.destroyCache</code> when invoked from a client-side
cache manager no longer delivers invalidation events. <a href="https://github.com/hazelcast/hazelcast/issues/8801">#8801</a></p>
</li>
<li>
<p>Aggressive SQL predicate flattening may result in wrong parsing of
SQL. <a href="https://github.com/hazelcast/hazelcast/issues/8799">#8799</a></p>
</li>
<li>
<p>To properly configure within Spring context, incorrect client defaults
should be fixed. <a href="https://github.com/hazelcast/hazelcast/issues/8761">#8761</a></p>
</li>
<li>
<p><code>NullPointerException</code> is thrown when the class <code>DefaultNodeExtension</code>
has been loaded by two different class loaders. <a href="https://github.com/hazelcast/hazelcast/issues/8755">#8755</a></p>
</li>
<li>
<p><code>HazelcastInstanceNotActive</code> exception is thrown which is misleading.
When a remote member is shutdown while destroying a proxy, no warnings
should be logged. <a href="https://github.com/hazelcast/hazelcast/issues/8736">#8736</a></p>
</li>
<li>
<p>Missing dependency for JSPC plugin should be added. <a href="https://github.com/hazelcast/hazelcast/issues/297">#297</a></p>
</li>
<li>
<p>Setting &lt;property name="batch.size"&gt; in XML throws ClassCastException. It works when programmatic configuration is used. #1016</p>
</li>
<li>
<p>If the cluster is in PASSIVE state, HDLocalMapStatsOperation fails when a cluster member is restarted. #1015</p>
</li>
<li>
<p>IMap statistics collector operations should be marked as read-only. Otherwise, these operations do not work unless the cluster is in ACTIVE state. #1009</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-7"><a class="anchor" href="#3-7"></a><a class="link" href="#3-7">3.7</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements, fixed issues and,
removed or deprecated features for 3.7 release.</p>
</div>
<div class="sect3">
<h4 id="features-37"><a class="anchor" href="#features-37"></a><a class="link" href="#features-37">New Features</a></h4>
<div class="paragraph">
<p>The following are the new features introduced with 3.7 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Custom Eviction Policies</strong>: You can implement and use your own
eviction policy. Please refer to the <a href="http://docs.hazelcast.org/docs/3.7/manual/html-single/index.html#custom-eviction-policy">Custom Eviction Policy section</a>.</p>
</li>
<li>
<p><strong>Discovery SPI Implementation for Microsoft Azure Services</strong>: Hazelcast
members can be discovered within your Azure resource group. You can add
this implementation as a plugin to your projects. Please refer to <a href="https://github.com/sedouard/hazelcast-azure">Hazelcast-Azure plugin page</a>.</p>
</li>
<li>
<p><strong>Hazelcast for OpenShift</strong>: Hazelcast members on
OpenShift can discover each other. Please refer to
<a href="https://hub.docker.com/r/hazelcast/openshift/">Hazelcast OpenShift</a> plugin page.</p>
</li>
<li>
<p><strong>Apache Spark Connector:</strong> A plugin which allows Hazelcast maps and
caches to be used as shared RDD caches by Spark using the Spark RDD API.
Please refer to the plugin’s repo at Spark Connector for Hazelcast.</p>
</li>
<li>
<p><strong>Alignment of WAN Replication Clusters:</strong> This feature provides a
mechanism to align or realign distributed objects in the clusters
connected through WAN. WAN replication mirrors changes from a map or
cache in one cluster to another. It was maintaining the alignment but
was not attaining. Now when the receiving cluster is empty and the
sending cluster is not, objects are aligned. And if changes have been
dropped for any reason, realignment is attained. Please refer to the <a href="http://docs.hazelcast.org/docs/3.7/manual/html-single/index.html#synchronizing-wan-target-cluster">Synchronizing WAN Target Cluster section</a>.</p>
</li>
<li>
<p><strong>Fault Tolerant Executor Service:</strong> This new data structure is
introduced to guarantee that no execution tasks will be lost when a
member goes down. Please refer to the <a href="http://docs.hazelcast.org/docs/3.7/manual/html-single/index.html#durable-executor-service">Durable Executor Service section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enhancements-37"><a class="anchor" href="#enhancements-37"></a><a class="link" href="#enhancements-37">Enhancements</a></h4>
<div class="paragraph">
<p>The following are the enhancements introduced with 3.7 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Modularized Hazelcast:</strong> As stated in the above note, 3.7 is
Hazelcast’s first modularized release. Clients, languages and plugins
are now modules which have separate GitHub repositories, Maven modules,
and release cycles. Please refer to the
<a href="http://hazelcast.org/clients-languages/">Clients &amp; Languages</a> and
<a href="http://hazelcast.org/plugins/">Plugins</a> pages.</p>
</li>
<li>
<p><strong>Near Cache (JCache) Notification Enhancements:</strong> You can disable the
near cache notifications for each entry and enable/disable notifications
of full-flush events. Please refer to the
<a href="http://docs.hazelcast.org/docs/3.7/manual/html-single/index.html#icache-configuration">ICache
Configuration section</a> and see definition of the new configuration
element <code>disable-per-entry-invalidation-events</code>.</p>
</li>
<li>
<p><strong>Migration Algorithm Enhancements:</strong> With these improvements the
possibility of a data loss due to a member crash while the partitions
are being migrated is eliminated.</p>
</li>
<li>
<p><strong>WAN Replication Integrated with Solace</strong>: This integration is achieved
through a new JMS endpoint. Please refer to the
<a href="http://docs.hazelcast.org/docs/3.7/manual/html-single/index.html#solace-integration">Solace
Integration section</a>.</p>
</li>
<li>
<p><strong>Cloud Discovery SPI Plugin for Multicast:</strong> You can use multicast
discovery for your Hazelcast platform with client/server topology. Only
Hazelcast Java client is supported for this release. Please refer to the
<a href="http://docs.hazelcast.org/docs/3.7/manual/html-single/index.html#discovering-native-clients">Discovering
Native Clients section</a>.</p>
</li>
<li>
<p><strong>IMap Eviction Sync with JCache:</strong> Hazelcast Map uses now Hazelcast
JCache’s eviction algorithm when evicting map entries.</p>
</li>
<li>
<p><strong>Docker Image Enhancements:</strong> Hazelcast Docker image is able to
integrate with the Service Discovery products such as Zookeeper, Consul,
Etcd, and Eureka. Please refer to its repo at
<a href="https://github.com/hazelcast/hazelcast-docker">Hazelcast Docker</a>.</p>
</li>
<li>
<p><strong>Phone Home Enhancements:</strong> Performed to collect new phone home data to
learn more about the environment on which Hazelcast runs. Please refer
to the <a href="http://docs.hazelcast.org/docs/3.7/manual/html-single/index.html#phone-home">Phone Home section</a>.</p>
</li>
<li>
<p><strong><code>IMap.putAll()</code> Performance Enhancements:</strong> The performance of
<code>putAll</code> operation is improved by reducing the number of remote
operations and supporting batching.</p>
</li>
<li>
<p><strong>Hazelcast Instance and JCache Integration Enhancements:</strong> A direct
relation between a Hazelcast instance and JCache is established with
this enhancement. You can retrieve and access caches via the method
<code>getCache(String name)</code> over <code>HazelcastInstance</code> API. Please refer to
the <a href="http://docs.hazelcast.org/docs/3.7/manual/html-single/index.html#jcache-hazelcast-instance-integration">JCache - Hazelcast Instance Integration section</a>.</p>
</li>
<li>
<p><strong>Indexing with Predicates for Entry Processors:</strong> Entry Processor can
use indexing when a predicate is used to filter entries that need to be
processed. Please refer to the
<a href="http://docs.hazelcast.org/docs/3.7/manual/html-single/index.html#using-indexes">Using
Indexes section</a>.</p>
</li>
<li>
<p><strong>Partition Grouping Enhancements:</strong> You can define partition groups, in
the same way as the IP address network configuration with wildcard
support. You can also configure zone-aware partition groups for your
Hazelcast clusters on AWS. Please refer to the
<a href="http://docs.hazelcast.org/docs/3.7/manual/html-single/index.html#partition-group-configuration">Partition
Group Configuration section</a>.</p>
</li>
<li>
<p><strong>Prevention of Blocking Reads in Transactions:</strong> Now the read
operations are blocked only during committing the transactions.</p>
</li>
<li>
<p><strong>Jetty and Tomcat Based Web Session Replications:</strong> These features have
been made open source. You can reach them at
<a href="https://github.com/hazelcast/hazelcast-tomcat-sessionmanager/releases">Tomcat
Session Manager</a> and
<a href="https://github.com/hazelcast/hazelcast-jetty-sessionmanager/releases">Jetty
Session Manager</a> GitHub repos.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the other improvements performed to solve the
enhancement issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Expanded async API support in IMap, IAtomicLong, and IAtomicReference;
async methods now return <code>ICompletable</code> and enable a reactive
programming style. <a href="https://github.com/hazelcast/hazelcast/issues/8580">#8580</a>, <a href="https://github.com/hazelcast/hazelcast/issues/7967">#7967</a>, <a href="https://github.com/hazelcast/hazelcast/issues/7960">#7960</a></p>
</li>
<li>
<p>Call reference IDs are included in the Lock operations issued from
member to member, to prevent double locking when lock operation is
retried. But, Lock at clients does not have these. <a href="https://github.com/hazelcast/hazelcast/issues/8359">#8359</a></p>
</li>
<li>
<p><code>ReadBackupData</code> and <code>MaxIdleSeconds</code> related documentation should be
more clarifying. <a href="https://github.com/hazelcast/hazelcast/issues/8354">#8354</a></p>
</li>
<li>
<p>Entry listener with predicates should be notified on value entry/exit
from the predicate value space. <a href="https://github.com/hazelcast/hazelcast/issues/8340">#8340</a></p>
</li>
<li>
<p>Collection querying in Portables. This allows querying a collection
like <code>car.wheels[0].pressure</code> or <code>car.wheels[any].pressure</code> in the
Portable data format. It also allows using a <code>ValueExtractor</code> in the
Portable data format. <a href="https://github.com/hazelcast/hazelcast/issues/8132">#8132</a></p>
</li>
<li>
<p>Performance improvements for the invocation system. <a href="https://github.com/hazelcast/hazelcast/issues/8009">#8009</a></p>
</li>
<li>
<p>The performance log should have an option to log to the `shared'
logger instead of its own file. It would be useful for environments
where Hazelcast cannot create or get a performance log file. <a href="https://github.com/hazelcast/hazelcast/issues/7973">#7973</a></p>
</li>
<li>
<p>The path for performance logs, which is currently fixed to the user’s
working directory should be configurable. <a href="https://github.com/hazelcast/hazelcast/issues/7968">#7968</a></p>
</li>
<li>
<p>Hazelcast <code>IAtomicLong</code> data structure provides synchronous methods
only; async versions already exist and are available to Hazelcast
members via the <code>AsyncAtomicLong</code> interface. Lack of public a async API for
IAtomicLong is impeding Hazelcast integrations. <a href="https://github.com/hazelcast/hazelcast/issues/7957">#7957</a></p>
</li>
<li>
<p>API documentation for <code>QueueStore</code> should be enhanced. <a href="https://github.com/hazelcast/hazelcast/issues/7775">#7775</a></p>
</li>
<li>
<p>It would be better to have a way where near cache notifications for
each entry are disabled, but an ability to enable/disable notifications
of full-flush events (clear, etc.). <a href="https://github.com/hazelcast/hazelcast/issues/7580">#7580</a></p>
</li>
<li>
<p>Hazelcast should support Transaction API of Spring. <a href="https://github.com/hazelcast/hazelcast/issues/7469">#7469</a>,https://github.com/hazelcast/hazelcast/issues/611[#611]</p>
</li>
<li>
<p>For Hazelcast Topic, even the event service’s pool size is set to a
number larger than one, all of the messages are consumed by only one
Hazelcast event thread. The use case includes a single Hazelcast member,
both producer and consumer being singletons within the member, and
message rate of more than 1000 per second. <a href="https://github.com/hazelcast/hazelcast/issues/7443">#7443</a></p>
</li>
<li>
<p>Partition strategy should be able to be specified not only in the
Hazelcast configuration, but also within the Spring context. In
addition, an implementing instance should be specified besides the class
which implements the partition strategy. <a href="https://github.com/hazelcast/hazelcast/issues/7363">#7363</a></p>
</li>
<li>
<p>Async put operations should be reflected at near cache as soon as the
method <code>future.get()</code> returns. In the case of async put operations and
<code>LocalUpdatePolicy</code> being <code>CACHE</code> at the client side, entries are put to
the near cache asynchronously from another task when the response is
received. But with this way, when <code>future.get()</code> returns, entry might
not be inside the near cache (but it will be there eventually). <a href="https://github.com/hazelcast/hazelcast/issues/7155">#7155</a></p>
</li>
<li>
<p>For <code>ICache.iterator()</code>, <code>fetchSize</code> is not configurable. <a href="https://github.com/hazelcast/hazelcast/issues/7041">#7041</a></p>
</li>
<li>
<p>Unit tests should have a default timeout. <a href="https://github.com/hazelcast/hazelcast/issues/6978">#6978</a></p>
</li>
<li>
<p>Outgoing ports on Hazelcast clients should be configurable. <a href="https://github.com/hazelcast/hazelcast/issues/6845">#6845</a></p>
</li>
<li>
<p>The method <code>IMap.set</code> does not have a corresponding async version,
unlike <code>put</code> and <code>putAsync</code>. The method <code>putAsync</code> is not entirely
suitable as an async set, since put returns the previous value mapped to
the key, and triggers EntryListeners which may not be desirable. IMap
should expose a dedicated <code>setAsync</code> to fulfill the contract for set and
have the means to do so asynchronously. <a href="https://github.com/hazelcast/hazelcast/issues/6726">#6726</a></p>
</li>
<li>
<p>Javadoc for <code>EntryProcessor.java</code> should be enhanced by adding notes
related to its thread safety. <a href="https://github.com/hazelcast/hazelcast/issues/6593">#6593</a></p>
</li>
<li>
<p>Custom SPI services should be more Spring-friendly. <a href="https://github.com/hazelcast/hazelcast/issues/6567">#6567</a></p>
</li>
<li>
<p>The <code>spring-aware</code> should be enabled programmatically too. <a href="https://github.com/hazelcast/hazelcast/issues/6514">#6514</a></p>
</li>
<li>
<p>Hibernate 5 should be supported. <a href="https://github.com/hazelcast/hazelcast/issues/5633">#5633</a></p>
</li>
<li>
<p>The error <code>This node is not requested endpoint</code> is shown in Docker
networking. <a href="https://github.com/hazelcast/hazelcast/issues/4537">#4537</a></p>
</li>
<li>
<p>It would be nice if the type parameters of <code>Predicate</code> were inherited
by the <code>IndexAwarePredicate</code>. <a href="https://github.com/hazelcast/hazelcast/issues/1686">#1686</a></p>
</li>
<li>
<p>The class <code>MigrationEndpoint</code> should be a part of Hazelcast SPI
package. <a href="https://github.com/hazelcast/hazelcast/issues/1427">#1427</a></p>
</li>
<li>
<p>When a task is submitted to all members, and an <code>executeOnEntries</code> is
invoked in the call with a predicate that is based on an index, then the
index is ignored and a full scan of the local members is
performed. <a href="https://github.com/hazelcast/hazelcast/issues/1156">#1156</a></p>
</li>
<li>
<p>Inconsistency between the declarative and programmatic configuration
of network elements should be solved. <a href="https://github.com/hazelcast/hazelcast/issues/945">#945</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-37"><a class="anchor" href="#fixes-37"></a><a class="link" href="#fixes-37">Fixes</a></h4>
<div class="paragraph">
<p>The following are the issues solved for Hazelcast 3.7 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Issue with continuous query natural filtering event types: When the
property <code>hazelcast.map.entry.filtering.natural.event.types</code> is set to
<code>true</code>, updating a map entry whose value did not match the predicate to
a new value that matches the predicate should publish an event of type
<code>ADDED</code> instead of <code>UPDATED</code>. <a href="https://github.com/hazelcast/hazelcast/issues/8648">#8648</a></p>
</li>
<li>
<p>The method <code>ClientEngineImpl::getConnectedClientStats</code> reuses the
operation <code>GetConnectedClientsOperation</code>. This operation should not be
reused for multiple invocations. <a href="https://github.com/hazelcast/hazelcast/issues/8628">#8628</a></p>
</li>
<li>
<p>There is a possible regression in <code>PartitionAwareOperationFactory</code>
when missing code coverage of <code>MultipleEntryWithPredicateOperation</code> is
tried to be increased. <a href="https://github.com/hazelcast/hazelcast/issues/8622">#8622</a></p>
</li>
<li>
<p>When a client is inside the cloud, <code>DiscoveryAddressTranslator</code> class
does not look for a public/private address flag. Private address should
be used when the client is inside the cloud. If not, then public address
should be used. <a href="https://github.com/hazelcast/hazelcast/issues/8595">#8595</a></p>
</li>
<li>
<p><code>MigrationThread</code> can leak after shutting down or even forcefully
terminating Hazelcast. It retains the entire <code>HazelcastInstance</code>. <a href="https://github.com/hazelcast/hazelcast/issues/8560">#8560</a></p>
</li>
<li>
<p><code>QueueOperation</code> keeps the state between executions. If there is a
state, then it should always be set, if-null-then-set idiom should not
be applied for operation state. <a href="https://github.com/hazelcast/hazelcast/issues/8546">#8546</a></p>
</li>
<li>
<p>When the connection is made, the connection type is not known yet. But
the connection type is used in the metrics ID; this id is used as soon
as the connection is made. So it defaults to NONE in the method
<code>getMetricsId</code>. It would be better to add a probe <code>connection type</code>
and remove the connection type from the method
<code>TcpIpConnection.getMetricsId</code>. <a href="https://github.com/hazelcast/hazelcast/issues/8540">#8540</a></p>
</li>
<li>
<p>Commit failure on clients sets the transaction state to ROLLING_BACK,
which makes the transaction non-rollbackable. This is not a problem for
lock-based data structures (map, multimap, etc.) but it is problematic
for collections. State of the transaction should be changed to
COMMIT_FAILED rather than ROLLING_BACK upon a commit failure. <a href="https://github.com/hazelcast/hazelcast/issues/8483">#8483</a></p>
</li>
<li>
<p><code>MapAttributeConfig</code> cannot be loaded in an OSGi environment. <a href="https://github.com/hazelcast/hazelcast/issues/8482">#8482</a></p>
</li>
<li>
<p>Using Hazelcast out of the box with no configuration creates a
Peer-to-Peer cluster. As soon as the configuration file <code>hazelcast.xml</code>
is created by the user, in which only the logging type is set, Hazelcast
does not create a cluster but starts in standalone mode. <a href="https://github.com/hazelcast/hazelcast/issues/8481">#8481</a></p>
</li>
<li>
<p><code>NullPointerException</code> at the method
<code>HazelcastTimeStamper.getNextTimeStamp</code>. <a href="https://github.com/hazelcast/hazelcast/issues/8465">#8465</a></p>
</li>
<li>
<p>Portable EntryProcessor is not being called on portable objects.
<a href="https://github.com/hazelcast/hazelcast/issues/8365">#8365</a></p>
</li>
<li>
<p>In Hazelcast Hibernate modules, there is no JCache dependencies in the
classpath. When Hazelcast is upgraded to 3.7-SNAPSHOT,
<code>java.lang.NoClassDefFoundError: javax/cache/Cache</code> error is thrown when
mocking HazelcastInstance. <a href="https://github.com/hazelcast/hazelcast/issues/8352">#8352</a></p>
</li>
<li>
<p>The method <code>QueryableEntry.serializationService</code> throws
<code>NullPointerException</code> when MapReduce is run with extractable entries.
Mapping phase of the MapReduce for Portable data formats should be
fixed. <a href="https://github.com/hazelcast/hazelcast/issues/8346">#8346</a></p>
</li>
<li>
<p>There is an error when configuring Replicated Map. The return of the
method <code>getConfig</code> in <code>ReplicatedMapMBean</code> should be fixed. <a href="https://github.com/hazelcast/hazelcast/issues/8298">#8298</a></p>
</li>
<li>
<p><code>TargetDisconnectedException</code> is thrown for the clients in
3.7-SNAPSHOT. <a href="https://github.com/hazelcast/hazelcast/issues/8261">#8261</a></p>
</li>
<li>
<p>TransactionalMap’s <code>removeIfSame</code> test fails. <a href="https://github.com/hazelcast/hazelcast/issues/8238">#8238</a></p>
</li>
<li>
<p>Distributed Executor Service does not take
<code>ExecutorConfig.isStatisticsEnabled</code> into account. <a href="https://github.com/hazelcast/hazelcast/issues/8223">#8223</a></p>
</li>
<li>
<p>Using <code>MapStoreConfig</code> in a cluster raises the exception
<code>Transition not allowed from state NOT_LOADED to LOADED</code>. <a href="https://github.com/hazelcast/hazelcast/issues/8196">#8196</a></p>
</li>
<li>
<p>The method <code>ICache::destroy</code> should remove the cache itself from the
owner <code>CacheManager</code> because, otherwise, it causes memory leaks due to
the cache proxies which are dead but deemed as working, in
<code>AbstractHazelcastCacheManager::caches</code>. <a href="https://github.com/hazelcast/hazelcast/issues/8186">#8186</a></p>
</li>
<li>
<p>Partition promotion is skipped when a node is terminated during the
commit. <a href="https://github.com/hazelcast/hazelcast/issues/8174">#8174</a></p>
</li>
<li>
<p>The tests check the messages of <code>InvalidConfigurationExeption`s thrown
by the `XmlConfigBuilder</code>. But these messages are often extracted from
`SAXParseException`s which are localized; Maven build is platform
dependent and fails. <a href="https://github.com/hazelcast/hazelcast/issues/8169">#8169</a></p>
</li>
<li>
<p>The method <code>IAtomicReference:alter</code> does not persist the changes. When
a reference is tried to be altered, no alteration happens. <a href="https://github.com/hazelcast/hazelcast/issues/8149">#8149</a></p>
</li>
<li>
<p>Cache should not expire entities when <code>Duration</code> value is 0. <a href="https://github.com/hazelcast/hazelcast/issues/8148">#8148</a></p>
</li>
<li>
<p>Deserialization of dynamic proxy instances ignores the configured
class loader. <a href="https://github.com/hazelcast/hazelcast/issues/8033">#8033</a></p>
</li>
<li>
<p>The attribute <code>binary</code> is missing in the MultiMap configuration
within Spring context. It does not exist in Hazelcast configuration
schema either. <a href="https://github.com/hazelcast/hazelcast/issues/8000">#8000</a></p>
</li>
<li>
<p>If you setup an interceptor to change the data being inserted, the
entry listeners still fire with the old value. <a href="https://github.com/hazelcast/hazelcast/issues/7991">#7991</a></p>
</li>
<li>
<p>Unlike the <code>InvocationFuture</code> at the server side,
<code>ClientInvocationFuture</code> immediately propagates <code>InterruptedException</code>
if the calling thread gets interrupted. This can be a problem when both
caller and callee need to agree on whether the operation has executed or
not. <a href="https://github.com/hazelcast/hazelcast/issues/7963">#7963</a></p>
</li>
<li>
<p>Hazelcast 3.2.6 uses too much CPU when it is idle. <a href="https://github.com/hazelcast/hazelcast/issues/7943">#7943</a></p>
</li>
<li>
<p>Old version of Portable object from a map cannot be read if new
<code>UTF_ARRAY</code> type field is added. <a href="https://github.com/hazelcast/hazelcast/issues/7926">#7926</a></p>
</li>
<li>
<p>The method <code>IMap.size()</code> reports a stale result when blocked by the
initialization of <code>MapStore</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7905">#7905</a></p>
</li>
<li>
<p>Isolated thread pool for priority generic operations. <a href="https://github.com/hazelcast/hazelcast/issues/7857">#7857</a></p>
</li>
<li>
<p>There is an issue when detecting JCache in the classpath. The
exception <code>NoClassDefFound</code> is thrown when upgrading to a newer
Hazelcast version. <a href="https://github.com/hazelcast/hazelcast/issues/7810">#7810</a></p>
</li>
<li>
<p>Programmatic configuration of logging for Hazelcast client does not
work. <a href="https://github.com/hazelcast/hazelcast/issues/7764">#7764</a></p>
</li>
<li>
<p>Better separators should be used in the exceptions for a clearer read
between local and remote stacktraces. <a href="https://github.com/hazelcast/hazelcast/issues/7744">#7744</a></p>
</li>
<li>
<p>Under the section Operation Threading of Hazelcast Reference
Manual, it states that the default number of partition-aware operation
threads is (2 x number of cores). However, when looking at the code and
observing the actual number of threads created runtime, it seems like
the default value is instead 1 x number of cores instead. <a href="https://github.com/hazelcast/hazelcast/issues/7741">#7741</a></p>
</li>
<li>
<p>The method <code>IMap.executeOnKeys()</code> does not support the empty set (it
throws a misleading <code>NullPointerException</code>), and is inconsistent with
the method <code>getAll()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7631">#7631</a></p>
</li>
<li>
<p>Replicated map updates take a very long time. The problematic method
is <code>putAll()</code>. The replication logic in this method checks whether the
data owners are in sync with the replicas. If they are not, this logic
syncs them every 30 seconds. This means, when the updates are not
replicated to callers, it takes up to 30 seconds to make all the members
synchronized. This period should be configurable. <a href="https://github.com/hazelcast/hazelcast/issues/7617">#7617</a></p>
</li>
<li>
<p><code>ScheduledExecutorServiceDelegate</code> violates contract of
<code>ScheduledExecutorService</code>. It wraps tasks in <code>ScheduledTaskRunner</code>
which delegates to a different executor. As a consequence, a task can be
executed concurrently and this is a violation of a contract of
<code>ScheduledExecutorService</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7611">#7611</a></p>
</li>
<li>
<p>If <code>javax.cache.CacheManager</code> is created with the default settings,
the underlying <code>HazelcastInstance</code> is not shutdown when the method
<code>close</code> is called on the <code>CacheManager</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7606">#7606</a></p>
</li>
<li>
<p>The method <code>containsKey()</code> of <code>TransactionalMap</code> is blocked when the
key was previously locked by the method <code>getForUpdate()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7588">#7588</a></p>
</li>
<li>
<p>There is an inconsistent behavior when removing from
<code>TransactionalMap</code> while the key is locked on IMap. In order to avoid
trying to remove an entry that may have already been removed in another
uncommitted transaction, <code>IMap.tryLock</code> is used before performing
<code>TransactionalMap.remove</code>. This works as expected if the operations
occur on a member. But a <code>TransactionException</code> is thrown when it occurs
on a client when using XA Transaction. <a href="https://github.com/hazelcast/hazelcast/issues/7587">#7587</a></p>
</li>
<li>
<p>Hazelcast instance should be exposed through
<code>com.hazelcast.spring.cache.HazelcastCacheManager</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7571">#7571</a></p>
</li>
<li>
<p>Instance name should not be overridden while creating cache manager
from the specified configuration file. Also, it would be better to
specify instance name via
the <code>HazelcastCachingProvider.HAZELCAST_INSTANCE_NAME</code> property when
instance configuration is taken from the specified configuration file
via <code>HazelcastCachingProvider.HAZELCAST_CONFIG_LOCATION</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7567">#7567</a></p>
</li>
<li>
<p>The <code>addInterceptor()</code> method in
<code>com.hazelcast.map.impl.MapContainer()</code> is not thread safe. For example,
if two concurrent attempts are made to inject the same interceptor,
these will be different interceptor objects with the same ID. In this
case, the call to <code>interceptorMap.put(id, interceptor)</code> will increase
the map size by one, but the call to <code>interceptors.add(interceptor)</code>
will increase the list size by two. <a href="https://github.com/hazelcast/hazelcast/issues/7520">#7520</a></p>
</li>
<li>
<p>All JMX Beans disappear when the single Hazelcast instance is shut
down in the same JVM. <a href="https://github.com/hazelcast/hazelcast/issues/7467">#7467</a></p>
</li>
<li>
<p>There are unused elements for Management Center configuration:
<code>cluster-id</code> and <code>security-token</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7446">#7446</a></p>
</li>
<li>
<p>For clients, <code>InitialMembershipListener.init</code> is called after
<code>MembershipListener.memberAdded</code>. This contradicts the content in the
Reference Manual. <a href="https://github.com/hazelcast/hazelcast/issues/7430">#7430</a></p>
</li>
<li>
<p>DiscoveryService’s <code>start</code> and <code>destroy</code> methods should be called
during the start and shutdown of client when Discovery SPI is enabled.
<a href="https://github.com/hazelcast/hazelcast/issues/7347">#7347</a></p>
</li>
<li>
<p>Return cache config as response even though found and created cache
config could not put into cache configs inside cache service. <a href="https://github.com/hazelcast/hazelcast/issues/7208">#7208</a></p>
</li>
<li>
<p>In Hazelcast Management Center shutting down a node seems to prevent a
node from restarting. <a href="https://github.com/hazelcast/hazelcast/issues/7107">#7101</a></p>
</li>
<li>
<p><code>MapStoreConfig</code> does not override <code>hashCode</code> and <code>equals</code> methods.
Implementation for these two methods should be added. <a href="https://github.com/hazelcast/hazelcast/issues/7035">#7035</a></p>
</li>
<li>
<p>Data is lost when the member dies during repartitioning. <a href="https://github.com/hazelcast/hazelcast/issues/6628">#6628</a></p>
</li>
<li>
<p>Some of the map statistics, such as cost and last access time, are
calculated by the traversing map entries. Therefore the calculation time
exceeds the time interval reserved for management center state sending
thread when entry count is too high. <a href="https://github.com/hazelcast/hazelcast/issues/6442">#6442</a>, <a href="https://github.com/hazelcast/hazelcast/issues/5905">#5905</a></p>
</li>
<li>
<p>Eviction with <code>eviction-percentage</code> does not work. <a href="https://github.com/hazelcast/hazelcast/issues/6432">#6432</a></p>
</li>
<li>
<p><code>InvocationFuture</code>’s asynchronous calls do not detect the lost
operations. <a href="https://github.com/hazelcast/hazelcast/issues/6250">#6250</a></p>
</li>
<li>
<p>The invocation mechanism for blocking operations relies on a periodic
timeout so that the operation gets retried. To prevent the calling
thread (the thread for <code>future.get</code>) from waiting indefinitely, it will
periodically ask the <code>isstillrunning</code> service if the operation is lost.
<a href="https://github.com/hazelcast/hazelcast/issues/6248">6248</a></p>
</li>
<li>
<p>Under some circumstances Hazelcast is getting a corrupt value for
<code>IAtomicLong</code>s when a member leaves the cluster. <a href="https://github.com/hazelcast/hazelcast/issues/6074">#6074</a></p>
</li>
<li>
<p>When the client disconnects normally, the server logs an info and a
warning message containing the text <code>java.io.EOFException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/6035">#6035</a></p>
</li>
<li>
<p>Session ID management error (500 HTTP error) is shown by Hazelcast 3.5
filter based replication. <a href="https://github.com/hazelcast/hazelcast/issues/5660">#5660</a></p>
</li>
<li>
<p>Some operating systems (such as HPUX or Solaris) and hardware
platforms have constraints about the aligned memory operations. In these
architectures memory operations must be byte-by-byte as implemented in
<code>DirectByteBuffer</code>. <a href="https://github.com/hazelcast/hazelcast/issues/5532">#5532</a></p>
</li>
<li>
<p>Data is lost when a member crashes or is killed during the
repartitioning. <a href="https://github.com/hazelcast/hazelcast/issues/5444">#5444</a></p>
</li>
<li>
<p>Data is lost when a member is terminated. Related scenario is as
followshttps://github.com/hazelcast/hazelcast/issues/5388[#5388]:</p>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Start the first member, and let it populate a map with 100k entries.</p>
</li>
<li>
<p>Start the second member, and let it start joining the cluster.</p>
</li>
<li>
<p>Terminate the second member during the join operation.</p>
</li>
<li>
<p>Observe that data is lost from the first member.</p>
</li>
</ol>
</div>
</li>
<li>
<p>As for now it is very complicated to listen a <code>getAsync</code> or <code>putAsync</code>
result and to integrate it with completable futures or listenable
futures. An <code>ICompletableFuture</code> should be returned since it is an
interface which seems to extend JDK <code>future</code>s and is returned by an
IMap. <a href="https://github.com/hazelcast/hazelcast/issues/5315">#5315</a></p>
</li>
<li>
<p>If multiple Hazelcast members attempt to remove values from a key of a
multimap concurrently, and then the members are shut down, the multimap
can remain in an inconsistent state with entries remaining after all
have been removed. <a href="https://github.com/hazelcast/hazelcast/issues/5220">#5220</a></p>
</li>
<li>
<p><code>ClassNotFoundException</code> is thrown when trying to get an entry from a
<code>TransactionalMap</code>. <a href="https://github.com/hazelcast/hazelcast/issues/4969">#4969</a></p>
</li>
<li>
<p>Profiling a Hazelcast application reveals a thread contention in
<code>SpringManagedContext</code> on <code>java.lang.Class.getAnnotation()</code>. And this
calls a synchronized method called <code>initAnnotationsIfNecessary()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4506">#4506</a></p>
</li>
<li>
<p>Hazelcast IMap statistics show negative values. After heavy usage of
the cache, the number of misses starts showing up negative. <a href="https://github.com/hazelcast/hazelcast/issues/4022">#4022</a></p>
</li>
<li>
<p>WebFilter may prevent requests from accessing request input stream.
<a href="https://github.com/hazelcast/hazelcast/issues/3829">#3829</a></p>
</li>
<li>
<p><code>WrongTargetException</code> for <code>PollOperation</code> in Queues. <a href="https://github.com/hazelcast/hazelcast/issues/3754">#3754</a></p>
</li>
<li>
<p>Hazelcast member continuously logs <code>WrongTargetException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/3395">#3395</a></p>
</li>
<li>
<p>When there is a map with write-behind mode and a map store is
configured (eviction is not needed); when the method <code>flush</code> is called
in the IMap, the map store’s <code>store</code> method can be called concurrently
for the same key, namely for those keys which are in the write-behind
queue and then forcibly stored by the flush. This is because the flush
operation storing all entries in the write-behind queue seems to be
executed in the operation thread, while the periodic processing of the
write-behind queue is done by an executor service defined in the
<code>WriteBehindQueueManager</code>. <a href="https://github.com/hazelcast/hazelcast/issues/3338">#3338</a></p>
</li>
<li>
<p>Cluster failed to hot restart because it expected a wrong cluster size. A method to atomically read the current and passive cluster members should be added. #990
When a structure uses NATIVE in-memory format and native-memory is not explicitly enabled, then a more descriptive error message should be printed. #960</p>
</li>
<li>
<p>A probe showing the forced eviction count should be added for IMap and JCache , it will be useful for testing and troubleshooting. #959, #676</p>
</li>
<li>
<p>Hot restart should be validated on Windows platforms since there have been some failures. #956</p>
</li>
<li>
<p>Hot restart does not work on Windows since a "cannot rename file" exception is thrown. #941</p>
</li>
<li>
<p>The method EnterpriseCacheService#destroySegments is made async due to a deadlock condition. This means that the destroy operation may not complete before the node shuts down, resulting in resurrected entries after restart with Hot Restart enabled. #906</p>
</li>
<li>
<p>PoolingMemoryManager should support returning size of memory block bigger than page size. #736</p>
</li>
<li>
<p>CachePutAllBackupOperation can work with IList instead of IMap to backup records. #510</p>
</li>
<li>
<p>At the moment, High-Density memory backed JCache uses OSS-JCache&#8217;s CacheRemoveAllOperation. But it should have its own CacheRemoveAllOperation so it can read the keys directly to native memory. #336</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="rd-37"><a class="anchor" href="#rd-37"></a><a class="link" href="#rd-37">Removed/Deprecated Features</a></h4>
<div class="ulist">
<ul>
<li>
<p><code>WanNoDelayReplication</code> implementation of Hazelcast’s WAN Replication
has been removed. You can still achieve this behavior by setting the
batch size to <code>1</code> while configuring the <code>WanBatchReplication</code>. Please
refer to the
<a href="http://docs.hazelcast.org/docs/3.7/manual/html-single/index.html#defining-wan-replication">Defining
WAN Replication section</a> for more information.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-37"><a class="anchor" href="#contributors-37"></a><a class="link" href="#contributors-37">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/bturner">Bryan Turner</a></p>
</li>
<li>
<p><a href="https://github.com/LoneRifle">LoneRifle</a></p>
</li>
<li>
<p><a href="https://github.com/Vampire">Björn Kautler</a></p>
</li>
<li>
<p><a href="https://github.com/messo">Bálint Kriván</a></p>
</li>
<li>
<p><a href="https://github.com/dsukhoroslov">Denis Sukhoroslov</a></p>
</li>
<li>
<p><a href="https://github.com/Jorik0">Jorik0</a></p>
</li>
<li>
<p><a href="https://github.com/msebire">Mathieu Sebire</a></p>
</li>
<li>
<p><a href="https://github.com/aborshik">Alex Borshik</a></p>
</li>
<li>
<p><a href="https://github.com/cpiotr">Piotr Ciruk</a></p>
</li>
<li>
<p><a href="https://github.com/zerhacker">zerhacker</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-6-8"><a class="anchor" href="#3-6-8"></a><a class="link" href="#3-6-8">3.6.8</a></h3>
<div class="paragraph">
<p>The following is the fixed issue for 3.6.8 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Servers should throw exception when message type is not known. Client
protocol is defined to throw an exception when a client sends a client
message with unknown type to server. <a href="https://github.com/hazelcast/hazelcast/issues/10196">#10196</a>, <a href="https://github.com/hazelcast/hazelcast/issues/10202">#10202</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-6-7"><a class="anchor" href="#3-6-7"></a><a class="link" href="#3-6-7">3.6.7</a></h3>
<div class="paragraph">
<p>The following is the fixed issue for 3.6.7 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>When loading keys supplied by the user, <code>keyLoaderState</code> should not be
changed. In some cases, <code>MapLoader.loadAll(true)</code> does not reload after
reloading with new keys. <a href="https://github.com/hazelcast/hazelcast/issues/9279">#9279</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-6-6"><a class="anchor" href="#3-6-6"></a><a class="link" href="#3-6-6">3.6.6</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.6.6 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>NullPointerException</code> is thrown while deleting an entry through Entry
Processor by setting value to NULL. <a href="https://github.com/hazelcast/hazelcast/issues/9141">#9141</a></p>
</li>
<li>
<p>Indefinite reads of stale values from near cache should be prevented.
<a href="https://github.com/hazelcast/hazelcast/issues/9075">#9075</a></p>
</li>
<li>
<p>Write behind <code>MapStore</code> is not retrying to store an entry
indefinitely. When an entry cannot be persisted, the retry mechanism
stops working after a while. This happens when the distributed map is
configured to use the write-behind mechanism. <a href="https://github.com/hazelcast/hazelcast/issues/8918">#8918</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-6-5"><a class="anchor" href="#3-6-5"></a><a class="link" href="#3-6-5">3.6.5</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.6.5 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>When a client is inside the cloud, <code>DiscoveryAddressTranslator</code> class
does not look for a public/private address flag. Private address should
be used when the client is inside the cloud. If not, then public address
should be used. <a href="https://github.com/hazelcast/hazelcast/issues/8595">#8595</a></p>
</li>
<li>
<p>The method <code>ClusterMergeTask::waitOnFutureInterruptible</code> has an almost
endless loop. <a href="https://github.com/hazelcast/hazelcast/issues/8527">#8527</a></p>
</li>
<li>
<p>Cluster state should not be allowed to change before startup is
completed. Normally, the method <code>NodeExtension.isStartCompleted()</code>
returns <code>true</code> when a member is joined successfully. However, when Hot
Restart Store is enabled, it returns <code>false</code> until Hot Restart process
completes on the whole cluster. <a href="https://github.com/hazelcast/hazelcast/issues/8523">#8523</a></p>
</li>
<li>
<p><code>MapPartitionLostListener</code> is not working. Upon migration commit, the
flag <code>SYNC_WAITING_REPLICA</code> should not be overwritten. <a href="https://github.com/hazelcast/hazelcast/issues/8505">#8505</a></p>
</li>
<li>
<p><code>PartitonServiceBeanDTO</code> always tries to resolve the domain name.
Instead of calling the method <code>getSocketAddress()</code> every time, it can
use the method <code>getLocalAddress()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/8463">#8463</a></p>
</li>
<li>
<p>Hazelcast Demo application depends on JDK. JRE should be enough on all
platforms. <a href="https://github.com/hazelcast/hazelcast/issues/8445">#8445</a></p>
</li>
<li>
<p>Excessive logging of <code>is-executing': true</code> checks against long running
operations. <a href="https://github.com/hazelcast/hazelcast/issues/8386">#8386</a></p>
</li>
<li>
<p>There is a deadlock in <code>MigrationQueue</code>. The internal queue and
counter are not synced in some situations and this causes deadlock.
Usually it happens when there is a migration task failure. <a href="https://github.com/hazelcast/hazelcast/issues/8217">#8217</a></p>
</li>
<li>
<p>The method <code>ClientSmartInvocationServiceImpl#invokeOnTarget</code> does not
throw <code>TargetNotMemberException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7997">#7997</a></p>
</li>
<li>
<p>Access data is not updated by local reads when reading from backup is
enabled. <a href="https://github.com/hazelcast/hazelcast/issues/7354">#7354</a></p>
</li>
<li>
<p>Missing dependency for JSPC plugin should be added. <a href="https://github.com/hazelcast/hazelcast/issues/297">#297</a></p>
</li>
<li>
<p>Cluster state should not be allowed to be changed before Hot Restart is completed. #954</p>
</li>
<li>
<p>When trying to use High-Density memory backed IMap with MapReduce, the exception thrown should be more informative. #926</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-6-4"><a class="anchor" href="#3-6-4"></a><a class="link" href="#3-6-4">3.6.4</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.6.4 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>OperationFactoryWrapper</code> should use <code>callersUUID</code> instead of
overriding on the member side. <a href="https://github.com/hazelcast/hazelcast/issues/8437">#8437</a></p>
</li>
<li>
<p><code>HazelcastInstanceLoader</code> ignores <code>instance-name</code> for clients.
<a href="https://github.com/hazelcast/hazelcast/issues/8413">#8413</a></p>
</li>
<li>
<p>Usage of <code>GroupProperties</code> in Hibernate modules should be removed.
<a href="https://github.com/hazelcast/hazelcast/issues/8398">#8398</a></p>
</li>
<li>
<p>Thread interrupt flag check must be added to <code>StoreWorker</code>. <a href="https://github.com/hazelcast/hazelcast/issues/8345">#8345</a></p>
</li>
<li>
<p>Partition proxies are created eventually on all members. However, this
is an async process driven by the eventing system. If a member does not
have a proxy in its registry, then it will not fire
<code>MapPartitionLostListener</code>. Before firing a partition lost event,
proxies should be waited to be created. <a href="https://github.com/hazelcast/hazelcast/issues/8293">#8293</a></p>
</li>
<li>
<p>Ensure skipping previously removed <code>CacheEntryListenerConfiguration</code>
entries while iterating over added <code>CacheEntryListenerConfiguration</code> s in
the <code>CacheConfig</code> to register listeners. <a href="https://github.com/hazelcast/hazelcast/issues/8283">#8283</a></p>
</li>
<li>
<p>Hazelcast instance is started without problems but Management Center
does not launch and throws an exception when bundled Jetty is used with
Java versions 1.8.0_91 and higher. <a href="https://github.com/hazelcast/hazelcast/issues/8248">#8248</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-6-3"><a class="anchor" href="#3-6-3"></a><a class="link" href="#3-6-3">3.6.3</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.6.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>MapStatisticsAwareService</code> should obtain the map names from proxy
registry. <a href="https://github.com/hazelcast/hazelcast/issues/8209">#8209</a></p>
</li>
<li>
<p>Cache should not expire the entities when <code>Duration</code> value is set to
<code>0</code>. <a href="https://github.com/hazelcast/hazelcast/issues/">#8148</a>, <a href="https://github.com/hazelcast/hazelcast/issues/8206">#8206</a></p>
</li>
<li>
<p>Collection querying in Portables. <a href="https://github.com/hazelcast/hazelcast/issues/8172">#8172</a></p>
</li>
<li>
<p>Type extraction by the method <code>extractedMultiResult</code> should be fixed
when the extraction result is null. <a href="https://github.com/hazelcast/hazelcast/issues/8134">#8134</a></p>
</li>
<li>
<p>Expiration time for the map entries should be calculated based on
their latest update times. <a href="https://github.com/hazelcast/hazelcast/issues/8111">#8111</a>, <a href="https://github.com/hazelcast/hazelcast/issues/8113">#8113</a></p>
</li>
<li>
<p>Support for the usage of IAM role’s defaults should be added. <a href="https://github.com/hazelcast/hazelcast/issues/8100">#8100</a></p>
</li>
<li>
<p>Binary property for MultiMap should be added to XmlConfigBuilder.
<a href="https://github.com/hazelcast/hazelcast/issues/8094">#8094</a></p>
</li>
<li>
<p>EC2 auto-discovery in China throws an exception due to a bug in host
header handling mechanism. <a href="https://github.com/hazelcast/hazelcast/issues/8073">#8073</a></p>
</li>
<li>
<p>The method <code>Cluster.shutdown()</code> ignores lifecycle listeners. <a href="https://github.com/hazelcast/hazelcast/issues/8070">#8070</a></p>
</li>
<li>
<p>Resource adapters should not cast to implementation when using a
container to get a connection. <a href="https://github.com/hazelcast/hazelcast/issues/8019">#8019</a></p>
</li>
<li>
<p>Unnecessary deserialization step during the execution of put
operations should be removed. <a href="https://github.com/hazelcast/hazelcast/issues/8018">#8018</a></p>
</li>
<li>
<p>A URL text with spaces should not be transformed into a URI. <a href="https://github.com/hazelcast/hazelcast/issues/8016">#8016</a></p>
</li>
<li>
<p>Unnecessary deserialization step in the replicated map data structure
should be removed. <a href="https://github.com/hazelcast/hazelcast/issues/8014">#8014</a></p>
</li>
<li>
<p>When using <code>InstanceOfPredicate</code>, the method <code>toObject</code> at the server
side causes <code>NullPointerException</code>, since the class loader is not set
and it is null. Default class loader should be used if it is not set by
the configuration to avoid the exception. <a href="https://github.com/hazelcast/hazelcast/issues/7977">#7977</a></p>
</li>
<li>
<p>There may be cases when the server may return a list of entries larger
than the requested page size. In this case the client should not put any
anchor into the list that is on a page greater than the requested page.
<a href="https://github.com/hazelcast/hazelcast/issues/7976">#7976</a></p>
</li>
<li>
<p>When a remote invocation waits indefinitely on the internal executor,
a deadlock may occur since its response would use the same executor and
since the invocation monitor runs on the same executor. <a href="https://github.com/hazelcast/hazelcast/issues/7944">#7944</a></p>
</li>
<li>
<p>Already published messages should be retrieved after
<code>StaleSequenceException</code> occurs when <code>ReliableMessageListener</code> is
registered at the client side. <a href="https://github.com/hazelcast/hazelcast/issues/7928">#7928</a></p>
</li>
<li>
<p>The case of response being equal to null in the class
<code>ClientDelegatingFuture</code> should be handled. <a href="https://github.com/hazelcast/hazelcast/issues/7901">#7901</a></p>
</li>
<li>
<p>Detection of JCache should be improved. Currently Hazelcast checks if
the class <code>javax.cache.Caching</code> is available and, if so, Hazelcast
creates the JCache service and configures the client protocol messages.
However, some older snapshots of JCache JARs have the Caching class
available, but other classes are missing. This causes <code>Class not found</code>
exceptions when members are started. <a href="https://github.com/hazelcast/hazelcast/issues/7899">#7899</a></p>
</li>
<li>
<p>When connection gets an exception from the socket and the method
<code>destroyConnection</code> is called before connection is authenticated, the
client does not have an endpoint and it is not in the map of
connections. Hence, the connection cannot be closed. <a href="https://github.com/hazelcast/hazelcast/issues/7866">#7866</a></p>
</li>
<li>
<p>Upon subsequent destroy and create operations of IMap, there can be
more than one map container referenced by different record stores at the
same time. Therefore, indexes can be created in an unexpected map
container and this can lead to return less than expected number of
results when IMap is queried. <a href="https://github.com/hazelcast/hazelcast/issues/7838">#7838</a></p>
</li>
<li>
<p>After the client is shut down, there should be no invocations left.
The method <code>assert()</code> of <code>ClientInvocationServiceSupport</code> fails. <a href="https://github.com/hazelcast/hazelcast/issues/7836">#7836</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the enhancements performed for 3.6.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Phone home should include environment information, such as the
operating system name, version and kernel architecture. <a href="https://github.com/hazelcast/hazelcast/issues/7970">#7970</a></p>
</li>
<li>
<p>Exceptions, which are thrown when the method <code>isMemberSafe()</code> is
called, should go into finest level. When there are topology changes
some exceptions are expected. The method <code>getFutureResult()</code> should log
exceptions as <code>finest()</code>, not <code>warn()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7904">#7904</a></p>
</li>
<li>
<p>Protocol version should be 1 instead of 0. It was set as 0 for the
response messages. <a href="https://github.com/hazelcast/hazelcast/issues/7900">#7900</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-6-2"><a class="anchor" href="#3-6-2"></a><a class="link" href="#3-6-2">3.6.2</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.6.2 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Upon subsequent destroy and creation of IMap, there is a possibility
that there can be more than one map-containers referenced by different
record-stores at the same time. Hence, indexes can be created in an
unexpected map-container and this can lead to return less than expected
number of results when IMap is queried. <a href="https://github.com/hazelcast/hazelcast/issues/7874">#7874</a></p>
</li>
<li>
<p>Couple of issues related to client should be fixed: (a) There should
be no invocations left after client is shut down. (b) When the
client-member connection gets an exception from the socket and the
method <code>destroyConnection</code> is called before the connection is
authenticated, the client does not have an endpoint and it is not in the
connections map anymore. Connection cannot be closed because of this.
(c) Authentication <code>future</code> waits infinitely. Because of (b), heartbeat
does not work on that connection yet. <a href="https://github.com/hazelcast/hazelcast/issues/7867">#7867</a></p>
</li>
<li>
<p>In Hazelcast 3.6.1, the OSGi bundle install fails. <a href="https://github.com/hazelcast/hazelcast/issues/7772">#7772</a></p>
</li>
<li>
<p>Timeout happens at the <code>ClientMapBasicTest</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7718">#7718</a></p>
</li>
<li>
<p>IMap does not send invalidations to the client’s near caches after
<code>putAll</code>/<code>loadAll</code> operations at member side. <a href="https://github.com/hazelcast/hazelcast/issues/7715">#7715</a></p>
</li>
<li>
<p>The test <code>ClientXAStressTest.testCommitConcurrently</code> fails due to an
assertion error that reads as <code>the size of the map is not correct</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/7709">#7709</a></p>
</li>
<li>
<p>The test <code>ClientTransactionalMapQuorumTest</code> fails since it timed out.
<a href="https://github.com/hazelcast/hazelcast/issues/7693">#7693</a></p>
</li>
<li>
<p>Wildcards do not work with permissions. For example, when a queue
permission is defined using wildcard, i.e.,
<code>&lt;queue-permission name="secure.*" principal="admin"&gt;</code> and the queue
<code>secure.orders</code> is created at the client, Hazelcast throws
<code>AccessControlException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7616">#7616</a></p>
</li>
<li>
<p>The FREE_HEAP_PERCENTAGE eviction policy does not work as documented
because the <code>EvictionChecker</code> is incorrectly calculating available
memory percentage in <code>checkFreeHeapPercentageEviction</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7599">#7599</a></p>
</li>
<li>
<p><code>DiscoveryStrategy</code>’s <code>destroy()</code> method is not called on shutdown.
<a href="https://github.com/hazelcast/hazelcast/issues/7545">#7545</a></p>
</li>
<li>
<p>The method <code>MapStore.storeAll()</code> is never called when the objects are
updated with a delay. <a href="https://github.com/hazelcast/hazelcast/issues/7464">#7464</a></p>
</li>
<li>
<p>WebFilter(3.6-RC1): Session attributes are lost or overwritten with
old values when using <code>deferred-write</code> by reading them. <a href="https://github.com/hazelcast/hazelcast/issues/7291">#7291</a></p>
</li>
<li>
<p>The method <code>HazelcastHttpSession.getAttributeNames()</code> returns entries
that were only read but not written. <a href="https://github.com/hazelcast/hazelcast/issues/7033">#7033</a></p>
</li>
<li>
<p>Hazelcast 3.5.3 conflicts with FUSE 6.1. When Hazelcast is integrated
into a system with JBoss Fuse 6.1, there appeared some warnings in the
logs. <a href="https://github.com/hazelcast/hazelcast/issues/6821">#6821</a></p>
</li>
<li>
<p>An exception is thrown on the server when attempting to deserialize
<code>HIBERNATE4_TYPE_HIBERNATE_CACHE_ENTRY</code> value. <a href="https://github.com/hazelcast/hazelcast/issues/6683">#6683</a></p>
</li>
<li>
<p>The test <code>IOBalancerMemoryLeakTest.testMemoryLeak</code> fails due to a
socket exception that reads as <code>unexpected end of file from server</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/6496">#6496</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the enhancements performed for 3.6.2 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Hazelcast Docker images are big in size; it would be better to clean
them up and reduce their sizes. <a href="https://github.com/hazelcast/hazelcast/issues/7553">#7553</a></p>
</li>
<li>
<p>It would be better to provide an <code>enterprise-javadoc.jar</code> in the
Hazelcast Enterprise bundle. This way IDEs can auto-import the Javadocs
for the Enterprise APIs and provide context sensitive completion/help
within the IDE. <a href="https://github.com/hazelcast/hazelcast/issues/7245">#7245</a></p>
</li>
<li>
<p>Management Center WAN Replication metrics take a long time to
stabilize. The responsiveness of the Outbound records/sec. metric should
be improved. It currently seems to under-report WAN replication
performance for 10s of seconds before reaching the same figure as the
client side reported metrics.https://github.com/hazelcast/hazelcast/issues/7244[#7244]</p>
</li>
<li>
<p>Events from the remote cluster appear as merge events to local cluster&#8217;s servers, but it throws an exception on local cluster&#8217;s clients. #827</p>
</li>
<li>
<p>Enterprise Java Client should check the license key for High-Density Memory and High-Density backed Near Cache. #826</p>
</li>
<li>
<p>Continuous query cache needs the MapLoader load event support. #788</p>
</li>
<li>
<p>When a license check failure happens, the standard exception Invalid License Key is printed out. Exception messages should be more user friendly. #747</p>
</li>
<li>
<p>When the license is expired, server aborts before logging the build number. Build number should be logged before checking the license version. #714</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-6-1"><a class="anchor" href="#3-6-1"></a><a class="link" href="#3-6-1">3.6.1</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.6.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Hazelcast 3.6 fails to create <code>ObjectName</code> for an instance created
with JCache API. <a href="https://github.com/hazelcast/hazelcast/issues/7548">#7548</a></p>
</li>
<li>
<p>The test
<code>com.hazelcast.client.spi.impl.ClientInvocationTest.executionCallback_FailOnShutdown</code>
fails. <a href="https://github.com/hazelcast/hazelcast/issues/7462">#7462</a></p>
</li>
<li>
<p>There are failures in <code>SystemClockChangeTest</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7444">#7444</a></p>
</li>
<li>
<p>When you use EntryProcessor with a map interceptor, it does not get
the correct value. <a href="https://github.com/hazelcast/hazelcast/issues/7414">#7414</a></p>
</li>
<li>
<p>Backup records also increase the owned cache entry count but they
should be ignored. Cache statistics show incorrect entry count via the
method <code>getOwnedEntryCount</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7403">#7403</a></p>
</li>
<li>
<p>When getting values from <code>PredicateSupplier</code>, the method
<code>DistinctValueAggregation.DistinctValueMapper.map()</code> throws a
<code>ClassCastException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7398">#7398</a></p>
</li>
<li>
<p>Timeout is not enough for the test
<code>TransferStressTest.testLargePackets</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7393">#7393</a></p>
</li>
<li>
<p>There are failures in the test
<code>ClientExceptionFactoryTest.testException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7360">#7360</a></p>
</li>
<li>
<p>The method <code>getReplicationImplObject</code> in <code>WanTargetClusterConfig</code> is
not used. <a href="https://github.com/hazelcast/hazelcast/issues/7353">#7353</a></p>
</li>
<li>
<p>Entry processor and map put/remove tests in WAN replication module
fail. <a href="https://github.com/hazelcast/hazelcast/issues/7352">#7352</a></p>
</li>
<li>
<p>Hazelcast namespace for Spring configuration does not support
Discovery SPI. <a href="https://github.com/hazelcast/hazelcast/issues/6913">#6913</a></p>
</li>
<li>
<p>When Hazelcast Spring configuration is used for the client and if a
serialization configuration is present in the Spring client, then the
client hangs forever during the authentication method. <a href="https://github.com/hazelcast/hazelcast/issues/5815">#5815</a></p>
</li>
<li>
<p>License keys created for Hazelcast Enterprise 3.5 does not work when High-Density Memory is enabled. #755</p>
</li>
<li>
<p>Hazelcast version in the license key text is logged as 99 in non-version specific licenses. #748</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-6"><a class="anchor" href="#3-6"></a><a class="link" href="#3-6">3.6</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
3.6 release.</p>
</div>
<div class="sect3">
<h4 id="features-36"><a class="anchor" href="#features-36"></a><a class="link" href="#features-36">New Features</a></h4>
<div class="paragraph">
<p>The following are the new features introduced with 3.6 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>High-Density Memory Store for Hazelcast Map</strong>: With this release,
Hazelcast Map data structure is now equipped with the High-Density
Memory Store, previously implemented for Hazelcast JCache. Please refer
to the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#setting-in-memory-format">Setting
In Memory Format section</a>.</p>
</li>
<li>
<p><strong>Discovery Service Provider Interface (Discovery SPI)</strong>: You can use
this SPI to discover Hazelcast instances on cloud environments provided
by jclouds®, Kubernetes and many more. The existing discovery mechanisms
that Hazelcast provides (Multicast, TCP/IP and Amazon EC2) have been
re-implemented on top of this new Discovery SPI. See the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#discovery-spi">Discovery
SPI section</a>.</p>
</li>
<li>
<p><strong>Client Protocol</strong>: This feature presents the Hazelcast’s new open
binary client protocol. See the <a href="http://hazelcast.org/documentation/">Open Binary Client Protocol
Documentation</a>.</p>
</li>
<li>
<p><strong>Client Cross Version Compatibility</strong>: Now you can upgrade your
Hazelcast clients independently from servers and other clients. Please
refer to <a href="http://hazelcast.org/documentation/">Open Binary Client Protocol
Documentation</a>.</p>
</li>
<li>
<p><strong>Support for cloud providers through jclouds®</strong>: Hazelcast now supports
deployments on all the well-known cloud providers through the jclouds®
open source library. See the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#discovering-members-with-jclouds">Discovering
Members with jclouds section</a>.</p>
</li>
<li>
<p><strong>Hot Restart Persistence</strong>: This new feature provides fast restarting
of the Hazelcast clusters. This is achieved by storing the state of the
cluster members to the disk. See the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#hot-restart-persistence">Hot
Restart Persistence section</a> for more details.</p>
</li>
<li>
<p><strong>Ringbuffer and Reliable Topic in Hazelcast Clients</strong>: The data
structures Ringbuffer and Reliable Topic recently introduced by
Hazelcast (with the release 3.5) are now implemented for Hazelcast Java
Client. Ringbuffer has also been implemented for .NET Client.</p>
</li>
<li>
<p><strong>Cluster Quorum for Hazelcast JCache</strong>: Cluster Quorum checks are now
provided for Hazelcast JCache implementations, too. See the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#defining-a-cluster-quorum">Defining
a Cluster Quorum section</a> to refresh and the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#icache-configuration">ICache
Configuration section</a> to learn configuring it for JCache.</p>
</li>
<li>
<p><strong>Split Brain Syndrome handler for Hazelcast JCache</strong>: Now Split Brain
Syndrome is handled in JCache as it is taken care in Hazelcast Map.
See the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#jcache-split-brain">JCache
Split-Brain section</a>.</p>
</li>
<li>
<p><strong>Partition Lost Listener for Hazelcast JCache</strong>: You can listen to
partition lost events fired in your Hazelcast JCache implementation.
See the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#icache-configuration">ICache
Configuration section</a>.</p>
</li>
<li>
<p><strong>Hazelcast Docker image</strong>: Now you can run Hazelcast using our image in
the Docker platform. See the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#deploying-using-docker">Deploying
using Docker section</a>.</p>
</li>
<li>
<p><strong>Lite Members</strong>: With the re-introduction of Hazelcast Lite Members (it
was removed starting with Hazelcast 3.0 release), you are able to
specify certain members in your cluster so that they do not store data.
You can use these lite members mostly for your task executions and
listener registrations. See the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#enabling-lite-members">Enabling
Lite Members section</a>.</p>
</li>
<li>
<p><strong>Querying in collections and arrays</strong>: Hazelcast is now able to query
and index attributes of objects stored in a collection or array. Please
refer to the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#querying-in-collections-and-arrays">Querying
in collections section</a>.</p>
</li>
<li>
<p><strong>Custom attributes extraction</strong>: It is now possible to extract a value
of an object’s attribute using a custom extractor class. See the
the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#custom-attributes">Custom
attributes section</a>.</p>
</li>
<li>
<p><strong>Acquiring locks with a lease time</strong>: Now, you can try to acquire locks
with a lease time. See the the comment for the method
<code>tryLock()</code> in
<a href="https://github.com/hazelcast/hazelcast/blob/master/hazelcast/src/main/java/com/hazelcast/core/ILock.java">ILock
code</a>.</p>
</li>
<li>
<p><strong>Monitoring the WAN replication</strong>: You can now monitor the state of
your WAN replications using the Hazelcast Management Center. Please
refer to the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#monitoring-wan-replication">Monitoring
WAN Replication section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enhancements-36"><a class="anchor" href="#enhancements-36"></a><a class="link" href="#enhancements-36">Enhancements</a></h4>
<div class="paragraph">
<p>The following are the enhancements introduced with 3.6 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Replicated Map improvements</strong>: The implementation of Hazelcast
replicated maps has been revisited. Please especially refer to the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#considerations-for-replicated-map">Considerations
for Replicated Map section</a>.</p>
</li>
<li>
<p><strong>Management Center improvements</strong>: Alerting mechanism added. Please
refer to the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#management-center">Management
Center section</a>.</p>
</li>
<li>
<p><strong>Paging Predicate improvements</strong>: With the performed improvements, now
random page accessing is supported. See the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#filtering-with-paging-predicates">Filtering
with Paging Predicates section</a>.</p>
</li>
<li>
<p><strong>Rule based query optimizations</strong>: This improvement introduces a query
optimizer based on static rewriting rules. The optimizer treats
predicates as immutable and returns a modified copy when the optimized
one is found. See the <code>hazelcast.query.optimizer.type</code>
property definition in the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#system-properties">System
Properties section</a>.</p>
</li>
<li>
<p><strong>WAN replication improvements</strong>: With the improvements performed on
Hazelcast’s WAN replication feature, you can now monitor WAN replication
events for each data structure and WAN replication now supports
different acknowledge types for each target cluster group. Please refer
to the
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#wan-replication-event-filtering-api">WAN
Replication Event Filtering API section</a> and
<a href="http://docs.hazelcast.org/docs/3.6/manual/html-single/index.html#wan-replication-acknowledge-types">WAN
Replication Acknowledge Types section</a> for more information.</p>
</li>
<li>
<p><strong>Improvements on Hazelcast’s OSGI support</strong>: With this improvement,
Hazelcast bundles provide OSGI services so that the users can manage
(create, access, shutdown) the Hazelcast instances through this service
on OSGI environments. Having the <code>hazelcast.osgi.start</code> property
enabled, when an Hazelcast OSGI service is activated, a default
Hazelcast instance is created automatically. These instances can be
served as an OSGI service to be accessed by other bundles. Registering
the created Hazelcast instances behavior is enabled by default and can
be disabled using the <code>hazelcast.osgi.register.disabled</code> property. Each
Hazelcast bundle provides a different OSGI service and their instances
can be grouped (clustered) together to prevent possible compatibility
issues between different Hazelcast versions/bundles. This grouping
behavior is enabled by default and can be disabled using the
<code>hazelcast.osgi.grouping.disabled</code> property. Hazelcast OSGI service’s
lifecycle (and also the owned/created instances’ lifecycles) are the
same as the owner Hazelcast bundles. When the bundle is stopped
(deactivated), owned service and Hazelcast instances are also
deactivated/shutdown and deregistered automatically. Then, when the
bundle is re-activated, its service is registered again. In addition,
the Hazelcast Enterprise JAR file is also an OSGI bundle like the
Hazelcast OSS JAR file.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the other improvements performed to solve the
enhancement issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>On WAN Replication Queue overrun, a <code>WANReplicationQueueFullException</code>
is expected, but instead, the client receives an
<code>UndefinedErrorCodeException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/">#7241</a></p>
</li>
<li>
<p>Approximate <code>max-size</code> calculation should be removed for IMap
eviction. <a href="https://github.com/hazelcast/hazelcast/issues/6463">#6463</a></p>
</li>
<li>
<p><code>SpringAwareWebFilter</code> should have a constructor which takes
properties as arguments. <a href="https://github.com/hazelcast/hazelcast/issues/6438">#6438</a></p>
</li>
<li>
<p>Client side and server side cache proxies handle <code>putAll</code> operation
one by one. This is not efficient. Records for this operation should be
grouped as per their partitions and should be sent and processed in
batches. <a href="https://github.com/hazelcast/hazelcast/issues/6367">#6367</a></p>
</li>
<li>
<p>Not requested events should not be sent to <code>MapListener</code> <a href="https://github.com/hazelcast/hazelcast/issues/6349">#6349</a></p>
</li>
<li>
<p>Inconsistent and potentially buggy design in <code>BasicCompletableFuture</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/6080">#6080</a></p>
</li>
<li>
<p>Starting with <code>hazelcast-wm 3.3</code>, OSGI Manifest Spring package
imports should be optional. <a href="https://github.com/hazelcast/hazelcast/issues/6072">#6072</a></p>
</li>
<li>
<p>The new client determines the partition ID for every invocation for
data structures like queue and list where the partition ID is static.
There is no need for this behavior. It should calculate the partition ID
for once when the proxy is created and continue to re-use it. <a href="https://github.com/hazelcast/hazelcast/issues/5848">#5848</a></p>
</li>
<li>
<p><code>Map.Entry</code> supplied to Entry Processor is not Serializable any more.
<a href="https://github.com/hazelcast/hazelcast/issues/5611">#5611</a></p>
</li>
<li>
<p>The configuration file <code>minimal-json</code> with the provided scope is not
picked up by the <em>shade</em> plugin. <a href="https://github.com/hazelcast/hazelcast/issues/5543">#5543</a></p>
</li>
<li>
<p>In Spring configuration, when a boolean property is injected for
<em>hazelcast</em> bean (<code>&lt;hz:hazelcast:&#8230;&#8203;.&lt;/hz:hazelcast</code>) a <code>SAXParse</code>
exception is thrown. <a href="https://github.com/hazelcast/hazelcast/issues/5528">#5528</a></p>
</li>
<li>
<p>Currently, key/value pairs are deserialized prior to the execution of
entry processor by default. This leads to the need of domain object at
the server side, even if entry processor never uses it. <a href="https://github.com/hazelcast/hazelcast/issues/5301">#5301</a></p>
</li>
<li>
<p>In Spring XML configuration, the attributes of <code>socket-options</code> should
be of type <code>xs:string</code>. <a href="https://github.com/hazelcast/hazelcast/issues/4700">#4700</a></p>
</li>
<li>
<p><code>ClientMembershipEvent</code> does not need to have the <code>member</code> field.
<a href="https://github.com/hazelcast/hazelcast/issues/4282">#4282</a></p>
</li>
<li>
<p>Hazelcast has <code>lock</code> with lease time feature but does not support
<code>tryLock</code> with lease time. <a href="https://github.com/hazelcast/hazelcast/issues/1564">#1564</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-36"><a class="anchor" href="#fixes-36"></a><a class="link" href="#fixes-36">Fixes</a></h4>
<div class="paragraph">
<p>The following are the fixed issues solved for 3.6 release.</p>
</div>
<div class="paragraph">
<p><strong>3.6 Fixes</strong></p>
</div>
<div class="ulist">
<ul>
<li>
<p>Lock requests hang forever after a split-brain recovery: When a member
hangs a few minutes, the cluster assumes that this frozen member as dead
and the master kicks it. When the frozen member comes back, after some
time they figure out it was a split-merge back activity. Problem is,
some of the lock requests hang forever without a timeout after the
merge. That means some of the previously acquired locks cannot be
released and hang in the cluster infinitely; no one can acquire them and
there is no one to release them anymore. <a href="https://github.com/hazelcast/hazelcast/issues/8647">#8647</a></p>
</li>
<li>
<p>In the manifest file, <code>org.jclouds.*</code> should be marked as optional
dependencies. <a href="https://github.com/hazelcast/hazelcast/issues/7318">#7318</a></p>
</li>
<li>
<p>Tests are needed for <code>WanReplicationPublisherDelegate</code>,
<code>WanReplicationEvent</code>, <code>MapReplicationUpdate</code> and
<code>AbstractMultipleEntryBackupOperation</code> in the Open Source WAN API.
<a href="https://github.com/hazelcast/hazelcast/issues/7315">#7315</a></p>
</li>
<li>
<p>Invocation of quorum listener requires at least an attempt to perform
a map operation. But it should not require this; just the crash of nodes
should be enough to use the quorum mechanism. <a href="https://github.com/hazelcast/hazelcast/issues/7300">#7300</a></p>
</li>
<li>
<p>Owned entry count to be used as the expected near cache hit count
should be calculated by checking the partition ownership in the
<code>NearCacheTest::testGetAll</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7285">#7285</a></p>
</li>
<li>
<p>The parameter <code>minEvictionCheckMillis</code> controls the maximum frequency
of evictions. It is 100ms by default. It means at most 1 eviction is
executed in a 100ms interval. No other <code>put()</code> operation within this
interval triggers an eviction. So, if the put rate is greater than 1 per
100ms, then the number of entries is growing regardless of the
<code>max-size-policy</code>. This eventually triggers a forced eviction which will
prevent <code>OutOfMemoryException</code>. Forced evictions are only hiding this
issue. Another possible solution is to keep the default interval as it
is and apply batching: When X eviction cycles are skipped due the
<code>minEvictionCheckMillis</code> parameter, then during the next cycle X + 1
entries should be evicted instead of just 1. <a href="https://github.com/hazelcast/hazelcast/issues/7268">#7268</a></p>
</li>
<li>
<p>Descriptions of some maximum size policies defined in the
<code>com.hazelcast.config.EvictionConfig.MaxSizePolicy</code> and
<code>com.hazelcast.config.MaxSizeConfig.MaxSizePolicy</code> are not clear and
confusing. They should be clarified. <a href="https://github.com/hazelcast/hazelcast/issues/7267">#7267</a></p>
</li>
<li>
<p>Tests under <code>TopicOverloadDistributedTest</code> are spuriously failing even
on the local machine. They need to be reviewed. <a href="https://github.com/hazelcast/hazelcast/issues/7266">#7266</a></p>
</li>
<li>
<p>When Hot Restart is enabled for any cache or map #681, #680:</p>
<div class="ulist">
<ul>
<li>
<p>In addition to any max-size policy configured FREE_NATIVE_MEMORY_PERCENTAGE, max-size of 20% policy is automatically applied to any caches which have Hot Restart configured.</p>
</li>
<li>
<p>On every mutation except delete, FREE_NATIVE_MEMORY_PERCENTAGE is checked and eviction is performed in addition to any configured policy cache.</p>
</li>
<li>
<p>If the max-size policy is explicitly set to FREE_NATIVE_MEMORY_PERCENTAGE, it is not permitted to be set below 20%.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Normal eviction does not work for High-Density backed IMap and the system relies on the forced eviction to free up memory. #664</p>
</li>
<li>
<p>A global level lock per operation thread should be implemented that will provide synchronization between operation thread and Hot Restart GC thread. #623</p>
</li>
<li>
<p>Hazelcast Enterprise serialization service cannot deserialize Portable object from High-Density memory data. #617</p>
</li>
<li>
<p>Hot Restart should detect partition thread count change and fail with a meaningful error. Currently, thread count change is not detected earlier and operations fail later. #615</p>
</li>
<li>
<p>Current approach for High-Density memory de-allocation is designed for map.destroy(). It is slow during a cluster shutdown with large data size. #613</p>
</li>
<li>
<p>A warning message should be logged when a node is started, if native memory size per partition exceeds a threshold. #596</p>
</li>
<li>
<p>WAN replication&#8217;s ACK_ON_TRANSMIT ACK type name should be changed to ACK_ON_RECEIPT as the former one might mislead users. #594</p>
</li>
<li>
<p>When WAN replication event queue is full, an exception should be thrown. Moreover, WAN replication related global configurations should be removed and moved to publisher level. #588</p>
</li>
<li>
<p>Entries coming from HDMergeOperation might have wrong TTL, last update and access time values. The reason is the fact that, creationTime of the entry is set as the current time of the member that HDMergeOperation runs, however, entry last update time and last access time are merged from the incoming entry. #582</p>
</li>
<li>
<p>NativeMemoryStats should be checked and increased atomically inside StandardMemoryManager. Otherwise, maximum memory limit might be exceeded when there are concurrent accesses to NativeMemoryStats over the method StandardMemoryManager::allocate(). #542</p>
</li>
<li>
<p>High-Density backed JCache&#8217;s CacheGetAllOperation should create HiDensityCacheRecordStore, if it is not created yet. Because even though record store for partition is not touched yet (for example, no puts), records might be taken through CacheLoader. #534</p>
</li>
<li>
<p>EnterpriseLocalMapStatsProvider, unlike LocalMapStatsProvider, does not set near cache statistics. #478</p>
</li>
<li>
<p>When read-backup-data = true, then a record store is accessed by a user thread directly. This causes issues with High-Density (HD) backed IMap as HD Memory is effectively thread-local. #476</p>
</li>
<li>
<p>EntryListener on a Continuous Query Cache does not have oldValue in the EntryEvent. #461</p>
</li>
<li>
<p>Queries break assumptions made by HD Memory. Hazelcast runs queries on generic threads by default. HD Memory is effectively thread-local and should be accessed by partition threads only. But, HDMapQueryEngineImpl overrides queryUsingFullTableScan and queryParallel as an attempt to execute queries on partition threads. This is not sufficient. #431</p>
</li>
<li>
<p>Tomcat P2P web session replication does not accept setting the license key via group property. #367</p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong>3.6-RC1 Fixes</strong></p>
</div>
<div class="paragraph">
<p>This section lists the enhancements and fixed issues for 3.6-RC1
(Release Candidate 1) release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Javadoc for <code>IMap.putAll()</code> does not mention the lack of atomicity in
the invocation. <a href="https://github.com/hazelcast/hazelcast/issues/7256">#7256</a></p>
</li>
<li>
<p>When a WAN Queue overrun occurs (with exception enabled), the source
cluster logs an excessive amount of noise. This should to be logged.
<a href="https://github.com/hazelcast/hazelcast/issues/7242">#7242</a></p>
</li>
<li>
<p>When using Hazelcast as a JCache provider: As JSR-107 Javadoc states,
an update should not reset expiry time for <code>CreatedExpiryPolicy</code>.
However, when a cache entry is updated, it does not expire. <a href="https://github.com/hazelcast/hazelcast/issues/7236">#7236</a></p>
</li>
<li>
<p>Default WAN acknowledge type should be <code>ACK_ON_RECEIPT</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7160">#7160</a></p>
</li>
<li>
<p><code>NullPointerException</code> is thrown in
<code>ClientRegressionWithMockNetworkTest</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7148">#7148</a></p>
</li>
<li>
<p>Changing clusters in the Management Center does not update/refresh the
cluster members in the Scripting tab. <a href="https://github.com/hazelcast/hazelcast/issues/7119">#7119</a></p>
</li>
<li>
<p>A fix is needed for operation retries in
<code>PartitionCheckIfLoadedOperation</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7114">#7114</a></p>
</li>
<li>
<p>WAN Queue counts in the Management Center for Hazelcast 3.6-EA3 are
not correct. <a href="https://github.com/hazelcast/hazelcast/issues/7100">#7100</a></p>
</li>
<li>
<p>Hazelcast 3.6 Reference Manual is not correct for its Enterprise WAN
Replication content. <a href="https://github.com/hazelcast/hazelcast/issues/7099">#7099</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong>3.6-EA3 Fixes</strong></p>
</div>
<div class="paragraph">
<p>This section lists the enhancements and fixed issues for 3.6-EA3 (Early
Access 3) release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>NullPointerException</code> is thrown for the thread <code>cached4</code> in a test
which uses <code>MapLoader</code>. <a href="https://github.com/hazelcast/hazelcast/issues/7098">#7098</a></p>
</li>
<li>
<p>The method <code>loadInternal</code> of <code>MapProxySupport</code> requires <code>dataKeys</code>.
Hence, a serialization step should be added to <code>MapProxy.loadAll()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/7090">#7090</a></p>
</li>
<li>
<p>Near cache heap cost calculation is not proper when the cache gets
concurrent misses. <a href="https://github.com/hazelcast/hazelcast/issues/7057">#7057</a></p>
</li>
<li>
<p><code>IQueue</code> accepts null values from the Hazelcast Java client. <a href="https://github.com/hazelcast/hazelcast/issues/7048">#7048</a></p>
</li>
<li>
<p><code>WriteBehindMapStore</code> for a map that has <code>OBJECT</code> as the in-memory
format causes the entry processors to serialize the objects. <a href="https://github.com/hazelcast/hazelcast/issues/7040">#7040</a></p>
</li>
<li>
<p>Latest code does not include the file
<code>com.hazelcast.client.impl.protocol.codec.CacheContainsKeyCodec</code> and
build fails. <a href="https://github.com/hazelcast/hazelcast/issues/7019">#7019</a></p>
</li>
<li>
<p>Two members of a cluster become masters and ignore each other. <a href="https://github.com/hazelcast/hazelcast/issues/7016">#7016</a></p>
</li>
<li>
<p><code>AbstractCacheRecordStore</code> should update the field <code>isOwner</code> while it
is being cleared after migration. <a href="https://github.com/hazelcast/hazelcast/issues/6983">#6983</a></p>
</li>
<li>
<p>There are memory leaks in the local map statistics and near cache
invalidation queues. The map containers also leak memory caused either
by the near cache invalidation mechanism (when re-creating objects to
check whether the near cache is enabled) or
<code>MapPartitionDestroyOperation</code> (when re-creating objects and trying to
the backup count). <a href="https://github.com/hazelcast/hazelcast/issues/6972">#6972</a></p>
</li>
<li>
<p>When the <code>lite-member</code> flag is used within the Spring context, its
<code>enabled</code> attribute does not work properly. <a href="https://github.com/hazelcast/hazelcast/issues/6945">#6945</a></p>
</li>
<li>
<p><code>LoadAllTask</code> for the client and server side cache proxies should also
handle the <code>Throwable</code>, not just the <code>Exception</code>. <a href="https://github.com/hazelcast/hazelcast/issues/6944">#6944</a></p>
</li>
<li>
<p>The <code>enable</code> attribute of the <code>partition-group</code> element in the
<code>Hazelcast-Spring.xsd</code> scheme should have the type <code>string</code>, not
<code>boolean</code>. <a href="https://github.com/hazelcast/hazelcast/issues/6927">#6927</a></p>
</li>
<li>
<p>There is a left-over method in the Discovery SPI configuration, namely
<code>addDiscoveryProviderConfig</code>. <a href="https://github.com/hazelcast/hazelcast/issues/6911">#6911</a></p>
</li>
<li>
<p><code>InMemoryFormat.OBJECT</code> does not work with the <code>max-size</code> policies
<code>USED_HEAP_SIZE</code> and <code>USED_HEAP_PERCENTAGE</code>. <a href="https://github.com/hazelcast/hazelcast/issues/6875">#6875</a></p>
</li>
<li>
<p><code>PublicAddressTest</code> has been ignored due to the running time. <a href="https://github.com/hazelcast/hazelcast/issues/6858">#6858</a></p>
</li>
<li>
<p><code>NullPointerException</code> is thrown in <code>ClientExecutionPoolSizeLowTest</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/6853">#6853</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong>3.6-EA2 Fixes</strong></p>
</div>
<div class="paragraph">
<p>This section lists the enhancements and fixed issues for 3.6-EA2 (Early
Access 2) release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>MapLoader may insert null values into IMap causing memory leak. <a href="https://github.com/hazelcast/hazelcast/issues/6830">#6830</a></p>
</li>
<li>
<p>When replicated map entries are migrated to a new destination; TTL
eviction should be scheduled, eviction should be retried when a failure
caused by the migration happens and the sync interval should be
increased. <a href="https://github.com/hazelcast/hazelcast/issues/6799">#6799</a></p>
</li>
<li>
<p>There is a logical error in the method <code>Ringbuffer.readManyAsync()</code>
when <code>minSize = 0</code>. In this case, the Ringbuffer is not read and nothing
is returned. <a href="https://github.com/hazelcast/hazelcast/issues/6787">#6787</a></p>
</li>
<li>
<p>When a listener’s registration is made from the listener
configuration, an error occurs during the listener initialization.
<a href="https://github.com/hazelcast/hazelcast/issues/6784">#6784</a></p>
</li>
<li>
<p>Remaining cache invalidation messages should be flushed on the
<code>ICacheService</code> while the member is in the <code>SHUTTING_DOWN</code> state. <a href="https://github.com/hazelcast/hazelcast/issues/6678">#6778</a></p>
</li>
<li>
<p>When a client cannot send a request to one of the connections,
<code>TargetNotMemberException</code> is thrown. This name is confusing the
Hazelcast users. <a href="https://github.com/hazelcast/hazelcast/issues/6766">#6766</a></p>
</li>
<li>
<p><code>ClassCastException</code> is thrown when using <code>Timestamp</code> within
<code>DataSerializable</code>. <a href="https://github.com/hazelcast/hazelcast/issues/6759">#6759</a></p>
</li>
<li>
<p>The method <code>destroyDistributedObject()</code> of <code>ReplicatedMapService</code>
iterates over partition containers and record stores and destroys them.
While destroying, record store calls <code>destroyDistributedObject()</code> which
leads to an infinite loop. <a href="https://github.com/hazelcast/hazelcast/issues/6754">#6754</a></p>
</li>
<li>
<p>Hazelcast does not inject its instance into <code>HazelcastInstanceAware</code>
registered via classname. <a href="https://github.com/hazelcast/hazelcast/issues/6697">#6697</a></p>
</li>
<li>
<p>There is a sporadic startup failure in 3.6-EA. <a href="https://github.com/hazelcast/hazelcast/issues/6684">#6684</a></p>
</li>
<li>
<p>There is no need to use <code>CacheLoader</code> inside the client/server side
cache proxies. <a href="https://github.com/hazelcast/hazelcast/issues/6676">#6676</a></p>
</li>
<li>
<p>Fixed wrong calculation of eviction removal size when <code>PER_NODE</code>
<code>max-size</code> policy is used. <a href="https://github.com/hazelcast/hazelcast/issues/6671">#6671</a></p>
</li>
<li>
<p>If the cluster state is not active <code>RepartitioningTask</code> should not be
triggered. Otherwise, it causes infinite retries and prevents the member
from shutdown. <a href="https://github.com/hazelcast/hazelcast/issues/6663">#6663</a></p>
</li>
<li>
<p>There are broken XML configuration tests in the Hazelcast client
package. <a href="https://github.com/hazelcast/hazelcast/issues/6633">#6633</a></p>
</li>
<li>
<p>There is a memory leak since the method <code>publishBathcedEvents</code> does
not remove the events from <code>batchEvent</code>. <a href="https://github.com/hazelcast/hazelcast/issues/6618">#6618</a></p>
</li>
<li>
<p>Custom credentials class is not de-serialized on the server side.
<a href="https://github.com/hazelcast/hazelcast/issues/6615">#6615</a></p>
</li>
<li>
<p>Lite member element should be added to the Hazelcast Spring
configuration. <a href="https://github.com/hazelcast/hazelcast/issues/6605">#6605</a></p>
</li>
<li>
<p><code>EntryListener</code> shows the unprocessed value in combination with
<code>PostProcessingMapStore</code>. <a href="https://github.com/hazelcast/hazelcast/issues/6588">#6588</a></p>
</li>
<li>
<p>Clients cannot submit <code>HazelcastInstanceAware</code> callables. <a href="https://github.com/hazelcast/hazelcast/issues/6570">#6570</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong>3.6-EA Fixes</strong></p>
</div>
<div class="paragraph">
<p>The following are the issues solved for Hazelcast 3.6-EA (Early Access)
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>The method <code>map.size()</code> waits indefinitely after the shutdown of a
node. <a href="https://github.com/hazelcast/hazelcast/issues/6538">#6538</a></p>
</li>
<li>
<p><code>HazelcastCachingProvider</code> does not use the specified instance (by the
object) when <code>instance-name</code> is not specified. <a href="https://github.com/hazelcast/hazelcast/issues/6454">#6454</a></p>
</li>
<li>
<p><code>onExecutionFailure</code> should be called before returning from <code>run</code>, if
backup is not valid. <a href="https://github.com/hazelcast/hazelcast/issues/6420">#6420</a></p>
</li>
<li>
<p><code>OperationThread.priorityPendingCount()</code> should return
<code>scheduleQueue.prioritySize()</code> instead of <code>scheduleQueue.normalSize()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/6318">#6318</a></p>
</li>
<li>
<p>There is a growth in heap usage caused by a memory leak in the
following scenario: A node in the cluster regularly creates maps and
puts entries into it, again in regular intervals. Another node removes
the entries minutes after they were put, and if the map is empty, it
destroys the map. <a href="https://github.com/hazelcast/hazelcast/issues/6317">#6317</a></p>
</li>
<li>
<p>Currently, there is an <code>EntryEvictedListener</code> that is notified both
for expiration and eviction events. There should be a separate listener
for expired entries: eviction happens due to size constraints, and
expiry is once the entry has expired. <a href="https://github.com/hazelcast/hazelcast/issues/6311">#6311</a></p>
</li>
<li>
<p>`InvocationFuture`s async calls do not detect the lost operations.
<a href="https://github.com/hazelcast/hazelcast/issues/6250">#6250</a></p>
</li>
<li>
<p>When the method <code>setBooleanAttribute</code> of the class <code>Member</code> is run,
Null Pointer Exception is occurred on <code>STDOUT</code>. The problem is in the
method <code>sendMemberAttributeEvent</code> of the class <code>ClusterServiceImpl</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/6223">#6223</a></p>
</li>
<li>
<p><code>IOBalancer</code> keeps references of all the socket reader/writers but
when destroying the connection, they release the references for only the
ones which has endpoints. This causes a memory leak. <a href="https://github.com/hazelcast/hazelcast/issues/6199">#6199</a></p>
</li>
<li>
<p><code>ILIKE</code> and <code>Regex</code> examples should be added to the Reference Manual
under the <code>Supported SQL Syntax</code> section. <a href="https://github.com/hazelcast/hazelcast/issues/6190">#6190</a></p>
</li>
<li>
<p><code>GroupProperty</code> defaulting does not work properly when programmatic
configuration is used. <a href="https://github.com/hazelcast/hazelcast/issues/6174">#6174</a></p>
</li>
<li>
<p>When integrating Hazelcast in Spring Boot: if <code>HazelcastInstance</code> is
created using the default <code>newHazelcastInstance</code> static method, then an
<code>HazelcastInstance</code> whose <code>Config</code> has a valid <code>configurationUrl</code>
property is created. However, <code>XmlBuilder</code> does not set this URL in the
configuration it parses. <a href="https://github.com/hazelcast/hazelcast/issues/6061">#6061</a></p>
</li>
<li>
<p>Hazelcast’s latest snapshot run fails due to the introduction of
<code>ClientExceptionFactory</code> which has been developed for exception
processing and working well in that sense. <a href="https://github.com/hazelcast/hazelcast/issues/6010">#6010</a></p>
</li>
<li>
<p>The class <code>HazelcastXATest</code> has only fast and slow modes (nothing in
between) and possibly due to this, sometimes a transaction is waiting
for a timeout. Either the transaction recovery or the test class itself
is racy. <a href="https://github.com/hazelcast/hazelcast/issues/5923">#5923</a></p>
</li>
<li>
<p>A memory leak occurs when a listener is added and removed from client.
A <code>remove</code> runnable in the collection that is stored in
<code>ClientEndpointImpl</code> is the leftover. This runnable collection is used
to cleanup the listeners when client is disconnected, it should be
removed too after the listener is removed. <a href="https://github.com/hazelcast/hazelcast/issues/5893">#5893</a></p>
</li>
<li>
<p>The class <code>CacheRemoveAllOperation</code> does not send the <code>completed</code>
event in some cases, e.g. if <code>CacheRecordStore</code> for that partition is
not created yet or if the filtered keys are empty. <a href="https://github.com/hazelcast/hazelcast/issues/5865">#5865</a></p>
</li>
<li>
<p>In the class <code>MapProxyImpl</code>, the methods <code>executeOnKey</code> and
<code>submitToKey</code> create an <code>EntryOperation</code> with the thread ID set. This
does not happen with the class <code>ClientMapProxy</code>. Therefore, the class
<code>MapExecuteOnKeyRequest</code> should take a thread ID and set this on the
generated <code>EntryOperation</code>. <a href="https://github.com/hazelcast/hazelcast/issues/5857">#5857</a></p>
</li>
<li>
<p>The method <code>IndexImpl.getRecords()</code> fails with Null Pointer Exception
due to the inconsistency between the <code>not(&#8230;&#8203;equals())</code> and
<code>notEquals()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/5807">#5807</a></p>
</li>
<li>
<p>The method <code>HazelcastHttpSession.getAttribute()</code> for WebFilter does
not work when <code>deferredWrite</code> is set to <code>true</code>. <a href="https://github.com/hazelcast/hazelcast/issues/5798">#5798</a></p>
</li>
<li>
<p>When <code>hazelcast.nio.faststring</code> is enabled, <code>UTFEncoderDecoder</code> tries
to create a <code>FastStringCreator</code>. However, if the reflection is not
available due to the security manager, <code>buildFastStringCreator</code> returns
null and consequently <code>StringCreator</code> becomes null. <a href="https://github.com/hazelcast/hazelcast/issues/5777">#5777</a></p>
</li>
<li>
<p><code>hazelcast-jca-rar/pom.xml</code> references to <code>src/main/rar/ra.xml</code> which
does not exist. <a href="https://github.com/hazelcast/hazelcast/issues/5760">#5760</a></p>
</li>
<li>
<p>The Maven profile <code>mvn clean compile -Pqa</code> does not exist but it is
documented in the README of Hazelcast. <a href="https://github.com/hazelcast/hazelcast/issues/5746">#5746</a></p>
</li>
<li>
<p><code>PerformanceLogFile</code> only compiles if JDK 1.7 or above is used. <a href="https://github.com/hazelcast/hazelcast/issues/5729">#5729</a></p>
</li>
<li>
<p>Currently, for every deserialization a <code>BufferObjectDataInput</code> is
created. This generates waste since it is created with an array of data
for every deserialization. The <code>BufferObjectDataOutput</code> is already
cached; the input should use a similar approach. <a href="https://github.com/hazelcast/hazelcast/issues/5562">#5562</a></p>
</li>
<li>
<p>When any entities are defined as read only in the Hibernate L2 cache,
an invalidation of the cache (such as caused by executing a native
SQLQuery) leads to the error <code>UnsupportedOperationException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/5561">#5561</a></p>
</li>
<li>
<p>The performance impacts of TWO_PHASE and LOCAL transaction types
should be documented. <a href="https://github.com/hazelcast/hazelcast/issues/5075">#5075</a></p>
</li>
<li>
<p>Client requests are very inefficient when determining the partition
ID. <a href="https://github.com/hazelcast/hazelcast/issues/4940">#4940</a></p>
</li>
<li>
<p>The method <code>keySet()</code> relies on <code>QueryOperation</code>. The <code>QueryOperation</code>
does not accept <code>IterationType</code> - it always returns both keys and
values. This can lead to unnecessary load and potentially even an OOM
exception. <a href="https://github.com/hazelcast/hazelcast/issues/4642">#4642</a></p>
</li>
<li>
<p>Hazelcast is stuck in TIMED_WAITING when used as 2nd level cache for
Hibernate. <a href="https://github.com/hazelcast/hazelcast/issues/4406">#4406</a></p>
</li>
<li>
<p>Management Center license loading problem when REST API is used. <a href="https://github.com/hazelcast/hazelcast/issues/189">#189</a></p>
</li>
<li>
<p>Executor monitoring in Management Center does not show the
<code>cancelled</code> operations" <a href="https://github.com/hazelcast/hazelcast/issues/177">#177</a></p>
</li>
<li>
<p>When an alert for a data structure (map, queue, etc.) with its
specific name is created, a <code>NullPointerException</code> is thrown after the
cluster is reset. <a href="https://github.com/hazelcast/hazelcast/issues/175">#175</a></p>
</li>
<li>
<p>Default directory name is hardcoded as <code>mancenter3.5</code> and it needs
to be maintained for every major release. This process should be
dynamic. <a href="https://github.com/hazelcast/hazelcast/issues/174">#174</a></p>
</li>
<li>
<p>Throughput statistics for Map shows nothing when the <code>putAll()</code> method
is used. <a href="https://github.com/hazelcast/hazelcast/issues/159">#159</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-36"><a class="anchor" href="#contributors-36"></a><a class="link" href="#contributors-36">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/cszmajda">cszmajda</a></p>
</li>
<li>
<p><a href="https://github.com/matjohns">Mat Johns</a></p>
</li>
<li>
<p><a href="https://github.com/adessaigne">adessaigne</a></p>
</li>
<li>
<p><a href="https://github.com/Fabryprog">Fabrizio Spataro</a></p>
</li>
<li>
<p><a href="https://github.com/LoneRifle">LoneRifle</a></p>
</li>
<li>
<p><a href="https://github.com/fwassmer">fwassmer</a></p>
</li>
<li>
<p><a href="https://github.com/cetin">Çetin</a></p>
</li>
<li>
<p><a href="https://github.com/henri-tremblay">Henri Tremblay</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-5-5"><a class="anchor" href="#3-5-5"></a><a class="link" href="#3-5-5">3.5.5</a></h3>
<div class="paragraph">
<p>The following are the issues solved for Hazelcast 3.5.5 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>When <code>hazelcast.jmx</code> option is enabled, MBeans are created for every
Hazelcast object but they are never removed. When destroying Hazelcast
object with the method <code>destroy()</code>,
<code>DistributedObjectEvent::getDistributedObject()</code> throws
<code>DistributedObjectDestroyedException</code> and stops the process of
unregistering MBeans. MBeans are left forever causing memory leaks and
they can be seen in VisualVM.
<a href="https://github.com/hazelcast/hazelcast/issues/7329">#7329</a></p>
</li>
<li>
<p><code>IdGenerator</code> sometimes generates duplicate IDs if it is put under
stress. <a href="https://github.com/hazelcast/hazelcast/issues/7299">#7299</a></p>
</li>
<li>
<p>The method <code>IAtomicLong.compareAndSet()</code> does not properly backup its
updated state. In a two node cluster, if you use this method and then
shutdown the owner of the <code>IAtomicLong</code>, the remaining node no longer
sees the updated value.
<a href="https://github.com/hazelcast/hazelcast/issues/7290">#7290</a></p>
</li>
<li>
<p><code>InvocationMonitor</code> checks for the same invocations continuously.
<a href="https://github.com/hazelcast/hazelcast/issues/7170">#7170</a></p>
</li>
<li>
<p>The methods <code>IMap.getAsync</code> and <code>IMap.putAsync</code> should update the
statistics <code>getCount</code> and <code>putCount</code>, etc.
<a href="https://github.com/hazelcast/hazelcast/issues/7109">#7109</a></p>
</li>
<li>
<p><code>NullPointerException</code> is thrown for
<code>CoalescedWriteBehindQueue.removeFirstOccurrence()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/7082">#7082</a></p>
</li>
<li>
<p>The quorum definition in the Spring context is not correct.
<a href="https://github.com/hazelcast/hazelcast/issues/6946">#6946</a></p>
</li>
<li>
<p>While publishing events, IMap operations convert the value to data
even if the registered listener does not request the value.
<a href="https://github.com/hazelcast/hazelcast/issues/6866">#6866</a></p>
</li>
<li>
<p>Map entry event listeners are not invoked on the clients of WAN
replication target cluster.
<a href="https://github.com/hazelcast/hazelcast/issues/6802">#6802</a></p>
</li>
<li>
<p>The method <code>putAsync</code> does not affect
<code>LocalMapStats.getPutOperationCount()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/6731">#6731</a></p>
</li>
<li>
<p>Possible memory leak when using <code>IMap.containsKey</code>. Problem happens
when <code>containsKey</code> is used for a value that exists in the <code>MapStore</code>.
Entry is loaded from the store but it does not get added to the map (no
event is triggered in this case), eventually the system crashes with no
memory. <a href="https://github.com/hazelcast/hazelcast/issues/6517">#6517</a></p>
</li>
<li>
<p>Performance test with Spring Batch throws
<code>TargetDisconnectedException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4230">#4230</a></p>
</li>
<li>
<p>Web session replication does not work as expected during a shutdown.
<a href="https://github.com/hazelcast/hazelcast/issues/3362">#3362</a></p>
</li>
<li>
<p>The parameter <code>session-ttl-seconds</code> is set after the instance
creation. It should be set before the instance is created.
<a href="https://github.com/hazelcast/hazelcast/issues/2377">#2377</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-5-4"><a class="anchor" href="#3-5-4"></a><a class="link" href="#3-5-4">3.5.4</a></h3>
<div class="paragraph">
<p>The following are the issues solved for Hazelcast 3.5.4 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Fixed the wrong calculation of eviction removal size when <code>PER_NODE</code>
<code>max-size</code> policy is used.
<a href="https://github.com/hazelcast/hazelcast/pull/6674">#6674</a></p>
</li>
<li>
<p>Lazy deserialization is required while events are being processed.
<a href="https://github.com/hazelcast/hazelcast/issues/6582">#6582</a></p>
</li>
<li>
<p>Thread Dumps freeze in the Management Center. It shows the same thread
dumps for all connected members, same traces and same thread IDs. And
they are shown on the same line numbers.
<a href="https://github.com/hazelcast/hazelcast/issues/6536">#6536</a></p>
</li>
<li>
<p>In Hazelcast 3.4.*, the methods
<code>migrationStarted</code>/<code>migrationCompleted</code> were only called once when a
partition migration was done. But in 3.5, these methods are called twice
for each partition.
<a href="https://github.com/hazelcast/hazelcast/issues/6396">#6396</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-5-3"><a class="anchor" href="#3-5-3"></a><a class="link" href="#3-5-3">3.5.3</a></h3>
<div class="paragraph">
<p>The following are the enhancements performed for Hazelcast 3.5.3
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Cache statistics are only supported at the server side and exposed by
<code>CacheProxy</code>. At the client side, cache statistics are not calculated
and supported so <code>UnsupportedOperationException</code> is thrown at
<code>ClientCacheProxy</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/6262">#6262</a></p>
</li>
<li>
<p>Added <code>iam-role</code> support to Hazelcast Cloud module. So users can use
Hazelcast Cloud module without configuring access keys.
<a href="https://github.com/hazelcast/hazelcast/issues/2630">#2630</a></p>
</li>
<li>
<p>OSGi metadata are missing from Hazelcast&#8217;s manifest.mf. [#372]</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the fixed issues for Hazelcast 3.5.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>ClientInvocationFuture</code> may hang when the deserialized response is
null. <a href="https://github.com/hazelcast/hazelcast/issues/6363">#6363</a></p>
</li>
<li>
<p>The method <code>CacheStatisticsImpl::getAverageRemoveTime()</code> uses the
<code>get</code> count on the cache but it must use the <code>remove</code> count.
<a href="https://github.com/hazelcast/hazelcast/issues/6314">#6314</a></p>
</li>
<li>
<p>Hazelcast <code>console.sh</code> should support changing namespaces that contain
space characters.
<a href="https://github.com/hazelcast/hazelcast/issues/6307">#6307</a></p>
</li>
<li>
<p>The client fails to properly reconnect to a single node cluster after
the Hazelcast server is restarted.
<a href="https://github.com/hazelcast/hazelcast/issues/6168">#6168</a></p>
</li>
<li>
<p>Transactional Queue ordering on rollback can be violated. The reason
is that the <code>QueueContainer</code> does not rollback the changes in the order
that is opposite to the order of the items when they were added. It is a
random order due to the fact that the changes are stored in a hashmap.
<a href="https://github.com/hazelcast/hazelcast/issues/6156">#6156</a></p>
</li>
<li>
<p>When a field, that is only available in a subclass of an interface, is
indexed, Null Pointer Exception is thrown.
<a href="https://github.com/hazelcast/hazelcast/issues/6151">#6151</a></p>
</li>
<li>
<p>Extra <code>\r\n</code> in the body of the REST API responses causing warnings.
<a href="https://github.com/hazelcast/hazelcast/issues/6144">#6144</a></p>
</li>
<li>
<p>Near cache on the client size for replicated map does not get
invalidated after replicated map changes.
<a href="https://github.com/hazelcast/hazelcast/issues/5508">#5694</a></p>
</li>
<li>
<p><code>IList.iterator()</code> and <code>listIterator()</code> do not support the method
<code>iterator.remove()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/5508">#5508</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-5-2"><a class="anchor" href="#3-5-2"></a><a class="link" href="#3-5-2">3.5.2</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for Hazelcast 3.5.2 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>There is a performance issue: Even when the Spring boot application is
doing nothing, CPU consumption is very high. A thread named
<code>hazelcast-wm.ensureInstance</code> consumes CPU around 70% because of the
method <code>ClusteredSessionService.run()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/6052">#6052</a></p>
</li>
<li>
<p>MapLoader blocks the entire partition when loading a single entry.
<a href="https://github.com/hazelcast/hazelcast/issues/5818">#5818</a></p>
</li>
<li>
<p>The method <code>IMap.getAll</code> by-passes interceptors in the Hazelcast 3.3
and higher versions.
<a href="https://github.com/hazelcast/hazelcast/issues/5775">#5775</a></p>
</li>
<li>
<p><code>AWSJoiner</code> fails for the regions except us-east-1.
<a href="https://github.com/hazelcast/hazelcast/issues/5653">#5653</a></p>
</li>
<li>
<p>Getting an instance of <code>sun.misc.Unsafe</code> class does not work on HP-UX
operating system.
<a href="https://github.com/hazelcast/hazelcast/issues/5518">#5518</a></p>
</li>
<li>
<p><code>AWSAddressTranslator</code> always uses the default region and this causes
the HazelcastClient to be unable to join a Hazelcast AWS cluster in a
non-default region.
<a href="https://github.com/hazelcast/hazelcast/issues/5446">#5446</a></p>
</li>
<li>
<p>The test code <code>JettyWebFilterTest.java</code> does not fail properly.
<a href="https://github.com/hazelcast/hazelcast/issues/5188">#5188</a></p>
</li>
<li>
<p>Management Center behaves unfriendly when map entries increase.
<a href="https://github.com/hazelcast/hazelcast/issues/4895">#4895</a></p>
</li>
<li>
<p>In <code>hazelcast-client.xml</code>, if the region is configured but
<code>host-header</code> is not provided, the configuration gives a default
endpoint value of <code>ec2.amazonaws.com</code>. It should give, for example,
<code>ec2.eu-west-1.amazonaws.com</code> when the region is eu-west-1 and
<code>host-header</code> is not provided.
<a href="https://github.com/hazelcast/hazelcast/issues/4731">#4731</a></p>
</li>
<li>
<p>Too much CPU is used when Hazelcast is idle.
<a href="https://github.com/hazelcast/hazelcast/issues/81">#81</a></p>
</li>
<li>
<p>DEBUG property of StandardMemoryManager should not be static. #330</p>
</li>
<li>
<p>SampleableElasticHashMap.LazySamplingEntryIterableIterator::iterate may overflow the bounds of allocated memory while sampling in segments with random index. While iterating to left and right, bounds must be checked since randomly generated index may overflow bounds and causes SIGSEGV. #319</p>
</li>
<li>
<p>If the key(s) and/or value(s) are read to native memory during an operation, their memory usage must be handled if they are stored. #316</p>
</li>
<li>
<p>An expired entry is not disposed at processExpiredEntry when it is removed. #315</p>
</li>
<li>
<p>If the key data passed to HiDensityNativeMemoryCacheRecordStore is a NativeMemoryData and if the value is replaced wits its old value, since the key is not changed, the key which is passed to this HiDensityNativeMemoryCacheRecordStore must be disposed to prevent memory leak. #309</p>
</li>
<li>
<p>EvictableHiDensityRecordMap::evict method does not invoke EvictionListener if the sampled key is a type of NativeMemoryData. #306</p>
</li>
<li>
<p>If the putRecord fails in createRecordWithExpiry, the created record must be disposed at here locally by overriding createRecordWithExpiry method in HiDensityNativeMemoryCacheRecordStore. #305</p>
</li>
<li>
<p>Serialization of com.hazelcast.cache.hidensity.operation.CachePutAllBackupOperation does not seem correct. It is trying to access the service during serialization but it is not possible. #296</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-5-1"><a class="anchor" href="#3-5-1"></a><a class="link" href="#3-5-1">3.5.1</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for Hazelcast 3.5.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Hazelcast Management Center uses <code>UpdateMapConfigOperation</code> to update
map configurations. This operation simply replaces the map configuration
of the related map container. However, this replacement has no effect
for <code>maxIdleSeconds</code> and <code>timeToLiveSeconds</code> properties of the map
configuration since they are not used in the map container directly.
They are assigned to the final variables during map container creation
and never touched again.
<a href="https://github.com/hazelcast/hazelcast/issues/5593">#5593</a></p>
</li>
<li>
<p>Destroying a map just after creating it produces double create/destroy
events for <code>DistributedObjectListener</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/5592">#5592</a></p>
</li>
<li>
<p>Map does not allow changing its maximum size, TTL and maximum idle
properties. However, these fields are editable in the <code>Map Config</code>
popup of Management Center. These fields should be disabled to prevent
misguiding. <a href="https://github.com/hazelcast/hazelcast/issues/5591">#5591</a></p>
</li>
<li>
<p>Map is destroyed using <code>IMap.destroy()</code> but then it is immediately
recreated. <a href="https://github.com/hazelcast/hazelcast/issues/5554">#5554</a></p>
</li>
<li>
<p>There should be a better calculation when calling the method
<code>getApproximateMaxSize()</code> related to casting. Its return type is <code>int</code>
and this causes the map entries to be evicted all the time when, for
example, the eviction policy for an IMap is set to heap percentage with
the value 1%.
<a href="https://github.com/hazelcast/hazelcast/issues/5516">#5516</a></p>
</li>
<li>
<p>All <code>onResponse()</code> calls on a <code>MultiExecutionCallback</code> should be made
before the method <code>onComplete()</code> is called. There exists a race
condition in <code>ExecutionCallbackAdapterFactory</code> which permits the method
<code>onComplete()</code> to be called before all <code>onResponse()</code> calls are made.
<a href="https://github.com/hazelcast/hazelcast/issues/5490">#5490</a></p>
</li>
<li>
<p>Hazelcast Management Center&#8217;s Scripting tab is not refreshed when a
new node joins to the cluster.
<a href="https://github.com/hazelcast/hazelcast/issues/4738">#4738</a></p>
</li>
<li>
<p>When updating a map entry which is replicated over WAN, the TTL (time
to live) is not honored in the remote cluster map. When the timeout
expires, the entry disappears from the cluster in which the key is
owned, however it remains in the remote cluster.
<a href="https://github.com/hazelcast/hazelcast/issues/254">#254</a></p>
</li>
<li>
<p>In High-Density backed near cache, forced eviction on a per cache basis gives NativeOutOfMemoryError. #255</p>
</li>
<li>
<p>Currently, High-Density cache operations read the temporary data to heap but not to native memory. Then they are converted to native memory while storing. It will better to read that temporary data directly to the native memory. #209</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the enhancements performed for Hazelcast 3.5.1
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Client instances should spawn threads with their instance names added
as prefix. <a href="https://github.com/hazelcast/hazelcast/issues/5671">#5671</a></p>
</li>
<li>
<p>The method
<code>com.hazelcast.spi.impl.classicscheduler.ResponseThread::process</code> may
catch throwables. When this occurs, it logs an unhelpful message, and
ignores the actual exception. This method should be improved to
additionally log the cause, or at least the exception class and message.
<a href="https://github.com/hazelcast/hazelcast/issues/5619">#5619</a></p>
</li>
<li>
<p>The element <code>min-eviction-check-millis</code> in the map configuration does
not exist in documentation.
<a href="https://github.com/hazelcast/hazelcast/issues/5614">#5614</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-5"><a class="anchor" href="#3-5"></a><a class="link" href="#3-5">3.5</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
3.5 release.</p>
</div>
<div class="sect3">
<h4 id="features-35"><a class="anchor" href="#features-35"></a><a class="link" href="#features-35">New Features</a></h4>
<div class="paragraph">
<p>The following are the new features introduced with 3.5 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Async Back Pressure</strong>: The Back Pressure introduced with Hazelcast 3.4
now supports async operations. For more information, please see the
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#back-pressure">Back
Pressure section</a>.</p>
</li>
<li>
<p><strong>Client Configuration Import</strong>: Hazelcast now supports replacing
variables with system properties in the declarative configuration of
Hazelcast client. Moreover, now you can compose the Hazelcast client
declarative configuration out of smaller configuration snippets. For
more information, please see the
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#composing-declarative-configuration">Composing
Declarative Configuration section</a>.</p>
</li>
<li>
<p><strong>Cluster Quorum</strong>: This feature enables you to define the minimum
number of machines required in a cluster for the cluster to remain in an
operational state. For more information, please see the
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#cluster-quorum">Cluster
Quorum section</a>.</p>
</li>
<li>
<p><strong>Hazelcast Client Protocol</strong>: Starting with 3.5, Hazelcast introduces
the support for different versions of clients in a cluster. Please keep
in mind that this support is not valid for the releases before 3.5.
Please see the important note at the last paragraph of the
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#hazelcast-java-client">Hazelcast
Java Client chapter’s</a> introduction.</p>
</li>
<li>
<p><strong>Listener for Lost Partitions</strong>: This feature notifies you for possible
data loss occurrences. Please see the
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#partition-lost-listener">Partition
Lost Listener section</a> and
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#mappartitionlostlistener">MapPartitionLostListener
section</a>.</p>
</li>
<li>
<p><strong>Increased Visibility of Slow Operations</strong>: With the introduction of
the <code>SlowOperationDetector</code> feature, slow operations are logged and can
be seen on the Hazelcast Management Center. Please see the
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#slowoperationdetector">SlowOperationDetector
section</a> and
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#members">Management
Center:Members section</a>.</p>
</li>
<li>
<p><strong>Enterprise WAN Replication</strong>: Hazelcast Enterprise implementation of
the WAN Replication. Please see the
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#enterprise-wan-replication">Enterprise
WAN Replication section</a>.</p>
</li>
<li>
<p><strong>Sub-Listener Interfaces for Map Listener</strong>: This feature enables you
to listen to map-wide or entry-based events. With this new feature, the
listener formerly known as <code>EntryListener</code> has been changed to
<code>MapListener</code> and <code>MapListener</code> has sub-interfaces to catch map/entry
related events. Please see the
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#map-listener">Map
Listener section</a> for more information.</p>
</li>
<li>
<p><strong>Scalable Map Loader</strong>: With this feature, you can load your keys
incrementally if the number of your keys is large. Please see the
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#incremental-key-loading">Incremental
Key Loading section</a>.</p>
</li>
<li>
<p><strong>Near Cache for JCache</strong>: Now you can use a near cache with Hazelcast’s
JCache implementation. Please see
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#jcache-near-cache">JCache
Near Cache</a> for details.</p>
</li>
<li>
<p><strong>Fail Fast on Invalid Configuration</strong>: With this feature, Hazelcast
throws a meaningful exception if there is an error in the declarative or
programmatic configuration. Please see the note at the end of the
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#configuration-overview">Configuration
Overview section</a>.</p>
</li>
<li>
<p><strong>Continuous Query Caching</strong>: (Enterprise only, since 3.5) Provides an
always up to date view of an IMap according to the given predicate.
Please see the
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#continuous-query-cache">Continuous
Query Cache section</a></p>
</li>
<li>
<p>Dynamic Selector Rebalancing</p>
</li>
<li>
<p>Management of Unbounded Return Values</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enhancements-35"><a class="anchor" href="#enhancements-35"></a><a class="link" href="#enhancements-35">Enhancements</a></h4>
<div class="paragraph">
<p>The following are the enhancements introduced with 3.5 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>Eventing System Improvements</strong>: RingBuffer and Reliable Topic
structures are introduced.</p>
</li>
<li>
<p><strong>XA Transactions Improvements</strong>: With this improvement, you can now
obtain a Hazelcast XA Resource instance through <code>HazelcastInstance</code>. For
more information, please see
<a href="http://docs.hazelcast.org/docs/3.5/manual/html-single/index.html#xa-transactions">XA
Transactions</a>.</p>
</li>
<li>
<p><strong>Query and Indexing Improvements</strong></p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the other improvements performed to solve the
enhancement issues opened by the Hazelcast customers/team.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>While configuring JCache, duration of the <code>ExpiryPolicy</code> can be set
programmatically but not declaratively.
<a href="https://github.com/hazelcast/hazelcast/issues/5347">#5347</a></p>
</li>
<li>
<p>Since near cache is not supported as embedded but only at client, at
the moment, there is no need for <code>NearCacheConfig</code> in <code>CacheConfig</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/5215">#5215</a></p>
</li>
<li>
<p>Support for parametrized test is needed.
<a href="https://github.com/hazelcast/hazelcast/issues/5182">#5182</a></p>
</li>
<li>
<p><code>SlowOperationDetector</code> should have an option to not to log the
stacktraces to the log file. There is no need to have the stacktraces
written to the normal log file if the Hazelcast Management Center or the
performance monitor is being used.
<a href="https://github.com/hazelcast/hazelcast/issues/5043">#5043</a></p>
</li>
<li>
<p>The batch launcher should include the JCache API.
<a href="https://github.com/hazelcast/hazelcast/issues/4902">#4902</a></p>
</li>
<li>
<p>There are no Spring tags available for Native Memory configuration.
<a href="https://github.com/hazelcast/hazelcast/issues/4772">#4772</a></p>
</li>
<li>
<p>In the class <code>BasicInvocationFuture</code>, there is no need to create an
additional <code>AtomicInteger</code> object. It should be replaced with
<code>AtomicIntegerFieldUpdater</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4408">#4408</a></p>
</li>
<li>
<p>There is no need to use the class <code>IsStillExecutingOperation</code> to check
if an operation is running locally. One can directly access to the
scheduler. <a href="https://github.com/hazelcast/hazelcast/issues/4407">#4407</a></p>
</li>
<li>
<p>Configuring NearCache in a Client/Server system only talks about the
programmatic configuration of NearCache on the clients. The declarative
configuration (XML) of the same is not mentioned.
<a href="https://github.com/hazelcast/hazelcast/issues/4376">#4376</a></p>
</li>
<li>
<p>XML schema and XML configuration validation is not compliant for AWS
configuration.
<a href="https://github.com/hazelcast/hazelcast/issues/4310">#4310</a></p>
</li>
<li>
<p>The JavaDoc for the methods <code>KeyValueSource.hasNext/element/key</code> and
<code>Iterator.hasNext/next</code> should emphasize the differences between each
other, i.e., the state changing behavior should be clarified.
<a href="https://github.com/hazelcast/hazelcast/issues/4218">#4218</a></p>
</li>
<li>
<p>While migration is in progress, the nodes will have different
partition state versions. If the query is running at that time, it can
get results from the nodes at different stages of the migration. By
adding partition state version to the query results, it can be checked
whether the migration was happening and the query can be re-run.
<a href="https://github.com/hazelcast/hazelcast/issues/4206">#4206</a></p>
</li>
<li>
<p>XML Config Schema does not allow to set a <code>SecurityInterceptor</code>
Implementation.
<a href="https://github.com/hazelcast/hazelcast/issues/4118">#4118</a></p>
</li>
<li>
<p>Currently, certain types of remote executed calls are stored into the
<code>executingCalls</code> map. The key (and value) is a <code>RemoteCallKey</code> object.
The functionality provided is the ability to ask on the remote side if
an operation is still executing. For a partition-aware operation, this
is not needed. When an operation is scheduled by a partition specific
operation thread, the operation can be stored in a volatile field in
that thread. <a href="https://github.com/hazelcast/hazelcast/issues/4079">#4079</a></p>
</li>
<li>
<p>The class <code>TcpIpJoinerOverAWS</code> fails at AWS’ recently launched
eu-central-1 region. The reason for the fail is that the region requires
v4 signatures.
<a href="https://github.com/hazelcast/hazelcast/issues/3963">#3963</a></p>
</li>
<li>
<p>API change in <code>EntryListener</code> breaks the compatibility with the Camel
Hazelcast component.
<a href="https://github.com/hazelcast/hazelcast/issues/3859">#3859</a></p>
</li>
<li>
<p>The <code>hazelcast-spring-&lt;`<em>version</em></code>&gt;.xsd` should include the User
Defined Services (SPI) elements and attributes.
<a href="https://github.com/hazelcast/hazelcast/issues/3565">#3565</a></p>
</li>
<li>
<p>XA Transactions run on multiple threads.
<a href="https://github.com/hazelcast/hazelcast/issues/3385">#3385</a></p>
</li>
<li>
<p>Hazelcast client fails to connect when you provide variables from the
system properties.
<a href="https://github.com/hazelcast/hazelcast/issues/3270">#3270</a></p>
</li>
<li>
<p>Entry listeners are not called when the entries are modified by WAN
replication. <a href="https://github.com/hazelcast/hazelcast/issues/2981">#2981</a></p>
</li>
<li>
<p>Map wildcard matching is confusing. There should be a pluggable
wildcard configuration resolver.
<a href="https://github.com/hazelcast/hazelcast/issues/2431">#2431</a></p>
</li>
<li>
<p>The method <code>loadAllKeys()</code> in map is not scalable.
<a href="https://github.com/hazelcast/hazelcast/issues/2266">#2266</a></p>
</li>
<li>
<p>Back pressure feature should be added.
<a href="https://github.com/hazelcast/hazelcast/issues/1781">#1781</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-35"><a class="anchor" href="#fixes-35"></a><a class="link" href="#fixes-35">Fixes</a></h4>
<div class="paragraph">
<p>The following are the issues solved for Hazelcast 3.5 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Operation timeout mechanism is not working.
<a href="https://github.com/hazelcast/hazelcast/issues/5468">#5468</a></p>
</li>
<li>
<p><code>MapLoader</code> exception is not logged: Exception should be logged and
propagated back to the client that triggered the loading of the map.
<a href="https://github.com/hazelcast/hazelcast/issues/5430">#5430</a></p>
</li>
<li>
<p>Replicated Map documentation page does not mention that it is in the
beta stage. <a href="https://github.com/hazelcast/hazelcast/issues/5424">#5424</a></p>
</li>
<li>
<p>The method <code>XAResource.rollback()</code> should not need the transaction to
be in the prepared state when called from another member/client.
<a href="https://github.com/hazelcast/hazelcast/issues/5401">#5401</a></p>
</li>
<li>
<p>The method <code>XAResource.end()</code> should not need to check <code>threadId</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/5400">#5400</a></p>
</li>
<li>
<p>The method <code>IList::remove()</code> should publish the event <code>REMOVED</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/5386">#5386</a></p>
</li>
<li>
<p><code>IllegalStateException</code> with wrong partition is thrown when the method
<code>IMap::getOperation()</code> is invoked.
<a href="https://github.com/hazelcast/hazelcast/issues/5341">#5341</a></p>
</li>
<li>
<p><code>WrongTarget</code> warnings appear in the log since the operations are not
sent to the replicas when a map has no backups.
<a href="https://github.com/hazelcast/hazelcast/issues/5324">#5324</a></p>
</li>
<li>
<p>When the method <code>finalizeCombine()</code> is used, Hazelcast throws
<code>NullPointerException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/5283">#5283</a></p>
</li>
<li>
<p><code>WanBatchReplication</code> causes <code>OutOfMemoryException</code> when the default
value for WAN Replication Batch Size (50) is used.
<a href="https://github.com/hazelcast/hazelcast/issues/5280">#5280</a></p>
</li>
<li>
<p>When testing Hazelcast, it does not start as an OSGI bundle. After the
OSGI package was refactored, the dynamic class loading of the Script
engine was missed.
<a href="https://github.com/hazelcast/hazelcast/issues/5274">#5274</a></p>
</li>
<li>
<p>XA Example from Section 11.3.5 in the Reference Manual broken after
the latest XA Improvements are committed.
<a href="https://github.com/hazelcast/hazelcast/issues/5273">#5273</a></p>
</li>
<li>
<p>XA Transaction throws <code>TransactionException</code> instead of an
<code>XAException</code> on timeout.
<a href="https://github.com/hazelcast/hazelcast/issues/5260">#5260</a></p>
</li>
<li>
<p>The test for unbounded return values runs forever with the new client
implementation.
<a href="https://github.com/hazelcast/hazelcast/issues/5230">#5230</a></p>
</li>
<li>
<p>The new client method <code>getAsync()</code> fails with a
<code>NegativeArraySizeException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/5229">#5229</a></p>
</li>
<li>
<p>The method <code>putTransient</code> actuated the MapStore unexpectedly in an
environment with multiple instances.
<a href="https://github.com/hazelcast/hazelcast/issues/5225">#5225</a></p>
</li>
<li>
<p>Changes made by the interceptor do not appear in the backup.
<a href="https://github.com/hazelcast/hazelcast/issues/5211">#5211</a></p>
</li>
<li>
<p>The method <code>removeAttribute</code> will prevent any updates by the method
<code>setAttribute</code> in the deferred write mode.
<a href="https://github.com/hazelcast/hazelcast/issues/5186">#5186</a></p>
</li>
<li>
<p>Backward compatibility of eviction configuration for cache is broken
since <code>CacheEvictionConfig</code> class was renamed to <code>EvictionConfig</code> for
general usage.
<a href="https://github.com/hazelcast/hazelcast/issues/5180">#5180</a></p>
</li>
<li>
<p>Value passed into <code>ICompletableFuture.onResponse()</code> is not
deserialized.
<a href="https://github.com/hazelcast/hazelcast/issues/5158">#5158</a></p>
</li>
<li>
<p>Map Eviction section in the Reference Manual needs more clarification.
<a href="https://github.com/hazelcast/hazelcast/issues/5120">#5120</a></p>
</li>
<li>
<p>When host names are not registered in DNS or in <code>/etc/hosts</code> and the
members are configured manually with IP addresses and while one node is
running, a second node joins to the cluster 5 minutes after it started.
<a href="https://github.com/hazelcast/hazelcast/issues/5072">#5072</a></p>
</li>
<li>
<p>The method <code>OperationService.asyncInvokeOnPartition()</code> sometimes fails.
<a href="https://github.com/hazelcast/hazelcast/issues/5069">#5069</a></p>
</li>
<li>
<p>The <code>SlowOperationDTO.operation</code> shows only the class name, not the
package. This can lead to ambiguity and the actual class cannot be
tracked. <a href="https://github.com/hazelcast/hazelcast/issues/5041">#5041</a></p>
</li>
<li>
<p>There is no documentation comment for the <code>MessageListener</code> interface
of ITopic. <a href="https://github.com/hazelcast/hazelcast/issues/5019">#5019</a></p>
</li>
<li>
<p>The method <code>InvocationFuture.isDone</code> returns <code>true</code> as soon as there
is a response including <code>WAIT_RESPONSE</code>. However, <code>WAIT_RESPONSE</code> is an
intermediate response, not a final one.
<a href="https://github.com/hazelcast/hazelcast/issues/5002">#5002</a></p>
</li>
<li>
<p>The method <code>InvocationFuture.andThen</code> does not deal with the null
response correctly.
<a href="https://github.com/hazelcast/hazelcast/issues/5001">#5001</a></p>
</li>
<li>
<p><code>CacheCreationTest</code> fails due to the multiple
<code>TestHazelcastInstanceFactory</code> creations in the same test.
<a href="https://github.com/hazelcast/hazelcast/issues/4987">#4987</a></p>
</li>
<li>
<p>When Spring dependency is upgraded to 4.1.x, an exception related to
the <code>putIfAbsent</code> method is thrown.
<a href="https://github.com/hazelcast/hazelcast/issues/4981">#4981</a></p>
</li>
<li>
<p>HazelcastCacheManager should offer a way to access the underlying
cache manager.
<a href="https://github.com/hazelcast/hazelcast/issues/4978">#4978</a></p>
</li>
<li>
<p>Hazelcast Client code allows to use the value <em>0</em> for the
<code>connectionAttemptLimit</code> property which internally results in
<code>int.maxValue</code>. However, the XSD of the Hazelcast Spring configuration
requires it to be at least 1.
<a href="https://github.com/hazelcast/hazelcast/issues/4967">#4967</a></p>
</li>
<li>
<p>Updates from Entry Processor does not take <code>write-coalescing</code> into
account. <a href="https://github.com/hazelcast/hazelcast/issues/4957">#4967</a></p>
</li>
<li>
<p>CachingProvider does not honor custom URI.
<a href="https://github.com/hazelcast/hazelcast/issues/4943">#4943</a></p>
</li>
<li>
<p>Test for the method <code>getLocalExecutorStats()</code> fails spuriously.
<a href="https://github.com/hazelcast/hazelcast/issues/4911">#4911</a></p>
</li>
<li>
<p>Missing documentation of network configuration for JCache.
<a href="https://github.com/hazelcast/hazelcast/issues/4905">#4905</a></p>
</li>
<li>
<p>Slow operation detector throws a <code>NullPointerException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4855">#4855</a></p>
</li>
<li>
<p>Consider use of <code>System.nanoTime</code> in <code>sleepAtLeast</code> test code.
<a href="https://github.com/hazelcast/hazelcast/issues/4835">#4835</a></p>
</li>
<li>
<p>When upgraded to 3.5-SNAPSHOT for testing, Hazelcast project gives a
warning that mentions a missing configuration for
<code>hazelcastmq.txn-topic</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4790">#4790</a></p>
</li>
<li>
<p><code>ClassNotFoundException</code> when using WAR classes with JCache API.
<a href="https://github.com/hazelcast/hazelcast/issues/4775">#4775</a></p>
</li>
<li>
<p>When Hazelcast is installed using Maven in Windows environment, the
test <code>XmlConfigImportVariableReplacementTest</code> fails.
<a href="https://github.com/hazelcast/hazelcast/issues/4758">#4758</a></p>
</li>
<li>
<p>When a request cannot be executed due to a problem (connection error,
etc.), if the operation redo is enabled, request is retried. Retried
operations are offloaded to an executor, but after offloading, the user
thread still tries to retry the request. This causes anomalies like
operations being executed twice or operation responses being handled
incorrectly. <a href="https://github.com/hazelcast/hazelcast/issues/4693">#4693</a></p>
</li>
<li>
<p>Client destroys all connections when a reconnection happens.
<a href="https://github.com/hazelcast/hazelcast/issues/4692">#4692</a></p>
</li>
<li>
<p>The <code>size()</code> method for a replicated map should return <code>0</code> when the
entry is removed.
<a href="https://github.com/hazelcast/hazelcast/issues/4666">#4666</a></p>
</li>
<li>
<p><code>NullPointerException</code> on the <code>CachePutBackupOperation</code> class.
<a href="https://github.com/hazelcast/hazelcast/issues/4660">#4660</a></p>
</li>
<li>
<p>When removing keys from a MultiMap with a listener, the method
<code>entryRemoved()</code> is called. In order to get the removed value, one must
call the <code>event.getValue()</code> instead of <code>event.getOldValue()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4644">#4644</a></p>
</li>
<li>
<p>Unnecessary deserialization at the server side when using
<code>Cache.get()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4632">#4632</a></p>
</li>
<li>
<p>Operation timeout exception during <code>IMap.loadAllKeys()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4618">#4618</a></p>
</li>
<li>
<p>There have been Hazelcast AWS exceptions after the version of AWS
signer had changed (from v2 to v4).
<a href="https://github.com/hazelcast/hazelcast/issues/4571">#4571</a></p>
</li>
<li>
<p>In the declarative configuration; when a variable is used to specify
the value of an element or attribute, Hazelcast ignores the strings that
come before the variable.
<a href="https://github.com/hazelcast/hazelcast/issues/4533">#4533</a></p>
</li>
<li>
<p><code>LocalRegionCache</code> cleanup is working wrongly.
<a href="https://github.com/hazelcast/hazelcast/issues/4445">#4445</a></p>
</li>
<li>
<p>Repeatable-read does not work in a transaction.
<a href="https://github.com/hazelcast/hazelcast/issues/4414">#4414</a></p>
</li>
<li>
<p>Hazelcast instance name with <code>Hibernate</code> still creates multiple
instances. <a href="https://github.com/hazelcast/hazelcast/issues/4374">#4374</a></p>
</li>
<li>
<p>In Hazelcast 3.3.4, <code>FinalizeJoinOperation</code> times out if the method
<code>MapStore.loadAllKeys()</code> takes more than 5 seconds.
<a href="https://github.com/hazelcast/hazelcast/issues/4348">#4348</a></p>
</li>
<li>
<p>JCache sync listener completion latch problems: Status of
<code>ICompletableFuture</code> while waiting for completion latch in the cache
must be checked.
<a href="https://github.com/hazelcast/hazelcast/issues/4335">#4335</a></p>
</li>
<li>
<p>Classloader issue with <code>javax.cache.api</code> and Hazelcast 3.3.1.
<a href="https://github.com/hazelcast/hazelcast/issues/3792">#3792</a></p>
</li>
<li>
<p>Failed backup operation on transaction commit causes <code>Nested
transactions are not allowed!</code> warning.
<a href="https://github.com/hazelcast/hazelcast/issues/3577">#3577</a></p>
</li>
<li>
<p>Hazelcast Client should not ignore the fact that the XML is for server
and should not use default XML feature to connect to <code>localhost</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/3256">#3256</a></p>
</li>
<li>
<p>Owner connection <code>read()</code> forever.
<a href="https://github.com/hazelcast/hazelcast/issues/3401">#3401</a></p>
</li>
<li>
<p>ACCESS_HIT_OFFSET in HiDensityNativeMemoryNearCacheRecord is not correct. Currently, it is the same offset with ACCESS_TIME_OFFSET. However, it must be ACCESS_TIME_OFFSET + 4 and VALUE_OFFSET must be 20 instead of 16 since access time is represented with integer value. #236</p>
</li>
<li>
<p>VersionCheck should send cluster and member uptime to BigQuery. #208</p>
</li>
<li>
<p>WAN replication should fail fast as much as possible if the group-name configuration is not unique across the cluster. #203</p>
</li>
<li>
<p>There is a GlobalPoolingMemoryManager race condition between the SimpleGarbageCollector thread and Memory Manager user thread. #165</p>
</li>
<li>
<p>Hazelcast Enterprise should allow the configuration of High-Density memory within Spring application context XML files. #148</p>
</li>
<li>
<p>A client without SSL cannot connect to a member with SSL and hangs forever. #128</p>
</li>
<li>
<p>Off-Heap map with Portable value is broken because of Data changes regarding with Portable fixes (header field in DefaultData). #127</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-35"><a class="anchor" href="#contributors-35"></a><a class="link" href="#contributors-35">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/igmar">Igmar Palsenberg</a></p>
</li>
<li>
<p><a href="https://github.com/cszmajda">cszmajda</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-4-8"><a class="anchor" href="#3-4-8"></a><a class="link" href="#3-4-8">3.4.8</a></h3>
<div class="paragraph">
<p>The following is the fixed issue for 3.4.8 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Prevents indefinite read of stale value from near-cache.
<a href="https://github.com/hazelcast/hazelcast/pull/8091">#8091</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-4-7"><a class="anchor" href="#3-4-7"></a><a class="link" href="#3-4-7">3.4.7</a></h3>
<div class="paragraph">
<p>There are some minor internal improvements.</p>
</div>
</div>
<div class="sect2">
<h3 id="3-4-6"><a class="anchor" href="#3-4-6"></a><a class="link" href="#3-4-6">3.4.6</a></h3>
<div class="paragraph">
<p>There are some minor internal improvements.</p>
</div>
</div>
<div class="sect2">
<h3 id="3-4-5"><a class="anchor" href="#3-4-5"></a><a class="link" href="#3-4-5">3.4.5</a></h3>
<div class="paragraph">
<p>There are some minor internal improvements.</p>
</div>
</div>
<div class="sect2">
<h3 id="3-4-4"><a class="anchor" href="#3-4-4"></a><a class="link" href="#3-4-4">3.4.4</a></h3>
<div class="paragraph">
<p>The following is the fixed issue for 3.4.4 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>MultiMap entry listener provides incorrect null values.
<a href="https://github.com/hazelcast/hazelcast/issues/5538">#5538</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-4-3"><a class="anchor" href="#3-4-3"></a><a class="link" href="#3-4-3">3.4.3</a></h3>
<div class="paragraph">
<p>The following is the the enhancement performed for 3.4.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Expose <code>TcpIpJoiner.MAX_PORT_TRIES</code> as a configurable property.
<a href="https://github.com/hazelcast/hazelcast/issues/5062">#5062</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the fixed issues for 3.4.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Subsequent remove operations may cause reading of stale value from the
map store. <a href="https://github.com/hazelcast/hazelcast/issues/5368">#5368</a></p>
</li>
<li>
<p>Write-behind may cause reading of stale value upon migration.
<a href="https://github.com/hazelcast/hazelcast/issues/5339">#5339</a></p>
</li>
<li>
<p>Hazelcast client is unresponsive. <code>OperationTimeoutException</code> is seen
in the logs. <a href="https://github.com/hazelcast/hazelcast/issues/5338">#5338</a></p>
</li>
<li>
<p>Last update time of an entry should not be changed after <code>getAll()</code> is
invoked. <a href="https://github.com/hazelcast/hazelcast/issues/5333">#5333</a></p>
</li>
<li>
<p><code>AtomicReference.alterAndGet()</code> throws
<code>HazelcastSerializationException</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/5265">#5265</a></p>
</li>
<li>
<p><code>ICompletableFuture</code> callback from the method <code>getAsync</code> is not always
invoked. <a href="https://github.com/hazelcast/hazelcast/issues/5133">#5133</a></p>
</li>
<li>
<p>Warnings and exceptions are logged when closing the client connection.
<a href="https://github.com/hazelcast/hazelcast/issues/4966">#4966</a></p>
</li>
<li>
<p><code>CacheConfig</code> is not created on the cluster if the executer of
<code>CacheCreateConfigOperation</code> has already a <code>CacheConfig</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4960">#4960</a></p>
</li>
<li>
<p>The schema does not allow for an explicit <code>hz:replicatedMap</code> element
to be created. One can be created inside <code>hz:config</code> but not as a
definition for a concrete Replicated Map. Therefore, at present it is
impossible to define a Replicated Map using Spring.
<a href="https://github.com/hazelcast/hazelcast/issues/4958">#4958</a></p>
</li>
<li>
<p><code>ResponseThread</code> and <code>InvocationRegistry.InspectionThread</code> reset and
retry operations. Since these threads did not implement <code>NIOThread</code>, the
<code>OperationExecutor</code> is free to execute tasks on these threads and that
is not desirable.
<a href="https://github.com/hazelcast/hazelcast/issues/4929">#4929</a></p>
</li>
<li>
<p>The method <code>CacheManager.getCache()</code> does not re-open the closed
cache. It should let access to the closed cache and re-open it. Cache
can be accessed by <code>getCache</code> but it is still closed.
<a href="https://github.com/hazelcast/hazelcast/issues/4631">#4631</a></p>
</li>
<li>
<p>The method <code>close()</code> of a Closeable <code>CacheLoader</code> is called without
explicitly calling the method <code>Cache.close()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4617">#4617</a></p>
</li>
<li>
<p>The method <code>Cache.close()</code> does not call the method <code>close()</code> of
registered Closeable <code>CacheEntryListener</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4616">#4616</a></p>
</li>
<li>
<p>The method <code>awaitNanos()</code> returns the wrong value for both the
<code>ClientConditionProxy</code> and <code>ConditionImpl</code> classes.
<a href="https://github.com/hazelcast/hazelcast/issues/4603">#4603</a></p>
</li>
<li>
<p>The method <code>NotEqualPredicate</code> should return false if entry is null
(without index) and also if index is present, it should not throw an
exception with null values.
<a href="https://github.com/hazelcast/hazelcast/issues/4525">#4525</a></p>
</li>
<li>
<p>When running Hazelcast with Spring and Hibernate 4 and when an
application is started, the error related to
<code>org/hibernate/cache/QueryResultsRegion</code> is produced.
<a href="https://github.com/hazelcast/hazelcast/issues/4519">#4519</a></p>
</li>
<li>
<p><code>OperationTimeoutException</code> when calling <code>get</code> on task future after
<code>hazelcast.operation.call.timeout.millis</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4398">#4398</a></p>
</li>
<li>
<p>Predicates with null values throws exception for unordered indexes.
<a href="https://github.com/hazelcast/hazelcast/issues/4373">#4373</a></p>
</li>
<li>
<p>The method <code>queue.take()</code> does not get interrupted on shutdown.
<a href="https://github.com/hazelcast/hazelcast/issues/4143">#4143</a></p>
</li>
<li>
<p>Currently, during start up of Hazelcast Enterprise nodes, license type is logged as Trial or Full. This is unnecessary and confusing. #243</p>
</li>
<li>
<p>Accessing a cache which is created using InMemoryFormat.NATIVE without enabling NativeMemoryConfig throws NullPointerException. Instead, it should throw more informative configuration or validation exception. #129</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-4-2"><a class="anchor" href="#3-4-2"></a><a class="link" href="#3-4-2">3.4.2</a></h3>
<div class="paragraph">
<p>The following is the enhancement performed for 3.4.2 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>The method <code>contains</code> for ISet scans all the items.
<a href="https://github.com/hazelcast/hazelcast/issues/4620">#4620</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the fixed issues for 3.4.2 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>While executing unit tests, <code>SlowOperationDetectorThread</code> and
<code>CleanupThread</code> may not be terminated before the next test is started.
<a href="https://github.com/hazelcast/hazelcast/issues/4757">#4757</a></p>
</li>
<li>
<p>When multiple nodes join sequentially after partitions are
assigned/distributed, old nodes fail to clean backup replicas larger
than the configured backup count. This causes a memory leak. Also, when
multiple nodes leave the cluster at the same time (or in a short
period), the new partition owner looses some partition replica versions
and this causes backup nodes for those specific replica indexes to fail
synchronizing data from the owner node, although the owner node holds
the whole partition data.
<a href="https://github.com/hazelcast/hazelcast/issues/4687">#4687</a></p>
</li>
<li>
<p>After cluster merges due to a network-split, Hazelcast infinitely logs
<code>WaitNotifyServiceImpl$WaitingOp::WrongTargetException</code> warnings.
<a href="https://github.com/hazelcast/hazelcast/issues/4676">#4676</a></p>
</li>
<li>
<p>A strange <code>mapName</code> parameter occurred when using wildcard
configuration for a custom <code>MapStoreFactory</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4667">#4667</a></p>
</li>
<li>
<p>The method <code>IExecutorService.submitToKeyOwner</code> encountered two errors:
the <code>onResponse</code> method is invoked with null and a cast exception is
thrown in a Hazelcast thread.
<a href="https://github.com/hazelcast/hazelcast/issues/4627">#4627</a></p>
</li>
<li>
<p>The method <code>init</code> in an implementation of the
<code>MapLoaderLifecyleSupport</code> interface is not invoked.
<a href="https://github.com/hazelcast/hazelcast/issues/4623">#4623</a></p>
</li>
<li>
<p>The method <code>readData</code> in <code>NearCacheConfig</code> reads the <code>maxSize</code> twice.
<a href="https://github.com/hazelcast/hazelcast/issues/4609">#4609</a></p>
</li>
<li>
<p>The system property <code>hazelcast.client.request.retry.count</code> is not
handled properly.
<a href="https://github.com/hazelcast/hazelcast/issues/4592">#4592</a></p>
</li>
<li>
<p>There is a memory leak at High-Density backed JCache on OutOfMemoryException during replication. #145</p>
</li>
<li>
<p>Currently, cache based memory usage information (HiDensityCacheInfo) is not synced with the memory usage information of MemoryManager. #140</p>
</li>
<li>
<p>There is a memory leak on High-Density backed JCache while converting HiDensityNativeMemoryCacheRecord objects to/from NativeMemoryData objects. #133</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-4-1"><a class="anchor" href="#3-4-1"></a><a class="link" href="#3-4-1">3.4.1</a></h3>
<div class="paragraph">
<p>The following are the enhancements performed for 3.4.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>When the near cache is used, cached entries from the remote node are
evicted by idleness, despite being read.
<a href="https://github.com/hazelcast/hazelcast/issues/4358">#4358</a></p>
</li>
<li>
<p>HazelcastQueryResultsRegion is never expired/evicted. The cleanup()
method in LocalRegionCache for the query cache instances is never
called, thus the query cache lives forever.
<a href="https://github.com/hazelcast/hazelcast/issues/3882">#3882</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p>The following are the fixed issues for 3.4.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>IMap.getAll does not put data to RecordStore upon loading from map
store. <a href="https://github.com/hazelcast/hazelcast/issues/4458">#4458</a></p>
</li>
<li>
<p>In the ClientNearCache class, there is a comparator which is used in a
TreeSet to find the entries that should be evicted. If there are
CacheRecords with the same hit count or lastAccessTime (depending on the
policy, i.e., LFU or LRU), all of them should be evicted.
<a href="https://github.com/hazelcast/hazelcast/issues/4451">#4451</a></p>
</li>
<li>
<p>When using write-behind and the entries, which have not been stored
yet, are evicted, duplicate calls to the map store is made.
<a href="https://github.com/hazelcast/hazelcast/issues/4448">#4448</a></p>
</li>
<li>
<p>There is a memory leak caused by the empty await queues in
<code>WaitNotifyService</code>. When more then one thread try to lock on an IMap key
at the same time, a memory leak occurs.
<a href="https://github.com/hazelcast/hazelcast/issues/4432">#4432</a></p>
</li>
<li>
<p>ClientListener is not configurable via <code>ListenerConfig</code>.
<code>HazelcastInstanceImpl.initializeListeners(Config config)</code> does not honor
<code>ClientListener</code> instances.
<a href="https://github.com/hazelcast/hazelcast/issues/4429">#4429</a></p>
</li>
<li>
<p>The <code>CacheConfig(CacheSimpleConfig simpleConfig)</code> constructor is broken.
Variable assignments should be fixed.
<a href="https://github.com/hazelcast/hazelcast/issues/4423">#4423</a></p>
</li>
<li>
<p>In ReplicatedMap, the <code>containsKey</code> method should return false on the
removed keys.
<a href="https://github.com/hazelcast/hazelcast/issues/4420">#4420</a></p>
</li>
<li>
<p>During the <code>Hazelcast.shutdownAll()</code> process, <code>LockService</code> is shut down
before the MapService and this may cause null pointer exception if there
is something like <code>isLocked</code> check in some internal IMap operations.
<a href="https://github.com/hazelcast/hazelcast/issues/4382">#4382</a></p>
</li>
<li>
<p>Hazelcast clients shut down in the case of an IP change of one or more
of the configured node (DNS) addresses.
<a href="https://github.com/hazelcast/hazelcast/issues/4349">#4349</a></p>
</li>
<li>
<p>Write-behind system coalesces all operations on a specific key in a
configured <code>write-delay-seconds</code> window and it should also store only the
latest change on that key in that window. Problem with the current
behavior is; a continuously updated key may not be persisted ever due to
the shifted store time during the updates.
<a href="https://github.com/hazelcast/hazelcast/issues/4341">#4341</a></p>
</li>
<li>
<p>Issue with <code>contains</code> pattern in <code>Config.getXXXConfig()</code>. Since the actual
wildcard search always does a contains matching, you cannot set a
configuration for startsWith, for instance.
<a href="https://github.com/hazelcast/hazelcast/issues/4315">#4315</a></p>
</li>
<li>
<p>ReplicatedMapMBean is not present in JMX.
<a href="https://github.com/hazelcast/hazelcast/issues/4173">#4173</a></p>
</li>
<li>
<p>When JAAS based security is enabled, for a client to be able to do a "read" action on a map, it needs to have a "create" action as well. It should not require a "create" action. #120</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-4"><a class="anchor" href="#3-4"></a><a class="link" href="#3-4">3.4</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
3.4 release.</p>
</div>
<div class="sect3">
<h4 id="features-34"><a class="anchor" href="#features-34"></a><a class="link" href="#features-34">New Features</a></h4>
<div class="paragraph">
<p>The following are the new features introduced with 3.4 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>High-Density Memory Store</strong>: Used with the Hazelcast JCache
implementation, High-Density Memory Store is introduced with this
release. High-Density Memory Store is the enterprise grade backend
storage solution. This solution minimizes the garbage collection
pressure and thus enables predictable application scaling and boosts
performance. For more information, please see
<a href="http://docs.hazelcast.org/docs/3.4/manual/html-single/index.html#high-density-memory-store">High-Density
Memory Store section</a>.</p>
</li>
<li>
<p><strong>Jetty Based Session Replication</strong>: We have introduced Jetty-based web
session replication with this release. This is a feature of Hazelcast
Enterprise. It enables session replication for Java EE web applications
that are deployed into Jetty servlet containers, without having to
perform any changes in those applications. For more information, please
see
<a href="http://docs.hazelcast.org/docs/3.4/manual/html-single/index.html#jetty-based-web-session-replication">Jetty
Based Web Session Replication section</a>.</p>
</li>
<li>
<p><strong>Hazelcast Configuration Import</strong>: This feature, which is an element
named <code>&lt;import&gt;</code>, enables you to compose the Hazelcast declarative (XML)
configuration file out of smaller configuration snippets. For more
information, please see
<a href="http://docs.hazelcast.org/docs/3.4/manual/html-single/index.html#composing-xml-configuration">Composing
XML Configuration section</a>.</p>
</li>
<li>
<p><strong>Back Pressure</strong>: Starting with this release, Hazelcast provides the
back pressure feature which prevents the overload caused by pending
asynchronous backups. For more information, please see
<a href="http://docs.hazelcast.org/docs/3.4/manual/html-single/index.html#back-pressure">Back
Pressure section</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enhancements-34"><a class="anchor" href="#enhancements-34"></a><a class="link" href="#enhancements-34">Enhancements</a></h4>
<div class="paragraph">
<p>The following are the enhancements performed for 3.4 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Event packets sent to the client do not have <code>partitionId</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4071">#4071</a></p>
</li>
<li>
<p>Spring Configuration for ReplicatedMap is Missing.
<a href="https://github.com/hazelcast/hazelcast/issues/3966">#3966</a></p>
</li>
<li>
<p><code>NodeMulticastListener</code> floods log file with INFO-level messages when
debug is enabled.
<a href="https://github.com/hazelcast/hazelcast/issues/3787">#3787</a></p>
</li>
<li>
<p>A Hazelcast client should not be a <code>HazelcastInstance</code>. It should be a
<code>factory</code> and this factory should be able to shut down Hazelcast
clients. <a href="https://github.com/hazelcast/hazelcast/issues/3781">#3781</a></p>
</li>
<li>
<p><code>InvalidateSessionAttributesEntryProcessor</code> could avoid creating
strings at every call to process.
<a href="https://github.com/hazelcast/hazelcast/issues/3767">#3767</a></p>
</li>
<li>
<p>The timeout for <code>SocketConnector</code> cannot be configured.
<a href="https://github.com/hazelcast/hazelcast/issues/3613">#3613</a>.</p>
</li>
<li>
<p>The method <code>MultiMap.get()</code> returns <code>collection</code>, but this method
should return the correct collection type (<code>Set</code> or <code>List</code>).
<a href="https://github.com/hazelcast/hazelcast/issues/3214">#3214</a></p>
</li>
<li>
<p><code>HazelcastConnection</code> is not aligned with <code>HazelcastInstance</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/2997">#2997</a></p>
</li>
<li>
<p>Support for Log4j 2.x has been implemented.
<a href="https://github.com/hazelcast/hazelcast/issues/2345">#2345</a></p>
</li>
<li>
<p>Management Center console behavior on node shutdown.
<a href="https://github.com/hazelcast/hazelcast/issues/2215">#2215</a></p>
</li>
<li>
<p>When <code>queue-store</code> is not enabled, <code>QueueStoreFactory</code> should not be
instantiated.
<a href="https://github.com/hazelcast/hazelcast/issues/1906">#1906</a></p>
</li>
<li>
<p>Management Center should be able to say when cluster is safe and all
backups are up to date.
<a href="https://github.com/hazelcast/hazelcast/issues/963">#963</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-34"><a class="anchor" href="#fixes-34"></a><a class="link" href="#fixes-34">Fixes</a></h4>
<div class="paragraph">
<p>The following are the fixed issues for 3.4 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Deadlock happens in MapReduce implementation when there is a high load
on the system. The issue has been solved by offloading Distributed
MapReduce result collection to the async executor.
<a href="https://github.com/hazelcast/hazelcast/issues/4238">#4238</a></p>
</li>
<li>
<p>When the class <code>ClientExecutorServiceSubmitTest.java</code> is compiled
using the Eclipse compiler, it gives a compile error: <code><em>The method
submit(Runnable, ExecutionCallback) is ambiguous for the type
IExecutorService</em></code>. The reason is that the <code>IExecutorService.java</code>
class does not have some generics. The issue has been solved by adding
these missing generics to the <code>IExecutorService.java</code> class.
<a href="https://github.com/hazelcast/hazelcast/issues/4234">#4234</a></p>
</li>
<li>
<p>JCache declarative listener registration does not work.
<a href="https://github.com/hazelcast/hazelcast/issues/4215">#4215</a></p>
</li>
<li>
<p>JCache evicts the records which are not expired yet. To solve this
issue, the <code>clear</code> method should be removed that runs when the size is
smaller than the minimum eviction element count
(<code>MIN_EVICTION_ELEMENT_COUNT</code>).
<a href="https://github.com/hazelcast/hazelcast/issues/4124">#4124</a></p>
</li>
<li>
<p>Hazelcast Enterprise Native Memory operations should be updated in
relation with the Hazelcast sync listener changes.
<a href="https://github.com/hazelcast/hazelcast/issues/4089">#4089</a></p>
</li>
<li>
<p>The completion listener (JCache) relies on event ordering but if the
completion listener is registered in another node then event ordering is
not guaranteed.
<a href="https://github.com/hazelcast/hazelcast/issues/4073">#4073</a></p>
</li>
<li>
<p>AWS joiner classname should be fixed since EC2 discovery is not
working after the restructure.
<a href="https://github.com/hazelcast/hazelcast/issues/4025">#4025</a></p>
</li>
<li>
<p>If an IMap has a near cache configured, accessing the near cache via
the method <code>get(key)</code> does not count as an access to the underlying
IMap. The near cache has its own <code>max-idle-seconds</code> element. However, if
an entry is expired/evicted in the IMap, it also causes a near cache
removal operation for the entry regardless of the <code>max-idle-seconds</code> of
that entry in the near cache. The entry expires and is evicted even if
the near cache is being hit constantly. When a near cache is hit, the
underlying map should reset the idle time for that key.
<a href="https://github.com/hazelcast/hazelcast/issues/4016">#4016</a></p>
</li>
<li>
<p>Getting a pre-configured Cache instance is not working as expected.
<a href="https://github.com/hazelcast/hazelcast/issues/4009">#4009</a></p>
</li>
<li>
<p>Bounded Queue section in the Reference Manual is unclear and wrong.
<a href="https://github.com/hazelcast/hazelcast/issues/3995">#3995</a></p>
</li>
<li>
<p>The method <code>checkFullyProcessed</code> of MapReduce throws null pointer
exception. The reason may be that multiple threads attempt to start the
final processing state in the JobSupervisor.
<a href="https://github.com/hazelcast/hazelcast/issues/3952">#3952</a></p>
</li>
<li>
<p>Merge operation after a split brain syndrome does not guarantee that
the merging is over.
<a href="https://github.com/hazelcast/hazelcast/issues/3863">#3863</a></p>
</li>
<li>
<p>When a client with near cache configuration enabled is shut down,
<code>RejectedExecutionException</code> is thrown.
<a href="https://github.com/hazelcast/hazelcast/issues/3669">#3669</a></p>
</li>
<li>
<p>In Hazelcast <code>IMap</code> and <code>TransactionalMap</code>, read-only operations such
as <code>get()</code>, <code>containsKey()</code>, <code>keySet()</code>, and <code>containsValue()</code> break the
transaction atomicity.
<a href="https://github.com/hazelcast/hazelcast/issues/3191">#3191</a></p>
</li>
<li>
<p>Documentation should clearly list features of and differences between
native clients.
<a href="https://github.com/hazelcast/hazelcast/issues/2385">#2385</a></p>
</li>
<li>
<p>Sections of Hazelcast configuration should be able to be imported so
that these sections can be shared between other Hazelcast configurations.
<a href="https://github.com/hazelcast/hazelcast/issues/406">#406</a></p>
</li>
<li>
<p>When Tomcat session replication is tried via Docker images, in non-sticky mode, isNew returns always true and lastAccessed is not updated. #106</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-34"><a class="anchor" href="#contributors-34"></a><a class="link" href="#contributors-34">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/gallandarakhneorg">Stéphane Galland</a></p>
</li>
<li>
<p><a href="https://github.com/mst-appear">Mikael Ståldal</a></p>
</li>
<li>
<p><a href="https://github.com/markathomas">Mark Thomas</a></p>
</li>
<li>
<p><a href="https://github.com/mheemskerk">mheemskerk</a></p>
</li>
<li>
<p><a href="https://github.com/cszmajda">cszmajda</a></p>
</li>
<li>
<p><a href="https://github.com/tufangorel">Tufan Görel</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-3-5"><a class="anchor" href="#3-3-5"></a><a class="link" href="#3-3-5">3.3.5</a></h3>
<div class="paragraph">
<p>The following is the fixed issue for 3.3.5 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Make <code>write-coalescing</code> configurable for write-behind mapstores.
<a href="https://github.com/hazelcast/hazelcast/issues/4438">#4438</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-3-4"><a class="anchor" href="#3-3-4"></a><a class="link" href="#3-3-4">3.3.4</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.3.4 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Predicate with short values is not working.
<a href="https://github.com/hazelcast/hazelcast/issues/4293">#4293</a></p>
</li>
<li>
<p>Hits statistics copy and paste error in the method <code>ReplicatedRecord</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/4254">#4254</a></p>
</li>
<li>
<p>Serialization error on the ReplicatedMap when in-memory format is set
to <code>BINARY</code>. <a href="https://github.com/hazelcast/hazelcast/issues/4205">#4205</a></p>
</li>
<li>
<p>Too long exception stacktraces if the Hazelcast client fails to
receive data, and this leads to a failure on the client.
<a href="https://github.com/hazelcast/hazelcast/issues/4192">#4192</a></p>
</li>
<li>
<p>Hazelcast client registers the translated public address instead of
its own private address to the list of connections. This causes the
client not to be able to remove the connection correctly.
<a href="https://github.com/hazelcast/hazelcast/issues/4190">#4190</a></p>
</li>
<li>
<p><code>TransactionType:Local</code> emits exceptions while committing. The normal
behavior should be throwing the exceptions to the user.
<a href="https://github.com/hazelcast/hazelcast/issues/4160">#4160</a></p>
</li>
<li>
<p>Map replication should mark expirable recordstore. Otherwise, in some
situations, if one does not set the map wide expiration or map wide TTL,
the key based TTL expiration may not work.
<a href="https://github.com/hazelcast/hazelcast/issues/4144">#4144</a></p>
</li>
<li>
<p>The method <code>BasicInvocationFuture.response</code> should be cleared when
<code>BasicInvocation.WAIT_RESPONSE</code> is read by the waiter thread. Otherwise,
when the retry operation takes too much time, the waiting thread sees
the same wait response multiple times and the operation may not timeout
forever. <a href="https://github.com/hazelcast/hazelcast/issues/4123">#4123</a></p>
</li>
<li>
<p>Topic listeners should be unregistered when topic is destroyed.
<a href="https://github.com/hazelcast/hazelcast/issues/4117">#4117</a></p>
</li>
<li>
<p>Invocations (and their operations) remain in the invocations map
forever if the operation timeouts without a response.
<a href="https://github.com/hazelcast/hazelcast/issues/4113">#4113</a></p>
</li>
<li>
<p>Timeout is needed for parallel query operations.
<a href="https://github.com/hazelcast/hazelcast/issues/4074">#4074</a></p>
</li>
<li>
<p>Initial map load and <code>max-size-policy</code> conflict.
<a href="https://github.com/hazelcast/hazelcast/issues/4066">#4066</a></p>
</li>
<li>
<p>MapStore operations should be retried and performed eventually after a
temporary failure.
<a href="https://github.com/hazelcast/hazelcast/issues/4061">#4061</a></p>
</li>
<li>
<p>The class <code>SynchronizedWriteBehindQueue</code> (from
<code>com.hazelcast.map.mapstore.writebehind</code> package) is declared threadsafe
in JavaDocs, but it is not.
<a href="https://github.com/hazelcast/hazelcast/issues/4039">#4039</a></p>
</li>
<li>
<p>The method <code>RemoveIfSameOperation</code> does not set <code>dataOldValue</code> for the
<code>entryRemoved</code> event.
<a href="https://github.com/hazelcast/hazelcast/issues/4037">#4037</a></p>
</li>
<li>
<p>When a new node with a new field is added to a cluster and when a
query over this node is attempted, the old nodes throw an exception
(<code>com.hazelcast.query.QueryException: Unknown Portable field: newFieldName</code>)
and the query fails by throwing the same exception.
<a href="https://github.com/hazelcast/hazelcast/issues/3927">#3927</a></p>
</li>
<li>
<p>At the moment, the internal state fields of a <code>Reducer</code> are required
to be volatile to ensure the memory visibility effects after the
suspension and continuation of a reducer. This requirement should be
moved to be handled by the framework itself since it is tend to be
forgotten. <a href="https://github.com/hazelcast/hazelcast/issues/3866">#3866</a></p>
</li>
<li>
<p>The method <code>executeOnKey</code> hangs when the server fails to handle a
query. <a href="https://github.com/hazelcast/hazelcast/issues/3842">#3842</a></p>
</li>
<li>
<p>The <code>GlobalSerializerConfig#setImplementation()</code> parameter should be
compatible with the implementation field.
<a href="https://github.com/hazelcast/hazelcast/issues/3569">#3569</a></p>
</li>
<li>
<p><code>ClientConsoleApp</code> should not define the file <code>hazelcast-client.xml</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/3554">#3554</a></p>
</li>
<li>
<p>When using a custom partitioning strategy and the configured backup
count of a map cannot be fulfilled since a node defined in the custom
partition group is down, a JMX service call is blocked in the while-loop
at <code>com.hazelcast.map.MapService.createLocalMapStats</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/3526">#3526</a></p>
</li>
</ul>
</div>
<div class="sect3">
<h4 id="contributors-334"><a class="anchor" href="#contributors-334"></a><a class="link" href="#contributors-334">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/cszmajda">cszmajda</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-3-3"><a class="anchor" href="#3-3-3"></a><a class="link" href="#3-3-3">3.3.3</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.3.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>JCache average put time statistic is not calculated correctly.
<a href="https://github.com/hazelcast/hazelcast/issues/4029">#4029</a></p>
</li>
<li>
<p>When sending backup, the replica address can be seen as null.
<a href="https://github.com/hazelcast/hazelcast/issues/4001">#4001</a></p>
</li>
<li>
<p>Evicted events are sent before the added events to EntryListeners.
<a href="https://github.com/hazelcast/hazelcast/issues/3992">#3992</a></p>
</li>
<li>
<p>In Management Center, the default login credentials cannot be deleted.
<a href="https://github.com/hazelcast/hazelcast/issues/3990">#3990</a></p>
</li>
<li>
<p>Logger for <code>NodeMulticastListener</code> does not belong to <code>com.hazelcast</code>
hierarchy. <a href="https://github.com/hazelcast/hazelcast/issues/3941">#3941</a></p>
</li>
<li>
<p>MapInterceptors are not removed when a node leaves the cluster.
<a href="https://github.com/hazelcast/hazelcast/issues/3932">#3932</a></p>
</li>
<li>
<p>MapInterceptors of same type (<code>Class</code>) are chained.
<a href="https://github.com/hazelcast/hazelcast/issues/3931">#3931</a></p>
</li>
<li>
<p>Expiration Time should not be updated. Its value is updated on every
set operation on a map, but Hazelcast uses only the first value set for
ExpirationTime. So a <code>getExpirationTime()</code> operation returns a wrong and
misleading value.
<a href="https://github.com/hazelcast/hazelcast/issues/3923">#3923</a></p>
</li>
<li>
<p>When using the XML file to configure a Queue to use a
<code>QueueStoreFactory</code>, a null pointer exception is thrown at
<code>QueueStoreWrapper</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/3907">#3907</a></p>
</li>
<li>
<p>Excess logging on startup.
<a href="https://github.com/hazelcast/hazelcast/issues/3869">#3869</a></p>
</li>
<li>
<p><code>LifecycleService</code> should be terminated after the node cannot join to
the cluster. <a href="https://github.com/hazelcast/hazelcast/issues/3843">#3843</a></p>
</li>
<li>
<p>The method <code>MapProxyImpl.aggregate</code> hangs sporadically.
<a href="https://github.com/hazelcast/hazelcast/issues/3824">#3824</a></p>
</li>
<li>
<p>Currently, there is no class named
<code>com.hazelcast.nio.utf8.EnterpriseStringCreator</code> in Hazelcast. So the
class and its log messages should be removed from the code.
<a href="https://github.com/hazelcast/hazelcast/issues/3819">#3819</a></p>
</li>
<li>
<p>Bad user interface experience in the management center. Maps menu item
that contains maps with longer names cannot be expanded.
<a href="https://github.com/hazelcast/hazelcast/issues/3815">#3815</a></p>
</li>
<li>
<p>When the shutdown button in the management center is hit multiple
times, the nodes are shutdown again, after they are shutdown at the
first place and restarted.
<a href="https://github.com/hazelcast/hazelcast/issues/3718">#3718</a></p>
</li>
<li>
<p>Alert e-mails from the management center are not sent to the e-mail
address. <a href="https://github.com/hazelcast/hazelcast/issues/3693">#3693</a></p>
</li>
<li>
<p>Instances with private IPs cannot be discovered on Amazon EC2.
<a href="https://github.com/hazelcast/hazelcast/issues/3666">#3666</a></p>
</li>
<li>
<p>Null pointer exception in the method <code>Records.buildRecordInfo</code> from
the stabilizer <code>MapStoreTest</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/2956">#2956</a></p>
</li>
</ul>
</div>
<div class="sect3">
<h4 id="contributors-333"><a class="anchor" href="#contributors-333"></a><a class="link" href="#contributors-333">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/dirkvanrensburg">Dirk van Rensburg</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-3-2"><a class="anchor" href="#3-3-2"></a><a class="link" href="#3-3-2">3.3.2</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.3.2 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Reject multicast messages if the group configuration is not matching.
<a href="https://github.com/hazelcast/hazelcast/issues/3806">#3806</a></p>
</li>
<li>
<p><code>Map#getEntryView</code> should check expiration of a key.
<a href="https://github.com/hazelcast/hazelcast/issues/3801">#3801</a></p>
</li>
<li>
<p>Hazelcast gets stuck in <code>HazelcastInstanceNotActiveException</code> loop
during multicast join.
<a href="https://github.com/hazelcast/hazelcast/issues/3732">#3732</a></p>
</li>
<li>
<p>Hazelcast fails to comply with <code>maxIdleTime</code> expiration when running
EntryProcessors. A delay should be added to expiration times on backups.
<a href="https://github.com/hazelcast/hazelcast/issues/3710">#3710</a></p>
</li>
<li>
<p><code>containsKey()</code> in transactional context returns wrong value for keys
deleted within transaction.
<a href="https://github.com/hazelcast/hazelcast/issues/3682">#3682</a></p>
</li>
<li>
<p><code>TransactionalMap.values()</code> returns stale values that was updated
within the transaction boundary.
<a href="https://github.com/hazelcast/hazelcast/issues/3668">#3668</a></p>
</li>
<li>
<p>Number of loaded keys should not exceed map’s maximum size.
<a href="https://github.com/hazelcast/hazelcast/issues/3608">#3608</a></p>
</li>
<li>
<p>During client node shutdown, if the cluster happens to be down,
Hazelcast logs some extra messages at SEVERE level.
<a href="https://github.com/hazelcast/hazelcast/issues/3493">#3493</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-3-1"><a class="anchor" href="#3-3-1"></a><a class="link" href="#3-3-1">3.3.1</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.3.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>MapReduce Combiner creation is not threadsafe, but certain operations
on mapping phase might need a concurrent creation of the combiners. <a href="https://github.com/hazelcast/hazelcast/issues/3625">#3625</a></p>
</li>
<li>
<p>When <code>connectionTimeout</code> property in ClientNetworkConfig is set to
<code>Integer.MAX_VALUE</code>, the client could not connect to cluster since a
default 2000 ms. extra value is added to <code>connectionTimeout</code> while
connecting. <a href="https://github.com/hazelcast/hazelcast/issues/3615">#3615</a></p>
</li>
<li>
<p>User provided list results from combiner is colliding with the
internally used multi-result list. <a href="https://github.com/hazelcast/hazelcast/issues/3614">#3614</a></p>
</li>
<li>
<p>While committing collection transactions, the collection item is being
added to the collection container. However, this gives the warning
<code>There is no suitable de-serializer for type</code> warning. Instead of
collection item, transactional item should be added to the container. <a href="https://github.com/hazelcast/hazelcast/issues/3603">#3603</a></p>
</li>
<li>
<p><code>MaxSizeConfig</code> constructor should convert zero size to
<code>Integer.MAX_VALUE</code>. <a href="https://github.com/hazelcast/hazelcast/issues/3579">#3579</a></p>
</li>
<li>
<p>If deserialization of the client request fails, the exception is not
propagated back to the client. <a href="https://github.com/hazelcast/hazelcast/issues/3557">#3557</a></p>
</li>
<li>
<p><code>Lock is not owned by by the transaction</code> exception. This exception
was received while testing how transactions are working with Map and
MultiMap for some last Hazelcast releases. <a href="https://github.com/hazelcast/hazelcast/issues/3545">#3545</a></p>
</li>
<li>
<p>Main classes in <code>manifest.mf</code> files are not correctly set. <a href="https://github.com/hazelcast/hazelcast/issues/3537">#3537</a></p>
</li>
<li>
<p>Count of evicted events may exceed the map size when the "read backup
data" feature is enabled. <a href="https://github.com/hazelcast/hazelcast/issues/3515">#3515</a></p>
</li>
<li>
<p><code>mancenter.war</code> from Hazelcast release 3.2.5 cannot be deployed to
Glassfish 3.1.2.2 and it fails to deploy. <a href="https://github.com/hazelcast/hazelcast/issues/3501">#3501</a></p>
</li>
<li>
<p>While evicting entries from a map with the method <code>evictAll</code>, locked
keys should stay in the map. <a href="https://github.com/hazelcast/hazelcast/issues/3473">#3473</a></p>
</li>
<li>
<p>In <code>hazelcast-vm</code> module, before every test, new server container is
started. And after every test, running server is terminated. This
behavior causes a long test execution time. Server start-up and
termination should be done before and after test class initialization
and finalization. <a href="https://github.com/hazelcast/hazelcast/issues/3473">#3473</a></p>
</li>
<li>
<p>The method <code>IQueue.take()</code> method should throw InterruptedException,
but throws HazelcastException instead. <a href="https://github.com/hazelcast/hazelcast/issues/3133">#3133</a></p>
</li>
<li>
<p>Multicast discovery doesn’t work without network. <a href="https://github.com/hazelcast/hazelcast/issues/2594">#2594</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-3"><a class="anchor" href="#3-3"></a><a class="link" href="#3-3">3.3</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
3.3 release.</p>
</div>
<div class="sect3">
<h4 id="features-33"><a class="anchor" href="#features-33"></a><a class="link" href="#features-33">New Features</a></h4>
<div class="paragraph">
<p>The following are the new features introduced with 3.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Heartbeat for Java client: Before this release, a Java client could
not detect a node as dead, if the client is not trying to connect to it.
With this heartbeat feature, each node will be pinged periodically. If
no response is returned from a node, it will be deemed as dead. Main
goal of this feature is to decrease the time for detection of dead
(disconnected) nodes by Java clients, so that the user operations will
be sent directly to a responsive one. For more information, please see
<a href="http://docs.hazelcast.org/docs/3.3/manual/html-single/#client-properties">Client
Properties</a>.</p>
</li>
<li>
<p>Tomcat 6 and 7 Web Sessions Clustering: Please see
<a href="http://docs.hazelcast.org/docs/3.3/manual/html-single/hazelcast-documentation.html#web-session-replication">Web
Session Replication</a>.</p>
</li>
<li>
<p>Replicated Map implemented: Please see
<a href="http://docs.hazelcast.org/docs/3.3/manual/html-single/hazelcast-documentation.html#replicated-map">Replicated
Map</a></p>
</li>
<li>
<p>WAN Replication improved: Added configurable replication queue size
<a href="http://docs.hazelcast.org/docs/3.3/manual/html-single/hazelcast-documentation.html#wan-replication-queue-size">WAN
Replication Queue Size</a>.</p>
</li>
<li>
<p>Data Aggregation implemented: Added common data aggregations, please
find
<a href="http://docs.hazelcast.org/docs/3.3/manual/html-single/hazelcast-documentation.html#aggregators">Aggregators</a>
documentation.</p>
</li>
<li>
<p>EvictAll and LoadAll features for IMap: <code>evictAll</code> and <code>loadAll</code>
methods have been introduced to be able to evict all entries except the
locked ones and that loads all or a set of keys from a configured map
store, respectively. Please see
<a href="http://docs.hazelcast.org/docs/3.3/manual/html-single/hazelcast-documentation.html#evicting-all-entries">Evicting
All Entries</a> and
<a href="http://docs.hazelcast.org/docs/3.3/manual/html-single/hazelcast-documentation.html#forcing-all-keys-to-be-loaded">Forcing
All Keys to be Loaded</a> sections for more information.</p>
</li>
<li>
<p>Hazelcast JCache implementation introduced: Starting with release
3.3.1, Hazelcast offers its JCache implementation. Please see
<a href="http://docs.hazelcast.org/docs/3.3/manual/html-single/hazelcast-documentation.html#hazelcast-jcache-implementation">Hazelcast
JCache Implementation</a> for details.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-33"><a class="anchor" href="#fixes-33"></a><a class="link" href="#fixes-33">Fixes</a></h4>
<div class="paragraph">
<p>The following are the fixed issues 3.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>TxQueue cannot find reserved items upon ownership changes
<a href="https://github.com/hazelcast/hazelcast/issues/3432">[#3432</a>].</p>
</li>
<li>
<p>Documentation update is needed to tell that PagingPredicate is only
supported for Comparable objects if there is no comparator
<a href="https://github.com/hazelcast/hazelcast/issues/3432">[#3428</a>].</p>
</li>
<li>
<p><code>java.lang.NullPointerException</code> is thrown when publishing an event in
ClientEndPointImpl
<a href="https://github.com/hazelcast/hazelcast/issues/3407">[#3407</a>].</p>
</li>
<li>
<p>The <code>entryUpdated()</code> callback of a listener during a transaction
always has a null <code>oldValue</code> in the EntryEvent
<a href="https://github.com/hazelcast/hazelcast/issues/3406">[#3406</a>].</p>
</li>
<li>
<p>Documentation update with the links to code samples for integration
modules <a href="https://github.com/hazelcast/hazelcast/issues/3389">[#3389</a>].</p>
</li>
<li>
<p>Hazelcast write-behind with <code>map.replace()</code> stores replaced items
<a href="https://github.com/hazelcast/hazelcast/issues/3386">[#3386</a>].</p>
</li>
<li>
<p>XAResource’s <code>setTransactionTimeout()</code> method is not correctly
implemented <a href="https://github.com/hazelcast/hazelcast/issues/3384">[#3384</a>].</p>
</li>
<li>
<p>Hazelcast web session replication filter may die if response committed
<a href="https://github.com/hazelcast/hazelcast/issues/3360">[#3360</a>].</p>
</li>
<li>
<p>Resource adapter state is never reset to <code>isStarted == false</code>,
resulting in errors down the line
<a href="https://github.com/hazelcast/hazelcast/issues/3350">[#3350</a>].</p>
</li>
<li>
<p><code>PagingPredicate.getAnchor</code> does not return the correct value
<a href="https://github.com/hazelcast/hazelcast/issues/3241">[#3241</a>].</p>
</li>
<li>
<p>If deserialization fails, calling node is not informed
<a href="https://github.com/hazelcast/hazelcast/issues/2509">[#2509</a>].</p>
</li>
<li>
<p>CallerNotMemberException and WrongTargetException exceptions are
thrown at random intervals
<a href="https://github.com/hazelcast/hazelcast/issues/2253">[#2253</a>].</p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong>RC3 Fixes</strong></p>
</div>
<div class="paragraph">
<p>This section lists issues solved for 3.3-RC3 (Release Candidate 3)
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Parallel execution of <code>MapStore#store</code> method for the same key
triggered by <code>IMap#flush</code>
<a href="https://github.com/hazelcast/hazelcast/issues/3338">[#3338</a>].</p>
</li>
<li>
<p>When offering null argument in queue throws an exception but it adds
null argument to collection, then <code>addAll()</code> performed on this list does
not throw an exception
<a href="https://github.com/hazelcast/hazelcast/issues/3330">[#3330</a>].</p>
</li>
<li>
<p><code>java.io.FileNotFoundException</code> thrown by MapLoaderTest
<a href="https://github.com/hazelcast/hazelcast/issues/3324">[#3324</a>].</p>
</li>
<li>
<p>MapMaxSizeTest Stabilizer test with SoftKill
<a href="https://github.com/hazelcast/hazelcast/issues/3291">[#3291</a>].</p>
</li>
<li>
<p>Incompatible Spring and Hazelcast configuration XSDs
<a href="https://github.com/hazelcast/hazelcast/issues/3275">[#3275</a>].</p>
</li>
<li>
<p><code>ExpirationManager</code> partition sorting can fail
<a href="https://github.com/hazelcast/hazelcast/issues/3271">[#3271</a>].</p>
</li>
<li>
<p>Configuration validation is broken
<a href="https://github.com/hazelcast/hazelcast/issues/3257">[#3257</a>].</p>
</li>
<li>
<p>Code Samples for Spring Security and WebFilter Integration
<a href="https://github.com/hazelcast/hazelcast/issues/3252">[#3252</a>].</p>
</li>
<li>
<p>WebFilter Test Cases are slow
<a href="https://github.com/hazelcast/hazelcast/issues/3250">[#3250</a>].</p>
</li>
<li>
<p>Management Center and Weblogic Deployment Problem
<a href="https://github.com/hazelcast/hazelcast/issues/3247">[#3247</a>].</p>
</li>
<li>
<p>Enabling Multicast and TCP/IP node discovery methods freeze the
instances <a href="https://github.com/hazelcast/hazelcast/issues/3246">[#3246</a>].</p>
</li>
<li>
<p><code>getOldValue</code> and <code>getValue</code> returns the same value when removing item
from IMap <a href="https://github.com/hazelcast/hazelcast/issues/3198">[#3198</a>].</p>
</li>
<li>
<p>MapTransactionContextTest: member SoftKill and then
HazelcastSerializationException and IegalStateException: Nested are
thrown <a href="https://github.com/hazelcast/hazelcast/issues/3196">[#3196</a>].</p>
</li>
<li>
<p><code>IMap.delete()</code> should not call
<code>MapLoader.load()</code> <a href="https://github.com/hazelcast/hazelcast/issues/3178">[#3178</a>].</p>
</li>
<li>
<p>3.3-RC3+: NPE in the method <code>connectionMarkedAsNotResponsive</code>
<a href="https://github.com/hazelcast/hazelcast/issues/3169">[#3169</a>].</p>
</li>
<li>
<p><code>WebFilter.HazelcastHttpSession.isNew()</code> does not check the Hazelcast
Session Cache
<a href="https://github.com/hazelcast/hazelcast/issues/3132">[#3132</a>].</p>
</li>
<li>
<p>Hazelcast Spring XSD files are not version agnostic
<a href="https://github.com/hazelcast/hazelcast/issues/3131">[#3131</a>].</p>
</li>
<li>
<p><code>ClassCastException: java.lang.Integer</code> cannot be cast to
<code>java.lang.String</code> Query
<a href="https://github.com/hazelcast/hazelcast/issues/3091">[#3091</a>].</p>
</li>
<li>
<p>Predicate returns a value not matching the predicate
<a href="https://github.com/hazelcast/hazelcast/issues/3090">[#3090</a>].</p>
</li>
<li>
<p>Modifications made by Entry Processor are lost in 3.3-RC-2
<a href="https://github.com/hazelcast/hazelcast/issues/3062">[#3062</a>].</p>
</li>
<li>
<p>Hazelcast Session Clustering with Spring Security Problem
<a href="https://github.com/hazelcast/hazelcast/issues/3049">[#3049</a>].</p>
</li>
<li>
<p>PagingPredicate returning duplicated elements results in an infinite
loop <a href="https://github.com/hazelcast/hazelcast/issues/3047">[#3047</a>].</p>
</li>
<li>
<p><code>expirationTime</code> on EntryView is not set
<a href="https://github.com/hazelcast/hazelcast/issues/3038">[#3038</a>].</p>
</li>
<li>
<p><code>BasicRecordStoreLoader</code> cannot handle retry responses
<a href="https://github.com/hazelcast/hazelcast/issues/3033">[#3033</a>].</p>
</li>
<li>
<p>Short <code>await()</code> on condition of contended lock causes
IllegalStateException
<a href="https://github.com/hazelcast/hazelcast/issues/3025">[#3025</a>].</p>
</li>
<li>
<p>Indices and Comparable: not documented
<a href="https://github.com/hazelcast/hazelcast/issues/3024">[#3024</a>].</p>
</li>
<li>
<p>Marking Heartbeat as healthy is too late
<a href="https://github.com/hazelcast/hazelcast/issues/3014">[#3014</a>].</p>
</li>
<li>
<p>3.3-RC2: <code>IMap#keySet</code> triggers value deserialization
<a href="https://github.com/hazelcast/hazelcast/issues/3008">[#3008</a>].</p>
</li>
<li>
<p><code>map.destroy()</code> throws DistributedObjectDestroyedException
<a href="https://github.com/hazelcast/hazelcast/issues/3001">[#3001</a>].</p>
</li>
<li>
<p>Stabilizer tests Final profile, Xlarge cluster
OperationTimeoutException
<a href="https://github.com/hazelcast/hazelcast/issues/2999">[#2999</a>].</p>
</li>
<li>
<p><code>com.hazelcast.jca.HazelcastConnection::getExecutorService</code> returns
plain ExecutorService
<a href="https://github.com/hazelcast/hazelcast/issues/2986">[#2986</a>].</p>
</li>
<li>
<p>Serialization NPE in MapStoreTest stabilizer, 3.3-RC3-SNAPSHOT
<a href="https://github.com/hazelcast/hazelcast/issues/2985">[#2985</a>].</p>
</li>
<li>
<p>Bug with <code>IMap.getAll()</code>
<a href="https://github.com/hazelcast/hazelcast/issues/2982">[#2982</a>].</p>
</li>
<li>
<p>Client deadlock on single core machines
<a href="https://github.com/hazelcast/hazelcast/issues/2971">[#2971</a>].</p>
</li>
<li>
<p>Retrieve number of futures in loop in calling thread
<a href="https://github.com/hazelcast/hazelcast/issues/2964">[#2964</a>].</p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong>RC2 Fixes</strong></p>
</div>
<div class="paragraph">
<p>This section lists issues solved for 3.3-RC2 (Release Candidate 2)
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>evictAll</code> should flush to staging area
<a href="https://github.com/hazelcast/hazelcast/issues/2969">#2969</a>.</p>
</li>
<li>
<p>NPE exception in MapStoreTest
<a href="https://github.com/hazelcast/hazelcast/issues/2956">[#2956</a>].</p>
</li>
<li>
<p>Fixed <code>AddSessionEntryProcessor</code>
<a href="https://github.com/hazelcast/hazelcast/issues/2955">[#2955</a>].</p>
</li>
<li>
<p>Added <code>StripedExecutor</code> to WanReplicationService
<a href="https://github.com/hazelcast/hazelcast/issues/2947">[#2947</a>].</p>
</li>
<li>
<p>All read operations of map should respect expired keys
<a href="https://github.com/hazelcast/hazelcast/issues/2946">[#2946</a>].</p>
</li>
<li>
<p>Fix test EvictionTest#testMapWideEviction
<a href="https://github.com/hazelcast/hazelcast/issues/2944">[#2944</a>].</p>
</li>
<li>
<p>Heartbeat check of clients from nodes
<a href="https://github.com/hazelcast/hazelcast/issues/2936">[#2936</a>].</p>
</li>
<li>
<p>WebFilter does not clean up timed- out sessions
<a href="https://github.com/hazelcast/hazelcast/issues/2930">[#2930</a>].</p>
</li>
<li>
<p>Fix leaking empty concurrent hashmaps
<a href="https://github.com/hazelcast/hazelcast/issues/2929">[#2929</a>].</p>
</li>
<li>
<p>Data loss fix in <em>hazelcast-wm</em> module
<a href="https://github.com/hazelcast/hazelcast/issues/2927">[#2927</a>].</p>
</li>
<li>
<p>Configured event queue capacity
<a href="https://github.com/hazelcast/hazelcast/issues/2924">[#2924</a>].</p>
</li>
<li>
<p>Client closes owner connection when a connection to the same address
is closed <a href="https://github.com/hazelcast/hazelcast/issues/2921">[#2921</a>].</p>
</li>
<li>
<p>Close the owner connection if heartbeat timeout when client is smart
<a href="https://github.com/hazelcast/hazelcast/issues/2916">[#2916</a>].</p>
</li>
<li>
<p>Set application buffer size to not exceed <code>tls</code> record size
<a href="https://github.com/hazelcast/hazelcast/issues/2914">[#2914</a>].</p>
</li>
<li>
<p>EntryProcessor makes unnecessary serialization
<a href="https://github.com/hazelcast/hazelcast/issues/2913">[#2913</a>].</p>
</li>
<li>
<p>Make evictable time window configurable
<a href="https://github.com/hazelcast/hazelcast/issues/2910">[#2910</a>].</p>
</li>
<li>
<p>Fixes data loss issue when partition table is being synced and a node
is gracefully shutdown
<a href="https://github.com/hazelcast/hazelcast/issues/2908">[#2908</a>].</p>
</li>
<li>
<p>MapStoreConfig; implementation instance is not set, when configured
via XML <a href="https://github.com/hazelcast/hazelcast/issues/2898">[#2898</a>].</p>
</li>
<li>
<p>LocalMapStats does not record stats about locked entries in 3.x
<a href="https://github.com/hazelcast/hazelcast/issues/2876">[#2876</a>].</p>
</li>
<li>
<p>Concurrency security interceptor
<a href="https://github.com/hazelcast/hazelcast/issues/2874">[#2874</a>].</p>
</li>
<li>
<p>Client hangs during split, if split occurs due to network error
<a href="https://github.com/hazelcast/hazelcast/issues/2850">[#2850</a>].</p>
</li>
<li>
<p>Network connection loss does not release lock
<a href="https://github.com/hazelcast/hazelcast/issues/2818">[#2818</a>].</p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong>RC1 Fixes</strong></p>
</div>
<div class="paragraph">
<p>This section lists issues solved for 3.3-RC1 (Release Candidate 1)
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>It is not possible to copy the link from
<em><a href="http://hazelcast.org/download/" class="bare">http://hazelcast.org/download/</a></em> and run <code>wget</code> on it
<a href="https://github.com/hazelcast/hazelcast/issues/2814">[#2814</a>].</p>
</li>
<li>
<p><code>mapCleared</code> method for EntryListener is needed
<a href="https://github.com/hazelcast/hazelcast/issues/2789">[#2789</a>].</p>
</li>
<li>
<p>The method <code>keySet</code> with predicate should trigger loading of MapStore
<a href="https://github.com/hazelcast/hazelcast/issues/2692">[#2692</a>].</p>
</li>
<li>
<p>MapStore with write-behind: The method <code>IMap.remove()</code> followed by
<code>IMap.putIfAbsent(key,value)</code> still returns the old value
<a href="https://github.com/hazelcast/hazelcast/issues/2685">[#2685</a>].</p>
</li>
<li>
<p>Hazelcast cannot read UTF-8 String if ``multiple-byte'' characters end
up at position that is an even multiple of buffer size
<a href="https://github.com/hazelcast/hazelcast/issues/2674">[#2674</a>].</p>
</li>
<li>
<p>Current implementation of record expiration relies on undefined
behavior of <code>System.nanoTime()</code>
<a href="https://github.com/hazelcast/hazelcast/issues/2666">[#2666</a>].</p>
</li>
<li>
<p>Inconsistency at Hazelcast Bootup ``Editions'' message
<a href="https://github.com/hazelcast/hazelcast/issues/2641">[#2641</a>].</p>
</li>
<li>
<p><code>AbstractReachabilityHandler</code> writes to standard output
<a href="https://github.com/hazelcast/hazelcast/issues/2591">[#2591</a>].</p>
</li>
<li>
<p><code>IMap.set()</code> does not not remove a key from write behind deletions
queue <a href="https://github.com/hazelcast/hazelcast/issues/2588">[#2588</a>].</p>
</li>
<li>
<p><code>com.hazelcast.core.EntryView#getLastAccessTime</code> is
invalid <a href="https://github.com/hazelcast/hazelcast/issues/2581">[#2581</a>].</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-33"><a class="anchor" href="#contributors-33"></a><a class="link" href="#contributors-33">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/ollierob">Ollie R</a></p>
</li>
<li>
<p><a href="https://github.com/bturner">Bryan Turner</a></p>
</li>
<li>
<p><a href="https://github.com/akerekes">Andras Kerekes</a></p>
</li>
<li>
<p><a href="https://github.com/lukasblu">Lukas Blunschi</a></p>
</li>
<li>
<p><a href="https://github.com/PetroSemeniuk">Petro Semeniuk</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-2-7"><a class="anchor" href="#3-2-7"></a><a class="link" href="#3-2-7">3.2.7</a></h3>
<div class="paragraph">
<p>There are some minor internal improvements.</p>
</div>
</div>
<div class="sect2">
<h3 id="3-2-6"><a class="anchor" href="#3-2-6"></a><a class="link" href="#3-2-6">3.2.6</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.2.6 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>MapStore in write-behind mode throws Exception (Spring configured).
<a href="https://github.com/hazelcast/hazelcast/issues/3397">#3397</a></p>
</li>
<li>
<p>Wildcard pattern of the map (map is configured with a wildcard in its
name) should be respected during evictions.
<a href="https://github.com/hazelcast/hazelcast/issues/3345">#3345</a></p>
</li>
<li>
<p>Map eviction does not work when the policy is <code>USED_HEAP_PERCENTAGE</code>
or <code>USED_HESAP SIZE</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/3321">#3321</a></p>
</li>
<li>
<p>Exceptions when using Portable serialization.
<a href="https://github.com/hazelcast/hazelcast/issues/3313">#3313</a></p>
</li>
<li>
<p>When Hazelcast is used as drop-in replacement for Memcached, it causes
errors. <a href="https://github.com/hazelcast/hazelcast/issues/3182">#3182</a></p>
</li>
<li>
<p>Null Pointer Exception is thrown by <code>MapService.dispatchEvent</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/3101">#3101</a></p>
</li>
<li>
<p>PagingPredicate returns duplicated elements which result in an
infinite loop.
<a href="https://github.com/hazelcast/hazelcast/issues/3047">#3047</a></p>
</li>
<li>
<p><code>ContextClassLoader</code> is by default only set on some cached operation
threads, not on most others.
<a href="https://github.com/hazelcast/hazelcast/issues/2721">#2721</a></p>
</li>
</ul>
</div>
<div class="sect3">
<h4 id="contributors-326"><a class="anchor" href="#contributors-326"></a><a class="link" href="#contributors-326">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/AndrewKolpakov">Andrew Kolpakov</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-2-5"><a class="anchor" href="#3-2-5"></a><a class="link" href="#3-2-5">3.2.5</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.2.5 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Txn map keyset and values with portable entries is not working
correctly. <a href="https://github.com/hazelcast/hazelcast/issues/3152">#3152</a></p>
</li>
<li>
<p>The <code>TransactionalMap.{putIfAbsent(k, v)</code>, <code>replace(k, v)</code>, <code>replace(k, v1, v2)</code>, <code>remove(k, v)}</code>
methods never release lock after transaction ends.
<a href="https://github.com/hazelcast/hazelcast/issues/3149">#3149</a></p>
</li>
<li>
<p>Test failure at <code>ClientMapTest.testMapStatistics</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/3138">#3138</a></p>
</li>
<li>
<p><code>NetworkConfig.setReuseAddress</code> is not available in the XML.
<a href="https://github.com/hazelcast/hazelcast/issues/3122">#3122</a></p>
</li>
<li>
<p>When a selector fails to open, the <code>AbstractSelector</code> does not throw
an exception, but logs it and then continues. Also, when <code>select</code> throws
an IOException, this exception is not dealt correctly.
<a href="https://github.com/hazelcast/hazelcast/issues/3105">#3105</a></p>
</li>
<li>
<p>Test failure at <code>QueryBasicTest.testInPredicateWithEmptyArray</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/3060">#3060</a></p>
</li>
<li>
<p>Hibernate cache flush leaves ClientMapProxy in an inconsistent state.
This cache flush triggers <code>IMapRegionCache.clear()</code> and the
implementation here does not look correct since it leaves the <code>map</code>
field in the inconsistent state (<em>context = null</em>) and prevents any
further use of it.
<a href="https://github.com/hazelcast/hazelcast/issues/3004">#3004</a></p>
</li>
<li>
<p>Fixes operation execution/invocation on IO threads issue.
<a href="https://github.com/hazelcast/hazelcast/pull/2994">#2994</a></p>
</li>
<li>
<p>Node cannot recover from <code>MergeOperation</code> if target node exits the
cluster. <a href="https://github.com/hazelcast/hazelcast/issues/2937">#2937</a></p>
</li>
<li>
<p>Client fails to run due to the lack of <code>ClientTestApp</code> class.
<a href="https://github.com/hazelcast/hazelcast/issues/2817">#2817</a></p>
</li>
<li>
<p>Using Hazelcast Queue, assume that there is a system in which messages
are actively being consumed by one consumer. When a second Hazelcast
instance is started, i.e., second consumer for the same queue, Hazelcast
throws an exception, then continues normally and there are two competing
consumers on the same queue.
<a href="https://github.com/hazelcast/hazelcast/issues/2805">#2805</a></p>
</li>
<li>
<p><code>IMap.submitToKey</code> and <code>IMap.executeOnKey</code> in combination with nodes
joining/leaving the cluster result in data loss.
<a href="https://github.com/hazelcast/hazelcast/issues/2785">#2785</a></p>
</li>
<li>
<p>Too much delay for deciding heartbeat timeout.
<a href="https://github.com/hazelcast/hazelcast/issues/2766">#2766</a></p>
</li>
<li>
<p>When multiple predicates are combined by an <code>AndPredicate</code>, the first
<code>IndexAwarePredicate</code> that is not indexed will be added to the <code>no
index</code> list twice.
<a href="https://github.com/hazelcast/hazelcast/issues/2531">#2531</a></p>
</li>
<li>
<p>There appears to be a leak in the memory in
<code>SecondsBasedEntryTaskScheduler</code> when idle timeout is enabled on a map.
<a href="https://github.com/hazelcast/hazelcast/issues/2343">#2343</a></p>
</li>
</ul>
</div>
<div class="sect3">
<h4 id="contributors-325"><a class="anchor" href="#contributors-325"></a><a class="link" href="#contributors-325">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/AndrewKolpakov">Andrew Kolpakov</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-2-4"><a class="anchor" href="#3-2-4"></a><a class="link" href="#3-2-4">3.2.4</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.2.4 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Assigning wrong item ID on backup when instance is shutdown in
QueueStore. <a href="https://github.com/hazelcast/hazelcast/issues/2842">#2842</a></p>
</li>
<li>
<p><code>IQueue.take</code> throws HazelcastException instead of
InterruptedException.
<a href="https://github.com/hazelcast/hazelcast/issues/2833">#2833</a></p>
</li>
<li>
<p>Hazelcast distribution has some left-over files.
<a href="https://github.com/hazelcast/hazelcast/issues/2821">#2821</a></p>
</li>
<li>
<p>Management Center cannot update map configuration on already created
map proxies. <a href="https://github.com/hazelcast/hazelcast/issues/2810">#2810</a></p>
</li>
<li>
<p>Transient test failure: <code>IMap.get(k)</code> returns null.
<a href="https://github.com/hazelcast/hazelcast/issues/2804">#2804</a></p>
</li>
<li>
<p><code>IllegalArgumentException: Target cannot be null!</code> shows up when
<code>MultipleEntryBackupOperationForNullValue</code> test is run by
<code>executeOnKeys()</code> firstly.
<a href="https://github.com/hazelcast/hazelcast/issues/2754">#2754</a></p>
</li>
<li>
<p>When creating an instance with EntryProcessor, the backup process does
not work. <a href="https://github.com/hazelcast/hazelcast/issues/2752">#2752</a></p>
</li>
<li>
<p>Data loss happens in the web filter.
<a href="https://github.com/hazelcast/hazelcast/issues/2746">#2746</a></p>
</li>
<li>
<p><code>BackupEntryProcessor</code> stores the value even though it is not set
explicitly. <a href="https://github.com/hazelcast/hazelcast/issues/2613">#2613</a></p>
</li>
<li>
<p>The test <code>listenerAddStress</code> fails often.
<a href="https://github.com/hazelcast/hazelcast/issues/2611">#2611</a></p>
</li>
<li>
<p>Predicate should fail when null argument is passed.
<a href="https://github.com/hazelcast/hazelcast/issues/2577">#2577</a></p>
</li>
<li>
<p>XAResourceWrapper does not honor contract of
<code>XAResource#setTransactionTimeout</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/2569">#2569</a></p>
</li>
<li>
<p>Allow <code>Predicates.and</code> and <code>Predicates.or</code> for more than 2 arguments.
<a href="https://github.com/hazelcast/hazelcast/issues/2563">#2563</a></p>
</li>
<li>
<p>Semaphore is given to the thread that is coming late.
<a href="https://github.com/hazelcast/hazelcast/issues/2472">#2472</a></p>
</li>
<li>
<p><code>UnknownHostException</code> is logged when using hostnames for seed
addresses. <a href="https://github.com/hazelcast/hazelcast/issues/2125">#2125</a></p>
</li>
<li>
<p>The Java client seems to hang if there is blocking of a map call in
map listener.
<a href="https://github.com/hazelcast/hazelcast/issues/2106">#2106</a></p>
</li>
<li>
<p>The cluster is not responsive when 2nd node joins.
<a href="https://github.com/hazelcast/hazelcast/issues/2105">#2105</a></p>
</li>
<li>
<p>Hibernate query caches are not configurable.
<a href="https://github.com/hazelcast/hazelcast/issues/2064">#2064</a></p>
</li>
<li>
<p>XA Transactions should be explained in the Reference Manual.
<a href="https://github.com/hazelcast/hazelcast/issues/2020">#2020</a></p>
</li>
<li>
<p>Encryption enabled results in cluster to hang under load.
<a href="https://github.com/hazelcast/hazelcast/issues/1897">#1897</a></p>
</li>
<li>
<p>SSL connections are unreliable.
<a href="https://github.com/hazelcast/hazelcast/issues/1896">#1896</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-2-3"><a class="anchor" href="#3-2-3"></a><a class="link" href="#3-2-3">3.2.3</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.2.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>The method <code>TransactionalQueue.poll</code> fails to find an item that is put
into the queue in the same transaction with a non-zero timeout.
<a href="https://github.com/hazelcast/hazelcast/issues/2669">#2669</a></p>
</li>
<li>
<p>IExecutorService fails when it is called with MemberSelector instance
that returns 0 Members.
<a href="https://github.com/hazelcast/hazelcast/issues/2650">#2650</a></p>
</li>
<li>
<p>If statistics are enabled, map’s <code>InMemoryFormat.Object</code> does not
work. <a href="https://github.com/hazelcast/hazelcast/issues/2622">#2622</a></p>
</li>
<li>
<p>There is a memory leak in long running Hazelcast instances because of
a bug in <code>MapEvictionManager.MapEvictTask</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/2596">#2596</a></p>
</li>
<li>
<p>Hazelcast client is missing an extensive XML Config Test and XSD Test.
<a href="https://github.com/hazelcast/hazelcast/issues/2587">#2587</a></p>
</li>
<li>
<p>The client may consider the original address list if no cluster member
can be reached.
<a href="https://github.com/hazelcast/hazelcast/issues/2585">#2585</a></p>
</li>
<li>
<p>Locks are not cleaned upon the operation <code>map.destroy</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/2582">#2582</a></p>
</li>
<li>
<p>Classpath: Configuration file discovery is not working.
<a href="https://github.com/hazelcast/hazelcast/issues/2565">#2565</a></p>
</li>
<li>
<p>The method <code>ClientService.getConnectedClients()</code> does not always
return the correct number of clients.
<a href="https://github.com/hazelcast/hazelcast/issues/2541">#2541</a></p>
</li>
<li>
<p>Nodes leaving and joining from/to the cluster can cause multiple
subscription callbacks to be sent.
<a href="https://github.com/hazelcast/hazelcast/issues/2539">#2539</a></p>
</li>
<li>
<p>Predicate fails with <code>NullPointerException</code> if the value is null.
<a href="https://github.com/hazelcast/hazelcast/issues/2522">#2522</a></p>
</li>
<li>
<p>Messages’ order breaks with versions 3.2+.
<a href="https://github.com/hazelcast/hazelcast/issues/2513">#2513</a></p>
</li>
<li>
<p>The method <code>ClientProxy.destroy</code> should always clean the resources.
<a href="https://github.com/hazelcast/hazelcast/issues/2475">#2475</a></p>
</li>
<li>
<p>The method <code>HazelcastHttpSession.getAttributeNames</code> returns entries
that were only read but not written.
<a href="https://github.com/hazelcast/hazelcast/issues/2434">#2434</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-2-2"><a class="anchor" href="#3-2-2"></a><a class="link" href="#3-2-2">3.2.2</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.2.2 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Client security callable fix.
<a href="https://github.com/hazelcast/hazelcast/pull/2561">#2561</a></p>
</li>
<li>
<p>Updating a key in a transaction gives listeners an entryAdded()
callback instead of entryUpdated().
<a href="https://github.com/hazelcast/hazelcast/issues/2542">#2542</a></p>
</li>
<li>
<p>Client ssl engine doesn’t need keyStore and keyStorePassword.
<a href="https://github.com/hazelcast/hazelcast/pull/2525">#2525</a></p>
</li>
<li>
<p>Added support for Mapper, Combiner, Reducer, KeyValueSource to
implement HazelcastInstanceAware.
<a href="https://github.com/hazelcast/hazelcast/pull/2502">#2502</a></p>
</li>
<li>
<p>Fixed alter function.
<a href="https://github.com/hazelcast/hazelcast/pull/2496">#2496</a></p>
</li>
<li>
<p>Return cached value upon IMap.get() if near cache is enabled.
<a href="https://github.com/hazelcast/hazelcast/pull/2482">#2482</a></p>
</li>
<li>
<p>Exception initializing hz:client.
<a href="https://github.com/hazelcast/hazelcast/issues/2480">#2480</a></p>
</li>
<li>
<p>Fixed portable serialization between different services versions.
<a href="https://github.com/hazelcast/hazelcast/pull/2478">#2478</a></p>
</li>
<li>
<p>Resolves a data race in the client proxy that can lead to an NPE.
<a href="https://github.com/hazelcast/hazelcast/pull/2474">#2474</a></p>
</li>
<li>
<p>Fixed partition group hostname matching.
<a href="https://github.com/hazelcast/hazelcast/pull/2470">#2470</a></p>
</li>
<li>
<p>Client shutdown issue: Improve logging.
<a href="https://github.com/hazelcast/hazelcast/issues/2442">#2442</a></p>
</li>
<li>
<p>Unnecessary synchronized lock when invoking
com.hazelcast.instance.LifecycleServiceImpl.isRunning().
<a href="https://github.com/hazelcast/hazelcast/issues/2454">#2454</a></p>
</li>
<li>
<p>If MapStoreFactory throws exception, instance hangs.
<a href="https://github.com/hazelcast/hazelcast/issues/2445">#2445</a></p>
</li>
<li>
<p>Semaphore is given to the thread that is coming late.
<a href="https://github.com/hazelcast/hazelcast/issues/2443">#2443</a></p>
</li>
<li>
<p>Lots of exceptions when shutting down connection.
<a href="https://github.com/hazelcast/hazelcast/issues/2441">#2441</a></p>
</li>
<li>
<p>Migration fails when statistics are disabled.
<a href="https://github.com/hazelcast/hazelcast/issues/2436">#2436</a></p>
</li>
<li>
<p>3.2.1 regression: nested transactions are not caught and prevented.
<a href="https://github.com/hazelcast/hazelcast/issues/2404">#2404</a></p>
</li>
<li>
<p>Client proxy init synced.
<a href="https://github.com/hazelcast/hazelcast/pull/2376">#2376</a></p>
</li>
<li>
<p>Fixes hostname matching problem when interface has wildcards.
<a href="https://github.com/hazelcast/hazelcast/pull/2398">#2398</a></p>
</li>
<li>
<p>Fix weblogic shutdown backport.
<a href="https://github.com/hazelcast/hazelcast/pull/2391">#2391</a></p>
</li>
<li>
<p>NotWritablePropertyException connectionAttemptLimit with ssl client
config. <a href="https://github.com/hazelcast/hazelcast/issues/2335">#2335</a></p>
</li>
<li>
<p>Map-Reduce Operation fails, when another instance tries to form a
cluster with an instance running a map reduce task.
<a href="https://github.com/hazelcast/hazelcast/issues/2354">#2354</a></p>
</li>
<li>
<p>EntryEvent getMember returning null when a node leaves the cluster.
<a href="https://github.com/hazelcast/hazelcast/issues/2358">#2358</a></p>
</li>
<li>
<p>NullPointerException in Bundle Activator.
<a href="https://github.com/hazelcast/hazelcast/issues/2489">#2489</a></p>
</li>
</ul>
</div>
<div class="sect3">
<h4 id="contributors-322"><a class="anchor" href="#contributors-322"></a><a class="link" href="#contributors-322">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/lukasblu">Lukas Blunschi</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-2-1"><a class="anchor" href="#3-2-1"></a><a class="link" href="#3-2-1">3.2.1</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 3.2.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>JCA problems have been fixed.
<a href="https://github.com/hazelcast/hazelcast/issues/2025">#2025</a></p>
</li>
<li>
<p>C++ client compilation problems are fixed.</p>
</li>
<li>
<p>Redo problem about Java dummy client is fixed.</p>
</li>
<li>
<p>Round robin load balancer of Java client is improved.</p>
</li>
<li>
<p>Initial timeout is for the initial connections in Java clients.</p>
</li>
<li>
<p>Wildcard configuration improvement in near cache configuration.</p>
</li>
<li>
<p>Unneeded serializations in EntryProcessor should be removed when the
object format is <em>In-Memory</em>.
<a href="https://github.com/hazelcast/hazelcast/issues/2139">#2139</a></p>
</li>
<li>
<p>Race condition in near cache has been solved, immediate invalidation
of local near cache was needed.
<a href="https://github.com/hazelcast/hazelcast/issues/2163">#2163</a></p>
</li>
<li>
<p>Predicate issue seen in transactions is solved.</p>
</li>
<li>
<p>Comparator issue in map eviction is solved.</p>
</li>
<li>
<p>Map eviction part has been refactored due to a race condition on map
listener. <a href="https://github.com/hazelcast/hazelcast/issues/2324">#2324</a></p>
</li>
<li>
<p>Stale data problem in client near cache has been solved.
<a href="https://github.com/hazelcast/hazelcast/issues/2065">#2065</a></p>
</li>
<li>
<p>Many checkstyle and findbugs issues are solved.</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-2"><a class="anchor" href="#3-2"></a><a class="link" href="#3-2">3.2</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
3.2 release.</p>
</div>
<div class="sect3">
<h4 id="features-32"><a class="anchor" href="#features-32"></a><a class="link" href="#features-32">New Features</a></h4>
<div class="ulist">
<ul>
<li>
<p><strong>NIO Client</strong>: New architecture based on NIO introduced to support more
scalable and concurrent client usage.</p>
</li>
<li>
<p><strong>MapReduce Framework</strong>: MapReduce implemented for your key-value
collections that need to be reduced by grouping the keys. Please see
<a href="http://www.infoq.com/news/2014/02/hazelcast-mapreduce-api">the interview</a>
and
<a href="http://docs.hazelcast.org/docs/3.2/manual/html-single/hazelcast-documentation.html#mapreduce">MapReduce</a>
section.</p>
</li>
<li>
<p><strong>Order/Limit Support</strong>: Now you can order and limit results returned by
queries performed on Hazelcast Distributed Map.</p>
</li>
<li>
<p>*C Client*: Native C client developed for C++ users which can
connect to a Hazelcast cluster and realize almost all operations that a
node can perform. Please see
<a href="http://docs.hazelcast.org/docs/3.2/manual/html-single/hazelcast-documentation.html#native-clients">Native
Clients</a>.</p>
</li>
<li>
<p><strong>C# Client</strong>: Also, Native C# client that has a very similar API with
Native Java client developed. Please see
<a href="http://docs.hazelcast.org/docs/3.2/manual/html-single/hazelcast-documentation.html#native-clients">Native
Clients</a>.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="enhancements-32"><a class="anchor" href="#enhancements-32"></a><a class="link" href="#enhancements-32">Enhancements</a></h4>
<div class="ulist">
<ul>
<li>
<p>Size of a distributed queue via REST API can be returned.
<a href="https://github.com/hazelcast/hazelcast/pull/1809">#1809</a><br></p>
</li>
<li>
<p>InitialLoadMode configuration parameter (having Lazy and Eager as
values) added to MapStoreConfig.
<a href="https://github.com/hazelcast/hazelcast/pull/1751">#1751</a></p>
</li>
<li>
<p>Tagging support for Executor Service introduced such that nodes can be
tagged for IExecutorService.
<a href="https://github.com/hazelcast/hazelcast/issues/1457">1457</a></p>
</li>
<li>
<p><code>getForUpdate()</code> operation for transactional map introduced.
<a href="https://github.com/hazelcast/hazelcast/issues/1033">#1033</a></p>
</li>
<li>
<p>Entry processor can run on a set of keys with the introduction of
<code>executeOnKeys(keys,entryprocessor)</code> method for IMap.
<a href="https://github.com/hazelcast/hazelcast/pull/1423">1423</a></p>
</li>
<li>
<p><code>getNearCacheStats()</code> introduced. Statistics for near cache can be
retrieved. <a href="https://github.com/hazelcast/hazelcast/issues/30">#30</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-32"><a class="anchor" href="#fixes-32"></a><a class="link" href="#fixes-32">Fixes</a></h4>
<div class="ulist">
<ul>
<li>
<p><code>LocalMapStats.getNearCacheStats()</code> can return null when it is called
before a map get that calls <code>initNearCache()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/2009">#2009</a></p>
</li>
<li>
<p><code>testMapWithIndexAfterShutDown</code> fails in OpenJDK.
<a href="https://github.com/hazelcast/hazelcast/issues/2001">#2001</a></p>
</li>
<li>
<p>Portable Serialization needs objects to be shared between client and
server. <a href="https://github.com/hazelcast/hazelcast/issues/1957">#1957</a></p>
</li>
<li>
<p>Near cache entries should be locally invalidate on
<code>IMap.executeOnKey()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1951">#1951</a></p>
</li>
<li>
<p>OperationTimeoutException is thrown when executing task that runs
longer than <code>hazelcast.operation.call.timeout.millis</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1949">#1949</a></p>
</li>
<li>
<p><code>MapStore#store</code> was called when executing AbstractEntryProcessor on
backup. <a href="https://github.com/hazelcast/hazelcast/issues/1940">#1940</a></p>
</li>
<li>
<p>After an OperationTimeoutException is thrown from `ILock.tryLock()
(and after the system is back in a normal state), the named lock remains
locked. <a href="https://github.com/hazelcast/hazelcast/issues/1937">#1937</a></p>
</li>
<li>
<p>Hazelcast client needs OutOfMemoryErrorDispatcher.
<a href="https://github.com/hazelcast/hazelcast/issues/1933">#1933</a></p>
</li>
<li>
<p>Near Cache: Caching of local entries may lead to race condition.
<a href="https://github.com/hazelcast/hazelcast/issues/1905">#1905</a></p>
</li>
<li>
<p>After key owner node dies, it takes too much time for threads to
wakeup from <code>condition.await()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1879">#1879</a></p>
</li>
<li>
<p>Possible improvements/fixes for NearCache.
<a href="https://github.com/hazelcast/hazelcast/issues/1863">#1863</a></p>
</li>
<li>
<p><code>MultipleEntryBackupOperation</code> does not handle deletion of entries.
<a href="https://github.com/hazelcast/hazelcast/issues/1854">#1854</a></p>
</li>
<li>
<p>If topics are created/destroyed, then the statistics for that topic
are not destroyed and this can cause a memory leak.
<a href="https://github.com/hazelcast/hazelcast/issues/1847">#1847</a></p>
</li>
<li>
<p>PartitionService backup/replication fixes.
<a href="https://github.com/hazelcast/hazelcast/issues/1840">#1840</a></p>
</li>
<li>
<p>Cached null values remain in near cache after <code>evict</code> is called.
<a href="https://github.com/hazelcast/hazelcast/issues/1829">#1829</a></p>
</li>
<li>
<p>NullPointerException in MultiMap when the service is shutdown before
the migration is processed.
<a href="https://github.com/hazelcast/hazelcast/issues/1823">#1823</a></p>
</li>
<li>
<p>Network interruption causes node to continually warn with
WrongTargetException.
<a href="https://github.com/hazelcast/hazelcast/issues/1815">#1815</a></p>
</li>
<li>
<p><code>DefaultRecordStore#removeAll</code> should be modified so that it keeps
<code>key objects to delete</code> as a list, not a set.
<a href="https://github.com/hazelcast/hazelcast/issues/1795">#1795</a></p>
</li>
<li>
<p>Very long <code>operation.run()</code> call stack especially when high partition
count is used.
<a href="https://github.com/hazelcast/hazelcast/issues/1745">#1745</a></p>
</li>
<li>
<p>When executing an entry processor with an index aware predicate, the
index is not used, instead the predicate is applied to the entire entry
set. <a href="https://github.com/hazelcast/hazelcast/issues/1719">#1719</a></p>
</li>
<li>
<p>When one node goes down in a cluster with 2 nodes (where near cache is
enabled), <code>containsKey</code> call hangs in the second node.
<a href="https://github.com/hazelcast/hazelcast/issues/1688">#1688</a></p>
</li>
<li>
<p>When deleting an entry from an entry processor by setting the value to
null, it is not removed from the backup store.
<a href="https://github.com/hazelcast/hazelcast/issues/1687">#1687</a></p>
</li>
<li>
<p>Client calls executed at server side cause unwanted (de)serialization.
<a href="https://github.com/hazelcast/hazelcast/issues/1669">#1669</a></p>
</li>
<li>
<p>In <code>TrackableJobFuture.get(long, TimeUnit)</code>, there is a 100 ms of
sleep-spin while waiting for the result of a MapReduce task to be set.
<a href="https://github.com/hazelcast/hazelcast/issues/1648">#1648</a></p>
</li>
<li>
<p>If <code>storeAll</code> takes much time and if instance terminates while map
store is running, data can be lost.
<a href="https://github.com/hazelcast/hazelcast/issues/1644">#1644</a></p>
</li>
<li>
<p>A missing Spring 4 Cache method added to hazelcast-spring package
(namely <code>public T get(Object key, Class type)</code>).
<a href="https://github.com/hazelcast/hazelcast/issues/1627">#1627</a></p>
</li>
<li>
<p>When eviction tasks are canceled, <code>scheduledExecutorService</code> is not
cleaned. <a href="https://github.com/hazelcast/hazelcast/issues/1595">#1595</a></p>
</li>
<li>
<p><code>storeAll()</code> with new value for the same key should not be executed
until any previous <code>storeAll()</code> operations with the same key are not
completed. <a href="https://github.com/hazelcast/hazelcast/issues/1592">#1592</a></p>
</li>
<li>
<p>When using native client to interact with Hazelcast cluster, some JMX
MBean attribute values on cluster nodes are not set/updated.
<a href="https://github.com/hazelcast/hazelcast/issues/1576">#1576</a></p>
</li>
<li>
<p><code>IMap.getAll(keys)</code> method does not read from near cache.
<a href="https://github.com/hazelcast/hazelcast/issues/1532">#1532</a></p>
</li>
<li>
<p>Near Cache <em>cache-local-entries</em> attribute is missing in
<code>hazelcast-spring-3.2</code> XSD.
<a href="https://github.com/hazelcast/hazelcast/issues/1524">#1524</a></p>
</li>
<li>
<p>Exception while executing script in OpenJDK 8.
<a href="https://github.com/hazelcast/hazelcast/issues/1518">#1518</a></p>
</li>
<li>
<p>Infinite waiting on merge operations when cluster shuts down.
<a href="https://github.com/hazelcast/hazelcast/issues/1504">#1504</a></p>
</li>
<li>
<p>Client side socket interceptor is not needed to be
MemberSocketInterceptor.
<a href="https://github.com/hazelcast/hazelcast/issues/1444">#1444</a></p>
</li>
<li>
<p>Near cache on the local node should be enabled if its InMemoryFormat
is different from that of the map.
<a href="https://github.com/hazelcast/hazelcast/issues/1438">#1438</a></p>
</li>
<li>
<p>Async EntryProcessor does not deserialize the value before it is
called back. <a href="https://github.com/hazelcast/hazelcast/issues/1433">#1433</a></p>
</li>
<li>
<p>A submitted task cannot be canceled via the native client.
<a href="https://github.com/hazelcast/hazelcast/issues/1394">#1394</a></p>
</li>
<li>
<p><code>executeOnKeys(keys,entryprocessor)</code> introduced on IMap. With this
feature entry processor can be run on a set of keys.
<a href="https://github.com/hazelcast/hazelcast/issues/1339">#1339</a></p>
</li>
<li>
<p>FINEST logging should be guarded where appropriate.
<a href="https://github.com/hazelcast/hazelcast/issues/1332">#1332</a></p>
</li>
<li>
<p>False errors reported in Eclipse due to schema definition.
<a href="https://github.com/hazelcast/hazelcast/issues/1330">#1330</a></p>
</li>
<li>
<p>Index based operations are not synchronized with partition changes.
<a href="https://github.com/hazelcast/hazelcast/issues/1297">#1297</a></p>
</li>
<li>
<p>Management Center: InvocationTargetException in Tomcat console when a
node is started and then stopped.
<a href="https://github.com/hazelcast/hazelcast/issues/1267">#1267</a></p>
</li>
<li>
<p>The system property <code>hazelcast.map.load.chunk.size</code> is being ignored
in Hazelcast 3.1.
<a href="https://github.com/hazelcast/hazelcast/issues/1110">#1110</a></p>
</li>
<li>
<p>Master should fire repartitioning after getting confirmation from
nodes. <a href="https://github.com/hazelcast/hazelcast/issues/1058">#1058</a></p>
</li>
<li>
<p>SqlPredicate does not Implement equals/hashCode.
<a href="https://github.com/hazelcast/hazelcast/issues/960">#960</a></p>
</li>
<li>
<p><code>DelegatingFuture.isDone</code> seems to always return false until the
method <code>DelegatingFuture.get</code> is called.
<a href="https://github.com/hazelcast/hazelcast/issues/850">#850</a></p>
</li>
<li>
<p>Predicate support for entry processor.
<a href="https://github.com/hazelcast/hazelcast/issues/826">#826</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong>RC2 Fixes</strong></p>
</div>
<div class="paragraph">
<p>The following are the fixed issues for 3.2-RC2 (Release Candidate 2)
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>ClientService.getConnectedClients</code> returns all end points.
<a href="https://github.com/hazelcast/hazelcast/issues/1883">#1883</a></p>
</li>
<li>
<p>MultiMap is throwing <code>ConcurrentModificationExceptions</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1882">#1882</a></p>
</li>
<li>
<p><code>executorPoolSize</code> field of ClientConfig cannot be configured using
XML. <a href="https://github.com/hazelcast/hazelcast/issues/1867">#1867</a></p>
</li>
<li>
<p>Partition processing cannot be postponed.
<a href="https://github.com/hazelcast/hazelcast/pull/1856">#1856</a></p>
</li>
<li>
<p>Memory leak at client endpoints.
<a href="https://github.com/hazelcast/hazelcast/pull/1842">#1842</a></p>
</li>
<li>
<p>Errors related to management center configuration on startup.
<a href="https://github.com/hazelcast/hazelcast/pull/1821">#1821</a></p>
</li>
<li>
<p>XML parsing error by client.
<a href="https://github.com/hazelcast/hazelcast/pull/1818">#1818</a></p>
</li>
<li>
<p><code>ClientReAuthOperation</code> cannot return response without call ID.
<a href="https://github.com/hazelcast/hazelcast/issues/1816">#1816</a></p>
</li>
<li>
<p><code>MemberAttributeOperationType</code> should be introduced to remove the
dependency to <code>MapOperationType</code>.
<a href="https://github.com/hazelcast/hazelcast/pull/1811">#1811</a></p>
</li>
<li>
<p>Entry listener removal from MultiMap.
<a href="https://github.com/hazelcast/hazelcast/pull/1810">#1810</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p><strong>RC1 Fixes</strong></p>
</div>
<div class="paragraph">
<p>The following are the fixed issues for 3.2-RC1 (Release Candidate 1)
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><em>TransactionalMap</em> does not support <code>put(K,V,long,TimeUnit)</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1718">#1718</a></p>
</li>
<li>
<p>Entry is not removed from backup store when it is deleted using entry
processor. <a href="https://github.com/hazelcast/hazelcast/issues/1687">#1687</a></p>
</li>
<li>
<p>Possibility of losing data when MapStore takes a long time.
<a href="https://github.com/hazelcast/hazelcast/issues/1644">#1644</a></p>
</li>
<li>
<p>When eviction tasks are cancelled, <code>scheduledExecutorService</code> should
be cleaned. <a href="https://github.com/hazelcast/hazelcast/issues/1595">#1595</a></p>
</li>
<li>
<p>A fix related to <em>StoreAll</em> is needed in a write-behind scenario.
<a href="https://github.com/hazelcast/hazelcast/issues/1592">#1592</a></p>
</li>
<li>
<p>Update problem at map statistics.
<a href="https://github.com/hazelcast/hazelcast/issues/1576">#1576</a></p>
</li>
<li>
<p>Exception while executing script in OpenJDK 8.
<a href="https://github.com/hazelcast/hazelcast/issues/1518">#1518</a></p>
</li>
<li>
<p>StackOverflowError at <code>AndResultSet</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1501">#1501</a></p>
</li>
<li>
<p>Near Cache using <code>InMemoryFormat.OBJECT</code> also for local node.
<a href="https://github.com/hazelcast/hazelcast/issues/1438">#1438</a></p>
</li>
<li>
<p>Async entry processor is not deserializing the value before returning.
<a href="https://github.com/hazelcast/hazelcast/issues/1433">#1433</a></p>
</li>
<li>
<p>Distributed Executor; <em>Future Cancel</em> is not working.
<a href="https://github.com/hazelcast/hazelcast/issues/1394">#1394</a></p>
</li>
<li>
<p><code>HazelcastInstanceFactory$InstanceFuture.get()</code> never returns when
<code>newHazelcastInstance()</code> method fails/throws exception.
<a href="https://github.com/hazelcast/hazelcast/issues/1253">#1253</a></p>
</li>
<li>
<p>Changes for <em>Vertx</em> on Openshift.
<a href="https://github.com/hazelcast/hazelcast/pull/1176">#1176</a></p>
</li>
<li>
<p>Serialization should be performed after database interaction for
MapStore. <a href="https://github.com/hazelcast/hazelcast/issues/1115">#1115</a></p>
</li>
<li>
<p>System property related to chunk size is passed over in Hazelcast 3.1.
<a href="https://github.com/hazelcast/hazelcast/issues/1110">#1110</a></p>
</li>
<li>
<p>Map backups lack eviction of some specific data.
<a href="https://github.com/hazelcast/hazelcast/issues/1085">#1085</a></p>
</li>
<li>
<p><code>DelegatingFuture.isDone</code> always returns false until get is called.
<a href="https://github.com/hazelcast/hazelcast/issues/850">#850</a></p>
</li>
<li>
<p>Predicate support for entry processor.
<a href="https://github.com/hazelcast/hazelcast/issues/826">#826</a></p>
</li>
<li>
<p>Full replication of Maps should be performed.
<a href="https://github.com/hazelcast/hazelcast/issues/360">#360</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-32"><a class="anchor" href="#contributors-32"></a><a class="link" href="#contributors-32">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/jwcarman">James Carman</a></p>
</li>
<li>
<p><a href="https://github.com/ispringer">Ian Springer</a></p>
</li>
<li>
<p><a href="https://github.com/yhz">hogan</a></p>
</li>
<li>
<p><a href="https://github.com/nscavell">Nick Scavelli</a></p>
</li>
<li>
<p><a href="https://github.com/krolser">Aleh</a></p>
</li>
<li>
<p><a href="https://github.com/santoshbmath">Santosh</a></p>
</li>
<li>
<p><a href="https://github.com/oravecz">Jim Cook</a></p>
</li>
<li>
<p><a href="https://github.com/jagliot">Jagliot</a></p>
</li>
<li>
<p><a href="https://github.com/kjordan2001">kjordan2001</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-1-9"><a class="anchor" href="#3-1-9"></a><a class="link" href="#3-1-9">3.1.9</a></h3>
<div class="paragraph">
<p>The following is the enhancement performed for 3.1.9 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Exposed <code>TcpIpJoiner.MAX_PORT_TRIES</code> as a configurable system
property. <a href="https://github.com/hazelcast/hazelcast/pull/9734">#9734</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="3-1-8"><a class="anchor" href="#3-1-8"></a><a class="link" href="#3-1-8">3.1.8</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
3.1 and 3.1.x releases.</p>
</div>
<div class="sect3">
<h4 id="features-318"><a class="anchor" href="#features-318"></a><a class="link" href="#features-318">New Features</a></h4>
<div class="paragraph">
<p>This section provides the new features introduced with Hazelcast 3.1
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Elastic Memory (Enterprise Extensions Only) is now available.</p>
</li>
<li>
<p>Hazelcast Security is now available.</p>
</li>
<li>
<p>Hazelcast JCA integration is back.</p>
</li>
<li>
<p>Controlled Partitioning: Controlled Partitioning is the ability to
control the partition of certain DistributedObjects like the IQueue,
IAtomicLong or ILock. This will make collocating related data easier.
Hazelcast map also supports custom partitioning strategies. A
PartitioningStrategy can be defined in map configuration.</p>
</li>
<li>
<p>TransactionalMap now supports <code>keySet()</code>, <code>keySet(predicate)</code>,
<code>values()</code> and <code>values(predicate)</code> methods.</p>
</li>
<li>
<p>Eviction based on USED_HEAP_PERCENTAGE or USED_HEAP_SIZE now takes
account real heap memory size consumed by map.</p>
</li>
<li>
<p>SqlPredicate now supports ’' as escape character.</p>
</li>
<li>
<p>SqlPredicate now supports regular expressions using REGEX keyword. For
example, <code>map.values(new SqlPredicate("name REGEX .*earl$"))</code>.</p>
</li>
<li>
<p>Hazelcast queue now supports QueueStoreFactory that will be used to
create custom QueueStores for persistent queues. QueueStoreFactory is
similar to map’s MapStoreFactory.</p>
</li>
<li>
<p>TransactionalQueue now supports <code>peek()</code> and <code>peek(timeout, timeunit)</code>
methods.</p>
</li>
<li>
<p>Client now has SSL support.</p>
</li>
<li>
<p>Client also supports custom socket implementations using SocketFactory
API. A custom socket factory can be defined in ClientConfig.</p>
</li>
<li>
<p>Hazelcast IList and ISet now have their own configurations. They can
be configured using config API, XML and Spring.</p>
</li>
<li>
<p><code>HazelcastInstance.shutdown()</code> method added back.</p>
</li>
<li>
<p>OSGI compatibility is improved significantly.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-318"><a class="anchor" href="#fixes-318"></a><a class="link" href="#fixes-318">Fixes</a></h4>
<div class="paragraph">
<p>This section lists issues solved for 3.1 and 3.1.x releases.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>ClassCastException</code> when using near cache.
<a href="https://github.com/hazelcast/hazelcast/issues/1941">#1941</a></p>
</li>
<li>
<p>Hazelcast management console does not allow update of map
configuration in runtime.
<a href="https://github.com/hazelcast/hazelcast/issues/1898">#1898</a></p>
</li>
<li>
<p>MultiMap ConcurrentModificationExceptions.
<a href="https://github.com/hazelcast/hazelcast/issues/1882">#1882</a></p>
</li>
<li>
<p>Near Cache: Race Condition.
<a href="https://github.com/hazelcast/hazelcast/issues/1861">#1861</a></p>
</li>
<li>
<p>ClientReAuthOperation cannot return response without call ID.
<a href="https://github.com/hazelcast/hazelcast/issues/1816">#1816</a></p>
</li>
<li>
<p>REST put overrides TTL from the configuration.
<a href="https://github.com/hazelcast/hazelcast/issues/1783">#1783</a></p>
</li>
<li>
<p>Management Center usage should not trigger loading of map.
<a href="https://github.com/hazelcast/hazelcast/issues/1770">#1770</a></p>
</li>
<li>
<p>ResourceAdaptor fix to handle external HazelcastInstance breaking
scheme. <a href="https://github.com/hazelcast/hazelcast/issues/1727">#1727</a></p>
</li>
<li>
<p>There is no <code>executeOnAllKey</code> for IMap, the documentation should be
changed. <a href="https://github.com/hazelcast/hazelcast/issues/1711">#1711</a></p>
</li>
<li>
<p>Memory leak; <code>backupCalls</code> record is not removed if <code>Future.get()</code> is
not called during <code>IMap.putAsync()</code> or <code>IMap.removeAsync()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1693">#1693</a></p>
</li>
<li>
<p><code>ClassCastException</code> when removing from Multimap.
<a href="https://github.com/hazelcast/hazelcast/issues/1667">#1667</a></p>
</li>
<li>
<p>com.hazelcast.spi.exception.RetryableHazelcastException: Map is not
ready. <a href="https://github.com/hazelcast/hazelcast/issues/1593">#1593</a></p>
</li>
<li>
<p>Member join while loading persistent maps throws NPEs.
<a href="https://github.com/hazelcast/hazelcast/issues/1577">#1577</a></p>
</li>
<li>
<p>Near cache does not work properly for null values.
<a href="https://github.com/hazelcast/hazelcast/issues/1570">#1570</a></p>
</li>
<li>
<p>Memory Leak on operation timeout.
<a href="https://github.com/hazelcast/hazelcast/issues/1559">#1559</a></p>
</li>
<li>
<p>EOFException: Remote socket is closed.
<a href="https://github.com/hazelcast/hazelcast/issues/1551">#1551</a></p>
</li>
<li>
<p>Severe NullPointerException but then everything works fine.
<a href="https://github.com/hazelcast/hazelcast/issues/1548">#1548</a></p>
</li>
<li>
<p><code>IMap.putTransient(K,V)</code> method (without TTL) is missing.
<a href="https://github.com/hazelcast/hazelcast/issues/1526">#1526</a></p>
</li>
<li>
<p>Object is not an instance of declaring the class
com.hazelcast.query.impl.QueryException.
<a href="https://github.com/hazelcast/hazelcast/issues/1503">#1503</a></p>
</li>
<li>
<p>Setting socket timeout, Hazelcast client will throw
SocketTimeoutException.
<a href="https://github.com/hazelcast/hazelcast/issues/1435">#1435</a></p>
</li>
<li>
<p><code>QueueStore.store(Long, Object)</code> is called multiple times from
<code>TransactionalQueue.offer</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1412">#1412</a></p>
</li>
<li>
<p>Warning: No transaction item for itemId: .
<a href="https://github.com/hazelcast/hazelcast/issues/1393">#1393</a></p>
</li>
<li>
<p>StackOverflow in <code>AndResultSet</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1349">#1349</a></p>
</li>
<li>
<p><code>maxIdleSeconds</code> is set to DEFAULT_TTL_SECONDS in
<code>com.hazelcast.config.MapConfig</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1308">#1308</a></p>
</li>
<li>
<p>Serializer implementation registration with Spring config fails.
<a href="https://github.com/hazelcast/hazelcast/issues/1294">#1294</a></p>
</li>
<li>
<p><code>ReadBackupData</code> on Map exposes internally stored value.
<a href="https://github.com/hazelcast/hazelcast/issues/1292">#1292</a></p>
</li>
<li>
<p>Multimap: Lock is not owned by the transaction.
<a href="https://github.com/hazelcast/hazelcast/issues/1276">#1276</a></p>
</li>
<li>
<p>Java deserialization of non-static inner classes fails.
<a href="https://github.com/hazelcast/hazelcast/issues/1265">#1265</a></p>
</li>
<li>
<p>HazelcastInstance is not injected into MapInterceptor when
HazelcastInstanceAware is implemented.
<a href="https://github.com/hazelcast/hazelcast/issues/1233">#1233</a></p>
</li>
<li>
<p>Remove <code>compare</code> optimization from map put.
<a href="https://github.com/hazelcast/hazelcast/issues/1231">#1231</a></p>
</li>
<li>
<p>Unneeded deserialization in EntryOperation.
<a href="https://github.com/hazelcast/hazelcast/issues/1182">#1182</a></p>
</li>
<li>
<p>Adding an InitialMembershipListener to ClientConfig using
<code>ClientConfig.addListenerConfig</code> throws NullPointerException.
<a href="https://github.com/hazelcast/hazelcast/issues/1181">#1181</a></p>
</li>
<li>
<p>Insufficient calculation of next key/value when doing a restore of
message queue from database.
<a href="https://github.com/hazelcast/hazelcast/issues/1165">#1165</a></p>
</li>
<li>
<p>Case insensitivity of configurations in XML.
<a href="https://github.com/hazelcast/hazelcast/issues/1152">#1152</a></p>
</li>
<li>
<p>The scheme <code>hazelcast-spring3.1.xsd</code> throws SAXParseException when
<code>hz:interfaces</code> have multiple <code>hz:interface</code> elements.
<a href="https://github.com/hazelcast/hazelcast/issues/1145">#1145</a></p>
</li>
<li>
<p>Bundle start fails due to <code>OSGiScriptEngineManager</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1136">#1136</a></p>
</li>
<li>
<p>Apparent memory leak when using near cache.
<a href="https://github.com/hazelcast/hazelcast/issues/1087">#1087</a></p>
</li>
<li>
<p>Semaphore can be initialized multiple times if permit-count = 0.
<a href="https://github.com/hazelcast/hazelcast/issues/1080">#1080</a></p>
</li>
<li>
<p>Exception when running continuous query. And non-existent key is
deleted under transaction.
<a href="https://github.com/hazelcast/hazelcast/issues/1076">#1076</a></p>
</li>
<li>
<p>Race condition between first map operation and re-populating a map
after a cluster restart.
<a href="https://github.com/hazelcast/hazelcast/issues/1070">#1070</a></p>
</li>
<li>
<p>Eviction tasks should be cancelled on <code>remove()</code>, <code>evict()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1068">#1068</a></p>
</li>
<li>
<p>Stale cache issues when using <code>HazelcastLocalCacheRegionFactory</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/1039">#1039</a></p>
</li>
<li>
<p>When multiple nodes start simultaneously, post join process duplicates
some event registrations and causes warning logs on each publish.
<a href="https://github.com/hazelcast/hazelcast/issues/1024">#1024</a></p>
</li>
<li>
<p>Multimap entry listener is called twice.
<a href="https://github.com/hazelcast/hazelcast/issues/993">#993</a></p>
</li>
<li>
<p>Clear logic on <code>ByteArrayObjectDataOutput</code> can create memory leak with
large objects. <a href="https://github.com/hazelcast/hazelcast/issues/989">#989</a></p>
</li>
<li>
<p>TransactionException: Lock is not owned by the transaction.
<a href="https://github.com/hazelcast/hazelcast/issues/988">#988</a></p>
</li>
<li>
<p>Spring schema declaration is missing.
<a href="https://github.com/hazelcast/hazelcast/issues/982">#982</a></p>
</li>
<li>
<p>Null object indexing exception.
<a href="https://github.com/hazelcast/hazelcast/issues/978">#978</a></p>
</li>
<li>
<p>Entries not changed by an EntryProcessor should not render an
EntryListener event.
<a href="https://github.com/hazelcast/hazelcast/issues/969">#969</a></p>
</li>
<li>
<p>Unlock parameter in TxnSetOperation backup operation is not
serialized. <a href="https://github.com/hazelcast/hazelcast/issues/956">#956</a></p>
</li>
<li>
<p>PartitioningStrategy is not set in HazelcastClient.
<a href="https://github.com/hazelcast/hazelcast/issues/923">#923</a></p>
</li>
<li>
<p>Enhancement request: Consider extending SqlPredicate to allow using
regexes. <a href="https://github.com/hazelcast/hazelcast/issues/914">#914</a></p>
</li>
<li>
<p>Map <code>getAll()</code> is blocked with ``Map is not ready exception''.
<a href="https://github.com/hazelcast/hazelcast/issues/887">#887</a></p>
</li>
<li>
<p>QueueStoreConfig needs a factory to support wildcard creation.
<a href="https://github.com/hazelcast/hazelcast/issues/884">#884</a></p>
</li>
<li>
<p>Data is lost when transaction manager node terminates/crashes without
preparing transaction.
<a href="https://github.com/hazelcast/hazelcast/issues/863">#863</a></p>
</li>
<li>
<p>Make <code>cache-null-value-seconds</code> customizable.
<a href="https://github.com/hazelcast/hazelcast/issues/806">#806</a></p>
</li>
<li>
<p>Reintroduce the <code>Instanceof</code> predicate.
<a href="https://github.com/hazelcast/hazelcast/issues/790">#790</a></p>
</li>
<li>
<p>Add <code>IMap.addEntryListener()</code> without key (continuous query).
<a href="https://github.com/hazelcast/hazelcast/issues/710">#710</a></p>
</li>
<li>
<p>The calculation <code>used_heap_percentage</code> should take backups into
account. <a href="https://github.com/hazelcast/hazelcast/issues/403">#403</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="3-0-3"><a class="anchor" href="#3-0-3"></a><a class="link" href="#3-0-3">3.0.3</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
3.0 and 3.0.x releases.</p>
</div>
<div class="sect3">
<h4 id="features-303"><a class="anchor" href="#features-303"></a><a class="link" href="#features-303">New Features</a></h4>
<div class="paragraph">
<p>This section provides the new features introduced with Hazelcast 3.0
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Multi-thread execution: Operations are now executed by multiple
threads (by factor of processor cores). With Hazelcast 2, there was a
only single thread.</p>
</li>
<li>
<p>SPI: Service Programming Interface for developing new partitioned
services, data structures. All Hazelcast data structures like Map, Queue
are reimplemented with SPI.</p>
</li>
<li>
<p>IdentifiedDataSerializable: A slightly optimized version of
DataSerializable that does not use class name and reflection for
de-serialization.</p>
</li>
<li>
<p>Portable Serialization: Another Serialization interface that does not
use reflection and can navigate through binary data and
fetch/query/index individual field without having any reflection or
whole object de-serialization.</p>
</li>
<li>
<p>Custom Serialization: Support for custom serialization that can be
plugged into Hazelcast.</p>
</li>
<li>
<p>Entry Processor: Executing an EntryProcessor on the key or on all
entries. Hazelcast implicitly locks the entree and guarantees no
migration while the execution of the Processor.</p>
</li>
<li>
<p>In-Memory Format: Support for storing entries in Binary, Object and
Cached format.</p>
</li>
<li>
<p>Continuous Query: Support for listeners that register with a query and
are notified when there is a change on the Map that matches the Query.</p>
</li>
<li>
<p>Interceptors: Ability to intercept the Map operation before/after it
is actually executed.</p>
</li>
<li>
<p>Lazy Indexing:Ability to index existing items in the map. No need to
add indexes at the very beginning.</p>
</li>
<li>
<p>Queue: No more dependency on the distributed map</p>
</li>
<li>
<p>Queue: Scales really well as you have thousands of separate queues.</p>
</li>
<li>
<p>Queue: Persistence Support for persistence with QueueStore.</p>
</li>
<li>
<p>Multimap: Values can be Set/List/Queue.</p>
</li>
<li>
<p>Topic: Support for global ordering where all Nodes receive all
messages in the same order.</p>
</li>
<li>
<p>Distributed Transaction: Support for both 1-phase (local) and 2 phase
transactions with a totally new API.</p>
</li>
<li>
<p>New Binary Protocol: A new binary protocol based on portable
serialization. The same protocol is used for Java/C/C# and other
clients.</p>
</li>
<li>
<p>Smart client: Support for dummy and smart client. A dummy client will
maintain a connection to only one member, whereas the smart client can
route the operations to the node that owns the data.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-303"><a class="anchor" href="#fixes-303"></a><a class="link" href="#fixes-303">Fixes</a></h4>
<div class="paragraph">
<p>This section lists issues solved for 3.0 and 3.0.x releases.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>A class cannot be LifecycleListener and MigrationListener at the same
time. <a href="https://github.com/hazelcast/hazelcast/issues/970">#970</a></p>
</li>
<li>
<p>EntryProcessor does not fire entry events.
<a href="https://github.com/hazelcast/hazelcast/issues/950">#950</a></p>
</li>
<li>
<p><code>IMap.localKeySet()</code> is very slow after upgrade to 3.0.
<a href="https://github.com/hazelcast/hazelcast/issues/946">#946</a></p>
</li>
<li>
<p>Eviction logic error for <code>USED_HEAP_PERCENTAGE</code> and <code>USED_HEAP_SIZE</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/891">#891</a></p>
</li>
<li>
<p>Failed to execute SqlPredicate with LIKE and OR keywords on the same
field of the class.
<a href="https://github.com/hazelcast/hazelcast/issues/885">#885</a></p>
</li>
<li>
<p>Infinite loop in native client when cluster is gone.
<a href="https://github.com/hazelcast/hazelcast/issues/821">#821</a></p>
</li>
<li>
<p>TransactionalMap: DistributedObjectListener is not working.
<a href="https://github.com/hazelcast/hazelcast/issues/812">#812</a></p>
</li>
<li>
<p>Could not find PortableFactory for factoryId: -3.
<a href="https://github.com/hazelcast/hazelcast/issues/800">#800</a></p>
</li>
<li>
<p>Eviction occurs when it is not expected to occur.
<a href="https://github.com/hazelcast/hazelcast/issues/776">#776</a></p>
</li>
<li>
<p>Possible dead-lock while updating an entry which loaded by map-loader.
<a href="https://github.com/hazelcast/hazelcast/issues/768">#768</a></p>
</li>
<li>
<p><code>IMap.destroy()</code> clears map instead of destroy.
<a href="https://github.com/hazelcast/hazelcast/issues/764">#764</a></p>
</li>
<li>
<p><code>IMap.destroy()</code> throws an exception on client.
<a href="https://github.com/hazelcast/hazelcast/issues/726">#726</a></p>
</li>
<li>
<p>Client replace method issue.
<a href="https://github.com/hazelcast/hazelcast/issues/724">#724</a></p>
</li>
<li>
<p>Classloader issue in deserialization.
<a href="https://github.com/hazelcast/hazelcast/issues/723">#723</a></p>
</li>
<li>
<p>JMX preDeregister of some beans throws HazelcastIsNotActiveException
during <code>shutdownAll()</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/713">#713</a></p>
</li>
<li>
<p>Optional sequencing support for Hazelcast write-behind implementation
is needed. <a href="https://github.com/hazelcast/hazelcast/issues/712">#712</a></p>
</li>
<li>
<p>ManagementService.destroy fails to find HazelcastMBean on shutdown.
<a href="https://github.com/hazelcast/hazelcast/issues/683">#683</a></p>
</li>
<li>
<p>Client <code>getDistributedObject()</code> does not work.
<a href="https://github.com/hazelcast/hazelcast/issues/678">#678</a></p>
</li>
<li>
<p>Spring ManagedContext does not run on the local node when a task is
executed. <a href="https://github.com/hazelcast/hazelcast/issues/659">#659</a></p>
</li>
<li>
<p>MemberLeftException during SqlPredicate search.
<a href="https://github.com/hazelcast/hazelcast/issues/654">#654</a></p>
</li>
<li>
<p>NearCacheConfig: maxSize = 0 is no longer interpreted as
<code>Integer.MAX_VALUE</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/650">#650</a></p>
</li>
<li>
<p><code>statistics-enabled</code> is missing for most items in the XSD scheme.
<a href="https://github.com/hazelcast/hazelcast/issues/642">#642</a></p>
</li>
<li>
<p>Could not find PortableFactory for factoryId: 1095521605 on
SqlPredicate query.
<a href="https://github.com/hazelcast/hazelcast/issues/617">#617</a></p>
</li>
<li>
<p><code>Map.containsKey()</code> should delay eviction.
<a href="https://github.com/hazelcast/hazelcast/issues/614">#614</a></p>
</li>
<li>
<p>Error when serializing portable nested inside other types: Could not
find PortableFactory for factoryId: 0.
<a href="https://github.com/hazelcast/hazelcast/issues/600">#600</a></p>
</li>
<li>
<p>Client related configuration improvements.
<a href="https://github.com/hazelcast/hazelcast/issues/599">#599</a></p>
</li>
<li>
<p>Index on <code>enum</code> properties does not work.
<a href="https://github.com/hazelcast/hazelcast/issues/597">#597</a></p>
</li>
<li>
<p>Executing Query operation with a heavy CRUD load throws an
IllegalArgumentException.
<a href="https://github.com/hazelcast/hazelcast/issues/596">#596</a></p>
</li>
<li>
<p><code>Map.set()</code> always calls the <code>onAdded</code> entry event.
<a href="https://github.com/hazelcast/hazelcast/issues/589">#589</a></p>
</li>
<li>
<p>Client throws `Could not register listener' often - Near Cache entries
get never invalidated after.
<a href="https://github.com/hazelcast/hazelcast/issues/584">#584</a></p>
</li>
<li>
<p>Unexpected authentication exception.
<a href="https://github.com/hazelcast/hazelcast/issues/576">#576</a></p>
</li>
<li>
<p>Map <code>clear</code> does not call MapStore.
<a href="https://github.com/hazelcast/hazelcast/issues/572">#572</a></p>
</li>
<li>
<p>Transactional collections should check the transaction state to
validate proper access.
<a href="https://github.com/hazelcast/hazelcast/issues/568">#568</a></p>
</li>
<li>
<p>Client threads are not destroyed on authentication failures.
<a href="https://github.com/hazelcast/hazelcast/issues/555">#555</a></p>
</li>
<li>
<p>Map index from configuration is not working.
<a href="https://github.com/hazelcast/hazelcast/issues/553">#553</a></p>
</li>
<li>
<p>Client disconnects and never tries to reconnect.
<a href="https://github.com/hazelcast/hazelcast/issues/538">#538</a></p>
</li>
<li>
<p>Map local entry listener gives no Value on <code>entryEvicted</code>.
<a href="https://github.com/hazelcast/hazelcast/issues/537">#537</a></p>
</li>
<li>
<p>The method <code>map.getAll()</code> is not working if entry does not exist via
Client. <a href="https://github.com/hazelcast/hazelcast/issues/535">#535</a></p>
</li>
<li>
<p>EC2 Auto discovery bug: Instances do not see each other.
<a href="https://github.com/hazelcast/hazelcast/issues/516">#516</a></p>
</li>
<li>
<p>Custom types (other than primitives, string, date, enum, etc) can not
be queried. <a href="https://github.com/hazelcast/hazelcast/issues/503">#503</a></p>
</li>
<li>
<p>OOME is thrown when queues are not explicitly destroyed.
<a href="https://github.com/hazelcast/hazelcast/issues/417">#417</a></p>
</li>
<li>
<p>The method <code>loadAll</code> is called redundantly on a new node joining the
cluster. <a href="https://github.com/hazelcast/hazelcast/issues/341">#341</a></p>
</li>
<li>
<p>Support for Hibernate 4.0 cache is needed.
<a href="https://github.com/hazelcast/hazelcast/issues/72">#72</a></p>
</li>
<li>
<p>Add a functionality that performs entry processings.
<a href="https://github.com/hazelcast/hazelcast/issues/71">#71</a></p>
</li>
<li>
<p>Support for JVM system property reference in Hazelcast XML is needed.
<a href="https://github.com/hazelcast/hazelcast/issues/59">#59</a></p>
</li>
<li>
<p>Support <code>invalidation-only</code> 2nd level cache for Hibernate.
<a href="https://github.com/hazelcast/hazelcast/issues/57">#57</a></p>
</li>
<li>
<p>Hazelcast resource adapter does not work on WebSphere 6.1/7.
<a href="https://github.com/hazelcast/hazelcast/issues/37">#37</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-30"><a class="anchor" href="#contributors-30"></a><a class="link" href="#contributors-30">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/rmoquin">Ryan Moquin</a></p>
</li>
<li>
<p><a href="https://github.com/vcottagiri">Varghese Cottagiri</a></p>
</li>
<li>
<p><a href="https://github.com/notz">Gernot Pansy</a></p>
</li>
<li>
<p><a href="https://github.com/Shohou">Dmitry Shohov</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="2-6-9"><a class="anchor" href="#2-6-9"></a><a class="link" href="#2-6-9">2.6.9</a></h3>
<div class="paragraph">
<p>The following is the fixed issue for 2.6.9 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Hazelcast cannot match hostnames when wildcards are used in <code>interfaces</code> configuration element. <a href="https://github.com/hazelcast/hazelcast/issues/2396">#2396</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="2-6-8"><a class="anchor" href="#2-6-8"></a><a class="link" href="#2-6-8">2.6.8</a></h3>
<div class="paragraph">
<p>The following is the fixed issue for 2.6.8 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>OperationTimeoutException</code>: [CONCURRENT_MAP_SET] Redo threshold[90]
exceeded! Last redo cause: REDO_MAP_OVER_CAPACITY. <a href="https://github.com/hazelcast/hazelcast/issues/1685">#1685</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="2-6-6"><a class="anchor" href="#2-6-6"></a><a class="link" href="#2-6-6">2.6.6</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 2.6.6 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Hazelcast 2.6.5 throws <code>NullPointerException</code> if the method
<code>MapStore.load()</code> returns null during <code>IMap.getAll()</code> execution. <a href="https://github.com/hazelcast/hazelcast/issues/1605">#1605</a></p>
</li>
<li>
<p>In Hazelcast 2.x branch, Hazelcast instance is shutdown but exception
is not logged. <a href="https://github.com/hazelcast/hazelcast/issues/1488">#1488</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="2-6-3"><a class="anchor" href="#2-6-3"></a><a class="link" href="#2-6-3">2.6.3</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 2.6.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Memcache client content in the Reference Manual needs to be improved .
<a href="https://github.com/hazelcast/hazelcast/issues/1047">#1047</a></p>
</li>
<li>
<p>Hazelcast Hibernate <code>pom</code> is using a retired Maven repo. <a href="https://github.com/hazelcast/hazelcast/issues/831">#831</a></p>
</li>
<li>
<p>"Marked for removal" mechanism should be more clarified. <a href="https://github.com/hazelcast/hazelcast/issues/792">#792</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="2-6-2"><a class="anchor" href="#2-6-2"></a><a class="link" href="#2-6-2">2.6.2</a></h3>
<div class="paragraph">
<p>The following are the fixed issues for 2.6.2 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Client Listener: the <code>Client</code> argument has null <code>Socketaddress</code> for
<code>ClientDisconnected</code> listener. <a href="https://github.com/hazelcast/hazelcast/issues/756">#756</a></p>
</li>
<li>
<p>Entries put by the method <code>IMap.putAll</code> were never evicted from the
map with the TTL configured. <a href="https://github.com/hazelcast/hazelcast/issues/670">#670</a></p>
</li>
<li>
<p>The Java client is initialized with two cluster members. After killing
one member in the cluster where it is connected, the client is unable to
reconnect. <a href="https://github.com/hazelcast/hazelcast/issues/653">#653</a></p>
</li>
<li>
<p>Put operation after a missed get operation in a transaction does not
have any effect. <a href="https://github.com/hazelcast/hazelcast/issues/644">#644</a></p>
</li>
<li>
<p>Near cache functionality does not work for Java client. <code>MapConfig</code>
always returns the generic map name since in the client, the client
prefix is added to map’s name. <a href="https://github.com/hazelcast/hazelcast/issues/620">#620</a></p>
</li>
</ul>
</div>
<div class="sect3">
<h4 id="contributors-262"><a class="anchor" href="#contributors-262"></a><a class="link" href="#contributors-262">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/notz">Gernot Pansy</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="2-6-1"><a class="anchor" href="#2-6-1"></a><a class="link" href="#2-6-1">2.6.1</a></h3>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.6.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>The method <code>set(Key, Value, 0, Timeunit)</code> applies the configured TTL
values where it should cancel eviction. Also, the method
<code>set(Key, Value)</code> should apply the inherited TTL if exists. <a href="https://github.com/hazelcast/hazelcast/issues/585">#585</a></p>
</li>
<li>
<p>Operations like <code>contains()</code> should use a specific executor service.
Calling the default executor service may cause a deadlock. <a href="https://github.com/hazelcast/hazelcast/issues/579">#579</a></p>
</li>
<li>
<p>Empty array for the predicate <code>in</code> throws exception. <a href="https://github.com/hazelcast/hazelcast/issues/573">#573</a></p>
</li>
<li>
<p>The methods <code>ILock.destroy()</code> and <code>ISemaphore.destroy()</code> throw
exceptions on Hazelcast 2.5. <a href="https://github.com/hazelcast/hazelcast/issues/566">#566</a></p>
</li>
<li>
<p><code>NullPointerException</code> in <code>com.hazelcast.nio.ConnectionManager</code> in
Hazelcast 2.5. <a href="https://github.com/hazelcast/hazelcast/issues/530">#530</a></p>
</li>
<li>
<p>Hazelcast instance does not start with TCP configuration in Hazelcast
2.5 when the hosts are not reachable. <a href="https://github.com/hazelcast/hazelcast/issues/523">#523</a></p>
</li>
<li>
<p>Hazelcast source archives in Maven central repository does not contain
the Java source files but the class files. <a href="https://github.com/hazelcast/hazelcast/issues/514">#514</a></p>
</li>
<li>
<p>There is an unexpected store call behavior in Hazelcast 2.6. Every
time when the method <code>get()</code> is used in a transaction and when the
method <code>commit()</code> is called, it throws ``Duplicated key order_id''
exception. <a href="https://github.com/hazelcast/hazelcast/issues/506">#506</a></p>
</li>
<li>
<p>When the method <code>getInstances()</code> on HazelcastInstance is called
(acquired via <code>HazelcastClient.newHazelcastClient(clientConfig)</code>), the
collection is retrieved. After some time, <code>NullPointerException</code> is
thrown when the same method is called. <a href="https://github.com/hazelcast/hazelcast/issues/478">#478</a></p>
</li>
<li>
<p>There are some formatting problems when using SQL predicates with
date. <a href="https://github.com/hazelcast/hazelcast/issues/473">#473</a></p>
</li>
<li>
<p>There is a memory leak in the member when clients are connected. An
<code>OutofMemoryException</code> is thrown related to a client authentication
failure. <a href="https://github.com/hazelcast/hazelcast/issues/450">#450</a></p>
</li>
<li>
<p>Hazelcast client’s <code>putAll()</code> method throws <code>NullPointerException</code>
when called with an empty map. <a href="https://github.com/hazelcast/hazelcast/issues/397">#397</a></p>
</li>
<li>
<p>The <code>InputStream</code> in the <code>XmlConfigBuilder</code> can never be closed. If
the constructor which provides an XML file is used, it creates a new
<code>FileInputStream</code>. There is no ability to close this input stream after
it is created. <a href="https://github.com/hazelcast/hazelcast/issues/390">#390</a></p>
</li>
<li>
<p>The heartbeat timer for Hazelcast client does not run again after a
<code>NullPointerException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/382">#382</a></p>
</li>
<li>
<p>The queue <code>SysmteLogService.joinLogs</code> holds some data and causes
memory consumption. <a href="https://github.com/hazelcast/hazelcast/issues/325">#325</a></p>
</li>
<li>
<p>Doing a read of a value not modified in a transaction causes the
listener to fire an update for that entry. <a href="https://github.com/hazelcast/hazelcast/issues/311">#311</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="2-6"><a class="anchor" href="#2-6"></a><a class="link" href="#2-6">2.6</a></h3>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.6 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Issues with Spring configuration and merge policies. <a href="https://github.com/hazelcast/hazelcast/issues/488">#488</a></p>
</li>
<li>
<p>Trying to create a configuration object by API, serializing and
deserializing the objects (by Hazelcast builder), due to an error of
PartitionGroup, <code>RuntimeException</code> is thrown. If set by API, it works.
<a href="https://github.com/hazelcast/hazelcast/issues/487">#487</a></p>
</li>
<li>
<p>OSGi: The manifest data in <code>hazelcast-all.jar</code> for 2.5.1 is not
correct. <a href="https://github.com/hazelcast/hazelcast/issues/484">#484</a></p>
</li>
<li>
<p>Consistency of the set of members in the cluster should be guaranteed.
<a href="https://github.com/hazelcast/hazelcast/issues/477">#477</a></p>
</li>
<li>
<p>Hazelcast IMap’s `containsKey()`method does not reset the idle
timeout. <a href="https://github.com/hazelcast/hazelcast/issues/472">#472</a></p>
</li>
<li>
<p><code>@SpringAware</code> annotation leads to memory leak when using Hazelcast
distributed executor service. <a href="https://github.com/hazelcast/hazelcast/issues/470">#470</a></p>
</li>
</ul>
</div>
<div class="sect3">
<h4 id="contributors-26"><a class="anchor" href="#contributors-26"></a><a class="link" href="#contributors-26">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/DavidJohnHarrison">David John Harrison</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="2-5-1"><a class="anchor" href="#2-5-1"></a><a class="link" href="#2-5-1">2.5.1</a></h3>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.5.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Deadlock happens when Hazelcast client is shut down. <a href="https://github.com/hazelcast/hazelcast/issues/466">#466</a></p>
</li>
<li>
<p>There is a data inconsistency and loss following the
<code>ClassCastException: CONCURRENT_MAP_REPLACE_IF_SAME</code>. <a href="https://github.com/hazelcast/hazelcast/issues/462">#462</a></p>
</li>
<li>
<p>Put operations with zero TTL does not prevent the eviction. <a href="https://github.com/hazelcast/hazelcast/issues/455">#455</a></p>
</li>
<li>
<p><code>NullPointerException</code> is thrown at
<code>com.hazelcast.query.MapIndexService.remove</code> during
CONCURRENT_MAP_REMOVE operation. <a href="https://github.com/hazelcast/hazelcast/issues/454">#454</a></p>
</li>
<li>
<p>The exception <code>Failed migrating from Member</code> is thrown when two
clients are started in Eclipse and one is stopped before it is
completely initialized. <a href="https://github.com/hazelcast/hazelcast/issues/452">#452</a></p>
</li>
<li>
<p>The method <code>IList.destroy()</code> does not empty the list. <a href="https://github.com/hazelcast/hazelcast/issues/449">#449</a></p>
</li>
<li>
<p>The package <code>hazelcast-all.jar</code> should build its manifest dynamically.
<a href="https://github.com/hazelcast/hazelcast/issues/448">#448</a></p>
</li>
<li>
<p>The package <code>hazelcast-client.jar</code> does not deploy as OSGi bundle in
JBoss7. <a href="https://github.com/hazelcast/hazelcast/issues/447">#447</a></p>
</li>
<li>
<p>The package <code>hazelcast-wm.jar</code> should not require <code>servlet-api</code> v3.0.
<a href="https://github.com/hazelcast/hazelcast/issues/432">#432</a></p>
</li>
<li>
<p><code>NullPointerException</code> is thrown when trying to run the method
<code>clear()</code> on an empty distributed set when migrating from Hazelcast
2.1.2 to 2.4 and 2.5 <a href="https://github.com/hazelcast/hazelcast/issues/430">#430</a></p>
</li>
<li>
<p>The method <code>getOldValue()</code> consistently returns wrong results for
<code>entryUpdated</code> listener notifications after the <code>replace()</code> operation.
<a href="https://github.com/hazelcast/hazelcast/issues/418">#418</a></p>
</li>
<li>
<p>In the Hazelcast configuration schema XSD, the <code>tcp-ip</code> and <code>aws</code>
elements do not have <code>conn-timeout-seconds</code> sub-element. <a href="https://github.com/hazelcast/hazelcast/issues/410">#410</a></p>
</li>
<li>
<p>It would be nice if the <code>hazelcast.config</code> option can be used in
combination with the classpath. <a href="https://github.com/hazelcast/hazelcast/issues/408">#408</a></p>
</li>
<li>
<p>Deadlock happens when adding an index to a map that is not empty.
<a href="https://github.com/hazelcast/hazelcast/issues/310">#310</a></p>
</li>
<li>
<p>When custom loader is used with write-behind persistence mode, every
time <code>store()</code> is called in loader and then <code>remove()</code> is called on
locked map, value for the key is read from the store and not from map.
Consequently, put/set/update is overridden and data is lost. <a href="https://github.com/hazelcast/hazelcast/issues/187">#187</a></p>
</li>
</ul>
</div>
<div class="sect3">
<h4 id="contributors-251"><a class="anchor" href="#contributors-251"></a><a class="link" href="#contributors-251">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/pablotdl">Pablo S</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="2-5"><a class="anchor" href="#2-5"></a><a class="link" href="#2-5">2.5</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
2.5 release.</p>
</div>
<div class="sect3">
<h4 id="features-25"><a class="anchor" href="#features-25"></a><a class="link" href="#features-25">New Features</a></h4>
<div class="paragraph">
<p>The following are the new features introduced with 2.5 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Added near cache support for Java Client.</p>
</li>
<li>
<p>Management Center alert system can now receive alerts based on custom
filters.</p>
</li>
<li>
<p>Management Center has now better support for Hazelcast cluster running
in OSGI environment.</p>
</li>
<li>
<p>Nodes can be easily shutdown or restarted using Management Center
interface.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-25"><a class="anchor" href="#fixes-25"></a><a class="link" href="#fixes-25">Fixes</a></h4>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.5 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Management Center does not respond for the maps with names having
underscore characters. <a href="https://github.com/hazelcast/hazelcast/issues/394">#394</a></p>
</li>
<li>
<p>MultiTask operation returns <code>Constants$Object$6</code> instead of a map.
<a href="https://github.com/hazelcast/hazelcast/issues/392">#392</a></p>
</li>
<li>
<p>In the method <code>forceUnlock()</code>, local lock is not removed. <a href="https://github.com/hazelcast/hazelcast/issues/386">#386</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="2-4-1"><a class="anchor" href="#2-4-1"></a><a class="link" href="#2-4-1">2.4.1</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
2.4.1 release.</p>
</div>
<div class="sect3">
<h4 id="features-241"><a class="anchor" href="#features-241"></a><a class="link" href="#features-241">New Features</a></h4>
<div class="paragraph">
<p>The following are the new features introduced with 2.4.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Added Hibernate 2nd level cache local/invalidation mode.</p>
</li>
<li>
<p>Added quick clear feature for maps.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-241"><a class="anchor" href="#fixes-241"></a><a class="link" href="#fixes-241">Fixes</a></h4>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.4.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>After a split-brain syndrome, states sent by a non-member should be
ignored. <a href="https://github.com/hazelcast/hazelcast/issues/374">#374</a></p>
</li>
<li>
<p>Indexing: Negative double values comparison causes problems in SQL
predicate. <a href="https://github.com/hazelcast/hazelcast/issues/368">#368</a></p>
</li>
<li>
<p>Query on Hazelcast IMap with indexes returns stale data. <a href="https://github.com/hazelcast/hazelcast/issues/359">#359</a></p>
</li>
<li>
<p>By default, the method <code>map.clear()</code> clears the map entry by entry
since the entries should be checked if they have a related lock, should
be persisted, etc. If you do not use map store and can assume that there
is no locked entries, then there should be an option to clear the map
directly. <a href="https://github.com/hazelcast/hazelcast/issues/356">#356</a></p>
</li>
<li>
<p>System logs should be optional. <a href="https://github.com/hazelcast/hazelcast/issues/351">#351</a></p>
</li>
<li>
<p>Management center should show the Hazelcast version. <a href="https://github.com/hazelcast/hazelcast/issues/349">#349</a></p>
</li>
<li>
<p><code>UnsupportedOperationException</code> is thrown when the method
<code>getConfig()</code> is called during the startup of the web application. Used
versions are Hazelcast 2.4 and Hibernate 3.6.6. <a href="https://github.com/hazelcast/hazelcast/issues/339">#339</a></p>
</li>
<li>
<p>Documentation is wrong. Hazelcast supports <code>REPEATABLE_READ</code> instead
of <code>READ_COMMITTED</code>. <a href="https://github.com/hazelcast/hazelcast/issues/337">#337</a></p>
</li>
<li>
<p>When you need a lite member, since it cannot be specified in the
configuration file, you need to do the whole loading mechanism yourself. <a href="https://github.com/hazelcast/hazelcast/issues/333">#333</a></p>
</li>
<li>
<p>In the local map statistics, currently there is only <code>getHits()</code>.
There should be statistics for misses (get requests which return null)
to see hit/miss ratio. <a href="https://github.com/hazelcast/hazelcast/issues/328">#328</a></p>
</li>
<li>
<p>When Hazelcast OSGi bundle is used in Glassfish 3.1.2,
<code>ClassNotFoundException</code> is thrown. <a href="https://github.com/hazelcast/hazelcast/issues/322">#322</a></p>
</li>
<li>
<p>The method <code>MapConfig.toString()</code> should report <code>mapIndexConfig</code> too. <a href="https://github.com/hazelcast/hazelcast/issues/321">#321</a></p>
</li>
<li>
<p>When the connection between the client and member is lost, the client
does not notice it and tries to send the data for a very long time and
it does not shut down. <a href="https://github.com/hazelcast/hazelcast/issues/315">#315</a></p>
</li>
<li>
<p>Hazelcast tends to consume large amounts of memory in
<code>com.hazelcast.nio.Packet</code> instances. <a href="https://github.com/hazelcast/hazelcast/issues/312">#312</a></p>
</li>
<li>
<p>Map index entries are not deleted upon migration. When using SQL
predicate in the method <code>localKeySet()</code>, the same key can be retrieved
on different nodes. <a href="https://github.com/hazelcast/hazelcast/issues/308">#308</a></p>
</li>
<li>
<p>Hazelcast IMap entries are evicted even they are touched by the method
<code>put()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/466">#466</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="2-4"><a class="anchor" href="#2-4"></a><a class="link" href="#2-4">2.4</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
2.4 release.</p>
</div>
<div class="sect3">
<h4 id="features-24"><a class="anchor" href="#features-24"></a><a class="link" href="#features-24">New Features</a></h4>
<div class="paragraph">
<p>The following are the new features introduced with 2.4 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Client threads does not have fixed size anymore, now it uses internal
Hazelcast cached thread pool.</p>
</li>
<li>
<p>Added ability to restrict outbound ports that Hazelcast uses to
connect to other nodes.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-24"><a class="anchor" href="#fixes-24"></a><a class="link" href="#fixes-24">Fixes</a></h4>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.4 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Hazelcast Management Center’s <code>Configuration has been successfully
updated</code> notification is never removed. <a href="https://github.com/hazelcast/hazelcast/issues/301">#301</a></p>
</li>
<li>
<p>Map maximum size does not take into account that some cluster members
are lite members and cannot hold any data. Thus, the map becomes smaller
than the size it was configured. <a href="https://github.com/hazelcast/hazelcast/issues/292">#292</a></p>
</li>
<li>
<p>The method <code>map.containsKey()</code> does not reset the idle time counter. <a href="https://github.com/hazelcast/hazelcast/issues/288">#288</a></p>
</li>
<li>
<p>In Hazelcast 2.3.1, the property <code>hazelcast.local.localAddress</code> is
used only when provided directly from <code>System.properties</code>. <a href="https://github.com/hazelcast/hazelcast/issues/282">#282</a></p>
</li>
<li>
<p>Data removed under transaction sometimes could not be removed from the
backup. <a href="https://github.com/hazelcast/hazelcast/issues/277">#277</a></p>
</li>
<li>
<p>Map initialization should not use the default executor service. <a href="https://github.com/hazelcast/hazelcast/issues/276">#276</a></p>
</li>
<li>
<p>In Hazelcast 2.3.1, Hazelcast got into a state where the list of
members on some of the nodes do not match up. <a href="https://github.com/hazelcast/hazelcast/issues/274">#274</a></p>
</li>
<li>
<p>Map <code>EntryListener</code> is not working correctly if one master is
restarted. <a href="https://github.com/hazelcast/hazelcast/issues/269">#269</a></p>
</li>
<li>
<p><code>IMap.tryLockAndGet</code>: There is a concurrency error when the map has
map store. <a href="https://github.com/hazelcast/hazelcast/issues/268">#268</a></p>
</li>
<li>
<p>Error in <code>com.hazelcast.query.Predicates.NotEqualPredicate</code>. <a href="https://github.com/hazelcast/hazelcast/issues/262">#262</a></p>
</li>
<li>
<p>Partition Group with group type CUSTOM should honor configured
backups. <a href="https://github.com/hazelcast/hazelcast/issues/260">#260</a></p>
</li>
<li>
<p>Messages are lost while moving them inside a transaction. <a href="https://github.com/hazelcast/hazelcast/issues/259">#259</a></p>
</li>
<li>
<p>Enable Hazelcast to use specified port ranges to accommodate firewall
policies. <a href="https://github.com/hazelcast/hazelcast/issues/251">#251</a></p>
</li>
<li>
<p>Seeing multiple concurrent locks on a distributed lock. <a href="https://github.com/hazelcast/hazelcast/issues/168">#168</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-24"><a class="anchor" href="#contributors-24"></a><a class="link" href="#contributors-24">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/marshalium">Marshall Scorcio</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="2-3-1"><a class="anchor" href="#2-3-1"></a><a class="link" href="#2-3-1">2.3.1</a></h3>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.3.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Changed <code>hazelcast.partition.migration.interval</code> property’s value from
1 to 0.</p>
</li>
<li>
<p>The method <code>ILock.newCondition()</code> now throws
<code>UnsupportedOperationException</code>.</p>
</li>
<li>
<p>After upgrading Hazelcast to 2.3, IPv6 is no longer supported in TCP
join mechanism. <a href="https://github.com/hazelcast/hazelcast/issues/258">#258</a></p>
</li>
<li>
<p><code>ClassCastException</code> is thrown when the method <code>MultiMap.get()</code> is
run. <a href="https://github.com/hazelcast/hazelcast/issues/256">#256</a></p>
</li>
<li>
<p>Currently, the method <code>MultiMap.get(K key)</code> returns null if there are
no values associated with the key. However, it should return an empty
collection instead. <a href="https://github.com/hazelcast/hazelcast/issues/167">#167</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="2-3"><a class="anchor" href="#2-3"></a><a class="link" href="#2-3">2.3</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
2.3 release.</p>
</div>
<div class="sect3">
<h4 id="features-2.3"><a class="anchor" href="#features-2.3"></a><a class="link" href="#features-2.3">New Features and Changes</a></h4>
<div class="paragraph">
<p>The following are the new features and changes introduced with 2.3
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Changed <code>hazelcast.max.operation.timeout</code> unit from seconds to
milliseconds.</p>
</li>
<li>
<p>Added <code>hazelcast.max.concurrent.operation.limit</code> property to be able
to limit the number of concurrent operations that can be submitted to
Hazelcast.</p>
</li>
<li>
<p>Added <code>hazelcast.backup.redo.enabled</code> property to enable/disable redo
for backup operations.</p>
</li>
<li>
<p>Added MultiMap and Distributed ExecutorService statistics to
Management Center application.</p>
</li>
<li>
<p><code>MigrationListener</code> has now an additional method to receive failed
migration events; <code>void migrationFailed(MigrationEvent migrationEvent)</code>.</p>
</li>
<li>
<p><code>ItemEvent</code> has now an additional method returning Member firing that
event; <code>public Member getMember()</code>.</p>
</li>
<li>
<p>Improved out of memory (OOM) error detection and handling. Now it is
possible to register a custom hook when OutOfMemoryError is thrown.</p>
</li>
<li>
<p>Fixed some issues related to domain name handling and networking/join.</p>
</li>
<li>
<p>During cluster merge after a network split-brain, merging side will
now fire MERGING and MERGED before and after RESTARTING and RESTARTED
LifecycleEvents.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-23"><a class="anchor" href="#fixes-23"></a><a class="link" href="#fixes-23">Fixes</a></h4>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Operation exceptions occur randomly while the SQL predicates are
stress tested. <a href="https://github.com/hazelcast/hazelcast/issues/263">#263</a></p>
</li>
<li>
<p><code>EOF</code> exception is thrown in Management Center. <a href="https://github.com/hazelcast/hazelcast/issues/252">#252</a></p>
</li>
<li>
<p>The method <code>IMap.flush()</code> delegates map store exceptions to the caller
instead of suppressing them. <a href="https://github.com/hazelcast/hazelcast/issues/250">#250</a></p>
</li>
<li>
<p>Node appears to be in multiple clusters. <a href="https://github.com/hazelcast/hazelcast/issues/247">#247</a></p>
</li>
<li>
<p>It would be nice to have Spring support in Runnable tasks. <a href="https://github.com/hazelcast/hazelcast/issues/244">#244</a></p>
</li>
<li>
<p>MERGING and MERGED events should be fired during a split-brain merging
process. <a href="https://github.com/hazelcast/hazelcast/issues/241">#241</a></p>
</li>
<li>
<p>A problem occurs during a quick restart of master node. <a href="https://github.com/hazelcast/hazelcast/issues/241">#235</a></p>
</li>
<li>
<p>Distributed <code>tryLock()</code> throws <code>NullPointerException</code> from lite
member. <a href="https://github.com/hazelcast/hazelcast/issues/233">#233</a></p>
</li>
<li>
<p>Using domain instead of IP address is problematic. <a href="https://github.com/hazelcast/hazelcast/issues/230">#230</a></p>
</li>
<li>
<p>The method <code>MultiMap.lock()</code> blocks forever. <a href="https://github.com/hazelcast/hazelcast/issues/228">#228</a></p>
</li>
<li>
<p><code>SimpleMapTest</code> uses deprecated method <code>Hazelcast.getLoggingService()</code>
and annoys WebLogic 12. <a href="https://github.com/hazelcast/hazelcast/issues/227">#227</a></p>
</li>
<li>
<p><code>ItemEvent</code> should have a <code>getMember</code> method to return the member that
offered/polled an item. <a href="https://github.com/hazelcast/hazelcast/issues/226">#226</a></p>
</li>
<li>
<p>The consumers do <code>queue.take()</code> and block until something is put on
the queue. In Hazelcast 2.1.2, this was fine, but in 2.2, it causes a
massive amount of WARN-level log spam. <a href="https://github.com/hazelcast/hazelcast/issues/225">#225</a></p>
</li>
<li>
<p>The method <code>MultiMap.put()</code> is inconsistent when the key is locked by
another node/thread. <a href="https://github.com/hazelcast/hazelcast/issues/223">#223</a></p>
</li>
<li>
<p>FAILED event should be fired when migration fails for some reason. <a href="https://github.com/hazelcast/hazelcast/issues/222">#222</a></p>
</li>
<li>
<p><code>Runtime</code> exception is thrown when accessing to queue after client
restarted. <a href="https://github.com/hazelcast/hazelcast/issues/220">#220</a></p>
</li>
<li>
<p>Using the client, once it tries to access the cache while the cache is
unavailable, the client cannot be used anymore after the server cache
becomes available. <a href="https://github.com/hazelcast/hazelcast/issues/218">#218</a></p>
</li>
<li>
<p>The methods <code>DistributedTask.get()</code> and <code>MultiTask.get()</code> throw
<code>OperationTimeoutException</code>. <a href="https://github.com/hazelcast/hazelcast/issues/217">#217</a></p>
</li>
<li>
<p>There are a couple of classes that do not implement <code>toString</code>, that
makes the <code>Config.toString</code> message incomplete. <a href="https://github.com/hazelcast/hazelcast/issues/209">#209</a></p>
</li>
<li>
<p>Hazelcast IMap ignores the size capacity. <a href="https://github.com/hazelcast/hazelcast/issues/188">#188</a></p>
</li>
<li>
<p>Hazelcast resource adapter package (version 2.1.2) does not deploy on
JBoss 7.1.1. <a href="https://github.com/hazelcast/hazelcast/issues/182">#182</a></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="contributors-23"><a class="anchor" href="#contributors-23"></a><a class="link" href="#contributors-23">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/germanklf">Germán Kondolf</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="2-2"><a class="anchor" href="#2-2"></a><a class="link" href="#2-2">2.2</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
2.2 release.</p>
</div>
<div class="sect3">
<h4 id="features-22"><a class="anchor" href="#features-22"></a><a class="link" href="#features-22">New Features and Changes</a></h4>
<div class="paragraph">
<p>The following are the new features and changes introduced with 2.2
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Improved redo logs and added maximum call/operation timeout.</p>
</li>
<li>
<p>Improved domain name handling; Hazelcast will use defined
addresses/domain-names in TCP-IP Config as they are, without resolving
an IP address.</p>
</li>
<li>
<p>Added Cluster Health Check to Management Center application.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-22"><a class="anchor" href="#fixes-22"></a><a class="link" href="#fixes-22">Fixes</a></h4>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.2 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Hazelcast IMDG Reference Manual shows a default config for WAN replication that
includes the config item
<code>&lt;replication-impl&gt;com.hazelcast.impl.wan.WanNoDelayReplication&lt;/replication-impl&gt;</code>.
This item appears to be used for configuring WAN replication
implementation to be used. This item is not being used at all. Instead
the replication implementation is hard coded in
<code>WanReplicationService.java</code>. <a href="https://github.com/hazelcast/hazelcast/issues/152">#152</a></p>
</li>
<li>
<p>It would be nice to have possibilities to instantiate native client
from <code>java.util.Properties</code> and/or from classpath-located configuration
file. <a href="https://github.com/hazelcast/hazelcast/issues/93">#93</a></p>
</li>
<li>
<p>The method <code>ILock.isLocked()</code> should have the ability to implement a
spin lock / wait for a lock release to perform non-blocking code. <a href="https://github.com/hazelcast/hazelcast/issues/39">#39</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="2-1-3"><a class="anchor" href="#2-1-3"></a><a class="link" href="#2-1-3">2.1.3</a></h3>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.1.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Hazelcast IList evicts the items using the default map TTL. <a href="https://github.com/hazelcast/hazelcast/issues/196">#196</a></p>
</li>
<li>
<p>Nodes with EC2 auto-discovery do not rejoin the cluster after a
network outage. <a href="https://github.com/hazelcast/hazelcast/issues/195">#195</a></p>
</li>
<li>
<p>The method <code>remove()</code> cannot be called on a Hazelcast Set iterator. <a href="https://github.com/hazelcast/hazelcast/issues/189">#189</a></p>
</li>
<li>
<p>Topic does not receive messages when using Spring injection. <a href="https://github.com/hazelcast/hazelcast/issues/186">#186</a></p>
</li>
<li>
<p>The method <code>IMap.set()</code> should not load data from map store. <a href="https://github.com/hazelcast/hazelcast/issues/185">#185</a></p>
</li>
<li>
<p><code>EntryListener</code> for native clients receives duplicate events. <a href="https://github.com/hazelcast/hazelcast/issues/183">#183</a></p>
</li>
<li>
<p>Listeners do not work when used with locks and <code>remove</code>. <a href="https://github.com/hazelcast/hazelcast/issues/181">#181</a></p>
</li>
<li>
<p>The package <code>hazelcast-spring</code> dependencies on Hibernate and MongoDB
should be optional. <a href="https://github.com/hazelcast/hazelcast/issues/179">#179</a></p>
</li>
<li>
<p>Backup entry count is smaller than the owned entries. <a href="https://github.com/hazelcast/hazelcast/issues/177">#177</a></p>
</li>
<li>
<p>Queries on enum indexed types return an empty result set. <a href="https://github.com/hazelcast/hazelcast/issues/176">#176</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="2-1-2"><a class="anchor" href="#2-1-2"></a><a class="link" href="#2-1-2">2.1.2</a></h3>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.1.2 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>The method <code>containsKey()</code> does not work on a single node with the
default near cache configuration. <a href="https://github.com/hazelcast/hazelcast/issues/174">#174</a></p>
</li>
<li>
<p>The method Transactional <code>IMap.get(key)</code> causes the key to be added to
map. <a href="https://github.com/hazelcast/hazelcast/issues/161">#161</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="2-1-1"><a class="anchor" href="#2-1-1"></a><a class="link" href="#2-1-1">2.1.1</a></h3>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.1.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Item listener does not work when using client. <a href="https://github.com/hazelcast/hazelcast/issues/158">#158</a></p>
</li>
<li>
<p>The method <code>IMap.remove(key)</code> returns incorrect object. <a href="https://github.com/hazelcast/hazelcast/issues/149">#149</a></p>
</li>
<li>
<p>Map eviction policies are not documented. <a href="https://github.com/hazelcast/hazelcast/issues/148">#148</a></p>
</li>
<li>
<p>When calling the method <code>IQueue.remove(object)</code>, the item listener
added for that queue is not invoked. <a href="https://github.com/hazelcast/hazelcast/issues/146">#146</a></p>
</li>
<li>
<p>List is not keeping the order in transactional context. <a href="https://github.com/hazelcast/hazelcast/issues/73">#73</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="2-1"><a class="anchor" href="#2-1"></a><a class="link" href="#2-1">2.1</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
2.1 release.</p>
</div>
<div class="sect3">
<h4 id="features-21"><a class="anchor" href="#features-21"></a><a class="link" href="#features-21">New Features and Changes</a></h4>
<div class="paragraph">
<p>The following are the new features and changes introduced with 2.1
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Hazelcast now supports IPv6 addresses seamlessly.</p>
</li>
<li>
<p>Added async backup support.</p>
</li>
<li>
<p>Hazelcast now can be used as Spring Cache provider.</p>
</li>
<li>
<p>Spring Dependency Injection support: Hazelcast can apply bean
properties or to apply factory callbacks such as
ApplicationContextAware, BeanNameAware or to apply bean post-processing
such as InitializingBean, @PostConstruct like annotations while using
Hazelcast distributed ExecutorService or DistributedTasks or more
generally any Hazelcast managed object.</p>
</li>
<li>
<p>Added persistence support with Spring-Data MongoDB and JPA
integration.</p>
</li>
<li>
<p><code>Member.getUuid()</code> now will return UUID for node.</p>
</li>
<li>
<p>Improved session clustering configuration.</p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes-21"><a class="anchor" href="#fixes-21"></a><a class="link" href="#fixes-21">Fixes</a></h4>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.1 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Hazelcast client breaks the lifecycle listeners. <a href="https://github.com/hazelcast/hazelcast/issues/130">#130</a></p>
</li>
<li>
<p>The Spring bean attributes <code>lazy-init</code> and <code>scope</code> should be added. <a href="https://github.com/hazelcast/hazelcast/issues/118">#118</a></p>
</li>
<li>
<p>Spring configuration namespace is missing <code>lock</code>. <a href="https://github.com/hazelcast/hazelcast/issues/116">#116</a></p>
</li>
<li>
<p><code>MaxSizeHeapPolicy</code> issue causing improper evictions and freezes. <a href="https://github.com/hazelcast/hazelcast/issues/110">#110</a></p>
</li>
<li>
<p><code>NullPointerException</code> is thrown by the method <code>tx.commit()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/108">#108</a></p>
</li>
<li>
<p>Hazelcast client does not shutdown properly if no connection can be
established. <a href="https://github.com/hazelcast/hazelcast/issues/101">#101</a></p>
</li>
<li>
<p>It would be nice to have ``semi-asynchronous'' replication for
Hazelcast. <a href="https://github.com/hazelcast/hazelcast/issues/92">#92</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="2-0-4"><a class="anchor" href="#2-0-4"></a><a class="link" href="#2-0-4">2.0.4</a></h3>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.0.4 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>NullPointerException</code> is thrown by the method
<code>AbstractRecord.getLockCount()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/166">#166</a></p>
</li>
<li>
<p>There are ``Connection refused'' in Hazelcast 2.0.3. <a href="https://github.com/hazelcast/hazelcast/issues/140">#140</a></p>
</li>
<li>
<p>Predicate value on the date field should not be converted from a
String by the method <code>getRealObject()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/135">#135</a></p>
</li>
<li>
<p>Some IMap removed/evicted entries will go back when one cluster node
crashes. <a href="https://github.com/hazelcast/hazelcast/issues/132">#132</a></p>
</li>
<li>
<p><code>Predicates.GreaterLesserPredicate</code>’s <code>doApply</code> operation is broken. <a href="https://github.com/hazelcast/hazelcast/issues/131">#131</a></p>
</li>
<li>
<p>Incorrect selection by predicate with comparison of non-numerical
fields and indexing problems. <a href="https://github.com/hazelcast/hazelcast/issues/98">#98</a></p>
</li>
<li>
<p>Evicted/deleted entries should not be stored to the map store. <a href="https://github.com/hazelcast/hazelcast/issues/96">#96</a></p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="2-0-3"><a class="anchor" href="#2-0-3"></a><a class="link" href="#2-0-3">2.0.3</a></h3>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.0.3 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Increasing amount of stuck Hazelcast threads in weblogic; in a
clustered environment and also when running a single instance. <a href="https://github.com/hazelcast/hazelcast/issues/160">#160</a></p>
</li>
<li>
<p>Hyphens in the group names confuse the Management Center. It treats
the group name as two separate tokens. <a href="https://github.com/hazelcast/hazelcast/issues/128">#128</a></p>
</li>
<li>
<p>Split-brain merge handling causes the locks never to be acquired
again. <a href="https://github.com/hazelcast/hazelcast/issues/127">#127</a></p>
</li>
<li>
<p><code>ConfigXmlGenerator</code> does not handle the TTL correctly when multicast
joining mechanism is used. <a href="https://github.com/hazelcast/hazelcast/issues/119">#119</a></p>
</li>
<li>
<p>Data is lost in a map when adding a key the second time after a new
member joins the cluster. <a href="https://github.com/hazelcast/hazelcast/issues/117">#117</a></p>
</li>
<li>
<p>Listeners are not called when a queue is changed within a transaction. <a href="https://github.com/hazelcast/hazelcast/issues/114">#114</a></p>
</li>
<li>
<p>Programmatic session destruction does not lead to the destruction of
the clustered session. <a href="https://github.com/hazelcast/hazelcast/issues/104">#104</a></p>
</li>
<li>
<p>The name for <code>hazelcast.sessionId</code> should be configurable. <a href="https://github.com/hazelcast/hazelcast/issues/103">#103</a></p>
</li>
<li>
<p>There is an issue in concurrent <code>queue.take()</code> and
<code>txn.rollback()</code>. <a href="https://github.com/hazelcast/hazelcast/issues/99">#99</a></p>
</li>
</ul>
</div>
<div class="sect3">
<h4 id="contributors-203"><a class="anchor" href="#contributors-203"></a><a class="link" href="#contributors-203">Contributors</a></h4>
<div class="paragraph">
<p>We would like to thank the contributors from our open source
community who worked on this release:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://github.com/Nugs">Andrew Walters</a></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="2-0"><a class="anchor" href="#2-0"></a><a class="link" href="#2-0">2.0</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
2.0 release.</p>
</div>
<div class="sect3">
<h4 id="features-20"><a class="anchor" href="#features-20"></a><a class="link" href="#features-20">New Features and Changes</a></h4>
<div class="paragraph">
<p>The following are the new features and changes introduced with 2.0
release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>New Elastic Memory(Enterprise Edition Only): By default, Hazelcast
stores your distributed data (map entries, queue items) into Java heap
which is subject to garbage collection. As your heap gets bigger,
garbage collection might cause your application to pause tens of
seconds, badly effecting your application performance and response
times. Elastic Memory is Hazelcast with off-heap memory storage to avoid
GC pauses. Even if you have terabytes of cache in-memory with lots of
updates, GC will have almost no effect; resulting in more predictable
latency and throughput.</p>
</li>
<li>
<p>Security Framework(Enterprise Edition Only): Hazelcast Security is
JAAS based pluggable security framework which can be used to
authenticate both cluster members and clients and do access control
checks on client operations. With the security framework, take control
of who can be part of the cluster or connect as client and which
operations are allowed or not.</p>
</li>
<li>
<p>Native C# Client(Enterprise Edition Only): Just like our Native Java
Client, it supports all map, multimap, queue, topic operations including
listeners and queries.</p>
</li>
<li>
<p>Distributed Backups: Data owned by a member will be evenly backed up
by all the other members. In other word, every member takes equal
responsibility to backup every other member. This leads to better memory
usage and less influence in the cluster when you add/remove members. The
new backup system makes it possible to form backup-groups so that you
can have backups and owners fall into different groups.</p>
</li>
<li>
<p>Parallel IO: Number of socket selector threads can be configured. You
can have more IO threads, if you have good number of CPU/cores and
high-throughput network.</p>
</li>
<li>
<p>Connection Management: Hazelcast 2.0 is more tolerant to connection
failures. On connection failure it tries to repair it before declaring
the member as dead. So now it is ok to have short socket disconnections.
No problem if your virtual server migrates to a new host.</p>
</li>
<li>
<p>Listeners such as migration, membership and map indexes can be added
with configuration.</p>
</li>
<li>
<p>New Event Objects: Event Listeners for Queue/List/Set/Topic were
delivering the item itself on event methods. That’s why the items had to
be deserialized by Hazelcast Threads before invoking the listeners.
Sometimes this was causing class loader problems too. With 2.0, we have
introduced new event containers for Queue/List/Set and Topic just like
Map has EntryEvent. The new listeners now receive ItemEvent and Message
objects respectively. The actual items are deserialized only if you call
the appropriate get method on the event objects. This is where we brake
the compatibility with the older versions of Hazelcast.</p>
</li>
<li>
<p>ClientConfig API: We had too many of factory methods to instantiate a
HazelcastClient. Now all we need
<code>isHazelcastClient.newHazelcastClient(ClientConfig)</code>.</p>
</li>
<li>
<p>SSL communication support among cluster members.</p>
</li>
<li>
<p>Distributed MultiMap value collection can be either List or Set.</p>
</li>
<li>
<p>SuperClient is renamed to LiteMember to avoid confusion. Be careful!
It is a member, not a client.</p>
</li>
<li>
<p>New <code>IMap.set(key, value, ttl, TimeUnit)</code> implementation, which is
optimized <code>put(key, value)</code> operation as <code>Set</code> does not return the old
value.</p>
</li>
<li>
<p><code>HazelcastInstance.getLifecycleService().kill()</code> will forcefully kill
the member. Useful for testing.</p>
</li>
<li>
<p><code>forceUnlock</code>, to unlock the locked entry from any member and any thread
regardless of the owner.</p>
</li>
<li>
<p>Enum type query support: As an example;
<code>new SqlPredicate (“level = Level.WARNING”)</code></p>
</li>
</ul>
</div>
</div>
<div class="sect3">
<h4 id="fixes"><a class="anchor" href="#fixes"></a><a class="link" href="#fixes">Fixes</a></h4>
<div class="paragraph">
<p>The following are the fixed issues and enhancements for 2.0 release.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>[459], [471], [567], [574], [582], [629], [632], [646], [666], [686],
[669], [690], [692], [693], [695], [698], [705], [708], [711], [714],
[715], [719], [721], [722], [727], [728], [729], [730], [731], [732],
[733], [735], [738], [739], [740], [741], [742], [747], [751], [752],
[758], [759], [760], [761], [765], [767], [770], [773], [779], [781],</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2">
<h3 id="1-9-4-9"><a class="anchor" href="#1-9-4-9"></a><a class="link" href="#1-9-4-9">1.9.4.9</a></h3>
<div class="paragraph">
<p>This section lists the new features, enhancements and fixed issues for
the releases starting from 1.9.4.9 to 1.0.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Added WAN Replication (synchronization of separate active clusters).</p>
</li>
<li>
<p>Added Data Affinity (co-location of related entries) feature.</p>
</li>
<li>
<p>Added EC2 Auto Discovery for your Hazelcast cluster running on Amazon
EC2 platform.</p>
</li>
<li>
<p>Implemented Distributed CountDownLatch.</p>
</li>
<li>
<p>Implemented Distributed Semaphore implementation.</p>
</li>
<li>
<p>Hazelcast distribution now contains HTML and PDF documentation besides
Javadoc.</p>
</li>
<li>
<p>Better TCP/IP and multicast join support. Handling more edge cases
like multiple nodes starting at the same time.</p>
</li>
<li>
<p>Memcache protocol: Better integration between Java and Memcache
clients. Put from memcache, get from Java client.</p>
</li>
<li>
<p>Monitoring Tool is removed from the project.</p>
</li>
<li>
<p>Re-implementation of distributed queue:</p>
<div class="ulist">
<ul>
<li>
<p>Configurable backup count and synchronous backup.</p>
</li>
<li>
<p>Persistence support based on backing MapStore.</p>
</li>
<li>
<p>Auto-recovery from backing MapStore on startup.</p>
</li>
</ul>
</div>
</li>
<li>
<p>Re-implementation of distributed list supporting index based
operations.</p>
</li>
<li>
<p>Optimized <code>IMap.putAll</code> for much faster bulk writes.</p>
</li>
<li>
<p>Added <code>IMap.getAll</code> for bulk reads which is calling
<code>MapLoader.loadAll</code> if necessary.</p>
</li>
<li>
<p>Added <code>IMap.tryLockAndGet</code> and <code>IMap.putAndUnlock</code> methods.</p>
</li>
<li>
<p>Added <code>IMap.putTransient</code> API for storing only in-memory.</p>
</li>
<li>
<p>Added <code>IMap.addLocalEntryListener()</code> for listening locally owned entry
events.</p>
</li>
<li>
<p>Added <code>IMap.flush()</code> for flushing the dirty entries into MapStore.</p>
</li>
<li>
<p>Added <code>MapLoader.getAllKeys</code> API for auto-pre-populating the map when
cluster starts.</p>
</li>
<li>
<p>Support for minimum initial cluster size to enable equally partitioned
start.</p>
</li>
<li>
<p>Introduced graceful shutdown.</p>
</li>
<li>
<p>Faster dead-member detection.</p>
</li>
<li>
<p>Memcache interface support. Memcache clients written in any language
can access Hazelcast cluster.</p>
</li>
<li>
<p>RESTful access support,
e.g., http://:5701/hazelcast/rest/maps/mymap/key1.</p>
</li>
<li>
<p>Added split-brain (network partitioning) handling.</p>
</li>
<li>
<p>Added LifecycleService API to restart, pause Hazelcast instances and
listen for the lifecycle events.</p>
</li>
<li>
<p>Added asynchronous put and get support for IMap via <code>IMap.asyncPut()</code>
and <code>IMap.asyncGet()</code>.</p>
</li>
<li>
<p>Added AtomicNumber API; distributed implementation of
<code>java.util.concurrent.atomic.AtomicLong</code>.</p>
</li>
<li>
<p>Significant performance gain for multi-core servers. Higher CPU
utilization and lower latency.</p>
</li>
<li>
<p>Reduced the cost of map entries by 50 percent.</p>
</li>
<li>
<p>Better thread management. No more idle threads.</p>
</li>
<li>
<p>Added queue statistics API and the queue statistics panel on the
Monitoring Tool.</p>
</li>
<li>
<p>Monitoring Tool enhancements. More responsive and robust.</p>
</li>
<li>
<p>Hazelcast distribution now contains <code>hazelcast-all-&lt;version&gt;.jar</code> to
simplify the JAR dependency.</p>
</li>
<li>
<p>Sorted index optimization for map queries.</p>
</li>
<li>
<p>Added Hazelcast Cluster Monitoring Tool.</p>
</li>
<li>
<p>Added Partition API. Partition and key owner, migration listeners.</p>
</li>
<li>
<p>Added <code>IMap.lockMap()</code> method.</p>
</li>
<li>
<p>Added Multicast and TCP/IP join feature. Try multicast first, if not
found, try TCP/IP.</p>
</li>
<li>
<p>Added <code>Hazelcast.getExecutorService(name)</code> API. You can have separate
named executor services. Do not let your big tasks blocking your small
ones.</p>
</li>
<li>
<p>Added <code>Logging</code> API. Build your own logging. or simply use Log4j or
get logs as LogEvents.</p>
</li>
<li>
<p>Added <code>MapStatistics</code> API. Get statistics for your Map operations and
entries.</p>
</li>
<li>
<p>Hazelcast client now automatically updates the member list. There is
no need to pass the list to all members.</p>
</li>
<li>
<p>Added the ability to start the cluster members evenly partitioned.
Hence, no migration.</p>
</li>
<li>
<p>Added Java clients for accessing the cluster remotely.</p>
</li>
<li>
<p>Added Distributed Query for maps. Both Criteria API and SQL are
supported.</p>
</li>
<li>
<p>Added near cache feature for distributed maps.</p>
</li>
<li>
<p>Added TTL (time-to-live) property for each individual map entry.</p>
</li>
<li>
<p>Improved the put operation: <code>IMap.put(key,value, ttl, timeunit)</code>.</p>
</li>
<li>
<p>Introduced the method <code>IMap.putIfAbsent(key,value, ttl, timeunit)</code>.</p>
</li>
<li>
<p>Now, you can have multiple Hazelcast members on the same JVM.
Introduced <code>HazelcastInstance</code> API.</p>
</li>
<li>
<p>Better API based configuration support.</p>
</li>
<li>
<p>Smoother data migration enabling better response times during joins.</p>
</li>
<li>
<p>Persistence via Loader/Store interface for distributed map.</p>
</li>
<li>
<p>Added Socket level encryption feature. Both symmetric and asymmetric
encryption are supported.</p>
</li>
<li>
<p>Added support for JMX.</p>
</li>
<li>
<p>Added support for Hibernate second level cache provider.</p>
</li>
<li>
<p>Added instance events for getting notified when a data structure
instance (map, queue, topic, etc.) is created or destroyed.</p>
</li>
<li>
<p>Added eviction listener: <code>EntryListener.entryEvicted(EntryEvent)</code>.</p>
</li>
<li>
<p>Hazelcast is now fully <code>Maven</code>ized.</p>
</li>
<li>
<p>Added support for synchronous backups and configurable backup-count
for maps.</p>
</li>
<li>
<p>Added eviction support: Timed eviction for queues. LRU, LFU and time
based eviction for maps.</p>
</li>
<li>
<p>Added support for statistics/history for entries: create/update time,
number of hits, cost.</p>
</li>
<li>
<p>Implemented MultiMap structure. Similar to <code>google-collections</code> and
<code>apache-common-collections</code>, but distributed and thread-safe.</p>
</li>
<li>
<p>Now, you can <code>destroy()</code> the data structures when not needed anymore.</p>
</li>
<li>
<p>Now, you can shutdown the local member using <code>Hazelcast.shutdown()</code>.</p>
</li>
<li>
<p>Now, you can get the list of all data structure instances via
<code>Hazelcast.getInstances()</code>.</p>
</li>
<li>
<p>Full implementation of <code>java.util.concurrent.BlockingQueue</code>. Now,
queues can have configurable capacity limits.</p>
</li>
<li>
<p>Introduced Super Clients (a.k.a LiteMember): Members with no storage.
If <code>-Dhazelcast.super.client=true</code> JVM parameter is set, that JVM will
join the cluster as a `super client' which will not be a `data
partition' (no data on that node) but will have super fast access to the
cluster just like any regular member does.</p>
</li>
<li>
<p>Added HTTP Session sharing support for Hazelcast Web Manager.
Different web applications can share the same sessions.</p>
</li>
<li>
<p>Added the ability to separate clusters by creating groups.</p>
</li>
<li>
<p>Added <code>java.util.logging</code> support.</p>
</li>
<li>
<p>Added the support for adding, removing and updating events for queue,
map, set and list data structures.</p>
</li>
<li>
<p>Introduced Distributed Topic for pub/sub messaging.</p>
</li>
<li>
<p>Added integration with J2EE transactions via JCA complaint resource
adapter.</p>
</li>
<li>
<p>Added <code>ExecutionCallback</code> interface for distributed tasks.</p>
</li>
<li>
<p>Introduced cluster-wide unique ID generator.</p>
</li>
<li>
<p>Implemented Transactional Distributed Queue, Map, Set and List.</p>
</li>
<li>
<p>Implemented Distributed Executor Service.</p>
</li>
<li>
<p>Added support for multi member executions.</p>
</li>
<li>
<p>Implemented key based execution routing.</p>
</li>
<li>
<p>Added task cancellation support.</p>
</li>
<li>
<p>Implemented Session Clustering with Hazelcast Webapp Manager.</p>
</li>
<li>
<p>Added full TCP/IP clustering support.</p>
</li>
<li>
<p>Introduced distributed implementation of
<code>java.util.{Queue,Map,Set,List}</code>.</p>
</li>
<li>
<p>Introduced distributed implementation of <code>java.util.concurrency.Lock</code>.</p>
</li>
<li>
<p>Added support for retrieving cluster membership events.</p>
</li>
<li>
<p>1000+ commits 100+ bug fixes and several other enhancements.</p>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footer-text">
Last updated 2021-10-26 06:29:41 UTC
</div>
</div>
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-M267KFN"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
</body>
</html>