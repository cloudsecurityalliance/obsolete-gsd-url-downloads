<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='*General Issues Bug #72434 - RDF' href='rss/bug.php?id=72434'>
        <link rel='alternate' type='application/rss+xml' title='*General Issues Bug #72434 - RSS 2.0' href='rss/bug.php?id=72434&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Sec Bug #72434 :: ZipArchive class Use After Free Vulnerability in PHP's GC algorithm and unseria</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=72434">Sec Bug</a>&nbsp;#72434</th>
            <td id="summary" colspan="5">ZipArchive class Use After Free Vulnerability in PHP's GC algorithm and unseria</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2016-06-16 14:41 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2016-06-23 12:51 UTC</td>
            <td rowspan="6">


            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>3v0n1d3 &#x61;&#116; gmail &#x64;&#111;&#x74; com</td>
            <th class="details">Assigned:</th>
            <td><a href="search.php?cmd=display&amp;assign=dmitry">dmitry</a> (<a href="https://people.php.net/dmitry">profile</a>)</td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=%2AGeneral+Issues">*General Issues</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>5.5.36</td>
            <th class="details">OS:</th>
            <td>*</td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-5773" target="_blank">2016-5773</a></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=72434&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=72434&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=72434&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1466088113">&nbsp;</a><strong>[2016-06-16 14:41 UTC] 3v0n1d3 &#x61;&#116; gmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>Description:
------------
A critical use after free vulnerability was discovered when PHP's garbage collection algorithm interacts with other specific PHP objects.
This vulnerability has wide reaching effects like allowing the exploitation of unserialize to gain remote code execution on a target system.

Affected Versions:
------------------------
Affected are all PHP versions &gt;= PHP 5.3 (including PHP 7).
The configure option &quot;--enable-zip&quot; is required (default on many distributions).

Credits:
------------------------
This vulnerability was discovered by Ruslan Habalov and Dario Wei√üer.

Description:
------------------------
While analyzing PHP's unserialize function we have found some serious flaws in PHP's internal GC algorithm.
Those flaws can be exploited in a local or even remote context e.g. over PHP's unserialize function.

The POC clearly shows that we can abuse the garbage collector to help freeing a target array.
At this point an attacker can craft a fake zval object and exploit the PHP process by taking over the EIP/RIP.
Since this has been done already several times (c.f. [2]) we will leave out any POC exploit at this point.


Short description of PHP's GC.
--------------------
The GC algorithm is supposed to clean up zvals with cyclic references (c.f. [1]).

Every time a zval is destructed the GC algorithm gets involved and checks if this zval is a possible root candidate i.e. an array or object.
If this is the case this zval is added to a root buffer (this buffer basically keeps track of potential zvals with cyclic references).
This step is repeated until either
a) gc_collect_cycles() is called manually
or 
b) more than GC_ROOT_BUFFER_MAX_ENTRIES (defined in the head section of 'Zend/zend_gc.c') zvals have been stored in the root buffer.
   This step will also automatically invoke a call to gc_collect_cycles.

gc_collect_cycles will then apply a marking algorithm.
This algorithm can be divded into the following steps:
1) gc_mark_roots(TSRMLS_C);
   Apply gc_mark_grey to all elements in the root buffer:
   1.1) Traverse all its children in a recursive fashion.
   1.2) Decrement every visited zval's reference count by 1 and mark it grey.
2) gc_scan_roots(TSRMLS_C);
   Apply gc_mark_white to all elements in the root buffer that have a ref count of 0.
   1.1) Traverse all its children in a recursive fashion.
        Apply gc_mark_white again if the ref count is 0, else apply gc_mark_black on this zval recursively.
3) gc_collect_roots(TSRMLS_C);
   Restore the refcount of all elements and put all white nodes into a list to free.
4) Finally, free all elements that have been marked white.
--------------------

The gc algorithm temporarily decrements the reference counts of all traversed elements as described above.
However, when reaching a ZipArchive object &quot;php_zip_get_properties&quot; will get called instead of a custom gc method.
This method then does the following things ('ext/zip/php_zip.c', 'php_zip_get_properties' method):
[...]
	ZEND_HASH_FOREACH_STR_KEY_PTR(obj-&gt;prop_handler, key, hnd) {
		zval *ret, val;
		ret = php_zip_property_reader(obj, hnd, &amp;val);
		if (ret == NULL) {
			ret = &amp;EG(uninitialized_zval);
		}
		zend_hash_update(props, key, ret);
	} ZEND_HASH_FOREACH_END();
[...]
We can trick the GC algorithm into visitng a specific property of the object first and only then call get_properties on this specific object.
'zend_hash_update' will then decrement the reference count and free it in all PHP versions &gt; 5.3 and &lt; PHP 7, or decrement it to a negative number in PHP 7.

Please consider that this submission is different from our other report in the following ways:
1) Different exploitation technique (the zval gets freed either by 'zend_hash_update' or by unserialize itself).
2) This submission affects all PHP versions &gt; 5.3.


Please note:
Calling &quot;gc_collect_cycles()&quot; manually is not necessary.
The garbage collection can also be invoked during the unserialization process making this vulnerability remotely exploitable.

Further, please consider that using &quot;unserialize&quot; is optional. This bug is very likely to be exploitable in other scenarios, too.


Suggested fix:
------------------------
Similar to the suggest fix in our other report a proper gc method should be implemented for the ZIP class in 'ext/zip/php_zip.c'.
This method can be stragihtforward and return all object properties as long as it avoids calling &quot;zend_hash_update&quot; or
similar functions that could potentially decrement any reference counters.


This bug was very difficult to find since it involves several components interacting together in a relatively sophisticated way.
Due to complexity reasons a lot of details and further descriptions are left out in this report.
Hence, we intend to do a thorough and detailed writeup about this vulnerability once it gets acknowledged in another context.

Thank you for your consideration.
Please feel free to ask for more technical details if necessary.

References:
[1] <a href="http://php.net/manual/de/features.gc.collecting-cycles.php" rel="nofollow">http://php.net/manual/de/features.gc.collecting-cycles.php</a>
[2] <a href="https://hackerone.com/reports/73235" rel="nofollow">https://hackerone.com/reports/73235</a>

Test script:
---------------
&lt;?php
// The following array will be serialized and this representation will be freed later on.
$free_me = array(new StdClass());
// Create our payload and unserialize it.
$serialized_payload = 'a:3:{i:1;N;i:2;O:10:&quot;ZipArchive&quot;:1:{s:8:&quot;filename&quot;;'.serialize($free_me).'}i:1;R:4;}';
$unserialized_payload = unserialize($serialized_payload);
gc_collect_cycles();
// The reference counter for $free_me is at -1 for PHP 7 right now.
// Increment the reference counter by 1 -&gt; rc is 0
$a = $unserialized_payload[1];
// Increment the reference counter by 1 again -&gt; rc is 1
$b = $a;
// Trigger free of $free_me (referenced by $m[1]).
unset($b);
$fill_freed_space_1 = &quot;filler_zval_1&quot;;
$fill_freed_space_2 = &quot;filler_zval_2&quot;;
$fill_freed_space_3 = &quot;filler_zval_3&quot;;
$fill_freed_space_4 = &quot;filler_zval_4&quot;;
debug_zval_dump($unserialized_payload[1]);

Expected result:
----------------
array(1) refcount(1){
  [0]=&gt;
  object(stdClass)#3 (0) refcount(2){
  }
}

Actual result:
--------------
evonide@localhost:~/$ ./php5621 poc2.php 
string(13) &quot;filler_zval_1&quot; refcount(2)
evonide@localhost:~/$ ./php707 poc2.php 
array(1) refcount(3601163304){
  [0]=&gt;
  ./php707: line 1: 14327 Segmentation fault      php707/sapi/cli/php $

</pre>
</div><h2>Patches</h2>
<p><a href='patch-add.php?bug_id=72434'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=72434'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_log' ><a name="1466483828">&nbsp;</a><strong>[2016-06-21 04:37 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-PHP Version: 7.1.0alpha1</span>
<span class="added">+PHP Version: 5.5.36</span>
<span class="removed">-Assigned To:</span>
<span class="added">+Assigned To: dmitry</span>
</div></div></div><div class='comment type_comment' ><a name="1466483828">&nbsp;</a><strong>[2016-06-21 04:37 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Fix in <a href="https://gist.github.com/f3bf828025e86b8f17df011a6f5a1aa5" rel="nofollow">https://gist.github.com/f3bf828025e86b8f17df011a6f5a1aa5</a>
 and in security repo as f6aef68089221c5ea047d4a74224ee3deead99a6. Please verify.
</pre>
</div><div class='comment type_svn' ><a name="1466491731">&nbsp;</a><strong>[2016-06-21 06:48 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=f6aef68089221c5ea047d4a74224ee3deead99a6" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=f6aef68089221c5ea047d4a74224ee3deead99a6</a>
Log: Fix <a href='bug.php?id=72434'>bug #72434</a>: ZipArchive class Use After Free Vulnerability in PHP's GC algorithm and unserialize
</pre>
</div><div class='comment type_log' ><a name="1466491732">&nbsp;</a><strong>[2016-06-21 06:48 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Closed</span>
</div></div></div><div class='comment type_svn' ><a name="1466492617">&nbsp;</a><strong>[2016-06-21 07:03 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=f6aef68089221c5ea047d4a74224ee3deead99a6" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=f6aef68089221c5ea047d4a74224ee3deead99a6</a>
Log: Fix <a href='bug.php?id=72434'>bug #72434</a>: ZipArchive class Use After Free Vulnerability in PHP's GC algorithm and unserialize
</pre>
</div><div class='comment type_svn' ><a name="1466493968">&nbsp;</a><strong>[2016-06-21 07:26 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=f6aef68089221c5ea047d4a74224ee3deead99a6" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=f6aef68089221c5ea047d4a74224ee3deead99a6</a>
Log: Fix <a href='bug.php?id=72434'>bug #72434</a>: ZipArchive class Use After Free Vulnerability in PHP's GC algorithm and unserialize
</pre>
</div><div class='comment type_svn' ><a name="1466494037">&nbsp;</a><strong>[2016-06-21 07:27 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=f6aef68089221c5ea047d4a74224ee3deead99a6" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=f6aef68089221c5ea047d4a74224ee3deead99a6</a>
Log: Fix <a href='bug.php?id=72434'>bug #72434</a>: ZipArchive class Use After Free Vulnerability in PHP's GC algorithm and unserialize
</pre>
</div><div class='comment type_comment' ><a name="1466539723">&nbsp;</a><strong>[2016-06-21 20:08 UTC] 3v0n1d3 &#x61;&#116; gmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>Thank you for your fast reply and fast fix of this issue.
The patch is exactly right.
</pre>
</div><div class='comment type_svn' ><a name="1466575081">&nbsp;</a><strong>[2016-06-22 05:58 UTC] <a href="//people.php.net/krakjoe">krakjoe@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=f6aef68089221c5ea047d4a74224ee3deead99a6" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=f6aef68089221c5ea047d4a74224ee3deead99a6</a>
Log: Fix <a href='bug.php?id=72434'>bug #72434</a>: ZipArchive class Use After Free Vulnerability in PHP's GC algorithm and unserialize
</pre>
</div><div class='comment type_log' ><a name="1466686293">&nbsp;</a><strong>[2016-06-23 12:51 UTC] <a href="//people.php.net/kaplan">kaplan@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID:</span>
<span class="added">+CVE-ID: 2016-5773</span>
</div></div></div><div class='comment type_svn' ><a name="1468914458">&nbsp;</a><strong>[2016-07-19 07:47 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=cab1c3b3708eead315e033359d07049b23b147a3" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=cab1c3b3708eead315e033359d07049b23b147a3</a>
Log: Fixed <a href='bug.php?id=72479'>bug #72479</a> - same as #72434
</pre>
</div><div class='comment type_svn' ><a name="1468914818">&nbsp;</a><strong>[2016-07-19 07:53 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=cab1c3b3708eead315e033359d07049b23b147a3" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=cab1c3b3708eead315e033359d07049b23b147a3</a>
Log: Fixed <a href='bug.php?id=72479'>bug #72479</a> - same as #72434
</pre>
</div><div class='comment type_svn' ><a name="1468917598">&nbsp;</a><strong>[2016-07-19 08:39 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=cab1c3b3708eead315e033359d07049b23b147a3" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=cab1c3b3708eead315e033359d07049b23b147a3</a>
Log: Fixed <a href='bug.php?id=72479'>bug #72479</a> - same as #72434
</pre>
</div><div class='comment type_svn' ><a name="1468918549">&nbsp;</a><strong>[2016-07-19 08:55 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=cab1c3b3708eead315e033359d07049b23b147a3" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=cab1c3b3708eead315e033359d07049b23b147a3</a>
Log: Fixed <a href='bug.php?id=72479'>bug #72479</a> - same as #72434
</pre>
</div><div class='comment type_comment' ><a name="1469354312">&nbsp;</a><strong>[2016-07-24 09:58 UTC] uskokovic &#x61;&#116; gmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>If I run the testscript with zend.enable_gc=1 I can verify vulnerability:
$ php -d zend.enable_gc=1 testscript
string(13) &quot;filler_zval_2&quot; refcount(2)

but with zend.enable_gc=1 it seems OK:
$ php -d zend.enable_gc=0 testscript
array(1) refcount(1){
  [0]=&gt;
  object(stdClass)#3 (0) refcount(3){
  }
}

Does setting zend.enable_gc=0 efects only test script or does it disable this vulnerability?

Does setting zend.enable_gc=0 in php.ini (and disabling the gc_enable function) seem like a reasonable workaround until updating to non-vulnerable version of PHP?
</pre>
</div><div class='comment type_svn' ><a name="1476699101">&nbsp;</a><strong>[2016-10-17 10:11 UTC] <a href="//people.php.net/bwoebi">bwoebi@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=cab1c3b3708eead315e033359d07049b23b147a3" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=cab1c3b3708eead315e033359d07049b23b147a3</a>
Log: Fixed <a href='bug.php?id=72479'>bug #72479</a> - same as #72434
</pre>
</div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
