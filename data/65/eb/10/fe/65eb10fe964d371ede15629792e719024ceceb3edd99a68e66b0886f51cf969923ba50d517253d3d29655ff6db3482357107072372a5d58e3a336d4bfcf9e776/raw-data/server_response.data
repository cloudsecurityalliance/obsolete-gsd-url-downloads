<!DOCTYPE html>
<html lang="en">
  <head>
    <title>80559 &ndash; CVE-2014-3637: Immortal D-Bus connection in dbus-daemon</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="data/assets/c60deb3d48830179eae269c9e65a7506.css?1462892334" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1462892331"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "80559 – CVE-2014-3637: Immortal D-Bus connection in dbus-daemon",
                             "show_bug.cgi?id=80559" );
        document.title = "80559 – CVE-2014-3637: Immortal D-Bus connection in dbus-daemon";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "80559 – CVE-2014-3637: Immortal D-Bus connection in dbus-daemon", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1462892334"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-freedesktop-org
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_dbus
                 bz_component_core
                 bz_bug_80559 yui-skin-sam">

  <div id="header"><div id="banner">
  </div>

    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;80559</span>

        <span id="subtitle" class="subheader">CVE-2014-3637: Immortal D-Bus connection in dbus-daemon</span>

        <span id="information" class="header_addl_info">Last modified: 2014-09-16 16:34:07 UTC</span>
    </div>


    <div id="common_links"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>


</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2014-09-16 16:34:07">
  <input type="hidden" name="id" value="80559">
  <input type="hidden" name="token" value="1635619160-UcovijErmO2o1FMF8Eq6FZfHiocFFmKP0hDoJknG6Jo">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=80559"><b>Bug&nbsp;80559</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">CVE-2014-3637: Immortal D-Bus connection in dbus-daemon</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>CVE-2014-3637: Immortal D-Bus connection in dbus-daemon
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'CVE-2014-3637: Immortal D-Bus connection in dbus-daemon' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >dbus

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=dbus"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >core

  (<a href="buglist.cgi?component=core&amp;product=dbus&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>unspecified
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">Other
        All
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>medium
       normal
      </td>
    </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Simon McVittie</span>
</span>
      </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_qa_contact">


  <a 
      title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#qa_contact"
  >QA Contact:</a>

</th>
      <td><span class="vcard"><span class="fn">Sjoerd Simons</span>
</span>
      </td>
    </tr>
    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'dbus\x40maint.invalid',
        'dbus\x40maint.invalid');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>

    <tr><th class="field_label "
    id="field_label_status_whiteboard">


  <a 
      title="Each bug has a free-form single line text entry box for adding tags and status information."
      class="field_help_link"
      href="page.cgi?id=fields.html#status_whiteboard"
  >Whiteboard:</a>

</th><td>review+  
  </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_keywords">


  <a 
      title="You can add keywords from a defined list to bugs, in order to easily identify and group them."
      class="field_help_link"
      href="describekeywords.cgi"
  >Keywords:</a>

</th>
  <td class="field_value "
      id="field_container_keywords" >patch, security

</td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2014-06-26 14:00 UTC by <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2014-09-16 16:34 UTC
      (<a href="show_activity.cgi?id=80559">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>2 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="thiago">thiago</option>
                <option value="walters">walters</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr> 
<tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_i915_platform">


  <a 
      title="Intel platforms affected by the bug"
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_i915_platform"
  >i915 platform:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_i915_platform" >

</td>
    </tr>
    <tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_i915_features">


  <a 
      title="Features of the i915 driver affected by the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_i915_features"
  >i915 features:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_i915_features" >

</td>
    </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=103210"
               title="View the content of the attachment">
          <b>[PATCH 1/4] config: add new limit: pending_fd_timeout</b></a>

          <span class="bz_attach_extra_info">
              (5.81 KB,
                patch)

            <br>
            <a href="#attach_103210"
               title="Go to the comment associated with the attachment">2014-07-21 18:47 UTC</a>,

            <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=103210&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=103210">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=103211"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">[PATCH 2/4] DBusConnection: implements _dbus_connection_get_pending_fds_count</span></b></a>

          <span class="bz_attach_extra_info">
              (4.70 KB,
                patch)

            <br>
            <a href="#attach_103211"
               title="Go to the comment associated with the attachment">2014-07-21 18:48 UTC</a>,

            <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=103211&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=103211">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a3" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=103212"
               title="View the content of the attachment">
          <b>[PATCH 3/4] DBusConnection: implements _dbus_connection_set_pending_fds_function</b></a>

          <span class="bz_attach_extra_info">
              (8.14 KB,
                patch)

            <br>
            <a href="#attach_103212"
               title="Go to the comment associated with the attachment">2014-07-21 18:49 UTC</a>,

            <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=103212&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=103212">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a4" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=103213"
               title="View the content of the attachment">
          <b>[PATCH 4/4] bus: enforce pending_fd_timeout</b></a>

          <span class="bz_attach_extra_info">
              (4.63 KB,
                patch)

            <br>
            <a href="#attach_103213"
               title="Go to the comment associated with the attachment">2014-07-21 18:49 UTC</a>,

            <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=103213&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=103213">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a5" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=106175"
               title="View the content of the attachment">
          <b>[PATCH 2/4 v2] DBusConnection: implements  _dbus_connection_get_pending_fds_count</b></a>

          <span class="bz_attach_extra_info">
              (4.95 KB,
                patch)

            <br>
            <a href="#attach_106175"
               title="Go to the comment associated with the attachment">2014-09-12 12:15 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=106175&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=106175">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a6" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=106191"
               title="View the content of the attachment">
          <b>[backport to 1.6] config: add new limit: pending_fd_timeout</b></a>

          <span class="bz_attach_extra_info">
              (6.02 KB,
                patch)

            <br>
            <a href="#attach_106191"
               title="Go to the comment associated with the attachment">2014-09-12 15:39 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=106191&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=106191">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a7" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=106192"
               title="View the content of the attachment">
          <b>[backport to 1.6, 2/4] DBusConnection: implements _dbus_connection_get_pending_fds_count</b></a>

          <span class="bz_attach_extra_info">
              (4.92 KB,
                patch)

            <br>
            <a href="#attach_106192"
               title="Go to the comment associated with the attachment">2014-09-12 15:40 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=106192&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=106192">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a8" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=106193"
               title="View the content of the attachment">
          <b>[backport to 1.6, 3/4] DBusConnection: implements _dbus_connection_set_pending_fds_function</b></a>

          <span class="bz_attach_extra_info">
              (8.16 KB,
                patch)

            <br>
            <a href="#attach_106193"
               title="Go to the comment associated with the attachment">2014-09-12 15:41 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=106193&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=106193">
      Splinter Review</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
            <a href="#a0" onclick="return toggle_display(this);">Show
              Obsolete</a> (1)
            <a id="view_all" href="attachment.cgi?bugid=80559&amp;action=viewall&amp;hide_obsolete=1">View All</a>
        </span>
    </td>
  </tr>
</table>
<br>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1462891770" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-26 14:00:23 UTC
        </span>

      </div>




<pre class="bz_comment_text">A D-Bus client can create an &quot;immortal&quot; D-Bus connection in dbus-daemon.
Dbus-daemon will still have the resources allocated for the connection like a
file descriptor, an unique name, and possibly well-known names and match rules.
An immortal connection stays alive in dbus-daemon even when the clients owning
the other end of the socket are terminated.

To create such an immortal connection, a client can send the first byte of a
D-Bus message with the file descriptor of the connection itself attached with
fdpassing (SCM_RIGHTS). Then dbus-daemon has the file descriptors of both ends
of the Unix socket. The client can close(2) or exit(3) (but not shutdown(2)!).
Dbus-daemon has no way to detect the close(2) because it merely reduce the
socket reference counter in the kernel but another process (dbus-daemon itself)
still have a reference on it so it stays alive. When the client terminates,
nobody will ever finish writing the end of the D-Bus message after the first
byte. So the fd will stay in the DBusMessageLoader forever.

There are a few possible attacks related to immortal D-Bus connections:

1. A malicious program could create plenty of immortal D-Bus connections until
the fd limit is reached. The limit could be max_completed_connections:
typically 2048 on the system bus or 100000 on the session bus:
   &lt;limit name=&quot;max_completed_connections&quot;&gt;100000&lt;/limit&gt;
There is also a limit per process (&quot;ulimit -n&quot;, typically 65536) and a global
limit (/proc/sys/fs/file-max, 800796 for me).

The problem here is that it's not possible to kill D-Bus clients until
dbus-daemon recovers more file descriptors. When the limit is reached, even
when the malicious program is terminated, I cannot get new connections:

This problem is mitigated on the system bus by max_connections_per_user,
typically 256 on the system bus or 100000 on the session bus. So it would
still need 2048/256 = 8 users to collaborate.

$ dbus-monitor 
Failed to open connection to session bus: Failed to determine seats of user
&quot;1000&quot;: Too many open files

I've also seen an &quot;accept busy loop&quot; taking too much cpu:

accept4(6, 0xbfff9c2c, [16], SOCK_CLOEXEC) = -1 EMFILE (Too many open files)
fcntl64(-1, F_GETFD)                    = -1 EBADF (Bad file descriptor)
clock_gettime(CLOCK_MONOTONIC, {519, 413430300}) = 0
epoll_wait(3, {{EPOLLIN, {u32=6, u64=578500642725691398}}}, 64, -1) = 1
clock_gettime(CLOCK_MONOTONIC, {519, 414742757}) = 0
accept4(6, 0xbfff9c2c, [16], SOCK_CLOEXEC) = -1 EMFILE (Too many open files)
etc.

Because a poll on the listening socket returns POLLIN but accept() does not
work and it keeps trying again.

2. A malicious program could request some D-Bus names such as
&quot;org.freedesktop.Telepathy.MissionControl5&quot; and then make the connection
immortal. MissionControl will not be able to start without restarting the
session: killing the malicious program will not release the well-known name.
An immortal connection is not necessarily unusable: a malicious process could
create two immortal D-Bus connections by sending the two fds attached to the
same byte in one of the two connections. In this way, one of the connections
could be used to impersonate MissionControl and send/receive messages, and the
other connection stays blocked after sending the first byte.

3. A malicious program could register some match rules and make the connection
immortal and attempt to make dbus-daemon memory usage balloon with <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED MOVED - stop dbus-daemon memory usage ballooning if a client is slow to read"
   href="show_bug.cgi?id=33606">Bug #33606</a>.

4. A user could prevent root to umount a partition without killing the system
bus. A malicious program can pass an open fd on the mount to dbus-daemon on the
system bus through the immortal connection and then exit. The administrators
will use &quot;lsof&quot; to find the processes preventing the umount; they will find
the process dbus-daemon for the system bus.

5. Similar to the umount problem: a malicious program could create an exclusive
lock with flock() or fcntl() on some databases and then pass the fd to the
system bus.

==

Possible ideas to make dbus-daemon more resistant against this kind of
attacks:

- timeout when receiving a pending fd in an incomplete msg
  (fds should not stay in the loader for too long)

- keep track of the numbers of pending fds in DBusMessageLoaders. Don't
  accept() on the listening socket when there are too many fds pending.

- don't accept fds spread across a message: if a fd was attached to the first
  byte of the message, the next bytes should not have a fd attached. It needs
  some research to see if the &quot;un-glue fds messages from different skbs&quot; is
  Linux-specific or not, see
  <a href="http://lxr.free-electrons.com/source/net/unix/af_unix.c#L2051">http://lxr.free-electrons.com/source/net/unix/af_unix.c#L2051</a>

- disconnect connections sending a message with a fd but without the
  appropriate header.

- only accept message with fds attached when received a sdk big enough to
  check the header to see if it is supposed to contain fds.</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-26 14:21:12 UTC
        </span>

      </div>




<pre class="bz_comment_text">Mitigations:

(In reply to <a href="show_bug.cgi?id=80559#c0">comment #0</a>)
<span class="quote">&gt; This problem is mitigated on the system bus by max_connections_per_user,
&gt; typically 256 on the system bus or 100000 on the session bus. So it would
&gt; still need 2048/256 = 8 users to collaborate.</span >

Those 8 users could already cooperate to DoS the system bus; the only difference here is that a sysadmin cannot clean up the situation by killing their processes.

<span class="quote">&gt; 2. A malicious program could request some D-Bus names such as
&gt; &quot;org.freedesktop.Telepathy.MissionControl5&quot;</span >

If a malicious program can do this, you've already lost. If your bus is a security boundary, then you need to limit who is allowed to own particular names.

<span class="quote">&gt; 3. A malicious program could register some match rules and make the
&gt; connection
&gt; immortal and attempt to make dbus-daemon memory usage balloon with Bug
&gt; #33606.</span >

They can already do that; solutions welcome. Again, the difference here is that a sysadmin cannot mitigate the situation by killing their processes.

<span class="quote">&gt; 4. A user could prevent root to umount a partition without killing the system
&gt; bus. A malicious program can pass an open fd on the mount to dbus-daemon on
&gt; the
&gt; system bus through the immortal connection and then exit. The administrators
&gt; will use &quot;lsof&quot; to find the processes preventing the umount; they will find
&gt; the process dbus-daemon for the system bus.</span >

Mitigation: don't let people access partitions you want to unmount

Mitigation: if you're sufficiently desperate, ptrace the dbus-daemon and close the fd that way :-)</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Thiago Macieira</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-27 00:56:20 UTC
        </span>

      </div>




<pre class="bz_comment_text">The fds must be between the first and second bytes in a Unix socket message. I don't think we should accept them anywhere else.

That doesn't solve the problem, though. The malicious connection could send the first byte, the fds, maybe a second byte and then close its side of the connection. Now the daemon is simply stuck.

I think the only mitigation possible is to timeout messages with pending fds. 

It might be possible to use getsockname() and getpeername() to identify whether the pending message has passed a file descriptor to the D-Bus socket itself and only time that one out. However, I think we should always do the timing out. Otherwise, it's possible for multiple connections to cooperate to exhaust the daemon's file descriptor limit by not closing their connections.</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-27 11:18:40 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=80559#c2">comment #2</a>)
<span class="quote">&gt; The fds must be between the first and second bytes in a Unix socket message.
&gt; I don't think we should accept them anywhere else.
&gt; 
&gt; That doesn't solve the problem, though. The malicious connection could send
&gt; the first byte, the fds, maybe a second byte and then close its side of the
&gt; connection. Now the daemon is simply stuck.</span >

I agree that we can make things a bit stricter. It will not solve this specific issue but it can solve similar issues. For example, if a client sends a message byte by byte with a new fd attached on each byte...

<span class="quote">&gt; I think the only mitigation possible is to timeout messages with pending
&gt; fds. </span >

I wonder what would be the default timeout for that? 25 seconds? For big messages sent in several sendmsg/recvfrom iterations, I would like if SIGSTOP and gdb on the sending process don't break things.

<span class="quote">&gt; It might be possible to use getsockname() and getpeername() to identify
&gt; whether the pending message has passed a file descriptor to the D-Bus socket
&gt; itself and only time that one out. However, I think we should always do the
&gt; timing out. Otherwise, it's possible for multiple connections to cooperate
&gt; to exhaust the daemon's file descriptor limit by not closing their
&gt; connections.</span >

It can work in some scenario but not all of them. dbus-daemon would need to check whether the received fd is a Unix socket, then use recvfrom(...MSG_PEEK) to get all packets from the socket queue and recursively unpack file descriptors and inspect them. The problem is that the malicious sender could send more packets at any point in the recursive pile of packets and fds. So at the time dbus-daemon checks it could be fine, and then it will become not fine. It could be a time of check / time of use problem. We can check that regularly, each time the timeout about pending fds in DBusMessageLoader is triggered, but it will not help if two different connections (e.g. one on the system bus, one on another bus) get passed to each other.</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Thiago Macieira</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-27 16:30:32 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=80559#c3">comment #3</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=80559#c2">comment #2</a>)
&gt; &gt; I think the only mitigation possible is to timeout messages with pending
&gt; &gt; fds. 
&gt; 
&gt; I wonder what would be the default timeout for that? 25 seconds? For big
&gt; messages sent in several sendmsg/recvfrom iterations, I would like if
&gt; SIGSTOP and gdb on the sending process don't break things.</span >

I'm going to say a little higher. The bus-enforced reply timeout is 5 minutes when enabled, so either we do 5 minutes or half of that.

If we had the ability to change the fd-passing protocol, I'd change it to work as follows:
- send the file descriptors after the header, but before the data payload (instead of between first and second bytes)
- add a header entry that indicates the number of file descriptors being passed
- keep a daemon-wide fixed-size list of file descriptors being passed

That way, we know whether we need to allocate and fd array before receiving them. If the array doesn't have enough room, the connection is suspended until we find room -- and we implement the timing out, so there will eventually be room. Since we know whether a message is passing file descriptors, messages without them will still go through.

The possible attack vectors I can think in this are that multiple connections could cooperate to DoS any file descriptor passing by keeping the daemon list always full. At least connections that aren't exchanging file descriptors would still work.</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Thiago Macieira</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-27 16:32:41 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=80559#c4">comment #4</a>)
<span class="quote">&gt; If we had the ability to change the fd-passing protocol, I'd change it to
&gt; work as follows:
&gt; - send the file descriptors after the header, but before the data payload
&gt; (instead of between first and second bytes)</span >

<span class="quote">&gt; The possible attack vectors I can think in this are that multiple
&gt; connections could cooperate to DoS any file descriptor passing by keeping
&gt; the daemon list always full. At least connections that aren't exchanging
&gt; file descriptors would still work.</span >

Maybe if we instead require the file descriptors to be passed with the *last* byte of the message, we won't have a timeout problem -- the message is complete then.

Actually, it might be possible to implement this if we just add a new capability in the header and negotiate that. After a period of grace, we disable the old extension, so old clients sending file descriptors between the first and second bytes will not be able to pass them anymore.</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-07-21 18:44:13 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=80559#c4">comment #4</a>)
<span class="quote">&gt; - send the file descriptors after the header, but before the data payload
&gt; (instead of between first and second bytes)</span >

File descriptors are not attached to a specific byte of the stream but to a skb (socket buffer). When the client calls sendmsg() with 2 iovecs (one for the header and one for the body of the message as libdbus does) and 1 fd, it is still one skb containing 1 buffer + 1 fd in kernel. And when dbus-daemon receives data with recvmsg(), the buffer received might not have the same boundaries as the skb because it is SOCK_STREAM and not SOCK_DGRAM. Dbus-daemon can receive a buffer coming from 2 skbs with 1 fd for example, and the information about which offset or which skb the fd was attached to is lost from dbus-daemon's perspective.

<span class="quote">&gt; - add a header entry that indicates the number of file descriptors being
&gt; passed</span >

It already exists: header field UNIX_FDS (UINT32).

<span class="quote">&gt; - keep a daemon-wide fixed-size list of file descriptors being passed</span >

At the moment, the list is purely in libdbus, in DBusMessageLoader attached to the DBusConnection.

<span class="quote">&gt; That way, we know whether we need to allocate and fd array before receiving
&gt; them. If the array doesn't have enough room, the connection is suspended
&gt; until we find room -- and we implement the timing out, so there will
&gt; eventually be room. Since we know whether a message is passing file
&gt; descriptors, messages without them will still go through.</span >

When recvmsg() is called without a msg_control buffer (or with a buffer too small for all file descriptors), the kernel cannot place the file descriptors and they get closed and it's not possible to recover them. Dbus-daemon could know they were discarded with msg_flags=MSG_CTRUNC but it does not help. So it must always call recvmsg() with a control buffer for receiving fds.

For this to work, it would require dbus-daemon to call recvmsg with the correct sizes of buffer so two skbs don't get aggregated, instead of calling with a fixed sized buffer of 2kB (max_bytes_read_per_iteration). It would impact the performances negatively.

<span class="quote">&gt; The possible attack vectors I can think in this are that multiple
&gt; connections could cooperate to DoS any file descriptor passing by keeping
&gt; the daemon list always full. At least connections that aren't exchanging
&gt; file descriptors would still work.</span >

Existing connections that aren't exchanging file descriptors are already working, but not new ones. So it is not as bad as it could be.

(In reply to <a href="show_bug.cgi?id=80559#c5">comment #5</a>)
<span class="quote">&gt; Maybe if we instead require the file descriptors to be passed with the
&gt; *last* byte of the message, we won't have a timeout problem -- the message
&gt; is complete then.</span >

I think it would work, but it would require clients to send the message is two separate syscalls sendmsg(): the first with all the bytes of the message except the last byte, and the second with the last byte + the fds.

So it would require changes in dbus libraries used by clients: libdbus, QtDBus.

<span class="quote">&gt; Actually, it might be possible to implement this if we just add a new
&gt; capability in the header and negotiate that. After a period of grace, we
&gt; disable the old extension, so old clients sending file descriptors between
&gt; the first and second bytes will not be able to pass them anymore.</span >

I like the idea but it seems to be a big change in dbus-daemon + in client libraries. So I would prefer if the timeout idea was enough.

I will attach patches about the timeout idea.</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-07-21 18:47:59 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=103210" name="attach_103210" title="[PATCH 1/4] config: add new limit: pending_fd_timeout">attachment 103210</a> <a href="attachment.cgi?id=103210&amp;action=edit" title="[PATCH 1/4] config: add new limit: pending_fd_timeout">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=103210'>[review]</a>
[PATCH 1/4] config: add new limit: pending_fd_timeout</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-07-21 18:48:43 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=103211" name="attach_103211" title="[PATCH 2/4] DBusConnection: implements _dbus_connection_get_pending_fds_count">attachment 103211</a> <a href="attachment.cgi?id=103211&amp;action=edit" title="[PATCH 2/4] DBusConnection: implements _dbus_connection_get_pending_fds_count">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=103211'>[review]</a>
[PATCH 2/4] DBusConnection: implements _dbus_connection_get_pending_fds_count</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-07-21 18:49:23 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=103212" name="attach_103212" title="[PATCH 3/4] DBusConnection: implements _dbus_connection_set_pending_fds_function">attachment 103212</a> <a href="attachment.cgi?id=103212&amp;action=edit" title="[PATCH 3/4] DBusConnection: implements _dbus_connection_set_pending_fds_function">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=103212'>[review]</a>
[PATCH 3/4] DBusConnection: implements _dbus_connection_set_pending_fds_function</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-07-21 18:49:53 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=103213" name="attach_103213" title="[PATCH 4/4] bus: enforce pending_fd_timeout">attachment 103213</a> <a href="attachment.cgi?id=103213&amp;action=edit" title="[PATCH 4/4] bus: enforce pending_fd_timeout">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=103213'>[review]</a>
[PATCH 4/4] bus: enforce pending_fd_timeout</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-03 17:56:38 UTC
        </span>

      </div>




<pre class="bz_comment_text">This looks good in principle, although I'd like to re-review it to be sure.</pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 18:16:42 UTC
        </span>

      </div>




<pre class="bz_comment_text">I think these are fine.

There are some trivial conflicts between <span class=""><a href="attachment.cgi?id=103210" name="attach_103210" title="[PATCH 1/4] config: add new limit: pending_fd_timeout">Attachment #103210</a> <a href="attachment.cgi?id=103210&amp;action=edit" title="[PATCH 1/4] config: add new limit: pending_fd_timeout">[details]</a></span> and the one on <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - CVE-2014-3636: using all available file descriptors in dbus-daemon: limit DEFAULT_MESSAGE_UNIX_FDS"
   href="show_bug.cgi?id=82820">Bug #82820</a>, so when we do the security advisory, we should send out linearized patches.</pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 12:15:19 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=106175" name="attach_106175" title="[PATCH 2/4 v2] DBusConnection: implements  _dbus_connection_get_pending_fds_count">attachment 106175</a> <a href="attachment.cgi?id=106175&amp;action=edit" title="[PATCH 2/4 v2] DBusConnection: implements  _dbus_connection_get_pending_fds_count">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=106175'>[review]</a>
[PATCH 2/4 v2] DBusConnection: implements  _dbus_connection_get_pending_fds_count

From: Alban Crequy &lt;<a href="mailto:alban.crequy&#64;collabora.co.uk">alban.crequy&#64;collabora.co.uk</a>&gt;

This will allow the bus to know whether there are pending file descriptors in a
DBusConnection's DBusMessageLoader.

[fix compilation on platforms that do not HAVE_UNIX_FD_PASSING -smcv]

---

Cross-building with mingw while doing a &quot;test all the configurations&quot; run for a release-candidate:

/home/smcv/src/fdo/dbus-1.8/dbus/dbus-message.c: In function '_dbus_message_loader_get_pending_fds_count':
/home/smcv/src/fdo/dbus-1.8/dbus/dbus-message.c:4515:16: error: 'DBusMessageLoader' has no member named 'n_unix_fds'
   return loader-&gt;n_unix_fds;

I think the solution (wrap it in #ifdef) is trivial enough to not really need review, but if someone could glance at it and say yes, that would be reassuring.</pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 12:27:52 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=80559#c13">comment #13</a>)
<span class="quote">&gt; I think the solution (wrap it in #ifdef) is trivial enough to not really
&gt; need review, but if someone could glance at it and say yes, that would be
&gt; reassuring.</span >

I've not tested it but the wrapping looks good to me.</pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 15:39:10 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=106191" name="attach_106191" title="[backport to 1.6] config: add new limit: pending_fd_timeout">attachment 106191</a> <a href="attachment.cgi?id=106191&amp;action=edit" title="[backport to 1.6] config: add new limit: pending_fd_timeout">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=106191'>[review]</a>
[backport to 1.6] config: add new limit: pending_fd_timeout

---

Just some conflicts in cmake/bus/dbus-daemon.xml.</pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 15:40:21 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=106192" name="attach_106192" title="[backport to 1.6, 2/4] DBusConnection: implements _dbus_connection_get_pending_fds_count">attachment 106192</a> <a href="attachment.cgi?id=106192&amp;action=edit" title="[backport to 1.6, 2/4] DBusConnection: implements _dbus_connection_get_pending_fds_count">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=106192'>[review]</a>
[backport to 1.6, 2/4] DBusConnection: implements _dbus_connection_get_pending_fds_count

---

Some conflicts with the change that fixed thread-safety-by-default.</pre>
    </div>

    <div id="c17" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 15:41:23 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=106193" name="attach_106193" title="[backport to 1.6, 3/4] DBusConnection: implements _dbus_connection_set_pending_fds_function">attachment 106193</a> <a href="attachment.cgi?id=106193&amp;action=edit" title="[backport to 1.6, 3/4] DBusConnection: implements _dbus_connection_set_pending_fds_function">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=106193'>[review]</a>
[backport to 1.6, 3/4] DBusConnection: implements _dbus_connection_set_pending_fds_function

---

Likewise.

Patch 4/4 &quot;enforce pending_fd_timeout&quot; does not need backporting, just apply the same one.</pre>
    </div>

    <div id="c18" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 16:16:02 UTC
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class=""><a href="attachment.cgi?id=106191" name="attach_106191" title="[backport to 1.6] config: add new limit: pending_fd_timeout">attachment 106191</a> <a href="attachment.cgi?id=106191&amp;action=edit" title="[backport to 1.6] config: add new limit: pending_fd_timeout">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=106191'>[review]</a>
[backport to 1.6] config: add new limit: pending_fd_timeout

Review of <span class=""><a href="attachment.cgi?id=106191" name="attach_106191" title="[backport to 1.6] config: add new limit: pending_fd_timeout">attachment 106191</a> <a href="attachment.cgi?id=106191&amp;action=edit" title="[backport to 1.6] config: add new limit: pending_fd_timeout">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=80559&amp;attachment=106191'>[review]</a>:
-----------------------------------------------------------------

This probably requires fixing <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - CVE-2014-3638: Flooding dbus-daemon with pending replies: denial of service"
   href="show_bug.cgi?id=81053">Bug #81053</a>, <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - CVE-2014-3636: using all available file descriptors in dbus-daemon: limit DEFAULT_MESSAGE_UNIX_FDS"
   href="show_bug.cgi?id=82820">Bug #82820</a>, <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - CVE-2014-3639: Security implications of Bug #80851 - max_incomplete_connections"
   href="show_bug.cgi?id=80919">Bug #80919</a> first, because they all touch the list of limits.</pre>
    </div>

    <div id="c19" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 22:17:33 UTC
        </span>

      </div>




<pre class="bz_comment_text">CVE-2014-3637 has been allocated for this vulnerability.</pre>
    </div>

    <div id="c20" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=80559#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-16 16:34:07 UTC
        </span>

      </div>




<pre class="bz_comment_text">Fixed in 1.8.8, raising embargo</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=80559">Format For Printing</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>


</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>
<p align="center">
  Use of freedesktop.org services, including Bugzilla, is subject to our <a href="https://www.freedesktop.org/wiki/CodeOfConduct/">Code of Conduct</a>. How we collect and use information is described in our <a href="https://www.freedesktop.org/wiki/PrivacyPolicy">Privacy Policy</a>.
</p>
  </body>
</html>