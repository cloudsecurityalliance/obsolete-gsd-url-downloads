<!DOCTYPE html>
<html lang="en">
  <head>
    <title>8827 &ndash; BTHCI_ACL dissector crash</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link href="data/assets/64b49332a92937374625c24ed9a89c85.css?1635022386" rel="stylesheet" type="text/css">

<link href="data/assets/f6911ed8e5a97f108734d9324cb6bd67.css?1635022386" rel="stylesheet" type="text/css">

    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1635022386"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "8827 – BTHCI_ACL dissector crash",
                             "show_bug.cgi?id=8827" );
        document.title = "8827 – BTHCI_ACL dissector crash";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "8827 – BTHCI_ACL dissector crash", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1635022386"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-wireshark-org-bugzilla
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_Wireshark
                 bz_component_GTK&#X2B;_UI
                 bz_bug_8827 yui-skin-sam">

  <div id="header"><div id="banner">
      <a href="/bugzilla/"><img id="badge" src="/image/wsbadge-bug@186x57.png"></a>
      <span id="banner-text">
        Wireshark Bug Database &ndash; Bug&nbsp;8827
      </span>
      <div id="subtitle">
        <p class="subheader">BTHCI_ACL dissector crash</p>
      </div>

       <div id="motd_yellow">

<p>
This Bugzilla instance was migrated to <a href="https://gitlab.com/wireshark/wireshark">GitLab</a> on Sunday, August 23.
</p>


<p>
This bug has been migrated to <a href="https://gitlab.com/wireshark/wireshark/-/issues/8827">issue 8827</a> in the <a href="https://gitlab.com/wireshark/wireshark/-/issues">GitLab issue tracker</a>.
It can be viewed and updated there.
</p>


</p>

<p>
See the <a href="https://gitlab.com/wireshark/gitlab-migration/wikis/home">migration wiki</a> for more details.
</p>

       </div>


    </div>

<!-- WS: Title info is in the banner
    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;8827</span>
  
        <span id="subtitle" class="subheader">BTHCI_ACL dissector crash</span>

        <span id="information" class="header_addl_info">Last modified: 2013-09-11 11:54:47 UTC</span>
    </div>
  -->


    <div id="common_links"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=8827&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=8827" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=8827&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635621961-Zk8nx_z1JydgNukCIzfaJWfueaw4POkYQfiHGtUwp5g">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2013-09-11 11:54:47">
  <input type="hidden" name="id" value="8827">
  <input type="hidden" name="token" value="1635621961-7aLgrtfzltg4FN7XeoJzQoOlqhuvEcdwHjShlxXC3VU">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=8827"><b>Bug&nbsp;8827</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">BTHCI_ACL dissector crash</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>BTHCI_ACL dissector crash
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'BTHCI_ACL dissector crash' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Wireshark

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Wireshark"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >GTK+ UI

  (<a href="buglist.cgi?component=GTK%2B%20UI&amp;product=Wireshark&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>1.10.1
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">x86-64
        Ubuntu
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>Low
       Major<span id="votes_container">
    (<a href="page.cgi?id=voting/user.html&amp;bug_id=8827#vote_8827">vote</a>)
  </span>
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Bugzilla Administrator</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'bugzilla-admin\x40wireshark.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2013-06-20 01:14 UTC by <span class="vcard"><span class="fn">Laurent Butti</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2013-09-11 11:54 UTC
      (<a href="show_activity.cgi?id=8827">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>2 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="eapache">eapache</option>
                <option value="jeff.morriss.ws">jeff.morriss.ws</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" ><ul class="bug_urls">
          <li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-5717">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-5717</a>
          </li></ul>

</td>
    </tr> 

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_application_cap">
        <td>
            <a href="attachment.cgi?id=11028"
               title="View the content of the attachment">
          <b>capture</b></a>

          <span class="bz_attach_extra_info">
              (4.70 MB,
                application/cap)

            <br>
            <a href="#attach_11028"
               title="Go to the comment associated with the attachment">2013-06-20 01:14 UTC</a>,

            <span class="vcard"><span class="fn">Laurent Butti</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=11028&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
        </span>
        <a href="attachment.cgi?bugid=8827&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=8827&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1490378926" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8827#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laurent Butti</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-06-20 01:14:14 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=11028" name="attach_11028" title="capture">attachment 11028</a> <a href="attachment.cgi?id=11028&amp;action=edit" title="capture">[details]</a></span>
capture

Build Information:
TShark 1.10.0 (SVN Rev Unknown from unknown)

Copyright 1998-2013 Gerald Combs &lt;<a href="/cdn-cgi/l/email-protection#e6818394878a82c0c5d0d2dd918f9483958e87948dc8899481">gerald&#64;wireshark.org</a>&gt; and contributors.
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Compiled (64-bit) with GLib 2.32.3, with libpcap, with libz 1.2.3.4, without
POSIX capabilities, without libnl, without SMI, without c-ares, without ADNS,
with Lua 5.1, without Python, with GnuTLS 2.12.14, with Gcrypt 1.5.0, with MIT
Kerberos, without GeoIP.

Running on Linux 3.2.0-43-generic, with locale en_US.UTF-8, with libpcap version
1.1.1, with libz 1.2.3.4.
AMD Athlon(tm) Dual Core Processor 5000B

Built using gcc 4.6.3.
--
Hi,

Here is a PCAP file triggering a SIGABRT that could enable (at least) a remote
party to trigger a denial of service.

This file was generated thanks to a fuzz testing campaign.

Laurent Butti.

--

Program received signal SIGABRT, Aborted.
0x00007ffff297f425 in __GI_raise (sig=&lt;optimized out&gt;) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64
64  ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.
(gdb) bt
#0  0x00007ffff297f425 in __GI_raise (sig=&lt;optimized out&gt;) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64
#1  0x00007ffff2982b8b in __GI_abort () at abort.c:91
#2  0x00007ffff36d6f9d in g_assertion_message () from /lib/x86_64-linux-gnu/libglib-2.0.so.0
#3  0x00007ffff36d74c2 in g_assertion_message_expr () from /lib/x86_64-linux-gnu/libglib-2.0.so.0
#4  0x00007ffff58a52f9 in wmem_block_alloc (private_data=0x655060, size=1218) at wmem_allocator_block.c:684
#5  0x00007ffff4f69234 in dissect_bthci_acl (tvb=0x17678c0, pinfo=0x7fffffffd630, tree=0x1789290) at packet-bthci_acl.c:376
#6  0x00007ffff4e2f2a8 in call_dissector_through_handle (handle=0x6ea3e0, tvb=0x17678c0, pinfo=0x7fffffffd630, tree=0x1789290, data=0x0) at packet.c:458
#7  0x00007ffff4e2fbc5 in call_dissector_work (handle=0x6ea3e0, tvb=0x17678c0, pinfo_arg=0x7fffffffd630, tree=0x1789290, add_proto_name=1, data=0x0)
    at packet.c:549
#8  0x00007ffff4e30453 in dissector_try_uint_new (sub_dissectors=&lt;optimized out&gt;, uint_val=2, tvb=0x17678c0, pinfo=0x7fffffffd630, tree=0x1789290, 
    add_proto_name=1, data=0x0) at packet.c:966
#9  0x00007ffff4e304a7 in dissector_try_uint (sub_dissectors=&lt;optimized out&gt;, uint_val=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, 
    tree=&lt;optimized out&gt;) at packet.c:992
#10 0x00007ffff515ccd6 in dissect_hci_h4 (tvb=&lt;optimized out&gt;, pinfo=0x7fffffffd630, tree=0x1789290) at packet-hci_h4.c:125
#11 0x00007ffff4e2f2a8 in call_dissector_through_handle (handle=0xbd5360, tvb=0x1762a40, pinfo=0x7fffffffd630, tree=0x1789290, data=0x0) at packet.c:458
#12 0x00007ffff4e2fbc5 in call_dissector_work (handle=0xbd5360, tvb=0x1762a40, pinfo_arg=0x7fffffffd630, tree=0x1789290, add_proto_name=1, data=0x0)
    at packet.c:549
#13 0x00007ffff4e30453 in dissector_try_uint_new (sub_dissectors=&lt;optimized out&gt;, uint_val=99, tvb=0x1762a40, pinfo=0x7fffffffd630, tree=0x1789290, 
    add_proto_name=1, data=0x0) at packet.c:966
#14 0x00007ffff4e304a7 in dissector_try_uint (sub_dissectors=&lt;optimized out&gt;, uint_val=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, 
    tree=&lt;optimized out&gt;) at packet.c:992
#15 0x00007ffff50c5108 in dissect_frame (tvb=0x1762a40, pinfo=0x7fffffffd630, parent_tree=0x1789290) at packet-frame.c:481
#16 0x00007ffff4e2f2a8 in call_dissector_through_handle (handle=0x7524f0, tvb=0x1762a40, pinfo=0x7fffffffd630, tree=0x1789290, data=0x0) at packet.c:458
#17 0x00007ffff4e2fbc5 in call_dissector_work (handle=0x7524f0, tvb=0x1762a40, pinfo_arg=0x7fffffffd630, tree=0x1789290, add_proto_name=1, data=0x0)
    at packet.c:549
#18 0x00007ffff4e31991 in call_dissector_with_data (handle=&lt;optimized out&gt;, tvb=0x1762a40, pinfo=0x7fffffffd630, tree=0x1789290, data=&lt;optimized out&gt;)
    at packet.c:2073
#19 0x00007ffff4e31d64 in dissect_packet (edt=0x7fffffffd620, phdr=0xffffffffffffffc0, pd=0x17361d0 &quot;\002\f&quot;, fd=0x7fffffffd810, cinfo=0x0) at packet.c:392
#20 0x00007ffff4e277dc in epan_dissect_run_with_taps (edt=0x7fffffffd620, phdr=0x1731120, data=0x17361d0 &quot;\002\f&quot;, fd=0x7fffffffd810, cinfo=&lt;optimized out&gt;)
    at epan.c:217
#21 0x000000000041935e in process_packet (cf=0x643b00, offset=&lt;optimized out&gt;, whdr=0x1731120, pd=0x17361d0 &quot;\002\f&quot;, 
    filtering_tap_listeners=&lt;optimized out&gt;, tap_flags=&lt;optimized out&gt;) at tshark.c:3251
#22 0x000000000040b519 in load_cap_file (max_byte_count=0, max_packet_count=-22450, out_file_name_res=0, out_file_type=2, save_file=0x0, cf=&lt;optimized out&gt;)
    at tshark.c:3046
#23 main (argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;) at tshark.c:1918
(gdb) python import exploitable
(gdb) exploitable -v
'exploitable' version 1.04
Linux nitro 3.2.0-43-generic #68-Ubuntu SMP Wed May 15 03:33:33 UTC 2013 x86_64
Signal si_signo: 6 Signal si_addr: 0x3e800002a23
Nearby code:
   0x00007ffff297f415 &lt;+37&gt;:    movsxd rdx,edi
   0x00007ffff297f418 &lt;+40&gt;:    movsxd rsi,esi
   0x00007ffff297f41b &lt;+43&gt;:    movsxd rdi,eax
   0x00007ffff297f41e &lt;+46&gt;:    mov    eax,0xea
   0x00007ffff297f423 &lt;+51&gt;:    syscall 
=&gt; 0x00007ffff297f425 &lt;+53&gt;:    cmp    rax,0xfffffffffffff000
   0x00007ffff297f42b &lt;+59&gt;:    ja     0x7ffff297f43f &lt;__GI_raise+79&gt;
   0x00007ffff297f42d &lt;+61&gt;:    repz ret 
   0x00007ffff297f42f &lt;+63&gt;:    nop
   0x00007ffff297f430 &lt;+64&gt;:    test   eax,eax
Stack trace:
#  0 __GI_raise at 0x7ffff297f425 in /lib/x86_64-linux-gnu/libc-2.15.so (BL)
#  1 __GI_abort at 0x7ffff2982b8b in /lib/x86_64-linux-gnu/libc-2.15.so (BL)
#  2 g_assertion_message at 0x7ffff36d6f9d in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.3
#  3 g_assertion_message_expr at 0x7ffff36d74c2 in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.3
#  4 wmem_block_alloc at 0x7ffff58a52f9 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
#  5 dissect_bthci_acl at 0x7ffff4f69234 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
#  6 call_dissector_through_handle at 0x7ffff4e2f2a8 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
#  7 call_dissector_work at 0x7ffff4e2fbc5 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
#  8 dissector_try_uint_new at 0x7ffff4e30453 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
#  9 dissector_try_uint at 0x7ffff4e304a7 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 10 dissect_hci_h4 at 0x7ffff515ccd6 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 11 call_dissector_through_handle at 0x7ffff4e2f2a8 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 12 call_dissector_work at 0x7ffff4e2fbc5 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 13 dissector_try_uint_new at 0x7ffff4e30453 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 14 dissector_try_uint at 0x7ffff4e304a7 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 15 dissect_frame at 0x7ffff50c5108 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 16 call_dissector_through_handle at 0x7ffff4e2f2a8 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 17 call_dissector_work at 0x7ffff4e2fbc5 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 18 call_dissector_with_data at 0x7ffff4e31991 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 19 dissect_packet at 0x7ffff4e31d64 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 20 epan_dissect_run_with_taps at 0x7ffff4e277dc in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 21 process_packet at 0x41935e in /home/laurent/fuzzing/bin/wireshark-1.10.0/bin/tshark
# 22 load_cap_file at 0x40b519 in /home/laurent/fuzzing/bin/wireshark-1.10.0/bin/tshark
# 23 main at 0x40b519 in /home/laurent/fuzzing/bin/wireshark-1.10.0/bin/tshark
Faulting frame: #  2 g_assertion_message at 0x7ffff36d6f9d in /lib/x86_64-linux-gnu/libglib-2.0.so.0.3200.3
Description: Abort signal
Short description: AbortSignal (19/21)
Hash: 1c18250a17e23c149889f1de428428a0.5fdfbd5b03c2b35b4cfdb1d05dc0a31a
Exploitability Classification: UNKNOWN
Explanation: The target is stopped on a SIGABRT. SIGABRTs are often generated by libc and compiled check-code to indicate potentially exploitable conditions. Unfortunately this command does not yet further analyze these crashes.</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8827#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-06-30 14:37:40 UTC
        </span>

      </div>




<pre class="bz_comment_text">I can't reproduce this in trunk or trunk-1.10.  I also tried rolling back a couple of recent BT fixes and still no joy.

Do you have the assertion message that is coming out (of stderr/stdout) when this crash happened?  Can you still reproduce it, in particular with the latest trunk-1.10 version?

I did fix an uninitialized-read error in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=50268">r50268</a> but I don't see how that could lead to the crash you got.</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8827#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laurent Butti</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-07-01 04:03:42 UTC
        </span>

      </div>




<pre class="bz_comment_text">Here is on release 1.10.0:

ERROR:wmem_allocator_block.c:684:wmem_block_alloc: assertion failed: (size &lt;= WMEM_CHUNK_DATA_LEN(chunk))

I will check on latest trunk-1.10.</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8827#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laurent Butti</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-08-02 08:13:58 UTC
        </span>

      </div>




<pre class="bz_comment_text">Still present in 1.10.1, same assertion message</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8827#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-08-02 11:06:34 UTC
        </span>

      </div>




<pre class="bz_comment_text">Oddly enough, I can now reproduce this in trunk-1.10 (but not in trunk).

More info from the core:

~~~
(gdb) down
#4  0x00007f9928662429 in wmem_block_alloc (private_data=0x1e47060, size=1218) at wmem_allocator_block.c:684
684	    g_assert(size &lt;= WMEM_CHUNK_DATA_LEN(chunk));
(gdb) print *chunk
$3 = {
  used = 0, 
  prev = 56, 
  last = 1, 
  len = 544
}
~~~

Evan, the problem here would probably be a lot more obvious to you than to me...</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8827#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-08-02 11:16:40 UTC
        </span>

      </div>




<pre class="bz_comment_text">Try valgrinding it. Usually assertions like this are when a dissector overwrites some of wmem's metadata. If there are no errors then I'll take a look.</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8827#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-08-02 11:18:23 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8827#c5">comment #5</a>)
<span class="quote">&gt; Try valgrinding it. Usually assertions like this are when a dissector
&gt; overwrites some of wmem's metadata. If there are no errors then I'll take a
&gt; look.</span >

(wmem seems to be much more sensitive to that sort of thing than glib, not sure if that's a good thing or not)</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8827#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-08-02 11:28:41 UTC
        </span>

      </div>




<pre class="bz_comment_text">Valgrind says there's a pile of uninitialized-reads like:

~~~
==22464== Conditional jump or move depends on uninitialised value(s)
==22464==    at 0x61EE104: dissect_adwin_config (packet-adwin-config.c:459)
==22464==    by 0x618AE2F: dissector_try_heuristic (packet.c:1804)
==22464==    by 0x681BF2D: decode_udp_ports (packet-udp.c:282)
==22464==    by 0x681C58F: dissect (packet-udp.c:596)
==22464==    by 0x6188FB7: call_dissector_through_handle (packet.c:458)
==22464==    by 0x61897EC: call_dissector_work (packet.c:549)
==22464==    by 0x618A03F: dissector_try_uint_new (packet.c:966)
==22464==    by 0x618A096: dissector_try_uint (packet.c:992)
==22464==    by 0x6514B57: dissect_ip (packet-ip.c:2417)
==22464==    by 0x6188FB7: call_dissector_through_handle (packet.c:458)
==22464==    by 0x61897EC: call_dissector_work (packet.c:549)
==22464==    by 0x618A03F: dissector_try_uint_new (packet.c:966)
~~~

But it doesn't say anything about out-of-bounds writes.

(I can take a look at the wmem thing later if you don't have time.)</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8827#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-08-02 11:54:08 UTC
        </span>

      </div>




<pre class="bz_comment_text">I am seeing the same uninitialized errors, but no assertion.

I have just scanned the relevant code again, and that assertion is (as far as I can tell) provably impossible. The very last thing that happens before the assertion is that if there isn't room, a new block is allocated (of size 8MB) so there should *always* be room.

If you can set a GDB breakpoint just before (I'm not sure how easy it will be to find the correct iteration) and step through, keep an eye on allocator-&gt;free_list_head... This is very odd.

(Another thing to try would be to copy over the trunk version of wmem_allocator_block and see if you can still reproduce. It shouldn't have any dependencies.)</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8827#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-08-02 16:04:41 UTC
        </span>

      </div>




<pre class="bz_comment_text">On my home Ubuntu box I am also seeing the assertion. Unfortunately, the internal allocator API has changed on trunk, so it is not trivial to try the trunk allocator in 1.10.

Unfortunately I am out of time to look at this right now, and I'm not back until the middle of next week. I will look at it then if you can't figure it out.</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8827#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-08-02 18:50:16 UTC
        </span>

      </div>




<pre class="bz_comment_text">Probably fixed in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=51130">r51130</a> (I had an idea while I wasn't supposed to be thinking about this). This just reinforces that my original allocator design kind of sucked, but the one in trunk now is much nicer and shouldn't suffer from this sort of issue.

I'll leave it open until someone else can verify that it's really fixed (and until the valgrind errors are fixed).</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8827#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-08-03 08:05:01 UTC
        </span>

      </div>




<pre class="bz_comment_text">Thanks--it works for me now too.  The Valgrind errors don't happen on trunk; they were fixed with<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=50268">r50268</a> (<a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - BTHCI_ACL dissector crash"
   href="show_bug.cgi?id=8827">bug 8827</a>) so I think this can be closed now.  I'll add your rev to the roadmap.

Making public now that the bug is fixed.</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=8827">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=8827">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=8827">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=8827&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=8827" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=8827&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635621962-PJ99IMRo45dkNidqod8Ni_lbkCxpvSEv15vqQo2ygeA">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>