<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='Reproducible crash Bug #68819 - RDF' href='rss/bug.php?id=68819'>
        <link rel='alternate' type='application/rss+xml' title='Reproducible crash Bug #68819 - RSS 2.0' href='rss/bug.php?id=68819&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Sec Bug #68819 :: Fileinfo on specific file causes spurious OOM and/or segfault</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=68819">Sec Bug</a>&nbsp;#68819</th>
            <td id="summary" colspan="5">Fileinfo on specific file causes spurious OOM and/or segfault</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2015-01-12 22:53 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2016-02-11 14:08 UTC</td>
            <td rowspan="6">

                <table id="votes">
                    <tr><th class="details">Votes:</th><td>2</td></tr>
                    <tr><th class="details">Avg. Score:</th><td>5.0 &plusmn; 0.0</td></tr>
                    <tr><th class="details">Reproduced:</th><td>2 of 2 (100.0%)</td></tr>
                    <tr><th class="details">Same Version:</th><td>1 (50.0%)</td></tr>
                    <tr><th class="details">Same OS:</th><td>0 (0.0%)</td></tr>
                </table>

            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>dominic &#x61;&#116; varspool &#x64;&#111;&#x74; com</td>
            <th class="details">Assigned:</th>
            <td><a href="search.php?cmd=display&amp;assign=ab">ab</a> (<a href="https://people.php.net/ab">profile</a>)</td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=Reproducible+crash">Reproducible crash</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>5.6.4</td>
            <th class="details">OS:</th>
            <td>Linux/MacOS/any?</td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4604" target="_blank">2015-4604</a></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=68819&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=68819&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=68819&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1421103209">&nbsp;</a><strong>[2015-01-12 22:53 UTC] dominic &#x61;&#116; varspool &#x64;&#111;&#x74; com</strong>
<pre class='note'>Description:
------------
When calling finfo::file() or finfo::buffer() with a crafted string, PHP will crash by either segfaulting or trying to allocate an large amount of memory (4GiB).

This was found in the wild when a user uploaded a file (running finfo on arbitrary files uploaded by users is one of its main use cases.). I've since anonymised the file, and made it more minimal. At this stage, very small changes to the string make it produce different behaviour - removing the remaining 'a', 's', or 'y' characters, for instance, will allow finfo to process it fine.

I suspect a bad magic rule (but I can't tell which from gdb).




Test script:
---------------
The basic test script is:

&lt;?php

$string = &lt;magic value&gt;

$finfo = new finfo();
$type = $finfo-&gt;buffer($string);
var_dump($type);

?&gt;

Here are 3v4l links to versions of the magic value that cause unexpected behaviour:
  Spurious OOM error (tried to allocate 4GB): <a href="http://3v4l.org/gOeJ3" rel="nofollow">http://3v4l.org/gOeJ3</a>
  Segfault: <a href="http://3v4l.org/HghCY" rel="nofollow">http://3v4l.org/HghCY</a>

The difference in the strings in the two versions is an single '-' before the first CRLF linebreak.

The behaviour is the same when the string is written to a file and loaded with finfo::file().

Expected result:
----------------
string(60) &quot;ASCII text, with very long lines, with CRLF line terminators&quot;

Actual result:
--------------
With one string:
  Fatal error: Allowed memory size of 67108864 bytes exhausted (tried to allocate 4294967295 bytes) in &lt;script&gt; on line X

With a very slightly different string:
  Segmentation fault

Here's the backtrace:

#0  __memcpy_sse2_unaligned () at ../sysdeps/x86_64/multiarch/memcpy-sse2-unaligned.S:36
#1  0x00000000007ce518 in _estrndup (
    s=0x7f692d976071 &quot;-------a&quot;, '-' &lt;repeats 12 times&gt;, &quot;s-----''------a----s--------a&quot;, '-' &lt;repeats 13 times&gt;, &quot;a-\r\n&quot;, length=4294967295, __zend_filename=0xbfd968 &quot;/home/someone/php-5.6.4/ext/fileinfo/libmagic/softmagic.c&quot;,
    __zend_lineno=2108, __zend_orig_filename=0x0, __zend_orig_lineno=0)
    at /home/someone/php-5.6.4/Zend/zend_alloc.c:2655
#2  0x00000000005c3ebf in magiccheck (ms=0x7f692db41978, m=0xbbb460 &lt;php_magic_database+2544480&gt;)
    at /home/someone/php-5.6.4/ext/fileinfo/libmagic/softmagic.c:2108
#3  0x00000000005bf080 in match (ms=0x7f692db41978, magic=0x94e1f8 &lt;php_magic_database+248&gt;, nmagic=10428,
    s=0x7f692d974070 &quot;----a-----'''---------a&quot;, '-' &lt;repeats 15 times&gt;, &quot;a--------a-----a-----a---------a-----as-------a----a--a&quot;, '-' &lt;repeats 13 times&gt;, &quot;a--as-----s&quot;, '-' &lt;repeats 15 times&gt;, &quot;a---------a---a--s-a-----a&quot;, '-' &lt;repeats 11 times&gt;, &quot;asy---------a-----a&quot;, '-' &lt;repeats 11 times&gt;, &quot;a&quot;..., nbytes=8259, offset=0, mode=64, text=1, flip=0,
    recursion_level=0, printed_something=0x7fff3a875c5c, need_separator=0x7fff3a875c60, returnval=0x7fff3a875bac)
    at /home/someone/php-5.6.4/ext/fileinfo/libmagic/softmagic.c:274
#4  0x00000000005beae0 in file_softmagic (ms=0x7f692db41978,
    buf=0x7f692d974070 &quot;----a-----'''---------a&quot;, '-' &lt;repeats 15 times&gt;, &quot;a--------a-----a-----a---------a-----as-------a----a--a&quot;, '-' &lt;repeats 13 times&gt;, &quot;a--as-----s&quot;, '-' &lt;repeats 15 times&gt;, &quot;a---------a---a--s-a-----a&quot;, '-' &lt;repeats 11 times&gt;, &quot;asy---------a-----a&quot;, '-' &lt;repeats 11 times&gt;, &quot;a&quot;..., nbytes=8259, level=0, mode=64, text=1)
    at /home/someone/php-5.6.4/ext/fileinfo/libmagic/softmagic.c:93
#5  0x00000000005b6414 in file_ascmagic_with_encoding (ms=0x7f692db41978,
    buf=0x7f692da28dc0 &quot;----a-----'''---------a&quot;, '-' &lt;repeats 15 times&gt;, &quot;a--------a-----a-----a---------a-----as-------a----a--a&quot;, '-' &lt;repeats 13 times&gt;, &quot;a--as-----s&quot;, '-' &lt;repeats 15 times&gt;, &quot;a---------a---a--s-a-----a&quot;, '-' &lt;repeats 11 times&gt;, &quot;asy---------a-----a&quot;, '-' &lt;repeats 11 times&gt;, &quot;a&quot;..., nbytes=8259, ubuf=0x2d37a60, ulen=8259,
    code=0xbfcdd3 &quot;ASCII&quot;, type=0xbfcdbf &quot;text&quot;, text=1)
    at /home/someone/php-5.6.4/ext/fileinfo/libmagic/ascmagic.c:149
#6  0x00000000005b6230 in file_ascmagic (ms=0x7f692db41978,
    buf=0x7f692da28dc0 &quot;----a-----'''---------a&quot;, '-' &lt;repeats 15 times&gt;, &quot;a--------a-----a-----a---------a-----as-------a----a--a&quot;, '-' &lt;repeats 13 times&gt;, &quot;a--as-----s&quot;, '-' &lt;repeats 15 times&gt;, &quot;a---------a---a--s-a-----a&quot;, '-' &lt;repeats 11 times&gt;, &quot;asy---------a-----a&quot;, '-' &lt;repeats 11 times&gt;, &quot;a&quot;..., nbytes=8259, text=1)
    at /home/someone/php-5.6.4/ext/fileinfo/libmagic/ascmagic.c:92
#7  0x00000000005bc45e in file_buffer (ms=0x7f692db41978, stream=0x0, inname=0x0, buf=0x7f692da28dc0, nb=8259)
    at /home/someone/php-5.6.4/ext/fileinfo/libmagic/funcs.c:264
#8  0x00000000005bd62c in magic_buffer (ms=0x7f692db41978, buf=0x7f692da28dc0, nb=8259)
    at /home/someone/php-5.6.4/ext/fileinfo/libmagic/magic.c:435
#9  0x00000000005af439 in _php_finfo_get_type (ht=1, return_value=0x7f692db3f320, return_value_ptr=0x7f692db07210,
    this_ptr=0x7f692db3cc20, return_value_used=1, mode=0, mimetype_emu=0)
    at /home/someone/php-5.6.4/ext/fileinfo/fileinfo.c:476
#10 0x00000000005af9a2 in zif_finfo_buffer (ht=1, return_value=0x7f692db3f320, return_value_ptr=0x7f692db07210,
    this_ptr=0x7f692db3cc20, return_value_used=1) at /home/someone/php-5.6.4/ext/fileinfo/fileinfo.c:588
#11 0x000000000084c4a7 in zend_do_fcall_common_helper_SPEC (execute_data=0x7f692db072e8)
    at /home/someone/php-5.6.4/Zend/zend_vm_execute.h:558
#12 0x000000000084cc7e in ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER (execute_data=0x7f692db072e8)
    at /home/someone/php-5.6.4/Zend/zend_vm_execute.h:693
#13 0x000000000084bb16 in execute_ex (execute_data=0x7f692db072e8)
    at /home/someone/php-5.6.4/Zend/zend_vm_execute.h:363
#14 0x000000000084bb9f in zend_execute (op_array=0x7f692db3dbb8) at /home/someone/php-5.6.4/Zend/zend_vm_execute.h:388
#15 0x00000000008079c8 in zend_execute_scripts (type=8, retval=0x0, file_count=3)
    at /home/someone/php-5.6.4/Zend/zend.c:1344
#16 0x000000000076e291 in php_execute_script (primary_file=0x7fff3a8786c0) at /home/someone/php-5.6.4/main/main.c:2584
#17 0x00000000008b9f9d in do_cli (argc=2, argv=0x2ba9bd0) at /home/someone/php-5.6.4/sapi/cli/php_cli.c:994
#18 0x00000000008bb2cb in main (argc=2, argv=0x2ba9bd0) at /home/someone/php-5.6.4/sapi/cli/php_cli.c:1378


</pre>
</div><h2>Patches</h2>
<a href="patch-display.php?bug_id=68819&amp;patch=bug68819&amp;revision=latest" >bug68819</a>
(last revision 2015-03-02 13:23 UTC by ab@php.net)
<br><a href="patch-display.php?bug_id=68819&amp;patch=bug68819_56.patch&amp;revision=latest"  style="background-color: yellow; text-decoration: line-through;" >bug68819_56.patch</a>
(last revision 2015-02-05 15:56 UTC by ab@php.net)
<br><a href="patch-display.php?bug_id=68819&amp;patch=bug68819_54.patch&amp;revision=latest"  style="background-color: yellow; text-decoration: line-through;" >bug68819_54.patch</a>
(last revision 2015-02-05 15:55 UTC by ab@php.net)
<br><p><a href='patch-add.php?bug_id=68819'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=68819'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_comment' ><a name="1421103527">&nbsp;</a><strong>[2015-01-12 22:58 UTC] dominic &#x61;&#116; varspool &#x64;&#111;&#x74; com</strong>
<pre class='note'>This appears to have been introduced in August/September. The affected versions are:

5.4.32+
5.5.16+
all versions of 5.6
7@20140901


Unaffected is:

5.4.31
5.5.15
and earlier.
</pre>
</div><div class='comment type_log' ><a name="1423119309">&nbsp;</a><strong>[2015-02-05 06:55 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Type:           Bug</span>
<span class="added">+Type:           Security</span>
<span class="removed">-Assigned To:</span>
<span class="added">+Assigned To:    ab</span>
<span class="removed">-Private report: No</span>
<span class="added">+Private report: Yes</span>
</div></div></div><div class='comment type_comment' ><a name="1423138535">&nbsp;</a><strong>[2015-02-05 12:15 UTC] dominic &#x61;&#116; varspool &#x64;&#111;&#x74; com</strong>
<pre class='note'>Here's a much reduced test case:

&lt;?php

$string = '';

// These two in any order
$string .= &quot;\r\n&quot;;
$string .= &quot;''''&quot;;

// Total string length &gt; 8192
$string .= str_repeat(chr(rand(32, 127)), 8184);

// Ending in this string
$string .= &quot;say&quot;;

$finfo = new finfo();
$type = $finfo-&gt;buffer($string);
var_dump($type);

?&gt;
</pre>
</div><div class='comment type_comment' ><a name="1423144391">&nbsp;</a><strong>[2015-02-05 13:53 UTC] dominic &#x61;&#116; varspool &#x64;&#111;&#x74; com</strong>
<pre class='note'>I've learnt a fair bit more about this.

The bug is triggered by this rule
(<a href="https://github.com/php/php-src/blob/master@%7B2015-02-06%7D/ext/fileinfo/tests/magic#L16237" rel="nofollow">https://github.com/php/php-src/blob/master@%7B2015-02-06%7D/ext/fileinfo/tests/magic#L16237</a>):

0	search/4096	&quot;&quot;&quot;
&gt;&amp;0	regex	.*&quot;&quot;&quot;$	Python script text executable
!:mime text/x-python

Specifically, while considering the continuation rule, during the
second call to file_softmagic() - during
file_ascmagic_with_encoding().

Say the buffer you're performing finfo on has a length of 9000 bytes.
At about line 247 in softmagic.c on current master, the OFFADD flag is
set for this rule, so ms-&gt;c.li[cont_level - 1].off is added to the
magic_set's offset, bringing its value from 0 to 9000. I think this is
the root cause, because the rule that is being continued should have
matched at a very early offset (a few bytes into the later test case's
string). So perhaps the c.li array is being filled out incorrectly by
the main rule, or incorrectly flushed?

So, ms-&gt;offset ends up being 9000 instead of 0.

Then, a little later, we end up calling mget() (softmagic.c, L1161)
with:
 - &quot;offset&quot; pulled from the magic_set, value 9000
 - &quot;nbytes&quot; is 9000 (as it has been the whole way through)
 - &quot;o&quot; is the original offset of 0

Then when we then call mcopy(), we do so with an nbytes and offset
*both* set to 9000. That seems to be where things finally unravel: at
about line 1082 of softmagic.c, we locate 'buf' 9000 bytes into the
haystack string, and last only 8192 bytes into it.

This seems to violate the comment at those lines:
 /* mget() guarantees buf &lt;= last */

So, (ms-&gt;search.s_len = last - buf) overflows, and writes a huge
value.

The crash doesn't happen until magiccheck() tries to estrndup() this
size, a few lines later.
</pre>
</div><div class='comment type_comment' ><a name="1423147072">&nbsp;</a><strong>[2015-02-05 14:37 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>@dominic thanks for the further investigations. Your observations are correct. This misbehavior is introduced after this commit: <a href="http://git.php.net/?p=php-src.git;a=commit;h=eeaec70" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=eeaec70</a> 

As a quick fix you can add these lines after the for loop

if (last &lt; buf) {
    last = b;
}

However I don't believe that this piece of code is quite correct in the long term. In the mentioned patch I also don't see any invalid magic introduced. What I suspect is that the patch might be not complete as it's merged from an upper libmagic version. I'm also going to check what you've pointed out with the python part.

Thanks.
</pre>
</div><div class='comment type_comment' ><a name="1423148079">&nbsp;</a><strong>[2015-02-05 14:54 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>Dominic,

I think you've found it ... see here <a href="https://github.com/file/file/commit/eced9dbd4aa438de22ff453c723136beac41a558.patch" rel="nofollow">https://github.com/file/file/commit/eced9dbd4aa438de22ff453c723136beac41a558.patch</a> ....

That should have been included into the original patch, but it's quite subtle to have been needed. With these lines commented out in the magic the test passes for me.

Thanks.

Anatol
</pre>
</div><div class='comment type_patch' ><a name="1423151753">&nbsp;</a><strong>[2015-02-05 15:55 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: bug68819_54.patch
Revision:   1423151753
URL:        <a href="https://bugs.php.net/patch-display.php?bug=68819&amp;patch=bug68819_54.patch&amp;revision=1423151753" rel="nofollow">https://bugs.php.net/patch-display.php?bug=68819&amp;patch=bug68819_54.patch&amp;revision=1423151753</a>
</pre>
</div><div class='comment type_patch' ><a name="1423151781">&nbsp;</a><strong>[2015-02-05 15:56 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: bug68819_56.patch
Revision:   1423151781
URL:        <a href="https://bugs.php.net/patch-display.php?bug=68819&amp;patch=bug68819_56.patch&amp;revision=1423151781" rel="nofollow">https://bugs.php.net/patch-display.php?bug=68819&amp;patch=bug68819_56.patch&amp;revision=1423151781</a>
</pre>
</div><div class='comment type_log' ><a name="1423151836">&nbsp;</a><strong>[2015-02-05 15:57 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Feedback</span>
</div></div></div><div class='comment type_comment' ><a name="1423151836">&nbsp;</a><strong>[2015-02-05 15:57 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>@dominic,

please check one of the supplied patches. It's either 5.4/5 or 5.6/master.

Thanks.
</pre>
</div><div class='comment type_log' ><a name="1423174557">&nbsp;</a><strong>[2015-02-05 22:15 UTC] dominic &#x61;&#116; varspool &#x64;&#111;&#x74; com</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Feedback</span>
<span class="added">+Status: Assigned</span>
</div></div></div><div class='comment type_comment' ><a name="1423174557">&nbsp;</a><strong>[2015-02-05 22:15 UTC] dominic &#x61;&#116; varspool &#x64;&#111;&#x74; com</strong>
<pre class='note'>I'd give feedback, but the patches are private for me (&quot;You have no access to <a href='bug.php?id=68819'>bug #68819</a>&quot;).

(I'm using the password from the original bug submission to do edits like this.)
</pre>
</div><div class='comment type_related' ><a name="1423174557">&nbsp;</a><strong>[2015-02-05 22:15 UTC] dominic &#x61;&#116; varspool &#x64;&#111;&#x74; com</strong>
<pre class='note'>Related To: <a href='bug.php?id=68819'>Bug #68819</a>
</pre>
</div><div class='comment type_log' ><a name="1423202972">&nbsp;</a><strong>[2015-02-06 06:09 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Feedback</span>
</div></div></div><div class='comment type_comment' ><a name="1423202972">&nbsp;</a><strong>[2015-02-06 06:09 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>@dominic, please fetch them here

<a href="http://belski.net/uploads/my/phpz/bugz/bug68819_54.patch" rel="nofollow">http://belski.net/uploads/my/phpz/bugz/bug68819_54.patch</a>
<a href="http://belski.net/uploads/my/phpz/bugz/bug68819_56.patch" rel="nofollow">http://belski.net/uploads/my/phpz/bugz/bug68819_56.patch</a>

Thanks.
</pre>
</div><div class='comment type_log' ><a name="1423261151">&nbsp;</a><strong>[2015-02-06 22:19 UTC] dominic &#x61;&#116; varspool &#x64;&#111;&#x74; com</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Feedback</span>
<span class="added">+Status: Assigned</span>
</div></div></div><div class='comment type_comment' ><a name="1423261151">&nbsp;</a><strong>[2015-02-06 22:19 UTC] dominic &#x61;&#116; varspool &#x64;&#111;&#x74; com</strong>
<pre class='note'>On master, I applied the 5.6/master patch, and confirmed the test cases now pass. However, I can still target other rules. Here's another one:

&lt;?php

$string = 'try: except:';
$string .= str_repeat(' ', 8178);
$string .= 'say';

var_dump(strlen($string));

$finfo = new finfo();
$type = $finfo-&gt;buffer($string);
var_dump($type);

?&gt;

I crafted this one to target the rule:

0	search/4096	try:
&gt;&amp;0	regex	\^\\s*except.*:	Python script text executable

(This from just grepping for search/4096 followed by a regex continuation).
</pre>
</div><div class='comment type_log' ><a name="1423501827">&nbsp;</a><strong>[2015-02-09 17:10 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Feedback</span>
</div></div></div><div class='comment type_comment' ><a name="1423501827">&nbsp;</a><strong>[2015-02-09 17:10 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>Ok, i've two news ... :) For one - the same overflow behavior is to reproduce in file-5.22, that means - it's not a PHP issue, but the mainstream one. Decide which one is bad/good. 

This bug is present in at least the range of 5.19-5.22. To reproduce, use the data from your latest PHP snippet and set a breakpoint like this (in 5.22):

(gdb) b softmagic.c:1140 if buf &gt; last

I've also checked the current libmagic master, and there the issue isn't present anymore. However the code base differs now far more (not even talking that it's not released yet), so i would not backport it. Instead, i'd probably a hotfix for our codebase. We might still try to backport something later after the current master (probably 5.23) is released, right now I'd rather ensure that the offset doesn't exceed bytecnt or vice versa. That is the key point. On 5.6, please try the following patch:

====== START =======
diff --git a/ext/fileinfo/libmagic/softmagic.c b/ext/fileinfo/libmagic/softmagic.c
index c8c72b2..0938ea6 100644
--- a/ext/fileinfo/libmagic/softmagic.c
+++ b/ext/fileinfo/libmagic/softmagic.c
@@ -1074,6 +1074,9 @@ mcopy(struct magic_set *ms, union VALUETYPE *p, int type, int indir,
                        if (bytecnt &gt; nbytes) {
                                bytecnt = nbytes;
                        }
+                       if (offset &gt; bytecnt) {
+                               offset = bytecnt;
+                       }
                        if (s == NULL) {
                                ms-&gt;search.s_len = 0;
                                ms-&gt;search.s = NULL;

====== END =======

With this, it should be working even without the data patch. While the data patch can be updated later.

Thanks.
</pre>
</div><div class='comment type_comment' ><a name="1424510562">&nbsp;</a><strong>[2015-02-21 09:22 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>@dominic, any update on this? Otherwise i'd rather go by commiting 3 lines from my last comment.

Thanks.
</pre>
</div><div class='comment type_log' ><a name="1424565853">&nbsp;</a><strong>[2015-02-22 00:44 UTC] dominic &#x61;&#116; varspool &#x64;&#111;&#x74; com</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Feedback</span>
<span class="added">+Status: Assigned</span>
</div></div></div><div class='comment type_comment' ><a name="1424565853">&nbsp;</a><strong>[2015-02-22 00:44 UTC] dominic &#x61;&#116; varspool &#x64;&#111;&#x74; com</strong>
<pre class='note'>@ab I've just tested that three line patch, and it looks good. Works well for me.

I haven't had time to chase the issue upstream. I guess that would mean adding an issue at <a href="http://bugs.gw.com/?" rel="nofollow">http://bugs.gw.com/?</a> If they haven't done a release since fixing this, that suggests they might not be aware of it.
</pre>
</div><div class='comment type_comment' ><a name="1424698683">&nbsp;</a><strong>[2015-02-23 13:38 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>@dominic, thanks for checkin. I'm going to prepare a patch for this later this week.

Cheers.
</pre>
</div><div class='comment type_patch' ><a name="1425302627">&nbsp;</a><strong>[2015-03-02 13:23 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: bug68819
Revision:   1425302627
URL:        <a href="https://bugs.php.net/patch-display.php?bug=68819&amp;patch=bug68819&amp;revision=1425302627" rel="nofollow">https://bugs.php.net/patch-display.php?bug=68819&amp;patch=bug68819&amp;revision=1425302627</a>
</pre>
</div><div class='comment type_related' ><a name="1425302798">&nbsp;</a><strong>[2015-03-02 13:26 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>Related To: <a href='bug.php?id=69135'>Bug #69135</a>
</pre>
</div><div class='comment type_related' ><a name="1426105836">&nbsp;</a><strong>[2015-03-11 20:30 UTC] <a href="//people.php.net/aharvey">aharvey@php.net</a></strong>
<pre class='note'>Related To: <a href='bug.php?id=69224'>Bug #69224</a>
</pre>
</div><div class='comment type_comment' ><a name="1427075172">&nbsp;</a><strong>[2015-03-23 01:46 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>If the fix is already published upstream, should we still keep this as private or can we merge it now?
</pre>
</div><div class='comment type_comment' ><a name="1427093855">&nbsp;</a><strong>[2015-03-23 06:57 UTC] <a href="//people.php.net/ab">ab@php.net</a></strong>
<pre class='note'>This issue is still fixed in libmagic master only. To my observations on the vanilla &quot;file&quot; command, the issue is present between 5.19 and 5.22 at least. But in PHP it's a mix of 5.14 and 5.17 with some backported patches. Also, this is somehow mixed with another issue about the extensive backtracking in PHP/PCRE, whereby libmagic uses regex.

In short - I'd still prefer to keep this one private. ATM it still looks not like only an upstream issue, or at least PHP is much more sensitive than upstream in this case.

Thanks.
</pre>
</div><div class='comment type_svn' ><a name="1428996556">&nbsp;</a><strong>[2015-04-14 07:29 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=f938112c495b0d26572435c0be73ac0bfe642ecd" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=f938112c495b0d26572435c0be73ac0bfe642ecd</a>
Log: Fix <a href='bug.php?id=68819'>bug #68819</a> (Fileinfo on specific file causes spurious OOM and/or segfault)
</pre>
</div><div class='comment type_log' ><a name="1428996556">&nbsp;</a><strong>[2015-04-14 07:29 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Closed</span>
</div></div></div><div class='comment type_svn' ><a name="1429000302">&nbsp;</a><strong>[2015-04-14 08:31 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=f938112c495b0d26572435c0be73ac0bfe642ecd" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=f938112c495b0d26572435c0be73ac0bfe642ecd</a>
Log: Fix <a href='bug.php?id=68819'>bug #68819</a> (Fileinfo on specific file causes spurious OOM and/or segfault)
</pre>
</div><div class='comment type_svn' ><a name="1429000310">&nbsp;</a><strong>[2015-04-14 08:31 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=80e263277600b5e62acfc993a308b8174f70581e" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=80e263277600b5e62acfc993a308b8174f70581e</a>
Log: Fix <a href='bug.php?id=68819'>bug #68819</a> (Fileinfo on specific file causes spurious OOM and/or segfault)
</pre>
</div><div class='comment type_svn' ><a name="1429087441">&nbsp;</a><strong>[2015-04-15 08:44 UTC] <a href="//people.php.net/jpauli">jpauli@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=f678693e1a6950cae08a99cd145d5d0dc24f92bb" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=f678693e1a6950cae08a99cd145d5d0dc24f92bb</a>
Log: Fix <a href='bug.php?id=68819'>bug #68819</a> (Fileinfo on specific file causes spurious OOM and/or segfault)
</pre>
</div><div class='comment type_comment' ><a name="1431090577">&nbsp;</a><strong>[2015-05-08 13:09 UTC] artistan &#x61;&#116; gmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>I am having this issue on PHP 5.4.16 (CentOS yum install)
is there a way for me to build a magic file to use?
thank you.
</pre>
</div><div class='comment type_log' ><a name="1455199724">&nbsp;</a><strong>[2016-02-11 14:08 UTC] <a href="//people.php.net/kaplan">kaplan@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID:</span>
<span class="added">+CVE-ID: 2015-4604</span>
</div></div></div><div class='comment type_comment' ><a name="1455199724">&nbsp;</a><strong>[2016-02-11 14:08 UTC] <a href="//people.php.net/kaplan">kaplan@php.net</a></strong>
<pre class='note'>About CVE:

&quot;Use CVE-2015-4604 for the violation of the &quot;mget() guarantees buf &lt;=
last&quot; constraint suggested in the [2015-02-05 13:53 UTC] comment.

Use CVE-2015-4605 for the issue in which offset can exceed bytecnt,
suggested in the [2015-02-09 17:10 UTC] comment.

These might be conceptually overlapping discoveries, but we decided to
have the two CVE IDs.&quot;
</pre>
</div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
