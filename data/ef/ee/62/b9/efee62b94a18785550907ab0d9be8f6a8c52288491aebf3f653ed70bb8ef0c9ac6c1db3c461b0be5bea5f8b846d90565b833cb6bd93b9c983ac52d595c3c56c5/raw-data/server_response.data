<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='Apache2 related Bug #76582 - RDF' href='rss/bug.php?id=76582'>
        <link rel='alternate' type='application/rss+xml' title='Apache2 related Bug #76582 - RSS 2.0' href='rss/bug.php?id=76582&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Sec Bug #76582 :: XSS due to the header Transfer-Encoding: chunked</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=76582">Sec Bug</a>&nbsp;#76582</th>
            <td id="summary" colspan="5">XSS due to the header Transfer-Encoding: chunked</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2018-07-05 15:47 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2018-09-16 14:51 UTC</td>
            <td rowspan="6">


            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>varma &#x64;&#111;&#x74; prashanth &#x61;&#116; hotmail &#x64;&#111;&#x74; com</td>
            <th class="details">Assigned:</th>
            <td><a href="search.php?cmd=display&amp;assign=stas">stas</a> (<a href="https://people.php.net/stas">profile</a>)</td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=Apache2+related">Apache2 related</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>Any</td>
            <th class="details">OS:</th>
            <td>Any</td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-17082" target="_blank">2018-17082</a></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=76582&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=76582&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=76582&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1530805646">&nbsp;</a><strong>[2018-07-05 15:47 UTC] varma &#x64;&#111;&#x74; prashanth &#x61;&#116; hotmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>Description:
------------
Because of (Transfer-Encoding: Chunked) header php is echoing the body as response. This exploit doesn't need any authentication and can be exploited via POST request.

 XSS tested on current versions of Chrome and Firefox Quantum. 



&gt; This vulnerability is tested on apache versions 2.4.18 and 2.4.33.
&gt;
&gt; Reproducing steps :
&gt;

&gt; 1) Intercept the request in burp suite to modify headers
&gt;
&gt; GET /lol.php HTTP/1.1
&gt; Host: localhost
&gt; User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:61.0) Gecko/20100101 Firefox/61.0
&gt; Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
&gt; Accept-Language: en-US,en;q=0.5
&gt; Connection: close
&gt; Upgrade-Insecure-Requests: 1
&gt; Cache-Control: max-age=0
&gt;
&gt; 2) Modify the request to
&gt;
&gt; POST /lol.php HTTP/1.1
&gt; Host: localhost
&gt; User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:61.0) Gecko/20100101 Firefox/61.0
&gt; Accept-Language: en-US,en;q=0.5
&gt; Content-Type: application/json
&gt; Upgrade-Insecure-Requests: 1
&gt; Cache-Control: max-age=0
&gt; Transfer-Encoding: chunked
&gt; Content-Length: 25
&gt;
&gt; &lt;script&gt;alert(1)&lt;/script&gt;
&gt;
&gt; 3) Response for the request
&gt;
&gt; HTTP/1.1 200 OK
&gt; Date: Mon, 02 Jul 2018 05:23:16 GMT
&gt; Server: Apache/2.4.33 (Unix) PHP/7.1.17
&gt; X-Powered-By: PHP/7.1.17
&gt; Content-Length: 39
&gt; Connection: close
&gt; Content-Type: text/html; charset=UTF-8
&gt;
&gt; &quot;{'hack':'1'}&quot;&lt;script&gt;alert(1)&lt;/script&gt; 

Test script:
---------------
&gt;
&gt; &lt;?php
&gt; function respond_with($header, $body) {
&gt; header($header);
&gt;
&gt; die(json_encode($body));
&gt; }
&gt; $body = &quot;{'hack':'1'}&quot;;
&gt; $header = &quot;200 Status Ok&quot;;
&gt; respond_with($header,$body);
&gt; ?&gt;
&gt;

Expected result:
----------------
&gt; HTTP/1.1 200 OK
&gt; Date: Mon, 02 Jul 2018 05:23:16 GMT
&gt; Server: Apache/2.4.33 (Unix) PHP/7.1.17
&gt; X-Powered-By: PHP/7.1.17
&gt; Content-Length: 39
&gt; Connection: close
&gt; Content-Type: text/html; charset=UTF-8
&gt;
&gt; &quot;{'hack':'1'}&quot;

Actual result:
--------------
&gt; HTTP/1.1 200 OK
&gt; Date: Mon, 02 Jul 2018 05:23:16 GMT
&gt; Server: Apache/2.4.33 (Unix) PHP/7.1.17
&gt; X-Powered-By: PHP/7.1.17
&gt; Content-Length: 39
&gt; Connection: close
&gt; Content-Type: text/html; charset=UTF-8
&gt;
&gt; &quot;{'hack':'1'}&quot;&lt;script&gt;alert(1)&lt;/script&gt; 

</pre>
</div><h2>Patches</h2>
<p><a href='patch-add.php?bug_id=76582'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=76582'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_comment' ><a name="1530805802">&nbsp;</a><strong>[2018-07-05 15:50 UTC] prashanth &#x61;&#116; defmax &#x64;&#111;&#x74; io</strong>
<pre class='note'>Found this vulnerability while playing h1-702 ctf(capture the flag). Here is the link 159.203.178.9/rpc.php for easy repo.

TCP request for testing on the server:

 POST /rpc.php HTTP/1.1
 Host: 159.203.178.9
 User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:61.0) Gecko/20100101 Firefox/61.0
 Content-Type: application/json
 Transfer-Encoding: chunked
 Content-Length: 27

 &lt;script&gt;alert(1)&lt;/script&gt;
</pre>
</div><div class='comment type_log' ><a name="1530898649">&nbsp;</a><strong>[2018-07-06 17:37 UTC] prashanth &#x61;&#116; defmax &#x64;&#111;&#x74; io</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Operating System: Mac OS 10.14 Ubuntu 16.04lts</span>
<span class="added">+Operating System: Any</span>
<span class="removed">-PHP Version:      7.1Git-2018-07-05 (Git)</span>
<span class="added">+PHP Version:      Any</span>
</div></div></div><div class='comment type_comment' ><a name="1530898649">&nbsp;</a><strong>[2018-07-06 17:37 UTC] prashanth &#x61;&#116; defmax &#x64;&#111;&#x74; io</strong>
<pre class='note'>Working on all versions
</pre>
</div><div class='comment type_comment' ><a name="1531048005">&nbsp;</a><strong>[2018-07-08 11:06 UTC] prashanth &#x61;&#116; defmax &#x64;&#111;&#x74; io</strong>
<pre class='note'>I don't know why it is only producible with apache and php together. Ngnix and php gives a 400 error. I need help to find out the root cause for the issue.
</pre>
</div><div class='comment type_comment' ><a name="1531077383">&nbsp;</a><strong>[2018-07-08 19:16 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>I tried reproducing it and I do not see the effect you are describing. I am getting this from Apache:

HTTP/1.1 400 Bad Request
Date: Sun, 08 Jul 2018 19:15:33 GMT
Server: Apache/2.4.33 (Unix) PHP/7.1.0-dev
Content-Length: 226
Connection: close
Content-Type: text/html; charset=iso-8859-1

&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;
&lt;html&gt;&lt;head&gt;
&lt;title&gt;400 Bad Request&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;h1&gt;Bad Request&lt;/h1&gt;
&lt;p&gt;Your browser sent a request that this server could not understand.&lt;br /&gt;
&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
</pre>
</div><div class='comment type_log' ><a name="1531077622">&nbsp;</a><strong>[2018-07-08 19:20 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status:  Open</span>
<span class="added">+Status:  Feedback</span>
<span class="removed">-Package: Output Control</span>
<span class="added">+Package: Apache2 related</span>
</div></div></div><div class='comment type_comment' ><a name="1531077622">&nbsp;</a><strong>[2018-07-08 19:20 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>I suspect there is some additional thing involved here, can you reproduce the same by just sending the data to Apache with netcat (nc)?
</pre>
</div><div class='comment type_log' ><a name="1531116718">&nbsp;</a><strong>[2018-07-09 06:11 UTC] prashanth &#x61;&#116; defmax &#x64;&#111;&#x74; io</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Feedback</span>
<span class="added">+Status: Open</span>
</div></div></div><div class='comment type_comment' ><a name="1531116718">&nbsp;</a><strong>[2018-07-09 06:11 UTC] prashanth &#x61;&#116; defmax &#x64;&#111;&#x74; io</strong>
<pre class='note'>I think there is a clrf character after html tag so that script tag is jumping to terminal input. Try with script tag and it will definitely work. it will work best in burp suite and it will help to see output in the browser. 

Prashanths-MacBook-Pro:~ prashanthvarma$ nc localhost 80
POST /lol.php HTTP/1.1
Host: localhost
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:61.0) Gecko/20100101 Firefox/61.0
Accept-Language: en-US,en;q=0.5
Content-Type: application/json
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0
Transfer-Encoding: chunked
Content-Length: 25

&lt;script&gt;alert(1)&lt;/script&gt;HTTP/1.1 400 Bad Request
Date: Mon, 09 Jul 2018 06:08:22 GMT
Server: Apache/2.4.33 (Unix) PHP/7.1.17
Content-Length: 226
Connection: close
Content-Type: text/html; charset=iso-8859-1

&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;
&lt;html&gt;&lt;head&gt;
&lt;title&gt;400 Bad Request&lt;/title&gt;
&lt;/head&gt;&lt;body&gt;
&lt;h1&gt;Bad Request&lt;/h1&gt;
&lt;p&gt;Your browser sent a request that this server could not understand.&lt;br /&gt;
&lt;/p&gt;
&lt;/body&gt;&lt;/html&gt;
Prashanths-MacBook-Pro:~ prashanthvarma$ &lt;script&gt;alert(1)&lt;/script&gt;
</pre>
</div><div class='comment type_comment' ><a name="1531117393">&nbsp;</a><strong>[2018-07-09 06:23 UTC] prashanth &#x61;&#116; defmax &#x64;&#111;&#x74; io</strong>
<pre class='note'>I am just attaching a Proof of Concept video <a href="https://drive.google.com/file/d/1DZI90dnsncQxXuGjE6MAGTqI3s8xHIno/view?usp=sharing" rel="nofollow">https://drive.google.com/file/d/1DZI90dnsncQxXuGjE6MAGTqI3s8xHIno/view?usp=sharing</a>
</pre>
</div><div class='comment type_log' ><a name="1531119857">&nbsp;</a><strong>[2018-07-09 07:04 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Open</span>
<span class="added">+Status: Feedback</span>
</div></div></div><div class='comment type_comment' ><a name="1531119860">&nbsp;</a><strong>[2018-07-09 07:04 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>In the video, you are using some kind of a tool as proxy. I have no idea what that tool is doing, but I can not reproduce this without any tools with plain nc. So I suspect something is going on with this tool. Please try reporducing without any tools in between, just directly communicating to the server.
</pre>
</div><div class='comment type_log' ><a name="1531121746">&nbsp;</a><strong>[2018-07-09 07:35 UTC] prashanth &#x61;&#116; defmax &#x64;&#111;&#x74; io</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Feedback</span>
<span class="added">+Status: Open</span>
</div></div></div><div class='comment type_comment' ><a name="1531121746">&nbsp;</a><strong>[2018-07-09 07:35 UTC] prashanth &#x61;&#116; defmax &#x64;&#111;&#x74; io</strong>
<pre class='note'>I reproduced with nc and mozilla developer tools it is working perfectly. I am just attaching other proof of concept. burp suite(proxy) only intercepts the request to modify.

<a href="https://drive.google.com/file/d/1P_Ciw8trmaszbCWCkmsHpSCC87zmkXuR/view?usp=sharing" rel="nofollow">https://drive.google.com/file/d/1P_Ciw8trmaszbCWCkmsHpSCC87zmkXuR/view?usp=sharing</a>

Because of clrf the nc is exiting and jumping the script tag to the input as shown in the video. Other wise bug is clearly reproducible. Used proxies because it can make process easy,
</pre>
</div><div class='comment type_log' ><a name="1531176076">&nbsp;</a><strong>[2018-07-09 22:41 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Open</span>
<span class="added">+Status: Verified</span>
</div></div></div><div class='comment type_comment' ><a name="1531176076">&nbsp;</a><strong>[2018-07-09 22:41 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Looks like I can reproduce it now. I am not sure yet how the input ends up in the output though, it doesn't seem like PHP is sending it, but it's located in Apache's iovec buffers for output:

#1  0x00007f511550494a in apr_socket_sendv (sock=sock@entry=0x7f5115c230a0, vec=vec@entry=0x7fffa5bf4f80, nvec=nvec@entry=3,
    len=len@entry=0x7fffa5bf4ee0) at ./network_io/unix/sendrecv.c:212
#2  0x0000557484512389 in writev_nonblocking (s=s@entry=0x7f5115c230a0, vec=0x7fffa5bf4f80, nvec=3, bb=0x7f5115c23910,
    cumulative_bytes_written=0x7f5115c23848, c=0x7f5115c23290) at core_filters.c:787
#3  0x0000557484512684 in send_brigade_nonblocking (s=s@entry=0x7f5115c230a0, bb=bb@entry=0x7f5115c23910,
    bytes_written=bytes_written@entry=0x7f5115c23848, c=c@entry=0x7f5115c23290) at core_filters.c:704
#4  0x00005574845133c1 in send_brigade_blocking (c=0x7f5115c23290, bytes_written=0x7f5115c23848, bb=0x7f5115c23910, s=0x7f5115c230a0)
    at core_filters.c:733
#5  ap_core_output_filter (f=0x7f5115c236e8, new_bb=0x7f5115c23910) at core_filters.c:542
#6  0x000055748452ff61 in ap_process_request (r=r@entry=0x7f5115c050a0) at http_request.c:477

(gdb) p vec[2]
$4 = {iov_base = 0x7f5115c1b17b, iov_len = 27}
(gdb) p (char *)0x7f5115c1b17b
$5 = 0x7f5115c1b17b &quot;&lt;script&gt;alert(1)&lt;/script&gt;\r\n&quot;

So somehow this gets into Apache's &quot;bucket brigade&quot;, even though PHP is not sending it there directly (in fact, it never sees the input since Apache doesn't let it to read it, throwing an error in ap_http_filter instead:

#0  apr_brigade_write (b=0x7f5115c18810, flush=0x5574844fcef0 &lt;ap_filter_flush&gt;, ctx=0x7f5115c1a548,                                                  
    str=0x557484546fc0 &quot;&lt;!DOCTYPE HTML PUBLIC \&quot;-//IETF//DTD HTML 2.0//EN\&quot;&gt;\n&lt;html&gt;&lt;head&gt;\n&lt;title&gt;&quot;, nbyte=71) at ./buckets/apr_brigade.c:433        
#1  0x00005574844feebc in buffer_output (r=&lt;optimized out&gt;, str=&lt;optimized out&gt;, len=&lt;optimized out&gt;) at protocol.c:1898
#2  0x0000557484500d9e in ap_rvputs (r=r@entry=0x7f5115c190a0) at protocol.c:2022                                                                    
#3  0x000055748452dde0 in ap_send_error_response (r=0x7f5115c190a0, recursive_error=0) at http_protocol.c:1539                                        
#4  0x0000557484532eb6 in ap_http_header_filter (f=0x7f5115c1a570, b=0x7f5115c186e0) at http_filters.c:1335   
#5  0x0000557484500832 in ap_content_length_filter (f=0x7f5115c1a548, b=0x7f5115c186e0) at protocol.c:1769                  
#6  0x000055748453415a in ap_byterange_filter (f=0x7f5115c1a520, bb=0x7f5115c186e0) at byterange_filter.c:494                                         
#7  0x00007f51130855f4 in deflate_out_filter (f=&lt;optimized out&gt;, bb=0x7f5115c186e0) at mod_deflate.c:831
#8  0x00007f511285f10a in filter_harness (f=0x7f5115c17860, bb=0x7f5115c186e0) at mod_filter.c:323                 
#9  0x00005574845312df in ap_http_filter (f=&lt;optimized out&gt;, b=0x7f5115c18540, mode=&lt;optimized out&gt;, block=&lt;optimized out&gt;, readbytes=16384)          
    at http_filters.c:555                                                                                                                           
#10 0x00007f5111cf941f in php_apache_sapi_read_post (buf=0x7fffa5bf0500 &quot;&quot;, count_bytes=16384) at ./sapi/apache2handler/sapi_apache2.c:198
#11 0x00007f5111c09d28 in sapi_read_post_block (buffer=buffer@entry=0x7fffa5bf0500 &quot;&quot;, buflen=buflen@entry=16384) at ./main/SAPI.c:248                
#12 0x00007f5111c0a77d in sapi_deactivate () at ./main/SAPI.c:513                                                                                     
#13 0x00007f5111c00ab9 in php_request_shutdown (dummy=dummy@entry=0x0) at ./main/main.c:1863                                             

I'll have to dig more into it to see how this output ends up there.
</pre>
</div><div class='comment type_comment' ><a name="1531770818">&nbsp;</a><strong>[2018-07-16 19:53 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>It looks like the reason for the problem is this code in sapi_apache2.c:

	if (!parent_req) {
		php_apache_request_dtor(r);
		ctx-&gt;request_processed = 1;
		bucket = apr_bucket_eos_create(r-&gt;connection-&gt;bucket_alloc);
		APR_BRIGADE_INSERT_TAIL(brigade, bucket);


&quot;brigade&quot; here is one that is initialized way above in the request. But I suspect this brigade gets destroyed later by one of the Apache handlers when the input consumption fails. Applying this seems to fix the problem:

diff --git a/sapi/apache2handler/sapi_apache2.c b/sapi/apache2handler/sapi_apache2.c
index e7edcab6da..b2b3340826 100644
--- a/sapi/apache2handler/sapi_apache2.c
+++ b/sapi/apache2handler/sapi_apache2.c
@@ -724,6 +724,7 @@ zend_first_try {
                php_apache_request_dtor(r);
                ctx-&gt;request_processed = 1;
                bucket = apr_bucket_eos_create(r-&gt;connection-&gt;bucket_alloc);
+               brigade = apr_brigade_create(r-&gt;pool, r-&gt;connection-&gt;bucket_alloc);
                APR_BRIGADE_INSERT_TAIL(brigade, bucket);
 
                rv = ap_pass_brigade(r-&gt;output_filters, brigade);

Could you please verify that it fixes the issue for you too?
</pre>
</div><div class='comment type_comment' ><a name="1531771276">&nbsp;</a><strong>[2018-07-16 20:01 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Not sure this is the correct patch though because in regular case this means the brigade allocated in the request per above is not cleaned :( It looks like we need some smarter way to handle this but not sure yet how.
</pre>
</div><div class='comment type_comment' ><a name="1532177106">&nbsp;</a><strong>[2018-07-21 12:45 UTC] prashanth &#x61;&#116; defmax &#x64;&#111;&#x74; io</strong>
<pre class='note'>Just verified the patch on php 7.1.7. I am not able reproduce.

Patch applied:

if (!parent_req) {
	zend_first_try {
	php_apache_request_dtor(r);
	ctx-&gt;request_processed = 1;
	bucket = apr_bucket_eos_create(r-&gt;connection-&gt;bucket_alloc);
	brigade = apr_brigade_create(r-&gt;pool, r-&gt;connection-&gt;bucket_alloc);
	APR_BRIGADE_INSERT_TAIL(brigade, bucket);

	rv = ap_pass_brigade(r-&gt;output_filters, brigade);
	if (rv != APR_SUCCESS || r-&gt;connection-&gt;aborted) {
zend_first_try {
		php_handle_aborted_connection();
} zend_end_try();
	}
	apr_brigade_cleanup(brigade);
	apr_pool_cleanup_run(r-&gt;pool, (void *)&amp;SG(server_context), php_server_context_cleanup);
}zend_end_try();
}
</pre>
</div><div class='comment type_comment' ><a name="1532177341">&nbsp;</a><strong>[2018-07-21 12:49 UTC] prashanth &#x61;&#116; defmax &#x64;&#111;&#x74; io</strong>
<pre class='note'>--&gt;I am not able to reproduce the issue. I think issue is fixed on my side.
</pre>
</div><div class='comment type_comment' ><a name="1532840903">&nbsp;</a><strong>[2018-07-29 05:08 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>I think better fix would be to do:

apr_brigade_cleanup(brigade);

instead of:

bucket = apr_bucket_eos_create(r-&gt;connection-&gt;bucket_alloc);

Could you verify this fixes the issue too?
</pre>
</div><div class='comment type_comment' ><a name="1532840946">&nbsp;</a><strong>[2018-07-29 05:09 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Sorry, instead of:

	brigade = apr_brigade_create(r-&gt;pool, r-&gt;connection-&gt;bucket_alloc);

(i.e. clean the brigade instead of creating the new one)
</pre>
</div><div class='comment type_log' ><a name="1532841562">&nbsp;</a><strong>[2018-07-29 05:19 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Assigned To:</span>
<span class="added">+Assigned To: stas</span>
</div></div></div><div class='comment type_comment' ><a name="1532841562">&nbsp;</a><strong>[2018-07-29 05:19 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Fix added to security repo as 65bc4f464e6a85aad3f578e9d55520601cbdeccf and to <a href="https://gist.github.com/smalyshev/e956dbae936df9a7594750caae8a7cf2" rel="nofollow">https://gist.github.com/smalyshev/e956dbae936df9a7594750caae8a7cf2</a>
</pre>
</div><div class='comment type_log' ><a name="1532841574">&nbsp;</a><strong>[2018-07-29 05:19 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID:</span>
<span class="added">+CVE-ID: needed</span>
</div></div></div><div class='comment type_comment' ><a name="1532841861">&nbsp;</a><strong>[2018-07-29 05:24 UTC] prashanth &#x61;&#116; defmax &#x64;&#111;&#x74; io</strong>
<pre class='note'>patch is working. applied apr_brigade_cleanup(brigade);

if (!parent_req) {
	zend_first_try {
	php_apache_request_dtor(r);
	ctx-&gt;request_processed = 1;
	bucket = apr_bucket_eos_create(r-&gt;connection-&gt;bucket_alloc);
	apr_brigade_cleanup(brigade);
	APR_BRIGADE_INSERT_TAIL(brigade, bucket);

	rv = ap_pass_brigade(r-&gt;output_filters, brigade);
	if (rv != APR_SUCCESS || r-&gt;connection-&gt;aborted) {
zend_first_try {
		php_handle_aborted_connection();
} zend_end_try();
</pre>
</div><div class='comment type_log' ><a name="1534920832">&nbsp;</a><strong>[2018-08-22 06:53 UTC] varma &#x64;&#111;&#x74; prashanth &#x61;&#116; hotmail &#x64;&#111;&#x74; com</strong>
<div class='log_note'><div class="changeset">
<span class="removed">-: prashanth at defmax dot io</span>
<span class="added">+: varma dot prashanth at hotmail dot com</span>
</div></div></div><div class='comment type_comment' ><a name="1534920832">&nbsp;</a><strong>[2018-08-22 06:53 UTC] varma &#x64;&#111;&#x74; prashanth &#x61;&#116; hotmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>mail change
</pre>
</div><div class='comment type_log' ><a name="1536522893">&nbsp;</a><strong>[2018-09-09 19:54 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Verified</span>
<span class="added">+Status: Closed</span>
</div></div></div><div class='comment type_comment' ><a name="1536522893">&nbsp;</a><strong>[2018-09-09 19:54 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>The fix for this bug has been committed.

Snapshots of the sources are packaged every three hours; this change
will be in the next snapshot. You can grab the snapshot at
<a href="http://snaps.php.net/" rel="nofollow">http://snaps.php.net/</a>.

 For Windows:

<a href="http://windows.php.net/snapshots/" rel="nofollow">http://windows.php.net/snapshots/</a>
 
Thank you for the report, and for helping us make PHP better.


</pre>
</div><div class='comment type_log' ><a name="1536536806">&nbsp;</a><strong>[2018-09-09 23:46 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Private report: No</span>
<span class="added">+Private report: Yes</span>
</div></div></div><div class='comment type_comment' ><a name="1536845963">&nbsp;</a><strong>[2018-09-13 13:39 UTC] <a href="//people.php.net/nikic">nikic@php.net</a></strong>
<pre class='note'>Is this supposed to still be private? This bug shows up in changelogs of released versions.
</pre>
</div><div class='comment type_comment' ><a name="1536864362">&nbsp;</a><strong>[2018-09-13 18:46 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>No it should not be private, and as far as I see it is not. Looks like bug in changelog reporting here.
</pre>
</div><div class='comment type_comment' ><a name="1536872914">&nbsp;</a><strong>[2018-09-13 21:08 UTC] <a href="//people.php.net/cmb">cmb@php.net</a></strong>
<pre class='note'>I've set it back to private on Sunday, since there was no release available then.
</pre>
</div><div class='comment type_log' ><a name="1537109475">&nbsp;</a><strong>[2018-09-16 14:51 UTC] <a href="//people.php.net/kaplan">kaplan@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID: needed</span>
<span class="added">+CVE-ID: 2018-17082</span>
</div></div></div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
