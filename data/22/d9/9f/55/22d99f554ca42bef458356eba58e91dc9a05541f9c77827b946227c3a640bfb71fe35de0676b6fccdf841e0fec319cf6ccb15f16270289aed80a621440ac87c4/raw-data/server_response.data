<!DOCTYPE html>
<html lang="en">
  <head>
    <title>358125 &ndash; the lock-up can be pass through without typing password</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="data/assets/23ebf435e712b8c1688f186151fcc60c.css?1626941475" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1626941475"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 5
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "358125 – the lock-up can be pass through without typing password",
                             "show_bug.cgi?id=358125" );
        document.title = "358125 – the lock-up can be pass through without typing password";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "358125 – the lock-up can be pass through without typing password", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1626941475"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="KDE Bugtracking System" href="./search_plugin.cgi">
    <link rel="apple-touch-icon" sizes="180x180" href="https://kde.org/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="https://kde.org/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="https://kde.org/favicon-16x16.png">
    <link rel="mask-icon" href="https://kde.org/safari-pinned-tab.svg" color="#1f99f3">
  </head>

  <body 
        class="bugs-kde-org
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_kscreenlocker
                 bz_component_general
                 bz_bug_358125 yui-skin-sam">

  <div id="header"><div id="banner">
  </div>

    <div id="titles">
      <span id="title">KDE Bugtracking System &ndash; Bug&nbsp;358125</span>

        <span id="subtitle" class="subheader">the lock-up can be pass through without typing password</span>

        <span id="information" class="header_addl_info">Last modified: 2016-02-10 11:22:22 UTC</span>
    </div>


    <div id="common_links"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li>
      <span class="separator">| </span>
        <a href="request.cgi">Requests</a></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    
      <li id="new_account_container_top">
        <span class="separator">| </span>
        <a href="createaccount.cgi">New&nbsp;Account</a>
      </li>

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=358125&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=358125" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=358125&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635619437-eb6SCZd6ht3fiGw6Q5znzY0FdQIF1_bsNHzcI2GwAGg">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2016-02-10 11:22:22">
  <input type="hidden" name="id" value="358125">
  <input type="hidden" name="token" value="1635619437-R9hE_cQCnk41rFyBj72O_mxEi5okGvuHm4p0TJ9dcEA">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=358125"><b>Bug&nbsp;358125</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">the lock-up can be pass through without typing password</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>the lock-up can be pass through without typing password
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'the lock-up can be pass through without typing password' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >kscreenlocker

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=kscreenlocker"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >general

  (<a href="buglist.cgi?component=general&amp;product=kscreenlocker&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>unspecified
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Platform:</a>

</th>
      <td class="field_value">Other
        Linux
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>NOR
       major
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Plasma Bugs List</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'plasma-bugs\x40kde.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>


    <tr><th class="field_label "
    id="field_label_keywords">


  <a 
      title="You can add keywords from a defined list to bugs, in order to easily identify and group them."
      class="field_help_link"
      href="describekeywords.cgi"
  >Keywords:</a>

</th>
  <td class="field_value "
      id="field_container_keywords" >

</td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2016-01-17 14:48 UTC by <span class="vcard"><span class="fn">Nils</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2016-02-10 11:22 UTC
      (<a href="show_activity.cgi?id=358125">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>5 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="bhush94">bhush94</option>
                <option value="kde">kde</option>
                <option value="mgraesslin">mgraesslin</option>
                <option value="plasma-bugs">plasma-bugs</option>
                <option value="rdieter">rdieter</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr> 
<tr>
      <th class="field_label "
    id="field_label_cf_commitlink">


  <a 
      title="A custom Free Text field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_commitlink"
  >Latest Commit:</a>

</th>
  <td class="field_value "
      id="field_container_cf_commitlink" >http://commits.kde.org/kscreenlocker/fae65f1cdd6446042b31ccd0eafd7a4c0b6623e3

</td>
    </tr>
    <tr>
      <th class="field_label "
    id="field_label_cf_versionfixedin">


  <a 
      title="A custom Free Text field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_versionfixedin"
  >Version Fixed In:</a>

</th>
  <td class="field_value "
      id="field_container_cf_versionfixedin" >5.5.5

</td>
    </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_application_download">
        <td>
            <a href="attachment.cgi?id=96706"
               title="View the content of the attachment">
          <b>errors when logging for the first time</b></a>

          <span class="bz_attach_extra_info">
              (9.71 KB,
                application/download)

            <br>
            <a href="#attach_96706"
               title="Go to the comment associated with the attachment">2016-01-18 08:33 UTC</a>,

            <span class="vcard"><span class="fn">Nils</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=96706&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_text_plain">
        <td>
            <a href="attachment.cgi?id=96755"
               title="View the content of the attachment">
          <b>Hacking KDE session locker by closing the lid several times</b></a>

          <span class="bz_attach_extra_info">
              (102.95 KB,
                text/plain)

            <br>
            <a href="#attach_96755"
               title="Go to the comment associated with the attachment">2016-01-20 18:49 UTC</a>,

            <span class="vcard"><span class="fn">Nils</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=96755&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
            <a id="view_all" href="attachment.cgi?bugid=358125&amp;action=viewall">View All</a>
        </span>
        <a href="attachment.cgi?bugid=358125&amp;action=enter">Add an attachment</a>
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=358125&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1477425084" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Nils</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-01-17 14:48:03 UTC
        </span>

      </div>




<pre class="bz_comment_text">When I let my computer idle for some time, it automatically lock-up, and it used to be then impossible to use  my computer without knowing my password.

However, I have found a trick which allow me to open the session without typing any password. 
With my laptop, I first connect my HDMI output to a second screen, then I am waiting for the idle lock-up to occurs. When it is really locked (not immediately after the lock-up appears but something like one minute after) I just have to close the lid and my session is instantaneously reopen without typing anything.
Also, the panel disappear in the operation.  

Reproducible: Always

Steps to Reproduce:
1. Use a laptop
2. Use a second screen through HDMI
3. Wait for an automatically closed session
4. Then close the lid

Actual Results:  
The session is unlocked

Expected Results:  
The session should still be locked

I am not sure which severity I should choose, and I don't know whether it is reproducible on another computer. However it seems really serious and not much reassuring.</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">David Edmundson</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-01-17 19:06:28 UTC
        </span>

      </div>




<pre class="bz_comment_text">Thanks

Under screen locking (system settings -&gt; desktop behaviour -&gt; screen locking) there is an option 

&quot;Require password after []&quot; . During which if you wiggle the mouse everything unlocks without the password. Are you closing the laptop lid within that time?</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Nils</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-01-18 08:32:37 UTC
        </span>

      </div>




<pre class="bz_comment_text">The time indicated is 5 secondes. I have been thinking that first, but when I try to wiggle the mouse, it does not unlock. Furthermore, the time during which I do nothing is greater than 5 minutes &amp; 5 secondes (I have not updated these settings).

It is only by closing the lid that I can unlock my session. 

Another thing really strange (but not sure whether related). When opening for the first time my session (following a reboot), I need to type several time my password (rightly). Each time it makes all the SDDM disappears and reboot it. Until... somehow... it finish by opening my session. 
When I type the bad password it is flag as bad... but when right typed, it just seems to crash. 

You will find some errors logs on the attached file.</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Nils</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-01-18 08:33:32 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=96706" name="attach_96706" title="errors when logging for the first time">attachment 96706</a> <a href="attachment.cgi?id=96706&amp;action=edit" title="errors when logging for the first time">[details]</a></span>
errors when logging for the first time</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">David Edmundson</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-01-20 18:32:05 UTC
        </span>

      </div>




<pre class="bz_comment_text">Tested here, I can't reproduce. 

That SDDM bug is tracked on another bug.</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Nils</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-01-20 18:49:00 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=96755" name="attach_96755" title="Hacking KDE session locker by closing the lid several times">attachment 96755</a> <a href="attachment.cgi?id=96755&amp;action=edit" title="Hacking KDE session locker by closing the lid several times">[details]</a></span>
Hacking KDE session locker by closing the lid several times

So here the full log about my successful KDE hacking by closing the lid. :)</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Nils</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-01-20 18:52:07 UTC
        </span>

      </div>




<pre class="bz_comment_text">&#64;David Edmundson, 

So I have tested it again on my updated computer and it has not been long before I have been successfully logged in as root on my computer without typing any password by just closing the lid several times. 
The people outside looked me like I was crazy. :D

Cheers,</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Martin Flöser</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-01-20 22:52:29 UTC
        </span>

      </div>




<pre class="bz_comment_text">Do you have configured your system with a user password?</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Nils</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-01-20 22:59:56 UTC
        </span>

      </div>




<pre class="bz_comment_text">Yes for all the users.</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Nils</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-02-03 13:23:28 UTC
        </span>

      </div>




<pre class="bz_comment_text">Well, I tried again with the last updates:
[2016-01-22 15:36] [ALPM] upgraded linux (4.3.3-2 -&gt; 4.3.3-3)
[2016-01-22 15:36] [ALPM] upgraded plasma-framework (5.18.0-1 -&gt; 5.18.0-3)
[2016-01-27 13:51] [ALPM] upgraded kde-cli-tools (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded kde-gtk-config (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded kdecoration (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded breeze (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded libksysguard (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded libkscreen (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded plasma-workspace (5.5.3-2 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded kdeplasma-addons (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded kinfocenter (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded kmenuedit (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded kscreen (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded ksshaskpass (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded ksysguard (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded kwrited (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded plasma-desktop (5.5.3-2 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded plasma-nm (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded plasma-pa (5.5.3-1 -&gt; 5.5.4-1)
[2016-01-27 13:51] [ALPM] upgraded plasma-workspace-wallpapers (5.5.3-1 -&gt; 5.5.4-1)

And I am still facing the issue, below the automated crash error reporter logs:
Application: Plasma (plasmashell), signal: Segmentation fault
Using host libthread_db library &quot;/usr/lib/libthread_db.so.1&quot;.
[Current thread is 1 (Thread 0x7fb8fffe2800 (LWP 1862))]

Thread 14 (Thread 0x7fb8e882c700 (LWP 1879)):
#0  0x00007fb8fa61416d in read () from /usr/lib/libc.so.6
#1  0x00007fb8f75d5270 in ?? () from /usr/lib/libglib-2.0.so.0
#2  0x00007fb8f7591aa4 in g_main_context_check () from /usr/lib/libglib-2.0.so.0
#3  0x00007fb8f7591f60 in ?? () from /usr/lib/libglib-2.0.so.0
#4  0x00007fb8f75920cc in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0
#5  0x00007fb8faf3b56b in QEventDispatcherGlib::processEvents(QFlags&lt;QEventLoop::ProcessEventsFlag&gt;) () from /usr/lib/libQt5Core.so.5
#6  0x00007fb8faee257a in QEventLoop::exec(QFlags&lt;QEventLoop::ProcessEventsFlag&gt;) () from /usr/lib/libQt5Core.so.5
#7  0x00007fb8facfebe4 in QThread::exec() () from /usr/lib/libQt5Core.so.5
#8  0x00007fb8fd617055 in ?? () from /usr/lib/libQt5Qml.so.5
#9  0x00007fb8fad03b8e in ?? () from /usr/lib/libQt5Core.so.5
#10 0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#11 0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 13 (Thread 0x7fb8e0f7b700 (LWP 1884)):
#0  0x00007fb8f75d6614 in g_mutex_unlock () from /usr/lib/libglib-2.0.so.0
#1  0x00007fb8f7591e6d in ?? () from /usr/lib/libglib-2.0.so.0
#2  0x00007fb8f75920cc in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0
#3  0x00007fb8faf3b56b in QEventDispatcherGlib::processEvents(QFlags&lt;QEventLoop::ProcessEventsFlag&gt;) () from /usr/lib/libQt5Core.so.5
#4  0x00007fb8faee257a in QEventLoop::exec(QFlags&lt;QEventLoop::ProcessEventsFlag&gt;) () from /usr/lib/libQt5Core.so.5
#5  0x00007fb8facfebe4 in QThread::exec() () from /usr/lib/libQt5Core.so.5
#6  0x00007fb8fd617055 in ?? () from /usr/lib/libQt5Qml.so.5
#7  0x00007fb8fad03b8e in ?? () from /usr/lib/libQt5Core.so.5
#8  0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#9  0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 12 (Thread 0x7fb8da495700 (LWP 1893)):
#0  0x00007fb8f75d65f9 in g_mutex_lock () from /usr/lib/libglib-2.0.so.0
#1  0x00007fb8f7591b46 in g_main_context_dispatch () from /usr/lib/libglib-2.0.so.0
#2  0x00007fb8f7592020 in ?? () from /usr/lib/libglib-2.0.so.0
#3  0x00007fb8f75920cc in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0
#4  0x00007fb8faf3b56b in QEventDispatcherGlib::processEvents(QFlags&lt;QEventLoop::ProcessEventsFlag&gt;) () from /usr/lib/libQt5Core.so.5
#5  0x00007fb8faee257a in QEventLoop::exec(QFlags&lt;QEventLoop::ProcessEventsFlag&gt;) () from /usr/lib/libQt5Core.so.5
#6  0x00007fb8facfebe4 in QThread::exec() () from /usr/lib/libQt5Core.so.5
#7  0x00007fb8fd617055 in ?? () from /usr/lib/libQt5Qml.so.5
#8  0x00007fb8fad03b8e in ?? () from /usr/lib/libQt5Core.so.5
#9  0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#10 0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 11 (Thread 0x7fb8d8b7f700 (LWP 1902)):
#0  0x00007fb8f9e2607f in pthread_cond_wait&#64;&#64;GLIBC_2.3.2 () from /usr/lib/libpthread.so.0
#1  0x00007fb8ffa3f934 in ?? () from /usr/lib/libQt5Script.so.5
#2  0x00007fb8ffa3f979 in ?? () from /usr/lib/libQt5Script.so.5
#3  0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#4  0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 10 (Thread 0x7fb8d2161700 (LWP 1905)):
#0  0x00007fb8f75d65f9 in g_mutex_lock () from /usr/lib/libglib-2.0.so.0
#1  0x00007fb8f7591b46 in g_main_context_dispatch () from /usr/lib/libglib-2.0.so.0
#2  0x00007fb8f7592020 in ?? () from /usr/lib/libglib-2.0.so.0
#3  0x00007fb8f75920cc in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0
#4  0x00007fb8faf3b56b in QEventDispatcherGlib::processEvents(QFlags&lt;QEventLoop::ProcessEventsFlag&gt;) () from /usr/lib/libQt5Core.so.5
#5  0x00007fb8faee257a in QEventLoop::exec(QFlags&lt;QEventLoop::ProcessEventsFlag&gt;) () from /usr/lib/libQt5Core.so.5
#6  0x00007fb8facfebe4 in QThread::exec() () from /usr/lib/libQt5Core.so.5
#7  0x00007fb8fdfc7136 in ?? () from /usr/lib/libQt5Quick.so.5
#8  0x00007fb8fad03b8e in ?? () from /usr/lib/libQt5Core.so.5
#9  0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#10 0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 9 (Thread 0x7fb80f7fd700 (LWP 5933)):
#0  0x00007fb8f9e2607f in pthread_cond_wait&#64;&#64;GLIBC_2.3.2 () from /usr/lib/libpthread.so.0
#1  0x00007fb8fad04e2b in QWaitCondition::wait(QMutex*, unsigned long) () from /usr/lib/libQt5Core.so.5
#2  0x00007fb844baa37f in ThreadWeaver::Weaver::takeFirstAvailableJobOrSuspendOrWait(ThreadWeaver::Thread*, bool, bool, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#3  0x00007fb844baeb28 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#4  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#5  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#6  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#7  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#8  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#9  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#10 0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#11 0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#12 0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#13 0x00007fb844bac3c3 in ThreadWeaver::Thread::run() () from /usr/lib/libKF5ThreadWeaver.so.5
#14 0x00007fb8fad03b8e in ?? () from /usr/lib/libQt5Core.so.5
#15 0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#16 0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 8 (Thread 0x7fb8194b1700 (LWP 5934)):
#0  0x00007fb8f9e2607f in pthread_cond_wait&#64;&#64;GLIBC_2.3.2 () from /usr/lib/libpthread.so.0
#1  0x00007fb8fad04e2b in QWaitCondition::wait(QMutex*, unsigned long) () from /usr/lib/libQt5Core.so.5
#2  0x00007fb844baa37f in ThreadWeaver::Weaver::takeFirstAvailableJobOrSuspendOrWait(ThreadWeaver::Thread*, bool, bool, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#3  0x00007fb844baeb28 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#4  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#5  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#6  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#7  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#8  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#9  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#10 0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#11 0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#12 0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#13 0x00007fb844bac3c3 in ThreadWeaver::Thread::run() () from /usr/lib/libKF5ThreadWeaver.so.5
#14 0x00007fb8fad03b8e in ?? () from /usr/lib/libQt5Core.so.5
#15 0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#16 0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 7 (Thread 0x7fb80fffe700 (LWP 5935)):
#0  0x00007fb8f9e2607f in pthread_cond_wait&#64;&#64;GLIBC_2.3.2 () from /usr/lib/libpthread.so.0
#1  0x00007fb8fad04e2b in QWaitCondition::wait(QMutex*, unsigned long) () from /usr/lib/libQt5Core.so.5
#2  0x00007fb844baa37f in ThreadWeaver::Weaver::takeFirstAvailableJobOrSuspendOrWait(ThreadWeaver::Thread*, bool, bool, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#3  0x00007fb844baeb28 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#4  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#5  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#6  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#7  0x00007fb844bac3c3 in ThreadWeaver::Thread::run() () from /usr/lib/libKF5ThreadWeaver.so.5
#8  0x00007fb8fad03b8e in ?? () from /usr/lib/libQt5Core.so.5
#9  0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#10 0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 6 (Thread 0x7fb81b0fb700 (LWP 5936)):
#0  0x00007fb8f9e2607f in pthread_cond_wait&#64;&#64;GLIBC_2.3.2 () from /usr/lib/libpthread.so.0
#1  0x00007fb8fad04e2b in QWaitCondition::wait(QMutex*, unsigned long) () from /usr/lib/libQt5Core.so.5
#2  0x00007fb844baa37f in ThreadWeaver::Weaver::takeFirstAvailableJobOrSuspendOrWait(ThreadWeaver::Thread*, bool, bool, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#3  0x00007fb844baeb28 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#4  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#5  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#6  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#7  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#8  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#9  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#10 0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#11 0x00007fb844bac3c3 in ThreadWeaver::Thread::run() () from /usr/lib/libKF5ThreadWeaver.so.5
#12 0x00007fb8fad03b8e in ?? () from /usr/lib/libQt5Core.so.5
#13 0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#14 0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 5 (Thread 0x7fb822fab700 (LWP 5937)):
#0  0x00007fb8f9e2607f in pthread_cond_wait&#64;&#64;GLIBC_2.3.2 () from /usr/lib/libpthread.so.0
#1  0x00007fb8fad04e2b in QWaitCondition::wait(QMutex*, unsigned long) () from /usr/lib/libQt5Core.so.5
#2  0x00007fb844baa37f in ThreadWeaver::Weaver::takeFirstAvailableJobOrSuspendOrWait(ThreadWeaver::Thread*, bool, bool, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#3  0x00007fb844baeb28 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#4  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#5  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#6  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#7  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#8  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#9  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#10 0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#11 0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#12 0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#13 0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#14 0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#15 0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#16 0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#17 0x00007fb844bac3c3 in ThreadWeaver::Thread::run() () from /usr/lib/libKF5ThreadWeaver.so.5
#18 0x00007fb8fad03b8e in ?? () from /usr/lib/libQt5Core.so.5
#19 0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#20 0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 4 (Thread 0x7fb8227aa700 (LWP 5938)):
#0  0x00007fb8f9e2607f in pthread_cond_wait&#64;&#64;GLIBC_2.3.2 () from /usr/lib/libpthread.so.0
#1  0x00007fb8fad04e2b in QWaitCondition::wait(QMutex*, unsigned long) () from /usr/lib/libQt5Core.so.5
#2  0x00007fb844baa37f in ThreadWeaver::Weaver::takeFirstAvailableJobOrSuspendOrWait(ThreadWeaver::Thread*, bool, bool, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#3  0x00007fb844baeb28 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#4  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#5  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#6  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#7  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#8  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#9  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#10 0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#11 0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#12 0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#13 0x00007fb844bac3c3 in ThreadWeaver::Thread::run() () from /usr/lib/libKF5ThreadWeaver.so.5
#14 0x00007fb8fad03b8e in ?? () from /usr/lib/libQt5Core.so.5
#15 0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#16 0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 3 (Thread 0x7fb821fa9700 (LWP 5939)):
#0  0x00007fb8f9e2607f in pthread_cond_wait&#64;&#64;GLIBC_2.3.2 () from /usr/lib/libpthread.so.0
#1  0x00007fb8fad04e2b in QWaitCondition::wait(QMutex*, unsigned long) () from /usr/lib/libQt5Core.so.5
#2  0x00007fb844baa37f in ThreadWeaver::Weaver::takeFirstAvailableJobOrSuspendOrWait(ThreadWeaver::Thread*, bool, bool, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#3  0x00007fb844baeb28 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#4  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#5  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#6  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#7  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#8  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#9  0x00007fb844bac3c3 in ThreadWeaver::Thread::run() () from /usr/lib/libKF5ThreadWeaver.so.5
#10 0x00007fb8fad03b8e in ?? () from /usr/lib/libQt5Core.so.5
#11 0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#12 0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 2 (Thread 0x7fb8217a8700 (LWP 5940)):
#0  0x00007fb8f9e2607f in pthread_cond_wait&#64;&#64;GLIBC_2.3.2 () from /usr/lib/libpthread.so.0
#1  0x00007fb8fad04e2b in QWaitCondition::wait(QMutex*, unsigned long) () from /usr/lib/libQt5Core.so.5
#2  0x00007fb844baa37f in ThreadWeaver::Weaver::takeFirstAvailableJobOrSuspendOrWait(ThreadWeaver::Thread*, bool, bool, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#3  0x00007fb844baeb28 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#4  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#5  0x00007fb844baeb82 in ?? () from /usr/lib/libKF5ThreadWeaver.so.5
#6  0x00007fb844ba9433 in ThreadWeaver::Weaver::applyForWork(ThreadWeaver::Thread*, bool) () from /usr/lib/libKF5ThreadWeaver.so.5
#7  0x00007fb844bac3c3 in ThreadWeaver::Thread::run() () from /usr/lib/libKF5ThreadWeaver.so.5
#8  0x00007fb8fad03b8e in ?? () from /usr/lib/libQt5Core.so.5
#9  0x00007fb8f9e204a4 in start_thread () from /usr/lib/libpthread.so.0
#10 0x00007fb8fa62113d in clone () from /usr/lib/libc.so.6

Thread 1 (Thread 0x7fb8fffe2800 (LWP 1862)):
[KCrash Handler]
#5  0x00007fb8fe4e83f0 in Plasma::Applet::actions() const () from /usr/lib/libKF5Plasma.so.5
#6  0x0000000000456289 in ShellCorona::addOutput(QSharedPointer&lt;KScreen::Output&gt; const&amp;) ()
#7  0x000000000045640f in ShellCorona::outputEnabledChanged() ()
#8  0x00007fb8faf131a7 in QMetaObject::activate(QObject*, int, int, void**) () from /usr/lib/libQt5Core.so.5
#9  0x00007fb8ff193717 in KScreen::Output::apply(QSharedPointer&lt;KScreen::Output&gt; const&amp;) () from /usr/lib/libKF5Screen.so.6
#10 0x00007fb8ff17ff9e in KScreen::Config::apply(QSharedPointer&lt;KScreen::Config&gt; const&amp;) () from /usr/lib/libKF5Screen.so.6
#11 0x00007fb8ff186219 in KScreen::ConfigMonitor::Private::updateConfigs(QSharedPointer&lt;KScreen::Config&gt; const&amp;) () from /usr/lib/libKF5Screen.so.6
#12 0x00007fb8ff188509 in KScreen::ConfigMonitor::Private::edidReady(QDBusPendingCallWatcher*) () from /usr/lib/libKF5Screen.so.6
#13 0x00007fb8faf131a7 in QMetaObject::activate(QObject*, int, int, void**) () from /usr/lib/libQt5Core.so.5
#14 0x00007fb90016a11f in QDBusPendingCallWatcher::finished(QDBusPendingCallWatcher*) () from /usr/lib/libQt5DBus.so.5
#15 0x00007fb90016b7f5 in ?? () from /usr/lib/libQt5DBus.so.5
#16 0x00007fb8faf141e1 in QObject::event(QEvent*) () from /usr/lib/libQt5Core.so.5
#17 0x00007fb8fb9e89ac in QApplicationPrivate::notify_helper(QObject*, QEvent*) () from /usr/lib/libQt5Widgets.so.5
#18 0x00007fb8fb9ede86 in QApplication::notify(QObject*, QEvent*) () from /usr/lib/libQt5Widgets.so.5
#19 0x00007fb8faee4bab in QCoreApplication::notifyInternal(QObject*, QEvent*) () from /usr/lib/libQt5Core.so.5
#20 0x00007fb8faee6fa6 in QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*) () from /usr/lib/libQt5Core.so.5
#21 0x00007fb8faf3b143 in ?? () from /usr/lib/libQt5Core.so.5
#22 0x00007fb8f7591dc7 in g_main_context_dispatch () from /usr/lib/libglib-2.0.so.0
#23 0x00007fb8f7592020 in ?? () from /usr/lib/libglib-2.0.so.0
#24 0x00007fb8f75920cc in g_main_context_iteration () from /usr/lib/libglib-2.0.so.0
#25 0x00007fb8faf3b54f in QEventDispatcherGlib::processEvents(QFlags&lt;QEventLoop::ProcessEventsFlag&gt;) () from /usr/lib/libQt5Core.so.5
#26 0x00007fb8faee257a in QEventLoop::exec(QFlags&lt;QEventLoop::ProcessEventsFlag&gt;) () from /usr/lib/libQt5Core.so.5
#27 0x00007fb8faeea53c in QCoreApplication::exec() () from /usr/lib/libQt5Core.so.5
#28 0x000000000043138a in main ()

I think I have closed and reopened again the lid something like 30 times before the session has been unlocked.</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Nils</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-02-03 13:25:51 UTC
        </span>

      </div>




<pre class="bz_comment_text">PS: While unlocking through this way, the panel disappears from my desktop environment, while it was configured for the user (which, like I said, has a password configured &amp; required in order to login).</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Martin Flöser</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-02-09 15:33:57 UTC
        </span>

      </div>




<pre class="bz_comment_text">Git commit fae65f1cdd6446042b31ccd0eafd7a4c0b6623e3 by Martin Gräßlin.
Committed on 09/02/2016 at 14:41.
Pushed by graesslin into branch 'Plasma/5.5'.

[greeter] Dont quit when last window closes

Qt allows to have no screens. If all XRandR screens are disconnected
there are also no QScreens. This is from an X11 perspective wrong, but
we have to deal with it. No QScreens means that all views are destroyed
and no new ones are created. Thus all windows close and the greeter
exited successfully which in turn unlocked the screen.

This change ensures that the greeter doesn't exit when all windows close.

Funnily this was not a problem with the well known issue of Qt
crashing when all screens are disconnected. The lock screen handles
crashes gracefully and just restarts or more likely Qt also crashes
the application using KSld and thus taking down the complete session.
FIXED-IN: 5.5.5

M  +1    -0    greeter/main.cpp

<a href="http://commits.kde.org/kscreenlocker/fae65f1cdd6446042b31ccd0eafd7a4c0b6623e3">http://commits.kde.org/kscreenlocker/fae65f1cdd6446042b31ccd0eafd7a4c0b6623e3</a></pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Martin Flöser</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-02-09 15:38:36 UTC
        </span>

      </div>




<pre class="bz_comment_text">Git commit 5651785ad6663e2ef4d12a94b0b5f1cb7d40a9a1 by Martin Gräßlin.
Committed on 09/02/2016 at 15:37.
Pushed by graesslin into branch 'Plasma/5.0'.

[greeter] Dont quit when last window closes

Qt allows to have no screens. If all XRandR screens are disconnected
there are also no QScreens. This is from an X11 perspective wrong, but
we have to deal with it. No QScreens means that all views are destroyed
and no new ones are created. Thus all windows close and the greeter
exited successfully which in turn unlocked the screen.

This change ensures that the greeter doesn't exit when all windows close.

Funnily this was not a problem with the well known issue of Qt
crashing when all screens are disconnected. The lock screen handles
crashes gracefully and just restarts or more likely Qt also crashes
the application using KSld and thus taking down the complete session.

M  +1    -0    ksmserver/screenlocker/greeter/main.cpp

<a href="http://commits.kde.org/plasma-workspace/5651785ad6663e2ef4d12a94b0b5f1cb7d40a9a1">http://commits.kde.org/plasma-workspace/5651785ad6663e2ef4d12a94b0b5f1cb7d40a9a1</a></pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Martin Flöser</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-02-09 15:39:39 UTC
        </span>

      </div>




<pre class="bz_comment_text">Git commit 1fe565e5dae31e57d81556b07e7459be14c5d834 by Martin Gräßlin.
Committed on 09/02/2016 at 15:39.
Pushed by graesslin into branch 'Plasma/5.1'.

[greeter] Dont quit when last window closes

Qt allows to have no screens. If all XRandR screens are disconnected
there are also no QScreens. This is from an X11 perspective wrong, but
we have to deal with it. No QScreens means that all views are destroyed
and no new ones are created. Thus all windows close and the greeter
exited successfully which in turn unlocked the screen.

This change ensures that the greeter doesn't exit when all windows close.

Funnily this was not a problem with the well known issue of Qt
crashing when all screens are disconnected. The lock screen handles
crashes gracefully and just restarts or more likely Qt also crashes
the application using KSld and thus taking down the complete session.

M  +1    -0    ksmserver/screenlocker/greeter/main.cpp

<a href="http://commits.kde.org/plasma-workspace/1fe565e5dae31e57d81556b07e7459be14c5d834">http://commits.kde.org/plasma-workspace/1fe565e5dae31e57d81556b07e7459be14c5d834</a></pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Martin Flöser</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-02-09 15:40:22 UTC
        </span>

      </div>




<pre class="bz_comment_text">Git commit e1036973552a8964dffcbca0743eb1accc14bc56 by Martin Gräßlin.
Committed on 09/02/2016 at 15:40.
Pushed by graesslin into branch 'Plasma/5.2'.

[greeter] Dont quit when last window closes

Qt allows to have no screens. If all XRandR screens are disconnected
there are also no QScreens. This is from an X11 perspective wrong, but
we have to deal with it. No QScreens means that all views are destroyed
and no new ones are created. Thus all windows close and the greeter
exited successfully which in turn unlocked the screen.

This change ensures that the greeter doesn't exit when all windows close.

Funnily this was not a problem with the well known issue of Qt
crashing when all screens are disconnected. The lock screen handles
crashes gracefully and just restarts or more likely Qt also crashes
the application using KSld and thus taking down the complete session.

M  +1    -0    ksmserver/screenlocker/greeter/main.cpp

<a href="http://commits.kde.org/plasma-workspace/e1036973552a8964dffcbca0743eb1accc14bc56">http://commits.kde.org/plasma-workspace/e1036973552a8964dffcbca0743eb1accc14bc56</a></pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Martin Flöser</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-02-09 15:41:02 UTC
        </span>

      </div>




<pre class="bz_comment_text">Git commit de6e19fd8c30166bdbc1333dcd5ef2278f570fa2 by Martin Gräßlin.
Committed on 09/02/2016 at 15:40.
Pushed by graesslin into branch 'Plasma/5.3'.

[greeter] Dont quit when last window closes

Qt allows to have no screens. If all XRandR screens are disconnected
there are also no QScreens. This is from an X11 perspective wrong, but
we have to deal with it. No QScreens means that all views are destroyed
and no new ones are created. Thus all windows close and the greeter
exited successfully which in turn unlocked the screen.

This change ensures that the greeter doesn't exit when all windows close.

Funnily this was not a problem with the well known issue of Qt
crashing when all screens are disconnected. The lock screen handles
crashes gracefully and just restarts or more likely Qt also crashes
the application using KSld and thus taking down the complete session.

M  +1    -0    ksmserver/screenlocker/greeter/main.cpp

<a href="http://commits.kde.org/plasma-workspace/de6e19fd8c30166bdbc1333dcd5ef2278f570fa2">http://commits.kde.org/plasma-workspace/de6e19fd8c30166bdbc1333dcd5ef2278f570fa2</a></pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Martin Flöser</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-02-09 15:41:49 UTC
        </span>

      </div>




<pre class="bz_comment_text">Git commit 23a9ed7ba9995570227dbcd69c23f009de7dde49 by Martin Gräßlin.
Committed on 09/02/2016 at 15:41.
Pushed by graesslin into branch 'Plasma/5.4'.

[greeter] Dont quit when last window closes

Qt allows to have no screens. If all XRandR screens are disconnected
there are also no QScreens. This is from an X11 perspective wrong, but
we have to deal with it. No QScreens means that all views are destroyed
and no new ones are created. Thus all windows close and the greeter
exited successfully which in turn unlocked the screen.

This change ensures that the greeter doesn't exit when all windows close.

Funnily this was not a problem with the well known issue of Qt
crashing when all screens are disconnected. The lock screen handles
crashes gracefully and just restarts or more likely Qt also crashes
the application using KSld and thus taking down the complete session.

M  +1    -0    ksmserver/screenlocker/greeter/main.cpp

<a href="http://commits.kde.org/plasma-workspace/23a9ed7ba9995570227dbcd69c23f009de7dde49">http://commits.kde.org/plasma-workspace/23a9ed7ba9995570227dbcd69c23f009de7dde49</a></pre>
    </div>

    <div id="c17" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=358125#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Nils</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2016-02-09 16:12:40 UTC
        </span>

      </div>




<pre class="bz_comment_text">Wow, thank you very much! I was afraid to see this bug never solved as it seem that no one was facing it/able to reproduce it. 
It is the second bug I have reported fixed this week, great job to you. :)</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=358125">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=358125">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=358125">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li>
      <span class="separator">| </span>
        <a href="request.cgi">Requests</a></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    
      <li id="new_account_container_bottom">
        <span class="separator">| </span>
        <a href="createaccount.cgi">New&nbsp;Account</a>
      </li>

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=358125&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=358125" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=358125&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635619437-eb6SCZd6ht3fiGw6Q5znzY0FdQIF1_bsNHzcI2GwAGg">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>