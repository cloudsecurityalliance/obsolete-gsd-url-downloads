<!DOCTYPE html>
<html lang="en">
  <head>
    <title>15497 &ndash; Multiple out-of-bounds reads in NetScaler trace handling (wiretap/netscaler.c)</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link href="data/assets/64b49332a92937374625c24ed9a89c85.css?1635022386" rel="stylesheet" type="text/css">

<link href="data/assets/f6911ed8e5a97f108734d9324cb6bd67.css?1635022386" rel="stylesheet" type="text/css">

    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1635022386"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "15497 – Multiple out-of-bounds reads in NetScaler trace handling (wiretap\/netscaler.c)",
                             "show_bug.cgi?id=15497" );
        document.title = "15497 – Multiple out-of-bounds reads in NetScaler trace handling (wiretap\/netscaler.c)";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "15497 – Multiple out-of-bounds reads in NetScaler trace handling (wiretap\/netscaler.c)", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1635022386"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-wireshark-org-bugzilla
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_Wireshark
                 bz_component_Capture_file_support_&#X28;libwiretap&#X29;
                 bz_bug_15497 yui-skin-sam">

  <div id="header"><div id="banner">
      <a href="/bugzilla/"><img id="badge" src="/image/wsbadge-bug@186x57.png"></a>
      <span id="banner-text">
        Wireshark Bug Database &ndash; Bug&nbsp;15497
      </span>
      <div id="subtitle">
        <p class="subheader">Multiple out-of-bounds reads in NetScaler trace handling (wiretap/netscaler.c)</p>
      </div>

       <div id="motd_yellow">

<p>
This Bugzilla instance was migrated to <a href="https://gitlab.com/wireshark/wireshark">GitLab</a> on Sunday, August 23.
</p>


<p>
This bug has been migrated to <a href="https://gitlab.com/wireshark/wireshark/-/issues/15497">issue 15497</a> in the <a href="https://gitlab.com/wireshark/wireshark/-/issues">GitLab issue tracker</a>.
It can be viewed and updated there.
</p>


</p>

<p>
See the <a href="https://gitlab.com/wireshark/gitlab-migration/wikis/home">migration wiki</a> for more details.
</p>

       </div>


    </div>

<!-- WS: Title info is in the banner
    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;15497</span>
  
        <span id="subtitle" class="subheader">Multiple out-of-bounds reads in NetScaler trace handling (wiretap/netscaler.c)</span>

        <span id="information" class="header_addl_info">Last modified: 2019-04-05 22:50:59 UTC</span>
    </div>
  -->


    <div id="common_links"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=15497&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=15497" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=15497&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635621498-Kp1J9TzsBJxNpgePwniLIaYLRqXC2a8tlOU-HGAQ4r4">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2019-04-05 22:50:59">
  <input type="hidden" name="id" value="15497">
  <input type="hidden" name="token" value="1635621498-EdI4_MiHzinBxmIMuJvcoiUQzJP-QiuSYLA0rVd5ceQ">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=15497"><b>Bug&nbsp;15497</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">Multiple out-of-bounds reads in NetScaler trace handling (wiretap/netscaler.c)</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>Multiple out-of-bounds reads in NetScaler trace handling (wiretap/netscaler.c)
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'Multiple out-of-bounds reads in NetScaler trace handling (wiretap\/netscaler.c)' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Wireshark

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Wireshark"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >Capture file support (libwiretap)

  (<a href="buglist.cgi?component=Capture%20file%20support%20(libwiretap)&amp;product=Wireshark&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>Git
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">x86-64
        Linux
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>Low
       Major<span id="votes_container">
    (<a href="page.cgi?id=voting/user.html&amp;bug_id=15497#vote_15497">vote</a>)
  </span>
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Bugzilla Administrator</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'bugzilla-admin\x40wireshark.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2019-02-13 12:41 UTC by <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2019-04-05 22:50 UTC
      (<a href="show_activity.cgi?id=15497">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>1 
          user
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="lomato">lomato</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" ><ul class="bug_urls">
          <li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10895">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10895</a>
          </li></ul>

</td>
    </tr> 

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_application_x-zip-compressed">
        <td>
            <a href="attachment.cgi?id=16909"
               title="View the content of the attachment">
          <b>Reproducers</b></a>

          <span class="bz_attach_extra_info">
              (547.73 KB,
                application/x-zip-compressed)

            <br>
            <a href="#attach_16909"
               title="Go to the comment associated with the attachment">2019-02-13 12:41 UTC</a>,

            <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=16909&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_application_x-zip-compressed">
        <td>
            <a href="attachment.cgi?id=16954"
               title="View the content of the attachment">
          <b>New reproducers</b></a>

          <span class="bz_attach_extra_info">
              (29.12 KB,
                application/x-zip-compressed)

            <br>
            <a href="#attach_16954"
               title="Go to the comment associated with the attachment">2019-03-05 14:48 UTC</a>,

            <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=16954&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
        </span>
        <a href="attachment.cgi?bugid=15497&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=15497&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1490378926" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-13 12:41:54 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=16909" name="attach_16909" title="Reproducers">attachment 16909</a> <a href="attachment.cgi?id=16909&amp;action=edit" title="Reproducers">[details]</a></span>
Reproducers

Build Information:
TShark (Wireshark) 3.1.0 (<a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=d777c88d">v3.1.0rc0-4-gd777c88d</a>)

Copyright 1998-2019 Gerald Combs &lt;<a href="/cdn-cgi/l/email-protection#c2a5a7b0a3aea6e4e1f4f6f9b5abb0a7b1aaa3b0a9ecadb0a5">gerald&#64;wireshark.org</a>&gt; and contributors.
License GPLv2+: GNU GPL version 2 or later &lt;<a href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.html">http://www.gnu.org/licenses/old-licenses/gpl-2.0.html</a>&gt;
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Compiled (64-bit) with libpcap, with POSIX capabilities (Linux), without libnl,
with GLib 2.54.2, with zlib 1.2.8, without SMI, without c-ares, without Lua,
without GnuTLS, with Gcrypt 1.8.3, with MIT Kerberos, without MaxMind DB
resolver, without nghttp2, without LZ4, without Snappy, with libxml2 2.9.4.

Running on Linux 4.19.16-1rodete1-amd64, with Intel(R) Xeon(R) CPU E5-1650 v4 &#64;
3.60GHz (with SSE4.2), with 64406 MB of physical memory, with locale
en_US.UTF-8, with libpcap version 1.8.1, with Gcrypt 1.8.3, with zlib 1.2.8,
binary plugins supported (0 loaded).

Built using clang 4.2.1 Compatible Clang 7.0.0 (tags/RELEASE_700/final).
--
Through fuzzing of the command-line tshark tool (&quot;$ ./tshark -nVxr /path/to/file&quot;) compiled with AddressSanitizer, we have found that the NetScaler trace parser (wiretap/netscaler.c) is susceptible to a number of heap-based out-of-bounds reads of various sizes. An example ASAN report looks as follows:

--- cut ---
=================================================================
==240712==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6250000d4100 at pc 0x55d449026945 bp 0x7ffce6479e30 sp 0x7ffce64795e0
READ of size 22 at 0x6250000d4100 thread T0
    #0 0x55d449026944 in __interceptor_strncmp.part.298 (wireshark/run/tshark+0xff944)
    #1 0x7f3cf272f0c5 in nspm_signature_isv10 wireshark/wiretap/netscaler.c:819:1
    #2 0x7f3cf272f0c5 in nspm_signature_version wireshark/wiretap/netscaler.c:847
    #3 0x7f3cf272f0c5 in nstrace_open wireshark/wiretap/netscaler.c:695
    #4 0x7f3cf26e9643 in wtap_open_offline wireshark/wiretap/file_access.c:978:13
    #5 0x55d4490a1081 in cf_open wireshark/tshark.c:4022:9
    #6 0x55d44909ad65 in main wireshark/tshark.c:2021:9
    #7 0x7f3cf10ea2b0 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x202b0)
    #8 0x55d448f86af9 in _start (wireshark/run/tshark+0x5faf9)

0x6250000d4100 is located 0 bytes to the right of 8192-byte region [0x6250000d2100,0x6250000d4100)
allocated by thread T0 here:
    #0 0x55d449050e47 in __interceptor_malloc (wireshark/run/tshark+0x129e47)
    #1 0x7f3cf1af6588 in g_malloc (/lib/x86_64-linux-gnu/libglib-2.0.so.0+0x50588)

SUMMARY: AddressSanitizer: heap-buffer-overflow (wireshark/run/tshark+0xff944) in __interceptor_strncmp.part.298
Shadow bytes around the buggy address:
  0x0c4a800127d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4a800127e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4a800127f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4a80012800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4a80012810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=&gt;0x0c4a80012820:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4a80012830: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4a80012840: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4a80012850: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4a80012860: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4a80012870: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==240712==ABORTING
--- cut ---

The list of different locations we have encountered crashes at is shown below:

--- cut ---
nstrace_read_v10 wireshark/wiretap/netscaler.c:1067
nstrace_read_v10 wireshark/wiretap/netscaler.c:1092
nstrace_read_v20 wireshark/wiretap/netscaler.c:1276
nstrace_read_v20 wireshark/wiretap/netscaler.c:1288
nstrace_read_v20 wireshark/wiretap/netscaler.c:1305:25
nstrace_read_v30 wireshark/wiretap/netscaler.c:1449:14
nstrace_read_v30 wireshark/wiretap/netscaler.c:1459:17
nstrace_read_v30 wireshark/wiretap/netscaler.c:1475
nstrace_read_v30 wireshark/wiretap/netscaler.c:1475:17
nstrace_read_v30 wireshark/wiretap/netscaler.c:1485
nstrace_read_v30 wireshark/wiretap/netscaler.c:1485:17
nstrace_read_v30 wireshark/wiretap/netscaler.c:1492
nstrace_set_start_time_v10 wireshark/wiretap/netscaler.c:921
nstrace_set_start_time_v20 wireshark/wiretap/netscaler.c:922:1
--- cut ---

Attached is an archive containing up to three testcases for each of the unique stack traces we have seen.</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-14 12:36:02 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32028 had a related patch set uploaded by Dario Lombardo:
netscaler: fix crash when reading malformed packet.

<a href="https://code.wireshark.org/review/32028">https://code.wireshark.org/review/32028</a></pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dario Lombardo</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-15 07:56:50 UTC
        </span>

      </div>




<pre class="bz_comment_text">Hi Mateusz
I've noticed that you opened multiple bug for crashing on malformed files.
Just out of curiosity: are you systematically fuzzing wireshark? Which kind of fuzzer/setup are you using?
Nice job, by the way!</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-18 10:25:24 UTC
        </span>

      </div>




<pre class="bz_comment_text">Hi Dario,

I'm indeed running systematic coverage-guided fuzzing of Wireshark at scale using internal Google fuzzing tools. Unfortunately there aren't many more details I can share regarding the specifics of the setup. For a bit of overview, see slides 71-73 from my &quot;Effective file format fuzzing&quot; talk at Black Hat Europe 2016 (<a href="https://www.blackhat.com/docs/eu-16/materials/eu-16-Jurczyk-Effective-File-Format-Fuzzing-Thoughts-Techniques-And-Results.pdf">https://www.blackhat.com/docs/eu-16/materials/eu-16-Jurczyk-Effective-File-Format-Fuzzing-Thoughts-Techniques-And-Results.pdf</a>).

Cheers,
Mateusz</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dario Lombardo</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-18 10:58:11 UTC
        </span>

      </div>




<pre class="bz_comment_text">Very interesting presentation. Are you fuzzing executables other than tshark? I know that there is another one that could take great benefits from your work. It's called dftest. It basically gives straight access to the display filter parsing engine. It is close to be usable (gives 0 in cas of success and != 0 in case of failure), but requires a small change for taking the actual filter from stdin. If you think this is a new and interesting attack surface I could push the required change on master.</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-18 11:54:06 UTC
        </span>

      </div>




<pre class="bz_comment_text">So far I've only been fuzzing the tshark binary. This is mostly because I'm interested in finding bugs with potential security impact, and parsing pcaps/network traffic represents an attack surface. Is there any attack surface associated with the display filter engine, e.g. a situation where an attacker-controlled filter may be executed in a user's Wireshark session?</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dario Lombardo</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-19 10:33:18 UTC
        </span>

      </div>




<pre class="bz_comment_text">Well... I'm not sure, you tell me: what about copy/paste commands from the internet like

  tshark -Y &quot;filter that causes a buffer overflow&quot;

It's not like network traffic, nor like an hyperlink, but still...</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-19 11:26:41 UTC
        </span>

      </div>




<pre class="bz_comment_text">I see. From a security standpoint this doesn't seem like a very realistic attack scenario so I probably won't be fuzzing the filter parsing soon, but I might look into it in the future when I have some spare cycles.</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-20 04:17:32 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32028 merged by Anders Broman:
netscaler: fix crash when reading malformed packets.

<a href="https://code.wireshark.org/review/32028">https://code.wireshark.org/review/32028</a></pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-25 09:32:04 UTC
        </span>

      </div>




<pre class="bz_comment_text">Hey Dario,

Even with the fix I'm still able to reproduce a majority of the crashes reported in this bug. I suspect there might be more than one problem in the code, and each directory in the attached archive contains samples referring to a different stack trace. Could you please take another look at this?

Cheers,
Mateusz</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dario Lombardo</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-25 16:00:50 UTC
        </span>

      </div>




<pre class="bz_comment_text">Ok, I'll do it.</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 14:38:48 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32194 had a related patch set uploaded by Dario Lombardo:
netscaler: fix multiple out-of-bounds reads.

<a href="https://code.wireshark.org/review/32194">https://code.wireshark.org/review/32194</a></pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:41:04 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32194 merged by Gerald Combs:
netscaler: fix multiple out-of-bounds reads.

<a href="https://code.wireshark.org/review/32194">https://code.wireshark.org/review/32194</a></pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:43:33 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32195 had a related patch set uploaded by Gerald Combs:
netscaler: fix crash when reading malformed packets.

<a href="https://code.wireshark.org/review/32195">https://code.wireshark.org/review/32195</a></pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:44:02 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32196 had a related patch set uploaded by Gerald Combs:
netscaler: fix crash when reading malformed packets.

<a href="https://code.wireshark.org/review/32196">https://code.wireshark.org/review/32196</a></pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:44:14 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32197 had a related patch set uploaded by Gerald Combs:
netscaler: fix crash when reading malformed packets.

<a href="https://code.wireshark.org/review/32197">https://code.wireshark.org/review/32197</a></pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:44:24 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32195 merged by Gerald Combs:
netscaler: fix crash when reading malformed packets.

<a href="https://code.wireshark.org/review/32195">https://code.wireshark.org/review/32195</a></pre>
    </div>

    <div id="c17" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:44:33 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32196 merged by Gerald Combs:
netscaler: fix crash when reading malformed packets.

<a href="https://code.wireshark.org/review/32196">https://code.wireshark.org/review/32196</a></pre>
    </div>

    <div id="c18" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:44:41 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32197 merged by Gerald Combs:
netscaler: fix crash when reading malformed packets.

<a href="https://code.wireshark.org/review/32197">https://code.wireshark.org/review/32197</a></pre>
    </div>

    <div id="c19" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:44:54 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32198 had a related patch set uploaded by Gerald Combs:
netscaler: fix multiple out-of-bounds reads.

<a href="https://code.wireshark.org/review/32198">https://code.wireshark.org/review/32198</a></pre>
    </div>

    <div id="c20" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:45:05 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32199 had a related patch set uploaded by Gerald Combs:
netscaler: fix multiple out-of-bounds reads.

<a href="https://code.wireshark.org/review/32199">https://code.wireshark.org/review/32199</a></pre>
    </div>

    <div id="c21" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:50:16 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32198 merged by Gerald Combs:
netscaler: fix multiple out-of-bounds reads.

<a href="https://code.wireshark.org/review/32198">https://code.wireshark.org/review/32198</a></pre>
    </div>

    <div id="c22" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:50:26 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32199 merged by Gerald Combs:
netscaler: fix multiple out-of-bounds reads.

<a href="https://code.wireshark.org/review/32199">https://code.wireshark.org/review/32199</a></pre>
    </div>

    <div id="c23" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:51:06 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32200 had a related patch set uploaded by Gerald Combs:
netscaler: fix multiple out-of-bounds reads.

<a href="https://code.wireshark.org/review/32200">https://code.wireshark.org/review/32200</a></pre>
    </div>

    <div id="c24" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c24">Comment 24</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 19:52:24 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32200 merged by Gerald Combs:
netscaler: fix multiple out-of-bounds reads.

<a href="https://code.wireshark.org/review/32200">https://code.wireshark.org/review/32200</a></pre>
    </div>

    <div id="c25" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c25">Comment 25</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerald Combs</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-02-26 22:55:35 UTC
        </span>

      </div>




<pre class="bz_comment_text">Does this warrant an advisory + CVE? At first glance it appears to have a low severity similar to <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - Wireshark heap out-of-bounds read in infer_pkt_encap"
   href="show_bug.cgi?id=15463">bug 15463</a>.</pre>
    </div>

    <div id="c26" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c26">Comment 26</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-05 14:48:25 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=16954" name="attach_16954" title="New reproducers">attachment 16954</a> <a href="attachment.cgi?id=16954&amp;action=edit" title="New reproducers">[details]</a></span>
New reproducers</pre>
    </div>

    <div id="c27" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c27">Comment 27</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-05 14:50:54 UTC
        </span>

      </div>




<pre class="bz_comment_text">Hi Dario,

Thank you for the follow-up patches. I've continued my fuzzing and I am able to trigger out-of-bounds reads at two more locations in the latest code. Please find the reproducers attached, to be run with tshark the same way as with the previous samples.

The crashes occur at:

#0 0x7fdf124d3653 in nstrace_read_v20 wireshark/wiretap/netscaler.c:1308:25
#1 0x7fdf12550c69 in wtap_read wireshark/wiretap/wtap.c:1324:7
#2 0x55bda7cf78bf in process_cap_file wireshark/tshark.c:3344:12
#3 0x55bda7cf78bf in main wireshark/tshark.c:2044

and:

#0 0x7f010d10504b in pletoh32 wireshark/wsutil/pint.h:103:21
#1 0x7f010d10504b in nstrace_set_start_time_v20 wireshark/wiretap/netscaler.c:940
#2 0x7f010d0ebc28 in nstrace_open wireshark/wiretap/netscaler.c
#3 0x7f010d0a58d3 in wtap_open_offline wireshark/wiretap/file_access.c:978:13
#4 0x55e2294f7111 in cf_open wireshark/tshark.c:4022:9
#5 0x55e2294f0daf in main wireshark/tshark.c:2021:9

Cheers,
Mateusz</pre>
    </div>

    <div id="c28" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c28">Comment 28</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dario Lombardo</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-05 16:29:24 UTC
        </span>

      </div>




<pre class="bz_comment_text">Hi Mateusz
I suspected that more crashes would have happened, and I guess that more will come. The code is rather complex and there are loads of places where the sanity check would be needed. I'm proceeding alongside your reproducers instead of putting checks everywhere that would result in slower and less readable code.
Let's see where this approach leads us :).</pre>
    </div>

    <div id="c29" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c29">Comment 29</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-05 16:29:32 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32333 had a related patch set uploaded by Dario Lombardo:
netscaler: add more sanity checks.

<a href="https://code.wireshark.org/review/32333">https://code.wireshark.org/review/32333</a></pre>
    </div>

    <div id="c30" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c30">Comment 30</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dario Lombardo</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-05 16:30:57 UTC
        </span>

      </div>




<pre class="bz_comment_text">The good part is that with the sanity check function I used before, fixing bugs is now faster. It's just a matter of finding spots where it's needed.</pre>
    </div>

    <div id="c31" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c31">Comment 31</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-15 15:38:26 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32333 merged by Anders Broman:
netscaler: add more sanity checks.

<a href="https://code.wireshark.org/review/32333">https://code.wireshark.org/review/32333</a></pre>
    </div>

    <div id="c32" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c32">Comment 32</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-15 15:42:17 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32421 had a related patch set uploaded by Dario Lombardo:
netscaler: add more sanity checks.

<a href="https://code.wireshark.org/review/32421">https://code.wireshark.org/review/32421</a></pre>
    </div>

    <div id="c33" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c33">Comment 33</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-15 15:42:41 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32422 had a related patch set uploaded by Dario Lombardo:
netscaler: add more sanity checks.

<a href="https://code.wireshark.org/review/32422">https://code.wireshark.org/review/32422</a></pre>
    </div>

    <div id="c34" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c34">Comment 34</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-15 16:44:15 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32421 merged by Anders Broman:
netscaler: add more sanity checks.

<a href="https://code.wireshark.org/review/32421">https://code.wireshark.org/review/32421</a></pre>
    </div>

    <div id="c35" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c35">Comment 35</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-15 17:10:29 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32422 merged by Anders Broman:
netscaler: add more sanity checks.

<a href="https://code.wireshark.org/review/32422">https://code.wireshark.org/review/32422</a></pre>
    </div>

    <div id="c36" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c36">Comment 36</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-16 07:45:49 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32430 had a related patch set uploaded by Guy Harris:
netscaler: add more sanity checks.

<a href="https://code.wireshark.org/review/32430">https://code.wireshark.org/review/32430</a></pre>
    </div>

    <div id="c37" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15497#c37">Comment 37</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-16 07:45:56 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32430 merged by Guy Harris:
netscaler: add more sanity checks.

<a href="https://code.wireshark.org/review/32430">https://code.wireshark.org/review/32430</a></pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=15497">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=15497">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=15497">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=15497&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=15497" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=15497&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635621498-Kp1J9TzsBJxNpgePwniLIaYLRqXC2a8tlOU-HGAQ4r4">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>