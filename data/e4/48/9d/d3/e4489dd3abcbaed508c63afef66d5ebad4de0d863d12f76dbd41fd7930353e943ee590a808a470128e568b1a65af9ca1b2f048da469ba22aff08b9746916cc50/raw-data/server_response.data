<!doctype html><html lang="en"><head><script defer src="https://cdn.optimizely.com/js/16180790160.js"></script><title data-rh="true">Attacking the Golden Ring on AMD Mini-PC | by danny odler | Medium</title><meta data-rh="true" charset="utf-8"/><meta data-rh="true" name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1"/><meta data-rh="true" name="theme-color" content="#000000"/><meta data-rh="true" name="twitter:app:name:iphone" content="Medium"/><meta data-rh="true" name="twitter:app:id:iphone" content="828256236"/><meta data-rh="true" property="al:ios:app_name" content="Medium"/><meta data-rh="true" property="al:ios:app_store_id" content="828256236"/><meta data-rh="true" property="al:android:package" content="com.medium.reader"/><meta data-rh="true" property="fb:app_id" content="542599432471018"/><meta data-rh="true" property="og:site_name" content="Medium"/><meta data-rh="true" property="og:type" content="article"/><meta data-rh="true" property="article:published_time" content="2020-07-04T10:31:30.335Z"/><meta data-rh="true" name="title" content="Attacking the Golden Ring on AMD Mini-PC | by danny odler | Medium"/><meta data-rh="true" property="og:title" content="Attacking the Golden Ring on AMD Mini-PC"/><meta data-rh="true" property="twitter:title" content="Attacking the Golden Ring on AMD Mini-PC"/><meta data-rh="true" name="twitter:site" content="@Medium"/><meta data-rh="true" name="twitter:app:url:iphone" content="medium://p/b7bfb217b437"/><meta data-rh="true" property="al:android:url" content="medium://p/b7bfb217b437"/><meta data-rh="true" property="al:ios:url" content="medium://p/b7bfb217b437"/><meta data-rh="true" property="al:android:app_name" content="Medium"/><meta data-rh="true" name="description" content="In December 2019 AMD announced that their partners will start manufacturing a new high performance product line- AMD MiniPc. This MiniPc is actually a direct competition to the well known Intel NUC…"/><meta data-rh="true" property="og:description" content="(or how to bypass Windows strongest security boundary)"/><meta data-rh="true" property="twitter:description" content="(or how to bypass Windows strongest security boundary)"/><meta data-rh="true" property="og:url" content="https://dannyodler.medium.com/attacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437"/><meta data-rh="true" property="al:web:url" content="https://dannyodler.medium.com/attacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437"/><meta data-rh="true" property="og:image" content="https://miro.medium.com/max/625/1*qKkwN1_i3Gp2CkHwk-bg2Q.jpeg"/><meta data-rh="true" name="twitter:image:src" content="https://miro.medium.com/max/625/1*qKkwN1_i3Gp2CkHwk-bg2Q.jpeg"/><meta data-rh="true" name="twitter:card" content="summary_large_image"/><meta data-rh="true" property="article:author" content="https://dannyodler.medium.com"/><meta data-rh="true" name="author" content="danny odler"/><meta data-rh="true" name="robots" content="index,follow,max-image-preview:large"/><meta data-rh="true" name="referrer" content="unsafe-url"/><meta data-rh="true" name="twitter:label1" content="Reading time"/><meta data-rh="true" name="twitter:data1" content="12 min read"/><link data-rh="true" rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml"/><link data-rh="true" rel="apple-touch-icon" sizes="152x152" href="https://miro.medium.com/fit/c/152/152/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="120x120" href="https://miro.medium.com/fit/c/120/120/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="76x76" href="https://miro.medium.com/fit/c/76/76/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="apple-touch-icon" sizes="60x60" href="https://miro.medium.com/fit/c/60/60/1*sHhtYhaCe2Uc3IU0IgKwIQ.png"/><link data-rh="true" rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/Medium-Avatar-500x500.svg" color="#171717"/><link data-rh="true" rel="preconnect" href="https://glyph.medium.com" crossOrigin=""/><link data-rh="true" rel="preconnect" href="https://logx.optimizely.com"/><link data-rh="true" id="glyph_preload_link" rel="preload" as="style" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" id="glyph_link" rel="stylesheet" type="text/css" href="https://glyph.medium.com/css/unbound.css"/><link data-rh="true" rel="author" href="https://dannyodler.medium.com"/><link data-rh="true" rel="canonical" href="https://dannyodler.medium.com/attacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437"/><link data-rh="true" rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/b7bfb217b437"/><script data-rh="true" type="application/ld+json">{"@context":"http:\u002F\u002Fschema.org","@type":"NewsArticle","image":["https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F1200\u002F1*qKkwN1_i3Gp2CkHwk-bg2Q.jpeg"],"url":"https:\u002F\u002Fdannyodler.medium.com\u002Fattacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437","dateCreated":"2020-06-13T18:24:48.216Z","datePublished":"2020-06-13T18:24:48.216Z","dateModified":"2020-07-18T15:06:46.851Z","headline":"Attacking the Golden Ring on AMD Mini-PC - danny odler - Medium","name":"Attacking the Golden Ring on AMD Mini-PC - danny odler - Medium","description":"In December 2019 AMD announced that their partners will start manufacturing a new high performance product line- AMD MiniPc. This MiniPc is actually a direct competition to the well known Intel NUC…","identifier":"b7bfb217b437","author":{"@type":"Person","name":"danny odler","url":"https:\u002F\u002Fdannyodler.medium.com"},"creator":["danny odler"],"publisher":{"@type":"Organization","name":"Medium","url":"https:\u002F\u002Fdannyodler.medium.com\u002F","logo":{"@type":"ImageObject","width":308,"height":60,"url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F616\u002F1*OMF3fSqH8t4xBJ9-6oZDZw.png"}},"mainEntityOfPage":"https:\u002F\u002Fdannyodler.medium.com\u002Fattacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437"}</script><link rel="preload" href="https://cdn.optimizely.com/js/16180790160.js" as="script"><style type="text/css" data-fela-rehydration="480" data-fela-type="STATIC">html{box-sizing:border-box}*, *:before, *:after{box-sizing:inherit}body{margin:0;padding:0;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;color:rgba(0,0,0,0.8);position:relative;min-height:100vh}h1, h2, h3, h4, h5, h6, dl, dd, ol, ul, menu, figure, blockquote, p, pre, form{margin:0}menu, ol, ul{padding:0;list-style:none;list-style-image:none}main{display:block}a{color:inherit;text-decoration:none}a, button, input{-webkit-tap-highlight-color:transparent}img, svg{vertical-align:middle}button{background:transparent;overflow:visible}button, input, optgroup, select, textarea{margin:0}:root{--reach-tabs:1;--reach-menu-button:1}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="KEYFRAME">@-webkit-keyframes k1{from{filter:hue-rotate(0deg)}to{filter:hue-rotate(360deg)}}@-moz-keyframes k1{from{filter:hue-rotate(0deg)}to{filter:hue-rotate(360deg)}}@keyframes k1{from{filter:hue-rotate(0deg)}to{filter:hue-rotate(360deg)}}@-webkit-keyframes k2{0%{opacity:0;transform:translateY(-60px)}100%{opacity:1;transform:translateY(0px)}}@-moz-keyframes k2{0%{opacity:0;transform:translateY(-60px)}100%{opacity:1;transform:translateY(0px)}}@keyframes k2{0%{opacity:0;transform:translateY(-60px)}100%{opacity:1;transform:translateY(0px)}}@-webkit-keyframes k3{0%{opacity:1;transform:translateY(0px)}100%{opacity:0;transform:translateY(-60px)}}@-moz-keyframes k3{0%{opacity:1;transform:translateY(0px)}100%{opacity:0;transform:translateY(-60px)}}@keyframes k3{0%{opacity:1;transform:translateY(0px)}100%{opacity:0;transform:translateY(-60px)}}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE">.a{font-family:medium-content-sans-serif-font, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif}.b{font-weight:400}.c{background-color:rgba(255, 255, 255, 1)}.l{height:100vh}.m{width:100vw}.n{display:flex}.o{align-items:center}.p{justify-content:center}.q{height:25px}.r{fill:rgba(41, 41, 41, 1)}.s{display:block}.t{margin-bottom:36px}.v{padding-top:8px}.w{width:100%}.ab{flex:0 0 auto}.ac{justify-self:flex-end}.ae{z-index:500}.af{visibility:hidden}.ag{box-shadow:inset 0 -1px 0 rgba(230, 230, 230, 1)}.ah{min-height:115px}.ak{flex-direction:column}.al{display:none}.an{white-space:nowrap}.ao{border-bottom:1px solid rgba(230, 230, 230, 1)}.ap{position:relative}.av{max-width:1192px}.aw{min-width:0}.ax{height:62px}.ay{flex-direction:row}.az{flex:1 0 auto}.ba{margin-right:16px}.bb{font-family:sohne, "Helvetica Neue", Helvetica, Arial, sans-serif}.bc{font-size:14px}.bd{line-height:20px}.be{color:rgba(26, 137, 23, 1)}.bf{padding:7px 16px 9px}.bg{background:0}.bh{fill:rgba(26, 137, 23, 1)}.bi{border-color:rgba(26, 137, 23, 1)}.bn:disabled{cursor:inherit}.bo:disabled{opacity:0.3}.bp:disabled:hover{color:rgba(26, 137, 23, 1)}.bq:disabled:hover{fill:rgba(26, 137, 23, 1)}.br:disabled:hover{border-color:rgba(26, 137, 23, 1)}.bs{border-radius:99em}.bt{border-width:1px}.bu{border-style:solid}.bv{box-sizing:border-box}.bw{display:inline-block}.bx{text-decoration:none}.by{margin-left:0px}.bz{color:rgba(117, 117, 117, 1)}.ca{font-size:inherit}.cb{border:inherit}.cc{font-family:inherit}.cd{letter-spacing:inherit}.ce{font-weight:inherit}.cf{padding:0}.cg{margin:0}.ch:disabled{cursor:default}.ci:disabled{color:rgba(163, 208, 162, 0.5)}.cj:disabled{fill:rgba(163, 208, 162, 0.5)}.ck{justify-content:space-between}.cq{align-items:flex-start}.cr{margin-bottom:0px}.cs{margin-top:-32px}.ct{align-items:flex-end}.cu{flex-wrap:wrap}.cx{margin-top:32px}.cy{margin-right:24px}.da{font-weight:500}.db{font-size:27px}.dc{line-height:34px}.dd:before{margin-bottom:-14px}.de:before{content:""}.df:before{display:table}.dg:before{border-collapse:collapse}.dh:after{margin-top:-6px}.di:after{content:""}.dj:after{display:table}.dk:after{border-collapse:collapse}.dl{letter-spacing:0}.dm{color:rgba(25, 25, 25, 1)}.dn{word-break:break-word}.do{margin-bottom:-3px}.dp{margin-left:14px}.dq{margin-top:-3px}.dr{padding-top:1px}.ds{height:70px}.dt{font-size:16px}.du{line-height:24px}.dv:before{margin-bottom:-10px}.dw{margin-right:12px}.dx{display:inline-flex}.dy{color:inherit}.dz{fill:inherit}.ec:disabled{color:rgba(117, 117, 117, 1)}.ed:disabled{fill:rgba(117, 117, 117, 1)}.ee{margin-left:12px}.ef{position:absolute}.eg{right:24px}.eh{margin:0px}.ei{border:0px}.ej{padding:0px}.ek{cursor:pointer}.el{stroke:rgba(117, 117, 117, 1)}.eo{left:0}.ep{opacity:0}.eq{position:fixed}.er{right:0}.es{top:0}.eu{height:60px}.ex{height:100%}.fa{margin-left:16px}.fb{padding-left:24px}.fc{padding-right:24px}.fd{margin-left:auto}.fe{margin-right:auto}.ff{max-width:728px}.fg{background:rgba(255, 255, 255, 1)}.fh{border:1px solid rgba(230, 230, 230, 1)}.fi{border-radius:4px}.fj{box-shadow:0 1px 4px rgba(230, 230, 230, 1)}.fk{max-height:100vh}.fl{overflow-y:auto}.fm{top:calc(100vh + 100px)}.fn{bottom:calc(100vh + 100px)}.fo{width:10px}.fp{pointer-events:none}.fq{word-wrap:break-word}.fr:after{display:block}.fs:after{clear:both}.ft{max-width:680px}.fu{line-height:1.23}.fv{font-style:normal}.fw{font-weight:700}.gr{margin-bottom:-0.27em}.gs{color:rgba(41, 41, 41, 1)}.gw{border-radius:50%}.gx{height:28px}.gy{width:28px}.gz{margin-left:8px}.ha{margin:0 4px}.hb{margin:0 7px}.hk{margin:0 6px 0 7px}.hl{line-height:1.58}.hm{letter-spacing:-0.004em}.hn{font-family:charter, Georgia, Cambria, "Times New Roman", Times, serif}.id{margin-top:24px}.ie{margin-bottom:-0.46em}.ik{text-decoration:underline}.il{box-shadow:inset 3px 0 0 0 rgba(41, 41, 41, 1)}.im{padding-left:23px}.in{margin-left:-20px}.io{font-style:italic}.ip{max-width:625px}.iv{clear:both}.iw{transition:opacity 100ms 400ms}.ix{overflow:hidden}.iy{will-change:transform}.iz{transform:translateZ(0)}.ja{margin:auto}.jb{background-color:rgba(242, 242, 242, 1)}.jc{padding-bottom:56.8%}.jd{height:0}.je{filter:blur(20px)}.jf{transform:scale(1.1)}.jg{visibility:visible}.jh{padding-bottom:59.36%}.ji{padding-bottom:61.76%}.jj{max-width:800px}.jl{cursor:zoom-in}.jm{z-index:auto}.jo{padding-bottom:50.85714285714286%}.jp{padding-bottom:63.040000000000006%}.jq{margin-top:10px}.jr{text-align:center}.ju{list-style-type:decimal}.jv{margin-left:30px}.jw{padding-left:0px}.kc{list-style-type:disc}.kd{will-change:opacity}.ke{width:188px}.kf{left:50%}.kg{transform:translateX(406px)}.kh{top:calc(65px + 54px + 14px)}.kk{will-change:opacity, transform}.kl{transform:translateY(159px)}.kn{width:197px}.ko{margin-bottom:20px}.kp{padding-bottom:5px}.kq{padding-top:20px}.kr{color:rgba(255, 255, 255, 1)}.ks{fill:rgba(255, 255, 255, 1)}.kt{background:rgba(26, 137, 23, 1)}.kv:disabled:hover{background:rgba(26, 137, 23, 1)}.kw{stroke:rgba(242, 242, 242, 1)}.kx{height:36px}.ky{width:36px}.kz{color:rgba(242, 242, 242, 1)}.la{fill:rgba(242, 242, 242, 1)}.lb{background:rgba(242, 242, 242, 1)}.lc{border-color:rgba(242, 242, 242, 1)}.li{padding-top:32px}.lj{border-top:1px solid rgba(230, 230, 230, 1)}.lk{justify-content:space-evenly}.ll{margin-right:20px}.lr{outline:0}.ls{border:0}.lt{user-select:none}.lu> svg{pointer-events:none}.lw{-webkit-user-select:none}.mg button{text-align:left}.mh{margin-top:2px}.mi{fill:rgba(61, 61, 61, 1)}.mj{opacity:1}.mk{padding-left:6px}.ml{margin-top:1px}.mm{margin-top:40px}.mn{padding-bottom:25px}.mo{margin-top:25px}.mp{max-width:155px}.mw{top:1px}.mz{margin-left:24px}.na{margin-top:4px}.nb{margin-left:4px}.nc{margin-top:5px}.nd{padding-top:40px}.ne{padding-bottom:4px}.nf{background-color:rgba(250, 250, 250, 1)}.oa{text-overflow:ellipsis}.ob{display:-webkit-box}.oc{-webkit-line-clamp:2}.od{-webkit-box-orient:vertical}.of{padding-top:25px}.ol{max-width:100%}.om{margin-bottom:40px}.on{padding-bottom:16px}.oo{margin-bottom:24px}.qk{flex-grow:0}.ql{padding-bottom:24px}.qm{max-width:500px}.qn{flex:0 1 auto}.qp{padding-bottom:8px}.qx{font-size:13px}.qz{margin-right:8px}.rc{padding-bottom:100%}.bj:hover{color:rgba(15, 115, 12, 1)}.bk:hover{fill:rgba(15, 115, 12, 1)}.bl:hover{border-color:rgba(15, 115, 12, 1)}.bm:hover{cursor:pointer}.ea:hover{color:rgba(25, 25, 25, 1)}.eb:hover{fill:rgba(25, 25, 25, 1)}.ku:hover{background:rgba(15, 115, 12, 1)}.ld:hover{background:rgba(242, 242, 242, 1)}.le:hover{border-color:rgba(242, 242, 242, 1)}.lf:hover{cursor:wait}.lg:hover{color:rgba(242, 242, 242, 1)}.lh:hover{fill:rgba(242, 242, 242, 1)}.ly:hover{fill:rgba(117, 117, 117, 1)}.qy:hover{text-decoration:underline}.jn:focus{transform:scale(1.01)}.lx:focus{fill:rgba(117, 117, 117, 1)}.lv:active{border-style:none}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="all and (min-width: 1080px)">.d{display:none}.x{display:flex}.au{margin:0 64px}.gn{font-size:46px}.go{margin-top:0.6em}.gp{line-height:56px}.gq{letter-spacing:-0.011em}.hi{margin-left:30px}.ia{font-size:21px}.ib{line-height:32px}.ic{letter-spacing:-0.003em}.ij{margin-top:2em}.iu{margin-top:56px}.kb{margin-top:1.05em}.lq{margin-right:5px}.mf{margin-top:0px}.mv{margin-top:5px}.my{display:inline-block}.nw{font-size:20px}.nx{line-height:24px}.ny{max-height:48px}.nz{letter-spacing:0}.ok{margin:0}.oz{font-size:22px}.pa{line-height:28px}.pn{width:calc(100% + 32px)}.po{margin-left:-16px}.pp{margin-right:-16px}.qg{padding-left:16px}.qh{padding-right:16px}.qi{flex-basis:25%}.qj{max-width:25%}.qu{font-size:16px}.qv{line-height:20px}.rl{min-width:70px}.rm{min-height:70px}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="all and (max-width: 1079.98px)">.e{display:none}.hh{margin-left:30px}.js{margin-left:auto}.jt{text-align:center}.lp{margin-right:5px}.me{margin-top:0px}.mu{margin-top:5px}.mx{display:inline-block}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="all and (max-width: 903.98px)">.f{display:none}.hg{margin-left:30px}.lo{margin-right:5px}.md{margin-top:0px}.ms{display:inline-block}.mt{margin-top:5px}.qo{margin-right:16px}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="all and (max-width: 727.98px)">.g{display:none}.u{margin-bottom:20px}.ai{box-shadow:inset 0 -1px 0 rgba(230, 230, 230, 1)}.aj{min-height:230px}.am{display:block}.cl{min-height:98px}.cm{display:flex}.cn{align-items:flex-start}.co{flex-direction:column}.cp{justify-content:flex-end}.cv{margin-bottom:28px}.cw{margin-top:0px}.cz{margin-top:28px}.em{border-top:1px solid rgba(230, 230, 230, 1)}.en{border-bottom:1px solid rgba(230, 230, 230, 1)}.ey{align-items:center}.ez{flex:1 0 auto}.gu{margin-top:32px}.gv{flex-direction:column-reverse}.he{margin-bottom:30px}.hf{margin-left:0px}.ln{margin-left:8px}.mb{margin-top:2px}.mc{margin-right:16px}.mr{display:inline-block}.op{padding-bottom:12px}.oq{margin-top:16px}.ra{margin-left:16px}.rb{margin-right:0px}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="all and (max-width: 551.98px)">.h{display:none}.aq{margin:0 24px}.ev{display:block}.fx{font-size:32px}.fy{margin-top:0.64em}.fz{line-height:40px}.ga{letter-spacing:-0.016em}.gt{margin-top:32px}.hc{margin-bottom:30px}.hd{margin-left:0px}.ho{font-size:18px}.hp{line-height:28px}.hq{letter-spacing:-0.003em}.if{margin-top:1.56em}.iq{margin-top:40px}.jx{margin-top:1.34em}.lm{margin-left:8px}.lz{margin-top:2px}.ma{margin-right:16px}.mq{display:inline-block}.ng{font-size:16px}.nh{line-height:20px}.ni{max-height:40px}.nj{letter-spacing:0}.og{margin:0}.or{font-size:20px}.os{line-height:24px}.pb{width:calc(100% + 24px)}.pc{margin-left:-12px}.pd{margin-right:-12px}.pq{padding-left:12px}.pr{padding-right:12px}.ps{flex-basis:100%}.pt{max-width:100%}.qw{margin-bottom:0px}.rd{min-width:48px}.re{min-height:48px}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="all and (min-width: 904px) and (max-width: 1079.98px)">.i{display:none}.y{display:flex}.at{margin:0 64px}.gj{font-size:46px}.gk{margin-top:0.6em}.gl{line-height:56px}.gm{letter-spacing:-0.011em}.hx{font-size:21px}.hy{line-height:32px}.hz{letter-spacing:-0.003em}.ii{margin-top:2em}.it{margin-top:56px}.ka{margin-top:1.05em}.ns{font-size:20px}.nt{line-height:24px}.nu{max-height:48px}.nv{letter-spacing:0}.oj{margin:0}.ox{font-size:22px}.oy{line-height:28px}.pk{width:calc(100% + 32px)}.pl{margin-left:-16px}.pm{margin-right:-16px}.qc{padding-left:16px}.qd{padding-right:16px}.qe{flex-basis:25%}.qf{max-width:25%}.qs{font-size:16px}.qt{line-height:20px}.rj{min-width:70px}.rk{min-height:70px}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="all and (min-width: 728px) and (max-width: 903.98px)">.j{display:none}.z{display:flex}.as{margin:0 48px}.gf{font-size:46px}.gg{margin-top:0.6em}.gh{line-height:56px}.gi{letter-spacing:-0.011em}.hu{font-size:21px}.hv{line-height:32px}.hw{letter-spacing:-0.003em}.ih{margin-top:2em}.is{margin-top:56px}.jz{margin-top:1.05em}.no{font-size:20px}.np{line-height:24px}.nq{max-height:48px}.nr{letter-spacing:0}.oi{margin:0}.ov{font-size:22px}.ow{line-height:28px}.ph{width:calc(100% + 28px)}.pi{margin-left:-14px}.pj{margin-right:-14px}.py{padding-left:14px}.pz{padding-right:14px}.qa{flex-basis:50%}.qb{max-width:50%}.qq{font-size:16px}.qr{line-height:20px}.rh{min-width:48px}.ri{min-height:48px}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="all and (min-width: 552px) and (max-width: 727.98px)">.k{display:none}.ar{margin:0 24px}.ew{display:block}.gb{font-size:32px}.gc{margin-top:0.64em}.gd{line-height:40px}.ge{letter-spacing:-0.016em}.hr{font-size:18px}.hs{line-height:28px}.ht{letter-spacing:-0.003em}.ig{margin-top:1.56em}.ir{margin-top:40px}.jy{margin-top:1.34em}.nk{font-size:16px}.nl{line-height:20px}.nm{max-height:40px}.nn{letter-spacing:0}.oh{margin:0}.ot{font-size:20px}.ou{line-height:24px}.pe{width:calc(100% + 24px)}.pf{margin-left:-12px}.pg{margin-right:-12px}.pu{padding-left:12px}.pv{padding-right:12px}.pw{flex-basis:100%}.px{max-width:100%}.rf{min-width:48px}.rg{min-height:48px}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="print">.hj{display:none}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="(prefers-reduced-motion: no-preference)">.et{animation:k3 .2s ease-in-out both}.jk{transition:transform 300ms cubic-bezier(0.2, 0, 0.2, 1)}.ki{transition:opacity 200ms}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="all and (max-width: 1230px)">.kj{display:none}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="all and (max-width: 1240px)">.km{display:none}</style><style type="text/css" data-fela-rehydration="480" data-fela-type="RULE" media="(orientation: landscape) and (max-width: 903.98px)">.oe{max-height:none}</style></head><body><div id="root"><div class="a b c"><div class="d e f g h i j k"></div><script>document.domain = document.domain;</script><div class="s"><div class="t s u"><div class="ag ah s ai aj"><div class="n ak"><div class="al am"><div class="ao s ap ae"><div class="n p"><div class="aq ar as at au av aw w"><div class="ax n o"><div class="n o ay az"><div class="ba s"><span><button class="bb b bc bd be bf bg bh bi bj bk bl bm bn bo bp bq br bs bt bu bv bw bx">Get started</button></span></div><div class="an"><div class="by al am"><span class="bb b bc bd bz"><a href="https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb7bfb217b437&amp;~feature=LoOpenInAppButton&amp;~channel=ShowPostUnderUser&amp;~stage=mobileNavBar&amp;source=post_page-----b7bfb217b437--------------------------------" class="be bh ca cb cc cd ce cf cg bm bj bk ch ci cj" rel="noopener follow">Open in app</a></span></div></div></div><a href="https://medium.com/?source=post_page-----b7bfb217b437--------------------------------" rel="noopener follow" aria-label="Homepage"><svg viewBox="0 0 1043.63 592.71" class="q r"><g data-name="Layer 2"><g data-name="Layer 1"><path d="M588.67 296.36c0 163.67-131.78 296.35-294.33 296.35S0 460 0 296.36 131.78 0 294.34 0s294.33 132.69 294.33 296.36M911.56 296.36c0 154.06-65.89 279-147.17 279s-147.17-124.94-147.17-279 65.88-279 147.16-279 147.17 124.9 147.17 279M1043.63 296.36c0 138-23.17 249.94-51.76 249.94s-51.75-111.91-51.75-249.94 23.17-249.94 51.75-249.94 51.76 111.9 51.76 249.94"></path></g></g></svg></a></div></div></div></div></div><div class="n p"><div class="aq ar as at au av aw w"><div class="ah n o ay ck cl cm cn co cp"><div class="w n cq ck"><div class="v n w"><div class="cr cs w n ct ay cu cv cw cm cn co"><div class="cx cy s cz"><a rel="noopener follow" aria-label="Author Homepage" href="/?source=post_page-----b7bfb217b437--------------------------------"><span class="bb da db dc dd de df dg dh di dj dk dl dm dn">danny odler</span></a></div></div></div><div class="x y z k h ab ac o ae af"><p class="bb b bc bd bz"><span><a href="https://medium.com/m/signin?operation=login&amp;redirect=https%3A%2F%2Fdannyodler.medium.com%2Fattacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437&amp;source=post_page-----b7bfb217b437---------------------nav_reg-----------" class="be bh ca cb cc cd ce cf cg bm bj bk ch ci cj" rel="noopener follow">Sign in</a></span></p><div class="do dp dq cy s"><span><button class="bb b bc bd be bf bg bh bi bj bk bl bm bn bo bp bq br bs bt bu bv bw bx">Get started</button></span></div><a href="https://medium.com/?source=post_page-----b7bfb217b437--------------------------------" rel="noopener follow" aria-label="Homepage"><svg viewBox="0 0 1043.63 592.71" class="q r"><g data-name="Layer 2"><g data-name="Layer 1"><path d="M588.67 296.36c0 163.67-131.78 296.35-294.33 296.35S0 460 0 296.36 131.78 0 294.34 0s294.33 132.69 294.33 296.36M911.56 296.36c0 154.06-65.89 279-147.17 279s-147.17-124.94-147.17-279 65.88-279 147.16-279 147.17 124.9 147.17 279M1043.63 296.36c0 138-23.17 249.94-51.76 249.94s-51.75-111.91-51.75-249.94 23.17-249.94 51.75-249.94 51.76 111.9 51.76 249.94"></path></g></g></svg></a></div></div></div></div></div></div><div class="s"><div class="n p"><div class="aq ar as at au av aw w"><div><div class="dr ds n o"><div class="s"><span class="bb b dt du dv de df dg dh di dj dk bz"><div class="n o"><div class="dw dx ak"><span class="bb b bc bd bz"><a class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed" rel="noopener follow" href="/followers?source=post_page-----b7bfb217b437--------------------------------">15 Followers</a></span></div><div class="s h"></div><div class="s h"></div><div class="ee n ak h"><a class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed" rel="noopener follow" href="/about?source=post_page-----b7bfb217b437--------------------------------">About</a></div></div></span></div><div class="al ef eg am"><button class="n o p eh ei ej ek" aria-label="Expand navbar"><svg width="14" height="14" class="el"><path d="M0 .5h14M0 7h14M0 13.5h14"></path></svg></button></div></div></div></div></div></div></div><div class="em en c eo ep eq er es af ae et"><div class="n p"><div class="aq ar as at au av aw w"><div class="eu w ev ew j i d es ae"><div class="ex n o"><div class="al cm ey ez"><span><button class="bb b bc bd be bf bg bh bi bj bk bl bm bn bo bp bq br bs bt bu bv bw bx">Get started</button></span><div class="fa al am"><span class="bb b bc bd bz"><a href="https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb7bfb217b437&amp;~feature=LoOpenInAppButton&amp;~channel=ShowPostUnderUser&amp;~stage=mobileNavBar&amp;source=post_page-----b7bfb217b437--------------------------------" class="be bh ca cb cc cd ce cf cg bm bj bk ch ci cj" rel="noopener follow">Open in app</a></span></div></div><a href="https://medium.com/?source=post_page-----b7bfb217b437--------------------------------" rel="noopener follow" aria-label="Homepage"><svg viewBox="0 0 1043.63 592.71" class="q r"><g data-name="Layer 2"><g data-name="Layer 1"><path d="M588.67 296.36c0 163.67-131.78 296.35-294.33 296.35S0 460 0 296.36 131.78 0 294.34 0s294.33 132.69 294.33 296.36M911.56 296.36c0 154.06-65.89 279-147.17 279s-147.17-124.94-147.17-279 65.88-279 147.16-279 147.17 124.9 147.17 279M1043.63 296.36c0 138-23.17 249.94-51.76 249.94s-51.75-111.91-51.75-249.94 23.17-249.94 51.75-249.94 51.76 111.9 51.76 249.94"></path></g></g></svg></a></div></div></div></div></div></div><article><section class="fb fc fd fe w ff bv s"></section><span class="s"></span><div><div><div class="ef eo fm fn fo fp"></div><section class="dn fq fr di fs"><div class="n p"><div class="aq ar as at au ft aw w"><div class=""><h1 id="458d" class="fu dl fv bb fw fx fy fz ga gb gc gd ge gf gg gh gi gj gk gl gm gn go gp gq gr gs"><strong class="ce">Attacking the Golden Ring on AMD Mini-PC</strong></h1><div class="cx"><div class="n ck gt gu gv"><div class="o n"><div><a rel="noopener follow" href="/?source=post_page-----b7bfb217b437--------------------------------"><img alt="danny odler" class="s gw gx gy" src="https://miro.medium.com/fit/c/56/56/1*dmbNkD5D-u45r44go_cf0g.png" width="28" height="28"/></a></div><div class="gz w n cu"><div class="n"><div style="flex:1"><span class="bb b bc bd gs"><a class="" rel="noopener follow" href="/?source=post_page-----b7bfb217b437--------------------------------"><p class="bb b bc bd be">danny odler</p></a></span></div></div><span class="bb b bc bd bz"><a class="" rel="noopener follow" href="/attacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437?source=post_page-----b7bfb217b437--------------------------------"><p class="bb b bc bd bz"><span class="ha"></span>Jun 13, 2020<span class="hb">·</span>12 min read</p></a></span></div></div><div class="n ct hc hd he hf hg hh hi hj"><div class="n o"><div class="bw" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bw" role="tooltip" aria-hidden="false"><button class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed" aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post"><svg width="25" height="25" class="r"><g fill-rule="evenodd"><path d="M15.6 5a.42.42 0 0 0 .17-.3.42.42 0 0 0-.12-.33l-2.8-2.79a.5.5 0 0 0-.7 0l-2.8 2.8a.4.4 0 0 0-.1.32c0 .12.07.23.16.3h.02a.45.45 0 0 0 .57-.04l2-2V10c0 .28.23.5.5.5s.5-.22.5-.5V2.93l2.02 2.02c.08.07.18.12.3.13.11.01.21-.02.3-.08v.01"></path><path d="M18 7h-1.5a.5.5 0 0 0 0 1h1.6c.5 0 .9.4.9.9v10.2c0 .5-.4.9-.9.9H6.9a.9.9 0 0 1-.9-.9V8.9c0-.5.4-.9.9-.9h1.6a.5.5 0 0 0 .35-.15A.5.5 0 0 0 9 7.5a.5.5 0 0 0-.15-.35A.5.5 0 0 0 8.5 7H7a2 2 0 0 0-2 2v10c0 1.1.9 2 2 2h11a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2"></path></g></svg></button></div></div></div><div class="hk s"></div><div class="s az"></div></div></div></div></div></div><p id="2790" class="hl hm fv hn b ho hp hq hr hs ht hu hv hw hx hy hz ia ib ic id ie dn gs">(or how to bypass Windows strongest security boundary)</p><p id="8b26" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">TL; DR</strong></p><p id="abfa" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">In December 2019 <a href="http://www.amd.com" class="dy ik" target="_blank" rel="noopener ugc nofollow">AMD</a> announced that their partners will start manufacturing a new high per<span id="rmm"><span id="rmm">f</span></span>ormance product line- <a href="https://www.amd.com/en/press-releases/2019-12-03-amd-enables-ecosystem-for-high-performance-mini-pcs-powered-amd-ryzen" class="dy ik" target="_blank" rel="noopener ugc nofollow">AMD MiniPc</a>. This MiniPc is actually a direct competition to the well known Intel NUC and Gigabyte Brix. In this post I will show full research and exploitation for 1 of the 3 vulnerabilities I found in the UEFI image and reported to AMD. Specifically speaking all three vulnerabilities reside in SMM <strong class="hn fw">(Ring -2)</strong> code which is part of the UEFI image. SMM is the most privileged code that can execute on x86 CPU thus allowing to attack any low level component including Kernel and Hypervisor.</p><p id="d3fe" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">The vulnerability in this post allows arbitrary ‘write primitive’ to any location in SMRAM and as consequence execute attacker code in SMM mode. While executing in SMM I will show how it is possible to attack Windows Hypervisor and thus bypass <a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/bringup/device-guard-and-credential-guard" class="dy ik" target="_blank" rel="noopener ugc nofollow"><strong class="hn fw">HVCI</strong></a> -hypervisor code integrity. HVCI is a wonderful design and technology which eliminates any chance to run attacker code in Kernel mode. Some think that SMM vulnerabilities are not generic, this is actually not true, there are two major BIOS vendors -AMI and Phoenix that own huge amount of the code in any UEFI image no matter which CPU, Chipset, Motherboard this PC uses. Thanks much to Saar Amar @AmarSaar and Alex Matrosov @matrosov for reviewing the article. Good words also to AMD and ASRock for their fast response and quick fix release.</p><p id="22d8" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">Timeline-</p><p id="24a5" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">CVE-2020–14032</strong>; Severity High; 2/4/20 reported; 16/4/20 approved as vulnerability; 8/6/20 fixed version released. (by ASRock)</p><p id="af06" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">CVE-2020–12890</strong>; Severity High; 2/4/20 reported; 16/4/20 approved as vulnerability; Not fixed yet. (by AMD)</p><p id="3a15" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">CVE-2020–00000</strong>; Severity High; 2/4/20 reported; 16/4/20 approved as vulnerability; Not fixed yet. (by ASRock)</p><blockquote class="il im in"><p id="b593" class="hl hm io hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">What is SMM</strong></p></blockquote><p id="8e10" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">While you probably know Ring 3 (user mode), Ring 0 (kernel mode) and Ring -1 (hypervisor mode) SMM is referred as ring -2. SMM is actually the most privileged execution on the main x86 CPU which means that the CPU might interrupt at any moment and switch to SMM execution mode. If you want to learn more, a great training is provided by Alex Matrosov on UEFI internals.</p><p id="8300" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">SMM code loaded to special protected memory region– SMRAM so when the PC boots the SMM drivers, which are part of the UEFI image and stored on the SPI flash, are loaded to SMRAM. Once SMM drivers are loaded to SMRAM, this region is locked and the memory controller cannot access these addresses unless the CPU is in SMM mode. From this point SMM world is parallel to OS execution and there is no way to change SMM code after your PC finishes the ‘bios’ boot. SMM drivers have some different purposes but mainly responsible for propriety CPU and chipset configurations, mother board manufacturer code, secured operations such as setting secure boot hashes, TPM configurations and power management.</p><p id="8bea" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">While the CPU switches to SMM it starts the execution inside SMRAM at SMBASE + 0x8000. SMBASE value is set at boot process and is saved internally in CPU MSR register which is accessible only from SMM mode. Each CPU core has its own SMBASE value because each core needs its own saved state data at constant offset from SMBASE. SMM execution starts in 16 bit real mode and very quickly changes to long mode 64 bit. Usually the main flow of SMM execution consists of Interrupt Dispatcher which calls the relevant SMI handler for this SMM interrupt, the most common SMM interrupt is software interrupt which can be triggered only from kernel code by writing the SMI number to APMC I/O port. It is important to note that when CPU switched to SMM the current state (registers and more) is saved to SMM State Save area which exists for each CPU core. SMM State Save area resides at SMBASE+0xFE00 and as said before each core has slightly different SMBASE.</p><p id="424a" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">When code executes in SMM the whole physical memory is accessible and nothing can stop you from overwriting critical data in kernel or hypervisor physical pages. SMM code acts as it is kind of mini OS -it has I/O services, memory allocation services, ability to allocate private interfaces, SMM interrupts management, events notifications and more.</p><p id="7f48" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">To summarize- SMM code is the most privileged executed code on the CPU, the code is completely hidden from the running operating system, it cannot be modified by kernel and even by DMA devices and most important SMM code can access any physical memory.</p><blockquote class="il im in"><p id="793e" class="hl hm io hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">Reversing the vulnerable SMM module</strong></p></blockquote><p id="fd3a" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">My research was done by static manual reversing so we will see the details of each step at my progress. The vulnerable module meets perfectly my first criteria for SMM bugs hunting — it implements SMI (SMM interrupt) handler which can be triggered from OS kernel code. To show the different SMM drivers from UEFI image it is best to use UEFITool, when you open the image you will see about 40 SMM drivers and each SMM driver has its dependencies. These dependencies are actually interfaces that must be already installed when SmmCore driver needs to decide who is the next SMM driver to be loaded to memory. One of such dependencies is EfiSmmSwDispatch2ProtocolGuid which is used to register SMI handler. So just by statically looking at the dependencies you can guess that this driver registers and handles SMM interrupt. To be sure if it indeed registers SMI handler you need to dump the whole SMRAM area and look for a linked list with header ‘DBRC’ or ‘SWSM’ or ‘SMIH’, each node in the list contains the SMI number and SMRAM address of the handler. The problem is that there is no way to dump SMRAM but only with a physical hardware debugger.</p><p id="a53b" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">One of the modules that use EfiSmmSwDispatch2ProtocolGuid is SmiVariable driver. This driver’s general purpose is to update specific UEFI variables from SMM code. UEFI variables are several dozens of usually persistent variables that are stored directly on the SPI flash where the UEFI image is stored. These UEFI variables store different information such as OS configuration, TPM configuration, Secure Boot keys and hashes and some of these variables can be set directly from Windows OS or as in our case from SMM code.</p><p id="b17b" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">The main driver entry point calls the Init_SMI_Handler function as can be seen in next figure:</p><figure class="iq ir is it iu iv fd fe paragraph-image"><div class="fd fe ip"><div class="ja s ap jb"><div class="jc jd s"><div class="ep iw ef es eo ex w ix iy iz"><img alt="" class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/1*qKkwN1_i3Gp2CkHwk-bg2Q.jpeg?q=20" width="625" height="355" role="presentation"/></div><img alt="" class="ep iw ef es eo ex w c" width="625" height="355" role="presentation"/><noscript><img alt="" class="ef es eo ex w" src="https://miro.medium.com/max/1250/1*qKkwN1_i3Gp2CkHwk-bg2Q.jpeg" width="625" height="355" srcSet="https://miro.medium.com/max/552/1*qKkwN1_i3Gp2CkHwk-bg2Q.jpeg 276w, https://miro.medium.com/max/1104/1*qKkwN1_i3Gp2CkHwk-bg2Q.jpeg 552w, https://miro.medium.com/max/1250/1*qKkwN1_i3Gp2CkHwk-bg2Q.jpeg 625w" sizes="625px" role="presentation"/></noscript></div></div></div></figure><p id="2391" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">Init_SMI_Handler function gets a pointer to the EfiSmmSwDispatch2 interface and registers SMI handler 0xEF. SMI 0xEF handler implements a wrapper logic for setting/getting data to/from UEFI variable. As you can see in the next figure the handler gets a pointer to EFI_SMM_CPU_PROTOCOL and reads from the CPU ‘saved state’ the value of register RSI. This RSI value is totally attacker controlled and is set in kernel code just before SW SMI is triggered by writing to APMC I/O port 0xB2.</p><figure class="iq ir is it iu iv fd fe paragraph-image"><div class="fd fe ip"><div class="ja s ap jb"><div class="jh jd s"><div class="ep iw ef es eo ex w ix iy iz"><img alt="" class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/1*EfTcbNWD0JZ6uO_RRzR4cQ.jpeg?q=20" width="625" height="371" role="presentation"/></div><img alt="" class="ep iw ef es eo ex w c" width="625" height="371" role="presentation"/><noscript><img alt="" class="ef es eo ex w" src="https://miro.medium.com/max/1250/1*EfTcbNWD0JZ6uO_RRzR4cQ.jpeg" width="625" height="371" srcSet="https://miro.medium.com/max/552/1*EfTcbNWD0JZ6uO_RRzR4cQ.jpeg 276w, https://miro.medium.com/max/1104/1*EfTcbNWD0JZ6uO_RRzR4cQ.jpeg 552w, https://miro.medium.com/max/1250/1*EfTcbNWD0JZ6uO_RRzR4cQ.jpeg 625w" sizes="625px" role="presentation"/></noscript></div></div></div></figure><p id="32d2" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">After this, the handler gets a pointer to EfiSmmVariable interface which is the main interface that stores/reads data to/from UEFI variables. There is some strange flow done by calling a function pointer with RSI value as argument but the function pointer is NULL so the flow skipped.</p><figure class="iq ir is it iu iv fd fe paragraph-image"><div class="fd fe ip"><div class="ja s ap jb"><div class="ji jd s"><div class="ep iw ef es eo ex w ix iy iz"><img alt="" class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/1*htIUqXQWOB9-HP5fUbdIsQ.jpeg?q=20" width="625" height="386" role="presentation"/></div><img alt="" class="ep iw ef es eo ex w c" width="625" height="386" role="presentation"/><noscript><img alt="" class="ef es eo ex w" src="https://miro.medium.com/max/1250/1*htIUqXQWOB9-HP5fUbdIsQ.jpeg" width="625" height="386" srcSet="https://miro.medium.com/max/552/1*htIUqXQWOB9-HP5fUbdIsQ.jpeg 276w, https://miro.medium.com/max/1104/1*htIUqXQWOB9-HP5fUbdIsQ.jpeg 552w, https://miro.medium.com/max/1250/1*htIUqXQWOB9-HP5fUbdIsQ.jpeg 625w" sizes="625px" role="presentation"/></noscript></div></div></div></figure><p id="6c89" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">RSI value from previous step is used as a pointer to a buffer which holds at offset 0x1 “operation selection id” and at offset 0x4 a pointer to a struct of arguments for set/get a UEFI variable. If offset 0x1 equals to “1” then the flow will <strong class="hn fw">read</strong> data from UEFI variable.</p><p id="847b" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">In the next figure you can see how read data from UEFI variable is done -the previously obtained pointer to EfiSmmVariable_Interface is used to call SmmGetVariable() with arguments supplied as a struct pointed by the value in RSI+0x4.</p><p id="f49d" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">This is the layout of attacker controlled surface:</p><figure class="iq ir is it iu iv fd fe paragraph-image"><div role="button" tabindex="0" class="jk jl ap jm w jn"><div class="fd fe jj"><div class="ja s ap jb"><div class="jo jd s"><div class="ep iw ef es eo ex w ix iy iz"><img alt="" class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/1*GlW3gJsvSX9yZRiY4ZBEbg.jpeg?q=20" width="700" height="356" role="presentation"/></div><img alt="" class="ep iw ef es eo ex w c" width="700" height="356" role="presentation"/><noscript><img alt="" class="ef es eo ex w" src="https://miro.medium.com/max/1400/1*GlW3gJsvSX9yZRiY4ZBEbg.jpeg" width="700" height="356" srcSet="https://miro.medium.com/max/552/1*GlW3gJsvSX9yZRiY4ZBEbg.jpeg 276w, https://miro.medium.com/max/1104/1*GlW3gJsvSX9yZRiY4ZBEbg.jpeg 552w, https://miro.medium.com/max/1280/1*GlW3gJsvSX9yZRiY4ZBEbg.jpeg 640w, https://miro.medium.com/max/1400/1*GlW3gJsvSX9yZRiY4ZBEbg.jpeg 700w" sizes="700px" role="presentation"/></noscript></div></div></div></div></figure><figure class="iq ir is it iu iv fd fe paragraph-image"><div class="fd fe ip"><div class="ja s ap jb"><div class="jp jd s"><div class="ep iw ef es eo ex w ix iy iz"><img alt="" class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/1*JQqXxa483ES12hxtPehjTg.jpeg?q=20" width="625" height="394" role="presentation"/></div><img alt="" class="ep iw ef es eo ex w c" width="625" height="394" role="presentation"/><noscript><img alt="" class="ef es eo ex w" src="https://miro.medium.com/max/1250/1*JQqXxa483ES12hxtPehjTg.jpeg" width="625" height="394" srcSet="https://miro.medium.com/max/552/1*JQqXxa483ES12hxtPehjTg.jpeg 276w, https://miro.medium.com/max/1104/1*JQqXxa483ES12hxtPehjTg.jpeg 552w, https://miro.medium.com/max/1250/1*JQqXxa483ES12hxtPehjTg.jpeg 625w" sizes="625px" role="presentation"/></noscript></div></div></div><figcaption class="jq jr ff fd fe js jt bb b bc bd bz">SmmGetVariable function called</figcaption></figure><p id="c953" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">As you can see the values (pointers) from the ArgsStruct are used directly “as is” without any validation. SmmGetVariable function has a simple task it uses the ArgsStruct values to find the correct variable then read its data and then store the data in a buffer. All these values are attacker controlled because RSI register value is also attacker controlled, we will see full details in the pre-exploitation step.</p><blockquote class="il im in"><p id="3aa8" class="hl hm io hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">From vulnerability to exploitation -HVCI bypass</strong></p></blockquote><p id="8854" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">So till now we got 3 important steps:</p><ol class=""><li id="ff0e" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie ju jv jw gs">We control the value of RSI register because it is saved in CPU SMM ‘state save’ area and being read by SMI handler 0xEF when the SMI is triggered.</li><li id="cbb1" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">Because RSI points to a buffer which points to ArgsStruct we actually control all the arguments for the SmmGetVariable() function.</li><li id="22c0" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">No validations are done on RSI value or on the inner pointers in the buffer that RSI is pointing to.</li></ol><p id="f147" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">At this moment if an attacker is able to set its own value (shellcode) in a UEFI variable and control the destination buffer of SmmGetVariable() this is a game over situation because it will allow to write our shellcode to SMRAM.</p><p id="7a90" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">Luckily steps 1+2+3 exactly suit for a perfect exploitation.</p><p id="c48f" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">Pre Exploitation — building write primitive:</strong></p><ol class=""><li id="be7c" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie ju jv jw gs">Prepare “config buffer” with offset 0x1==1 and offset 0x4==address of “Args Struct” which will be 0x810 at my exploitation. I will put the “config buffer” at physical memory 0x800 which is on most PCs an empty area.</li><li id="2e03" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">Prepare “Args Struct” buffer starting from physical memory 0x810. At offset 0x0==variable GUID; offset 0x10==address of variable name (0x850); offset 0x14=0; offset 0x18==address of data size(0x830); offset 0x1c==address of destination buffer(0x840).</li><li id="a303" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">At location 0x850 put your variable name in Unicode, I will use “SmmRootkit”. At location 0x830 put your shellcode size. At location 0x840 put your destination address in SMRAM where the shellcode will reside.</li><li id="5ed2" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">From Userspace use Windows API SetFirmwareEnvironmentVariable() to create new UEFI variable named “SmmRootkit” and its value set to your favorite shellcode.</li><li id="76d2" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">Trigger SMI handler 0xEF by writing to I/O port 0xB2. We will need to trigger the SMI with an RSI register value controlled by us. RSI must point to the “config buffer”-0x800 at this example.</li></ol><p id="e280" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">Pay attention that RSI must be set just before writing to the I/O port.</p><p id="00ff" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">If you follow these steps the result is a generic write what where primitive that allows you write any data to SMRAM. As you might remember there <strong class="hn fw">is no way</strong> to write to SMRAM once it is locked during boot. In my example the vulnerability exists in SMM code so it can definitely write to SMRAM.</p><blockquote class="il im in"><p id="c51e" class="hl hm io hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">HVCI bypass Exploitation</strong></p></blockquote><p id="ea55" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">Once we have a write primitive to SMRAM we are close to game over. But first of all what is HVCI?</p><p id="9adb" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">I will not dive here in to details because it is a whole huge topic to discuss, but generally what you need to know is:</p><ol class=""><li id="f075" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie ju jv jw gs">In the last years Windows moved its security to VBS — virtualization based security.</li><li id="ebf1" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">VBS uses Windows hypervisor (Hyper-V) to create 2 worlds Normal(vtl0) + Secure(vtl1).</li><li id="cda3" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">Hyper-V manages the two worlds and works closely with the main CPU(VM instructions) .</li><li id="1ce6" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">In such a design we get isolation between worlds of sensitive and critical functionality such as HVCI, CredentialGuard and more.</li><li id="0166" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">The kernel that manages VTL1 is Securekernel which runs in ring0 VTL1, SecureKernel has limited system calls and is about 90% less in size than regular Kernel.</li><li id="f292" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">HVCI main security boundaries:</li></ol><ul class=""><li id="69ee" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie kc jv jw gs">Any code that is loaded to Kernel must be signed otherwise it will not execute.</li><li id="11cb" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie kc jv jw gs">There is no possibility to allocate RWX pages in Kernel.</li><li id="74c2" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie kc jv jw gs">There is no possibility to add W attribute to RX (code) page.</li></ul><p id="85af" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">7. HVCI uses EPT (extended page table) which maps all OS “physical addresses” to real system physical addresses. This means that page permissions (R/W/X) are stored not only in the OS page table but also in EPT. EPT is maintained by hypervisor and there is actually no way to change EPT from user or kernel mode.</p><p id="5f05" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">8. As a result, every violation in kernel page permissions will be caught immediately because OS page permission will differ from the permissions of the same page in EPT.</p><p id="c0b6" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">Now let’s say that VTL0 kernel asked for some security checks from VTL1 before it will start executing kernel code. One possibility to attack the design is to run malicious code in VTL0 kernel space (not a trivial task at all) and change the security results that came from VTL1. In such scenario HVCI will stop the attack because the page permission in EPT will remain Write or eXecute — you cannot allocate RWX page at all and if you allocate RX page and add Write afterwards, still in EPT it will remain RX. As a result HVCI will not allow code execution on this kernel page.</p><p id="9bde" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">The only way to run kernel malicious code is to find the attacked page (PTE) in EPT and change the permission to RWX but as you already know you cannot access EPT from user/kernel mode.</p><p id="fd7a" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">In my example, HVCI will be running and I will write and execute shellcode to an existing read only page inside ACPI.sys driver module.</p><p id="4478" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">How is it possible?</strong></p><p id="4ef2" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">Here comes the power of SMM-from SMM code you can access any physical page and thus you can change EPT, but one problem still exists you don’t know where is EPT located. Here SMM also helps us because each time CPU switches to SMM it saves in “state save area” (SMBASE+0xFE00) a pointer to VMCB Physical Address and inside VMCB we have the physical address of EPT. SMBASE address is the same at each boot and across same PCs so simple SMM shellcode can find the physical address of EPT, on AMD architecture –</p><p id="6e21" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">1. VMCB address = SMBASE+0xFE00+OffsetTo(VMCB Address)</p><p id="f581" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">2. EPT address = VMCB address+0xB0</p><p id="56e3" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">Exploitation Steps SMM shellcode</strong></p><ol class=""><li id="14ff" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie ju jv jw gs">The shellcode will get EPT physical address from VMCB+0xB0.</li><li id="65f5" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">Use OS physical address of the attacked page (see bullet 3 next section) to parse the EPT and find the corresponding page permissions in EPT. This is very similar to the standard page table walk CR3-&gt;PML4-&gt;PDPT-&gt;PD-&gt;PT. Pay attention i had 2MB pages so the walk is slightly different.</li></ol><p id="3fb9" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">3. Change the permission from R to RWX.</p><p id="f98f" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">Exploitation Steps Windows OS</strong></p><p id="da34" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">Make sure HVCI is enabled and running. At this exploit I will use private read/write primitives to kernel but this is out of scope because we are dealing with ring 0 to ring -2 privilege escalation.</p><ol class=""><li id="e1a3" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie ju jv jw gs">I will get kernel virtual address of .rdata page from the ACPI driver at offset 0x7E100 (build 19H2 November 2019). This page is with (R)ead only permissions and has some empty space for a short “hello SMM rootkit” shellcode.</li><li id="47cd" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">I will get this page PTE and change page permissions to RWX using a write primitive to kernel. Windows has an array of all PTEs at a specific address which is called PTE_BASE. This value is randomized but you will see how to get this value in the POC. Once you have PTE_BASE your PTE will be at offset Page VirtAddrss / 2⁹, this because each page table (2¹² size) maps 2MB of virtual memory(2²¹ size).</li><li id="5f8e" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">Change permissions in PTE from R to RWX. Also from the PTE get the physical address of the page and use it in the SMM shellcode when parsing the EPT.</li><li id="4703" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">I will use a kernel write primitive to write simple “hello SMM rootkit” assembly to the kernel page from step 1.</li><li id="bd7a" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">Use the SMRAM write primitive, as described in the pre-exploitation section, and write the SMM shellcode so you overwrite any SMI handler of your choice, let’s say SMI 0x30.</li><li id="48c4" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">Trigger SMI 0x30 by writing the value 0x30 to APMC I/O port 0xB2.</li><li id="af7e" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">From now the kernel page from step 1 is marked RWX also in EPT.</li><li id="f109" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">Call yours “hello SMM rootkit” shellcode from step 4 and it will execute. Use DbgView from SysInternals to see the print from kernel.</li><li id="f67d" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs">HVCI bypass succeeded — we wrote and executed our shellcode to Read only page.</li></ol><p id="befe" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">In case you wondered, if you just changed to page permissions from R to RWX without using the SMM shellcode to update EPT, the result when execution happens would be BSOD with unrecoverable Exception.</p><p id="9ef7" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">POC video: <a href="https://youtu.be/yUrb3lzl-Fo" class="dy ik" target="_blank" rel="noopener ugc nofollow">https://youtu.be/yUrb3lzl-Fo</a></p><blockquote class="il im in"><p id="49c0" class="hl hm io hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs"><strong class="hn fw">Conclusion and possible mitigation</strong></p></blockquote><p id="9e58" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">The root cause of this SMM vulnerability is in lack of checks on the destination buffer address when calling SmmGetVariable() in SMI handler 0xEF. As a result attacker achieves generic write primitive to the most protected memory, SMRAM, and from now code execution in SMM is a trivial task as already explained. Code execution in SMM is a game over for all security boundaries such as SecureBoot, Hypervisor, VBS, Kernel and more.</p><p id="3cf9" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">This vulnerability was fixed by adding several checks to destination buffer and other pointers such that they do not point to SMRAM regions.</p><p id="55a8" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">During last year Windows introduced its Secured-Core PC which tries to enforce UEFI code to implement SMM monitor and audit but it will take long time to adopt these changes if at all. In the upcoming Blackhat USA 2020, Saar Amar and Daniel King will drop 2 critical vulnerabilities in the Securekernel which bypass VBS boundaries.</p><p id="457a" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">One of the attack vectors with code execution in SMM is writing persistent malware to the SPI flash where UEFI image exists. Such attack would be eliminated if Intel BootGuard is correctly working but it will not help in the case presented in this research because all modifications are done at runtime when boot is already finished.</p><p id="a92e" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">For comments and questions you can contact me at: danny.odler@gmail.com</p><p id="8d76" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie dn gs">References:</p><ol class=""><li id="ccd4" class="hl hm fv hn b ho if hp hq hr ig hs ht hu ih hv hw hx ii hy hz ia ij ib ic ie ju jv jw gs"><a href="https://www.blackhat.com/us-20/briefings/schedule/#breaking-vsm-by-attacking-securekernel-20382" class="dy ik" target="_blank" rel="noopener ugc nofollow">https://www.blackhat.com/us-20/briefings/schedule/#breaking-vsm-by-attacking-securekernel-20382</a></li><li id="c34c" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs"><a href="https://github.com/saaramar/Publications/blob/master/BluehatIL_VBS_meetup/VBS_Internals.pdf" class="dy ik" target="_blank" rel="noopener ugc nofollow">https://github.com/saaramar/Publications/blob/master/BluehatIL_VBS_meetup/VBS_Internals.pdf</a></li><li id="f701" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs"><a href="https://medium.com/@matrosov/bypass-intel-boot-guard-cc05edfca3a9" class="dy ik" rel="noopener">https://medium.com/@matrosov/bypass-intel-boot-guard-cc05edfca3a9</a></li><li id="ba2b" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs"><a href="https://medium.com/@matrosov/uefi-vulnerabilities-classification-4897596e60af" class="dy ik" rel="noopener">https://medium.com/@matrosov/uefi-vulnerabilities-classification-4897596e60af</a></li><li id="b9a0" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs"><a href="http://blog.cr4.sh/2016/02/exploiting-smm-callout-vulnerabilities.html" class="dy ik" target="_blank" rel="noopener ugc nofollow">http://blog.cr4.sh/2016/02/exploiting-smm-callout-vulnerabilities.html</a></li><li id="5e2d" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs"><a href="http://blog.cr4.sh/2015/07/building-reliable-smm-backdoor-for-uefi.html" class="dy ik" target="_blank" rel="noopener ugc nofollow">http://blog.cr4.sh/2015/07/building-reliable-smm-backdoor-for-uefi.html</a></li><li id="f119" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs"><a href="https://github.com/tpn/pdfs/blob/master/Battle%20of%20SKM%20and%20IUM%20-%20How%20Windows%2010%20Rewrites%20OS%20Architecture%20-%20Alex%20Ionescu%20-%202015%20(blackhat2015).pdf" class="dy ik" target="_blank" rel="noopener ugc nofollow">https://github.com/tpn/pdfs/blob/master/Battle%20of%20SKM%20and%20IUM%20-%20How%20Windows%2010%20Rewrites%20OS%20Architecture%20-%20Alex%20Ionescu%20-%202015%20(blackhat2015).pdf</a></li><li id="ec96" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs"><a href="https://www.synacktiv.com/posts/exploit/through-the-smm-class-and-a-vulnerability-found-there.html" class="dy ik" target="_blank" rel="noopener ugc nofollow">https://www.synacktiv.com/posts/exploit/through-the-smm-class-and-a-vulnerability-found-there.html</a></li><li id="37ed" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs"><a href="https://github.com/tianocore-docs/Docs/raw/master/White_Papers/A_Tour_Beyond_BIOS_Memory_Map_And_Practices_in_UEFI_BIOS_V2.pdf" class="dy ik" target="_blank" rel="noopener ugc nofollow">https://github.com/tianocore-docs/Docs/raw/master/White_Papers/A_Tour_Beyond_BIOS_Memory_Map_And_Practices_in_UEFI_BIOS_V2.pdf</a></li><li id="5bd8" class="hl hm fv hn b ho jx hp hq hr jy hs ht hu jz hv hw hx ka hy hz ia kb ib ic ie ju jv jw gs"><a href="https://www.hardwear.io/berlin-2020/training/hunting-uefi-firmware-implants.php" class="dy ik" target="_blank" rel="noopener ugc nofollow">https://www.hardwear.io/berlin-2020/training/hunting-uefi-firmware-implants.php</a></li></ol></div></div></section></div></div></article><div class="ep fp eq kk w kl es ki km" data-test-id="post-sidebar"><div class="n p"><div class="aq ar as at au av aw w"><div class="kn n ak"><div class="fp"><div><div class="ko s"><div class="kp s"><a class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed" rel="noopener follow" href="/?source=post_sidebar--------------------------post_sidebar-----------"><h2 class="bb da dt bd dl gs dn">danny odler</h2></a></div><div class="kq n"><span><button class="bb b bc bd kr bf ks kt bi ku bl bm bn bo kv br bs bt bu bv bw bx">Follow</button></span><div class="gz s"><div><div><div class="bw" role="tooltip" aria-hidden="false"><div class="s"><span><a href="https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fefaa19569935&amp;operation=register&amp;redirect=https%3A%2F%2Fdannyodler.medium.com%2Fattacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437&amp;newsletterV3=f873a1ef5f03&amp;newsletterV3Id=efaa19569935&amp;user=danny%20odler&amp;userId=f873a1ef5f03&amp;source=post_sidebar-----b7bfb217b437---------------------subscribe_user-----------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed" rel="noopener follow"><button class="bb b bc bd kz cf la lb lc ld le lf lg lh bn bo kv br bs bt bu bv bw bx" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="kw kx ky"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25" stroke-width="0.5"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)" stroke-width="0.5"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5" stroke-linecap="round"></path><path d="M11.5 14.5L19 20l4-3" stroke-linecap="round"></path></svg></button></a></span></div></div></div></div></div></div></div><div class="li lj w n o ay lk"><div class="ll n"><div class="n o ay"><div class="s ap lm ln lo lp lq"><span><a href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2Fb7bfb217b437&amp;operation=register&amp;redirect=https%3A%2F%2Fdannyodler.medium.com%2Fattacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437&amp;user=danny%20odler&amp;userId=f873a1ef5f03&amp;source=post_sidebar-----b7bfb217b437---------------------clap_sidebar-----------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed" rel="noopener follow"><div class="cf lr ls lt ek lu lv lw r lx ly"><svg width="29" height="29" aria-label="clap"><g fill-rule="evenodd"><path d="M13.74 1l.76 2.97.76-2.97zM16.82 4.78l1.84-2.56-1.43-.47zM10.38 2.22l1.84 2.56-.41-3.03zM22.38 22.62a5.11 5.11 0 0 1-3.16 1.61l.49-.45c2.88-2.89 3.45-5.98 1.69-9.21l-1.1-1.94-.96-2.02c-.31-.67-.23-1.18.25-1.55a.84.84 0 0 1 .66-.16c.34.05.66.28.88.6l2.85 5.02c1.18 1.97 1.38 5.12-1.6 8.1M9.1 22.1l-5.02-5.02a1 1 0 0 1 .7-1.7 1 1 0 0 1 .72.3l2.6 2.6a.44.44 0 0 0 .63-.62L6.1 15.04l-1.75-1.75a1 1 0 1 1 1.41-1.41l4.15 4.15a.44.44 0 0 0 .63 0 .44.44 0 0 0 0-.62L6.4 11.26l-1.18-1.18a1 1 0 0 1 0-1.4 1.02 1.02 0 0 1 1.41 0l1.18 1.16L11.96 14a.44.44 0 0 0 .62 0 .44.44 0 0 0 0-.63L8.43 9.22a.99.99 0 0 1-.3-.7.99.99 0 0 1 .3-.7 1 1 0 0 1 1.41 0l7 6.98a.44.44 0 0 0 .7-.5l-1.35-2.85c-.31-.68-.23-1.19.25-1.56a.85.85 0 0 1 .66-.16c.34.06.66.28.88.6L20.63 15c1.57 2.88 1.07 5.54-1.55 8.16a5.62 5.62 0 0 1-5.06 1.65 9.35 9.35 0 0 1-4.93-2.72zM13 6.98l2.56 2.56c-.5.6-.56 1.41-.15 2.28l.26.56-4.25-4.25a.98.98 0 0 1-.12-.45 1 1 0 0 1 .29-.7 1.02 1.02 0 0 1 1.41 0zm8.89 2.06c-.38-.56-.9-.92-1.49-1.01a1.74 1.74 0 0 0-1.34.33c-.38.29-.61.65-.71 1.06a2.1 2.1 0 0 0-1.1-.56 1.78 1.78 0 0 0-.99.13l-2.64-2.64a1.88 1.88 0 0 0-2.65 0 1.86 1.86 0 0 0-.48.85 1.89 1.89 0 0 0-2.67-.01 1.87 1.87 0 0 0-.5.9c-.76-.75-2-.75-2.7-.04a1.88 1.88 0 0 0 0 2.66c-.3.12-.61.29-.87.55a1.88 1.88 0 0 0 0 2.66l.62.62a1.88 1.88 0 0 0-.9 3.16l5.01 5.02c1.6 1.6 3.52 2.64 5.4 2.96a7.16 7.16 0 0 0 1.18.1c1.03 0 2-.25 2.9-.7A5.9 5.9 0 0 0 23 23.24c3.34-3.34 3.08-6.93 1.74-9.17l-2.87-5.04z"></path></g></svg></div></a></span></div><div class="s lz ma mb mc md me mf"><div class="mg"><p class="bb b bc bd bz"><button class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed">25<!-- --> </button></p></div></div></div></div><div class="mh ll s"><div class="n"><button class="ek ls cf"><div class="n o ay"><div class="n o"><svg width="25" height="25" aria-label="responses" class="mi mj ek ly"><path d="M19.07 21.12a6.33 6.33 0 0 1-3.53-1.1 7.8 7.8 0 0 1-.7-.52c-.77.21-1.57.32-2.38.32-4.67 0-8.46-3.5-8.46-7.8C4 7.7 7.79 4.2 12.46 4.2c4.66 0 8.46 3.5 8.46 7.8 0 2.06-.85 3.99-2.4 5.45a6.28 6.28 0 0 0 1.14 2.59c.15.21.17.48.06.7a.69.69 0 0 1-.62.38h-.03zm0-1v.5l.03-.5h-.03zm-3.92-1.64l.21.2a6.09 6.09 0 0 0 3.24 1.54 7.14 7.14 0 0 1-.83-1.84 5.15 5.15 0 0 1-.16-.75 2.4 2.4 0 0 1-.02-.29v-.23l.18-.15a6.6 6.6 0 0 0 2.3-4.96c0-3.82-3.4-6.93-7.6-6.93-4.19 0-7.6 3.11-7.6 6.93 0 3.83 3.41 6.94 7.6 6.94.83 0 1.64-.12 2.41-.35l.28-.08z" fill-rule="evenodd"></path></svg><p class="bb b bc bd bz"><span class="mk mj">1</span></p></div></div></button></div></div><div class="ml s"></div></div></div></div></div></div></div></div><div class="ep fp kd eq ke kf kg kh ki kj"></div><div><div class="mm iv n ak p"><div class="n p"><div class="aq ar as at au ft aw w"><div class="n cu"></div><div class="n o cu"></div><div class="mn mo s"><div class="n ck hj"><div class="n o ay"><div class="mp s"><span class="s mq mr ms e d"><div class="n o ay"><div class="s ap lm ln lo lp lq"><span><a href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2Fb7bfb217b437&amp;operation=register&amp;redirect=https%3A%2F%2Fdannyodler.medium.com%2Fattacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437&amp;user=danny%20odler&amp;userId=f873a1ef5f03&amp;source=post_actions_footer-----b7bfb217b437---------------------clap_footer-----------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed" rel="noopener follow"><div class="cf lr ls lt ek lu lv lw r lx ly"><svg width="25" height="25" viewBox="0 0 25 25" aria-label="clap"><g fill-rule="evenodd"><path d="M11.74 0l.76 2.97.76-2.97zM14.81 3.78l1.84-2.56-1.42-.47zM8.38 1.22l1.84 2.56L9.8.75zM20.38 21.62a5.11 5.11 0 0 1-3.16 1.61l.49-.45c2.88-2.89 3.45-5.98 1.69-9.21l-1.1-1.94-.96-2.02c-.31-.67-.23-1.18.25-1.55a.84.84 0 0 1 .66-.16c.34.05.66.28.88.6l2.85 5.02c1.18 1.97 1.38 5.12-1.6 8.1M7.1 21.1l-5.02-5.02a1 1 0 0 1 .7-1.7 1 1 0 0 1 .72.3l2.6 2.6a.44.44 0 0 0 .63-.62L4.1 14.04l-1.75-1.75a1 1 0 1 1 1.41-1.41l4.15 4.15a.44.44 0 0 0 .63 0 .44.44 0 0 0 0-.62L4.4 10.26 3.22 9.08a1 1 0 0 1 0-1.4 1.02 1.02 0 0 1 1.41 0l1.18 1.16L9.96 13a.44.44 0 0 0 .62 0 .44.44 0 0 0 0-.63L6.43 8.22a.99.99 0 0 1-.3-.7.99.99 0 0 1 .3-.7 1 1 0 0 1 1.41 0l7 6.98a.44.44 0 0 0 .7-.5l-1.35-2.85c-.31-.68-.23-1.19.25-1.56a.85.85 0 0 1 .66-.16c.34.06.66.28.88.6L18.63 14c1.57 2.88 1.07 5.54-1.55 8.16a5.62 5.62 0 0 1-5.06 1.65 9.35 9.35 0 0 1-4.93-2.72zM11 5.98l2.56 2.56c-.5.6-.56 1.41-.15 2.28l.26.56-4.25-4.25a.98.98 0 0 1-.12-.45 1 1 0 0 1 .29-.7 1.02 1.02 0 0 1 1.41 0zm8.89 2.06c-.38-.56-.9-.92-1.49-1.01a1.74 1.74 0 0 0-1.34.33c-.38.29-.61.65-.71 1.06a2.1 2.1 0 0 0-1.1-.56 1.78 1.78 0 0 0-.99.13l-2.64-2.64a1.88 1.88 0 0 0-2.65 0 1.86 1.86 0 0 0-.48.85 1.89 1.89 0 0 0-2.67-.01 1.87 1.87 0 0 0-.5.9c-.76-.75-2-.75-2.7-.04a1.88 1.88 0 0 0 0 2.66c-.3.12-.61.29-.87.55a1.88 1.88 0 0 0 0 2.66l.62.62a1.88 1.88 0 0 0-.9 3.16l5.01 5.02c1.6 1.6 3.52 2.64 5.4 2.96a7.16 7.16 0 0 0 1.18.1c1.03 0 2-.25 2.9-.7A5.9 5.9 0 0 0 21 22.24c3.34-3.34 3.08-6.93 1.74-9.17l-2.87-5.04z"></path></g></svg></div></a></span></div><div class="s lz ma mb mc mt mu mv"><div class="ap mw mg"><p class="bb b bc bd gs"><button class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed">25<span class="s h g f mx my"> </span></button><span class="s h g f mx my"></span></p></div></div></div></span><span class="s h g f mx my"><div class="n o ay"><div class="s ap lm ln lo lp lq"><span><a href="https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2Fb7bfb217b437&amp;operation=register&amp;redirect=https%3A%2F%2Fdannyodler.medium.com%2Fattacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437&amp;user=danny%20odler&amp;userId=f873a1ef5f03&amp;source=post_actions_footer-----b7bfb217b437---------------------clap_footer-----------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed" rel="noopener follow"><div class="cf lr ls lt ek lu lv lw r lx ly"><svg width="25" height="25" viewBox="0 0 25 25" aria-label="clap"><g fill-rule="evenodd"><path d="M11.74 0l.76 2.97.76-2.97zM14.81 3.78l1.84-2.56-1.42-.47zM8.38 1.22l1.84 2.56L9.8.75zM20.38 21.62a5.11 5.11 0 0 1-3.16 1.61l.49-.45c2.88-2.89 3.45-5.98 1.69-9.21l-1.1-1.94-.96-2.02c-.31-.67-.23-1.18.25-1.55a.84.84 0 0 1 .66-.16c.34.05.66.28.88.6l2.85 5.02c1.18 1.97 1.38 5.12-1.6 8.1M7.1 21.1l-5.02-5.02a1 1 0 0 1 .7-1.7 1 1 0 0 1 .72.3l2.6 2.6a.44.44 0 0 0 .63-.62L4.1 14.04l-1.75-1.75a1 1 0 1 1 1.41-1.41l4.15 4.15a.44.44 0 0 0 .63 0 .44.44 0 0 0 0-.62L4.4 10.26 3.22 9.08a1 1 0 0 1 0-1.4 1.02 1.02 0 0 1 1.41 0l1.18 1.16L9.96 13a.44.44 0 0 0 .62 0 .44.44 0 0 0 0-.63L6.43 8.22a.99.99 0 0 1-.3-.7.99.99 0 0 1 .3-.7 1 1 0 0 1 1.41 0l7 6.98a.44.44 0 0 0 .7-.5l-1.35-2.85c-.31-.68-.23-1.19.25-1.56a.85.85 0 0 1 .66-.16c.34.06.66.28.88.6L18.63 14c1.57 2.88 1.07 5.54-1.55 8.16a5.62 5.62 0 0 1-5.06 1.65 9.35 9.35 0 0 1-4.93-2.72zM11 5.98l2.56 2.56c-.5.6-.56 1.41-.15 2.28l.26.56-4.25-4.25a.98.98 0 0 1-.12-.45 1 1 0 0 1 .29-.7 1.02 1.02 0 0 1 1.41 0zm8.89 2.06c-.38-.56-.9-.92-1.49-1.01a1.74 1.74 0 0 0-1.34.33c-.38.29-.61.65-.71 1.06a2.1 2.1 0 0 0-1.1-.56 1.78 1.78 0 0 0-.99.13l-2.64-2.64a1.88 1.88 0 0 0-2.65 0 1.86 1.86 0 0 0-.48.85 1.89 1.89 0 0 0-2.67-.01 1.87 1.87 0 0 0-.5.9c-.76-.75-2-.75-2.7-.04a1.88 1.88 0 0 0 0 2.66c-.3.12-.61.29-.87.55a1.88 1.88 0 0 0 0 2.66l.62.62a1.88 1.88 0 0 0-.9 3.16l5.01 5.02c1.6 1.6 3.52 2.64 5.4 2.96a7.16 7.16 0 0 0 1.18.1c1.03 0 2-.25 2.9-.7A5.9 5.9 0 0 0 21 22.24c3.34-3.34 3.08-6.93 1.74-9.17l-2.87-5.04z"></path></g></svg></div></a></span></div><div class="s lz ma mb mc mt mu mv"><div class="mg"><p class="bb b bc bd gs"><button class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed">25<!-- --> </button></p></div></div></div></span></div><div class="mz n"><div class="n"><button class="ek ls cf"><div class="n o ay"><div class="n o"><svg width="29" height="29" aria-label="responses" class="mi mj ek ly na"><path d="M21.27 20.06a9.04 9.04 0 0 0 2.75-6.68C24.02 8.21 19.67 4 14.1 4S4 8.21 4 13.38c0 5.18 4.53 9.39 10.1 9.39 1 0 2-.14 2.95-.41.28.25.6.49.92.7a7.46 7.46 0 0 0 4.19 1.3c.27 0 .5-.13.6-.35a.63.63 0 0 0-.05-.65 8.08 8.08 0 0 1-1.29-2.58 5.42 5.42 0 0 1-.15-.75zm-3.85 1.32l-.08-.28-.4.12a9.72 9.72 0 0 1-2.84.43c-4.96 0-9-3.71-9-8.27 0-4.55 4.04-8.26 9-8.26 4.95 0 8.77 3.71 8.77 8.27 0 2.25-.75 4.35-2.5 5.92l-.24.21v.32a5.59 5.59 0 0 0 .21 1.29c.19.7.49 1.4.89 2.08a6.43 6.43 0 0 1-2.67-1.06c-.34-.22-.88-.48-1.16-.74z"></path></svg><p class="bb b bc bd gs"><span class="nb nc mj">1</span></p></div></div></button></div></div></div><div class="n o"><div class="bw" aria-hidden="false" aria-describedby="postFooterSocialMenu" aria-labelledby="postFooterSocialMenu"><div><div class="bw" role="tooltip" aria-hidden="false"><button class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed" aria-controls="postFooterSocialMenu" aria-expanded="false" aria-label="Share Post"><svg width="25" height="25" class="r"><g fill-rule="evenodd"><path d="M15.6 5a.42.42 0 0 0 .17-.3.42.42 0 0 0-.12-.33l-2.8-2.79a.5.5 0 0 0-.7 0l-2.8 2.8a.4.4 0 0 0-.1.32c0 .12.07.23.16.3h.02a.45.45 0 0 0 .57-.04l2-2V10c0 .28.23.5.5.5s.5-.22.5-.5V2.93l2.02 2.02c.08.07.18.12.3.13.11.01.21-.02.3-.08v.01"></path><path d="M18 7h-1.5a.5.5 0 0 0 0 1h1.6c.5 0 .9.4.9.9v10.2c0 .5-.4.9-.9.9H6.9a.9.9 0 0 1-.9-.9V8.9c0-.5.4-.9.9-.9h1.6a.5.5 0 0 0 .35-.15A.5.5 0 0 0 9 7.5a.5.5 0 0 0-.15-.35A.5.5 0 0 0 8.5 7H7a2 2 0 0 0-2 2v10c0 1.1.9 2 2 2h11a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2"></path></g></svg></button></div></div></div><div class="hk s ab"></div></div></div></div><div class="nd s"></div></div></div><div><div class="n p"><div class="aq ar as at au ft aw w"></div></div><div class="s hj"><div class="ne li s nf"><div class="n p"><div class="aq ar as at au ft aw w"><div class="n o ck"><h2 class="bb da ng nh ni nj nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz ix oa ob oc od oe gs"><a class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed" rel="noopener follow" href="/?source=follow_footer-----b7bfb217b437--------------------------------">More from danny odler</a></h2><div class="gz n"><span><button class="bb b bc bd kr bf ks kt bi ku bl bm bn bo kv br bs bt bu bv bw bx">Follow</button></span><div class="gz s"><div><div><div class="bw" role="tooltip" aria-hidden="false"><div class="s"><span><a href="https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fefaa19569935&amp;operation=register&amp;redirect=https%3A%2F%2Fdannyodler.medium.com%2Fattacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437&amp;newsletterV3=f873a1ef5f03&amp;newsletterV3Id=efaa19569935&amp;user=danny%20odler&amp;userId=f873a1ef5f03&amp;source=follow_footer-----b7bfb217b437---------------------subscribe_user-----------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed" rel="noopener follow"><button class="bb b bc bd kz cf la lb lc ld le lf lg lh bn bo kv br bs bt bu bv bw bx" aria-label="Subscribe"><svg width="38" height="38" viewBox="0 0 38 38" fill="none" class="kw kx ky"><rect x="26.25" y="9.25" width="0.5" height="6.5" rx="0.25" stroke-width="0.5"></rect><rect x="29.75" y="12.25" width="0.5" height="6.5" rx="0.25" transform="rotate(90 29.75 12.25)" stroke-width="0.5"></rect><path d="M19.5 12.5h-7a1 1 0 0 0-1 1v11a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-5" stroke-linecap="round"></path><path d="M11.5 14.5L19 20l4-3" stroke-linecap="round"></path></svg></button></a></span></div></div></div></div></div></div></div></div></div></div></div><div class="of s nf hj"><div class="n p"><div class="og oh oi oj ok ol aw w"></div></div></div><div class="s fg hj"><div class="n p"><div class="aq ar as at au av aw w"><div class="om id s"><div class="on ao oo id s op oq"><h2 class="bb da or os nj ot ou nn ov ow nr ox oy nv oz pa nz gs">More From Medium</h2></div><div class="cq n ay cu pb pc pd pe pf pg ph pi pj pk pl pm pn po pp"><div class="pq pr ps pt pu pv pw px py pz qa qb qc qd qe qf qg qh qi qj qk"><div class="ql qm s"><div class="w ex"><div class="n ck"><div class="s qn ma mc qo"><div class="qp s"><h2 class="bb da ng nh nj nk nl nn qq qr nr qs qt nv qu qv nz gs"><a href="https://nupurshinde2727.medium.com/scared-to-select-best-software-solutions-here-are-simple-guidelines-90ece6415a65?source=post_internal_links---------0----------------------------" rel="noopener follow">Scared to Select Best Software Solutions? Here are Simple Guidelines</a></h2></div><div class="o n"><div></div><div class="w s"><div class="n"><div style="flex:1"><span class="bb b bc bd gs"><div class="cr n o qw"><span class="bb b qx bd gs"><a href="https://nupurshinde2727.medium.com/?source=post_internal_links---------0----------------------------" class="dy dz ca cb cc cd ce cf cg bm qy ch ec ed" rel="noopener follow">Nupur Shinde</a></span></div></span></div></div></div></div></div><div class="ee qz s ra rb"><a href="https://nupurshinde2727.medium.com/scared-to-select-best-software-solutions-here-are-simple-guidelines-90ece6415a65?source=post_internal_links---------0----------------------------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed s" rel="noopener follow"><div class="ja s ap jb"><div class="rc jd s"><div class="ep iw ef es eo ex w ix iy iz"><img class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/1*hn4v1tCaJy7cWMyb0bpNpQ.png?q=20" width="70" height="70" role="presentation"/></div><img class="ep iw rd re rf rg rh ri rj rk rl rm c" width="70" height="70" role="presentation"/><noscript><img class="rd re rf rg rh ri rj rk rl rm" src="https://miro.medium.com/fit/c/140/140/1*hn4v1tCaJy7cWMyb0bpNpQ.png" width="70" height="70" srcSet="https://miro.medium.com/fit/c/96/140/1*hn4v1tCaJy7cWMyb0bpNpQ.png 48w, https://miro.medium.com/fit/c/140/140/1*hn4v1tCaJy7cWMyb0bpNpQ.png 70w" sizes="70px" role="presentation"/></noscript></div></div></a></div></div></div></div></div><div class="pq pr ps pt pu pv pw px py pz qa qb qc qd qe qf qg qh qi qj qk"><div class="ql qm s"><div class="w ex"><div class="n ck"><div class="s qn ma mc qo"><div class="qp s"><h2 class="bb da ng nh nj nk nl nn qq qr nr qs qt nv qu qv nz gs"><a href="https://medium.com/@knniroshan82/beginning-redis-cluster-e0ea386eefe?source=post_internal_links---------1----------------------------" rel="noopener follow">Beginning redis cluster</a></h2></div><div class="o n"><div></div><div class="w s"><div class="n"><div style="flex:1"><span class="bb b bc bd gs"><div class="cr n o qw"><span class="bb b qx bd gs"><a href="https://medium.com/@knniroshan82?source=post_internal_links---------1----------------------------" class="dy dz ca cb cc cd ce cf cg bm qy ch ec ed" rel="noopener follow">Niroshan Kumarasamy</a></span></div></span></div></div></div></div></div><div class="ee qz s ra rb"><a href="https://medium.com/@knniroshan82/beginning-redis-cluster-e0ea386eefe?source=post_internal_links---------1----------------------------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed s" rel="noopener follow"><div class="ja s ap jb"><div class="rc jd s"><div class="ep iw ef es eo ex w ix iy iz"><img class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/1*jvvyiWxHpTdVdFMDHhUuIw.jpeg?q=20" width="70" height="70" role="presentation"/></div><img class="ep iw rd re rf rg rh ri rj rk rl rm c" width="70" height="70" role="presentation"/><noscript><img class="rd re rf rg rh ri rj rk rl rm" src="https://miro.medium.com/fit/c/140/140/1*jvvyiWxHpTdVdFMDHhUuIw.jpeg" width="70" height="70" srcSet="https://miro.medium.com/fit/c/96/140/1*jvvyiWxHpTdVdFMDHhUuIw.jpeg 48w, https://miro.medium.com/fit/c/140/140/1*jvvyiWxHpTdVdFMDHhUuIw.jpeg 70w" sizes="70px" role="presentation"/></noscript></div></div></a></div></div></div></div></div><div class="pq pr ps pt pu pv pw px py pz qa qb qc qd qe qf qg qh qi qj qk"><div class="ql qm s"><div class="w ex"><div class="n ck"><div class="s qn ma mc qo"><div class="qp s"><h2 class="bb da ng nh nj nk nl nn qq qr nr qs qt nv qu qv nz gs"><a href="https://nitish29singla.medium.com/static-code-analysis-488e2a6a2e16?source=post_internal_links---------2----------------------------" rel="noopener follow">Static Code Analysis:</a></h2></div><div class="o n"><div></div><div class="w s"><div class="n"><div style="flex:1"><span class="bb b bc bd gs"><div class="cr n o qw"><span class="bb b qx bd gs"><a href="https://nitish29singla.medium.com/?source=post_internal_links---------2----------------------------" class="dy dz ca cb cc cd ce cf cg bm qy ch ec ed" rel="noopener follow">Nitish Singla</a></span></div></span></div></div></div></div></div><div class="ee qz s ra rb"><a href="https://nitish29singla.medium.com/static-code-analysis-488e2a6a2e16?source=post_internal_links---------2----------------------------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed s" rel="noopener follow"><div class="ja s ap jb"><div class="rc jd s"><div class="ep iw ef es eo ex w ix iy iz"><img class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/1*gpG12J4W53pV-58Z4PrFBQ.png?q=20" width="70" height="70" role="presentation"/></div><img class="ep iw rd re rf rg rh ri rj rk rl rm c" width="70" height="70" role="presentation"/><noscript><img class="rd re rf rg rh ri rj rk rl rm" src="https://miro.medium.com/fit/c/140/140/1*gpG12J4W53pV-58Z4PrFBQ.png" width="70" height="70" srcSet="https://miro.medium.com/fit/c/96/140/1*gpG12J4W53pV-58Z4PrFBQ.png 48w, https://miro.medium.com/fit/c/140/140/1*gpG12J4W53pV-58Z4PrFBQ.png 70w" sizes="70px" role="presentation"/></noscript></div></div></a></div></div></div></div></div><div class="pq pr ps pt pu pv pw px py pz qa qb qc qd qe qf qg qh qi qj qk"><div class="ql qm s"><div class="w ex"><div class="n ck"><div class="s qn ma mc qo"><div class="qp s"><h2 class="bb da ng nh nj nk nl nn qq qr nr qs qt nv qu qv nz gs"><a href="https://medium.com/code-rush-blog/code-like-her-weekly-13-41b994178d62?source=post_internal_links---------3----------------------------" rel="noopener follow">Code Like Her Weekly #13</a></h2></div><div class="o n"><div></div><div class="w s"><div class="n"><div style="flex:1"><span class="bb b bc bd gs"><div class="cr n o qw"><span class="bb b qx bd gs"><a href="https://medium.com/@thebetrija55?source=post_internal_links---------3----------------------------" class="dy dz ca cb cc cd ce cf cg bm qy ch ec ed" rel="noopener follow">@thebe_trija57</a><span> <!-- -->in<!-- --> <a href="https://medium.com/code-rush-blog?source=post_internal_links---------3----------------------------" class="dy dz ca cb cc cd ce cf cg bm qy ch ec ed" rel="noopener follow">Code Rush Blog</a></span></span></div></span></div></div></div></div></div><div class="ee qz s ra rb"><a href="https://medium.com/code-rush-blog/code-like-her-weekly-13-41b994178d62?source=post_internal_links---------3----------------------------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed s" rel="noopener follow"><div class="ja s ap jb"><div class="rc jd s"><div class="ep iw ef es eo ex w ix iy iz"><img class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/0*-pB0AvvmESeNCM1c.png?q=20" width="70" height="70" role="presentation"/></div><img class="ep iw rd re rf rg rh ri rj rk rl rm c" width="70" height="70" role="presentation"/><noscript><img class="rd re rf rg rh ri rj rk rl rm" src="https://miro.medium.com/fit/c/140/140/0*-pB0AvvmESeNCM1c.png" width="70" height="70" srcSet="https://miro.medium.com/fit/c/96/140/0*-pB0AvvmESeNCM1c.png 48w, https://miro.medium.com/fit/c/140/140/0*-pB0AvvmESeNCM1c.png 70w" sizes="70px" role="presentation"/></noscript></div></div></a></div></div></div></div></div><div class="pq pr ps pt pu pv pw px py pz qa qb qc qd qe qf qg qh qi qj qk"><div class="ql qm s"><div class="w ex"><div class="n ck"><div class="s qn ma mc qo"><div class="qp s"><h2 class="bb da ng nh nj nk nl nn qq qr nr qs qt nv qu qv nz gs"><a href="https://alex-godley.medium.com/3-reasons-to-learn-python-5ecbfb1f7965?source=post_internal_links---------4----------------------------" rel="noopener follow">3 Reasons to learn Python</a></h2></div><div class="o n"><div></div><div class="w s"><div class="n"><div style="flex:1"><span class="bb b bc bd gs"><div class="cr n o qw"><span class="bb b qx bd gs"><a href="https://alex-godley.medium.com/?source=post_internal_links---------4----------------------------" class="dy dz ca cb cc cd ce cf cg bm qy ch ec ed" rel="noopener follow">Alex Godley</a></span></div></span></div></div></div></div></div><div class="ee qz s ra rb"><a href="https://alex-godley.medium.com/3-reasons-to-learn-python-5ecbfb1f7965?source=post_internal_links---------4----------------------------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed s" rel="noopener follow"><div class="ja s ap jb"><div class="rc jd s"><div class="ep iw ef es eo ex w ix iy iz"><img class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/1*1X0-98EiQNkwBJj2vnTTqQ.jpeg?q=20" width="70" height="70" role="presentation"/></div><img class="ep iw rd re rf rg rh ri rj rk rl rm c" width="70" height="70" role="presentation"/><noscript><img class="rd re rf rg rh ri rj rk rl rm" src="https://miro.medium.com/fit/c/140/140/1*1X0-98EiQNkwBJj2vnTTqQ.jpeg" width="70" height="70" srcSet="https://miro.medium.com/fit/c/96/140/1*1X0-98EiQNkwBJj2vnTTqQ.jpeg 48w, https://miro.medium.com/fit/c/140/140/1*1X0-98EiQNkwBJj2vnTTqQ.jpeg 70w" sizes="70px" role="presentation"/></noscript></div></div></a></div></div></div></div></div><div class="pq pr ps pt pu pv pw px py pz qa qb qc qd qe qf qg qh qi qj qk"><div class="ql qm s"><div class="w ex"><div class="n ck"><div class="s qn ma mc qo"><div class="qp s"><h2 class="bb da ng nh nj nk nl nn qq qr nr qs qt nv qu qv nz gs"><a href="https://medium.com/@ayushsingh01222/top-web-designing-course-in-noida-sec-18-e19c94a4737a?source=post_internal_links---------5----------------------------" rel="noopener follow">Top web designing course in Noida sec 18</a></h2></div><div class="o n"><div></div><div class="w s"><div class="n"><div style="flex:1"><span class="bb b bc bd gs"><div class="cr n o qw"><span class="bb b qx bd gs"><a href="https://medium.com/@ayushsingh01222?source=post_internal_links---------5----------------------------" class="dy dz ca cb cc cd ce cf cg bm qy ch ec ed" rel="noopener follow">Ayushsingh</a></span></div></span></div></div></div></div></div><div class="ee qz s ra rb"><a href="https://medium.com/@ayushsingh01222/top-web-designing-course-in-noida-sec-18-e19c94a4737a?source=post_internal_links---------5----------------------------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed s" rel="noopener follow"><div class="ja s ap jb"><div class="rc jd s"><div class="ep iw ef es eo ex w ix iy iz"><img class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/1*hn4v1tCaJy7cWMyb0bpNpQ.png?q=20" width="70" height="70" role="presentation"/></div><img class="ep iw rd re rf rg rh ri rj rk rl rm c" width="70" height="70" role="presentation"/><noscript><img class="rd re rf rg rh ri rj rk rl rm" src="https://miro.medium.com/fit/c/140/140/1*hn4v1tCaJy7cWMyb0bpNpQ.png" width="70" height="70" srcSet="https://miro.medium.com/fit/c/96/140/1*hn4v1tCaJy7cWMyb0bpNpQ.png 48w, https://miro.medium.com/fit/c/140/140/1*hn4v1tCaJy7cWMyb0bpNpQ.png 70w" sizes="70px" role="presentation"/></noscript></div></div></a></div></div></div></div></div><div class="pq pr ps pt pu pv pw px py pz qa qb qc qd qe qf qg qh qi qj qk"><div class="ql qm s"><div class="w ex"><div class="n ck"><div class="s qn ma mc qo"><div class="qp s"><h2 class="bb da ng nh nj nk nl nn qq qr nr qs qt nv qu qv nz gs"><a href="https://medium.com/@mobile_develop/android-application-development-detecting-when-your-app-enters-the-background-or-foreground-bbced47ad8a5?source=post_internal_links---------6----------------------------" rel="noopener follow">Android Application Development: Detecting when your app enters the background or foreground</a></h2></div><div class="o n"><div></div><div class="w s"><div class="n"><div style="flex:1"><span class="bb b bc bd gs"><div class="cr n o qw"><span class="bb b qx bd gs"><a href="https://medium.com/@mobile_develop?source=post_internal_links---------6----------------------------" class="dy dz ca cb cc cd ce cf cg bm qy ch ec ed" rel="noopener follow">Matthew Perkins</a></span></div></span></div></div></div></div></div><div class="ee qz s ra rb"><a href="https://medium.com/@mobile_develop/android-application-development-detecting-when-your-app-enters-the-background-or-foreground-bbced47ad8a5?source=post_internal_links---------6----------------------------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed s" rel="noopener follow"><div class="ja s ap jb"><div class="rc jd s"><div class="ep iw ef es eo ex w ix iy iz"><img class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/1*hn4v1tCaJy7cWMyb0bpNpQ.png?q=20" width="70" height="70" role="presentation"/></div><img class="ep iw rd re rf rg rh ri rj rk rl rm c" width="70" height="70" role="presentation"/><noscript><img class="rd re rf rg rh ri rj rk rl rm" src="https://miro.medium.com/fit/c/140/140/1*hn4v1tCaJy7cWMyb0bpNpQ.png" width="70" height="70" srcSet="https://miro.medium.com/fit/c/96/140/1*hn4v1tCaJy7cWMyb0bpNpQ.png 48w, https://miro.medium.com/fit/c/140/140/1*hn4v1tCaJy7cWMyb0bpNpQ.png 70w" sizes="70px" role="presentation"/></noscript></div></div></a></div></div></div></div></div><div class="pq pr ps pt pu pv pw px py pz qa qb qc qd qe qf qg qh qi qj qk"><div class="ql qm s"><div class="w ex"><div class="n ck"><div class="s qn ma mc qo"><div class="qp s"><h2 class="bb da ng nh nj nk nl nn qq qr nr qs qt nv qu qv nz gs"><a href="https://medium.com/@jack.griffiths/code-the-city-11-4a9d52df4de4?source=post_internal_links---------7----------------------------" rel="noopener follow">Code the City 11</a></h2></div><div class="o n"><div></div><div class="w s"><div class="n"><div style="flex:1"><span class="bb b bc bd gs"><div class="cr n o qw"><span class="bb b qx bd gs"><a href="https://medium.com/@jack.griffiths?source=post_internal_links---------7----------------------------" class="dy dz ca cb cc cd ce cf cg bm qy ch ec ed" rel="noopener follow">Jack Griffiths</a></span></div></span></div></div></div></div></div><div class="ee qz s ra rb"><a href="https://medium.com/@jack.griffiths/code-the-city-11-4a9d52df4de4?source=post_internal_links---------7----------------------------" class="dy dz ca cb cc cd ce cf cg bm ea eb ch ec ed s" rel="noopener follow"><div class="ja s ap jb"><div class="rc jd s"><div class="ep iw ef es eo ex w ix iy iz"><img class="ef es eo ex w je jf jg" src="https://miro.medium.com/max/60/1*s350gjT5e2zuggfuHB_aww.png?q=20" width="70" height="70" role="presentation"/></div><img class="ep iw rd re rf rg rh ri rj rk rl rm c" width="70" height="70" role="presentation"/><noscript><img class="rd re rf rg rh ri rj rk rl rm" src="https://miro.medium.com/focal/140/140/41/39/1*s350gjT5e2zuggfuHB_aww.png" width="70" height="70" srcSet="https://miro.medium.com/focal/96/140/41/39/1*s350gjT5e2zuggfuHB_aww.png 48w, https://miro.medium.com/focal/140/140/41/39/1*s350gjT5e2zuggfuHB_aww.png 70w" sizes="70px" role="presentation"/></noscript></div></div></a></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div><script>window.__BUILD_ID__="main-20211029-222713-9a46415473"</script><script>window.__GRAPHQL_URI__ = "https://dannyodler.medium.com/_/graphql"</script><script>window.__PRELOADED_STATE__ = {"algolia":{"queries":{}},"auroraPage":{"isAuroraPageEnabled":true},"bookReader":{"assets":{},"reader":{"currentAsset":null,"currentGFI":null,"settingsPanelIsOpen":false,"settings":{"fontFamily":"CHARTER","fontScale":"M","publisherStyling":false,"textAlignment":"start","theme":"White","lineSpacing":0,"wordSpacing":0,"letterSpacing":0},"internalNavCounter":0,"currentSelection":null}},"cache":{"experimentGroupSet":true,"reason":"","group":"enabled","tags":["group-edgeCachePosts","post-b7bfb217b437","user-f873a1ef5f03"],"serverVariantState":"a44a5ffac1076894bcdc3db90b343c8ac460f7fd6843111ecb7a8211aa5c757b","middlewareEnabled":true,"cacheStatus":"DYNAMIC","vary":[]},"client":{"hydrated":false,"isUs":false,"isNativeMedium":false,"isSafariMobile":false,"isSafari":false,"routingEntity":{"type":"USER","id":"f873a1ef5f03","explicit":true}},"debug":{"requestId":"34c2848a-b345-4faa-9a4c-4c91dda2821b","hybridDevServices":[],"showBookReaderDebugger":false,"originalSpanCarrier":{"ot-tracer-spanid":"03557fcd779ec1ba","ot-tracer-traceid":"74f7754840a2170c","ot-tracer-sampled":"true"}},"multiVote":{"clapsPerPost":{}},"navigation":{"branch":{"show":null,"hasRendered":null,"blockedByCTA":false},"hideGoogleOneTap":false,"hasRenderedGoogleOneTap":null,"hasRenderedAlternateUserBanner":null,"currentLocation":"https:\u002F\u002Fdannyodler.medium.com\u002Fattacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437","host":"dannyodler.medium.com","hostname":"dannyodler.medium.com","referrer":"","hasSetReferrer":false,"susiModal":{"step":null,"operation":"register"},"postRead":false,"queryString":"","currentHash":""},"tracing":{},"config":{"nodeEnv":"production","version":"main-20211029-222713-9a46415473","isTaggedVersion":false,"isMediumDotApp":false,"isMediumDotAppVariant":false,"target":"production","productName":"Medium","publicUrl":"https:\u002F\u002Fcdn-client.medium.com\u002Flite","authDomain":"medium.com","authGoogleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","favicon":"production","glyphUrl":"https:\u002F\u002Fglyph.medium.com","branchKey":"key_live_ofxXr2qTrrU9NqURK8ZwEhknBxiI6KBm","lightStep":{"name":"lite-web","host":"lightstep.medium.systems","token":"ce5be895bef60919541332990ac9fef2","appVersion":"main-20211029-222713-9a46415473","disableClientReporting":false},"algolia":{"appId":"MQ57UUUQZ2","apiKeySearch":"394474ced050e3911ae2249ecc774921","indexPrefix":"medium_","host":"-dsn.algolia.net"},"recaptchaKey":"6Lfc37IUAAAAAKGGtC6rLS13R1Hrw_BqADfS1LRk","recaptcha3Key":"6Lf8R9wUAAAAABMI_85Wb8melS7Zj6ziuf99Yot5","datadog":{"applicationId":"6702d87d-a7e0-42fe-bbcb-95b469547ea0","clientToken":"pub853ea8d17ad6821d9f8f11861d23dfed","rumToken":"pubf9cc52896502b9413b68ba36fc0c7162","context":{"deployment":{"target":"production","tag":"main-20211029-222713-9a46415473","commit":"9a46415473f82e21561b53e7b85c8ad0f7958a5e"}},"datacenter":"us"},"googleAnalyticsCode":"UA-24232453-2","googlePay":{"apiVersion":"2","apiVersionMinor":"0","merchantId":"BCR2DN6TV7EMTGBM","merchantName":"Medium","instanceMerchantId":"13685562959212738550"},"applePay":{"version":3},"signInWallCustomDomainCollectionIds":["3a8144eabfe3","336d898217ee","61061eb0c96b","138adf9c44c","819cc2aaeee0"],"mediumOwnedAndOperatedCollectionIds":["8a9336e5bb4","b7e45b22fec3","193b68bd4fba","8d6b8a439e32","54c98c43354d","3f6ecf56618","d944778ce714","92d2092dc598","ae2a65f35510","1285ba81cada","544c7006046e","fc8964313712","40187e704f1c","88d9857e584e","7b6769f2748b","bcc38c8f6edf","cef6983b292","cb8577c9149e","444d13b52878","713d7dbc99b0","ef8e90590e66","191186aaafa0","55760f21cdc5","9dc80918cc93","bdc4052bbdba","8ccfed20cbb2"],"tierOneDomains":["medium.com","thebolditalic.com","arcdigital.media","towardsdatascience.com","uxdesign.cc","codeburst.io","psiloveyou.xyz","writingcooperative.com","entrepreneurshandbook.co","prototypr.io","betterhumans.coach.me","theascent.pub"],"topicsToFollow":["d61cf867d93f","8a146bc21b28","1eca0103fff3","4d562ee63426","aef1078a3ef5","e15e46793f8d","6158eb913466","55f1c20aba7a","3d18b94f6858","4861fee224fd","63c6f1f93ee","1d98b3a9a871","decb52b64abf","ae5d4995e225","830cded25262"],"topicToTagMappings":{"accessibility":"accessibility","addiction":"addiction","android-development":"android-development","art":"art","artificial-intelligence":"artificial-intelligence","astrology":"astrology","basic-income":"basic-income","beauty":"beauty","biotech":"biotech","blockchain":"blockchain","books":"books","business":"business","cannabis":"cannabis","cities":"cities","climate-change":"climate-change","comics":"comics","coronavirus":"coronavirus","creativity":"creativity","cryptocurrency":"cryptocurrency","culture":"culture","cybersecurity":"cybersecurity","data-science":"data-science","design":"design","digital-life":"digital-life","disability":"disability","economy":"economy","education":"education","equality":"equality","family":"family","feminism":"feminism","fiction":"fiction","film":"film","fitness":"fitness","food":"food","freelancing":"freelancing","future":"future","gadgets":"gadgets","gaming":"gaming","gun-control":"gun-control","health":"health","history":"history","humor":"humor","immigration":"immigration","ios-development":"ios-development","javascript":"javascript","justice":"justice","language":"language","leadership":"leadership","lgbtqia":"lgbtqia","lifestyle":"lifestyle","machine-learning":"machine-learning","makers":"makers","marketing":"marketing","math":"math","media":"media","mental-health":"mental-health","mindfulness":"mindfulness","money":"money","music":"music","neuroscience":"neuroscience","nonfiction":"nonfiction","outdoors":"outdoors","parenting":"parenting","pets":"pets","philosophy":"philosophy","photography":"photography","podcasts":"podcast","poetry":"poetry","politics":"politics","privacy":"privacy","product-management":"product-management","productivity":"productivity","programming":"programming","psychedelics":"psychedelics","psychology":"psychology","race":"race","relationships":"relationships","religion":"religion","remote-work":"remote-work","san-francisco":"san-francisco","science":"science","self":"self","self-driving-cars":"self-driving-cars","sexuality":"sexuality","social-media":"social-media","society":"society","software-engineering":"software-engineering","space":"space","spirituality":"spirituality","sports":"sports","startups":"startup","style":"style","technology":"technology","transportation":"transportation","travel":"travel","true-crime":"true-crime","tv":"tv","ux":"ux","venture-capital":"venture-capital","visual-design":"visual-design","work":"work","world":"world","writing":"writing"},"defaultImages":{"avatar":{"imageId":"1*dmbNkD5D-u45r44go_cf0g.png","height":150,"width":150},"orgLogo":{"imageId":"1*OMF3fSqH8t4xBJ9-6oZDZw.png","height":106,"width":545},"postLogo":{"imageId":"1*kFrc4tBFM_tCis-2Ic87WA.png","height":810,"width":1440},"postPreviewImage":{"imageId":"1*hn4v1tCaJy7cWMyb0bpNpQ.png","height":386,"width":579}},"collectionStructuredData":{"8d6b8a439e32":{"name":"Elemental","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F980\u002F1*9ygdqoKprhwuTVKUM0DLPA@2x.png","width":980,"height":159}}},"3f6ecf56618":{"name":"Forge","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F596\u002F1*uULpIlImcO5TDuBZ6lm7Lg@2x.png","width":596,"height":183}}},"ae2a65f35510":{"name":"GEN","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F264\u002F1*RdVZMdvfV3YiZTw6mX7yWA.png","width":264,"height":140}}},"88d9857e584e":{"name":"LEVEL","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*JqYMhNX6KNNb2UlqGqO2WQ.png","width":540,"height":108}}},"7b6769f2748b":{"name":"Marker","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fcdn-images-1.medium.com\u002Fmax\u002F383\u002F1*haCUs0wF6TgOOvfoY-jEoQ@2x.png","width":383,"height":92}}},"444d13b52878":{"name":"OneZero","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*cw32fIqCbRWzwJaoQw6BUg.png","width":540,"height":123}}},"8ccfed20cbb2":{"name":"Zora","data":{"@type":"NewsMediaOrganization","ethicsPolicy":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Farticles\u002F360043290473","logo":{"@type":"ImageObject","url":"https:\u002F\u002Fmiro.medium.com\u002Fmax\u002F540\u002F1*tZUQqRcCCZDXjjiZ4bDvgQ.png","width":540,"height":106}}}},"embeddedPostIds":{"coronavirus":"cd3010f9d81f"},"sharedCdcMessaging":{"COVID_APPLICABLE_TAG_SLUGS":[],"COVID_APPLICABLE_TOPIC_NAMES":[],"COVID_APPLICABLE_TOPIC_NAMES_FOR_TOPIC_PAGE":[],"COVID_MESSAGES":{"tierA":{"text":"For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":66,"end":73,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"tierB":{"text":"Anyone can publish on Medium per our Policies, but we don’t fact-check every story. For more info about the coronavirus, see cdc.gov.","markups":[{"start":37,"end":45,"href":"https:\u002F\u002Fhelp.medium.com\u002Fhc\u002Fen-us\u002Fcategories\u002F201931128-Policies-Safety"},{"start":125,"end":132,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"paywall":{"text":"This article has been made free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":56,"end":70,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":138,"end":145,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]},"unbound":{"text":"This article is free for everyone, thanks to Medium Members. For more information on the novel coronavirus and Covid-19, visit cdc.gov.","markups":[{"start":45,"end":59,"href":"https:\u002F\u002Fmedium.com\u002Fmembership"},{"start":127,"end":134,"href":"https:\u002F\u002Fwww.cdc.gov\u002Fcoronavirus\u002F2019-nCoV"}]}},"COVID_BANNER_POST_ID_OVERRIDE_WHITELIST":["3b31a67bff4a"]},"sharedVoteMessaging":{"TAGS":["politics","election-2020","government","us-politics","election","2020-presidential-race","trump","donald-trump","democrats","republicans","congress","republican-party","democratic-party","biden","joe-biden","maga"],"TOPICS":["politics","election"],"MESSAGE":{"text":"Find out more about the U.S. election results here.","markups":[{"start":46,"end":50,"href":"https:\u002F\u002Fcookpolitical.com\u002F2020-national-popular-vote-tracker"}]},"EXCLUDE_POSTS":["397ef29e3ca5"]},"embedPostRules":[],"recircOptions":{"v1":{"limit":3},"v2":{"limit":8}},"braintreeClientKey":"production_zjkj96jm_m56f8fqpf7ngnrd4","braintree":{"enabled":true,"merchantId":"m56f8fqpf7ngnrd4","publicKey":"cwr8xtycwgjryv82","braintreeEnvironment":"production","dashboardUrl":"https:\u002F\u002Fwww.braintreegateway.com\u002Fmerchants","gracePeriodDurationInDays":14,"mediumMembershipPlanId":{"monthly":"ce105f8c57a3","monthlyWithTrial":"d5ee3dbe3db8","yearly":"a40ad4a43185","yearlyStaff":"d74fb811198a","yearlyWithTrial":"b3bc7350e5c7"},"braintreeDiscountId":{"oneMonthFree":"MONTHS_FREE_01","threeMonthsFree":"MONTHS_FREE_03","sixMonthsFree":"MONTHS_FREE_06"}},"paypalClientId":"AXj1G4fotC2GE8KzWX9mSxCH1wmPE3nJglf4Z2ig_amnhvlMVX87otaq58niAg9iuLktVNF_1WCMnN7v","paypal":{"host":"https:\u002F\u002Fapi.paypal.com:443","clientMode":"production","serverMode":"live","webhookId":"4G466076A0294510S","monthlyPlan":{"planId":"P-9WR0658853113943TMU5FDQA","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlan":{"planId":"P-7N8963881P8875835MU5JOPQ","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oneYearGift":{"name":"Medium Membership (1 Year, Digital Gift Code)","description":"Unlimited access to the best and brightest stories on Medium. Gift codes can be redeemed at medium.com\u002Fredeem.","price":"50.00","currency":"USD","sku":"membership-gift-1-yr"},"oldMonthlyPlan":{"planId":"P-96U02458LM656772MJZUVH2Y","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlan":{"planId":"P-59P80963JF186412JJZU3SMI","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"monthlyPlanWithTrial":{"planId":"P-66C21969LR178604GJPVKUKY","name":"Medium Membership (Monthly) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"yearlyPlanWithTrial":{"planId":"P-6XW32684EX226940VKCT2MFA","name":"Medium Membership (Annual) with setup fee","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"oldMonthlyPlanNoSetupFee":{"planId":"P-4N046520HR188054PCJC7LJI","name":"Medium Membership (Monthly)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed monthly."},"oldYearlyPlanNoSetupFee":{"planId":"P-7A4913502Y5181304CJEJMXQ","name":"Medium Membership (Annual)","description":"Unlimited access to the best and brightest stories on Medium. Membership billed annually."},"sdkUrl":"https:\u002F\u002Fwww.paypal.com\u002Fsdk\u002Fjs"},"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl"},"session":{"xsrf":""}}</script><script>window.__APOLLO_STATE__ = {"ROOT_QUERY":{"__typename":"Query","meterPost({\"postId\":\"b7bfb217b437\",\"postMeteringOptions\":{\"referrer\":\"\",\"sk\":null,\"source\":null}})":{"__ref":"MeteringInfo:{}"},"postResult({\"id\":\"b7bfb217b437\"})":{"__ref":"Post:b7bfb217b437"}},"MeteringInfo:{}":{"__typename":"MeteringInfo","postIds":[],"maxUnlockCount":3,"unlocksRemaining":0},"User:f873a1ef5f03":{"id":"f873a1ef5f03","__typename":"User","name":"danny odler","username":"dannyodler","newsletterV3":{"__ref":"NewsletterV3:efaa19569935"},"customStyleSheet":null,"isSuspended":false,"bio":"","imageId":"1*dmbNkD5D-u45r44go_cf0g.png","hasCompletedProfile":false,"isAuroraVisible":true,"mediumMemberAt":0,"socialStats":{"__typename":"SocialStats","followerCount":15,"followingCount":1,"collectionFollowingCount":1},"customDomainState":{"__typename":"CustomDomainState","live":{"__typename":"CustomDomain","domain":"dannyodler.medium.com","status":"ACTIVE","isSubdomain":true}},"hasSubdomain":true,"viewerEdge":{"__ref":"UserViewerEdge:userId:f873a1ef5f03-viewerId:lo_71ff0eab1584"},"bookAuthor":null,"isPartnerProgramEnrolled":false,"viewerIsUser":false,"homepagePostsConnection({\"paging\":{\"limit\":1}})":{"__typename":"PostConnection","posts":[{"__ref":"Post:6385e72aeab0"}]},"postSubscribeMembershipUpsellShownAt":0,"allowNotes":true,"replyToEmailBannerShownCount":0,"twitterScreenName":"","followedCollections":1,"referredMembershipCustomHeadline":"","referredMembershipCustomBody":"","atsQualifiedAt":1612205504424},"UserViewerEdge:userId:f873a1ef5f03-viewerId:lo_71ff0eab1584":{"id":"userId:f873a1ef5f03-viewerId:lo_71ff0eab1584","__typename":"UserViewerEdge","createdAt":0,"lastPostCreatedAt":0,"isFollowing":false,"isUser":false},"NewsletterV3:efaa19569935":{"id":"efaa19569935","__typename":"NewsletterV3","type":"NEWSLETTER_TYPE_AUTHOR","slug":"f873a1ef5f03","name":"f873a1ef5f03","collection":null,"user":{"__ref":"User:f873a1ef5f03"},"description":"","promoHeadline":"","promoBody":"","replyToEmail":"","showPromo":false,"subscribersCount":1},"Post:6385e72aeab0":{"id":"6385e72aeab0","__typename":"Post"},"Paragraph:7937455e353a_0":{"id":"7937455e353a_0","__typename":"Paragraph","name":"458d","text":"Attacking the Golden Ring on AMD Mini-PC","type":"H3","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":40,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_1":{"id":"7937455e353a_1","__typename":"Paragraph","name":"2790","text":"(or how to bypass Windows strongest security boundary)","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_2":{"id":"7937455e353a_2","__typename":"Paragraph","name":"8b26","text":"TL; DR","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":6,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_3":{"id":"7937455e353a_3","__typename":"Paragraph","name":"abfa","text":"In December 2019 AMD announced that their partners will start manufacturing a new high performance product line- AMD MiniPc. This MiniPc is actually a direct competition to the well known Intel NUC and Gigabyte Brix. In this post I will show full research and exploitation for 1 of the 3 vulnerabilities I found in the UEFI image and reported to AMD. Specifically speaking all three vulnerabilities reside in SMM (Ring -2) code which is part of the UEFI image. SMM is the most privileged code that can execute on x86 CPU thus allowing to attack any low level component including Kernel and Hypervisor.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":17,"end":20,"type":"A","href":"http:\u002F\u002Fwww.amd.com","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","start":113,"end":123,"type":"A","href":"https:\u002F\u002Fwww.amd.com\u002Fen\u002Fpress-releases\u002F2019-12-03-amd-enables-ecosystem-for-high-performance-mini-pcs-powered-amd-ryzen","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","start":413,"end":422,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_4":{"id":"7937455e353a_4","__typename":"Paragraph","name":"d3fe","text":"The vulnerability in this post allows arbitrary ‘write primitive’ to any location in SMRAM and as consequence execute attacker code in SMM mode. While executing in SMM I will show how it is possible to attack Windows Hypervisor and thus bypass HVCI -hypervisor code integrity. HVCI is a wonderful design and technology which eliminates any chance to run attacker code in Kernel mode. Some think that SMM vulnerabilities are not generic, this is actually not true, there are two major BIOS vendors -AMI and Phoenix that own huge amount of the code in any UEFI image no matter which CPU, Chipset, Motherboard this PC uses. Thanks much to Saar Amar @AmarSaar and Alex Matrosov @matrosov for reviewing the article. Good words also to AMD and ASRock for their fast response and quick fix release.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":244,"end":248,"type":"A","href":"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-hardware\u002Fdrivers\u002Fbringup\u002Fdevice-guard-and-credential-guard","anchorType":"LINK","userId":null,"linkMetadata":null},{"__typename":"Markup","start":244,"end":248,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_5":{"id":"7937455e353a_5","__typename":"Paragraph","name":"22d8","text":"Timeline-","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_6":{"id":"7937455e353a_6","__typename":"Paragraph","name":"24a5","text":"CVE-2020–14032; Severity High; 2\u002F4\u002F20 reported; 16\u002F4\u002F20 approved as vulnerability; 8\u002F6\u002F20 fixed version released. (by ASRock)","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":14,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_7":{"id":"7937455e353a_7","__typename":"Paragraph","name":"af06","text":"CVE-2020–12890; Severity High; 2\u002F4\u002F20 reported; 16\u002F4\u002F20 approved as vulnerability; Not fixed yet. (by AMD)","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":14,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_8":{"id":"7937455e353a_8","__typename":"Paragraph","name":"3a15","text":"CVE-2020–00000; Severity High; 2\u002F4\u002F20 reported; 16\u002F4\u002F20 approved as vulnerability; Not fixed yet. (by ASRock)","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":14,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_9":{"id":"7937455e353a_9","__typename":"Paragraph","name":"b593","text":"What is SMM","type":"BQ","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":11,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_10":{"id":"7937455e353a_10","__typename":"Paragraph","name":"8e10","text":"While you probably know Ring 3 (user mode), Ring 0 (kernel mode) and Ring -1 (hypervisor mode) SMM is referred as ring -2. SMM is actually the most privileged execution on the main x86 CPU which means that the CPU might interrupt at any moment and switch to SMM execution mode. If you want to learn more, a great training is provided by Alex Matrosov on UEFI internals.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_11":{"id":"7937455e353a_11","__typename":"Paragraph","name":"8300","text":"SMM code loaded to special protected memory region– SMRAM so when the PC boots the SMM drivers, which are part of the UEFI image and stored on the SPI flash, are loaded to SMRAM. Once SMM drivers are loaded to SMRAM, this region is locked and the memory controller cannot access these addresses unless the CPU is in SMM mode. From this point SMM world is parallel to OS execution and there is no way to change SMM code after your PC finishes the ‘bios’ boot. SMM drivers have some different purposes but mainly responsible for propriety CPU and chipset configurations, mother board manufacturer code, secured operations such as setting secure boot hashes, TPM configurations and power management.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_12":{"id":"7937455e353a_12","__typename":"Paragraph","name":"8bea","text":"While the CPU switches to SMM it starts the execution inside SMRAM at SMBASE + 0x8000. SMBASE value is set at boot process and is saved internally in CPU MSR register which is accessible only from SMM mode. Each CPU core has its own SMBASE value because each core needs its own saved state data at constant offset from SMBASE. SMM execution starts in 16 bit real mode and very quickly changes to long mode 64 bit. Usually the main flow of SMM execution consists of Interrupt Dispatcher which calls the relevant SMI handler for this SMM interrupt, the most common SMM interrupt is software interrupt which can be triggered only from kernel code by writing the SMI number to APMC I\u002FO port. It is important to note that when CPU switched to SMM the current state (registers and more) is saved to SMM State Save area which exists for each CPU core. SMM State Save area resides at SMBASE+0xFE00 and as said before each core has slightly different SMBASE.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_13":{"id":"7937455e353a_13","__typename":"Paragraph","name":"424a","text":"When code executes in SMM the whole physical memory is accessible and nothing can stop you from overwriting critical data in kernel or hypervisor physical pages. SMM code acts as it is kind of mini OS -it has I\u002FO services, memory allocation services, ability to allocate private interfaces, SMM interrupts management, events notifications and more.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_14":{"id":"7937455e353a_14","__typename":"Paragraph","name":"7f48","text":"To summarize- SMM code is the most privileged executed code on the CPU, the code is completely hidden from the running operating system, it cannot be modified by kernel and even by DMA devices and most important SMM code can access any physical memory.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_15":{"id":"7937455e353a_15","__typename":"Paragraph","name":"793e","text":"Reversing the vulnerable SMM module","type":"BQ","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":35,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_16":{"id":"7937455e353a_16","__typename":"Paragraph","name":"fd3a","text":"My research was done by static manual reversing so we will see the details of each step at my progress. The vulnerable module meets perfectly my first criteria for SMM bugs hunting — it implements SMI (SMM interrupt) handler which can be triggered from OS kernel code. To show the different SMM drivers from UEFI image it is best to use UEFITool, when you open the image you will see about 40 SMM drivers and each SMM driver has its dependencies. These dependencies are actually interfaces that must be already installed when SmmCore driver needs to decide who is the next SMM driver to be loaded to memory. One of such dependencies is EfiSmmSwDispatch2ProtocolGuid which is used to register SMI handler. So just by statically looking at the dependencies you can guess that this driver registers and handles SMM interrupt. To be sure if it indeed registers SMI handler you need to dump the whole SMRAM area and look for a linked list with header ‘DBRC’ or ‘SWSM’ or ‘SMIH’, each node in the list contains the SMI number and SMRAM address of the handler. The problem is that there is no way to dump SMRAM but only with a physical hardware debugger.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_17":{"id":"7937455e353a_17","__typename":"Paragraph","name":"a53b","text":"One of the modules that use EfiSmmSwDispatch2ProtocolGuid is SmiVariable driver. This driver’s general purpose is to update specific UEFI variables from SMM code. UEFI variables are several dozens of usually persistent variables that are stored directly on the SPI flash where the UEFI image is stored. These UEFI variables store different information such as OS configuration, TPM configuration, Secure Boot keys and hashes and some of these variables can be set directly from Windows OS or as in our case from SMM code.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_18":{"id":"7937455e353a_18","__typename":"Paragraph","name":"b17b","text":"The main driver entry point calls the Init_SMI_Handler function as can be seen in next figure:","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_19":{"id":"7937455e353a_19","__typename":"Paragraph","name":"b496","text":"","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*qKkwN1_i3Gp2CkHwk-bg2Q.jpeg"},"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_20":{"id":"7937455e353a_20","__typename":"Paragraph","name":"2391","text":"Init_SMI_Handler function gets a pointer to the EfiSmmSwDispatch2 interface and registers SMI handler 0xEF. SMI 0xEF handler implements a wrapper logic for setting\u002Fgetting data to\u002Ffrom UEFI variable. As you can see in the next figure the handler gets a pointer to EFI_SMM_CPU_PROTOCOL and reads from the CPU ‘saved state’ the value of register RSI. This RSI value is totally attacker controlled and is set in kernel code just before SW SMI is triggered by writing to APMC I\u002FO port 0xB2.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_21":{"id":"7937455e353a_21","__typename":"Paragraph","name":"153b","text":"","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*EfTcbNWD0JZ6uO_RRzR4cQ.jpeg"},"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_22":{"id":"7937455e353a_22","__typename":"Paragraph","name":"32d2","text":"After this, the handler gets a pointer to EfiSmmVariable interface which is the main interface that stores\u002Freads data to\u002Ffrom UEFI variables. There is some strange flow done by calling a function pointer with RSI value as argument but the function pointer is NULL so the flow skipped.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_23":{"id":"7937455e353a_23","__typename":"Paragraph","name":"df98","text":"","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*htIUqXQWOB9-HP5fUbdIsQ.jpeg"},"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_24":{"id":"7937455e353a_24","__typename":"Paragraph","name":"6c89","text":"RSI value from previous step is used as a pointer to a buffer which holds at offset 0x1 “operation selection id” and at offset 0x4 a pointer to a struct of arguments for set\u002Fget a UEFI variable. If offset 0x1 equals to “1” then the flow will read data from UEFI variable.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":242,"end":246,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_25":{"id":"7937455e353a_25","__typename":"Paragraph","name":"847b","text":"In the next figure you can see how read data from UEFI variable is done -the previously obtained pointer to EfiSmmVariable_Interface is used to call SmmGetVariable() with arguments supplied as a struct pointed by the value in RSI+0x4.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_26":{"id":"7937455e353a_26","__typename":"Paragraph","name":"f49d","text":"This is the layout of attacker controlled surface:","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_27":{"id":"7937455e353a_27","__typename":"Paragraph","name":"f307","text":"","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*GlW3gJsvSX9yZRiY4ZBEbg.jpeg"},"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_28":{"id":"7937455e353a_28","__typename":"Paragraph","name":"a195","text":"SmmGetVariable function called","type":"IMG","href":null,"layout":"INSET_CENTER","metadata":{"__ref":"ImageMetadata:1*JQqXxa483ES12hxtPehjTg.jpeg"},"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_29":{"id":"7937455e353a_29","__typename":"Paragraph","name":"c953","text":"As you can see the values (pointers) from the ArgsStruct are used directly “as is” without any validation. SmmGetVariable function has a simple task it uses the ArgsStruct values to find the correct variable then read its data and then store the data in a buffer. All these values are attacker controlled because RSI register value is also attacker controlled, we will see full details in the pre-exploitation step.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_30":{"id":"7937455e353a_30","__typename":"Paragraph","name":"3aa8","text":"From vulnerability to exploitation -HVCI bypass","type":"BQ","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":47,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_31":{"id":"7937455e353a_31","__typename":"Paragraph","name":"8854","text":"So till now we got 3 important steps:","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_32":{"id":"7937455e353a_32","__typename":"Paragraph","name":"ff0e","text":"We control the value of RSI register because it is saved in CPU SMM ‘state save’ area and being read by SMI handler 0xEF when the SMI is triggered.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_33":{"id":"7937455e353a_33","__typename":"Paragraph","name":"cbb1","text":"Because RSI points to a buffer which points to ArgsStruct we actually control all the arguments for the SmmGetVariable() function.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_34":{"id":"7937455e353a_34","__typename":"Paragraph","name":"22c0","text":"No validations are done on RSI value or on the inner pointers in the buffer that RSI is pointing to.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_35":{"id":"7937455e353a_35","__typename":"Paragraph","name":"f147","text":"At this moment if an attacker is able to set its own value (shellcode) in a UEFI variable and control the destination buffer of SmmGetVariable() this is a game over situation because it will allow to write our shellcode to SMRAM.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_36":{"id":"7937455e353a_36","__typename":"Paragraph","name":"7a90","text":"Luckily steps 1+2+3 exactly suit for a perfect exploitation.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_37":{"id":"7937455e353a_37","__typename":"Paragraph","name":"c48f","text":"Pre Exploitation — building write primitive:","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":44,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_38":{"id":"7937455e353a_38","__typename":"Paragraph","name":"be7c","text":"Prepare “config buffer” with offset 0x1==1 and offset 0x4==address of “Args Struct” which will be 0x810 at my exploitation. I will put the “config buffer” at physical memory 0x800 which is on most PCs an empty area.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_39":{"id":"7937455e353a_39","__typename":"Paragraph","name":"2e03","text":"Prepare “Args Struct” buffer starting from physical memory 0x810. At offset 0x0==variable GUID; offset 0x10==address of variable name (0x850); offset 0x14=0; offset 0x18==address of data size(0x830); offset 0x1c==address of destination buffer(0x840).","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_40":{"id":"7937455e353a_40","__typename":"Paragraph","name":"a303","text":"At location 0x850 put your variable name in Unicode, I will use “SmmRootkit”. At location 0x830 put your shellcode size. At location 0x840 put your destination address in SMRAM where the shellcode will reside.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_41":{"id":"7937455e353a_41","__typename":"Paragraph","name":"5ed2","text":"From Userspace use Windows API SetFirmwareEnvironmentVariable() to create new UEFI variable named “SmmRootkit” and its value set to your favorite shellcode.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_42":{"id":"7937455e353a_42","__typename":"Paragraph","name":"76d2","text":"Trigger SMI handler 0xEF by writing to I\u002FO port 0xB2. We will need to trigger the SMI with an RSI register value controlled by us. RSI must point to the “config buffer”-0x800 at this example.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_43":{"id":"7937455e353a_43","__typename":"Paragraph","name":"e280","text":"Pay attention that RSI must be set just before writing to the I\u002FO port.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_44":{"id":"7937455e353a_44","__typename":"Paragraph","name":"00ff","text":"If you follow these steps the result is a generic write what where primitive that allows you write any data to SMRAM. As you might remember there is no way to write to SMRAM once it is locked during boot. In my example the vulnerability exists in SMM code so it can definitely write to SMRAM.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":146,"end":155,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_45":{"id":"7937455e353a_45","__typename":"Paragraph","name":"c51e","text":"HVCI bypass Exploitation","type":"BQ","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":24,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_46":{"id":"7937455e353a_46","__typename":"Paragraph","name":"ea55","text":"Once we have a write primitive to SMRAM we are close to game over. But first of all what is HVCI?","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_47":{"id":"7937455e353a_47","__typename":"Paragraph","name":"9adb","text":"I will not dive here in to details because it is a whole huge topic to discuss, but generally what you need to know is:","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_48":{"id":"7937455e353a_48","__typename":"Paragraph","name":"f075","text":"In the last years Windows moved its security to VBS — virtualization based security.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_49":{"id":"7937455e353a_49","__typename":"Paragraph","name":"ebf1","text":"VBS uses Windows hypervisor (Hyper-V) to create 2 worlds Normal(vtl0) + Secure(vtl1).","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_50":{"id":"7937455e353a_50","__typename":"Paragraph","name":"cda3","text":"Hyper-V manages the two worlds and works closely with the main CPU(VM instructions) .","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_51":{"id":"7937455e353a_51","__typename":"Paragraph","name":"1ce6","text":"In such a design we get isolation between worlds of sensitive and critical functionality such as HVCI, CredentialGuard and more.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_52":{"id":"7937455e353a_52","__typename":"Paragraph","name":"0166","text":"The kernel that manages VTL1 is Securekernel which runs in ring0 VTL1, SecureKernel has limited system calls and is about 90% less in size than regular Kernel.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_53":{"id":"7937455e353a_53","__typename":"Paragraph","name":"f292","text":"HVCI main security boundaries:","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_54":{"id":"7937455e353a_54","__typename":"Paragraph","name":"69ee","text":"Any code that is loaded to Kernel must be signed otherwise it will not execute.","type":"ULI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_55":{"id":"7937455e353a_55","__typename":"Paragraph","name":"11cb","text":"There is no possibility to allocate RWX pages in Kernel.","type":"ULI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_56":{"id":"7937455e353a_56","__typename":"Paragraph","name":"74c2","text":"There is no possibility to add W attribute to RX (code) page.","type":"ULI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_57":{"id":"7937455e353a_57","__typename":"Paragraph","name":"85af","text":"7. HVCI uses EPT (extended page table) which maps all OS “physical addresses” to real system physical addresses. This means that page permissions (R\u002FW\u002FX) are stored not only in the OS page table but also in EPT. EPT is maintained by hypervisor and there is actually no way to change EPT from user or kernel mode.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_58":{"id":"7937455e353a_58","__typename":"Paragraph","name":"5f05","text":"8. As a result, every violation in kernel page permissions will be caught immediately because OS page permission will differ from the permissions of the same page in EPT.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_59":{"id":"7937455e353a_59","__typename":"Paragraph","name":"c0b6","text":"Now let’s say that VTL0 kernel asked for some security checks from VTL1 before it will start executing kernel code. One possibility to attack the design is to run malicious code in VTL0 kernel space (not a trivial task at all) and change the security results that came from VTL1. In such scenario HVCI will stop the attack because the page permission in EPT will remain Write or eXecute — you cannot allocate RWX page at all and if you allocate RX page and add Write afterwards, still in EPT it will remain RX. As a result HVCI will not allow code execution on this kernel page.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_60":{"id":"7937455e353a_60","__typename":"Paragraph","name":"9bde","text":"The only way to run kernel malicious code is to find the attacked page (PTE) in EPT and change the permission to RWX but as you already know you cannot access EPT from user\u002Fkernel mode.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_61":{"id":"7937455e353a_61","__typename":"Paragraph","name":"fd7a","text":"In my example, HVCI will be running and I will write and execute shellcode to an existing read only page inside ACPI.sys driver module.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_62":{"id":"7937455e353a_62","__typename":"Paragraph","name":"4478","text":"How is it possible?","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":19,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_63":{"id":"7937455e353a_63","__typename":"Paragraph","name":"4ef2","text":"Here comes the power of SMM-from SMM code you can access any physical page and thus you can change EPT, but one problem still exists you don’t know where is EPT located. Here SMM also helps us because each time CPU switches to SMM it saves in “state save area” (SMBASE+0xFE00) a pointer to VMCB Physical Address and inside VMCB we have the physical address of EPT. SMBASE address is the same at each boot and across same PCs so simple SMM shellcode can find the physical address of EPT, on AMD architecture –","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_64":{"id":"7937455e353a_64","__typename":"Paragraph","name":"6e21","text":"1. VMCB address = SMBASE+0xFE00+OffsetTo(VMCB Address)","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_65":{"id":"7937455e353a_65","__typename":"Paragraph","name":"f581","text":"2. EPT address = VMCB address+0xB0","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_66":{"id":"7937455e353a_66","__typename":"Paragraph","name":"56e3","text":"Exploitation Steps SMM shellcode","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":32,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_67":{"id":"7937455e353a_67","__typename":"Paragraph","name":"14ff","text":"The shellcode will get EPT physical address from VMCB+0xB0.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_68":{"id":"7937455e353a_68","__typename":"Paragraph","name":"65f5","text":"Use OS physical address of the attacked page (see bullet 3 next section) to parse the EPT and find the corresponding page permissions in EPT. This is very similar to the standard page table walk CR3-\u003EPML4-\u003EPDPT-\u003EPD-\u003EPT. Pay attention i had 2MB pages so the walk is slightly different.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_69":{"id":"7937455e353a_69","__typename":"Paragraph","name":"3fb9","text":"3. Change the permission from R to RWX.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_70":{"id":"7937455e353a_70","__typename":"Paragraph","name":"f98f","text":"Exploitation Steps Windows OS","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":29,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_71":{"id":"7937455e353a_71","__typename":"Paragraph","name":"da34","text":"Make sure HVCI is enabled and running. At this exploit I will use private read\u002Fwrite primitives to kernel but this is out of scope because we are dealing with ring 0 to ring -2 privilege escalation.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_72":{"id":"7937455e353a_72","__typename":"Paragraph","name":"e1a3","text":"I will get kernel virtual address of .rdata page from the ACPI driver at offset 0x7E100 (build 19H2 November 2019). This page is with (R)ead only permissions and has some empty space for a short “hello SMM rootkit” shellcode.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_73":{"id":"7937455e353a_73","__typename":"Paragraph","name":"47cd","text":"I will get this page PTE and change page permissions to RWX using a write primitive to kernel. Windows has an array of all PTEs at a specific address which is called PTE_BASE. This value is randomized but you will see how to get this value in the POC. Once you have PTE_BASE your PTE will be at offset Page VirtAddrss \u002F 2⁹, this because each page table (2¹² size) maps 2MB of virtual memory(2²¹ size).","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_74":{"id":"7937455e353a_74","__typename":"Paragraph","name":"5f8e","text":"Change permissions in PTE from R to RWX. Also from the PTE get the physical address of the page and use it in the SMM shellcode when parsing the EPT.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_75":{"id":"7937455e353a_75","__typename":"Paragraph","name":"4703","text":"I will use a kernel write primitive to write simple “hello SMM rootkit” assembly to the kernel page from step 1.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_76":{"id":"7937455e353a_76","__typename":"Paragraph","name":"bd7a","text":"Use the SMRAM write primitive, as described in the pre-exploitation section, and write the SMM shellcode so you overwrite any SMI handler of your choice, let’s say SMI 0x30.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_77":{"id":"7937455e353a_77","__typename":"Paragraph","name":"48c4","text":"Trigger SMI 0x30 by writing the value 0x30 to APMC I\u002FO port 0xB2.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_78":{"id":"7937455e353a_78","__typename":"Paragraph","name":"af7e","text":"From now the kernel page from step 1 is marked RWX also in EPT.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_79":{"id":"7937455e353a_79","__typename":"Paragraph","name":"f109","text":"Call yours “hello SMM rootkit” shellcode from step 4 and it will execute. Use DbgView from SysInternals to see the print from kernel.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_80":{"id":"7937455e353a_80","__typename":"Paragraph","name":"f67d","text":"HVCI bypass succeeded — we wrote and executed our shellcode to Read only page.","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_81":{"id":"7937455e353a_81","__typename":"Paragraph","name":"befe","text":"In case you wondered, if you just changed to page permissions from R to RWX without using the SMM shellcode to update EPT, the result when execution happens would be BSOD with unrecoverable Exception.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_82":{"id":"7937455e353a_82","__typename":"Paragraph","name":"9ef7","text":"POC video: https:\u002F\u002Fyoutu.be\u002FyUrb3lzl-Fo","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":11,"end":39,"type":"A","href":"https:\u002F\u002Fyoutu.be\u002FyUrb3lzl-Fo","anchorType":"LINK","userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_83":{"id":"7937455e353a_83","__typename":"Paragraph","name":"49c0","text":"Conclusion and possible mitigation","type":"BQ","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":34,"type":"STRONG","href":null,"anchorType":null,"userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_84":{"id":"7937455e353a_84","__typename":"Paragraph","name":"9e58","text":"The root cause of this SMM vulnerability is in lack of checks on the destination buffer address when calling SmmGetVariable() in SMI handler 0xEF. As a result attacker achieves generic write primitive to the most protected memory, SMRAM, and from now code execution in SMM is a trivial task as already explained. Code execution in SMM is a game over for all security boundaries such as SecureBoot, Hypervisor, VBS, Kernel and more.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_85":{"id":"7937455e353a_85","__typename":"Paragraph","name":"3cf9","text":"This vulnerability was fixed by adding several checks to destination buffer and other pointers such that they do not point to SMRAM regions.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_86":{"id":"7937455e353a_86","__typename":"Paragraph","name":"55a8","text":"During last year Windows introduced its Secured-Core PC which tries to enforce UEFI code to implement SMM monitor and audit but it will take long time to adopt these changes if at all. In the upcoming Blackhat USA 2020, Saar Amar and Daniel King will drop 2 critical vulnerabilities in the Securekernel which bypass VBS boundaries.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_87":{"id":"7937455e353a_87","__typename":"Paragraph","name":"457a","text":"One of the attack vectors with code execution in SMM is writing persistent malware to the SPI flash where UEFI image exists. Such attack would be eliminated if Intel BootGuard is correctly working but it will not help in the case presented in this research because all modifications are done at runtime when boot is already finished.","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_88":{"id":"7937455e353a_88","__typename":"Paragraph","name":"a92e","text":"For comments and questions you can contact me at: danny.odler@gmail.com","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_89":{"id":"7937455e353a_89","__typename":"Paragraph","name":"8d76","text":"References:","type":"P","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[],"dropCapImage":null},"Paragraph:7937455e353a_90":{"id":"7937455e353a_90","__typename":"Paragraph","name":"ccd4","text":"https:\u002F\u002Fwww.blackhat.com\u002Fus-20\u002Fbriefings\u002Fschedule\u002F#breaking-vsm-by-attacking-securekernel-20382","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":95,"type":"A","href":"https:\u002F\u002Fwww.blackhat.com\u002Fus-20\u002Fbriefings\u002Fschedule\u002F#breaking-vsm-by-attacking-securekernel-20382","anchorType":"LINK","userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_91":{"id":"7937455e353a_91","__typename":"Paragraph","name":"c34c","text":"https:\u002F\u002Fgithub.com\u002Fsaaramar\u002FPublications\u002Fblob\u002Fmaster\u002FBluehatIL_VBS_meetup\u002FVBS_Internals.pdf","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":91,"type":"A","href":"https:\u002F\u002Fgithub.com\u002Fsaaramar\u002FPublications\u002Fblob\u002Fmaster\u002FBluehatIL_VBS_meetup\u002FVBS_Internals.pdf","anchorType":"LINK","userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_92":{"id":"7937455e353a_92","__typename":"Paragraph","name":"f701","text":"https:\u002F\u002Fmedium.com\u002F@matrosov\u002Fbypass-intel-boot-guard-cc05edfca3a9","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":65,"type":"A","href":"https:\u002F\u002Fmedium.com\u002F@matrosov\u002Fbypass-intel-boot-guard-cc05edfca3a9","anchorType":"LINK","userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_93":{"id":"7937455e353a_93","__typename":"Paragraph","name":"ba2b","text":"https:\u002F\u002Fmedium.com\u002F@matrosov\u002Fuefi-vulnerabilities-classification-4897596e60af","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":77,"type":"A","href":"https:\u002F\u002Fmedium.com\u002F@matrosov\u002Fuefi-vulnerabilities-classification-4897596e60af","anchorType":"LINK","userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_94":{"id":"7937455e353a_94","__typename":"Paragraph","name":"b9a0","text":"http:\u002F\u002Fblog.cr4.sh\u002F2016\u002F02\u002Fexploiting-smm-callout-vulnerabilities.html","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":70,"type":"A","href":"http:\u002F\u002Fblog.cr4.sh\u002F2016\u002F02\u002Fexploiting-smm-callout-vulnerabilities.html","anchorType":"LINK","userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_95":{"id":"7937455e353a_95","__typename":"Paragraph","name":"5e2d","text":"http:\u002F\u002Fblog.cr4.sh\u002F2015\u002F07\u002Fbuilding-reliable-smm-backdoor-for-uefi.html","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":71,"type":"A","href":"http:\u002F\u002Fblog.cr4.sh\u002F2015\u002F07\u002Fbuilding-reliable-smm-backdoor-for-uefi.html","anchorType":"LINK","userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_96":{"id":"7937455e353a_96","__typename":"Paragraph","name":"f119","text":"https:\u002F\u002Fgithub.com\u002Ftpn\u002Fpdfs\u002Fblob\u002Fmaster\u002FBattle%20of%20SKM%20and%20IUM%20-%20How%20Windows%2010%20Rewrites%20OS%20Architecture%20-%20Alex%20Ionescu%20-%202015%20(blackhat2015).pdf","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":178,"type":"A","href":"https:\u002F\u002Fgithub.com\u002Ftpn\u002Fpdfs\u002Fblob\u002Fmaster\u002FBattle%20of%20SKM%20and%20IUM%20-%20How%20Windows%2010%20Rewrites%20OS%20Architecture%20-%20Alex%20Ionescu%20-%202015%20(blackhat2015).pdf","anchorType":"LINK","userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_97":{"id":"7937455e353a_97","__typename":"Paragraph","name":"ec96","text":"https:\u002F\u002Fwww.synacktiv.com\u002Fposts\u002Fexploit\u002Fthrough-the-smm-class-and-a-vulnerability-found-there.html","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":98,"type":"A","href":"https:\u002F\u002Fwww.synacktiv.com\u002Fposts\u002Fexploit\u002Fthrough-the-smm-class-and-a-vulnerability-found-there.html","anchorType":"LINK","userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_98":{"id":"7937455e353a_98","__typename":"Paragraph","name":"37ed","text":"https:\u002F\u002Fgithub.com\u002Ftianocore-docs\u002FDocs\u002Fraw\u002Fmaster\u002FWhite_Papers\u002FA_Tour_Beyond_BIOS_Memory_Map_And_Practices_in_UEFI_BIOS_V2.pdf","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":126,"type":"A","href":"https:\u002F\u002Fgithub.com\u002Ftianocore-docs\u002FDocs\u002Fraw\u002Fmaster\u002FWhite_Papers\u002FA_Tour_Beyond_BIOS_Memory_Map_And_Practices_in_UEFI_BIOS_V2.pdf","anchorType":"LINK","userId":null,"linkMetadata":null}],"dropCapImage":null},"Paragraph:7937455e353a_99":{"id":"7937455e353a_99","__typename":"Paragraph","name":"5bd8","text":"https:\u002F\u002Fwww.hardwear.io\u002Fberlin-2020\u002Ftraining\u002Fhunting-uefi-firmware-implants.php","type":"OLI","href":null,"layout":null,"metadata":null,"hasDropCap":null,"iframe":null,"mixtapeMetadata":null,"markups":[{"__typename":"Markup","start":0,"end":79,"type":"A","href":"https:\u002F\u002Fwww.hardwear.io\u002Fberlin-2020\u002Ftraining\u002Fhunting-uefi-firmware-implants.php","anchorType":"LINK","userId":null,"linkMetadata":null}],"dropCapImage":null},"ImageMetadata:1*qKkwN1_i3Gp2CkHwk-bg2Q.jpeg":{"id":"1*qKkwN1_i3Gp2CkHwk-bg2Q.jpeg","__typename":"ImageMetadata","originalHeight":355,"originalWidth":625,"focusPercentX":null,"focusPercentY":null,"alt":null},"ImageMetadata:1*EfTcbNWD0JZ6uO_RRzR4cQ.jpeg":{"id":"1*EfTcbNWD0JZ6uO_RRzR4cQ.jpeg","__typename":"ImageMetadata","originalHeight":371,"originalWidth":625,"focusPercentX":null,"focusPercentY":null,"alt":null},"ImageMetadata:1*htIUqXQWOB9-HP5fUbdIsQ.jpeg":{"id":"1*htIUqXQWOB9-HP5fUbdIsQ.jpeg","__typename":"ImageMetadata","originalHeight":386,"originalWidth":625,"focusPercentX":null,"focusPercentY":null,"alt":null},"ImageMetadata:1*GlW3gJsvSX9yZRiY4ZBEbg.jpeg":{"id":"1*GlW3gJsvSX9yZRiY4ZBEbg.jpeg","__typename":"ImageMetadata","originalHeight":406,"originalWidth":800,"focusPercentX":null,"focusPercentY":null,"alt":null},"ImageMetadata:1*JQqXxa483ES12hxtPehjTg.jpeg":{"id":"1*JQqXxa483ES12hxtPehjTg.jpeg","__typename":"ImageMetadata","originalHeight":394,"originalWidth":625,"focusPercentX":null,"focusPercentY":null,"alt":null},"ImageMetadata:":{"id":"","__typename":"ImageMetadata","focusPercentX":null,"focusPercentY":null},"UserViewerEdge:userId:dd1f770a3055-viewerId:lo_71ff0eab1584":{"id":"userId:dd1f770a3055-viewerId:lo_71ff0eab1584","__typename":"UserViewerEdge","isFollowing":false,"isUser":false},"User:dd1f770a3055":{"id":"dd1f770a3055","__typename":"User","name":"Nupur Shinde","username":"nupurshinde2727","bio":"","imageId":"0*oqQE9iK893_UP1Eh.jpg","mediumMemberAt":0,"isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:dd1f770a3055-viewerId:lo_71ff0eab1584"},"viewerIsUser":false,"newsletterV3":null,"customDomainState":{"__typename":"CustomDomainState","live":{"__typename":"CustomDomain","domain":"nupurshinde2727.medium.com"}},"hasSubdomain":true,"postSubscribeMembershipUpsellShownAt":0},"Post:90ece6415a65":{"id":"90ece6415a65","__typename":"Post","title":"Scared to Select Best Software Solutions? Here are Simple Guidelines","mediumUrl":"https:\u002F\u002Fnupurshinde2727.medium.com\u002Fscared-to-select-best-software-solutions-here-are-simple-guidelines-90ece6415a65","previewImage":{"__ref":"ImageMetadata:"},"isPublished":true,"firstPublishedAt":1588151897009,"readingTime":2.0415094339622644,"statusForCollection":null,"isLocked":false,"visibility":"PUBLIC","collection":null,"creator":{"__ref":"User:dd1f770a3055"},"previewContent":{"__typename":"PreviewContent","isFullContent":false}},"ImageMetadata:1*jvvyiWxHpTdVdFMDHhUuIw.jpeg":{"id":"1*jvvyiWxHpTdVdFMDHhUuIw.jpeg","__typename":"ImageMetadata","focusPercentX":null,"focusPercentY":null},"UserViewerEdge:userId:7985e78bcff7-viewerId:lo_71ff0eab1584":{"id":"userId:7985e78bcff7-viewerId:lo_71ff0eab1584","__typename":"UserViewerEdge","isFollowing":false,"isUser":false},"User:7985e78bcff7":{"id":"7985e78bcff7","__typename":"User","name":"Niroshan Kumarasamy","username":"knniroshan82","bio":"","imageId":"1*fcHsdbH_SVSzZ5mE0fDkLQ.jpeg","mediumMemberAt":0,"isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:7985e78bcff7-viewerId:lo_71ff0eab1584"},"viewerIsUser":false,"newsletterV3":null,"customDomainState":null,"hasSubdomain":false,"postSubscribeMembershipUpsellShownAt":0},"Post:e0ea386eefe":{"id":"e0ea386eefe","__typename":"Post","title":"Beginning redis cluster","mediumUrl":"https:\u002F\u002Fmedium.com\u002F@knniroshan82\u002Fbeginning-redis-cluster-e0ea386eefe","previewImage":{"__ref":"ImageMetadata:1*jvvyiWxHpTdVdFMDHhUuIw.jpeg"},"isPublished":true,"firstPublishedAt":1553243210609,"readingTime":5.029245283018868,"statusForCollection":null,"isLocked":false,"visibility":"PUBLIC","collection":null,"creator":{"__ref":"User:7985e78bcff7"},"previewContent":{"__typename":"PreviewContent","isFullContent":false}},"ImageMetadata:1*gpG12J4W53pV-58Z4PrFBQ.png":{"id":"1*gpG12J4W53pV-58Z4PrFBQ.png","__typename":"ImageMetadata","focusPercentX":null,"focusPercentY":null},"UserViewerEdge:userId:f33c99cab848-viewerId:lo_71ff0eab1584":{"id":"userId:f33c99cab848-viewerId:lo_71ff0eab1584","__typename":"UserViewerEdge","isFollowing":false,"isUser":false},"User:f33c99cab848":{"id":"f33c99cab848","__typename":"User","name":"Nitish Singla","username":"nitish29singla","bio":"","imageId":"0*CLUnEJDhgzwKQmXT.jpg","mediumMemberAt":0,"isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:f33c99cab848-viewerId:lo_71ff0eab1584"},"viewerIsUser":false,"newsletterV3":null,"customDomainState":{"__typename":"CustomDomainState","live":{"__typename":"CustomDomain","domain":"nitish29singla.medium.com"}},"hasSubdomain":true,"postSubscribeMembershipUpsellShownAt":0},"Post:488e2a6a2e16":{"id":"488e2a6a2e16","__typename":"Post","title":"Static Code Analysis:","mediumUrl":"https:\u002F\u002Fnitish29singla.medium.com\u002Fstatic-code-analysis-488e2a6a2e16","previewImage":{"__ref":"ImageMetadata:1*gpG12J4W53pV-58Z4PrFBQ.png"},"isPublished":true,"firstPublishedAt":1606316853625,"readingTime":4.125471698113207,"statusForCollection":null,"isLocked":false,"visibility":"PUBLIC","collection":null,"creator":{"__ref":"User:f33c99cab848"},"previewContent":{"__typename":"PreviewContent","isFullContent":false}},"ImageMetadata:0*-pB0AvvmESeNCM1c.png":{"id":"0*-pB0AvvmESeNCM1c.png","__typename":"ImageMetadata","focusPercentX":null,"focusPercentY":null},"CollectionViewerEdge:collectionId:204e9865c214-viewerId:lo_71ff0eab1584":{"id":"collectionId:204e9865c214-viewerId:lo_71ff0eab1584","__typename":"CollectionViewerEdge","isEditor":false},"Collection:204e9865c214":{"id":"204e9865c214","__typename":"Collection","name":"Code Rush Blog","description":"Code Rush wants to bridge the gap between academia and the software industry in Nepal by providing self-sustaining training programs to girls.","tagline":"An insight into technology and work culture at Code Rush","domain":null,"slug":"code-rush-blog","isAuroraEligible":false,"isAuroraVisible":false,"viewerEdge":{"__ref":"CollectionViewerEdge:collectionId:204e9865c214-viewerId:lo_71ff0eab1584"},"canToggleEmail":false},"UserViewerEdge:userId:aaaf8aac11e6-viewerId:lo_71ff0eab1584":{"id":"userId:aaaf8aac11e6-viewerId:lo_71ff0eab1584","__typename":"UserViewerEdge","isFollowing":false,"isUser":false},"User:aaaf8aac11e6":{"id":"aaaf8aac11e6","__typename":"User","name":"@thebe_trija57","username":"thebetrija55","bio":"_exploring life_","imageId":"1*rNiOjIpgqeTadeUHm2P71g.jpeg","mediumMemberAt":0,"isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:aaaf8aac11e6-viewerId:lo_71ff0eab1584"},"viewerIsUser":false,"newsletterV3":null,"customDomainState":null,"hasSubdomain":false,"postSubscribeMembershipUpsellShownAt":0},"Post:41b994178d62":{"id":"41b994178d62","__typename":"Post","title":"Code Like Her Weekly #13","mediumUrl":"https:\u002F\u002Fmedium.com\u002Fcode-rush-blog\u002Fcode-like-her-weekly-13-41b994178d62","previewImage":{"__ref":"ImageMetadata:0*-pB0AvvmESeNCM1c.png"},"isPublished":true,"firstPublishedAt":1603099324376,"readingTime":2.722955974842767,"statusForCollection":"APPROVED","isLocked":false,"visibility":"PUBLIC","collection":{"__ref":"Collection:204e9865c214"},"creator":{"__ref":"User:aaaf8aac11e6"},"previewContent":{"__typename":"PreviewContent","isFullContent":false}},"ImageMetadata:1*1X0-98EiQNkwBJj2vnTTqQ.jpeg":{"id":"1*1X0-98EiQNkwBJj2vnTTqQ.jpeg","__typename":"ImageMetadata","focusPercentX":null,"focusPercentY":null},"UserViewerEdge:userId:65cc5674bc8f-viewerId:lo_71ff0eab1584":{"id":"userId:65cc5674bc8f-viewerId:lo_71ff0eab1584","__typename":"UserViewerEdge","isFollowing":false,"isUser":false},"NewsletterV3:ae6ff12471b1":{"id":"ae6ff12471b1","__typename":"NewsletterV3","type":"NEWSLETTER_TYPE_AUTHOR","slug":"65cc5674bc8f","name":"65cc5674bc8f","collection":null,"user":{"__ref":"User:65cc5674bc8f"}},"User:65cc5674bc8f":{"id":"65cc5674bc8f","__typename":"User","name":"Alex Godley","username":"alex-godley","newsletterV3":{"__ref":"NewsletterV3:ae6ff12471b1"},"bio":"I’m a bard who likes to play with words and create new worlds. I also like chocolate. And cake. www.alexgodley.com","imageId":"1*f8PbsWZoi9BeipU9r8j8vA.jpeg","mediumMemberAt":1613913566000,"isPartnerProgramEnrolled":true,"viewerEdge":{"__ref":"UserViewerEdge:userId:65cc5674bc8f-viewerId:lo_71ff0eab1584"},"viewerIsUser":false,"customDomainState":{"__typename":"CustomDomainState","live":{"__typename":"CustomDomain","domain":"alex-godley.medium.com"}},"hasSubdomain":true,"postSubscribeMembershipUpsellShownAt":0},"Post:5ecbfb1f7965":{"id":"5ecbfb1f7965","__typename":"Post","title":"3 Reasons to learn Python","mediumUrl":"https:\u002F\u002Falex-godley.medium.com\u002F3-reasons-to-learn-python-5ecbfb1f7965","previewImage":{"__ref":"ImageMetadata:1*1X0-98EiQNkwBJj2vnTTqQ.jpeg"},"isPublished":true,"firstPublishedAt":1613468235819,"readingTime":1.9877358490566037,"statusForCollection":null,"isLocked":true,"visibility":"LOCKED","collection":null,"creator":{"__ref":"User:65cc5674bc8f"},"previewContent":{"__typename":"PreviewContent","isFullContent":false}},"UserViewerEdge:userId:71bd8b68d47c-viewerId:lo_71ff0eab1584":{"id":"userId:71bd8b68d47c-viewerId:lo_71ff0eab1584","__typename":"UserViewerEdge","isFollowing":false,"isUser":false},"User:71bd8b68d47c":{"id":"71bd8b68d47c","__typename":"User","name":"Ayushsingh","username":"ayushsingh01222","bio":"i am good at reading Blogs","imageId":"0*YEDm-ejkoMC-rmIQ.jpg","mediumMemberAt":0,"isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:71bd8b68d47c-viewerId:lo_71ff0eab1584"},"viewerIsUser":false,"newsletterV3":null,"customDomainState":null,"hasSubdomain":false,"postSubscribeMembershipUpsellShownAt":0},"Post:e19c94a4737a":{"id":"e19c94a4737a","__typename":"Post","title":"Top web designing course in Noida sec 18","mediumUrl":"https:\u002F\u002Fmedium.com\u002F@ayushsingh01222\u002Ftop-web-designing-course-in-noida-sec-18-e19c94a4737a","previewImage":{"__ref":"ImageMetadata:"},"isPublished":true,"firstPublishedAt":1578290918191,"readingTime":3.3056603773584907,"statusForCollection":null,"isLocked":false,"visibility":"PUBLIC","collection":null,"creator":{"__ref":"User:71bd8b68d47c"},"previewContent":{"__typename":"PreviewContent","isFullContent":false}},"UserViewerEdge:userId:317214480a46-viewerId:lo_71ff0eab1584":{"id":"userId:317214480a46-viewerId:lo_71ff0eab1584","__typename":"UserViewerEdge","isFollowing":false,"isUser":false},"User:317214480a46":{"id":"317214480a46","__typename":"User","name":"Matthew Perkins","username":"mobile_develop","bio":"I am a mobile engineer, specializing in Android. https:\u002F\u002Fwww.linkedin.com\u002Fin\u002Fmatthewrperkins\u002F","imageId":"0*NtehQ4sT46sVkqWR.","mediumMemberAt":0,"isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:317214480a46-viewerId:lo_71ff0eab1584"},"viewerIsUser":false,"newsletterV3":null,"customDomainState":null,"hasSubdomain":false,"postSubscribeMembershipUpsellShownAt":0},"Post:bbced47ad8a5":{"id":"bbced47ad8a5","__typename":"Post","title":"Android Application Development: Detecting when your app enters the background or foreground","mediumUrl":"https:\u002F\u002Fmedium.com\u002F@mobile_develop\u002Fandroid-application-development-detecting-when-your-app-enters-the-background-or-foreground-bbced47ad8a5","previewImage":{"__ref":"ImageMetadata:"},"isPublished":true,"firstPublishedAt":1527877643035,"readingTime":4.8830188679245285,"statusForCollection":null,"isLocked":false,"visibility":"PUBLIC","collection":null,"creator":{"__ref":"User:317214480a46"},"previewContent":{"__typename":"PreviewContent","isFullContent":false}},"ImageMetadata:1*s350gjT5e2zuggfuHB_aww.png":{"id":"1*s350gjT5e2zuggfuHB_aww.png","__typename":"ImageMetadata","focusPercentX":41,"focusPercentY":39},"UserViewerEdge:userId:56403c636984-viewerId:lo_71ff0eab1584":{"id":"userId:56403c636984-viewerId:lo_71ff0eab1584","__typename":"UserViewerEdge","isFollowing":false,"isUser":false},"User:56403c636984":{"id":"56403c636984","__typename":"User","name":"Jack Griffiths","username":"jack.griffiths","bio":"","imageId":"1*dmbNkD5D-u45r44go_cf0g.png","mediumMemberAt":0,"isPartnerProgramEnrolled":false,"viewerEdge":{"__ref":"UserViewerEdge:userId:56403c636984-viewerId:lo_71ff0eab1584"},"viewerIsUser":false,"newsletterV3":null,"customDomainState":null,"hasSubdomain":false,"postSubscribeMembershipUpsellShownAt":0},"Post:4a9d52df4de4":{"id":"4a9d52df4de4","__typename":"Post","title":"Code the City 11","mediumUrl":"https:\u002F\u002Fmedium.com\u002F@jack.griffiths\u002Fcode-the-city-11-4a9d52df4de4","previewImage":{"__ref":"ImageMetadata:1*s350gjT5e2zuggfuHB_aww.png"},"isPublished":true,"firstPublishedAt":1517329921637,"readingTime":4.285849056603774,"statusForCollection":null,"isLocked":false,"visibility":"PUBLIC","collection":null,"creator":{"__ref":"User:56403c636984"},"previewContent":{"__typename":"PreviewContent","isFullContent":false}},"PostViewerEdge:postId:b7bfb217b437-viewerId:lo_71ff0eab1584":{"id":"postId:b7bfb217b437-viewerId:lo_71ff0eab1584","__typename":"PostViewerEdge","catalogsConnection":null},"Post:b7bfb217b437":{"id":"b7bfb217b437","__typename":"Post","creator":{"__ref":"User:f873a1ef5f03"},"canonicalUrl":"","collection":null,"content({\"postMeteringOptions\":{\"referrer\":\"\",\"sk\":null,\"source\":null}})":{"__typename":"PostContent","isLockedPreviewOnly":false,"validatedShareKey":"","bodyModel":{"__typename":"RichText","paragraphs":[{"__ref":"Paragraph:7937455e353a_0"},{"__ref":"Paragraph:7937455e353a_1"},{"__ref":"Paragraph:7937455e353a_2"},{"__ref":"Paragraph:7937455e353a_3"},{"__ref":"Paragraph:7937455e353a_4"},{"__ref":"Paragraph:7937455e353a_5"},{"__ref":"Paragraph:7937455e353a_6"},{"__ref":"Paragraph:7937455e353a_7"},{"__ref":"Paragraph:7937455e353a_8"},{"__ref":"Paragraph:7937455e353a_9"},{"__ref":"Paragraph:7937455e353a_10"},{"__ref":"Paragraph:7937455e353a_11"},{"__ref":"Paragraph:7937455e353a_12"},{"__ref":"Paragraph:7937455e353a_13"},{"__ref":"Paragraph:7937455e353a_14"},{"__ref":"Paragraph:7937455e353a_15"},{"__ref":"Paragraph:7937455e353a_16"},{"__ref":"Paragraph:7937455e353a_17"},{"__ref":"Paragraph:7937455e353a_18"},{"__ref":"Paragraph:7937455e353a_19"},{"__ref":"Paragraph:7937455e353a_20"},{"__ref":"Paragraph:7937455e353a_21"},{"__ref":"Paragraph:7937455e353a_22"},{"__ref":"Paragraph:7937455e353a_23"},{"__ref":"Paragraph:7937455e353a_24"},{"__ref":"Paragraph:7937455e353a_25"},{"__ref":"Paragraph:7937455e353a_26"},{"__ref":"Paragraph:7937455e353a_27"},{"__ref":"Paragraph:7937455e353a_28"},{"__ref":"Paragraph:7937455e353a_29"},{"__ref":"Paragraph:7937455e353a_30"},{"__ref":"Paragraph:7937455e353a_31"},{"__ref":"Paragraph:7937455e353a_32"},{"__ref":"Paragraph:7937455e353a_33"},{"__ref":"Paragraph:7937455e353a_34"},{"__ref":"Paragraph:7937455e353a_35"},{"__ref":"Paragraph:7937455e353a_36"},{"__ref":"Paragraph:7937455e353a_37"},{"__ref":"Paragraph:7937455e353a_38"},{"__ref":"Paragraph:7937455e353a_39"},{"__ref":"Paragraph:7937455e353a_40"},{"__ref":"Paragraph:7937455e353a_41"},{"__ref":"Paragraph:7937455e353a_42"},{"__ref":"Paragraph:7937455e353a_43"},{"__ref":"Paragraph:7937455e353a_44"},{"__ref":"Paragraph:7937455e353a_45"},{"__ref":"Paragraph:7937455e353a_46"},{"__ref":"Paragraph:7937455e353a_47"},{"__ref":"Paragraph:7937455e353a_48"},{"__ref":"Paragraph:7937455e353a_49"},{"__ref":"Paragraph:7937455e353a_50"},{"__ref":"Paragraph:7937455e353a_51"},{"__ref":"Paragraph:7937455e353a_52"},{"__ref":"Paragraph:7937455e353a_53"},{"__ref":"Paragraph:7937455e353a_54"},{"__ref":"Paragraph:7937455e353a_55"},{"__ref":"Paragraph:7937455e353a_56"},{"__ref":"Paragraph:7937455e353a_57"},{"__ref":"Paragraph:7937455e353a_58"},{"__ref":"Paragraph:7937455e353a_59"},{"__ref":"Paragraph:7937455e353a_60"},{"__ref":"Paragraph:7937455e353a_61"},{"__ref":"Paragraph:7937455e353a_62"},{"__ref":"Paragraph:7937455e353a_63"},{"__ref":"Paragraph:7937455e353a_64"},{"__ref":"Paragraph:7937455e353a_65"},{"__ref":"Paragraph:7937455e353a_66"},{"__ref":"Paragraph:7937455e353a_67"},{"__ref":"Paragraph:7937455e353a_68"},{"__ref":"Paragraph:7937455e353a_69"},{"__ref":"Paragraph:7937455e353a_70"},{"__ref":"Paragraph:7937455e353a_71"},{"__ref":"Paragraph:7937455e353a_72"},{"__ref":"Paragraph:7937455e353a_73"},{"__ref":"Paragraph:7937455e353a_74"},{"__ref":"Paragraph:7937455e353a_75"},{"__ref":"Paragraph:7937455e353a_76"},{"__ref":"Paragraph:7937455e353a_77"},{"__ref":"Paragraph:7937455e353a_78"},{"__ref":"Paragraph:7937455e353a_79"},{"__ref":"Paragraph:7937455e353a_80"},{"__ref":"Paragraph:7937455e353a_81"},{"__ref":"Paragraph:7937455e353a_82"},{"__ref":"Paragraph:7937455e353a_83"},{"__ref":"Paragraph:7937455e353a_84"},{"__ref":"Paragraph:7937455e353a_85"},{"__ref":"Paragraph:7937455e353a_86"},{"__ref":"Paragraph:7937455e353a_87"},{"__ref":"Paragraph:7937455e353a_88"},{"__ref":"Paragraph:7937455e353a_89"},{"__ref":"Paragraph:7937455e353a_90"},{"__ref":"Paragraph:7937455e353a_91"},{"__ref":"Paragraph:7937455e353a_92"},{"__ref":"Paragraph:7937455e353a_93"},{"__ref":"Paragraph:7937455e353a_94"},{"__ref":"Paragraph:7937455e353a_95"},{"__ref":"Paragraph:7937455e353a_96"},{"__ref":"Paragraph:7937455e353a_97"},{"__ref":"Paragraph:7937455e353a_98"},{"__ref":"Paragraph:7937455e353a_99"}],"sections":[{"__typename":"Section","name":"3ad3","startIndex":0,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null}]}},"customStyleSheet":null,"firstPublishedAt":1592072688216,"isLocked":false,"isPublished":true,"isShortform":false,"layerCake":0,"primaryTopic":null,"title":"Attacking the Golden Ring on AMD Mini-PC","isMarkedPaywallOnly":false,"mediumUrl":"https:\u002F\u002Fdannyodler.medium.com\u002Fattacking-the-golden-ring-on-amd-mini-pc-b7bfb217b437","isLimitedState":false,"inResponseToPostResult":null,"inResponseToCatalogResult":null,"visibility":"PUBLIC","license":"ALL_RIGHTS_RESERVED","allowResponses":true,"newsletterId":"","sequence":null,"tags":[],"topics":[{"__typename":"Topic","topicId":"d4e7f4144ac5","name":"Cybersecurity"},{"__typename":"Topic","topicId":"decb52b64abf","name":"Programming"}],"isNewsletter":false,"isPublishToEmail":false,"socialTitle":"","socialDek":"","noIndex":null,"curationStatus":null,"metaDescription":"","latestPublishedAt":1593858690335,"readingTime":11.976729559748428,"previewContent":{"__typename":"PreviewContent","subtitle":"(or how to bypass Windows strongest security boundary)"},"previewImage":{"__ref":"ImageMetadata:1*qKkwN1_i3Gp2CkHwk-bg2Q.jpeg"},"clapCount":25,"postResponses":{"__typename":"PostResponses","count":1},"isSuspended":false,"pendingCollection":null,"statusForCollection":null,"lockedSource":"LOCKED_POST_SOURCE_NONE","pinnedAt":0,"pinnedByCreatorAt":0,"curationEligibleAt":1592072687398,"responseDistribution":"NOT_DISTRIBUTED","internalLinks({\"paging\":{\"limit\":8}})":{"__typename":"InternalLinksConnection","items":[{"__ref":"Post:90ece6415a65"},{"__ref":"Post:e0ea386eefe"},{"__ref":"Post:488e2a6a2e16"},{"__ref":"Post:41b994178d62"},{"__ref":"Post:5ecbfb1f7965"},{"__ref":"Post:e19c94a4737a"},{"__ref":"Post:bbced47ad8a5"},{"__ref":"Post:4a9d52df4de4"}]},"viewerEdge":{"__ref":"PostViewerEdge:postId:b7bfb217b437-viewerId:lo_71ff0eab1584"},"collaborators":[],"translationSourcePost":null,"inResponseToMediaResource":null,"audioVersionUrl":"","seoTitle":"","updatedAt":1595084806851,"shortformType":"SHORTFORM_TYPE_LINK","structuredData":"","seoDescription":"","isIndexable":true,"latestPublishedVersion":"7937455e353a","voterCount":11,"recommenders":[],"content({})":{"__typename":"PostContent","isLockedPreviewOnly":false,"validatedShareKey":"","bodyModel":{"__typename":"RichText","paragraphs":[{"__ref":"Paragraph:7937455e353a_0"},{"__ref":"Paragraph:7937455e353a_1"},{"__ref":"Paragraph:7937455e353a_2"},{"__ref":"Paragraph:7937455e353a_3"},{"__ref":"Paragraph:7937455e353a_4"},{"__ref":"Paragraph:7937455e353a_5"},{"__ref":"Paragraph:7937455e353a_6"},{"__ref":"Paragraph:7937455e353a_7"},{"__ref":"Paragraph:7937455e353a_8"},{"__ref":"Paragraph:7937455e353a_9"},{"__ref":"Paragraph:7937455e353a_10"},{"__ref":"Paragraph:7937455e353a_11"},{"__ref":"Paragraph:7937455e353a_12"},{"__ref":"Paragraph:7937455e353a_13"},{"__ref":"Paragraph:7937455e353a_14"},{"__ref":"Paragraph:7937455e353a_15"},{"__ref":"Paragraph:7937455e353a_16"},{"__ref":"Paragraph:7937455e353a_17"},{"__ref":"Paragraph:7937455e353a_18"},{"__ref":"Paragraph:7937455e353a_19"},{"__ref":"Paragraph:7937455e353a_20"},{"__ref":"Paragraph:7937455e353a_21"},{"__ref":"Paragraph:7937455e353a_22"},{"__ref":"Paragraph:7937455e353a_23"},{"__ref":"Paragraph:7937455e353a_24"},{"__ref":"Paragraph:7937455e353a_25"},{"__ref":"Paragraph:7937455e353a_26"},{"__ref":"Paragraph:7937455e353a_27"},{"__ref":"Paragraph:7937455e353a_28"},{"__ref":"Paragraph:7937455e353a_29"},{"__ref":"Paragraph:7937455e353a_30"},{"__ref":"Paragraph:7937455e353a_31"},{"__ref":"Paragraph:7937455e353a_32"},{"__ref":"Paragraph:7937455e353a_33"},{"__ref":"Paragraph:7937455e353a_34"},{"__ref":"Paragraph:7937455e353a_35"},{"__ref":"Paragraph:7937455e353a_36"},{"__ref":"Paragraph:7937455e353a_37"},{"__ref":"Paragraph:7937455e353a_38"},{"__ref":"Paragraph:7937455e353a_39"},{"__ref":"Paragraph:7937455e353a_40"},{"__ref":"Paragraph:7937455e353a_41"},{"__ref":"Paragraph:7937455e353a_42"},{"__ref":"Paragraph:7937455e353a_43"},{"__ref":"Paragraph:7937455e353a_44"},{"__ref":"Paragraph:7937455e353a_45"},{"__ref":"Paragraph:7937455e353a_46"},{"__ref":"Paragraph:7937455e353a_47"},{"__ref":"Paragraph:7937455e353a_48"},{"__ref":"Paragraph:7937455e353a_49"},{"__ref":"Paragraph:7937455e353a_50"},{"__ref":"Paragraph:7937455e353a_51"},{"__ref":"Paragraph:7937455e353a_52"},{"__ref":"Paragraph:7937455e353a_53"},{"__ref":"Paragraph:7937455e353a_54"},{"__ref":"Paragraph:7937455e353a_55"},{"__ref":"Paragraph:7937455e353a_56"},{"__ref":"Paragraph:7937455e353a_57"},{"__ref":"Paragraph:7937455e353a_58"},{"__ref":"Paragraph:7937455e353a_59"},{"__ref":"Paragraph:7937455e353a_60"},{"__ref":"Paragraph:7937455e353a_61"},{"__ref":"Paragraph:7937455e353a_62"},{"__ref":"Paragraph:7937455e353a_63"},{"__ref":"Paragraph:7937455e353a_64"},{"__ref":"Paragraph:7937455e353a_65"},{"__ref":"Paragraph:7937455e353a_66"},{"__ref":"Paragraph:7937455e353a_67"},{"__ref":"Paragraph:7937455e353a_68"},{"__ref":"Paragraph:7937455e353a_69"},{"__ref":"Paragraph:7937455e353a_70"},{"__ref":"Paragraph:7937455e353a_71"},{"__ref":"Paragraph:7937455e353a_72"},{"__ref":"Paragraph:7937455e353a_73"},{"__ref":"Paragraph:7937455e353a_74"},{"__ref":"Paragraph:7937455e353a_75"},{"__ref":"Paragraph:7937455e353a_76"},{"__ref":"Paragraph:7937455e353a_77"},{"__ref":"Paragraph:7937455e353a_78"},{"__ref":"Paragraph:7937455e353a_79"},{"__ref":"Paragraph:7937455e353a_80"},{"__ref":"Paragraph:7937455e353a_81"},{"__ref":"Paragraph:7937455e353a_82"},{"__ref":"Paragraph:7937455e353a_83"},{"__ref":"Paragraph:7937455e353a_84"},{"__ref":"Paragraph:7937455e353a_85"},{"__ref":"Paragraph:7937455e353a_86"},{"__ref":"Paragraph:7937455e353a_87"},{"__ref":"Paragraph:7937455e353a_88"},{"__ref":"Paragraph:7937455e353a_89"},{"__ref":"Paragraph:7937455e353a_90"},{"__ref":"Paragraph:7937455e353a_91"},{"__ref":"Paragraph:7937455e353a_92"},{"__ref":"Paragraph:7937455e353a_93"},{"__ref":"Paragraph:7937455e353a_94"},{"__ref":"Paragraph:7937455e353a_95"},{"__ref":"Paragraph:7937455e353a_96"},{"__ref":"Paragraph:7937455e353a_97"},{"__ref":"Paragraph:7937455e353a_98"},{"__ref":"Paragraph:7937455e353a_99"}],"sections":[{"__typename":"Section","name":"3ad3","startIndex":0,"textLayout":null,"imageLayout":null,"backgroundImage":null,"videoLayout":null,"backgroundVideo":null}]}}}}</script><script>window.__MIDDLEWARE_STATE__={"session":{"xsrf":""},"cache":{"cacheStatus":"MISS"}}</script><script src="https://cdn-client.medium.com/lite/static/js/manifest.09676610.js"></script><script src="https://cdn-client.medium.com/lite/static/js/36804.29338eda.js"></script><script src="https://cdn-client.medium.com/lite/static/js/main.9d1b077e.js"></script><script src="https://cdn-client.medium.com/lite/static/js/45573.4354ed57.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/instrumentation.b1459a61.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/reporting.0a3746f4.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/81144.478f446d.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/11034.d0c1834e.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/80685.d263e9d5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/90192.14e33102.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/79088.e4863540.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/81645.c8a01874.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/70832.444ac173.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/63303.da52dbf3.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/50006.f237604f.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/26022.3c15e7df.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5850.2cc3e6a0.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/11615.6d046961.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/92397.6c801126.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/82529.2cec17dd.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/5055.da1a97c1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/79851.1d74fff2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/79356.c1e9db74.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/22026.6d1fc7a4.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/39378.0d1d71e9.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/33673.de5f47de.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/95972.996c4300.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/11366.069ea1f1.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/60519.d440634f.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/62182.5598c3a5.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/35285.dc03faaf.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/76686.a9549ddd.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/9972.269c800c.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/43642.94f5db34.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/46463.5819fde2.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/10733.34c3b092.chunk.js"></script>
<script src="https://cdn-client.medium.com/lite/static/js/Post.015510a3.chunk.js"></script><script>window.main();</script><script defer src="https://static.cloudflareinsights.com/beacon.min.js" data-cf-beacon='{"rayId":"6a6841a0e4c14214","token":"0b5f665943484354a59c39c6833f7078","version":"2021.10.0","si":100}'></script>
<script defer src="https://static.cloudflareinsights.com/beacon.min.js" data-cf-beacon='{"rayId":"6a6841a0bfbe4214","token":"0b5f665943484354a59c39c6833f7078","version":"2021.10.0","si":100}'></script>
</body></html>