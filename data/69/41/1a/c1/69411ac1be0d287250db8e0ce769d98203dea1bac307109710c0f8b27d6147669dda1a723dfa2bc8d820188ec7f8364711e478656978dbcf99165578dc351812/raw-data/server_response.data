<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
<title>Bug 772726 – XXE problems continue</title>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
<link href="https://bugzilla.gnome.org/" rel="Top"/>
<link href="showdependencytree.cgi?id=772726&amp;hide_resolved=1" rel="Show" title="Dependency Tree"/>
<link href="show_bug.cgi?format=multiple&amp;id=772726" rel="Show" title="Printer-Friendly Version"/>
<link href="skins/standard/global.css" rel="alternate stylesheet" title="Classic"/><link href="js/yui/assets/skins/sam/autocomplete.css" rel="stylesheet" type="text/css"/><link href="js/yui/assets/skins/sam/calendar.css" rel="stylesheet" type="text/css"/><link href="skins/standard/global.css" rel="stylesheet" type="text/css"/><link href="skins/standard/show_bug.css" rel="stylesheet" type="text/css"/><!--[if lte IE 7]>
      


  <link href="skins/standard/IE-fixes.css" rel="stylesheet"
        type="text/css" >
<![endif]-->
<link href="skins/contrib/Gnome/global.css" rel="stylesheet" title="Gnome" type="text/css"/>
<script src="js/yui/yahoo-dom-event/yahoo-dom-event.js" type="text/javascript"></script><script src="js/yui/cookie/cookie-min.js" type="text/javascript"></script><script src="js/yui/datasource/datasource-min.js" type="text/javascript"></script><script src="js/yui/connection/connection-min.js" type="text/javascript"></script><script src="js/yui/json/json-min.js" type="text/javascript"></script><script src="js/yui/autocomplete/autocomplete-min.js" type="text/javascript"></script><script src="js/yui/calendar/calendar-min.js" type="text/javascript"></script><script src="js/global.js" type="text/javascript"></script>
<script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 50
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    'You must enter a Description for this attachment.',
                component_required:
                    'You must select a Component for this bug.',
                description_required:
                    'You must enter a Description for this bug.',
                short_desc_required:
                    'You must enter a Summary for this bug.',
                version_required:
                    'You must select a Version for this bug.'
            }
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null, 
                             "Bug 772726 – XXE problems continue",  
                             "show_bug.cgi?id=772726" );
        document.title = "Bug 772726 – XXE problems continue";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "Bug 772726 – XXE problems continue", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();
    });
    // -->
    </script>
<script src="js/util.js" type="text/javascript"></script><script src="js/field.js" type="text/javascript"></script>
<link href="./search_plugin.cgi" rel="search" title="GNOME Bugzilla" type="application/opensearchdescription+xml"/>
<link href="images/favicon.ico" rel="shortcut icon"/><link href="extensions/TraceParser/web/style.css" rel="stylesheet" type="text/css"/>
</head>
<body class="bugzilla-gnome-org bz_bug bz_status_RESOLVED bz_product_libxml2 bz_component_general bz_bug_772726 yui-skin-sam" onload="">
<div id="header">
<div id="banner">
</div>
<table border="0" cellpadding="0" cellspacing="0" id="titles">
<tr>
<td id="title">
<p>GNOME Bugzilla – Bug 772726</p>
</td>
<td id="subtitle">
<p class="subheader">XXE problems continue</p>
</td>
<td id="information">
<p class="header_addl_info">Last modified: 2019-04-23 11:02:13 UTC</p>
</td>
</tr>
</table>
<table cellpadding="0" cellspacing="0" class="bz_default_hidden" id="lang_links_container"><tr><td>
</td></tr></table>
<ul class="links"><li><a href="./">Home</a></li></ul>
</div>
<div id="bugzilla-body">
<div style="margin-bottom: 50px; margin-top: 50px; padding: 40px; text-align: center; background-color: rgb(74,134,207); border: rgb(57,104,161); color: rgb(255,255,255); line-height: 300%;">After an <a href="https://wiki.gnome.org/Initiatives/DevelopmentInfrastructure" style="color: rgb(255,255,255);">evaluation</a>, GNOME has moved from Bugzilla to <a href="https://gitlab.gnome.org/" style="color: rgb(255,255,255);">GitLab</a>. <a href="https://wiki.gnome.org/GitLab" style="color: rgb(255,255,255);">Learn more about GitLab</a>. <br/><span style="background-color: #EE0000; font-size: xx-large;"><b>No new issues can be reported in GNOME Bugzilla anymore.</b></span>
<br/><span style="background-color: #EE0000; font-size: xx-large;"><b>To report an issue in a GNOME project, <a href="https://gitlab.gnome.org/GNOME" style="color: rgb(255,255,255);">go to GNOME GitLab</a></b>.</span><br/>Do <b>not</b> go to GNOME Gitlab for: <a href="https://sourceforge.net/p/bluefish/tickets" style="color: rgb(255,255,255);">Bluefish</a>, <a href="https://github.com/doxygen/doxygen/issues" style="color: rgb(255,255,255);">Doxygen</a>, <a href="https://bugs.gnucash.org/" style="color: rgb(255,255,255);">GnuCash</a>, <a href="https://gitlab.freedesktop.org/gstreamer/" style="color: rgb(255,255,255);">GStreamer</a>, <a href="https://github.com/afcowie/java-gnome/issues" style="color: rgb(255,255,255);">java-gnome</a>, <a href="https://github.com/ldtp/ldtp2/issues" style="color: rgb(255,255,255);">LDTP</a>, <a href="https://gitlab.freedesktop.org/NetworkManager/NetworkManager/issues" style="color: rgb(255,255,255);">NetworkManager</a>, <a href="https://github.com/tomboy-notes/tomboy/issues" style="color: rgb(255,255,255);">Tomboy</a>.</div>
<script type="text/javascript">
<!--

//-->
</script>
<form action="process_bug.cgi" id="changeform" method="post" name="changeform">
<input name="delta_ts" type="hidden" value="2019-04-23 11:02:13"/>
<input name="longdesclength" type="hidden" value="46"/>
<input name="id" type="hidden" value="772726"/>
<input name="token" type="hidden" value="1626095134-yP2z1FnCKYtMMgtaSNmgiXL9TQ1G97zktSnngaIRBjM"/>
<div class="bz_alias_short_desc_container edit_form">
<a href="show_bug.cgi?id=772726"><b>Bug 772726</b></a> -<span class="bz_default_hidden" id="summary_alias_container"> 
        (<span id="alias_nonedit_display">CVE-2016-9318</span>) 
      <span id="short_desc_nonedit_display">XXE problems continue</span>
</span>
<div id="summary_alias_input">
<table id="summary">
<tr>
<td colspan="2">(CVE-2016-9318)
          </td>
</tr>
<tr><th class="field_label" id="field_label_short_desc">
<label accesskey="s" for="short_desc">
<a class="field_help_link" href="page.cgi?id=fields.html#short_desc" title="The bug summary is a short sentence which succinctly describes what the bug is about.">Summary:</a>
</label>
</th>
<td>XXE problems continue
          </td>
</tr>
</table>
</div>
</div>
<script type="text/javascript">
    hideAliasAndSummary('XXE problems continue', 'CVE-2016-9318');
  </script>
<table class="edit_form">
<tr>
<td class="bz_show_bug_column" id="bz_show_bug_column_1">
<table>
<tr>
<th class="field_label">
<a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
<td id="bz_field_status">
<span id="static_bug_status">RESOLVED
          FIXED
      </span>
</td>
</tr>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_product">
<a class="field_help_link" href="describecomponents.cgi" title="Bugs are categorised into Products and Components. Select a Classification to narrow down this list.">Product:</a>
</th>
<td class="field_value" id="field_container_product">libxml2</td>
</tr>
<tr class="bz_default_hidden"><th class="field_label" id="field_label_classification">
<a class="field_help_link" href="page.cgi?id=fields.html#classification" title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation.">Classification:</a>
</th>
<td class="field_value" id="field_container_classification">Platform</td>
</tr>
<tr><th class="field_label" id="field_label_component">
<a class="field_help_link" href="describecomponents.cgi?product=libxml2" title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list.">Component:</a>
</th>
<td class="field_value" id="field_container_component">general</td>
</tr>
<tr><th class="field_label" id="field_label_version">
<label for="version">
<a class="field_help_link" href="page.cgi?id=fields.html#version" title="The version field defines the version of the software the bug was found in.">Version:</a>
</label>
</th>
<td>git master
  </td>
</tr>
<tr><th class="field_label" id="field_label_rep_platform">
<label accesskey="h" for="rep_platform">
<a class="field_help_link" href="page.cgi?id=fields.html#rep_platform" title='The hardware platform the bug was observed on. Note: When searching, selecting the option "All" only finds bugs whose value for this field is literally the word "All".'>Hardware:</a>
</label>
</th>
<td class="field_value">Other
       All
      </td>
</tr>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr>
<th class="field_label">
<label accesskey="i" for="priority">
<a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
<td>High
       critical
      </td>
</tr>
<tr>
<th class="field_label">
<label for="target_milestone">
<a href="page.cgi?id=fields.html#target_milestone">
            Target Milestone</a></label>:
        </th><td>---
  </td>
</tr>
<tr>
<th class="field_label">
<a href="page.cgi?id=fields.html#assigned_to">Assigned To</a>:
      </th>
<td><span class="vcard"><span class="fn">Daniel Veillard</span>
</span>
</td>
</tr>
<tr><th class="field_label" id="field_label_qa_contact">
<label accesskey="q" for="qa_contact">
<a class="field_help_link" href="page.cgi?id=fields.html#qa_contact" title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved.">QA Contact:</a>
</label>
</th>
<td><span class="vcard"><span class="fn">libxml QA maintainers</span>
</span>
</td>
</tr>
<script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'daniel\x40veillard.com',
        'libxml-qa-maint\x40gnome.bugs');
    </script>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_bug_file_loc">
<label accesskey="u" for="bug_file_loc">
<a class="field_help_link" href="page.cgi?id=fields.html#bug_file_loc" title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen.">URL:</a>
</label>
</th>
<td>
<span id="bz_url_input_area">
</span>
</td>
</tr>
<tr><th class="field_label" id="field_label_status_whiteboard">
<label accesskey="w" for="status_whiteboard">
<a class="field_help_link" href="page.cgi?id=fields.html#status_whiteboard" title="Each bug has a free-form single line text entry box for adding tags and status information.">Whiteboard:</a>
</label>
</th><td colspan="2">CVE-2016-9318  
  </td>
</tr>

<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_dependson">
<a class="field_help_link" href="page.cgi?id=fields.html#dependson" title="The bugs listed here must be resolved before this bug can be resolved.">Depends on:</a>
</th>
<td>
<span id="dependson_input_area">
</span>
</td>
</tr>
<tr><th class="field_label" id="field_label_blocked">
<a class="field_help_link" href="page.cgi?id=fields.html#blocked" title="This bug must be resolved before the bugs listed in this field can be resolved.">Blocks:</a>
</th>
<td>
<span id="blocked_input_area">
</span>
</td>
</tr>
<tr>
<th> </th>

</tr>
</table>
</td>
<td>
<div class="bz_column_spacer"> </div>
</td>
<td class="bz_show_bug_column" id="bz_show_bug_column_2">
<table cellpadding="3" cellspacing="1">
<tr>
<th class="field_label">
      Reported:
    </th>
<td>2016-10-11 04:38 UTC by <span class="vcard"><span class="fn">Aleksey Sanin</span>
</span>
</td>
</tr>
<tr>
<th class="field_label">
      Modified:
    </th>
<td>2019-04-23 11:02 UTC 
    </td>
</tr>

<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_see_also">
<a class="field_help_link" href="page.cgi?id=fields.html#see_also" title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with a comma. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields.">See Also:</a>
</th>
<td class="field_value" id="field_container_see_also"><ul class="bug_urls">
<li><a href="https://github.com/sparklemotion/nokogiri/issues/1582">https://github.com/sparklemotion/nokogiri/issues/1582</a>
</li></ul></td>
</tr>
<tr><th class="field_label" id="field_label_cf_gnome_target">
<a class="field_help_link" href="page.cgi?id=fields.html#cf_gnome_target" title="A custom Drop Down field in this installation of GNOME Bugzilla.">GNOME target:</a>
</th>
<td class="field_value" colspan="2" id="field_container_cf_gnome_target">---</td>
</tr>
<tr><th class="field_label" id="field_label_cf_gnome_version">
<a class="field_help_link" href="page.cgi?id=fields.html#cf_gnome_version" title="A custom Drop Down field in this installation of GNOME Bugzilla.">GNOME version:</a>
</th>
<td class="field_value" colspan="2" id="field_container_cf_gnome_version">---</td>
</tr>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td colspan="3">
<hr id="bz_top_half_spacer"/>
</td>
</tr>
</table>
<table cellpadding="0" cellspacing="0" id="bz_big_form_parts"><tr>
<td>
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>
<br/>
<table cellpadding="4" cellspacing="0" id="attachment_table">
<tr id="a0">
<th align="left" colspan="3">
      Attachments
    </th>
</tr>
<tr class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden" id="a1">
<td valign="top">
<a href="attachment.cgi?id=341856" title="View the content of the attachment">
<b><span class="bz_obsolete">proposal for XML_PARSE_NOXXE</span></b></a>
<span class="bz_attach_extra_info">
              (6.60 KB,
                patch)

            <br/>
<a href="#attach_341856" title="Go to the comment associated with the attachment">2016-12-13 01:56 UTC</a>,

            <span class="vcard">dmoppert
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">none
          </td>
<td valign="top">
<a href="attachment.cgi?id=341856&amp;action=edit">Details</a>  |
    <a href="review?bug=772726&amp;attachment=341856">Review</a>
</td>
</tr>
<tr class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden" id="a2">
<td valign="top">
<a href="attachment.cgi?id=342521" title="View the content of the attachment">
<b><span class="bz_obsolete">proposal for XML_PARSE_NOXXE (updated)</span></b></a>
<span class="bz_attach_extra_info">
              (6.60 KB,
                patch)

            <br/>
<a href="#attach_342521" title="Go to the comment associated with the attachment">2016-12-28 06:58 UTC</a>,

            <span class="vcard">dmoppert
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">none
          </td>
<td valign="top">
<a href="attachment.cgi?id=342521&amp;action=edit">Details</a>  |
    <a href="review?bug=772726&amp;attachment=342521">Review</a>
</td>
</tr>
<tr class="bz_contenttype_text_plain bz_patch" id="a3">
<td valign="top">
<a href="attachment.cgi?id=350433" title="View the content of the attachment">
<b>proposal to fix ctxt-&gt;external and support XML_PARSE_NOXXE</b></a>
<span class="bz_attach_extra_info">
              (7.32 KB,
                patch)

            <br/>
<a href="#attach_350433" title="Go to the comment associated with the attachment">2017-04-26 06:02 UTC</a>,

            <span class="vcard">dmoppert
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">none
          </td>
<td valign="top">
<a href="attachment.cgi?id=350433&amp;action=edit">Details</a>  |
    <a href="review?bug=772726&amp;attachment=350433">Review</a>
</td>
</tr>
<tr class="bz_contenttype_application_x-compressed-tar" id="a4">
<td valign="top">
<a href="attachment.cgi?id=353798" title="View the content of the attachment">
<b>xxe test script</b></a>
<span class="bz_attach_extra_info">
              (2.45 KB,
                application/x-compressed-tar)

            <br/>
<a href="#attach_353798" title="Go to the comment associated with the attachment">2017-06-15 03:56 UTC</a>,

            <span class="vcard">dmoppert
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">
             
          </td>
<td valign="top">
<a href="attachment.cgi?id=353798&amp;action=edit">Details</a>
</td>
</tr>
<tr class="bz_contenttype_text_plain bz_patch" id="a5">
<td valign="top">
<a href="attachment.cgi?id=364995" title="View the content of the attachment">
<b>(partial) fix for the XXE</b></a>
<span class="bz_attach_extra_info">
              (389 bytes,
                patch)

            <br/>
<a href="#attach_364995" title="Go to the comment associated with the attachment">2017-12-05 05:31 UTC</a>,

            <span class="vcard"><span class="fn">Aleksey Sanin</span>
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">none
          </td>
<td valign="top">
<a href="attachment.cgi?id=364995&amp;action=edit">Details</a>  |
    <a href="review?bug=772726&amp;attachment=364995">Review</a>
</td>
</tr>

</table>
<br/>
</td>
<td>
</td>
</tr></table>
<div id="comments"><script src="js/comments.js" type="text/javascript">
</script>
<script type="text/javascript">
<!--
  /* Adds the reply text to the `comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>
<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table cellpadding="0" cellspacing="0" class="bz_comment_table"><tr>
<td>
<div class="bz_comment bz_first_comment" id="c0">
<div class="bz_first_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c0">Description</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Aleksey Sanin</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-10-11 04:38:21 UTC
        </span>
</div>
<pre class="bz_comment_text">Started as xmlsec bug <a href="https://github.com/lsh123/xmlsec/issues/43">https://github.com/lsh123/xmlsec/issues/43</a>

The external entity is loaded from here:

(gdb) where
</pre>
<p class="trace_link" title="See Full Trace">
<a class="trace_toggle_box" href="#" onclick="traceparser_toggle_trace(this, 236734); return false;" title="Expand/Collapse Trace">+</a>
<a href="page.cgi?id=traceparser/trace.html&amp;trace_id=236734">Trace
    236734</a></p>
<table border="0" cellpadding="0" cellspacing="0"><tr><td>
<div class="trace bz_default_hidden" id="trace_236734">
<ul class="frames">
<li class="frame">
<span class="frame_number">#0</span>
<span class="frame_function">xmlNewEntityInputStream__internal_alias</span>
<div class="frame_file_container">
                at <span class="frame_file">parserInternals.c</span>
                  line
                  <span class="frame_line">1422</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#1</span>
<span class="frame_function">xmlParserHandlePEReference__internal_alias</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">2670</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#2</span>
<span class="frame_function">xmlNextChar__internal_alias</span>
<div class="frame_file_container">
                at <span class="frame_file">parserInternals.c</span>
                  line
                  <span class="frame_line">545</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#3</span>
<span class="frame_function">xmlSkipBlankChars__internal_alias</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">2173</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#4</span>
<span class="frame_function">xmlParseInternalSubset</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">8472</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#5</span>
<span class="frame_function">xmlParseDocument__internal_alias</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">10921</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#6</span>
<span class="frame_function">xmlSecParseFile</span>
<div class="frame_file_container">
                at <span class="frame_file">parser.c</span>
                  line
                  <span class="frame_line">423</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#7</span>
<span class="frame_function">xmlSecAppXmlDataCreate</span>
<div class="frame_file_container">
                at <span class="frame_file">xmlsec.c</span>
                  line
                  <span class="frame_line">2270</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#8</span>
<span class="frame_function">xmlSecAppVerifyFile</span>
<div class="frame_file_container">
                at <span class="frame_file">xmlsec.c</span>
                  line
                  <span class="frame_line">1203</span>
</div>
</li>
<li class="frame">
<span class="frame_number">#9</span>
<span class="frame_function">main</span>
<div class="frame_file_container">
                at <span class="frame_file">xmlsec.c</span>
                  line
                  <span class="frame_line">1046</span>
</div>
</li>
</ul>
</div>
</td></tr></table>
<pre class="bz_comment_text">


There is a check in xmlParserHandlePEReference() that tries to handle this condition:

                    if ((entity-&gt;etype == XML_EXTERNAL_PARAMETER_ENTITY) &amp;&amp;
                        ((ctxt-&gt;options &amp; XML_PARSE_NOENT) == 0) &amp;&amp;
                        ((ctxt-&gt;options &amp; XML_PARSE_DTDVALID) == 0) &amp;&amp;
                        ((ctxt-&gt;options &amp; XML_PARSE_DTDLOAD) == 0) &amp;&amp;
                        ((ctxt-&gt;options &amp; XML_PARSE_DTDATTR) == 0) &amp;&amp;
                        (ctxt-&gt;replaceEntities == 0) &amp;&amp;
                        (ctxt-&gt;validate == 0))
                        return;

But I think it is too restrictive and it should be changed to something simpler like 

<a href="https://git.gnome.org/browse/libxml2/commit/?id=b1d34de46a11323fccffa9fadeb33be670d602f5">https://git.gnome.org/browse/libxml2/commit/?id=b1d34de46a11323fccffa9fadeb33be670d602f5</a>
<a href="https://git.gnome.org/browse/libxml2/commit/?id=4629ee02ac649c27f9c0cf98ba017c6b5526070f">https://git.gnome.org/browse/libxml2/commit/?id=4629ee02ac649c27f9c0cf98ba017c6b5526070f</a></pre>
</div><div class="bz_comment" id="c1">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c1">Comment 1</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Aleksey Sanin</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-10-11 05:14:30 UTC
        </span>
</div>
<pre class="bz_comment_text">The following patch fixes the issue, however there might be other similar problems worth an audit. \

diff --git a/parserInternals.c b/parserInternals.c
index bfc778a..bade1f3 100644
--- a/parserInternals.c
+++ b/parserInternals.c
@@ -1438,6 +1438,11 @@ xmlNewEntityInputStream(xmlParserCtxtPtr ctxt, xmlEntityPtr entity) {
                 break;
             case XML_EXTERNAL_GENERAL_PARSED_ENTITY:
             case XML_EXTERNAL_PARAMETER_ENTITY:
+                if (((ctxt-&gt;options &amp; XML_PARSE_NOENT) == 0) &amp;&amp;
+                    ((ctxt-&gt;options &amp; XML_PARSE_DTDVALID) == 0)) {
+                    xmlErrInternal(ctxt, "xmlNewEntityInputStream will not read content for external entity\n",
+                                   NULL);
+                }
                return(xmlLoadExternalEntity((char *) entity-&gt;URI,
                       (char *) entity-&gt;ExternalID, ctxt));
             case XML_INTERNAL_GENERAL_ENTITY:</pre>
</div><div class="bz_comment" id="c2">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c2">Comment 2</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Daniel Veillard</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-10-11 06:57:25 UTC
        </span>
</div>
<pre class="bz_comment_text">Hum, the patch is just trying to address the problem at another layer.
But I don't understand why the existing test is not catching it,
it seems to imply that within xmlsec1 context we have either
XML_PARSE_DTDLOAD or XML_PARSE_DTDATTR or ctxt-&gt;replaceEntities
or ctxt-&gt;validate. All of them asks for loading of DTDs and then
fetching the external subset.
 I wonder if we aren't activating XML_PARSE_DTDATTR to have the
defaulted attributes from the DTD included in the canonical form,
in which case I don't see how we could both prevent fetching external
subset and be compliant with the spec. I think it's worth investigating
because that mean the patch leads to a regression from an XML Sec POV.

  Could you clarify ?

    thanks,

Daniel</pre>
</div><div class="bz_comment" id="c3">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c3">Comment 3</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Aleksey Sanin</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-10-11 17:07:23 UTC
        </span>
</div>
<pre class="bz_comment_text">The problem is also reproducible with xmllint. Thinking more about it, I think it is a valid scenario where one might want to parse the document, validate it, etc. but do not allow the parser to read any local or network files. I think the current patches (see the links in my first comment) are trying to guess the case when local/network access should be disabled based on other flags. I think it might be better to have an explicit (default?) flag that limits parser to only process the current file/memory block. What do you think?</pre>
</div><div class="bz_comment" id="c4">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c4">Comment 4</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Matias Brutti</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-10-11 18:22:11 UTC
        </span>
</div>
<pre class="bz_comment_text">Daniel &amp; Aleksey, I am the author of the bug reported to xmlsec1. I think the best path here is to make it secure by default and have an optional flag or method that allows the developer enable those whenever necessary, but the default behavior should be NOT to parse them.</pre>
</div><div class="bz_comment" id="c5">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c5">Comment 5</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Matias Brutti</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-10-31 19:26:15 UTC
        </span>
</div>
<pre class="bz_comment_text">Has there been any update / decision on this bug ? Also, what is the process for requesting a CVE for this vulnerability ?</pre>
</div><div class="bz_comment" id="c6">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c6">Comment 6</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Matthew Valdes</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-11-10 19:51:44 UTC
        </span>
</div>
<pre class="bz_comment_text">Matias, please request a CVE through <a href="https://cve.mitre.org/cve/request_id.html">https://cve.mitre.org/cve/request_id.html</a> 

According to the following, it appears that XXE was thought to be disabled by default.

<a href="https://mail.gnome.org/archives/xml/2012-October/msg00045.html">https://mail.gnome.org/archives/xml/2012-October/msg00045.html</a> <a href="http://git.gnome.org/browse/libxml2/commit/?id=4629ee02ac649c27f9c0cf98ba017c6b5526070f">http://git.gnome.org/browse/libxml2/commit/?id=4629ee02ac649c27f9c0cf98ba017c6b5526070f</a>.</pre>
</div><div class="bz_comment" id="c7">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c7">Comment 7</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Matias Brutti</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-11-11 17:31:17 UTC
        </span>
</div>
<pre class="bz_comment_text">Matthew, I requested it yesterday. CVE Request 261315. I will update the ticket with a proper CVE ID once I have one.</pre>
</div><div class="bz_comment" id="c8">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c8">Comment 8</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Matias Brutti</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-11-15 16:47:29 UTC
        </span>
</div>
<pre class="bz_comment_text">The CVE ID for this vuln is CVE-2016-9318</pre>
</div><div class="bz_comment" id="c9">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c9">Comment 9</a>
</span>
<span class="bz_comment_user">
<span class="vcard">dmoppert
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-11-28 02:41:40 UTC
        </span>
</div>
<pre class="bz_comment_text">There seem to be some misunderstandings around this issue.  The way I understand the upstream xmlsec ticket, the problem here is external entity expansion specifically with respect to parameter entities - similar to CVE-2014-0191.  I believe the code referenced in <a href="show_bug.cgi?id=772726#c0">comment #0</a> was originally introduced to address this CVE.

To reproduce the problem described @ xmlsec with xmllint, I need to use the --postvalid option.  With --postvalid, all the original CVE-2014-0191 reproducers are triggered, indicating that DTD validation does not correctly respect XML_PARSE_NOENT.

The patch in <a href="show_bug.cgi?id=772726#c1">comment 1</a> does NOT change this behaviour.

I think the identified block in parser.c:xmlParserHandlePEReference() should begin:

    // refuse to expand any entities if NOENT is not provided
    // this is the same behaviour as expected for normal entities
    if ((ctxt-&gt;options &amp; XML_PARSE_NOENT) == 0))
        return;

With this change:
  - `xmllint --postvalid` no longer loads external parameter entities
  - `xmllint --noent --nonet --postvalid` no longer loads external parameter entities from HTTP URLs, but it does load them from the filesystem


I don't really understand the rest of the flags, but I'm tempted to guess they should be joined with || instead of &amp;&amp; in the test that's currently there.  That seems to make sense from my limited knowledge, except DTDATTR - I have no idea what that is doing here.

                    if ((entity-&gt;etype == XML_EXTERNAL_PARAMETER_ENTITY) &amp;&amp; (
                          ((ctxt-&gt;options &amp; XML_PARSE_NOENT) == 0) ||
                          ((ctxt-&gt;options &amp; XML_PARSE_DTDVALID) == 0) ||
                          ((ctxt-&gt;options &amp; XML_PARSE_DTDLOAD) == 0) ||
                          ((ctxt-&gt;options &amp; XML_PARSE_DTDATTR) == 0) ||
                          (ctxt-&gt;replaceEntities == 0) ||
                          (ctxt-&gt;validate == 0)))
                        return;


I agree that a flag similar to NONET which disables fetching *all* external resources is a good idea.  This could be handled simply in xmlIO.c, prior to the XML_PARSE_NONET test.  That probably belongs on another ticket as RFE - getting NOENT honoured for parameter entities would be a good outcome for this one.</pre>
</div><div class="bz_comment" id="c10">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c10">Comment 10</a>
</span>
<span class="bz_comment_user">
<span class="vcard">dmoppert
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-11-28 03:00:23 UTC
        </span>
</div>
<pre class="bz_comment_text">To summarise my previous comment briefly, I think there are two bugs at play here:

#1:  XML_PARSE_NOENT=0 is not honoured for parameter entities when validating DTD

#2:  no means are provided to prevent expanding file-based entities, as XML_PARSE_NOENT=1 does for network-based entities</pre>
</div><div class="bz_comment" id="c11">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c11">Comment 11</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Daniel Veillard</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-11-28 10:52:30 UTC
        </span>
</div>
<pre class="bz_comment_text">--postvalid of xmllint requires loading the DTD and hence is incompatible
with --noent and equivalent, that's a fact of XML validation definition.

Think about it, you ask to validate against the DTD after parsing but you
ask to not load the DTD, entities are defined in the DTD.

To validate with the DTD you *MUST* load entities, so 1 is obvious at
least if understanding XML.
XML_PARSE_NOENT is about all entities, local, remote alike.

 W.r.t. patch
   "`xmllint --postvalid` no longer loads external parameter entities"
  then that's broken. If you ask to validate you must load the entities
parameter or general ones.

   

Daniel</pre>
</div><div class="bz_comment" id="c12">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c12">Comment 12</a>
</span>
<span class="bz_comment_user">
<span class="vcard">dmoppert
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-11-29 01:07:50 UTC
        </span>
</div>
<pre class="bz_comment_text"><span class="quote">&gt; To validate with the DTD you *MUST* load entities</span>

You're absolutely right - my point #1 didn't make any sense.  Sorry for the noise.

In reference to #2 (and <a href="show_bug.cgi?id=772726#c3">comment 3</a>), is there a recommended way for clients to limit or disallow what external files can be opened?  A flag to altogether disable file-based entities might be too blunt for tools that need (for instance) to validate against a local store of DTDs.  If there's a way to control this in the existing API, xmlsec and other tools could surely benefit from it.</pre>
</div><div class="bz_comment" id="c13">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c13">Comment 13</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Aleksey Sanin</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-11-29 02:27:40 UTC
        </span>
</div>
<pre class="bz_comment_text"><span class="quote">&gt; To validate with the DTD you *MUST* load entities</span>

Correct, however for security reasons I might want to ONLY allow embedded references. I.e. for an XML file received from the user I don't want it to try to read files on local filesystem or remotely over the network. Of course, if external entities are present (and loading of remote entities is disabled) then this should result in an error.</pre>
</div><div class="bz_comment" id="c14">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c14">Comment 14</a>
</span>
<span class="bz_comment_user">
<span class="vcard">dmoppert
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-12-01 07:03:41 UTC
        </span>
</div>
<pre class="bz_comment_text">I have been looking for ways within the existing API to support the mode suggested in this ticket:  parsing a document (and optionally validating internal DTD) with entities being expanded, but forbidding the loading of any external entities, whether file-based or network-based.  My prototype adds a flag XML_PARSE_NOXXE, exposed via `xmllint --noxxe` for basic testing.

xmlSetExternalEntityLoader() looks like the right choice:  this is how XML_PARSE_NONET does its magic, so providing a similar function xmlNoXxeExternalEntityLoader() seems the right way to limit what external URIs libxml2 will open.  But I'm running into some difficulties; I hope you can provide some advice on how best to proceed (or if there's an altogether better approach).

The trouble I'm encountering is that xmlLoadExternalEntity() is used within xmlCreateURLParserCtxt(), setting up the parser for the initial document.  I want to allow this call, but forbid (by raising an error a la xmlNoNetExternalEntityHandler) calls that are actually for external entities.

Examining the ctxt structure in breakpoints, I can't see a field that confidently provides this information.  ctxt-&gt;external sounds right, but this is undermined by xmlParseExternalEntityPrivate() doing `ctxt-&gt;external = oldctxt-&gt;external`.  

Questions:

#1 - does my approach seem sound?

#2 - is ctxt-&gt;external intended to give the information I want?  Patching xmlParseExternalEntityPrivate() doesn't seem to immediately cause any regressions, but I'm not sure this is right - and if it is, whether it should be set to 1 or 2.

#3 - if not ctxt-&gt;external, is there something else in ctxt that can be checked?   input_id is tempting, but I don't know if contexts can be re-used.

#4 - how should ExternalEntityHandler functions deal with ctxt==NULL?  I started by returning NULL after the pattern established in other functions, but ran into some errors in the Python test suite.


If I'm on the right track and can get some guidance on the above questions, I should be able to attach a working patch in the next few days and start working on proper test coverage.

Thanks!</pre>
</div><div class="bz_comment" id="c15">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c15">Comment 15</a>
</span>
<span class="bz_comment_user">
<span class="vcard">dmoppert
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-12-13 01:56:19 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=341856" name="attach_341856" title="proposal for XML_PARSE_NOXXE">attachment 341856</a> <a href="attachment.cgi?id=341856&amp;action=edit" title="proposal for XML_PARSE_NOXXE">[details]</a></span> <a href="review?bug=772726&amp;attachment=341856">[review]</a>
proposal for XML_PARSE_NOXXE

Attached a proposed patch that uses (ctxt-&gt;input_id != 1) to determine whether an external reference is being resolved.  I'm not convinced this is the right approach, but (ctxt-&gt;external) did not give the results I expected.

Internally, this adds a flag XML_PARSE_NOXXE, exposed via xmllint as "-noxxe".  No regressions in the existing test suite, and passes my ad-hoc tests for XXE using xmllint.

Note that the patch doesn't depend on any libxml2 internals, so the same approach could be used by downstream projects like xmlsec without waiting on a new release of libxml2.  Assuming it's correct, or can be made so.</pre>
</div><div class="bz_comment" id="c16">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c16">Comment 16</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Gengxiang Meng</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-12-27 05:18:41 UTC
        </span>
</div>
<pre class="bz_comment_text">I check the solution and have one confusion, the change in libxml/libxml2-2.9.4/xmlIO.c:

+        if (options &amp; XML_PARSE_NOXXE) {
+            ctxt-&gt;options -= XML_PARSE_NOXXE;
+            ret = xmlNoNetExternalEntityLoader(URL, ID, ctxt);
+            ctxt-&gt;options = options;
+            return(ret);
+        }
+ 

should be change to:

+        if (options &amp; XML_PARSE_NOXXE) {
+            ctxt-&gt;options -= XML_PARSE_NOXXE;
+            ret = xmlNoXxeExternalEntityLoader(URL, ID, ctxt);
+            ctxt-&gt;options = options;
+            return(ret);
+        }
+ 

Not sure, let me know if I am wrong, many thanks.</pre>
</div><div class="bz_comment" id="c17">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c17">Comment 17</a>
</span>
<span class="bz_comment_user">
<span class="vcard">dmoppert
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2016-12-28 06:58:28 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=342521" name="attach_342521" title="proposal for XML_PARSE_NOXXE (updated)">attachment 342521</a> <a href="attachment.cgi?id=342521&amp;action=edit" title="proposal for XML_PARSE_NOXXE (updated)">[details]</a></span> <a href="review?bug=772726&amp;attachment=342521">[review]</a>
proposal for XML_PARSE_NOXXE (updated)

Gengxian Meng,

You are right - thanks for picking that up.  The XML_PARSE_NOXXE block should be calling xmlNoXxeExternalEntityLoader, not xmlNoNet...

Updated patch attached.</pre>
</div><div class="bz_comment" id="c18">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c18">Comment 18</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Daniel Veillard</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-04-07 14:57:16 UTC
        </span>
</div>
<pre class="bz_comment_text">Okay, reviewed the patch ... finally.
It's always a risk to add one more parsing option but in that case fine.
I checked the patch, changed a couple of cosmetic things extra tag and
comments as this is not entitie substittion we are forbidding but more drastically entity loading.

Commited as
<a href="https://git.gnome.org/browse/libxml2/commit/?id=2304078555896cf1638c628f50326aeef6f0e0d0">https://git.gnome.org/browse/libxml2/commit/?id=2304078555896cf1638c628f50326aeef6f0e0d0</a>

  thanks !

Daniel</pre>
</div><div class="bz_comment" id="c19">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c19">Comment 19</a>
</span>
<span class="bz_comment_user">
<span class="vcard">storysoft
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-04-13 00:49:37 UTC
        </span>
</div>
<pre class="bz_comment_text">Did you reproduce the error?</pre>
</div><div class="bz_comment" id="c20">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c20">Comment 20</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Nick Wellnhofer</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-04-20 14:31:15 UTC
        </span>
</div>
<pre class="bz_comment_text">What about this unrelated change to xmlNoNetExternalEntityLoader?

@@ -4160,6 +4170,13 @@ xmlNoNetExternalEntityLoader(const char *URL, const char *ID,
     xmlParserInputPtr input = NULL;
     xmlChar *resource = NULL;
 
+    if (ctxt == NULL) {
+        return(NULL);
+    }
+    if (ctxt-&gt;input_id == 1) {
+        return xmlDefaultExternalEntityLoader((const char *) URL, ID, ctxt);
+    }
+
 #ifdef LIBXML_CATALOG_ENABLED
     resource = xmlResolveResourceFromCatalog(URL, ID, ctxt);
 #endif

It seems to me that this allows to load the initial document over the network even if XML_PARSE_NONET was supplied. Also, xmlNoXxeExternalEntityLoader seems to allow loading a document over network if both XML_PARSE_NONET and XML_PARSE_NOXXE were supplied.</pre>
</div><div class="bz_comment" id="c21">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c21">Comment 21</a>
</span>
<span class="bz_comment_user">
<span class="vcard">dmoppert
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-04-26 05:58:14 UTC
        </span>
</div>
<pre class="bz_comment_text">Argh.  Having put it through a thorough test suite, it looks like this patch is a mess.  It doesn't work as advertised, and causes a regression:

I don't get the (In reply to Nick Wellnhofer from <a href="show_bug.cgi?id=772726#c20">comment #20</a>)
<span class="quote">&gt; What about this unrelated change to xmlNoNetExternalEntityLoader?</span>

That should not have been present - you are right, it's a change in behaviour as you describe:

<span class="quote">&gt; allows to load the initial document over the network even if XML_PARSE_NONET was supplied.</span>

<span class="quote">&gt; Also, xmlNoXxeExternalEntityLoader seems to allow loading a document over
&gt; network if both XML_PARSE_NONET and XML_PARSE_NOXXE were supplied.</span>

I don't understand this claim?  In my testing that is not the case; the relevant code is in xmlDefaultExternalEntityLoader which checks NOXXE before NONET.  I believe this is correct (specifying both, the more restrictive NOXXE will take precedence).

Updated patch and test script coming ..</pre>
</div><div class="bz_comment" id="c22">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c22">Comment 22</a>
</span>
<span class="bz_comment_user">
<span class="vcard">dmoppert
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-04-26 06:02:14 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=350433" name="attach_350433" title="proposal to fix ctxt-&gt;external and support XML_PARSE_NOXXE">attachment 350433</a> <a href="attachment.cgi?id=350433&amp;action=edit" title="proposal to fix ctxt-&gt;external and support XML_PARSE_NOXXE">[details]</a></span> <a href="review?bug=772726&amp;attachment=350433">[review]</a>
proposal to fix ctxt-&gt;external and support XML_PARSE_NOXXE

This patch is similar to <span class="bz_obsolete"><a href="attachment.cgi?id=342521" name="attach_342521" title="proposal for XML_PARSE_NOXXE (updated)">attachment 342521</a> <a href="attachment.cgi?id=342521&amp;action=edit" title="proposal for XML_PARSE_NOXXE (updated)">[details]</a></span> <a href="review?bug=772726&amp;attachment=342521">[review]</a>, but it uses ctxt-&gt;external as that appears to be what it is designed for (input_nr is not reliable for this purpose).

To use ctxt-&gt;external, this flag needs to be set correctly in xmlCreateEntityParserCtxtInternal and not copied from the parent context in xmlParseExternalEntityPrivate.

Unrelated changes to xmlNoNetExternalEntityLoader have been removed.</pre>
</div><div class="bz_comment" id="c23">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c23">Comment 23</a>
</span>
<span class="bz_comment_user">
<span class="vcard">dmoppert
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-04-26 06:11:38 UTC
        </span>
</div>
<pre class="bz_comment_text">I'd like to add the test cases + runner as a private attachment, at least until a proper patch is merged.  In the meantime, libxml2 developers can contact me directly.

Test cases consist of 6 xml files run through xmllint with 16 combinations of flags, expecting particular outcomes for each run (external entity loaded or not loaded).  With <span class=""><a href="attachment.cgi?id=350433" name="attach_350433" title="proposal to fix ctxt-&gt;external and support XML_PARSE_NOXXE">attachment 350433</a> <a href="attachment.cgi?id=350433&amp;action=edit" title="proposal to fix ctxt-&gt;external and support XML_PARSE_NOXXE">[details]</a></span> <a href="review?bug=772726&amp;attachment=350433">[review]</a>, behaviour for existing flags is consistent with previous builds and the new `--noxxe` flag stops XXE in all cases.

Advice on how to integrate such tests into the libxml2 `make check` test suite would also be appreciated - that's where they ultimately belong, but a Tcl script probably isn't the ideal way to package them.</pre>
</div><div class="bz_comment" id="c24">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c24">Comment 24</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">David Kilzer</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-05-30 23:04:19 UTC
        </span>
</div>
<pre class="bz_comment_text">Reopening this bug since <span class=""><a href="attachment.cgi?id=350433" name="attach_350433" title="proposal to fix ctxt-&gt;external and support XML_PARSE_NOXXE">Attachment 350433</a> <a href="attachment.cgi?id=350433&amp;action=edit" title="proposal to fix ctxt-&gt;external and support XML_PARSE_NOXXE">[details]</a></span> needs review and landing.  Also marking the bug as security once again.

To add the tests to `make check`, you'll need to update runtest.c (or one of the other 5 test tools:  runxmlconf, testapi, testchar, testdict, testrecurse) to add the test mode.  I suspect runtest.c will be the closest match.

I did a similar thing in <a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=776895" title='RESOLVED OBSOLETE - Add "Schemas streaming regression tests" to runtest in libxml2'>Bug 776895</a> (patch to be posted soon) where I added `make Schemastests` for `make tests`, and added support to runtest.c for "Schemas streaming regression tests" that did the same thing.

I'm actually not sure what the future direction of `make check` vs. `make tests` is, so I added it to both.

What I really want is a test mode where I can run the test case through xmllint, but specify the command-line switches to use in the test (or in a metadata file in the test directory).  Then we don't have to add all these single-mode test directories (even though some are very useful).</pre>
</div><div class="bz_comment" id="c25">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c25">Comment 25</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Nick Wellnhofer</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-06-05 21:41:55 UTC
        </span>
</div>
<pre class="bz_comment_text">Maybe it makes more sense to tackle this at the parser level, not at the IO level. If XML_PARSE_NOXXE is set, the parser could simply refuse to call xmlLoadExternalEntity.</pre>
</div><div class="bz_comment" id="c26">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c26">Comment 26</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Daniel Veillard</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-06-08 20:31:51 UTC
        </span>
</div>
<pre class="bz_comment_text">That might be the simplest indeed ! 

Daniel</pre>
</div><div class="bz_comment" id="c27">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c27">Comment 27</a>
</span>
<span class="bz_comment_user">
<span class="vcard">dmoppert
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-06-15 03:56:20 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=353798" name="attach_353798" title="xxe test script">attachment 353798</a> <a href="attachment.cgi?id=353798&amp;action=edit" title="xxe test script">[details]</a></span>
xxe test script</pre>
</div><div class="bz_comment" id="c28">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c28">Comment 28</a>
</span>
<span class="bz_comment_user">
<span class="vcard">dmoppert
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-06-15 04:17:23 UTC
        </span>
</div>
<pre class="bz_comment_text">(ad-hoc, not integrated) Test script attached above.  Note that my most recent attempt at a patch still fails - I inverted the logic around using ctxt-&gt;external, causing xmllint to reject opening the initial file.  I expanded the test to also serve the input through a FIFO so each test can ensure that is read.

One problem I have struck is that xmlLoadExternalEntity() is called by xmlCreateURLParserCtxt() from xmlReadFile() to load the initial document.  This flailing about with ctxt fields has been trying to find a way to identify when xLEE() is being called for an actual external entity or not, but so far my attempts have gone awry.</pre>
</div><div class="bz_comment" id="c29">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c29">Comment 29</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Nick Wellnhofer</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-06-15 11:14:24 UTC
        </span>
</div>
<pre class="bz_comment_text"><span class="quote">&gt; This flailing about with ctxt fields has been trying to find a way to identify when xLEE() is being called for an actual external entity or not, but so far my attempts have gone awry.</span>

I simply don't see a way to do that without additional changes. ctxt-&gt;input_id doesn't work because some external entites are loaded with a fresh parser context, others are not. The fresh parser context is indistinguishable from the context used to load the initial document.</pre>
</div><div class="bz_comment" id="c30">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c30">Comment 30</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Aleksey Sanin</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-05 05:31:14 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=364995" name="attach_364995" title="(partial) fix for the XXE">attachment 364995</a> <a href="attachment.cgi?id=364995&amp;action=edit" title="(partial) fix for the XXE">[details]</a></span> <a href="review?bug=772726&amp;attachment=364995">[review]</a>
(partial) fix for the XXE

This solves at least part of the problems.</pre>
</div><div class="bz_comment" id="c31">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c31">Comment 31</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Nikita Nirbhavane</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-05 06:12:34 UTC
        </span>
</div>
<pre class="bz_comment_text">Hi Aleksey,

That's great. This solves partial problems. When can we expect a complete fix for the vulnerability?</pre>
</div><div class="bz_comment" id="c32">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c32">Comment 32</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Nick Wellnhofer</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-05 10:48:17 UTC
        </span>
</div>
<pre class="bz_comment_text">This isn't really a vulnerability. libxml2 only loads external entities if the user requests to substitute entities or to validate a document. In this case libxml2 has always given the user full control over which external entities are loaded. This bug is only about making it easier to completely suppress loading of external entities.</pre>
</div><div class="bz_comment" id="c33">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c33">Comment 33</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Daniel Veillard</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-08 08:47:34 UTC
        </span>
</div>
<pre class="bz_comment_text">Okay, I checked through the code where one would create sub-parsers of
existing parser or parsing outside the context of a normal parsing
framework. I found a few other places where input_id ought to be increased
or set higher than 1. Note that this wasn't used for entity snowballing
detection but to make sure things like opening/closing constructs where
happening in the same entity. That said not it should be usable in
a reliable way for your purpose (Famous Last Words &lt;grin/&gt;)

Commited as
  <a href="https://git.gnome.org/browse/libxml2/commit/?id=ad88b54f1a28a8565964a370b5d387927b633c0d">https://git.gnome.org/browse/libxml2/commit/?id=ad88b54f1a28a8565964a370b5d387927b633c0d</a>

Aleksey, please give it a try, then I may try to push this month release !

  thanks,

Daniel</pre>
</div><div class="bz_comment" id="c34">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c34">Comment 34</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Aleksey Sanin</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-08 15:33:31 UTC
        </span>
</div>
<pre class="bz_comment_text">I just tried and all the test cases I know about are covered. Do you know about any other places where we create parsing context?</pre>
</div><div class="bz_comment" id="c35">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c35">Comment 35</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Nikunj Mavani</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2018-05-22 08:24:52 UTC
        </span>
</div>
<pre class="bz_comment_text">As we are waiting for the fix of this CVE from quite a while, when can we expect a complete fix?</pre>
</div><div class="bz_comment" id="c36">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c36">Comment 36</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Daniel Veillard</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2018-05-23 13:40:13 UTC
        </span>
</div>
<pre class="bz_comment_text">The fix is commited in git, it was pushed in last release, there is no information that anything more is needed, with current reelease, if not
please post the problem here,

  thanks,

Daniel</pre>
</div><div class="bz_comment" id="c37">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c37">Comment 37</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Nikunj Mavani</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2018-05-24 09:11:22 UTC
        </span>
</div>
<pre class="bz_comment_text">Hi Denial,

Are we getting complete fix of vulnerabilities of the CVE in libxml2-2.9.8?

If yes, why this bug status is "Reopened"?

Thanks,
Nikunj Mavani</pre>
</div><div class="bz_comment" id="c38">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c38">Comment 38</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Nikunj Mavani</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2018-05-31 07:18:40 UTC
        </span>
</div>
<pre class="bz_comment_text">Hi Denial,

Could you please revert to the queries mentioned in <a href="show_bug.cgi?id=772726#c37">comment#37</a>?

Thanks,
Nikunj</pre>
</div><div class="bz_comment" id="c39">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c39">Comment 39</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Nikunj Mavani</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2018-06-14 08:30:27 UTC
        </span>
</div>
<pre class="bz_comment_text">Could you please revert to the queries mentioned in <a href="show_bug.cgi?id=772726#c37">comment#37</a>?

Thanks,
Nikunj</pre>
</div><div class="bz_comment" id="c40">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c40">Comment 40</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Tobias Mueller</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2018-08-17 15:34:27 UTC
        </span>
</div>
<pre class="bz_comment_text">Okay, this seems to be resolved indeed.  Please reopen if this continues to be a problem.</pre>
</div><div class="bz_comment" id="c41">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c41">Comment 41</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">tanaya patil</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2018-11-26 10:28:59 UTC
        </span>
</div>
<pre class="bz_comment_text">Can anyone please specify the version in which this issue is fixed or mention it in the "target milestone" field?</pre>
</div><div class="bz_comment" id="c42">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c42">Comment 42</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">David Kilzer</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2018-11-26 18:36:31 UTC
        </span>
</div>
<pre class="bz_comment_text">$ git tag --contains ad88b54f1a28a8565964a370b5d387927b633c0d
v2.9.8
v2.9.8-rc1</pre>
</div><div class="bz_comment" id="c43">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c43">Comment 43</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">tanaya patil</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2018-12-05 06:58:24 UTC
        </span>
</div>
<pre class="bz_comment_text">Would like to know if building libxml2 v2.9.8 is dependent on some gcc version.
error while building:
  CC       SAX.lo
cc1: error: unrecognized command line option "-Wno-array-bounds"
make[2]: *** [SAX.lo] Error 1


gcc version used: gcc 4.2


if it is dependent on gcc version, can there be a workaround to make this work? as upgrading gcc is not a feasible choice for me.</pre>
</div><div class="bz_comment" id="c44">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c44">Comment 44</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Ravi Sarda</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2019-04-23 11:00:37 UTC
        </span>
</div>
<pre class="bz_comment_text">I am facing the same issue as mentioned in <a href="show_bug.cgi?id=772726#c43">Comment 43</a> any suggestion or workaround?</pre>
</div><div class="bz_comment" id="c45">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=772726#c45">Comment 45</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Ravi Sarda</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2019-04-23 11:02:13 UTC
        </span>
</div>
<pre class="bz_comment_text">will removing the flag help?

<a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=422741">https://bugs.eclipse.org/bugs/show_bug.cgi?id=422741</a></pre>
</div>
<script type="text/javascript">
  function traceparser_toggle_trace(link, trace_id) {
    var trace = document.getElementById('trace_' + trace_id);
    bz_toggleClass(trace, 'bz_default_hidden');
    if (link.innerHTML == '+') { link.innerHTML = '&mdash;'; }
    else { link.innerHTML = '+'; }
  }
</script>
</td>
<td>
</td>
</tr></table>
</div>
<hr/>
</form>
<hr/>

<br/>
</div>
<div id="footer">
<div class="intro"></div>
<ul id="useful-links">
<li id="links-actions"><ul class="links">
<li><a href="./">Home</a></li>
<li><span class="separator">| </span><span style="text-decoration:line-through"><a href="">New</a></span></li>
<li><span class="separator">| </span><a href="page.cgi?id=browse.html&amp;product=libxml2">Browse</a></li>
<li><span class="separator">| </span><a href="query.cgi">Search</a></li>
<li class="form">
<span class="separator">| </span>
<form action="buglist.cgi" method="get" onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
<input id="no_redirect_bottom" name="no_redirect" type="hidden" value="0"/>
<script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
<input class="txt" id="quicksearch_bottom" name="quicksearch" title="Quick Search" type="text" value=""/>
<input class="btn" id="find_bottom" type="submit" value="Search"/></form>
<a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>
<li><span class="separator">| </span><a href="page.cgi?id=reports.html">Reports</a></li>
<li>
<span class="separator">| </span>
<a href="http://www.bugzilla.org/docs/4.4/en/html/bug_page.html" target="_blank">Help</a>
</li>
<li id="mini_login_container_bottom">
<span class="separator">| </span>
<a href="show_bug.cgi?id=772726&amp;GoAheadAndLogIn=1" id="login_link_bottom" onclick="return show_mini_login_form('_bottom')">Log In</a>
<form action="show_bug.cgi?id=772726" class="mini_login bz_default_hidden" id="mini_login_bottom" method="POST" onsubmit="return check_mini_login_fields( '_bottom' );">
<input class="bz_login" id="Bugzilla_login_bottom" name="Bugzilla_login" onfocus="mini_login_on_focus('_bottom')" title="Login"/>
<input class="bz_password" id="Bugzilla_password_bottom" name="Bugzilla_password" title="Password" type="password"/>
<input class="bz_password bz_default_hidden bz_mini_login_help" id="Bugzilla_password_dummy_bottom" onfocus="mini_login_on_focus('_bottom')" title="Password" type="text" value="password"/>
<input checked="" class="bz_remember" id="Bugzilla_remember_bottom" name="Bugzilla_remember" type="checkbox" value="on"/>
<label for="Bugzilla_remember_bottom">Remember</label>
<input name="Bugzilla_login_token" type="hidden" value=""/>
<input id="log_in_bottom" name="GoAheadAndLogIn" type="submit" value="Log in"/>
<script type="text/javascript">
      mini_login_constants = {
          "login" : "login",
          "warning" : "You must set the login and password before logging in."
      };
      
      if (YAHOO.env.ua.gecko || YAHOO.env.ua.ie || YAHOO.env.ua.opera) {
          YAHOO.util.Event.onDOMReady(function() {
              init_mini_login_form('_bottom');
          });
      }
      else {
          YAHOO.util.Event.on(window, 'load', function () {
              window.setTimeout(function() {
                  init_mini_login_form('_bottom');
              }, 200);
          });
    }
    </script>
<a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
</form>
</li>
<li id="forgot_container_bottom">
<span class="separator">| </span>
<a href="show_bug.cgi?id=772726&amp;GoAheadAndLogIn=1#forgot" id="forgot_link_bottom" onclick="return show_forgot_form('_bottom')">Forgot Password</a>
<form action="token.cgi" class="mini_forgot bz_default_hidden" id="forgot_form_bottom" method="post">
<label for="login_bottom">Login:</label>
<input id="login_bottom" name="loginname" size="20" type="text"/>
<input id="forgot_button_bottom" type="submit" value="Reset Password"/>
<input name="a" type="hidden" value="reqpw"/>
<input id="token_bottom" name="token" type="hidden" value="1626095135-1-SSJki1XM9l7mNL85AXvHQSR3z0ODLoU8g-SCVZPb0"/>
<a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
</form>
</li>
</ul>
</li>
</ul>
<div class="outro"></div>
</div>
</body>
</html>