<!DOCTYPE html>
<html lang="en">
  <head>
    <title>83622 &ndash; CVE-2014-3635: buffer overflow at fd-passing limit</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="data/assets/c60deb3d48830179eae269c9e65a7506.css?1462892334" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1462892331"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "83622 – CVE-2014-3635: buffer overflow at fd-passing limit",
                             "show_bug.cgi?id=83622" );
        document.title = "83622 – CVE-2014-3635: buffer overflow at fd-passing limit";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "83622 – CVE-2014-3635: buffer overflow at fd-passing limit", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1462892334"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-freedesktop-org
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_dbus
                 bz_component_core
                 bz_bug_83622 yui-skin-sam">

  <div id="header"><div id="banner">
  </div>

    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;83622</span>

        <span id="subtitle" class="subheader">CVE-2014-3635: buffer overflow at fd-passing limit</span>

        <span id="information" class="header_addl_info">Last modified: 2014-09-16 16:37:32 UTC</span>
    </div>


    <div id="common_links"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>


</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2014-09-16 16:37:32">
  <input type="hidden" name="id" value="83622">
  <input type="hidden" name="token" value="1635619162-4Lt5l3qvvnni_eOZXh-VoVxw5TPnAYg_9vqOA3k-aYM">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=83622"><b>Bug&nbsp;83622</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">CVE-2014-3635: buffer overflow at fd-passing limit</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>CVE-2014-3635: buffer overflow at fd-passing limit
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'CVE-2014-3635: buffer overflow at fd-passing limit' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >dbus

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=dbus"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >core

  (<a href="buglist.cgi?component=core&amp;product=dbus&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>unspecified
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">Other
        All
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>medium
       normal
      </td>
    </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Simon McVittie</span>
</span>
      </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_qa_contact">


  <a 
      title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#qa_contact"
  >QA Contact:</a>

</th>
      <td><span class="vcard"><span class="fn">Alban Crequy</span>
</span>
      </td>
    </tr>
    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'dbus\x40maint.invalid',
        'dbus\x40maint.invalid');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>

    <tr><th class="field_label "
    id="field_label_status_whiteboard">


  <a 
      title="Each bug has a free-form single line text entry box for adding tags and status information."
      class="field_help_link"
      href="page.cgi?id=fields.html#status_whiteboard"
  >Whiteboard:</a>

</th><td>review+  
  </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_keywords">


  <a 
      title="You can add keywords from a defined list to bugs, in order to easily identify and group them."
      class="field_help_link"
      href="describekeywords.cgi"
  >Keywords:</a>

</th>
  <td class="field_value "
      id="field_container_keywords" >patch, security

</td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2014-09-08 18:00 UTC by <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2014-09-16 16:37 UTC
      (<a href="show_activity.cgi?id=83622">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>4 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="lennart">lennart</option>
                <option value="sjoerd">sjoerd</option>
                <option value="thiago">thiago</option>
                <option value="walters">walters</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr> 
<tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_i915_platform">


  <a 
      title="Intel platforms affected by the bug"
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_i915_platform"
  >i915 platform:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_i915_platform" >

</td>
    </tr>
    <tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_i915_features">


  <a 
      title="Features of the i915 driver affected by the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_i915_features"
  >i915 features:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_i915_features" >

</td>
    </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=105917"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">_dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding</span></b></a>

          <span class="bz_attach_extra_info">
              (3.75 KB,
                patch)

            <br>
            <a href="#attach_105917"
               title="Go to the comment associated with the attachment">2014-09-08 19:36 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=105917&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105917">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=105918"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">New test for fd-passing</span></b></a>

          <span class="bz_attach_extra_info">
              (21.92 KB,
                patch)

            <br>
            <a href="#attach_105918"
               title="Go to the comment associated with the attachment">2014-09-08 19:37 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=105918&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105918">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a3" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=105975"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">[v2] _dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding</span></b></a>

          <span class="bz_attach_extra_info">
              (4.30 KB,
                patch)

            <br>
            <a href="#attach_105975"
               title="Go to the comment associated with the attachment">2014-09-09 11:51 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=105975&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105975">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a4" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=105976"
               title="View the content of the attachment">
          <b>Add _DBUS_GNUC_UNUSED, and use it in _DBUS_STATIC_ASSERT</b></a>

          <span class="bz_attach_extra_info">
              (1.56 KB,
                patch)

            <br>
            <a href="#attach_105976"
               title="Go to the comment associated with the attachment">2014-09-09 11:51 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=105976&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105976">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a5" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=105989"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">fdpass test: respond to the simpler bits of Alban's  review</span></b></a>

          <span class="bz_attach_extra_info">
              (7.29 KB,
                patch)

            <br>
            <a href="#attach_105989"
               title="Go to the comment associated with the attachment">2014-09-09 15:16 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=105989&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105989">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a6" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=105990"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">Add a test-case for a synthetic message with 255 fds</span></b></a>

          <span class="bz_attach_extra_info">
              (7.29 KB,
                patch)

            <br>
            <a href="#attach_105990"
               title="Go to the comment associated with the attachment">2014-09-09 15:16 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=105990&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105990">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a7" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=105991"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">fdpass test: give the too-many tests distinct names</span></b></a>

          <span class="bz_attach_extra_info">
              (1.16 KB,
                patch)

            <br>
            <a href="#attach_105991"
               title="Go to the comment associated with the attachment">2014-09-09 15:17 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=105991&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105991">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a8" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=105996"
               title="View the content of the attachment">
          <b>_dbus_read_socket_with_unix_fds: do not accept extra fds  in cmsg padding</b></a>

          <span class="bz_attach_extra_info">
              (4.24 KB,
                patch)

            <br>
            <a href="#attach_105996"
               title="Go to the comment associated with the attachment">2014-09-09 18:31 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=105996&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105996">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a9" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=105997"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">New test for fd-passing</span></b></a>

          <span class="bz_attach_extra_info">
              (28.93 KB,
                patch)

            <br>
            <a href="#attach_105997"
               title="Go to the comment associated with the attachment">2014-09-09 18:31 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=105997&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105997">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a10" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=106177"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">Re-order headers to avoid redefining  GLIB_VERSION_MAX_ALLOWED with older GLib</span></b></a>

          <span class="bz_attach_extra_info">
              (876 bytes,
                patch)

            <br>
            <a href="#attach_106177"
               title="Go to the comment associated with the attachment">2014-09-12 12:47 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=106177&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=106177">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a11" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=106178"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">fdpass test: declare Fixture, and the fallback  g_test_skip() if needed, if !HAVE_UNIX_FD_PASSING</span></b></a>

          <span class="bz_attach_extra_info">
              (959 bytes,
                patch)

            <br>
            <a href="#attach_106178"
               title="Go to the comment associated with the attachment">2014-09-12 12:48 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=106178&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=106178">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a12" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=106187"
               title="View the content of the attachment">
          <b>[patch v3] New test for fd passing</b></a>

          <span class="bz_attach_extra_info">
              (28.85 KB,
                patch)

            <br>
            <a href="#attach_106187"
               title="Go to the comment associated with the attachment">2014-09-12 14:25 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=106187&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=106187">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a13" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=106194"
               title="View the content of the attachment">
          <b>[backport to 1.6] New test for fd-passing</b></a>

          <span class="bz_attach_extra_info">
              (28.73 KB,
                patch)

            <br>
            <a href="#attach_106194"
               title="Go to the comment associated with the attachment">2014-09-12 15:44 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=106194&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=106194">
      Splinter Review</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
            <a href="#a0" onclick="return toggle_display(this);">Show
              Obsolete</a> (9)
            <a id="view_all" href="attachment.cgi?bugid=83622&amp;action=viewall&amp;hide_obsolete=1">View All</a>
        </span>
    </td>
  </tr>
</table>
<br>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1462891770" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-08 18:00:03 UTC
        </span>

      </div>




<pre class="bz_comment_text">While investigating another bug I accidentally found another unlikely DoS.

More details when I've confirmed that this is embargoed.</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-08 18:27:59 UTC
        </span>

      </div>




<pre class="bz_comment_text">While writing a regression test to investigate <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - CVE-2014-3636: using all available file descriptors in dbus-daemon: limit DEFAULT_MESSAGE_UNIX_FDS"
   href="show_bug.cgi?id=82820">Bug #82820</a>, I discovered another weird DoS involving file descriptor passing.

If max_message_unix_fds is set to an odd number on 64-bit platforms, a malicious message-sender can crash the message recipient. (In general, the bad situation is that (max_message_unix_fds * sizeof (int)) % sizeof (size_t) is nonzero.)

This is because the recipient allocates enough space for a cmsg header (16 bytes on x86 Linux), plus padding to size_t alignment, plus an array of max_message_unix_fds (== *n_fds) ints, plus padding to size_t alignment. It is zero-filled.

  m.msg_controllen = CMSG_SPACE(*n_fds * sizeof(int));
  m.msg_control = alloca(m.msg_controllen);
  memset(m.msg_control, 0, m.msg_controllen);

Let's suppose *n_fds is 7 for the sake of illustration. On my system, m.msg_controllen is 48:

    ---- size_t aligned
    0-15    cmsg header + padding (CMSG_LEN (0) == 16)
    16-19   first fd
    ...
    40-43   seventh fd (CMSG_LEN (7 * sizeof (int)) == 44)
    [44-47] padding (CMSG_SPACE (7 * sizeof (int)) == 48)
    ---- size_t aligned

The only information that Linux has is m.msg_controllen. If the sender sends exactly one fd more than we wanted (i.e. exactly 8 fds), the kernel thinks &quot;I need 16 bytes for the header and 32 bytes for these 8 fds, the dbus-daemon has given me exactly those 48 bytes, OK, I can fill them all&quot; and does so.

Then we parse the cmsg header:

             unsigned i;
 
             _dbus_assert(cm-&gt;cmsg_len &lt;= CMSG_LEN(*n_fds * sizeof(int)));
             *n_fds = (cm-&gt;cmsg_len - CMSG_LEN(0)) / sizeof(int);
 
             memcpy(fds, CMSG_DATA(cm), *n_fds * sizeof(int));
             found = TRUE;

If assertions are enabled, dbus-daemon crashes with an assertion failure: cm-&gt;cmsg_len == 48, CMSG_LEN (*n_fds * sizeof (int)) == 44.

If assertions are not enabled, then we assign 8 to *n_fds, and memcpy 8 ints into a 7-int buffer. Bad news!

Mitigations:

* Platforms where cmsg is only aligned to int boundaries (e.g. i386)
  are unaffected

* The default limit on the number of fds per message is not odd,
  and approximately nobody changes the default arbitrary limits

* Assertions are normally disabled in production builds of dbus-daemon,
  so we don't crash with an assertion failure (this would make matters
  worse, potentially turning DoS into heap-smashing and arbitrary code
  execution, if it wasn't for the third mitigation)

* loader-&gt;unix_fds is allocated with _dbus_realloc(), which is basically
  libc realloc(), which is likely to round odd-sized allocations up to the
  next 8- or 16-byte boundary; so writing 2*n ints into a buffer
  intended for 2*n-1 ints will probably not actually overflow that buffer</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-08 19:36:43 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=105917" name="attach_105917" title="_dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding">attachment 105917</a> <a href="attachment.cgi?id=105917&amp;action=edit" title="_dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105917'>[review]</a>
_dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding

If (*n_fds * sizeof (int) % sizeof (size_t)) is nonzero,
then CMSG_SPACE (*n_fds * sizeof (int)) &gt; CMSG_LEN (*n_fds * sizeof (int)
because the SPACE includes padding to a size_t boundary, whereas the LEN
does not. We have to allocate the SPACE. Previously, we told the kernel
that the buffer size we wanted was the SPACE, not the LEN, which meant
it was free to fill the padding with additional fds: on a 64-bit
platform with 32-bit int, that's one extra fd, if *n_fds happens
to be odd.

This meant that a malicious sender could send exactly 1 fd too many,
which would make us fail an assertion if enabled, or overrun a buffer
by 1 fd otherwise.

In practice, *n_fds == max_message_unix_fds, which defaults to an
even number and is unlikely to be set to an odd number.</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-08 19:37:51 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=105918" name="attach_105918" title="New test for fd-passing">attachment 105918</a> <a href="attachment.cgi?id=105918&amp;action=edit" title="New test for fd-passing">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105918'>[review]</a>
New test for fd-passing

---

In particular, /odd-limit/plus1 exercises this bug.</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 11:15:51 UTC
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class="bz_obsolete"><a href="attachment.cgi?id=105917" name="attach_105917" title="_dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding">attachment 105917</a> <a href="attachment.cgi?id=105917&amp;action=edit" title="_dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105917'>[review]</a>
_dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding

Review of <span class="bz_obsolete"><a href="attachment.cgi?id=105917" name="attach_105917" title="_dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding">attachment 105917</a> <a href="attachment.cgi?id=105917&amp;action=edit" title="_dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105917'>[review]</a>:
-----------------------------------------------------------------

::: dbus/dbus-sysdeps-unix.c
&#64;&#64; +386,5 &#64;&#64;
<span class="quote">&gt; +                 * someone could send us an extra fd per message
&gt; +                 * and we'd eventually run out. */
&gt; +                for (i = (size_t) *n_fds; i &lt; payload_len_fds; i++)
&gt; +                  {
&gt; +                    close (payload[i]);</span >

This branch should not happen, but if it does, you close the fd and then set close_on_exec on the closed fd below.

&#64;&#64; +398,5 &#64;&#64;
<span class="quote">&gt;  
&gt;              /* Linux doesn't tell us whether MSG_CMSG_CLOEXEC actually
&gt;                 worked, hence we need to go through this list and set
&gt;                 CLOEXEC everywhere in any case */
&gt; +            for (i = 0; i &lt; payload_len_fds; i++)</span >

Shouldn't you keep n_fds here, since the additional fds would be closed in the &quot;else&quot; branch?

Also, fds[i] for i &gt;= *nfds has not been memcpy()ed, so you would close_on_exec an uninitialized fd.</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 11:30:45 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=83622#c4">comment #4</a>)
<span class="quote">&gt; This branch [the one with payload_len_fds &gt; *n_fds]
&gt; should not happen, but if it does, you close the fd and then set
&gt; close_on_exec on the closed fd below.</span >

Not the case, unless there's a flaw in my logic below:

<span class="quote">&gt; &gt; +            for (i = 0; i &lt; payload_len_fds; i++)
&gt; 
&gt; Shouldn't you keep n_fds here, since the additional fds would be closed in
&gt; the &quot;else&quot; branch?</span >

*n_fds and payload_len_fds are numerically equal (to whichever of their previous values was the lesser) after either branch.

In the branch where payload_len_fds &lt;= (size_t) *n_fds, I set *n_fds = (int) payload_len_fds. Note that the casts are valid, because *n_fds is known to be non-negative, and size_t is unsigned, so the condition implies that 0 ≤ payload_len_fds ≤ *n_fds, therefore payload_len_fds certainly fits in the range of int.

In the branch where payload_len_fds &gt; *n_fds, I set payload_len_fds = (size_t) *n_fds. Again, the cast is valid, because *n_fds is known to be non-negative. Before changing payload_len_fds, I close the excess fds, payload[*n_fds]..payload[old(payload_len_fds)-1], because resetting payload_len_fds means that the memcpy and the cloexec loop will not extend to those fds.

The only reason I changed the limit of the cloexec loop from *n_fds to payload_len_fds is that i is now a size_t, so we'd need yet another cast (for (i = 0; i &lt; (size_t) *n_fds; i++)) otherwise the compiler would (reasonably) warn us that we're comparing integers with different ranges.

Perhaps I could make this clearer by introducing another temporary variable?</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 11:51:16 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=105975" name="attach_105975" title="[v2] _dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding">attachment 105975</a> <a href="attachment.cgi?id=105975&amp;action=edit" title="[v2] _dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105975'>[review]</a>
[v2] _dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding

---

Perhaps this one is clearer, and easier to reason about? I introduced a new variable fds_to_use, which makes payload_len_fds constant.

The use of _DBUS_STATIC_ASSERT does trip a -Wunused-local-typedefs warning
which I'll fix with a simple extra patch.</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 11:51:50 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=105976" name="attach_105976" title="Add _DBUS_GNUC_UNUSED, and use it in _DBUS_STATIC_ASSERT">attachment 105976</a> <a href="attachment.cgi?id=105976&amp;action=edit" title="Add _DBUS_GNUC_UNUSED, and use it in _DBUS_STATIC_ASSERT">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105976'>[review]</a>
Add _DBUS_GNUC_UNUSED, and use it in _DBUS_STATIC_ASSERT

This means we can use _DBUS_STATIC_ASSERT at non-global scope without
tripping -Wunused-local-typedefs.</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 12:12:24 UTC
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class="bz_obsolete"><a href="attachment.cgi?id=105975" name="attach_105975" title="[v2] _dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding">attachment 105975</a> <a href="attachment.cgi?id=105975&amp;action=edit" title="[v2] _dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105975'>[review]</a>
[v2] _dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding

Review of <span class="bz_obsolete"><a href="attachment.cgi?id=105975" name="attach_105975" title="[v2] _dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding">attachment 105975</a> <a href="attachment.cgi?id=105975&amp;action=edit" title="[v2] _dbus_read_socket_with_unix_fds: do not accept extra fds in  cmsg padding">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105975'>[review]</a>:
-----------------------------------------------------------------

Not tested, but it looks good to me.</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 12:13:27 UTC
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class=""><a href="attachment.cgi?id=105976" name="attach_105976" title="Add _DBUS_GNUC_UNUSED, and use it in _DBUS_STATIC_ASSERT">attachment 105976</a> <a href="attachment.cgi?id=105976&amp;action=edit" title="Add _DBUS_GNUC_UNUSED, and use it in _DBUS_STATIC_ASSERT">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105976'>[review]</a>
Add _DBUS_GNUC_UNUSED, and use it in _DBUS_STATIC_ASSERT

Review of <span class=""><a href="attachment.cgi?id=105976" name="attach_105976" title="Add _DBUS_GNUC_UNUSED, and use it in _DBUS_STATIC_ASSERT">attachment 105976</a> <a href="attachment.cgi?id=105976&amp;action=edit" title="Add _DBUS_GNUC_UNUSED, and use it in _DBUS_STATIC_ASSERT">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105976'>[review]</a>:
-----------------------------------------------------------------

Not tested, but it looks good to me.</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 13:15:41 UTC
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class="bz_obsolete"><a href="attachment.cgi?id=105918" name="attach_105918" title="New test for fd-passing">attachment 105918</a> <a href="attachment.cgi?id=105918&amp;action=edit" title="New test for fd-passing">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105918'>[review]</a>
New test for fd-passing

Review of <span class="bz_obsolete"><a href="attachment.cgi?id=105918" name="attach_105918" title="New test for fd-passing">attachment 105918</a> <a href="attachment.cgi?id=105918&amp;action=edit" title="New test for fd-passing">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105918'>[review]</a>:
-----------------------------------------------------------------

Only some minor comments:

::: test/fdpass.c
&#64;&#64; +101,5 &#64;&#64;
<span class="quote">&gt; +    g_error (&quot;expected success but got error: %s: %s&quot;, e-&gt;name, e-&gt;message);
&gt; +}
&gt; +
&gt; +static DBusHandlerResult
&gt; +server_message_cb (DBusConnection *server_conn,</span >

I suggest the name left_server_message_cb() or to add a comment.

&#64;&#64; +354,5 &#64;&#64;
<span class="quote">&gt; +  int i;
&gt; +
&gt; +  if (f-&gt;fd_before &lt; 0)
&gt; +    {
&gt; +      g_test_skip (&quot;cannot open /dev/zero&quot;);</span >

Any reason opening /dev/zero could fail? If no reason, why not factorise the test in setup()?

&#64;&#64; +437,5 &#64;&#64;
<span class="quote">&gt; +
&gt; +  dbus_message_unref (outgoing);
&gt; +
&gt; +  /* The sender is unceremoniously disconnected. */
&gt; +  while (dbus_connection_get_is_connected (f-&gt;left_client_conn))</span >

You could also check that f-&gt;left_server_conn get disconnected.

while (dbus_connection_get_is_connected (f-&gt;left_client_conn) ||
       dbus_connection_get_is_connected (f-&gt;left_server_conn))

&#64;&#64; +444,5 &#64;&#64;
<span class="quote">&gt; +      test_main_context_iterate (f-&gt;ctx, TRUE);
&gt; +    }
&gt; +
&gt; +  /* The message didn't get through without its fds. */
&gt; +  g_assert_cmpuint (g_queue_get_length (&amp;f-&gt;messages), ==, 0);</span >

Hopefully, left_client_conn's misbehaviour does not disconnect right_client_conn. We could check that with:

g_assert (dbus_connection_get_is_connected (f-&gt;right_client_conn));
g_assert (dbus_connection_get_is_connected (f-&gt;right_server_conn));

&#64;&#64; +569,5 &#64;&#64;
<span class="quote">&gt; +          test_main_context_iterate (f-&gt;ctx, TRUE);
&gt; +        }
&gt; +
&gt; +      /* The message didn't get through without its fds. */
&gt; +      g_assert_cmpuint (g_queue_get_length (&amp;f-&gt;messages), ==, 0);</span >

And the right connection is still alive.

g_assert (dbus_connection_get_is_connected (f-&gt;right_client_conn));
g_assert (dbus_connection_get_is_connected (f-&gt;right_server_conn));

&#64;&#64; +583,5 &#64;&#64;
<span class="quote">&gt; +          test_main_context_iterate (f-&gt;ctx, TRUE);
&gt; +        }
&gt; +
&gt; +      g_assert_cmpuint (g_queue_get_length (&amp;f-&gt;messages), ==, 1);
&gt; +</span >

And both connections are still alive.

g_assert (dbus_connection_get_is_connected (f-&gt;right_client_conn));
g_assert (dbus_connection_get_is_connected (f-&gt;right_server_conn));
g_assert (dbus_connection_get_is_connected (f-&gt;left_client_conn));
g_assert (dbus_connection_get_is_connected (f-&gt;left_server_conn));

&#64;&#64; +667,5 &#64;&#64;
<span class="quote">&gt; +      test_too_many, teardown);
&gt; +  g_test_add (&quot;/too-many&quot;, Fixture, GUINT_TO_POINTER (2), setup,
&gt; +      test_too_many, teardown);
&gt; +  g_test_add (&quot;/too-many&quot;, Fixture, GUINT_TO_POINTER (17), setup,
&gt; +      test_too_many, teardown);</span >

In addition to 1, 2 and 17, can you check 256? It should also work with 256 but it would use a different code path for the reason explained in <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - CVE-2014-3636: using all available file descriptors in dbus-daemon: limit DEFAULT_MESSAGE_UNIX_FDS"
   href="show_bug.cgi?id=82820#c9">Bug #82820 Comment #9</a>.</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 13:42:05 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=83622#c10">comment #10</a>)
<span class="quote">&gt; I suggest the name left_server_message_cb()</span >
...
<span class="quote">&gt; You could also check that f-&gt;left_server_conn get disconnected.</span >
...
<span class="quote">&gt; Hopefully, left_client_conn's misbehaviour does not disconnect
&gt; right_client_conn.</span >
...
<span class="quote">&gt; And the right connection is still alive.</span >
...
<span class="quote">&gt; And both connections are still alive.</span >

All good ideas. I'll do them in one big patch since they're simple.

<span class="quote">&gt; &gt; +      g_test_skip (&quot;cannot open /dev/zero&quot;);
&gt; 
&gt; Any reason opening /dev/zero could fail? If no reason, why not factorise the
&gt; test in setup()?</span >

I don't know whether g_test_skip() can work during setup(), and the fallback implementation certainly can't. I don't really want the test to hard-depend on a more modern GLib since I would like to merge it into stable-branches, hence this weird setup.

However, if I replace /dev/zero with a path that definitely exists on every reasonable Unix platform, like /bin/sh, I can just make it a g_error(). I'll do that.

<span class="quote">&gt; In addition to 1, 2 and 17, can you check 256? It should also work with 256
&gt; but it would use a different code path for the reason explained in Bug
&gt; #82820 <a href="show_bug.cgi?id=83622#c9">Comment #9</a>.</span >

Good idea.

The numbers here are the margin by which to exceed the limit, rather than an absolute number of fds; for the 256 case I'll use exactly 256 fds instead.</pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 15:16:11 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=105989" name="attach_105989" title="fdpass test: respond to the simpler bits of Alban's  review">attachment 105989</a> <a href="attachment.cgi?id=105989&amp;action=edit" title="fdpass test: respond to the simpler bits of Alban's  review">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105989'>[review]</a>
fdpass test: respond to the simpler bits of Alban's  review

- rename server_message_cb to left_server_message_cb
- open /dev/null instead of /dev/zero, and just crash if we can't
- when the left connection should be disconnected, assert that both
  ends disconnect; when it should not, assert that
- always assert that the right connection is not disconnected
- make my_test_skip() inline since it's trivial, it will not
  currently be used on fd-passing platforms, and inline functions
  are immune to -Wunused

---

I'll probably squash this into <span class="bz_obsolete"><a href="attachment.cgi?id=105918" name="attach_105918" title="New test for fd-passing">Attachment #105918</a> <a href="attachment.cgi?id=105918&amp;action=edit" title="New test for fd-passing">[details]</a></span>.</pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 15:16:29 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=105990" name="attach_105990" title="Add a test-case for a synthetic message with 255 fds">attachment 105990</a> <a href="attachment.cgi?id=105990&amp;action=edit" title="Add a test-case for a synthetic message with 255 fds">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105990'>[review]</a>
Add a test-case for a synthetic message with 255 fds</pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 15:17:15 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=105991" name="attach_105991" title="fdpass test: give the too-many tests distinct names">attachment 105991</a> <a href="attachment.cgi?id=105991&amp;action=edit" title="fdpass test: give the too-many tests distinct names">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105991'>[review]</a>
fdpass test: give the too-many tests distinct names

---

To be squashed into <span class="bz_obsolete"><a href="attachment.cgi?id=105918" name="attach_105918" title="New test for fd-passing">Attachment #105918</a> <a href="attachment.cgi?id=105918&amp;action=edit" title="New test for fd-passing">[details]</a></span>, but it's probably easier to review like this.</pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 15:49:49 UTC
        </span>

      </div>




<pre class="bz_comment_text">The 3 new patches look good to me.

When you squash all the patches, can you make sure the commit log in the resulting patch references the bugzilla entry?</pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 18:29:03 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=83622#c1">comment #1</a>)
<span class="quote">&gt; If max_message_unix_fds is set to an odd number on 64-bit platforms</span >

Alban has pointed out that this is not actually necessary...

<span class="quote">&gt; * The default limit on the number of fds per message is not odd,
&gt;   and approximately nobody changes the default arbitrary limits</span >

... and so this mitigation does not really exist, because it is 
possible to get *n_fds &lt; max_message_unix_fds. Users of libdbus (and probably every other D-Bus implementation) will attach fds to the sendmsg() that contains the first byte of the message, but a malicious sender could send a message in more than one sendmsg(), with (maybe an odd number of) fds in more than one part. Linux preserves message boundaries if fds are attached, so we'd receive them in more than one recvmsg(), with *n_fds reducing with each recvmsg() (possibly down to zero).</pre>
    </div>

    <div id="c17" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 18:31:18 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=105996" name="attach_105996" title="_dbus_read_socket_with_unix_fds: do not accept extra fds  in cmsg padding">attachment 105996</a> <a href="attachment.cgi?id=105996&amp;action=edit" title="_dbus_read_socket_with_unix_fds: do not accept extra fds  in cmsg padding">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105996'>[review]</a>
_dbus_read_socket_with_unix_fds: do not accept extra fds  in cmsg padding

If (*n_fds * sizeof (int) % sizeof (size_t)) is nonzero,
then CMSG_SPACE (*n_fds * sizeof (int)) &gt; CMSG_LEN (*n_fds * sizeof (int)
because the SPACE includes padding to a size_t boundary, whereas the LEN
does not. We have to allocate the SPACE. Previously, we told the kernel
that the buffer size we wanted was the SPACE, not the LEN, which meant
it was free to fill the padding with additional fds: on a 64-bit
platform with 32-bit int, that's one extra fd, if *n_fds happens
to be odd.

This meant that a malicious sender could send exactly 1 fd too many,
which would make us fail an assertion if enabled, or overrun a buffer
by 1 fd otherwise.

---

The only change is that I deleted the part of the commit message that said *n_fds would be even in practice, because we can't assume that.</pre>
    </div>

    <div id="c18" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 18:31:51 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=105997" name="attach_105997" title="New test for fd-passing">attachment 105997</a> <a href="attachment.cgi?id=105997&amp;action=edit" title="New test for fd-passing">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=105997'>[review]</a>
New test for fd-passing

---

Squashed version of what Alban already reviewed.</pre>
    </div>

    <div id="c19" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 18:33:26 UTC
        </span>

      </div>




<pre class="bz_comment_text">Calling this a positive review because virtually nothing has changed since Alban said yes (I deleted one misleading paragraph from a commit message, and squashed all the test patches together).</pre>
    </div>

    <div id="c20" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-09 18:36:18 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=83622#c15">comment #15</a>)
<span class="quote">&gt; When you squash all the patches, can you make sure the commit log in the
&gt; resulting patch references the bugzilla entry?</span >

Yes, I did that.

The _DBUS_GNUC_UNUSED patch deliberately does not reference this bug because I want to be able to drop it into master sooner than this bug being unembargoed, if it's useful elsewhere.</pre>
    </div>

    <div id="c21" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 12:47:24 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=106177" name="attach_106177" title="Re-order headers to avoid redefining  GLIB_VERSION_MAX_ALLOWED with older GLib">attachment 106177</a> <a href="attachment.cgi?id=106177&amp;action=edit" title="Re-order headers to avoid redefining  GLIB_VERSION_MAX_ALLOWED with older GLib">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=106177'>[review]</a>
Re-order headers to avoid redefining  GLIB_VERSION_MAX_ALLOWED with older GLib

dbus-internals.h re-includes config.h, and glib.h redefines
GLIB_VERSION_MAX_ALLOWED to the current version if it is a
later version. The combination results in macro redefinition warnings.

---

To be squashed into a replacement for <span class="bz_obsolete"><a href="attachment.cgi?id=105997" name="attach_105997" title="New test for fd-passing">Attachment #105997</a> <a href="attachment.cgi?id=105997&amp;action=edit" title="New test for fd-passing">[details]</a></span>.

Spotted by trying to cross-build with mingw: my mingw setup happens to have an older GLib.

I don't think I'm going to include this test in the dbus-1.8 branch or the security release, since a security release that didn't compile would be Bad. I'll just put it in master.</pre>
    </div>

    <div id="c22" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 12:48:08 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=106178" name="attach_106178" title="fdpass test: declare Fixture, and the fallback  g_test_skip() if needed, if !HAVE_UNIX_FD_PASSING">attachment 106178</a> <a href="attachment.cgi?id=106178&amp;action=edit" title="fdpass test: declare Fixture, and the fallback  g_test_skip() if needed, if !HAVE_UNIX_FD_PASSING">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=106178'>[review]</a>
fdpass test: declare Fixture, and the fallback  g_test_skip() if needed, if !HAVE_UNIX_FD_PASSING

This was failing to cross-compile with mingw.

---

Also to be squashed into a replacement for <span class="bz_obsolete"><a href="attachment.cgi?id=105997" name="attach_105997" title="New test for fd-passing">Attachment #105997</a> <a href="attachment.cgi?id=105997&amp;action=edit" title="New test for fd-passing">[details]</a></span>.</pre>
    </div>

    <div id="c23" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 13:04:48 UTC
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class="bz_obsolete"><a href="attachment.cgi?id=106177" name="attach_106177" title="Re-order headers to avoid redefining  GLIB_VERSION_MAX_ALLOWED with older GLib">attachment 106177</a> <a href="attachment.cgi?id=106177&amp;action=edit" title="Re-order headers to avoid redefining  GLIB_VERSION_MAX_ALLOWED with older GLib">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=106177'>[review]</a>
Re-order headers to avoid redefining  GLIB_VERSION_MAX_ALLOWED with older GLib

Review of <span class="bz_obsolete"><a href="attachment.cgi?id=106177" name="attach_106177" title="Re-order headers to avoid redefining  GLIB_VERSION_MAX_ALLOWED with older GLib">attachment 106177</a> <a href="attachment.cgi?id=106177&amp;action=edit" title="Re-order headers to avoid redefining  GLIB_VERSION_MAX_ALLOWED with older GLib">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=106177'>[review]</a>:
-----------------------------------------------------------------

It looks good to me.</pre>
    </div>

    <div id="c24" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c24">Comment 24</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 13:05:08 UTC
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class="bz_obsolete"><a href="attachment.cgi?id=106178" name="attach_106178" title="fdpass test: declare Fixture, and the fallback  g_test_skip() if needed, if !HAVE_UNIX_FD_PASSING">attachment 106178</a> <a href="attachment.cgi?id=106178&amp;action=edit" title="fdpass test: declare Fixture, and the fallback  g_test_skip() if needed, if !HAVE_UNIX_FD_PASSING">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=106178'>[review]</a>
fdpass test: declare Fixture, and the fallback  g_test_skip() if needed, if !HAVE_UNIX_FD_PASSING

Review of <span class="bz_obsolete"><a href="attachment.cgi?id=106178" name="attach_106178" title="fdpass test: declare Fixture, and the fallback  g_test_skip() if needed, if !HAVE_UNIX_FD_PASSING">attachment 106178</a> <a href="attachment.cgi?id=106178&amp;action=edit" title="fdpass test: declare Fixture, and the fallback  g_test_skip() if needed, if !HAVE_UNIX_FD_PASSING">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=106178'>[review]</a>:
-----------------------------------------------------------------

It looks good to me.</pre>
    </div>

    <div id="c25" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c25">Comment 25</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 14:25:31 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=106187" name="attach_106187" title="[patch v3] New test for fd passing">attachment 106187</a> <a href="attachment.cgi?id=106187&amp;action=edit" title="[patch v3] New test for fd passing">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=106187'>[review]</a>
[patch v3] New test for fd passing

---

squashed version of what Alban already reviewed</pre>
    </div>

    <div id="c26" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c26">Comment 26</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 15:44:19 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=106194" name="attach_106194" title="[backport to 1.6] New test for fd-passing">attachment 106194</a> <a href="attachment.cgi?id=106194&amp;action=edit" title="[backport to 1.6] New test for fd-passing">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=83622&amp;attachment=106194'>[review]</a>
[backport to 1.6] New test for fd-passing

---

I don't think I'm actually going to apply this to dbus-1.6, because anyone who is still on dbus-1.6 (e.g. Debian stable) is going to be picking isolated patches anyway; but people might find it useful for testing.</pre>
    </div>

    <div id="c27" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c27">Comment 27</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-12 22:15:58 UTC
        </span>

      </div>




<pre class="bz_comment_text">CVE-2014-3635 has been allocated for this vulnerability.</pre>
    </div>

    <div id="c28" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c28">Comment 28</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-15 11:06:09 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=83622#c1">comment #1</a>)
<span class="quote">&gt; Mitigations:</span >
...
<span class="quote">&gt; * loader-&gt;unix_fds is allocated with _dbus_realloc(), which is basically
&gt;   libc realloc(), which is likely to round odd-sized allocations up to the
&gt;   next 8- or 16-byte boundary; so writing 2*n ints into a buffer
&gt;   intended for 2*n-1 ints will probably not actually overflow that buffer</span >

I have realized that by the same logic Alban used to dismiss the &quot;not usually odd&quot; mitigation, this mitigation also does not work. Let's say our buffer is sized for N ints, where N is such that libc does not over-allocate (in practice, this will be true, because we habitually choose &quot;nice&quot; limits). A malicious sender can split their message across two sendmsg() calls, putting N-1 fds in the first, and 2 fds in the second. In this case we still overrun the buffer by 1 fd.

So this is rather less theoretical than I had first thought, and needs fixing with correspondingly higher urgency.</pre>
    </div>

    <div id="c29" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=83622#c29">Comment 29</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-09-16 16:37:32 UTC
        </span>

      </div>




<pre class="bz_comment_text">Fixed in 1.8.8, making public</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=83622">Format For Printing</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>


</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>
<p align="center">
  Use of freedesktop.org services, including Bugzilla, is subject to our <a href="https://www.freedesktop.org/wiki/CodeOfConduct/">Code of Conduct</a>. How we collect and use information is described in our <a href="https://www.freedesktop.org/wiki/PrivacyPolicy">Privacy Policy</a>.
</p>
  </body>
</html>