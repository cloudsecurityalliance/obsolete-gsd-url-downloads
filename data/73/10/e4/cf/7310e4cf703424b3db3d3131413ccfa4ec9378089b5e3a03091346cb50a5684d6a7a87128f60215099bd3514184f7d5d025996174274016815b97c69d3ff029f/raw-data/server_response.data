<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
  <head>
<base href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+index" />

    <meta charset="UTF-8" />
    <title>Bug #1878234 “Some kata-runtime annotations can execute arbitrar...” : Bugs : Kata Containers</title>
    <link rel="shortcut icon" href="/@@/launchpad.png" />
    <link rel="canonical" href="https://bugs.launchpad.net/bugs/1878234" />
    
      <link rel="alternate" type="application/atom+xml" href="http://feeds.launchpad.net/bugs/1878234/bug.atom" title="Bug 1878234 Feed" />
    

    
  
  <link type="text/css" rel="stylesheet" media="screen, print" href="/+icing/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/combo.css" />


    

    
      <meta name="description" content="================================
This issue is being treated as a potential security risk under embargo.
Please do not make any public mention of embargoed (private) security
vulnerabilities before their coordinated publication by the Kata
Containers Vulnerability Management Team in the form of an official
Kata Containers Security Advisory. This includes discussion of the bug
or associated fixes in public forums such as mailing lists, code review
systems and bug trackers. Please also avoid pr..." />
      <meta property="og:description" content="================================
This issue is being treated as a potential security risk under embargo.
Please do not make any public mention of embargoed (private) security
vulnerabilities before their coordinated publication by the Kata
Containers Vulnerability Management Team in the form of an official
Kata Containers Security Advisory. This includes discussion of the bug
or associated fixes in public forums such as mailing lists, code review
systems and bug trackers. Please also avoid pr..." />
    

    
    
      <meta property="og:title" content="Bug #1878234 “Some kata-runtime annotations can execute arbitrar...” : Bugs : Kata Containers" />
      <meta property="og:type" content="website" />
      <meta property="og:image" content="/@@/launchpad.png" />
      <meta property="og:url" content="https://bugs.launchpad.net/bugs/1878234" />
      <meta property="og:site_name" content="Launchpad" />
    

    

    
  

  
  
  <script type="text/javascript">
    var LP = {
        cache: {},
        links: {}
    };
  </script>

  

  <script type="text/javascript">var cookie_scope = '; Path=/; Secure; Domain=.launchpad.net';</script>

   <script type="text/javascript" src="/+combo/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/?yui/yui/yui-min.js&amp;lp/meta.js&amp;yui/loader/loader-min.js"></script>
   <script type="text/javascript">
        var raw = null;
        if (LP.devmode) {
           raw = 'raw';
        }
        YUI.GlobalConfig = {
            combine: true,
            comboBase: '/+combo/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/?',
            root: 'yui/',
            filter: raw,
            debug: false,
            fetchCSS: false,
            maxURLLength: 2000,
            groups: {
                lp: {
                    combine: true,
                    base: '/+combo/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/?lp/',
                    comboBase: '/+combo/rev0d8de2bfee2024772b3040d4d19f42f47395ac0d/?',
                    root: 'lp/',
                    // comes from including lp/meta.js
                    modules: LP_MODULES,
                    fetchCSS: false
                }
            }
        }</script>

  <script type="text/javascript">
      // we need this to create a single YUI instance all events and code
      // talks across. All instances of YUI().use should be based off of
      // LPJS instead.
      var LPJS = new YUI();
  </script>



    <script id="base-layout-load-scripts" type="text/javascript">
        //<![CDATA[
        LPJS.use('base', 'node', 'console', 'event',
            'oop', 'lp', 'lp.app.foldables','lp.app.sorttable',
            'lp.app.inlinehelp', 'lp.app.links',
            'lp.bugs.bugtask_index', 'lp.bugs.subscribers',
            'lp.app.ellipsis', 'lp.code.branchmergeproposal.diff',
            'lp.views.global',
             function(Y) {

            Y.on("domready", function () {
                var global_view = new Y.lp.views.Global();
                global_view.render();

                Y.lp.app.sorttable.SortTable.init();
                Y.lp.app.inlinehelp.init_help();
                Y.lp.activate_collapsibles();
                Y.lp.app.foldables.activate();
                Y.lp.app.links.check_valid_lp_links();
            });

            Y.on('lp:context:web_link:changed', function(e) {
                  window.location = e.new_value;
            });
        });
        //]]>
    </script>
    <script id="base-helper-functions" type="text/javascript">
         //<![CDATA[
        // This code is pulled from lp.js that needs to be available on every
        // request. Pulling here to get it outside the scope of the YUI block.
        function setFocusByName(name) {
            // Focus the first element matching the given name which can be focused.
            var nodes = document.getElementsByName(name);
            var i, node;
            for (i = 0; i < nodes.length; i++) {
                node = nodes[i];
                if (node.focus) {
                    try {
                        // Trying to focus a hidden element throws an error in IE8.
                        if (node.offsetHeight !== 0) {
                            node.focus();
                        }
                    } catch (e) {
                        LPJS.use('console', function(Y) {
                            Y.log('In setFocusByName(<' +
                                node.tagName + ' type=' + node.type + '>): ' + e);
                        });
                    }
                    break;
                }
            }
        }

        function selectWidget(widget_name, event) {
          if (event && (event.keyCode === 9 || event.keyCode === 13)) {
              // Avoid firing if user is tabbing through or simply pressing
              // enter to submit the form.
              return;
          }
          document.getElementById(widget_name).checked = true;
        }
        //]]>
    </script>

    
      
      <script type="text/javascript" id="available-official-tags-js">var available_official_tags = [];</script>
      <script type="text/javascript">
        LPJS.use('base', 'node', 'oop', 'event', 'lp.bugs.bugtask_index',
                  'lp.bugs.subscribers', 'lp.code.branchmergeproposal.diff',
                  'lp.app.comment', 'lp.services.messages.edit', function(Y) {
            Y.on('domready', function() {
                Y.lp.code.branchmergeproposal.diff.connect_diff_links();
                Y.lp.bugs.bugtask_index.setup_bugtask_index();
                Y.lp.bugs.bugtask_index.setup_bugtask_table();
                LP.cache.comment_context = LP.cache.bug;
                var cl = new Y.lp.app.comment.CommentList();
                cl.render();
                var sl = new Y.lp.bugs.subscribers.createBugSubscribersLoader({
                    container_box: '#other-bug-subscribers',
                    subscribers_details_view:
                        '/+bug-portlet-subscribers-details',
                    subscribe_someone_else_link: '.menu-link-addsubscriber'
                }, window);

                Y.lp.services.messages.edit.setup();
            });
         });
      </script>
      <style type="text/css">
        /* Align the 'add comment' link to the right of the comment box. */
        #add-comment-form textarea { width: 100%; }
        #add-comment-form { max-width: 60em; padding-bottom: 4em; }
        #add-comment-form .actions {float: right;}
        .buglink-summary dd { font-size: 10px; }
        a#privacy-link:link:hover, a#privacy-link:visited:hover {text-decoration:none;}
      </style>
      <style type="text/css">
        .yui3-overlay .value label  {
          /* It normally makes sense for form labels to be bold, but since
          this form consists only of radio buttons, there's nothing but labels
          so we just get wall-to-wall bold. */
          font-weight: normal !important;
        }
      </style>
    
    
  </head>

  <body id="document" itemscope="" itemtype="http://schema.org/WebPage" class="tab-bugs
      main_side
      public
      yui3-skin-sam">
          
          
    <div class="yui-d0">
      <div id="locationbar" class="login-logout">
        

<div id="logincontrol"><a href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+login">Log in / Register</a></div>



      </div><!--id="locationbar"-->

      <div id="watermark" class="watermark-apps-portlet">
        <div>
          <a href="https://launchpad.net/katacontainers.io"><img alt="" width="64" height="64" src="/@@/product-logo" /></a>
        </div>
        <div class="wide">
          <h2 id="watermark-heading"><a href="https://launchpad.net/katacontainers.io">Kata Containers</a></h2>
        </div>
        
  <!-- Application Menu -->
  <ul class="facetmenu">
    
      
      <li class="overview"><a href="https://launchpad.net/katacontainers.io">Overview</a></li>
      
    
    
      
      <li class="branches"><a href="https://code.launchpad.net/katacontainers.io">Code</a></li>
      
    
    
      <li class="bugs active"><a href="https://bugs.launchpad.net/katacontainers.io">Bugs</a></li>
      
      
    
    
      
      <li class="specifications"><a href="https://blueprints.launchpad.net/katacontainers.io">Blueprints</a></li>
      
    
    
      
      <li class="translations"><a href="https://translations.launchpad.net/katacontainers.io">Translations</a></li>
      
    
    
      
      <li class="answers"><a href="https://answers.launchpad.net/katacontainers.io">Answers</a></li>
      
    
  </ul>

      </div>

      <div class="yui-t4">
        <div id="maincontent" class="yui-main">
          <div class="yui-b" dir="ltr">
            <div class="context-publication">
              
      <h1 id="edit-title">
<span class="yui3-editable_text-text ellipsis" style="max-width: 95%;">
    Some kata-runtime annotations can execute arbitrary code
</span>
  
</h1>



    
              

              <div id="registration" class="registering">
                
      Bug #1878234 reported by
      <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin</a>
      <time title="2020-05-12 15:51:33 UTC" datetime="2020-05-12T15:51:33.045177+00:00">on 2020-05-12</time>
    
              </div>
            </div>

            
            <div id="request-notifications">
              
            </div>

            
              <div>

      

      <div id="bug-is-duplicate">
          
      </div>
      

      <div style="float: right;">
        <span><a href="/+help-bugs/bug-heat.html" target="help" class="sprite flame">270</a></span>
      </div>

      


  
  
    <div class="actions">
      <span id="affectsmetoo" style="display: inline">This bug affects 1 person</span>
    </div>
  



    <table id="affected-software" class="listing">
      <thead>
        <tr>
          <th colspan="2">Affects</th>
          <th>Status</th>
          <th>Importance</th>
          <th>Assigned to</th>
          <th>Milestone</th>
        </tr>
      </thead>

      <tbody>
        
          
  <tr class="highlight" id="tasksummary2602226">
    <td>
      <a class="bugtask-expander" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+editstatus">
        &#8203;
      </a>
    </td>
    
    <td>
      <span id="bugtarget-picker-tasksummary2602226">
        <span class="yui3-activator-data-box">
            <a class="sprite product" href="https://bugs.launchpad.net/katacontainers.io">Kata Containers</a>
        </span>
        <button class="lazr-btn yui3-activator-act yui3-activator-hidden">
          Edit
        </button>
        <div class="yui3-activator-message-box yui3-activator-hidden"></div>
        
      </span>
    </td>

    

    
    <td style="width: 20%; vertical-align: middle">
      <div class="status-content" style="width: 100%; float: left">
        
        
          <a href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+editstatus" style="float: left" class="value statusFIXRELEASED">Fix Released</a>
          <a href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+editstatus" style="margin-left: 3px">
            <img class="editicon" src="/@@/edit" />
          </a>
        
      </div>
    </td>

    
    <td style="width: 15em; vertical-align: middle">
      <div class="importance-content" style="width: 100%; float: left">
        <span style="float: left" class="value importanceCRITICAL">Critical</span>
      </div>
    </td>

    <td style="width:20%; margin: 0; padding: 0;
               vertical-align: middle; padding-left: 0.5em">
      

      
        <span id="assignee-picker-tasksummary2602226">
          <span class="yui3-activator-data-box">
            
            
              Unassigned
            
          </span>
          
          <button class="lazr-btn yui3-activator-act yui3-activator-hidden">
            Edit
          </button>
          <div class="yui3-activator-message-box yui3-activator-hidden"></div>
        </span>
      
    </td>

    <td style="width: 20%; vertical-align: middle">
      
    </td>

    
  </tr>

  
    <tr class="bugtask-collapsible-content hidden" id="task2602226">
     <td colspan="7"><form action="/katacontainers.io/+bug/1878234/+editstatus" method="post" enctype="multipart/form-data">
  

  <p class="error message">
    You need to log in to change this bug's status.
  </p>
  
  <table class="summary" style="float: right; margin-left: 1em;">
    <tr>
      <th>Affecting:</th>
      <td><a href="/katacontainers.io">Kata Containers</a></td>
    </tr>
    <tr>
      <th>Filed here by:</th>
      <td><a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin</a></td>
    </tr>
    <tr>
      <th>When:</th>
      <td>
        <time title="2020-05-12 15:51:33 UTC" datetime="2020-05-12T15:51:33.045177+00:00">2020-05-12</time>
      </td>
    </tr>
    <tr>
      <th>Confirmed:</th>
      <td>
        <time title="2020-11-20 16:19:38 UTC" datetime="2020-11-20T16:19:38.445457+00:00">2020-11-20</time>
      </td>
    </tr>
    
    <tr>
      <th>Started work:</th>
      <td>
        <time title="2020-11-20 16:19:45 UTC" datetime="2020-11-20T16:19:45.154647+00:00">2020-11-20</time>
      </td>
    </tr>
    <tr>
      <th>Completed:</th>
      <td>
        <time title="2020-12-03 19:32:37 UTC" datetime="2020-12-03T19:32:37.532604+00:00">2020-12-03</time>
      </td>
    </tr>
  </table>
  <div class="field">
    <table>
      <tr>
        <td>
          <label for="katacontainers.io.target">Target</label>
        </td>
      </tr>
      <tr>
        <td>
          <table>
  <tr>
    <td>
      <label>
        <input class="radioType" id="katacontainers.io.target.option.package" name="katacontainers.io.target" type="radio" value="package" />
        Distribution
      </label>
    </td>
    <td>
      <select id="katacontainers.io.target.distribution" name="katacontainers.io.target.distribution" size="1" >
<option value="baltix">Baltix</option>
<option value="boss">BOSS</option>
<option value="charms">Juju Charms Collection</option>
<option value="elbuntu">Elbuntu</option>
<option value="guadalinex">Guadalinex</option>
<option value="guadalinexedu">Guadalinex Edu</option>
<option value="kiwilinux">Kiwi Linux</option>
<option value="nubuntu">nUbuntu</option>
<option value="pld-linux">PLD Linux</option>
<option value="tilix">Tilix</option>
<option value="tuxlab">tuXlab</option>
<option selected="selected" value="ubuntu">Ubuntu</option>
<option value="ubuntu-leb">Ubuntu Linaro Evaluation Build</option>
<option value="ubuntu-rtm">Ubuntu RTM</option>
</select>
<input name="katacontainers.io.target.distribution-empty-marker" type="hidden" value="1" />
    </td>
  </tr>
  <tr>
    <td align="right">
      <label for="katacontainers.io.target.option.package">
        Package
      </label>
    </td>
    <td>
      


    <input type="text" value="" id="katacontainers.io.target.package"
                         name="katacontainers.io.target.package" size="20"
                         maxlength=""
                         onKeyPress="selectWidget(&#x27;katacontainers.io.target.option.package&#x27;, event)" style=""
                         class="" />

    
      
      <script type="text/javascript">
          LPJS.use('node', 'lp.app.picker', function(Y) {
              var text_input = Y.DOM.byId('katacontainers.io.target.package');
              var select_menu = Y.DOM.byId('katacontainers.io.target.package-suggestions');
              Y.lp.app.picker.connect_select_menu(
                  select_menu, text_input);
          });</script>
    

    <span class="hidden">(<a id="show-widget-katacontainers-io-target-package" href="#">Find&hellip;</a>)</span>
    <script>
    LPJS.use('node', 'lp.app.picker', function(Y) {
        var config = {"show_assign_me_button": false, "extra_no_results_message": null, "picker_type": "default", "selected_value_metadata": null, "remove_team_text": "Remove team", "selected_value": null, "step_title": "Search by name", "header": "Select a package", "vocabulary_filters": [], "show_create_team": false, "input_element": "katacontainers.io.target.package", "assign_me_text": "Pick me", "remove_person_text": "Remove person", "show_remove_button": false, "vocabulary_name": "DistributionPackage", "show_widget_id": "show-widget-katacontainers-io-target-package"};
        var show_widget_id = 'show-widget-katacontainers-io-target-package';
        Y.lp.app.picker.addPicker(config, show_widget_id);
    });
    </script>
  



    </td>
  </tr>

  <tr>
    <td>
      <label>
        <input class="radioType" checked="checked" id="katacontainers.io.target.option.product" name="katacontainers.io.target" type="radio" value="product" />
       Project
      </label>
    </td>
    <td>
      


    <input type="text" value="katacontainers.io" id="katacontainers.io.target.product"
                         name="katacontainers.io.target.product" size="20"
                         maxlength=""
                         onKeyPress="selectWidget(&#x27;katacontainers.io.target.option.product&#x27;, event)" style=""
                         class="" />

    
      
      <script type="text/javascript">
          LPJS.use('node', 'lp.app.picker', function(Y) {
              var text_input = Y.DOM.byId('katacontainers.io.target.product');
              var select_menu = Y.DOM.byId('katacontainers.io.target.product-suggestions');
              Y.lp.app.picker.connect_select_menu(
                  select_menu, text_input);
          });</script>
    

    <span class="hidden">(<a id="show-widget-katacontainers-io-target-product" href="#">Find&hellip;</a>)</span>
    <script>
    LPJS.use('node', 'lp.app.picker', function(Y) {
        var config = {"show_assign_me_button": false, "extra_no_results_message": null, "picker_type": "default", "selected_value_metadata": null, "remove_team_text": "Remove team", "selected_value": "katacontainers.io", "step_title": "Search", "header": "Select a project", "vocabulary_filters": [], "show_create_team": false, "input_element": "katacontainers.io.target.product", "assign_me_text": "Pick me", "remove_person_text": "Remove person", "show_remove_button": false, "vocabulary_name": "Product", "show_widget_id": "show-widget-katacontainers-io-target-product"};
        var show_widget_id = 'show-widget-katacontainers-io-target-product';
        Y.lp.app.picker.addPicker(config, show_widget_id);
    });
    </script>
  



    </td>
  </tr>
</table>

          
        </td>
      </tr>
    </table>
    
    <table>
      <tr>
        <td>
          <label style="font-weight: bold" for="katacontainers.io.status">Status</label>
        </td>
        <td>
          <label style="font-weight: bold" for="katacontainers.io.importance">Importance</label>
        </td>
        
      </tr>
      <tr>
        <td><div>
<div class="value">
<select id="katacontainers.io.status" name="katacontainers.io.status" size="1" >
<option selected="selected" value="Fix Released">Fix Released</option>
</select>
</div>
<input name="katacontainers.io.status-empty-marker" type="hidden" value="1" />
</div></td>
        <td title="Changeable only by a project maintainer or bug supervisor">
          <span class="sprite read-only"></span>
          <span class="importanceCRITICAL">Critical</span>
        </td>
        
      </tr>
    </table>
    <table>
      <tr>
        <td>
          <label style="font-weight: bold" for="katacontainers.io.assignee">Assigned to</label>
        </td>
      </tr>
      <tr>
        <td colspan="2" style="white-space: nowrap">

  <table>
    <tr>
      <td style="padding: 0 2px 2px 0">
        <input type="radio" checked="checked" id="katacontainers.io.assignee.assign_to_nobody" name="katacontainers.io.assignee.option" value="katacontainers.io.assignee.assign_to_nobody" />
      </td>
      <td style="padding: 0">
        <label style="font-weight: normal" for="katacontainers.io.assignee.assign_to_nobody">
          Nobody
        </label>
      </td>
    </tr>
    <tr>
      <td style="padding: 0 2px 2px 0">
        <input type="radio" id="katacontainers.io.assignee.assign_to_me" name="katacontainers.io.assignee.option" value="katacontainers.io.assignee.assign_to_me" />
      </td>
      <td style="padding: 0">
        <label style="font-weight: normal" for="katacontainers.io.assignee.assign_to_me">
          Me
        </label>
      </td>
    </tr>
    
    
  </table>


</td>
      </tr>
    </table>
    
  </div>
  <div class="field">
    <div>
      <label style="font-weight: bold" for="katacontainers.io.comment_on_change">Comment on this change (optional)</label>
      <textarea cols="62" rows="4" id="katacontainers.io.comment_on_change" name="katacontainers.io.comment_on_change"></textarea>
    </div>
    <div>
      <label style="font-weight: normal">
        <input type="checkbox" name="subscribe" id="subscribe" value="Subscribe" />
        Email me about changes to this bug report
      </label>
    </div>
  </div>
  
</form>
</td>
    </tr>
  


        
      </tbody>

    </table>



<div class="actions">
  
    <span id="also-affects-product" class="">
    <a class="menu-link-addupstream sprite add" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+choose-affected-product">Also affects project</a>
        <a href="/+help-bugs/also-affects-project-help.html" target="help" class="sprite maybe action-icon">(?)</a>
    </span>
    <span id="also-affects-package" class="">
    <a class="menu-link-adddistro sprite add" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+distrotask">Also affects distribution/package</a>
    </span>
    <a class="menu-link-nominate sprite milestone" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+nominate">Nominate for series</a>
    
  

</div>




      <div id="maincontentsub">
        <div class="top-portlet">

      <div itemprop="mainContentOfPage" class="report">
        

        <div>
  <div class="lazr-multiline-edit" id="edit-description">
  <div class="clearfix">
    

    <h3>Bug Description</h3>
  </div>

  <div class="yui3-editable_text-text"><p>=======<wbr />=======<wbr />=======<wbr />=======<wbr />====<br />
This issue is being treated as a potential security risk under embargo.<br />
Please do not make any public mention of embargoed (private) security<br />
vulnerabilities before their coordinated publication by the Kata<br />
Containers Vulnerability Management Team in the form of an official<br />
Kata Containers Security Advisory. This includes discussion of the bug<br />
or associated fixes in public forums such as mailing lists, code review<br />
systems and bug trackers. Please also avoid private disclosure to other<br />
individuals not already approved for access to this information, and<br />
provide this same reminder to those who are made aware of the issue<br />
prior to publication. All discussion should remain confined to this<br />
private bug report, and any proposed fixes should be added to the bug<br />
as attachments.<br />
=======<wbr />=======<wbr />=======<wbr />=======<wbr />====</p>
<p>A few of the kata-runtime annotations can be used to execute arbitrary pre-existing binaries on the host.</p>
<p>For example, &quot;virtio_fs_daemon&quot; in combination with &quot;virtio_<wbr />fs_extra_<wbr />args&quot; makes it possible to invoke a host binary with arbitrary args.</p>
<p>The hypervisor.path and hypervisor.<wbr />jailer_<wbr />path annotations could also be used the same way.</p>
<p>Suggestion for fix: add valid annotation values to the configuration file that lists the acceptable values for such annotations, with a suitable default value of &quot;empty&quot;.</p></div>
  </div>

  
</div>


        <div style="margin:-10px 0 20px 5px" class="clearfix">
          <span>See <a href="comments/0">original description</a></span>
        </div>

        <div id="bug-tags">
          <span id="tags-heading">
            
          </span>
          <span id="tag-list">
          </span>
          <a href="+edit" title="Add tags" id="tags-trigger" class="sprite add">Add tags</a>
          
          <a href="/+help-bugs/tag-help.html" target="help" class="sprite maybe action-icon">Tag help</a>
        </div>

        <script type="text/javascript">
          LPJS.use('event', 'node', 'lp.bugs.tags_entry', function(Y) {
              Y.on('domready',
                   function(e) {
                       Y.lp.bugs.tags_entry.setup_tag_entry(
                           available_official_tags);
                   },
                   window);
          });
        </script>

        <div class="clearfix"></div>
      </div>

      <div id="branches-and-cves">
        <div id="bug-branches-container" style="float: left">
          
        </div><!-- bug-branch-container -->

        <div class="cves">
          <h2>CVE References</h2>
          <ul>
            <li class="sprite cve">
              <a href="/bugs/cve/2020-27151" title="An issue was discovered in Kata Conta...">2020-27151</a>
            </li>
          </ul>
        </div>

        <div class="clearfix"></div>
      </div> <!-- branches and CVEs -->

      </div>

      <div>
      
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/1" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-13T11:12:30.228938+00:00" title="2020-05-13 11:12:30 UTC">on 2020-05-13</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/1"> #1</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Proof of concept demonstrated with Kubernetes and current master using the following yaml file:</p>
<p>apiVersion: v1<br />
kind: Pod<br />
metadata:<br />
&nbsp;&nbsp;name: annotation<br />
&nbsp;&nbsp;labels:<br />
&nbsp;&nbsp;&nbsp;&nbsp;app: annotation<br />
&nbsp;&nbsp;annotations:<br />
&nbsp;&nbsp;&nbsp;&nbsp;io.<wbr />katacontainers.<wbr />config.<wbr />hypervisor.<wbr />virtio_<wbr />fs_daemon: &quot;/usr/local/<wbr />bin/hello&quot;<br />
spec:<br />
&nbsp;&nbsp;runtimeClassName: kata-qemu-virtiofs<br />
&nbsp;&nbsp;containers:<br />
&nbsp;&nbsp;&nbsp;&nbsp;- name: jenkins<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image: jenkins/jenkins<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;command: [ &quot;bash&quot; ]<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;args: [ &quot;-c&quot;, &quot;ulimit -n 5000; ulimit -a; /usr/local/<wbr />bin/jenkins.<wbr />sh&quot; ]</p>
<p>(The ulimit is to address another issue)</p>
<p>% cat /usr/local/<wbr />bin/hello<br />
#!/bin/bash</p>
<p>echo &quot;Hello was invoked with args $@&quot; &gt;&gt; /tmp/hello.log<br />
/opt/kata/<wbr />bin/virtiofsd &quot;$@&quot;</p>
<p>% cat /tmp/hello.log:</p>
<p>Hello was invoked with args --fd=3 -o source=<wbr />/run/kata-<wbr />containers/<wbr />shared/<wbr />sandboxes/<wbr />e42fde60bf44cf2<wbr />ed68562d8640c2c<wbr />adb09f8cec0c5fd<wbr />f1852a156a2c91a<wbr />23c7 -o cache=always --syslog -o no_posix_lock -d<br />
Hello was invoked with args --fd=3 -o source=<wbr />/run/kata-<wbr />containers/<wbr />shared/<wbr />sandboxes/<wbr />701037911fc2803<wbr />374a584df686575<wbr />644602487efde8d<wbr />7ffbe42f4f05bba<wbr />b9cd -o cache=always --syslog -o no_posix_lock -d</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Proof of concept demonstrated with Kubernetes and current master using the following yaml file:

apiVersion: v1
kind: Pod
metadata:
  name: annotation
  labels:
    app: annotation
  annotations:
    io.katacontainers.config.hypervisor.virtio_fs_daemon: "/usr/local/bin/hello"
spec:
  runtimeClassName: kata-qemu-virtiofs
  containers:
    - name: jenkins
      image: jenkins/jenkins
      command: [ "bash" ]
      args: [ "-c", "ulimit -n 5000; ulimit -a; /usr/local/bin/jenkins.sh" ]

(The ulimit is to address another issue)

% cat /usr/local/bin/hello 
#!/bin/bash

echo "Hello was invoked with args $@" &gt;&gt; /tmp/hello.log
/opt/kata/bin/virtiofsd "$@"


% cat /tmp/hello.log:

Hello was invoked with args --fd=3 -o source=/run/kata-containers/shared/sandboxes/e42fde60bf44cf2ed68562d8640c2cadb09f8cec0c5fdf1852a156a2c91a23c7 -o cache=always --syslog -o no_posix_lock -d
Hello was invoked with args --fd=3 -o source=/run/kata-containers/shared/sandboxes/701037911fc2803374a584df686575644602487efde8d7ffbe42f4f05bbab9cd -o cache=always --syslog -o no_posix_lock -d

</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/2" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-13T11:13:04.372105+00:00" title="2020-05-13 11:13:04 UTC">on 2020-05-13</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/2"> #2</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Of note, if /usr/local/<wbr />bin/hello is not executable, then the following happens:</p>
<p>Failed to create pod sandbox: rpc error: code = Unknown desc = container create failed: panic: runtime error: invalid memory address or nil pointer dereference<br />
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x562180e63a48]<br />
goroutine 7 [running]:<br />
os.(*Process)<wbr />.wait(0x0, 0xc000000004, 0xc00035db50, 0x1)<br />
&nbsp;&nbsp;/usr/<wbr />lib/golang/<wbr />src/os/<wbr />exec_unix.<wbr />go:17 +0x28<br />
os.(*Process)<wbr />.Wait(.<wbr />..)<br />
&nbsp;&nbsp;/usr/<wbr />lib/golang/<wbr />src/os/<wbr />exec.go:<wbr />125<br />
github.<wbr />com/kata-<wbr />containers/<wbr />runtime/<wbr />virtcontainers.<wbr />(*qemu)<wbr />.setupVirtiofsd<wbr />.func1(<wbr />0x562181bea460, 0xc00058a040, 0xc0001ca500, 0xc0002dc000)<br />
&nbsp;&nbsp;/home/<wbr />ddd/go/<wbr />src/github.<wbr />com/kata-<wbr />containers/<wbr />runtime/<wbr />virtcontainers/<wbr />qemu.go:<wbr />689 +0x4a5<br />
created by github.<wbr />com/kata-<wbr />containers/<wbr />runtime/<wbr />virtcontainers.<wbr />(*qemu)<wbr />.setupVirtiofsd<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<wbr />&nbsp;&nbsp;&nbsp;&nbsp;/home/<wbr />ddd/go/<wbr />src/github.<wbr />com/kata-<wbr />containers/<wbr />runtime/<wbr />virtcontainers/<wbr />qemu.go:<wbr />682 +0x2d8<br />
&nbsp;&nbsp;Warning  FailedCreatePod<wbr />SandBox  53s (x17 over 4m38s)  kubelet, muse  (combined from similar events): Failed to create pod sandbox: rpc error: code = Unknown desc = container create failed: panic: runtime error: invalid memory address or nil<br />
&nbsp;pointer dereference<br />
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x55fdd99cea48]</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Of note, if /usr/local/bin/hello is not executable, then the following happens:

Failed to create pod sandbox: rpc error: code = Unknown desc = container create failed: panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x562180e63a48]
goroutine 7 [running]:
os.(*Process).wait(0x0, 0xc000000004, 0xc00035db50, 0x1)
  /usr/lib/golang/src/os/exec_unix.go:17 +0x28
os.(*Process).Wait(...)
  /usr/lib/golang/src/os/exec.go:125
github.com/kata-containers/runtime/virtcontainers.(*qemu).setupVirtiofsd.func1(0x562181bea460, 0xc00058a040, 0xc0001ca500, 0xc0002dc000)
  /home/ddd/go/src/github.com/kata-containers/runtime/virtcontainers/qemu.go:689 +0x4a5
created by github.com/kata-containers/runtime/virtcontainers.(*qemu).setupVirtiofsd
           /home/ddd/go/src/github.com/kata-containers/runtime/virtcontainers/qemu.go:682 +0x2d8
  Warning  FailedCreatePodSandBox  53s (x17 over 4m38s)  kubelet, muse  (combined from similar events): Failed to create pod sandbox: rpc error: code = Unknown desc = container create failed: panic: runtime error: invalid memory address or nil
 pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x55fdd99cea48]</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/3" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-14T14:50:45.362851+00:00" title="2020-05-14 14:50:45 UTC">on 2020-05-14</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/3"> #3</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Patch under way.</p>
<p>Here are the annotations I identified so far with exec capabilities:</p>
<p>hypervisor.path<br />
hypervisor.<wbr />jailer_<wbr />path<br />
hypervisor.ctlpath<br />
hypervisor.<wbr />virtio_<wbr />fs_daemon</p>
<p>Not confirmed yet, but likely a risk:<br />
proxy.path<br />
shim.path<br />
netmon.path</p>
<p>Additionally, no exec but system file overwrite capabilities:</p>
<p>hypervisor.<wbr />vhost_user_<wbr />store_path<br />
hypervisor.<wbr />file_mem_<wbr />backend</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Patch under way.

Here are the annotations I identified so far with exec capabilities:

hypervisor.path
hypervisor.jailer_path
hypervisor.ctlpath
hypervisor.virtio_fs_daemon

Not confirmed yet, but likely a risk:
proxy.path
shim.path
netmon.path

Additionally, no exec but system file overwrite capabilities:

hypervisor.vhost_user_store_path
hypervisor.file_mem_backend

</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/4" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-14T18:25:04.570942+00:00" title="2020-05-14 18:25:04 UTC">on 2020-05-14</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/4"> #4</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+attachment/5371684/+files/patches.tgz">Patches that only addresses the VirtIOFS case - It looks like the hypervisor is not</a>
        <a class="sprite edit action-icon" href="/katacontainers.io/+bug/1878234/+attachment/5371684">Edit</a>
        (3.0 KiB,
        application/x-tar)
      </li>
    </ul>

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>First pass at patch attached. It looks like the annotation for hypervisor path is not implemented.</p>
<p>Errors shown below</p>
<p>&nbsp;&nbsp;Warning  FailedCreatePod<wbr />SandBox  2m10s (x16 over 5m57s)  kubelet, muse      Failed to create pod sandbox: rpc error: code = Unknown desc = container create failed: virtiofs daemon /usr/local/<wbr />bin/hello required from annotation is not valid<br />
&nbsp;&nbsp;Warning  FailedCreatePod<wbr />SandBox  47s (x6 over 116s)      kubelet, muse      Failed to create pod sandbox: rpc error: code = Unknown desc = container create failed: virtiofs daemon /usr/local/<wbr />bin/hello required from annotation is not valid (e<br />
xpect one of [])<br />
&nbsp;&nbsp;Warning  FailedCreatePod<wbr />SandBox  32s (x2 over 4m21s)     kubelet, muse      Failed to create pod sandbox: rpc error: code = Unknown desc = container create failed: /opt/kata/<wbr />bin/kata-<wbr />qemu-virtiofs: line 2: /opt/kata/<wbr />bin/kata-<wbr />runtime: Text fi<br />
le busy<br />
&nbsp;&nbsp;Warning  FailedCreatePod<wbr />SandBox  6s (x2 over 19s)        kubelet, muse      Failed to create pod sandbox: rpc error: code = Unknown desc = container create failed: virtiofs daemon /usr/local/<wbr />bin/hello returned with error: fork/exec /usr/loca<br />
l/bin/hello: permission denied</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">First pass at patch attached. It looks like the annotation for hypervisor path is not implemented.

Errors shown below

  Warning  FailedCreatePodSandBox  2m10s (x16 over 5m57s)  kubelet, muse      Failed to create pod sandbox: rpc error: code = Unknown desc = container create failed: virtiofs daemon /usr/local/bin/hello required from annotation is not valid
  Warning  FailedCreatePodSandBox  47s (x6 over 116s)      kubelet, muse      Failed to create pod sandbox: rpc error: code = Unknown desc = container create failed: virtiofs daemon /usr/local/bin/hello required from annotation is not valid (e
xpect one of [])
  Warning  FailedCreatePodSandBox  32s (x2 over 4m21s)     kubelet, muse      Failed to create pod sandbox: rpc error: code = Unknown desc = container create failed: /opt/kata/bin/kata-qemu-virtiofs: line 2: /opt/kata/bin/kata-runtime: Text fi
le busy
  Warning  FailedCreatePodSandBox  6s (x2 over 19s)        kubelet, muse      Failed to create pod sandbox: rpc error: code = Unknown desc = container create failed: virtiofs daemon /usr/local/bin/hello returned with error: fork/exec /usr/loca
l/bin/hello: permission denied



</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/5" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T03:30:20.778524+00:00" title="2020-05-15 03:30:20 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/5"> #5</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>What about adding a global config option to disable the config-<wbr />via-annotation property completely (and enable it by default)? Instead of trying to identify and remove each risky annotation configs, we keep the ability and warn about their usage.</p>
<p>In general, config-<wbr />via-annotation is not a capability we would like to expose to end users. They are mostly targeting service providers who wrap their own services (e.g., container or kerbenetes as a server) over infrastructural Kubernetes and have a proper validation on every field user can input at a higher level.</p>
<p>Also while the executable options are more dangerous, other options might be used for an expolit as well. That&#x27;s why I think we should completely disable such config-<wbr />via-annotation for end users.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">What about adding a global config option to disable the config-via-annotation property completely (and enable it by default)? Instead of trying to identify and remove each risky annotation configs, we keep the ability and warn about their usage.

In general, config-via-annotation is not a capability we would like to expose to end users. They are mostly targeting service providers who wrap their own services (e.g., container or kerbenetes as a server) over infrastructural Kubernetes and have a proper validation on every field user can input at a higher level.

Also while the executable options are more dangerous, other options might be used for an expolit as well. That's why I think we should completely disable such config-via-annotation for end users.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/6" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T07:33:06.260249+00:00" title="2020-05-15 07:33:06 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/6"> #6</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Sent reply this morning through email, but apparently the system is not smart enough to update the bug!!!</p>
<p>On 15 May 2020, at 08:20, Christophe de Dinechin &lt;email address hidden&gt; wrote:</p>
<p><span class="foldable-quoted">&gt; Le 15 mai 2020 à 05:35, Peng Tao &lt;email address hidden&gt; a écrit :
</span></p>
<p><span class="foldable-quoted">&gt; ﻿What about adding a global config option to disable the config-via-<br />
&gt; annotation property completely (and enable it by default)? Instead of<br />
&gt; trying to identify and remove each risky annotation configs, we keep the<br />
&gt; ability and warn about their usage.
</span></p>
<p>I think this is a good idea, but as an addition to the proposed fix, not a replacement.</p>
<p>If you decide to enable it, you should still not be allowed to execute host binaries.</p>
<p>I will add the option in a next iteration of the patch series.</p>
<p><span class="foldable-quoted">&gt; In general, config-<wbr />via-annotation is not a capability we would like to<br />
&gt; expose to end users. They are mostly targeting service providers who<br />
&gt; wrap their own services (e.g., container or kerbenetes as a server) over<br />
&gt; infrastructural Kubernetes and have a proper validation on every field<br />
&gt; user can input at a higher level.
</span></p>
<p>Actually, the reason I started looking into annotations is because they<br />
solved a problem we had, specifically about passing kernel boot options<br />
on a per-workload basis. So I conclude there are valid use cases where<br />
you would want them and still want the system to be secure.</p>
<p><span class="foldable-quoted">&gt; Also while the executable options are more dangerous, other options<br />
&gt; might be used for an expolit as well. That&#x27;s why I think we should<br />
&gt; completely disable such config-<wbr />via-annotation for end users.
</span></p>
<p>I plan to review other options as well. This one is urgent and comes first.<br />
Other options may lead to exploits on a case-by-case basis, and indeed,<br />
they need to be carefully scrutinized.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Sent reply this morning through email, but apparently the system is not smart enough to update the bug!!!

On 15 May 2020, at 08:20, Christophe de Dinechin &lt;christophe.de.dinechin@gmail.com&gt; wrote:

&gt; Le 15 mai 2020 à 05:35, Peng Tao &lt;1878234@bugs.launchpad.net&gt; a écrit :

&gt; ﻿What about adding a global config option to disable the config-via-
&gt; annotation property completely (and enable it by default)? Instead of
&gt; trying to identify and remove each risky annotation configs, we keep the
&gt; ability and warn about their usage.

I think this is a good idea, but as an addition to the proposed fix, not a replacement.

If you decide to enable it, you should still not be allowed to execute host binaries.

I will add the option in a next iteration of the patch series.


&gt; In general, config-via-annotation is not a capability we would like to
&gt; expose to end users. They are mostly targeting service providers who
&gt; wrap their own services (e.g., container or kerbenetes as a server) over
&gt; infrastructural Kubernetes and have a proper validation on every field
&gt; user can input at a higher level.

Actually, the reason I started looking into annotations is because they
solved a problem we had, specifically about passing kernel boot options
on a per-workload basis. So I conclude there are valid use cases where
you would want them and still want the system to be secure.


&gt; Also while the executable options are more dangerous, other options
&gt; might be used for an expolit as well. That's why I think we should
&gt; completely disable such config-via-annotation for end users.

I plan to review other options as well. This one is urgent and comes first.
Other options may lead to exploits on a case-by-case basis, and indeed,
they need to be carefully scrutinized.
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/7" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T08:06:54+00:00" title="2020-05-15 08:06:54 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              <a href="/katacontainers.io/+bug/1878234/comments/7">
                <strong>Re: [Bug 1878234] Re: Some kata-runtime annotations can execute arbitrary code</strong>
              </a>
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/7"> #7</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>On Fri, May 15, 2020 at 3:40 PM Christophe de Dinechin<br />
&lt;email address hidden&gt; wrote:<br />
<span class="foldable-quoted">
&gt;<br />
&gt; Sent reply this morning through email, but apparently the system is not<br />
&gt; smart enough to update the bug!!!<br />
&gt;<br />
&gt; On 15 May 2020, at 08:20, Christophe de Dinechin<br />
&gt; &lt;email address hidden&gt; wrote:<br />
&gt;<br />
&gt; &gt; Le 15 mai 2020 à 05:35, Peng Tao &lt;email address hidden&gt; a écrit<br />
&gt; :<br />
&gt;<br />
&gt; &gt; ﻿What about adding a global config option to disable the config-via-<br />
&gt; &gt; annotation property completely (and enable it by default)? Instead of<br />
&gt; &gt; trying to identify and remove each risky annotation configs, we keep the<br />
&gt; &gt; ability and warn about their usage.<br />
&gt;<br />
&gt; I think this is a good idea, but as an addition to the proposed fix, not<br />
&gt; a replacement.<br />
&gt;<br />
&gt; If you decide to enable it, you should still not be allowed to execute<br />
&gt; host binaries.<br />
&gt;<br />
</span>

Those options also have their valid use cases. For example, they would<br />
allow easy rolling upgrade and fallback for each of these binaries.<br />
Some additional validation/<wbr />protection is OK but I don&#x27;t think we<br />
should completely disable them.</p>
<p><span class="foldable-quoted">&gt; I will add the option in a next iteration of the patch series.<br />
&gt;<br />
&gt;<br />
&gt; &gt; In general, config-<wbr />via-annotation is not a capability we would like to<br />
&gt; &gt; expose to end users. They are mostly targeting service providers who<br />
&gt; &gt; wrap their own services (e.g., container or kerbenetes as a server) over<br />
&gt; &gt; infrastructural Kubernetes and have a proper validation on every field<br />
&gt; &gt; user can input at a higher level.<br />
&gt;<br />
&gt; Actually, the reason I started looking into annotations is because they<br />
&gt; solved a problem we had, specifically about passing kernel boot options<br />
&gt; on a per-workload basis. So I conclude there are valid use cases where<br />
&gt; you would want them and still want the system to be secure.<br />
&gt;<br />
So your plan is to still expose such functionality to end users? If<br />
so, I&#x27;d suggest that we go the other way around: an explicit whitelist<br />
instead a blacklist.
</span></p>
<p><span class="foldable-quoted">&gt;<br />
&gt; &gt; Also while the executable options are more dangerous, other options<br />
&gt; &gt; might be used for an expolit as well. That&#x27;s why I think we should<br />
&gt; &gt; completely disable such config-<wbr />via-annotation for end users.<br />
&gt;<br />
&gt; I plan to review other options as well. This one is urgent and comes first.<br />
&gt; Other options may lead to exploits on a case-by-case basis, and indeed,<br />
&gt; they need to be carefully scrutinized.<br />
And as you identify each secure option, it can be put into the<br />
whitelist instead of being moving out of the blacklist.
</span></p>
<p>Cheers,<br />
Tao<br />
--<br />
Into Sth. Rich &amp; Strange</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">On Fri, May 15, 2020 at 3:40 PM Christophe de Dinechin
&lt;christophe@dinechin.org&gt; wrote:
&gt;
&gt; Sent reply this morning through email, but apparently the system is not
&gt; smart enough to update the bug!!!
&gt;
&gt; On 15 May 2020, at 08:20, Christophe de Dinechin
&gt; &lt;christophe.de.dinechin@gmail.com&gt; wrote:
&gt;
&gt; &gt; Le 15 mai 2020 à 05:35, Peng Tao &lt;1878234@bugs.launchpad.net&gt; a écrit
&gt; :
&gt;
&gt; &gt; ﻿What about adding a global config option to disable the config-via-
&gt; &gt; annotation property completely (and enable it by default)? Instead of
&gt; &gt; trying to identify and remove each risky annotation configs, we keep the
&gt; &gt; ability and warn about their usage.
&gt;
&gt; I think this is a good idea, but as an addition to the proposed fix, not
&gt; a replacement.
&gt;
&gt; If you decide to enable it, you should still not be allowed to execute
&gt; host binaries.
&gt;
Those options also have their valid use cases. For example, they would
allow easy rolling upgrade and fallback for each of these binaries.
Some additional validation/protection is OK but I don't think we
should completely disable them.

&gt; I will add the option in a next iteration of the patch series.
&gt;
&gt;
&gt; &gt; In general, config-via-annotation is not a capability we would like to
&gt; &gt; expose to end users. They are mostly targeting service providers who
&gt; &gt; wrap their own services (e.g., container or kerbenetes as a server) over
&gt; &gt; infrastructural Kubernetes and have a proper validation on every field
&gt; &gt; user can input at a higher level.
&gt;
&gt; Actually, the reason I started looking into annotations is because they
&gt; solved a problem we had, specifically about passing kernel boot options
&gt; on a per-workload basis. So I conclude there are valid use cases where
&gt; you would want them and still want the system to be secure.
&gt;
So your plan is to still expose such functionality to end users? If
so, I'd suggest that we go the other way around: an explicit whitelist
instead a blacklist.

&gt;
&gt; &gt; Also while the executable options are more dangerous, other options
&gt; &gt; might be used for an expolit as well. That's why I think we should
&gt; &gt; completely disable such config-via-annotation for end users.
&gt;
&gt; I plan to review other options as well. This one is urgent and comes first.
&gt; Other options may lead to exploits on a case-by-case basis, and indeed,
&gt; they need to be carefully scrutinized.
And as you identify each secure option, it can be put into the
whitelist instead of being moving out of the blacklist.

Cheers,
Tao
-- 
Into Sth. Rich &amp; Strange
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/8" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T09:38:42.086472+00:00" title="2020-05-15 09:38:42 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/8"> #8</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>So to summary what I have in mind:</p>
<p>Let&#x27;s add a global config option about how config annotation is handled:<br />
&nbsp;&nbsp;&nbsp;-. disabled (the default)<br />
&nbsp;&nbsp;&nbsp;-. whitelist: only config options that we have identified to be secure are allowed<br />
&nbsp;&nbsp;&nbsp;-. free-for-all: all config options are allowed to be altered via annotations, not for end users, upper layer should have proper validation on user&#x27;s input</p>
<p>What do you think?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">So to summary what I have in mind:

Let's add a global config option about how config annotation is handled:
   -. disabled (the default)
   -. whitelist: only config options that we have identified to be secure are allowed
   -. free-for-all: all config options are allowed to be altered via annotations, not for end users, upper layer should have proper validation on user's input

What do you think?</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/9" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T10:36:45.797048+00:00" title="2020-05-15 10:36:45 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/9"> #9</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>While having a global &quot;enable/disable&quot; flag makes a lot of sense,<br />
and is easy to implement and test (it&#x27;s basically one &quot;if&quot; in addAnnotations),<br />
I don&#x27;t like the &quot;free-for-<wbr />all/whitelist&quot; distinction, because it would<br />
add one more test for every single annotation.</p>
<p>There is no really good way to factor the annotation validation code,<br />
what you need is on a per-annotation basis. So I can&#x27;t have a single<br />
function distinguishing between whitelist and free-for-all at one spot.<br />
Distributing this test all over the place is fragile and error prone.</p>
<p>Does not mean it cannot be done, but it seems complicated and would<br />
certainly delay the fix. So in order to understand why we need it,<br />
could you give me some use cases where it would be useful and not<br />
unreasonably dangerous to select free-for-all?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">While having a global "enable/disable" flag makes a lot of sense,
and is easy to implement and test (it's basically one "if" in addAnnotations),
I don't like the "free-for-all/whitelist" distinction, because it would
add one more test for every single annotation.

There is no really good way to factor the annotation validation code,
what you need is on a per-annotation basis. So I can't have a single
function distinguishing between whitelist and free-for-all at one spot.
Distributing this test all over the place is fragile and error prone.

Does not mean it cannot be done, but it seems complicated and would
certainly delay the fix. So in order to understand why we need it,
could you give me some use cases where it would be useful and not
unreasonably dangerous to select free-for-all?

</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/10" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T12:48:49.301298+00:00" title="2020-05-15 12:48:49 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/10"> #10</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>For `free-for-all`, it is the infrastructure&#x27;s responsibility to make sure no such thing as a kata config annotation is passed by users. This is common for a cloud provider that would not really allow users to define any kata related pod annotations, while the service provider can still make use of kata&#x27;s annotations to do a lot of customization. IOW, like I&#x27;ve been repeated several times, IMO the config-<wbr />via-annotation functionality is not for end users. It is more targeting services providers who wrap their own services on top of kata and kubernetes.</p>
<p>It is ok to just introduce a simple `enable`/`disable` flag at a quick fix. But I don&#x27;t think we should disable part of the functionality w/o providing a way to enable them.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">For `free-for-all`, it is the infrastructure's responsibility to make sure no such thing as a kata config annotation is passed by users. This is common for a cloud provider that would not really allow users to define any kata related pod annotations, while the service provider can still make use of kata's annotations to do a lot of customization. IOW, like I've been repeated several times, IMO the config-via-annotation functionality is not for end users. It is more targeting services providers who wrap their own services on top of kata and kubernetes.

It is ok to just introduce a simple `enable`/`disable` flag at a quick fix. But I don't think we should disable part of the functionality w/o providing a way to enable them.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/11" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T13:24:14.896865+00:00" title="2020-05-15 13:24:14 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/11"> #11</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; It is ok to just introduce a simple `enable`/`disable` flag at a quick fix.<br />
&gt; But I don&#x27;t think we should disable part of the functionality w/o providing<br />
&gt; a way to enable them.
</span></p>
<p>That makes me wonder if you have missed the mechanism I proposed just for that in my patch.</p>
<p>Basically, if you want, say, to allow either /opt/kata/<wbr />bin/virtiofsd and /usr/local/<wbr />bin/virtiofsd, all you need in your config is:</p>
<p>virtio_<wbr />fs_daemon_<wbr />list = [ &quot;/opt/kata/<wbr />bin/virtiofsd&quot;<wbr />, &quot;/usr/local/<wbr />bin/virtiofsd&quot; ]</p>
<p>Then the mechanism works as before. You are just restricted as to which binaries are accepted in the annotation.</p>
<p>Right now, this is an exact match. It could be a glob, i.e. we could maybe accept /opt/kata/<wbr />bin/virtiofsd* as a valid entry in the list.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; It is ok to just introduce a simple `enable`/`disable` flag at a quick fix.
&gt; But I don't think we should disable part of the functionality w/o providing
&gt; a way to enable them.

That makes me wonder if you have missed the mechanism I proposed just for that in my patch.

Basically, if you want, say, to allow either /opt/kata/bin/virtiofsd and /usr/local/bin/virtiofsd, all you need in your config is:

virtio_fs_daemon_list = [ "/opt/kata/bin/virtiofsd", "/usr/local/bin/virtiofsd" ]

Then the mechanism works as before. You are just restricted as to which binaries are accepted in the annotation.

Right now, this is an exact match. It could be a glob, i.e. we could maybe accept /opt/kata/bin/virtiofsd* as a valid entry in the list.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/12" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T13:25:38.407885+00:00" title="2020-05-15 13:25:38 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/12"> #12</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>I believe the point I am making is that the policy of &quot;free-for-all&quot; should probably be per-annotation, and that it&#x27;s frankly easy enough to implement it using pattern matching, which would give better control and require less code (a single regexp test as opposed to testing different conditions at different places).</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">I believe the point I am making is that the policy of "free-for-all" should probably be per-annotation, and that it's frankly easy enough to implement it using pattern matching, which would give better control and require less code (a single regexp test as opposed to testing different conditions at different places).
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/13" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T13:47:21.435413+00:00" title="2020-05-15 13:47:21 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/13"> #13</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>On top of the already submitted series, using regexp matching would look like:</p>
<p>Author: Christophe de Dinechin &lt;email address hidden&gt;<br />
Date:   Fri May 15 15:42:08 2020 +0200</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;config: Match valid virtiofsd using regular expressions</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;This increases the configuration flexibiliy by allowing free-for-all<br />
&nbsp;&nbsp;&nbsp;&nbsp;annotations with arbitrary restrictions. For example, you can accept<br />
&nbsp;&nbsp;&nbsp;&nbsp;all variants of `virtiofsd` that are somewhere under `/usr`/ as well<br />
&nbsp;&nbsp;&nbsp;&nbsp;as one specifically installed under /opt/kata/<wbr />bin/virtiofsd by adding<br />
&nbsp;&nbsp;&nbsp;&nbsp;this to the configuration:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;virtio_<wbr />fs_daemon_<wbr />list = [ &quot;/opt/kata/<wbr />bin/virtiofsd&quot;<wbr />, &quot;/usr/.*/virtiofsd&quot; ]</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Suggested-by: Peng Tao &lt;email address hidden&gt;<br />
&nbsp;&nbsp;&nbsp;&nbsp;Signed-off-by: Christophe de Dinechin &lt;email address hidden&gt;</p>
<p>diff --git a/virtcontainer<wbr />s/pkg/oci/<wbr />utils.go b/virtcontainer<wbr />s/pkg/oci/<wbr />utils.go<br />
index b47583ec..533f5593 100644<br />
--- a/virtcontainer<wbr />s/pkg/oci/<wbr />utils.go<br />
+++ b/virtcontainer<wbr />s/pkg/oci/<wbr />utils.go<br />
@@ -11,6 +11,7 @@ import (<br />
&nbsp;&nbsp;&quot;fmt&quot;<br />
&nbsp;&nbsp;&quot;path/filepath&quot;<br />
&nbsp;&nbsp;goruntime &quot;runtime&quot;<br />
+	&quot;regexp&quot;<br />
&nbsp;&nbsp;&quot;strconv&quot;<br />
&nbsp;&nbsp;&quot;strings&quot;<br />
&nbsp;&nbsp;&quot;syscall&quot;<br />
@@ -194,6 +195,15 @@ func contains(s []string, e string) bool {<br />
&nbsp;&nbsp;return false<br />
&nbsp;}</p>
<p>+func regexpContains(s []string, e string) bool {<br />
+	for _, a := range s {<br />
+		if matched, _ := regexp.<wbr />MatchString(<wbr />a, e); matched {<br />
+			return true<br />
+		}<br />
+	}<br />
+	return false<br />
+}<br />
+<br />
&nbsp;func newLinuxDeviceI<wbr />nfo(d specs.LinuxDevice) (*config.<wbr />DeviceInfo, error) {<br />
&nbsp;&nbsp;allowedDevice<wbr />Types := []string{&quot;c&quot;, &quot;b&quot;, &quot;u&quot;, &quot;p&quot;}</p>
<p>@@ -663,7 +673,7 @@ func addHypervisporV<wbr />irtioFsOverride<wbr />s(ocispec specs.Spec, sbConfig *vc.SandboxCon<br />
&nbsp;&nbsp;}</p>
<p>&nbsp;&nbsp;if value, ok := ocispec.<wbr />Annotations[<wbr />vcAnnotations.<wbr />VirtioFSDaemon]<wbr />; ok {<br />
-		if !contains(<wbr />runtime.<wbr />HypervisorConfi<wbr />g.VirtioFSDaemo<wbr />nList, value) {<br />
+		if !regexpContains<wbr />(runtime.<wbr />HypervisorConfi<wbr />g.VirtioFSDaemo<wbr />nList, value) {<br />
&nbsp;&nbsp;&nbsp;&nbsp;return fmt.Errorf(<wbr />&quot;virtiofs daemon %v required from annotation is not valid&quot;, value)<br />
&nbsp;&nbsp;&nbsp;}<br />
&nbsp;&nbsp;&nbsp;sbConfig.<wbr />HypervisorConfi<wbr />g.VirtioFSDaemo<wbr />n = value</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">On top of the already submitted series, using regexp matching would look like:

Author: Christophe de Dinechin &lt;dinechin@redhat.com&gt;
Date:   Fri May 15 15:42:08 2020 +0200

    config: Match valid virtiofsd using regular expressions
    
    This increases the configuration flexibiliy by allowing free-for-all
    annotations with arbitrary restrictions. For example, you can accept
    all variants of `virtiofsd` that are somewhere under `/usr`/ as well
    as one specifically installed under /opt/kata/bin/virtiofsd by adding
    this to the configuration:
    
    virtio_fs_daemon_list = [ "/opt/kata/bin/virtiofsd", "/usr/.*/virtiofsd" ]
    
    Suggested-by: Peng Tao &lt;tao.peng@linux.alibaba.com&gt;
    Signed-off-by: Christophe de Dinechin &lt;dinechin@redhat.com&gt;

diff --git a/virtcontainers/pkg/oci/utils.go b/virtcontainers/pkg/oci/utils.go
index b47583ec..533f5593 100644
--- a/virtcontainers/pkg/oci/utils.go
+++ b/virtcontainers/pkg/oci/utils.go
@@ -11,6 +11,7 @@ import (
 	"fmt"
 	"path/filepath"
 	goruntime "runtime"
+	"regexp"
 	"strconv"
 	"strings"
 	"syscall"
@@ -194,6 +195,15 @@ func contains(s []string, e string) bool {
 	return false
 }
 
+func regexpContains(s []string, e string) bool {
+	for _, a := range s {
+		if matched, _ := regexp.MatchString(a, e); matched {
+			return true
+		}
+	}
+	return false
+}
+
 func newLinuxDeviceInfo(d specs.LinuxDevice) (*config.DeviceInfo, error) {
 	allowedDeviceTypes := []string{"c", "b", "u", "p"}
 
@@ -663,7 +673,7 @@ func addHypervisporVirtioFsOverrides(ocispec specs.Spec, sbConfig *vc.SandboxCon
 	}
 
 	if value, ok := ocispec.Annotations[vcAnnotations.VirtioFSDaemon]; ok {
-		if !contains(runtime.HypervisorConfig.VirtioFSDaemonList, value) {
+		if !regexpContains(runtime.HypervisorConfig.VirtioFSDaemonList, value) {
 			return fmt.Errorf("virtiofs daemon %v required from annotation is not valid", value)
 		}
 		sbConfig.HypervisorConfig.VirtioFSDaemon = value

</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/14" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~dgilbert-h" class="sprite person">Dr. David Alan Gilbert (dgilbert-h)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T13:53:18.887892+00:00" title="2020-05-15 13:53:18 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/14"> #14</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>My problem with that is what to do with &#x27;virtio_<wbr />fs_extra_<wbr />args&#x27; - on our C implementation I don&#x27;t think there&#x27;s anything too bad; but on the rust version you&#x27;re allowed to turn off sandboxing; and while I say &#x27;not too bad&#x27; - I owuldn&#x27;t always trust adding arbitrary extra args is safe.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">My problem with that is what to do with 'virtio_fs_extra_args' - on our C implementation I don't think there's anything too bad; but on the rust version you're allowed to turn off sandboxing; and while I say 'not too bad' - I owuldn't always trust adding arbitrary extra args is safe.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/15" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T14:14:42.598370+00:00" title="2020-05-15 14:14:42 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/15"> #15</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Yeah, I do understand your per-annotation whitelist approach. The problem is that users would have to predefine a list of acceptable values for every config option that is considered dangerous. Would it be too much for a user to configure? Other than the executables (shim,proxy,<wbr />qemu,virtiofsd)<wbr />, we have other options that is equally important (like kernel path, image path, initrd path, default vCPU number, default memory size, guest kernel parameters etc.). We just might have too many options for users to whitelist.</p>
<p>And to ease users pain of configuration, in my proposal, the `white-list` option actually means that we only allow a predefined (by us!) set of options that can accept annotation configuration.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Yeah, I do understand your per-annotation whitelist approach. The problem is that users would have to predefine a list of acceptable values for every config option that is considered dangerous. Would it be too much for a user to configure? Other than the executables (shim,proxy,qemu,virtiofsd), we have other options that is equally important (like kernel path, image path, initrd path, default vCPU number, default memory size, guest kernel parameters etc.). We just might have too many options for users to whitelist.

And to ease users pain of configuration, in my proposal, the `white-list` option actually means that we only allow a predefined (by us!) set of options that can accept annotation configuration.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/16" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T14:23:22.518166+00:00" title="2020-05-15 14:23:22 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/16"> #16</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Yes, Dave, I think none of the kata related configurations are for end users (I&#x27;m repeating myself once again ;-). That&#x27;s why I am proposing three level of annotation configurations:</p>
<p>-. disabled for the good</p>
<p>-. white-list: only allow part of the options to be changed via annotations, we are responsible for deciding which is safe enough to be exposed to end users</p>
<p>-. free-for-all: upper layer of the infrastructure have done enough validation, so we just provide all basic functionality and let upper layer decide. Usually this is the case none of the kata related options are allowed from end users by the infrastructure, but the infra itself can still use such functionality</p>
<p>If we think it is too complex to implement, we can just remove the middle one, and simply have a global disable/enable button for the annotation configurations.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Yes, Dave, I think none of the kata related configurations are for end users (I'm repeating myself once again ;-). That's why I am proposing three level of annotation configurations:

-. disabled for the good

-. white-list: only allow part of the options to be changed via annotations, we are responsible for deciding which is safe enough to be exposed to end users

-. free-for-all: upper layer of the infrastructure have done enough validation, so we just provide all basic functionality and let upper layer decide. Usually this is the case none of the kata related options are allowed from end users by the infrastructure, but the infra itself can still use such functionality

If we think it is too complex to implement, we can just remove the middle one, and simply have a global disable/enable button for the annotation configurations.
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/17" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T14:28:01.631737+00:00" title="2020-05-15 14:28:01 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/17"> #17</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Exploring the code a little more, I see that</p>
<p>a) While there is an annotation for hypervisor.path, it&#x27;s not implemented<br />
b) Implementing does not work at least for qemu because qemuPath() goes straight to asserts.<br />
c) This led me to discover that there is another way to override paths.</p>
<p>So now I need to make sure there isn&#x27;t an issue with assets as well.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Exploring the code a little more, I see that 

a) While there is an annotation for hypervisor.path, it's not implemented
b) Implementing does not work at least for qemu because qemuPath() goes straight to asserts.
c) This led me to discover that there is another way to override paths.

So now I need to make sure there isn't an issue with assets as well.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/18" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T15:22:39.926736+00:00" title="2020-05-15 15:22:39 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/18"> #18</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; The problem is that users would have to predefine a list of acceptable<br />
&gt; values for every config option that is considered dangerous.
</span></p>
<p>Well, the way I&#x27;m currently doing it is to just have a comment-out list<br />
in the template configuration files. In other words, something like this:</p>
<p># List of valid annotations values for the virtiofs daemon (default: empty)<br />
# virtio_<wbr />fs_daemon_<wbr />list = [ &quot;/opt/kata/<wbr />bin/virtiofsd&quot;<wbr />, &quot;/usr/.*/virtiofsd&quot; ]</p>
<p>So we get to choose what we see as a valid default. If the user wants to<br />
enable our list, it&#x27;s simply one commenting-out away. Not that difficult.</p>
<p><span class="foldable-quoted">&gt; If we think it is too complex to implement, we can just remove the<br />
&gt; middle one, and simply have a global disable/enable button for the<br />
&gt; annotation configurations.
</span></p>
<p>The middle one is the one that is easy to implement, and the way I did it with regexps now, it also trivially allows whitelisting.</p>
<p>If you want a global whitelisting free-for-all, it then becomes nothing more than us providing a reasonable configuration-<wbr />ffoa.toml.<wbr />in (where ffoa stands for &quot;free for all&quot;) with reasonably set &quot;.*&quot; values at the right spots (sometimes, &quot;reasonable&quot; might be something like allowing something named virtiofsd anywhere under /opt or /usr, or allowing anything that has vmlinu in it anywhere, etc.</p>
<p>In short, I believe I have implemented exactly what you want, except that it&#x27;s not an option called &quot;enable_<wbr />annootations = free-for-all&quot; with hard-coded values in the code, it&#x27;s a default configuration file that exposes the mechanism and lets the user tweak it. To me, this is more functional, somewhat safer, and more importantly, way easier to implement that way (as in it&#x27;s already ready to go for hypervisor and virtiofsd paths).</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; The problem is that users would have to predefine a list of acceptable
&gt; values for every config option that is considered dangerous.

Well, the way I'm currently doing it is to just have a comment-out list
in the template configuration files. In other words, something like this:

# List of valid annotations values for the virtiofs daemon (default: empty)
# virtio_fs_daemon_list = [ "/opt/kata/bin/virtiofsd", "/usr/.*/virtiofsd" ]

So we get to choose what we see as a valid default. If the user wants to
enable our list, it's simply one commenting-out away. Not that difficult.

&gt; If we think it is too complex to implement, we can just remove the
&gt; middle one, and simply have a global disable/enable button for the
&gt; annotation configurations.

The middle one is the one that is easy to implement, and the way I did it with regexps now, it also trivially allows whitelisting.

If you want a global whitelisting free-for-all, it then becomes nothing more than us providing a reasonable configuration-ffoa.toml.in (where ffoa stands for "free for all") with reasonably set ".*" values at the right spots (sometimes, "reasonable" might be something like allowing something named virtiofsd anywhere under /opt or /usr, or allowing anything that has vmlinu in it anywhere, etc.

In short, I believe I have implemented exactly what you want, except that it's not an option called "enable_annootations = free-for-all" with hard-coded values in the code, it's a default configuration file that exposes the mechanism and lets the user tweak it. To me, this is more functional, somewhat safer, and more importantly, way easier to implement that way (as in it's already ready to go for hypervisor and virtiofsd paths).</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/19" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T16:02:04.950607+00:00" title="2020-05-15 16:02:04 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/19"> #19</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Yeah, it works from functionality point of view. My only concern is that it makes it harder for users to actually change the configuration file. Kata configuration would become more complex than it already is, because we would have to list all possible combinations (well, at least most of them) for most config options. Yeah, regex helps, but it still would be pretty complex for a configuration file. Ease of use has been one of our targets for a long time. I&#x27;m not sure if ease of configuration is part of it though. Anyway, it is just my feeling. Others might think it is just fine. I guess you can send a PR and let the community decide.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Yeah, it works from functionality point of view. My only concern is that it makes it harder for users to actually change the configuration file. Kata configuration would become more complex than it already is, because we would have to list all possible combinations (well, at least most of them) for most config options. Yeah, regex helps, but it still would be pretty complex for a configuration file. Ease of use has been one of our targets for a long time. I'm not sure if ease of configuration is part of it though. Anyway, it is just my feeling. Others might think it is just fine. I guess you can send a PR and let the community decide.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/20" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T17:32:32.662345+00:00" title="2020-05-15 17:32:32 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/20"> #20</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Who is responsible for filing a CVE for Kata? Should one be created here for people using this in production?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Who is responsible for filing a CVE for Kata? Should one be created here for people using this in production?</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/21" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-15T17:43:35.635060+00:00" title="2020-05-15 17:43:35 UTC">on 2020-05-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/21"> #21</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+attachment/5372233/+files/host-execution-vulnerability.patch">Patch arbitrary host execution vulnerability in kata runtime</a>
        <a class="sprite edit action-icon" href="/katacontainers.io/+bug/1878234/+attachment/5372233">Edit</a>
        (36.6 KiB,
        text/plain)
      </li>
    </ul>

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>A more complete patch is attached. This addresses the vulnerabilities I could find related to path handling. It also implements two missing annotations to make sure that this is done correctly and consistently.</p>
<p>The common approach in all cases is that for each dangerous &quot;path&quot; configuration that can be set through annotations, a matching &quot;patch_list&quot; configuration has been added that filters which annotations are accepted for &quot;path&quot;. This lets system administrators indicate what kind of annotation they are willing to accept on their system. For example:</p>
<p>[hypervisor]<br />
path = /usr/bin/qemu<br />
path_list = [ &quot;/usr/bin/qemu&quot;, &quot;/opt/kata/<wbr />bin/qemu&quot; ]</p>
<p>At Peng Tao&#x27;s suggestion, I added the possibility of &quot;wildcard&quot; filtering using regular expressions. So you can for example configure as follows:</p>
<p>[hypervisor]<br />
path = /usr/bin/qemu<br />
path_list = [ &quot;/usr/.*/qemu.*&quot;, &quot;/opt/.*/qemu.*&quot; ]</p>
<p>While code-wise, this is extremely simple (one-line difference between text match and regexp match), some of my colleagues are a bit concerned that this presents a misconfiguration risk. One of the possible misconfigurations is explained in the configuration examples. Please read the configuration-<wbr />qemu.toml.<wbr />in and variants for an explanation.</p>
<p>I&#x27;m personally in favor of trusting sysadmins, in particular if we present them with relatively solid defaults and documents that lists of paths are safer than regexps. But I know of at least one colleague who thinks otherwise.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">A more complete patch is attached. This addresses the vulnerabilities I could find related to path handling. It also implements two missing annotations to make sure that this is done correctly and consistently.

The common approach in all cases is that for each dangerous "path" configuration that can be set through annotations, a matching "patch_list" configuration has been added that filters which annotations are accepted for "path". This lets system administrators indicate what kind of annotation they are willing to accept on their system. For example:

[hypervisor]
path = /usr/bin/qemu
path_list = [ "/usr/bin/qemu", "/opt/kata/bin/qemu" ]

At Peng Tao's suggestion, I added the possibility of "wildcard" filtering using regular expressions. So you can for example configure as follows:

[hypervisor]
path = /usr/bin/qemu
path_list = [ "/usr/.*/qemu.*", "/opt/.*/qemu.*" ]

While code-wise, this is extremely simple (one-line difference between text match and regexp match), some of my colleagues are a bit concerned that this presents a misconfiguration risk. One of the possible misconfigurations is explained in the configuration examples. Please read the configuration-qemu.toml.in and variants for an explanation.

I'm personally in favor of trusting sysadmins, in particular if we present them with relatively solid defaults and documents that lists of paths are safer than regexps. But I know of at least one colleague who thinks otherwise.
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/22" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~fidencio" class="sprite person">fidencio (fidencio)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-16T09:38:43.120926+00:00" title="2020-05-16 09:38:43 UTC">on 2020-05-16</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/22"> #22</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>So, before going through the patches, I&#x27;d like to have an agreement on what will be a reasonably okay solution.</p>
<p>The problem is real, and it is CVE material as annotations can just be added by any user.</p>
<p>I see two different levels where a solution should be applied:<br />
* The use of a mandatory validating web-hook, which cannot be enforced by the kata project as it sits in an upper layer in the stack;</p>
<p>* The use of an allowed list of binaries, which can easily be enforced by distributions and easily extended by administrators;</p>
<p>I personally see the former as desired and the latter as required to solve the raised by Christophe.</p>
<p>Some thoughts about the requirements for the implementation of having an allowed list of binaries:<br />
* It must be (also) configurable via build time, then distributions have an easy way to enforce this;</p>
<p>* It must not have support for regular expressions;<br />
&nbsp;&nbsp;- It is easy to get something wrong with regular expressions;<br />
&nbsp;&nbsp;- In a real world use-case, I cannot see the number of allowed binaries reaching two digits per a single option, meaning that explicitly adding one or two more paths to the list is not costly at all;<br />
&nbsp;&nbsp;- Christophe mentions &quot;trusting sysadmins&quot;, and it has absolutely nothing to do with my point;<br />
&nbsp;&nbsp;- It opens another holes in the security, as shown by the need of adding the following warning: &quot;SECURITY WARNING: If you use regular expressions, be mindful that an attacker could craft an annotation that uses .. to escape the paths you gave.&quot;<br />
&nbsp;&nbsp;&nbsp;&nbsp;- It just feels the same as adding a security warning on the annotations usage itself;</p>
<p>* Do not add ways to allow a security issue to exist or do not add ways to disable a behaviour added by a security fix;<br />
&nbsp;&nbsp;- It will make one&#x27;s life harder by configuring a few more paths? It&#x27;ll, but I fail to see this as an excuse for leaving a security hole open;</p>
<p>I would really like to hear opinions about the suggestions given on how to address the issue, to learn about points I probably missed, and to have an agreement on the solution to be implement at the first place.</p>
<p>Does this make sense to everyone involved?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">So, before going through the patches, I'd like to have an agreement on what will be a reasonably okay solution.

The problem is real, and it is CVE material as annotations can just be added by any user.

I see two different levels where a solution should be applied:
* The use of a mandatory validating web-hook, which cannot be enforced by the kata project as it sits in an upper layer in the stack;

* The use of an allowed list of binaries, which can easily be enforced by distributions and easily extended by administrators;


I personally see the former as desired and the latter as required to solve the raised by Christophe.

Some thoughts about the requirements for the implementation of having an allowed list of binaries:
* It must be (also) configurable via build time, then distributions have an easy way to enforce this;

* It must not have support for regular expressions;
  - It is easy to get something wrong with regular expressions;
  - In a real world use-case, I cannot see the number of allowed binaries reaching two digits per a single option, meaning that explicitly adding one or two more paths to the list is not costly at all;
  - Christophe mentions "trusting sysadmins", and it has absolutely nothing to do with my point;
  - It opens another holes in the security, as shown by the need of adding the following warning: "SECURITY WARNING: If you use regular expressions, be mindful that an attacker could craft an annotation that uses .. to escape the paths you gave."
    - It just feels the same as adding a security warning on the annotations usage itself;

* Do not add ways to allow a security issue to exist or do not add ways to disable a behaviour added by a security fix;
  - It will make one's life harder by configuring a few more paths? It'll, but I fail to see this as an excuse for leaving a security hole open;

I would really like to hear opinions about the suggestions given on how to address the issue, to learn about points I probably missed, and to have an agreement on the solution to be implement at the first place.

Does this make sense to everyone involved?</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/23" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-16T17:57:15.974258+00:00" title="2020-05-16 17:57:15 UTC">on 2020-05-16</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/23"> #23</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>First of all, IMO the idea of exposing config-<wbr />via-annotation functionality to end users is dangerous itself.</p>
<p>Other than the binary paths, there are a lot of other config options that also need to be filtered if they come from a random end user. For example, the default vcpu and memory size, the ability to preallocate guest memory, the ability to disable swap for guest memory, they can also cause serious problems for the infrastructure. And there are less-dangerous options like whether 9pfs or virtiofs is used, or which networking model is used, or if any experimental features are enabled, -- they can also cause unexpected chaos for the system.</p>
<p>So the white-list solution proposed by Christophe cannot be a complete solution until every option is properly reviewed and white-listed. And it throws another question, how do you white-list a boolean option?</p>
<p>So instead of jumping to a solution, I&#x27;d like to ask get a consensus on what want to provide first.</p>
<p>1. We *do not* want end users to customize kata containers via annotations.<br />
2. We *want* to allow infrastructure to customize kata containers via annotations.</p>
<p>Can we agree on the above two points?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">First of all, IMO the idea of exposing config-via-annotation functionality to end users is dangerous itself.

Other than the binary paths, there are a lot of other config options that also need to be filtered if they come from a random end user. For example, the default vcpu and memory size, the ability to preallocate guest memory, the ability to disable swap for guest memory, they can also cause serious problems for the infrastructure. And there are less-dangerous options like whether 9pfs or virtiofs is used, or which networking model is used, or if any experimental features are enabled, -- they can also cause unexpected chaos for the system.

So the white-list solution proposed by Christophe cannot be a complete solution until every option is properly reviewed and white-listed. And it throws another question, how do you white-list a boolean option?

So instead of jumping to a solution, I'd like to ask get a consensus on what want to provide first.

1. We *do not* want end users to customize kata containers via annotations.
2. We *want* to allow infrastructure to customize kata containers via annotations.

Can we agree on the above two points?
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/24" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-16T18:24:12.847892+00:00" title="2020-05-16 18:24:12 UTC">on 2020-05-16</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/24"> #24</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>My opinion on the issues raised by Fiencio and Peng Tao fits in one sentence: when you have a big hole in your ship, you first plug it, and only then discuss how to repair the rest of the ship.</p>
<p>This bug is extremely serious. It *presently* allows any remote user to reboot any host in a cluster, install malware, erase its filesystem, or worse.</p>
<p>So now is NOT the time to discuss the sex of angels, certainly not on a private bug. I will simply not engage in such discussion at the moment. We should do that after plugging the hole, and we should do that in public.</p>
<p>The question right now is whether my patch plugs the hole or not in systems that either install the default or existing configuration files. That&#x27;s the only relevant question. If it does, then just get the thing in, warn existing users via a CVE, and get production systems patched in the wild as quickly as possible.</p>
<p>Then, AFTER THIS IS DONE, we can discuss later, on the mailing list, if we want to remove regexps, if there is any serious security risk for other options.</p>
<p>That being said, I will quickly address Peng Tao&#x27;s and Fidencio&#x27;s objections.</p>
<p>- Peng Tao: I disagree with your point 1. The reason I discovered the hole is precisely because I was about to construct a similar mechanism, only to be told it existed already. We can debate why this is necessary on the mailing list.</p>
<p>- Fidencio: We can also debate on regexp. It is a very secondary part of the patch, specifically the test in the &quot;regexpContains&quot; function. So easy to change later if there is a consensus. Right now, I&#x27;d argue that it absolutely does not matter, because the default is an empty list, so whether you use the default config or some existing config, you don&#x27;t allow these annotations. Annotations being off by default, the hole is plugged unless a sysadmin ignores the warning and explicitly adds a somewhat hard to discover option. In short, I made the hosts safe by default, and right now, this is what matters.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">My opinion on the issues raised by Fiencio and Peng Tao fits in one sentence: when you have a big hole in your ship, you first plug it, and only then discuss how to repair the rest of the ship.

This bug is extremely serious. It *presently* allows any remote user to reboot any host in a cluster, install malware, erase its filesystem, or worse.

So now is NOT the time to discuss the sex of angels, certainly not on a private bug. I will simply not engage in such discussion at the moment. We should do that after plugging the hole, and we should do that in public.

The question right now is whether my patch plugs the hole or not in systems that either install the default or existing configuration files. That's the only relevant question. If it does, then just get the thing in, warn existing users via a CVE, and get production systems patched in the wild as quickly as possible.

Then, AFTER THIS IS DONE, we can discuss later, on the mailing list, if we want to remove regexps, if there is any serious security risk for other options.


That being said, I will quickly address Peng Tao's and Fidencio's objections.

- Peng Tao: I disagree with your point 1. The reason I discovered the hole is precisely because I was about to construct a similar mechanism, only to be told it existed already. We can debate why this is necessary on the mailing list.

- Fidencio: We can also debate on regexp. It is a very secondary part of the patch, specifically the test in the "regexpContains" function. So easy to change later if there is a consensus. Right now, I'd argue that it absolutely does not matter, because the default is an empty list, so whether you use the default config or some existing config, you don't allow these annotations. Annotations being off by default, the hole is plugged unless a sysadmin ignores the warning and explicitly adds a somewhat hard to discover option. In short, I made the hosts safe by default, and right now, this is what matters.

</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/25" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-16T20:40:01.364386+00:00" title="2020-05-16 20:40:01 UTC">on 2020-05-16</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/25"> #25</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Here is what I believe are objective criteria for a fix:</p>
<p>1. Must address the issue immediately<br />
2. Must not remove or break existing functionality<br />
3. If there is a conflict between 1 and 2, provide an option to restore functionality.<br />
4. Be easy to use, well documented, idiot-proof, good looking and planet-friendly.</p>
<p>Point 1 is the reason for my comments about this being an emergency, and rejecting the characterisation of &quot;jumping to a solution&quot;.</p>
<p>Point 2 is the reason why I disagree with Tao. The &quot;fix&quot; to a problem like this is not to unilaterally and without public discussion remove a feature that actual production systems may rely on. Irrespective of whether this feature was reasonable to start with or not (we may debate on this later), the undisputed fact is that this feature is there right now, so a fix that would just disable all annotations is actually a risk more than a solution (notably, the risk that folks will not upgrade because we broke their use case).</p>
<p>Point 3 is the reason why I disagree with Fabiano. Until someone can prove to me that there is no QE system somewhere dropping nightly builds of qemu in a known location and testing them through an annotation, I&#x27;m reluctant to not being able to offer some wildcarding mechanism. This is the reason I immediately agreed with Tao&#x27;s initial wildcarding suggestion, not some dark wish to over-engineer things ;-) Like for point 2, failing to provide a fall-back mechanism is a risk, because it may prevent some people from accepting the fix.</p>
<p>I fully appreciate and understand the points made by both Tao and Fabianno, and I want to have this discussion. However, IMHO, that discussion must happen in public and only once the hole has been plugged. For now, I&#x27;d rather have eyes on the proposed fix, not some bike shedding.</p>
<p>Therefore, I submit to the court that the only relevant question right now is whether my fix makes systems secure again *by default*. We can debate later how to make it easier to configure or how to protect lower-risk annotations, or even debate about the whole annotation thing, RBAC, etc.</p>
<p>Also, nobody answered my question about CVEs ;-)</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Here is what I believe are objective criteria for a fix:

1. Must address the issue immediately
2. Must not remove or break existing functionality
3. If there is a conflict between 1 and 2, provide an option to restore functionality.
4. Be easy to use, well documented, idiot-proof, good looking and planet-friendly.

Point 1 is the reason for my comments about this being an emergency, and rejecting the characterisation of "jumping to a solution".

Point 2 is the reason why I disagree with Tao. The "fix" to a problem like this is not to unilaterally and without public discussion remove a feature that actual production systems may rely on. Irrespective of whether this feature was reasonable to start with or not (we may debate on this later), the undisputed fact is that this feature is there right now, so a fix that would just disable all annotations is actually a risk more than a solution (notably, the risk that folks will not upgrade because we broke their use case).

Point 3 is the reason why I disagree with Fabiano. Until someone can prove to me that there is no QE system somewhere dropping nightly builds of qemu in a known location and testing them through an annotation, I'm reluctant to not being able to offer some wildcarding mechanism. This is the reason I immediately agreed with Tao's initial wildcarding suggestion, not some dark wish to over-engineer things ;-) Like for point 2, failing to provide a fall-back mechanism is a risk, because it may prevent some people from accepting the fix.

I fully appreciate and understand the points made by both Tao and Fabianno, and I want to have this discussion. However, IMHO, that discussion must happen in public and only once the hole has been plugged. For now, I'd rather have eyes on the proposed fix, not some bike shedding.

Therefore, I submit to the court that the only relevant question right now is whether my fix makes systems secure again *by default*. We can debate later how to make it easier to configure or how to protect lower-risk annotations, or even debate about the whole annotation thing, RBAC, etc.


Also, nobody answered my question about CVEs ;-)</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/26" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~fidencio" class="sprite person">fidencio (fidencio)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-16T21:18:17.242466+00:00" title="2020-05-16 21:18:17 UTC">on 2020-05-16</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/26"> #26</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Christophe.</p>
<p>We&#x27;re discussing the solution and we&#x27;re doing it with the right audience.</p>
<p>I understand we disagree, that&#x27;s fine, but the decision should not be taken between what you, Tao, and I think. There&#x27;s a reason a committee is present to deal with such issues.</p>
<p>Also, it&#x27;s a Saturday night. You raised your question one day ago.</p>
<p>Please, give people time read the whole thread, to digest your questions, and then they&#x27;ll give their answers.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Christophe.

We're discussing the solution and we're doing it with the right audience.

I understand we disagree, that's fine, but the decision should not be taken between what you, Tao, and I think. There's a reason a committee is present to deal with such issues.

Also, it's a Saturday night. You raised your question one day ago.

Please, give people time read the whole thread, to digest your questions, and then they'll give their answers.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/27" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-16T22:11:08.883633+00:00" title="2020-05-16 22:11:08 UTC">on 2020-05-16</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/27"> #27</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; We&#x27;re discussing the solution
</span></p>
<p>Well, part of my concern is that I feel we are not discussing the solution I proposed as much as spending a lot of time imagining alternatives. That&#x27;s what I referred to as bike shedding.</p>
<p>Should we spend time on</p>
<p>a) fact: does the patch prevents remote execution by default?</p>
<p>or</p>
<p>b) opinion: can we trust sysadmins with regexps?</p>
<p>c) opinion: should we allow annotations?</p>
<p>I say please focus on (a) for now. Discussions (b) and (c) are important, but they could happen in public once (a) is done and some patch is widely available. I don&#x27;t mind at all if we patch over my patch to do all kinds of other things. It&#x27;s just not urgent.</p>
<p><span class="foldable-quoted">&gt; Also, it&#x27;s a Saturday night. You raised your question one day ago.
</span></p>
<p>I assume you are talking about the CVE question? I remember asking it on Tuesday, which is how I learned about the process to follow. I asked again one day ago, because I want to be super-extra-duper sure that I&#x27;m not the one supposed to write the KCSA described in <a rel="nofollow" href="https://github.com/kata-containers/community/blob/master/VMT/VMT.md">https:/<wbr />/github.<wbr />com/kata-<wbr />containers/<wbr />community/<wbr />blob/master/<wbr />VMT/VMT.<wbr />md</a>. According to the doc, the VMT is supposed to do it, and I&#x27;m not a VMT member. But maybe everybody assumes that since I reported it, I&#x27;m the one who would at least draft the KCSA?</p>
<p>Anyway, Kata is about &quot;security&quot;. I&#x27;m not saying it, the project is claiming that. Top title on the web page: &quot;the security of VMs&quot;. So you&#x27;d expect that a security hole that opens a root-access backdoor for remote execution would be a kind of &quot;red alert, all hands on deck&quot; situation where &quot;Saturday&quot; would not count as a valid counter argument ;-)</p>
<p>The project&#x27;s credibility on the security front depends on how it reacts to such problems.</p>
<p>Anyway, it&#x27;s Sunday for me now ;-)</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; We're discussing the solution

Well, part of my concern is that I feel we are not discussing the solution I proposed as much as spending a lot of time imagining alternatives. That's what I referred to as bike shedding.

Should we spend time on

a) fact: does the patch prevents remote execution by default?

or

b) opinion: can we trust sysadmins with regexps?

c) opinion: should we allow annotations?

I say please focus on (a) for now. Discussions (b) and (c) are important, but they could happen in public once (a) is done and some patch is widely available. I don't mind at all if we patch over my patch to do all kinds of other things. It's just not urgent.

&gt; Also, it's a Saturday night. You raised your question one day ago.

I assume you are talking about the CVE question? I remember asking it on Tuesday, which is how I learned about the process to follow. I asked again one day ago, because I want to be super-extra-duper sure that I'm not the one supposed to write the KCSA described in https://github.com/kata-containers/community/blob/master/VMT/VMT.md. According to the doc, the VMT is supposed to do it, and I'm not a VMT member. But maybe everybody assumes that since I reported it, I'm the one who would at least draft the KCSA?

Anyway, Kata is about "security". I'm not saying it, the project is claiming that. Top title on the web page: "the security of VMs". So you'd expect that a security hole that opens a root-access backdoor for remote execution would be a kind of "red alert, all hands on deck" situation where "Saturday" would not count as a valid counter argument ;-)

The project's credibility on the security front depends on how it reacts to such problems.

Anyway, it's Sunday for me now ;-)</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/28" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-17T03:11:29.149363+00:00" title="2020-05-17 03:11:29 UTC">on 2020-05-17</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/28"> #28</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Christophe, for a quick fix, a single enable/disable flag is much easier to implement and maintain than a white-list. The latter one is more complex than you think. All the options I listed in my previous reply are not supposed to be altered by a random user. My fear is that you might end up with filtering just the binary paths. I would like to ask what is the long term plan going your direction? I would prefer a simple boolean flag (which is also a quick fix) if there is no long term plan on how the other options are handled.</p>
<p>To be specific, I was asking:<br />
1. will there be a classification of user-modifiable options and non-user-modifiable options?<br />
2. will sysadmin be able to modify the classification?</p>
<p>If I understand your messages correctly, the answers are two YES. Then I agree with your solution. But please confirm if we are on the same page.</p>
<p>And w.r.t. filing new CVEs, anyone can file a CVE. VMT will be responsible for triaging the security issue and coordinate the progressive disclosure of a vulnerability. We&#x27;ve handled several CVEs before and they all come from outside reporters.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Christophe, for a quick fix, a single enable/disable flag is much easier to implement and maintain than a white-list. The latter one is more complex than you think. All the options I listed in my previous reply are not supposed to be altered by a random user. My fear is that you might end up with filtering just the binary paths. I would like to ask what is the long term plan going your direction? I would prefer a simple boolean flag (which is also a quick fix) if there is no long term plan on how the other options are handled.

To be specific, I was asking:
1. will there be a classification of user-modifiable options and non-user-modifiable options?
2. will sysadmin be able to modify the classification?

If I understand your messages correctly, the answers are two YES. Then I agree with your solution. But please confirm if we are on the same page.

And w.r.t. filing new CVEs, anyone can file a CVE. VMT will be responsible for triaging the security issue and coordinate the progressive disclosure of a vulnerability. We've handled several CVEs before and they all come from outside reporters.
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/29" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~fidencio" class="sprite person">fidencio (fidencio)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T06:05:24.868120+00:00" title="2020-05-18 06:05:24 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/29"> #29</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Christophe,</p>
<p>I&#x27;m sorry you feel an easy way for distros to start using your changes right away is discussing the sex of angels. It&#x27;s not, having the options being set during build time would just ease the adoption of the fix by the distros.</p>
<p>I&#x27;d like to ask you, please, be humble enough to understand people who more experience in the project may take their time to review your comments, to make suggestions, and that the suggestions my be different than what you proposed (or not).</p>
<p>If it happens to be the case, please, be humble enough to listen to the ideas, try to learn from them, instead of forcing yours.</p>
<p>Anyways, it&#x27;s been made clear my suggestions are not valid nor welcome here.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Christophe,

I'm sorry you feel an easy way for distros to start using your changes right away is discussing the sex of angels. It's not, having the options being set during build time would just ease the adoption of the fix by the distros.

I'd like to ask you, please, be humble enough to understand people who more experience in the project may take their time to review your comments, to make suggestions, and that the suggestions my be different than what you proposed (or not).

If it happens to be the case, please, be humble enough to listen to the ideas, try to learn from them, instead of forcing yours.

Anyways, it's been made clear my suggestions are not valid nor welcome here.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/30" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~fidencio" class="sprite person">fidencio (fidencio)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T06:08:56.030270+00:00" title="2020-05-18 06:08:56 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/30"> #30</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Sorry for the typos, not enough coffee in the morning yet.</p>
<p>* people who have more experience ...<br />
* suggestions may be different ...</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Sorry for the typos, not enough coffee in the morning yet.

* people who have more experience ...
* suggestions may be different ...</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          

          
              <div class="boardComment">
  <div class="boardCommentDetails">
    
      <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
    
    <time title="2020-05-18 07:21:13 UTC" datetime="2020-05-18T07:21:13.890510+00:00">on 2020-05-18</time>
  </div>
  <div class="boardCommentActivity">
    <table class="bug-activity">
  
    
      
    
    <tr>
      <td style="text-align: right;">
        <b>description</b>:
      </td>
      <td>
        updated
      </td>
    </tr>
    <tr>
      <td style="text-align: right;">
        <b>description</b>:
      </td>
      <td>
        updated
      </td>
    </tr>
  
  
    
      <tr>
        <td colspan="2">Changed in katacontainers.io: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>importance</b>:
      </td>
      <td>
        Undecided &#8594; Critical
      </td>
    </tr>
  
</table>
  </div>
</div>
          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/31" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T07:37:02.432165+00:00" title="2020-05-18 07:37:02 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/31"> #31</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite download-icon" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+attachment/5373236/+files/KCSA-2020-0001-draft">draft-KCSA</a>
        <a class="sprite edit action-icon" href="/katacontainers.io/+bug/1878234/+attachment/5373236">Edit</a>
        (1.3 KiB,
        text/plain)
      </li>
    </ul>

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>I&#x27;m attaching a KCSA draft here so that once we have a CVE number and a fix in-place, we can fill in the form and send it out.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">I'm attaching a KCSA draft here so that once we have a CVE number and a fix in-place, we can fill in the form and send it out.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/32" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T07:44:10.079197+00:00" title="2020-05-18 07:44:10 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/32"> #32</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  <a href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/comments/32/+download">Download full text</a> (5.5 KiB)
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Peng Tao,</p>
<p><span class="foldable-quoted">&gt; a single enable/disable flag is much easier to implement and maintain than a white-list.
</span></p>
<p>1) It&#x27;s not really simpler. It&#x27;s a flag check instead of a function call. The three-state variant you suggested in #16 is clearly more complicated, which is when I noticed that regexps were addressing your concerns while keeping the patch simple.</p>
<p>2) It&#x27;s not a long term solution, but a &quot;quick fix&quot; that does not address the criteria I outlined in #25. This implies that we would then need to replace it with something else. Do we want to offer an option to user, then walk it back and offer another one later? Why would you prefer that?</p>
<p>3) It&#x27;s also not simpler in the sense that there is no patch for it. Again, I really invite you to focus on the existing patch, and check if it solves the problem and if it can be amended later (i.e. if it would not require a walk-back).</p>
<p><span class="foldable-quoted">&gt; The latter one is more complex than you think.
</span></p>
<p>Why do you think so? What is missing in my patch? Have you reviewed my patch?</p>
<p><span class="foldable-quoted">&gt; All the options I listed in my previous reply are not<br />
&gt; supposed to be altered by a random user.
</span></p>
<p>But they can be altered by random users today.</p>
<p>This is another issue with the simple flag: it only gives back functionality to those who need it by re-exposing the bug entirely. This is what I called a &quot;risk&quot; in my response to you in comment #25.</p>
<p><span class="foldable-quoted">&gt; My fear is that you might end up with filtering just the binary paths.
</span></p>
<p>Have you reviewed my patch?</p>
<p>It does filter only paths, because right now this is where the bug is. You cannot remote execute with other annotations. The dangerous bug today is remote execution.</p>
<p>I am not saying there is no risk on other annotations. However, I have reviewed them, and so far, my evaluation of the risk for all other annotations is that it is negligible *relative to* the ability to execute arbitrary code.</p>
<p>Specifically:</p>
<p>- Annotations that configure the guest kernel, including boot options, kernel image, guest hook paths, etc, are normally contained by the VM layer. It may make administrative sense to provide similar filtering for them, but it&#x27;s not a security issue for the host unless there is a flaw in the hypervisor.</p>
<p>- Annotations that configure the guest, e.g. memory size, do require scrutiny. For example, memory could be use for denial-of-service attacks. We need to have a discussion on the mailing list on how to fix it. While there is a security risk, it is somewhat second-order relative to the ability to copy all data from the host to some remote machine or wipe its content clean.</p>
<p><span class="foldable-quoted">&gt; I would like to ask what is the long term plan going your direction?
</span></p>
<p>I will split your question in three:</p>
<p>a) Is there a long term plan for the path filtering options in the patch I submitted: I tried to design them to address your earlier comment #5 and #8. I explained why a *global* option does not work, but I modified the *per-path* option to address your concern about making &quot;free-for-all&quot; possible (although the regexp approach has the additional benefit that you can restrict the free-for all, e.g. allow only /usr/bin/qemu.* and not any path).</p>
<p>b) Is there a long term plan for other annotations: Yes, they need to be reviewed car...</p></div>
    
    <p>
      <a href="/katacontainers.io/+bug/1878234/comments/32">Read more...</a>
    </p>
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Peng Tao,

&gt; a single enable/disable flag is much easier to implement and maintain than a white-list.

1) It's not really simpler. It's a flag check instead of a function call. The three-state variant you suggested in #16 is clearly more complicated, which is when I noticed that regexps were addressing your concerns while keeping the patch simple.

2) It's not a long term solution, but a "quick fix" that does not address the criteria I outlined in #25. This implies that we would then need to replace it with something else. Do we want to offer an option to user, then walk it back and offer another one later? Why would you prefer that?

3) It's also not simpler in the sense that there is no patch for it. Again, I really invite you to focus on the existing patch, and check if it solves the problem and if it can be amended later (i.e. if it would not require a walk-back).

&gt; The latter one is more complex than you think.

Why do you think so? What is missing in my patch? Have you reviewed my patch?


&gt; All the options I listed in my previous reply are not
&gt; supposed to be altered by a random user.

But they can be altered by random users today.

This is another issue with the simple flag: it only gives back functionality to those who need it by re-exposing the bug entirely. This is what I called a "risk" in my response to you in comment #25.

&gt; My fear is that you might end up with filtering just the binary paths.

Have you reviewed my patch?

It does filter only paths, because right now this is where the bug is. You cannot remote execute with other annotations. The dangerous bug today is remote execution.

I am not saying there is no risk on other annotations. However, I have reviewed them, and so far, my evaluation of the risk for all other annotations is that it is negligible *relative to* the ability to execute arbitrary code.

Specifically:

- Annotations that configure the guest kernel, including boot options, kernel image, guest hook paths, etc, are normally contained by the VM layer. It may make administrative sense to provide similar filtering for them, but it's not a security issue for the host unless there is a flaw in the hypervisor.

- Annotations that configure the guest, e.g. memory size, do require scrutiny. For example, memory could be use for denial-of-service attacks. We need to have a discussion on the mailing list on how to fix it. While there is a security risk, it is somewhat second-order relative to the ability to copy all data from the host to some remote machine or wipe its content clean.

&gt; I would like to ask what is the long term plan going your direction?

I will split your question in three:

a) Is there a long term plan for the path filtering options in the patch I submitted: I tried to design them to address your earlier comment #5 and #8. I explained why a *global* option does not work, but I modified the *per-path* option to address your concern about making "free-for-all" possible (although the regexp approach has the additional benefit that you can restrict the free-for all, e.g. allow only /usr/bin/qemu.* and not any path).

b) Is there a long term plan for other annotations: Yes, they need to be reviewed carefully. I have convinced myself that there are secondary security holes in other annotations that can be addressed later, starting with memory allocation. I can start working on this if you want me to.

c) Is there a long-term plan for controlling the annotation feature itself: Re-reading your comments, I realize I may have missed one possible interpretation, which is that you believed my patch filtered annotations by name, instead of filtering the value of the annotations. In other words, my current patch filters what values of hypervisor.path are allowed, it does not enable/disable the hypervisor.path annotation. We could decide that it makes sense to also have an "annotations" configuration that filters which annotations names are whitelisted.

&gt; I would prefer a simple boolean flag (which is also a quick fix)
&gt; if there is no long term plan on how the other options are handled.

I understand. But please review my patch, as I believe now that it may not be exactly what you thought it was.


&gt; To be specific, I was asking:
&gt; 1. will there be a classification of user-modifiable options and non-user-modifiable options?
&gt; 2. will sysadmin be able to modify the classification?

This is my point c) above. I believe this is easily added, but it's somewhat orthogonal to the proposed fix. It would not be sufficient from a security point of view, because the security issue arises from being able to pass arbitrary values to hypervisor.path, not from the feature itself. In other words, if you give a mechanism to whitelist the "hypervisor.path" feature, as soon as you whitelist it, the security risk is back. So even if we implement annotation name whitelisting, we still need annotation value whitelisting.

&gt; If I understand your messages correctly, the answers are two YES.
&gt; Then I agree with your solution. But please confirm if we are on the same page.

I believe the answer is yes, but please check by reviewing the patch.

&gt; And w.r.t. filing new CVEs, anyone can file a CVE.
&gt; VMT will be responsible for triaging the security issue and coordinate
&gt; the progressive disclosure of a vulnerability. We've handled several
&gt; CVEs before and they all come from outside reporters.

Let me make the questions more direct: do you want me to open the CVE
or is is more polite to let someone from the kata VMT do it? I just
want to make sure someone feels they "own" this.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/33" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T07:57:19.382332+00:00" title="2020-05-18 07:57:19 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/33"> #33</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Fabiano,</p>
<p><span class="foldable-quoted">&gt; I&#x27;m sorry you feel an easy way for distros to start using your<br />
&gt; changes right away is discussing the sex of angels.
</span></p>
<p>No, I was *complaining* that we were discussing the sex of angels.<br />
In other words, instead of (a) in comment #27, we have so far only discussed (b) and (c) which are IMO secondary.</p>
<p><span class="foldable-quoted">&gt; It&#x27;s not, having the options being set during build time would<br />
&gt; just ease the adoption of the fix by the distros.
</span></p>
<p>My patch allows that, unless I am mistaken.</p>
<p><span class="foldable-quoted">&gt; I&#x27;d like to ask you, please, be humble enough to understand<br />
&gt;  people who more experience in the project may take their time<br />
&gt; to review your comments, to make suggestions, and that the<br />
&gt; suggestions my be different than what you proposed (or not).
</span></p>
<p>My humility or lack therefore is even more off-topic than whether sysadmins with root access can be trusted with regexps, and veers even more into &quot;personal opinion&quot; territory.</p>
<p><span class="foldable-quoted">&gt; If it happens to be the case, please, be humble enough to listen<br />
&gt; to the ideas, try to learn from them, instead of forcing yours.
</span></p>
<p>The regexp idea that you don&#x27;t like was in response to Peng Tao&#x27;s comments. While I did not immediately implement his suggestion as is (more specifically, I tried, it became very complicated, so I looked for another way), I recognized that he had pointed out a real issue, namely that my initial proposal would disable a feature in use cases which I consider legitimate. In other words, I learned from Peng Tao, and that&#x27;s why the second iteration of the patch uses regexps and not string matching.</p>
<p><span class="foldable-quoted">&gt; Anyways, it&#x27;s been made clear my suggestions are not valid nor<br />
&gt; welcome here.
</span></p>
<p>If this is how you feel, then it&#x27;s a wild misinterpretation of my response to your comments. You don&#x27;t like regexps, fine. I share your concerns regarding the risk, so if there was no reason for them, I would not have added them.</p>
<p>I&#x27;ve explained the reason in comment #25, right after you brought the issue up in #24. Let me repeat here the core objection I have to removing regexps:</p>
<p>Until someone can prove to me that there is no QE system somewhere dropping nightly builds of qemu in a known location and testing them through an annotation, I&#x27;m reluctant to not being able to offer some wildcarding mechanism.</p>
<p>In other words, it&#x27;s not that I don&#x27;t hear you or don&#x27;t learn from you. It&#x27;s that I see a problem with your proposal, which you have not addressed. If you respond to my question, i.e. if you show me how a string list can be used to address the use case above, or if you show that the use case is not valid, then you will change my mind. Writing to my manager will not.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Fabiano,

&gt; I'm sorry you feel an easy way for distros to start using your
&gt; changes right away is discussing the sex of angels.

No, I was *complaining* that we were discussing the sex of angels.
In other words, instead of (a) in comment #27, we have so far only discussed (b) and (c) which are IMO secondary.

&gt; It's not, having the options being set during build time would
&gt; just ease the adoption of the fix by the distros.

My patch allows that, unless I am mistaken.

&gt; I'd like to ask you, please, be humble enough to understand
&gt;  people who more experience in the project may take their time
&gt; to review your comments, to make suggestions, and that the
&gt; suggestions my be different than what you proposed (or not).

My humility or lack therefore is even more off-topic than whether sysadmins with root access can be trusted with regexps, and veers even more into "personal opinion" territory.


&gt; If it happens to be the case, please, be humble enough to listen
&gt; to the ideas, try to learn from them, instead of forcing yours.

The regexp idea that you don't like was in response to Peng Tao's comments. While I did not immediately implement his suggestion as is (more specifically, I tried, it became very complicated, so I looked for another way), I recognized that he had pointed out a real issue, namely that my initial proposal would disable a feature in use cases which I consider legitimate. In other words, I learned from Peng Tao, and that's why the second iteration of the patch uses regexps and not string matching.


&gt; Anyways, it's been made clear my suggestions are not valid nor
&gt; welcome here.

If this is how you feel, then it's a wild misinterpretation of my response to your comments. You don't like regexps, fine. I share your concerns regarding the risk, so if there was no reason for them, I would not have added them.

I've explained the reason in comment #25, right after you brought the issue up in #24. Let me repeat here the core objection I have to removing regexps:

Until someone can prove to me that there is no QE system somewhere dropping nightly builds of qemu in a known location and testing them through an annotation, I'm reluctant to not being able to offer some wildcarding mechanism.

In other words, it's not that I don't hear you or don't learn from you. It's that I see a problem with your proposal, which you have not addressed. If you respond to my question, i.e. if you show me how a string list can be used to address the use case above, or if you show that the use case is not valid, then you will change my mind. Writing to my manager will not.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/34" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~fidencio" class="sprite person">fidencio (fidencio)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T08:30:14.665343+00:00" title="2020-05-18 08:30:14 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/34"> #34</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Christophe,</p>
<p><span class="foldable-quoted">&gt;&gt; It&#x27;s not, having the options being set during build time would<br />
&gt;&gt; just ease the adoption of the fix by the distros.<br />
&gt;<br />
&gt; My patch allows that, unless I am mistaken.
</span></p>
<p>You&#x27;re completely mistaken. None of your patches touch the Makefile itself and I fail to understand how you&#x27;d do that without adding the options there.</p>
<p><span class="foldable-quoted">&gt;&gt; If it happens to be the case, please, be humble enough to listen<br />
&gt;&gt; to the ideas, try to learn from them, instead of forcing yours.<br />
&gt;<br />
&gt; The regexp idea that you don&#x27;t like was in response to Peng Tao&#x27;s comments. While I did not<br />
&gt; immediately implement his suggestion as is (more specifically, I tried, it became very<br />
&gt; complicated, so I looked for another way), I recognized that he had pointed out a real issue,<br />
&gt; namely that my initial proposal would disable a feature in use cases which I consider<br />
&gt; legitimate. In other words, I learned from Peng Tao, and that&#x27;s why the second iteration of the patch uses regexps and not string matching.
</span></p>
<p>I&#x27;m not forcing my idea to not using reg-exp. I&#x27;ve just tried to mention that leaving the chance for the admin to insert a security issue by mistake may not be the best way to solve a security issue.</p>
<p>Yet, I&#x27;d like to hear the opinion of other developers.</p>
<p><span class="foldable-quoted">&gt;&gt; Anyways, it&#x27;s been made clear my suggestions are not valid nor<br />
&gt;&gt; welcome here.
</span></p>
<p><span class="foldable-quoted">&gt; If this is how you feel, then it&#x27;s a wild misinterpretation of my response to your comments.
</span></p>
<p>Oh, sorry for my misinterpretation then, sincerely.</p>
<p>I really got it wrong that you completely ignored the comment about having it configured during build time.</p>
<p><span class="foldable-quoted">&gt; You don&#x27;t like regexps, fine. I share your concerns regarding the risk, so if there was no reason for them, I would not have added them.
</span></p>
<p><span class="foldable-quoted">&gt;<br />
&gt; I&#x27;ve explained the reason in comment #25, right after you brought the issue up in #24.<br />
&gt; Let me repeat here the core objection I have to removing regexps:<br />
&gt;<br />
&gt; Until someone can prove to me that there is no QE system somewhere dropping nightly builds of<br />
&gt; qemu in a known location and testing them through an annotation, I&#x27;m reluctant to not being<br />
&gt; able to offer some wildcarding mechanism.
</span></p>
<p>And here&#x27;s the part that I&#x27;d like to hear from other developers about the weight of having regex which may lead to a security issue, as stated in the comment in the patch ... and having an admin to tweak the code which will be used by the QE, before sending the code to the QE.</p>
<p><span class="foldable-quoted">&gt; In other words, it&#x27;s not that I don&#x27;t hear you or don&#x27;t learn from you. It&#x27;s that I see a<br />
&gt; problem with your proposal, which you have not addressed. If you respond to my question, i.e.<br />
&gt; if you show me how a string list can be used to address the use case above, or if you show that<br />
&gt; the use case is not valid, then you will change my mind. Writing to my manager will not.
</span></p>
<p>I also see a problem with your proposal, commented on that, and learned that I misinterpreted what you said, even when the issue is still there and you were not able to check that.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Christophe,

&gt;&gt; It's not, having the options being set during build time would
&gt;&gt; just ease the adoption of the fix by the distros.
&gt;
&gt; My patch allows that, unless I am mistaken.

You're completely mistaken. None of your patches touch the Makefile itself and I fail to understand how you'd do that without adding the options there.

&gt;&gt; If it happens to be the case, please, be humble enough to listen
&gt;&gt; to the ideas, try to learn from them, instead of forcing yours.
&gt;
&gt; The regexp idea that you don't like was in response to Peng Tao's comments. While I did not 
&gt; immediately implement his suggestion as is (more specifically, I tried, it became very 
&gt; complicated, so I looked for another way), I recognized that he had pointed out a real issue, 
&gt; namely that my initial proposal would disable a feature in use cases which I consider 
&gt; legitimate. In other words, I learned from Peng Tao, and that's why the second iteration of the patch uses regexps and not string matching.

I'm not forcing my idea to not using reg-exp. I've just tried to mention that leaving the chance for the admin to insert a security issue by mistake may not be the best way to solve a security issue.

Yet, I'd like to hear the opinion of other developers.

&gt;&gt; Anyways, it's been made clear my suggestions are not valid nor
&gt;&gt; welcome here.

&gt; If this is how you feel, then it's a wild misinterpretation of my response to your comments.

Oh, sorry for my misinterpretation then, sincerely.

I really got it wrong that you completely ignored the comment about having it configured during build time.


&gt; You don't like regexps, fine. I share your concerns regarding the risk, so if there was no reason for them, I would not have added them.

&gt;
&gt; I've explained the reason in comment #25, right after you brought the issue up in #24.
&gt; Let me repeat here the core objection I have to removing regexps:
&gt;
&gt; Until someone can prove to me that there is no QE system somewhere dropping nightly builds of
&gt; qemu in a known location and testing them through an annotation, I'm reluctant to not being 
&gt; able to offer some wildcarding mechanism.

And here's the part that I'd like to hear from other developers about the weight of having regex which may lead to a security issue, as stated in the comment in the patch ... and having an admin to tweak the code which will be used by the QE, before sending the code to the QE.

&gt; In other words, it's not that I don't hear you or don't learn from you. It's that I see a 
&gt; problem with your proposal, which you have not addressed. If you respond to my question, i.e. 
&gt; if you show me how a string list can be used to address the use case above, or if you show that 
&gt; the use case is not valid, then you will change my mind. Writing to my manager will not.

I also see a problem with your proposal, commented on that, and learned that I misinterpreted what you said, even when the issue is still there and you were not able to check that.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/35" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~dgilbert-h" class="sprite person">Dr. David Alan Gilbert (dgilbert-h)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T09:36:23.287371+00:00" title="2020-05-18 09:36:23 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/35"> #35</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>The regexp&#x27;s seem reasonable to me - although it does end up a lot more complex than it was before.<br />
I think you&#x27;d have to have everything initially blacklisted and then allow the admin to add the entries for things they wanted to allow the user to change; which is going to be a bit painful for them.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">The regexp's seem reasonable to me - although it does end up a lot more complex than it was before.
I think you'd have to have everything initially blacklisted and then allow the admin to add the entries for things they wanted to allow the user to change; which is going to be a bit painful for them.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/37" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T10:35:36.096732+00:00" title="2020-05-18 10:35:36 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/37"> #37</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; although it does end up a lot more complex than it was before.
</span></p>
<p>The second patch is larger than the first one because<br />
1. It adds all the documentation, modification to config files, etc.<br />
2. It does all the dangerous annotations, not just hypervisor.path.</p>
<p>The actual difference, everything else being equal, is shown in comment #13. I don&#x27;t see that as &quot;a lot more complex&quot;.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; although it does end up a lot more complex than it was before.

The second patch is larger than the first one because
1. It adds all the documentation, modification to config files, etc.
2. It does all the dangerous annotations, not just hypervisor.path.

The actual difference, everything else being equal, is shown in comment #13. I don't see that as "a lot more complex".</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/39" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T11:04:41+00:00" title="2020-05-18 11:04:41 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/39"> #39</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  <a href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/comments/39/+download">Download full text</a> (7.3 KiB)
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>On Mon, May 18, 2020 at 3:50 PM Christophe de Dinechin<br />
&lt;email address hidden&gt; wrote:<br />
<span class="foldable-quoted">
&gt;<br />
&gt; Peng Tao,<br />
&gt;<br />
&gt; &gt; a single enable/disable flag is much easier to implement and maintain<br />
&gt; than a white-list.<br />
&gt;<br />
&gt; 1) It&#x27;s not really simpler. It&#x27;s a flag check instead of a function<br />
&gt; call. The three-state variant you suggested in #16 is clearly more<br />
&gt; complicated, which is when I noticed that regexps were addressing your<br />
&gt; concerns while keeping the patch simple.<br />
&gt;<br />
&gt; 2) It&#x27;s not a long term solution, but a &quot;quick fix&quot; that does not<br />
&gt; address the criteria I outlined in #25. This implies that we would then<br />
&gt; need to replace it with something else. Do we want to offer an option to<br />
&gt; user, then walk it back and offer another one later? Why would you<br />
&gt; prefer that?<br />
&gt;<br />
&gt; 3) It&#x27;s also not simpler in the sense that there is no patch for it.<br />
&gt; Again, I really invite you to focus on the existing patch, and check if<br />
&gt; it solves the problem and if it can be amended later (i.e. if it would<br />
&gt; not require a walk-back).<br />
&gt;<br />
</span>

We do not have to take it back if the initial option is<br />
`config_<wbr />via_annotation = disabled`. We first accept `enabled` and<br />
`disabled`. Later extend it with an config option whitelist, which<br />
lists exactly which option can be changed via annotations.</p>
<p><span class="foldable-quoted">&gt; &gt; The latter one is more complex than you think.<br />
&gt;<br />
&gt; Why do you think so? What is missing in my patch? Have you reviewed my<br />
&gt; patch?<br />
&gt;<br />
&gt;<br />
&gt; &gt; All the options I listed in my previous reply are not<br />
&gt; &gt; supposed to be altered by a random user.<br />
&gt;<br />
&gt; But they can be altered by random users today.<br />
&gt;<br />
And that need to be fixed and that&#x27;s why I am calling for a long term<br />
solution. I do not want to stop at just fixing the binary paths. I am<br />
supporting your solution because I think you would extend it to other<br />
options as well.
</span></p>
<p><span class="foldable-quoted">&gt; This is another issue with the simple flag: it only gives back<br />
&gt; functionality to those who need it by re-exposing the bug entirely. This<br />
&gt; is what I called a &quot;risk&quot; in my response to you in comment #25.<br />
&gt;<br />
&gt; &gt; My fear is that you might end up with filtering just the binary paths.<br />
&gt;<br />
&gt; Have you reviewed my patch?<br />
&gt;<br />
&gt; It does filter only paths, because right now this is where the bug is.<br />
&gt; You cannot remote execute with other annotations. The dangerous bug<br />
&gt; today is remote execution.<br />
&gt;<br />
&gt; I am not saying there is no risk on other annotations. However, I have<br />
&gt; reviewed them, and so far, my evaluation of the risk for all other<br />
&gt; annotations is that it is negligible *relative to* the ability to<br />
&gt; execute arbitrary code.<br />
&gt;<br />
They are less dangerous but they must be fixed as well. And we should<br />
fix all of them in one solution. That is the whole point why I am<br />
discussing the issue all the time.
</span></p>
<p><span class="foldable-quoted">&gt; Specifically:<br />
&gt;<br />
&gt; - Annotations that configure the guest kernel, including boot options,<br />
&gt; kernel image, guest hook paths, etc, are normally contained by the VM<br />
&gt; layer. It may make administrative sense to provide similar filtering for<br />
&gt; them, but it&#x27;s not a security issue for the host unless there is a flaw<br />
&gt; in the hypervisor.<br />
&gt;<br />
&gt; - Annotations that configure the guest, e.g. memory size, do require<br />
&gt; scrutiny. For example, memory could be use for denial-of-service<br />
&gt; attacks. We need to have a discussion on th...
</span></p></div>
    
    <p>
      <a href="/katacontainers.io/+bug/1878234/comments/39">Read more...</a>
    </p>
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">On Mon, May 18, 2020 at 3:50 PM Christophe de Dinechin
&lt;christophe@dinechin.org&gt; wrote:
&gt;
&gt; Peng Tao,
&gt;
&gt; &gt; a single enable/disable flag is much easier to implement and maintain
&gt; than a white-list.
&gt;
&gt; 1) It's not really simpler. It's a flag check instead of a function
&gt; call. The three-state variant you suggested in #16 is clearly more
&gt; complicated, which is when I noticed that regexps were addressing your
&gt; concerns while keeping the patch simple.
&gt;
&gt; 2) It's not a long term solution, but a "quick fix" that does not
&gt; address the criteria I outlined in #25. This implies that we would then
&gt; need to replace it with something else. Do we want to offer an option to
&gt; user, then walk it back and offer another one later? Why would you
&gt; prefer that?
&gt;
&gt; 3) It's also not simpler in the sense that there is no patch for it.
&gt; Again, I really invite you to focus on the existing patch, and check if
&gt; it solves the problem and if it can be amended later (i.e. if it would
&gt; not require a walk-back).
&gt;
We do not have to take it back if the initial option is
`config_via_annotation = disabled`. We first accept `enabled` and
`disabled`. Later extend it with an config option whitelist, which
lists exactly which option can be changed via annotations.

&gt; &gt; The latter one is more complex than you think.
&gt;
&gt; Why do you think so? What is missing in my patch? Have you reviewed my
&gt; patch?
&gt;
&gt;
&gt; &gt; All the options I listed in my previous reply are not
&gt; &gt; supposed to be altered by a random user.
&gt;
&gt; But they can be altered by random users today.
&gt;
And that need to be fixed and that's why I am calling for a long term
solution. I do not want to stop at just fixing the binary paths. I am
supporting your solution because I think you would extend it to other
options as well.

&gt; This is another issue with the simple flag: it only gives back
&gt; functionality to those who need it by re-exposing the bug entirely. This
&gt; is what I called a "risk" in my response to you in comment #25.
&gt;
&gt; &gt; My fear is that you might end up with filtering just the binary paths.
&gt;
&gt; Have you reviewed my patch?
&gt;
&gt; It does filter only paths, because right now this is where the bug is.
&gt; You cannot remote execute with other annotations. The dangerous bug
&gt; today is remote execution.
&gt;
&gt; I am not saying there is no risk on other annotations. However, I have
&gt; reviewed them, and so far, my evaluation of the risk for all other
&gt; annotations is that it is negligible *relative to* the ability to
&gt; execute arbitrary code.
&gt;
They are less dangerous but they must be fixed as well. And we should
fix all of them in one solution. That is the whole point why I am
discussing the issue all the time.

&gt; Specifically:
&gt;
&gt; - Annotations that configure the guest kernel, including boot options,
&gt; kernel image, guest hook paths, etc, are normally contained by the VM
&gt; layer. It may make administrative sense to provide similar filtering for
&gt; them, but it's not a security issue for the host unless there is a flaw
&gt; in the hypervisor.
&gt;
&gt; - Annotations that configure the guest, e.g. memory size, do require
&gt; scrutiny. For example, memory could be use for denial-of-service
&gt; attacks. We need to have a discussion on the mailing list on how to fix
&gt; it. While there is a security risk, it is somewhat second-order relative
&gt; to the ability to copy all data from the host to some remote machine or
&gt; wipe its content clean.
&gt;
&gt; &gt; I would like to ask what is the long term plan going your direction?
&gt;
&gt; I will split your question in three:
&gt;
&gt; a) Is there a long term plan for the path filtering options in the patch
&gt; I submitted: I tried to design them to address your earlier comment #5
&gt; and #8. I explained why a *global* option does not work, but I modified
&gt; the *per-path* option to address your concern about making "free-for-
&gt; all" possible (although the regexp approach has the additional benefit
&gt; that you can restrict the free-for all, e.g. allow only /usr/bin/qemu.*
&gt; and not any path).
&gt;
&gt; b) Is there a long term plan for other annotations: Yes, they need to be
&gt; reviewed carefully. I have convinced myself that there are secondary
&gt; security holes in other annotations that can be addressed later,
&gt; starting with memory allocation. I can start working on this if you want
&gt; me to.
&gt;
&gt; c) Is there a long-term plan for controlling the annotation feature
&gt; itself: Re-reading your comments, I realize I may have missed one
&gt; possible interpretation, which is that you believed my patch filtered
&gt; annotations by name, instead of filtering the value of the annotations.
&gt; In other words, my current patch filters what values of hypervisor.path
&gt; are allowed, it does not enable/disable the hypervisor.path annotation.
&gt; We could decide that it makes sense to also have an "annotations"
&gt; configuration that filters which annotations names are whitelisted.
&gt;
Yes, that is exactly the missing part. And I was hoping you could add
it maybe in later patches. There are options we do not want an end
user to change in any case. And I want to make sure we have an
agreement that it will be fixed. That is why I've been asking about a
long term solution that does not just stop at binary path filtering.

&gt; &gt; I would prefer a simple boolean flag (which is also a quick fix)
&gt; &gt; if there is no long term plan on how the other options are handled.
&gt;
&gt; I understand. But please review my patch, as I believe now that it may
&gt; not be exactly what you thought it was.
&gt;
&gt;
&gt; &gt; To be specific, I was asking:
&gt; &gt; 1. will there be a classification of user-modifiable options and non-user-modifiable options?
&gt; &gt; 2. will sysadmin be able to modify the classification?
&gt;
&gt; This is my point c) above. I believe this is easily added, but it's
&gt; somewhat orthogonal to the proposed fix. It would not be sufficient from
&gt; a security point of view, because the security issue arises from being
&gt; able to pass arbitrary values to hypervisor.path, not from the feature
&gt; itself. In other words, if you give a mechanism to whitelist the
&gt; "hypervisor.path" feature, as soon as you whitelist it, the security
&gt; risk is back. So even if we implement annotation name whitelisting, we
&gt; still need annotation value whitelisting.
&gt;
The classification does not conflict with your whitelist filtering.
Instead, the workflow is like:
1. If an option is not in user-modifiable classification, do not
change it via annotation
2. If it is user-modifiable, and if the annotation value is within the
per-annotation whitelist, then change it

&gt; &gt; If I understand your messages correctly, the answers are two YES.
&gt; &gt; Then I agree with your solution. But please confirm if we are on the same page.
&gt;
&gt; I believe the answer is yes, but please check by reviewing the patch.
&gt;
Yes, I did look through your patch. And I agree it can be used as a
quick fix. My intension was to confirm that we are on the same page
about how to extend it as a complete long term solution.

&gt; &gt; And w.r.t. filing new CVEs, anyone can file a CVE.
&gt; &gt; VMT will be responsible for triaging the security issue and coordinate
&gt; &gt; the progressive disclosure of a vulnerability. We've handled several
&gt; &gt; CVEs before and they all come from outside reporters.
&gt;
&gt; Let me make the questions more direct: do you want me to open the CVE
&gt; or is is more polite to let someone from the kata VMT do it? I just
&gt; want to make sure someone feels they "own" this.
&gt;
Yes, please feel free to open a CVE for kata. You deserve the credit.

Cheers,
Tao
-- 
Into Sth. Rich &amp; Strange
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/38" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T11:06:17.575832+00:00" title="2020-05-18 11:06:17 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/38"> #38</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Peng Tao, I reviewed the KCSA, it looks good to me. Thanks!</p>
<p>Minor suggestions:<br />
- in the title, I would add &quot;arbitrary code *on the host*&quot; like in the description<br />
- You put v1.9.0 and above. I did not check, but I assume this is when annotations were added?<br />
- Red Hat instead of RedHat<br />
- would actually reboot -&gt; will reboot ?</p>
<p>Congratulations for spelling my name right!</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Peng Tao, I reviewed the KCSA, it looks good to me. Thanks!

Minor suggestions: 
- in the title, I would add "arbitrary code *on the host*" like in the description
- You put v1.9.0 and above. I did not check, but I assume this is when annotations were added?
- Red Hat instead of RedHat
- would actually reboot -&gt; will reboot ?

Congratulations for spelling my name right!</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/40" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~bergwolf" class="sprite person">Peng Tao (bergwolf)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T11:10:32+00:00" title="2020-05-18 11:10:32 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/40"> #40</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>On Mon, May 18, 2020 at 5:50 PM Dr. David Alan Gilbert<br />
&lt;email address hidden&gt; wrote:<br />
<span class="foldable-quoted">
&gt;<br />
&gt; The regexp&#x27;s seem reasonable to me - although it does end up a lot more complex than it was before.<br />
&gt; I think you&#x27;d have to have everything initially blacklisted and then allow the admin to add the entries for things they wanted to allow the user to change; which is going to be a bit painful for them.<br />
&gt;<br />
</span>

Yes, indeed. It is going to be a lot painful for sysadmins. But I like<br />
the idea of blacklisting everything first,</p>
<p>Cheers,<br />
Tao<br />
--<br />
Into Sth. Rich &amp; Strange</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">On Mon, May 18, 2020 at 5:50 PM Dr. David Alan Gilbert
&lt;dgilbert@redhat.com&gt; wrote:
&gt;
&gt; The regexp's seem reasonable to me - although it does end up a lot more complex than it was before.
&gt; I think you'd have to have everything initially blacklisted and then allow the admin to add the entries for things they wanted to allow the user to change; which is going to be a bit painful for them.
&gt;
Yes, indeed. It is going to be a lot painful for sysadmins. But I like
the idea of blacklisting everything first,

Cheers,
Tao
-- 
Into Sth. Rich &amp; Strange
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/41" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T11:17:27.313811+00:00" title="2020-05-18 11:17:27 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/41"> #41</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; You&#x27;re completely mistaken. None of your patches touch<br />
&gt; the Makefile itself and I fail to understand how you&#x27;d<br />
&gt; do that without adding the options there.
</span></p>
<p>You simply add the path_list you want in the<br />
configuration-<wbr />qemu.toml for your distro:</p>
<p>[hypervisor]<br />
path_list = [&quot;/usr/<wbr />bin/qemu-<wbr />kvm&quot;, &quot;/usr/bin/<wbr />qemu-kata&quot; ]</p>
<p>Why would that not be a distro build time solution to patch the configuration?</p>
<p>Hmmm… I _guess_ what you mean with your Makefile remark is that I should add an @ variable in the configuration.in files that you could pass at build time like for other paths? If that is what you mean, that makes perfect sense. Will do that.</p>
<p><span class="foldable-quoted">&gt; Oh, sorry for my misinterpretation then, sincerely.
</span></p>
<p>Based on the sentence below, I think this may have been sarcastic.</p>
<p><span class="foldable-quoted">&gt; I really got it wrong that you completely ignored the comment<br />
&gt; about having it configured during build time.
</span></p>
<p>I replied &quot;My patch allows that, unless I am mistaken&quot; So I did not &quot;completely ignore&quot; the comment, stating that my patch was doing what you were asking, and leaving open the possibility that I had misinterpreted with &quot;unless I&#x27;m mistaken&quot;.</p>
<p>So yes, I&#x27;m afraid you really got it wrong, but by trying really hard to guess what you meant, I believe you mean I should add @ variables in the templates to make it easier for a distro to add some default value as &quot;make VAR=value&quot;. Correct?<br />
<span class="foldable-quoted">
&gt; And here&#x27;s the part that I&#x27;d like to hear from other<br />
&gt; developers about the weight of having regex which may<br />
&gt; lead to a security issue, as stated in the comment in<br />
&gt; the patch ... and having an admin to tweak the code which<br />
&gt; will be used by the QE, before sending the code to the QE.
</span></p>
<p>First, I only gave this QE example as an proof by existence that such scenarios exist. I have little doubt that this is not the only one.</p>
<p>Second, you seem to argue on one hand that sysadmins are too incompetent to use regexps correctly, but at the same time, competent enough to patch go code.</p>
<p>Third, as I&#x27;ve argued earlier, we can probably fine-tune the configuration later, as long as the default is reasonably safe, which I believe it is. My concern here is that by getting lost into second-order details, we delay fixing the first-order problem. It is not that second-order details should not be addressed, only that they should be addressed on the mailing list once it&#x27;s reasonable to do so because the base flaw is fixed.</p>
<p>Let me put it another way. If there are any users who actually need /build/<wbr />qemu[a-<wbr />z0-9-]* as a pattern for their in-production system, they are not watching this bug, but they are watching kata-dev. So we can start with the regexp approach, then ask &quot;we feel this feature is risky, here is why. Does anybody need it. If not, we remove it in one week&quot;. Then if nobody needs it, we change one line, and the filter only accepts string lists and not regexp lists.</p>
<p>Similarly, this is why for the moment, I only address in my patch the super-dangerous things like hypervisor.path, and not for example memory allocation. The more general discussion about how we want the memory allocation to be constrained can safely happen on kata-dev once we patched the major flaw that any such discussion would inevitably expose.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; You're completely mistaken. None of your patches touch
&gt; the Makefile itself and I fail to understand how you'd
&gt; do that without adding the options there.

You simply add the path_list you want in the
configuration-qemu.toml for your distro:

[hypervisor]
path_list = ["/usr/bin/qemu-kvm", "/usr/bin/qemu-kata" ]

Why would that not be a distro build time solution to patch the configuration?

Hmmm… I _guess_ what you mean with your Makefile remark is that I should add an @ variable in the configuration.in files that you could pass at build time like for other paths? If that is what you mean, that makes perfect sense. Will do that.


&gt; Oh, sorry for my misinterpretation then, sincerely.

Based on the sentence below, I think this may have been sarcastic.

&gt; I really got it wrong that you completely ignored the comment
&gt; about having it configured during build time.

I replied "My patch allows that, unless I am mistaken" So I did not "completely ignore" the comment, stating that my patch was doing what you were asking, and leaving open the possibility that I had misinterpreted with "unless I'm mistaken".

So yes, I'm afraid you really got it wrong, but by trying really hard to guess what you meant, I believe you mean I should add @ variables in the templates to make it easier for a distro to add some default value as "make VAR=value". Correct?
&gt; And here's the part that I'd like to hear from other
&gt; developers about the weight of having regex which may
&gt; lead to a security issue, as stated in the comment in
&gt; the patch ... and having an admin to tweak the code which
&gt; will be used by the QE, before sending the code to the QE.

First, I only gave this QE example as an proof by existence that such scenarios exist. I have little doubt that this is not the only one.

Second, you seem to argue on one hand that sysadmins are too incompetent to use regexps correctly, but at the same time, competent enough to patch go code.

Third, as I've argued earlier, we can probably fine-tune the configuration later, as long as the default is reasonably safe, which I believe it is. My concern here is that by getting lost into second-order details, we delay fixing the first-order problem. It is not that second-order details should not be addressed, only that they should be addressed on the mailing list once it's reasonable to do so because the base flaw is fixed.

Let me put it another way. If there are any users who actually need /build/qemu[a-z0-9-]* as a pattern for their in-production system, they are not watching this bug, but they are watching kata-dev. So we can start with the regexp approach, then ask "we feel this feature is risky, here is why. Does anybody need it. If not, we remove it in one week". Then if nobody needs it, we change one line, and the filter only accepts string lists and not regexp lists.

Similarly, this is why for the moment, I only address in my patch the super-dangerous things like hypervisor.path, and not for example memory allocation. The more general discussion about how we want the memory allocation to be constrained can safely happen on kata-dev once we patched the major flaw that any such discussion would inevitably expose.

</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/42" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~fidencio" class="sprite person">fidencio (fidencio)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T11:50:15.078185+00:00" title="2020-05-18 11:50:15 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/42"> #42</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; Hmmm… I _guess_ what you mean with your Makefile remark is that I should add an @ variable in the configuration.in files that you could pass at build time like for other paths? If that is what you mean, that makes perfect sense. Will do that.
</span></p>
<p>Cool, thanks!<br />
I believe it&#x27;s cleaner and easier for distros to adapt that if it&#x27;s just a make parameter (please, check @QEMUVIRTIOFSPATH@ for reference).</p>
<p><span class="foldable-quoted">&gt; Second, you seem to argue on one hand that sysadmins are too incompetent to use regexps correctly, but at the same time, competent enough to patch go code.
</span></p>
<p>No, I don&#x27;t. I consider myself incompetent to use regexps, and I think that adding two or three paths manually to the configuration.toml may be a good trade-off, when considering possible holes regexps could lead to (as you pointed out)</p>
<p>My concern about regexps is that it&#x27;s hard to move back once it&#x27;s in production.</p>
<p>Let&#x27;s say we add the fix with the regexps now and release a version of kata with the fix. Once it&#x27;s done there&#x27;s no way to move back to block regexps without breaking compatibility with a previous release version. However, if we don&#x27;t take this approach, we can add it later without any issue.</p>
<p>Btw, I&#x27;d love to see a release happening as soon as your patches get merged, as it&#x27;d allow distros to update their packages in no time, helping the end consumers.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; Hmmm… I _guess_ what you mean with your Makefile remark is that I should add an @ variable in the configuration.in files that you could pass at build time like for other paths? If that is what you mean, that makes perfect sense. Will do that.

Cool, thanks!
I believe it's cleaner and easier for distros to adapt that if it's just a make parameter (please, check @QEMUVIRTIOFSPATH@ for reference).


&gt; Second, you seem to argue on one hand that sysadmins are too incompetent to use regexps correctly, but at the same time, competent enough to patch go code.

No, I don't. I consider myself incompetent to use regexps, and I think that adding two or three paths manually to the configuration.toml may be a good trade-off, when considering possible holes regexps could lead to (as you pointed out)

My concern about regexps is that it's hard to move back once it's in production.

Let's say we add the fix with the regexps now and release a version of kata with the fix. Once it's done there's no way to move back to block regexps without breaking compatibility with a previous release version. However, if we don't take this approach, we can add it later without any issue.

Btw, I'd love to see a release happening as soon as your patches get merged, as it'd allow distros to update their packages in no time, helping the end consumers.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/43" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T13:55:23.811485+00:00" title="2020-05-18 13:55:23 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/43"> #43</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  <a href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/comments/43/+download">Download full text</a> (3.5 KiB)
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; My concern about regexps is that it&#x27;s hard to move back<br />
&gt; once it&#x27;s in production.
</span></p>
<p><span class="foldable-quoted">&gt; Let&#x27;s say we add the fix with the regexps now and release<br />
&gt; a version of kata with the fix. Once it&#x27;s done there&#x27;s no<br />
&gt; way to move back to block regexps without breaking<br />
&gt; compatibility with a previous release version. However,<br />
&gt; if we don&#x27;t take this approach, we can add it later without<br />
&gt; any issue.
</span></p>
<p>The concern is legitimate. However, let&#x27;s consider two worlds.</p>
<p>In world A, someone actually uses annotations in production today with unpredictable values, e.g. /build/qemu-$DATE for hypervisor.path.</p>
<p>In world B, people use annotations with a small set of values that can be predicted ahead of time, e.g. /usr/bin/qemu and /opt/kata/bin/qemu</p>
<p>In world C, nobody uses annotations</p>
<p>My worldview right now is we don&#x27;t know if we are in world A, B or C. Maybe someone else does know, that would easily change my mind on what the correct fix is.</p>
<p>Now, we submit a fix. We have four approaches so far, that I will call P, P&#x27;, F and D:<br />
P : We whitelist annotations with a flag that whitelists everything<br />
P&#x27;: We whitelist annotations names<br />
F : We whitelist annotations values with strings<br />
D : We whitelist annotations values with regexps</p>
<p>I hope that I represented our respective positions correctly.</p>
<p>Now, my question is: what do we recommend to users once the fix is deployed. How do we write the release note?</p>
<p>P only works for world C. If we are in world A and B, your release note reads like: &quot;If you are using annotations today, then set enable_annotations to true, but please be mindful that this will allow any user to remotely execute any pre-existing binary on your host.&quot; To me, it&#x27;s a no-brainer that we would have to walk back this one pretty quickly if we are in world</p>
<p>P&#x27; is only marginally better. In world A and B, the release note now reads like: &quot;If you are using annotations today, then set enable_annotations = [ &quot;hypervisor.path&quot; ], but please be mindful that this will allow any user to remotely execute any pre-existing binary on your host.&quot;. Again, it&#x27;s a no-brainer that we will have to walk this one back quickly if we happen to be in world A or B.</p>
<p>F works for world B and C. However, if there is a chance we are in world A, then the release note must read: &quot;If you are in case C, this feature has been disabled, sorry&quot;. It&#x27;s not nearly as bad as cases P and P&#x27;, but it&#x27;s still a loss of functionality that I don&#x27;t know how to evaluate.</p>
<p>D works for world A, B and C. The release note reads: &quot;If you need annotations in case B, then whitelist the binaries with [hypervisor] path_list = [ &quot;/path/a&quot;, &quot;/path/b&quot; ]. If you need annotations in case A, then whitelist the binaries with [hypervisor] path_list = [ &quot;/most-<wbr />restrictive-<wbr />path-regexp&quot; ] but please read the SECURITY WARNING section carefully as you may open your host to binary execution attack with an improperly chosen pattern.&quot;</p>
<p>Now, if after discussing with the list, we realize that we are in world B, then walking back the fix is not a problem. If, however, it would be difficult to walk it back, then it means that we are actually in world A, in which case walking it back would be a net loss in functionality.</p>
<p>I understand...</p></div>
    
    <p>
      <a href="/katacontainers.io/+bug/1878234/comments/43">Read more...</a>
    </p>
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; My concern about regexps is that it's hard to move back
&gt; once it's in production.

&gt; Let's say we add the fix with the regexps now and release
&gt; a version of kata with the fix. Once it's done there's no
&gt; way to move back to block regexps without breaking
&gt; compatibility with a previous release version. However,
&gt; if we don't take this approach, we can add it later without
&gt; any issue.

The concern is legitimate. However, let's consider two worlds.

In world A, someone actually uses annotations in production today with unpredictable values, e.g. /build/qemu-$DATE for hypervisor.path.

In world B, people use annotations with a small set of values that can be predicted ahead of time, e.g. /usr/bin/qemu and /opt/kata/bin/qemu

In world C, nobody uses annotations


My worldview right now is we don't know if we are in world A, B or C. Maybe someone else does know, that would easily change my mind on what the correct fix is.

Now, we submit a fix. We have four approaches so far, that I will call P, P', F and D:
P : We whitelist annotations with a flag that whitelists everything
P': We whitelist annotations names
F : We whitelist annotations values with strings
D : We whitelist annotations values with regexps

I hope that I represented our respective positions correctly.

Now, my question is: what do we recommend to users once the fix is deployed. How do we write the release note?

P only works for world C. If we are in world A and B, your release note reads like: "If you are using annotations today, then set enable_annotations to true, but please be mindful that this will allow any user to remotely execute any pre-existing binary on your host." To me, it's a no-brainer that we would have to walk back this one pretty quickly if we are in world

P' is only marginally better. In world A and B, the release note now reads like: "If you are using annotations today, then set enable_annotations = [ "hypervisor.path" ], but please be mindful that this will allow any user to remotely execute any pre-existing binary on your host.". Again, it's a no-brainer that we will have to walk this one back quickly if we happen to be in world A or B.

F works for world B and C. However, if there is a chance we are in world A, then the release note must read: "If you are in case C, this feature has been disabled, sorry". It's not nearly as bad as cases P and P', but it's still a loss of functionality that I don't know how to evaluate.

D works for world A, B and C. The release note reads: "If you need annotations in case B, then whitelist the binaries with [hypervisor] path_list = [ "/path/a", "/path/b" ]. If you need annotations in case A, then whitelist the binaries with [hypervisor] path_list = [ "/most-restrictive-path-regexp" ] but please read the SECURITY WARNING section carefully as you may open your host to binary execution attack with an improperly chosen pattern."

Now, if after discussing with the list, we realize that we are in world B, then walking back the fix is not a problem. If, however, it would be difficult to walk it back, then it means that we are actually in world A, in which case walking it back would be a net loss in functionality.

I understand that my hypothesis that world A may be the one we are in is based on no data at all, it's just a risk analysis. If you can convince me that we are in world B, then approach F is less risky. If you can convince me that we are in world C, then approach P is better since it is indeed simpler.

I hope that I correctly summarized the discussion so far.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/44" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T13:55:58.430215+00:00" title="2020-05-18 13:55:58 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/44"> #44</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Three worlds obviously, after I integrated Peng Tao&#x27;s suggested approach for completeness...</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Three worlds obviously, after I integrated Peng Tao's suggested approach for completeness...</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/45" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T14:33:47.445374+00:00" title="2020-05-18 14:33:47 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/45"> #45</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Reading back, I realize that there is an</p>
<p>F&#x27;: We whitelist annotation values with strings, but with an option for a string to represent a directory.</p>
<p>Initially, Fabiano suggested to me privately that we whitelist only directories. As I replied in a chat message, that is risky, because if someone whitelists /usr/bin/ in order to grant access to /usr/bin/qemu-kvm, then it also gives access to all other /usr/bin/ programs.</p>
<p>Maybe, however, we can whitelist names but a name that ends with / is interpreted as a directory. In my example, you could then whitelist [ &quot;/usr/bin/<wbr />qemu-kvm&quot;<wbr />, &quot;/build/&quot; ]</p>
<p>I&#x27;m pretty sure you can reasonably argue that F&#x27; covers enough of world A that it would be good enough.</p>
<p>However, while it looks more restrictive, it forces me to whitelist entire directories, and this in itself looks like a risk, e.g. it would be so tempting to open /usr/bin/. So that would need a different SECURITY WARNING label, but you would still need one.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Reading back, I realize that there is an

F': We whitelist annotation values with strings, but with an option for a string to represent a directory.

Initially, Fabiano suggested to me privately that we whitelist only directories. As I replied in a chat message, that is risky, because if someone whitelists /usr/bin/ in order to grant access to /usr/bin/qemu-kvm, then it also gives access to all other /usr/bin/ programs.

Maybe, however, we can whitelist names but a name that ends with / is interpreted as a directory. In my example, you could then whitelist [ "/usr/bin/qemu-kvm", "/build/" ]

I'm pretty sure you can reasonably argue that F' covers enough of world A that it would be good enough.

However, while it looks more restrictive, it forces me to whitelist entire directories, and this in itself looks like a risk, e.g. it would be so tempting to open /usr/bin/. So that would need a different SECURITY WARNING label, but you would still need one.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/46" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~fidencio" class="sprite person">fidencio (fidencio)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T14:46:18.313049+00:00" title="2020-05-18 14:46:18 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/46"> #46</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Christophe,</p>
<p>I didn&#x27;t suggest that. I was brainstorming checking whether we could trust only the directory and, obviously, that&#x27;s not the case as I even mentioned a few minutes later in that thread.</p>
<p>That&#x27;s what, sincerely, I was also trying to do when I raised the bullets I did in the comment <a rel="nofollow" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/comments/22">https:/<wbr />/bugs.launchpad<wbr />.net/katacontai<wbr />ners.io/<wbr />+bug/1878234/<wbr />comments/<wbr />22</a>.</p>
<p>You found the issue, you have a few days ahead of us thinking how to solve it. :-)</p>
<p>In any case, your point is clear, I guess my point on <a rel="nofollow" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/comments/22">https:/<wbr />/bugs.launchpad<wbr />.net/katacontai<wbr />ners.io/<wbr />+bug/1878234/<wbr />comments/<wbr />22</a> is also clear, and I guess Peng Tao&#x27;s comment is also clear.</p>
<p>For now, I&#x27;d like to hear the input from other folks as well.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Christophe,

I didn't suggest that. I was brainstorming checking whether we could trust only the directory and, obviously, that's not the case as I even mentioned a few minutes later in that thread.

That's what, sincerely, I was also trying to do when I raised the bullets I did in the comment https://bugs.launchpad.net/katacontainers.io/+bug/1878234/comments/22.

You found the issue, you have a few days ahead of us thinking how to solve it. :-)

In any case, your point is clear, I guess my point on https://bugs.launchpad.net/katacontainers.io/+bug/1878234/comments/22 is also clear, and I guess Peng Tao's comment is also clear.

For now, I'd like to hear the input from other folks as well.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/47" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T14:50:51.907869+00:00" title="2020-05-18 14:50:51 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/47"> #47</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Since it turns out all the whitelisting so far is on paths, maybe filepath.Glob() is more appropriate than regexp.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Since it turns out all the whitelisting so far is on paths, maybe filepath.Glob() is more appropriate than regexp.
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/48" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~devimc" class="sprite person">Julio Montes (devimc)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T15:14:15.985620+00:00" title="2020-05-18 15:14:15 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/48"> #48</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Folks, just to be clear (I lost the context after the regexp stuff), is this a vulnerability bug? (yes/no)</p>
<p>If it is, then we should warn other projects like podman and cri-o since something similar can be done with their annotations.</p>
<p>see <a rel="nofollow" href="https://github.com/containers/libpod/blob/bfcec3203ea517f408ad90d42789fb6eb62e7d81/pkg/annotations/annotations.go#L65">https:/<wbr />/github.<wbr />com/containers/<wbr />libpod/<wbr />blob/bfcec3203e<wbr />a517f408ad90d42<wbr />789fb6eb62e7d81<wbr />/pkg/annotation<wbr />s/annotations.<wbr />go#L65</a></p>
<p>```<br />
// PrivilegedRuntime is the annotation for the privileged runtime path<br />
PrivilegedRuntime = &quot;io.kubernetes.<wbr />cri-o.Privilege<wbr />dRuntime&quot;<br />
```</p>
<p>From my point of view, this is not a bug, by default no user has access to the cluster, the admin must grant him/her access:</p>
<p>```<br />
To start using your cluster, you need to run the following as a regular user:</p>
<p>&nbsp;&nbsp;mkdir -p $HOME/.kube<br />
&nbsp;&nbsp;sudo cp -i /etc/kubernetes<wbr />/admin.<wbr />conf $HOME/.kube/config<br />
&nbsp;&nbsp;sudo chown $(id -u):$(id -g) $HOME/.kube/config<br />
```</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Folks, just to be clear (I lost the context after the regexp stuff), is this a vulnerability bug? (yes/no)

If it is, then we should warn other projects like podman and cri-o since something similar can be done with their annotations.

see https://github.com/containers/libpod/blob/bfcec3203ea517f408ad90d42789fb6eb62e7d81/pkg/annotations/annotations.go#L65

```
// PrivilegedRuntime is the annotation for the privileged runtime path
PrivilegedRuntime = "io.kubernetes.cri-o.PrivilegedRuntime"
```

From my point of view, this is not a bug, by default no user has access to the cluster, the admin must grant him/her access:

```
To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config
```
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/49" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T15:42:59.782758+00:00" title="2020-05-18 15:42:59 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/49"> #49</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; Folks, just to be clear (I lost the context after<br />
&gt; the regexp stuff), is this a vulnerability bug? (yes/no)
</span></p>
<p>Yes.</p>
<p><span class="foldable-quoted">&gt; If it is, then we should warn other projects like podman<br />
&gt; and cri-o since something similar can be done with their<br />
&gt; annotations.
</span></p>
<p>But don&#x27;t you need to have root access on the machine in these cases?</p>
<p><span class="foldable-quoted">&gt; From my point of view, this is not a bug, by default no user has<br />
&gt; access to the cluster, the admin must grant him/her access:
</span></p>
<p>Understood, but that access is intended to run a workload in a container, and this gives access to what is outside the containers. So you can reboot the host, copy all the data to some other nodes, etc.</p>
<p>In other words, does cluster admin granting the access rights above expects the user to be able to shutdown worker nodes at will from a remote machine? What was given was a key to the cluster, not a ssh key to the root user.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; Folks, just to be clear (I lost the context after
&gt; the regexp stuff), is this a vulnerability bug? (yes/no)

Yes.

&gt; If it is, then we should warn other projects like podman
&gt; and cri-o since something similar can be done with their
&gt; annotations.

But don't you need to have root access on the machine in these cases?

&gt; From my point of view, this is not a bug, by default no user has
&gt; access to the cluster, the admin must grant him/her access:

Understood, but that access is intended to run a workload in a container, and this gives access to what is outside the containers. So you can reboot the host, copy all the data to some other nodes, etc.

In other words, does cluster admin granting the access rights above expects the user to be able to shutdown worker nodes at will from a remote machine? What was given was a key to the cluster, not a ssh key to the root user.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/50" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T15:43:38.186268+00:00" title="2020-05-18 15:43:38 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/50"> #50</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; and this gives access to what is outside the containers.
</span></p>
<p>Sorry, phrasing unclear. I meant &quot;this bug gives you access&quot;.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; and this gives access to what is outside the containers. 

Sorry, phrasing unclear. I meant "this bug gives you access".
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/51" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~devimc" class="sprite person">Julio Montes (devimc)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T16:49:35.946884+00:00" title="2020-05-18 16:49:35 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/51"> #51</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; But don&#x27;t you need to have root access on the machine in these cases?
</span></p>
<p>No, same as this bug, you only need access to the annotations</p>
<p><span class="foldable-quoted">&gt; Understood, but that access is intended to run a workload in a container, and this gives access<br />
&gt; to what is outside the containers. So you can reboot the host, copy all the data to some other<br />
&gt; nodes, etc.
</span></p>
<p>incorrect, if you have the keys to run containers, you have the keys of the kingdom (see bellow)</p>
<p><span class="foldable-quoted">&gt; In other words, does cluster admin granting the access rights above expects the user to be able to shutdown worker nodes at will from a remote machine?
</span></p>
<p>yes, admin must grant access *only* to trustworthy users, otherwise the system can be easily pwned (see bellow)</p>
<p><span class="foldable-quoted">&gt; What was given was a key to the cluster, not a ssh key to the root user.
</span></p>
<p>Create me an user account (without admin priviledges, no sudo) in your cluster and let me run the following container, let&#x27;s see what I can do after running it ;)</p>
<p>```<br />
apiVersion: v1<br />
kind: Pod<br />
metadata:<br />
&nbsp;&nbsp;name: hack-pod<br />
spec:<br />
&nbsp;&nbsp;containers:<br />
&nbsp;&nbsp;- image: busybox<br />
&nbsp;&nbsp;&nbsp;&nbsp;name: hack-container<br />
&nbsp;&nbsp;&nbsp;&nbsp;command: [ &quot;sh&quot;, &quot;-c&quot;, &quot;echo -e &#x27;pwned.<wbr />123\npwned.<wbr />123&#x27; | passwd root&quot; ]<br />
&nbsp;&nbsp;&nbsp;&nbsp;tty: true<br />
&nbsp;&nbsp;&nbsp;&nbsp;stdin: true<br />
&nbsp;&nbsp;&nbsp;&nbsp;volumeMounts:<br />
&nbsp;&nbsp;&nbsp;&nbsp;- mountPath: /etc/<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name: hack-volume<br />
&nbsp;&nbsp;restartPolicy: OnFailure<br />
&nbsp;&nbsp;volumes:<br />
&nbsp;&nbsp;- name: hack-volume<br />
&nbsp;&nbsp;&nbsp;&nbsp;hostPath:<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path: /etc/<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type: Directory<br />
```</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; But don't you need to have root access on the machine in these cases?

No, same as this bug, you only need access to the annotations

&gt; Understood, but that access is intended to run a workload in a container, and this gives access
&gt; to what is outside the containers. So you can reboot the host, copy all the data to some other 
&gt; nodes, etc.

incorrect, if you have the keys to run containers, you have the keys of the kingdom (see bellow)

&gt; In other words, does cluster admin granting the access rights above expects the user to be able to shutdown worker nodes at will from a remote machine? 

yes, admin must grant access *only* to trustworthy users, otherwise the system can be easily pwned (see bellow)

&gt; What was given was a key to the cluster, not a ssh key to the root user.

Create me an user account (without admin priviledges, no sudo) in your cluster and let me run the following container, let's see what I can do after running it ;)


```
apiVersion: v1
kind: Pod
metadata:
  name: hack-pod
spec:
  containers:
  - image: busybox
    name: hack-container
    command: [ "sh", "-c", "echo -e 'pwned.123\npwned.123' | passwd root" ]
    tty: true
    stdin: true
    volumeMounts:
    - mountPath: /etc/
      name: hack-volume
  restartPolicy: OnFailure
  volumes:
  - name: hack-volume
    hostPath:
      path: /etc/
      type: Directory
```
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/52" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T18:38:56.097813+00:00" title="2020-05-18 18:38:56 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/52"> #52</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Also, after discussion with other people, I realized that &quot;sex of angels&quot; is probably totally obscure and may have been misinterpreted. Sorry.</p>
<p>It&#x27;s a literal translation from a French expression. In French, &quot;discuter du sexe des anges&quot;, literally meaning &quot;talk about the sex of angels&quot; means having a discussion about secondary topics when there is a more important topic to deal with. Something like &quot;putting the cart before the horses&quot; but for talk.</p>
<p>The origin of the expression is the Constantinople battle of May 29, 1453, where the Turks allegedly won because the Byzantine forces were too busy arguing the deep theological question of whether angels were male or female.</p>
<p>So now this bug became an opportunity for a totally pointless cultural exchange ;-)</p>
<p>Sorry about the confusion this expression may have caused. For some reason, I believed it was also common in English.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Also, after discussion with other people, I realized that "sex of angels" is probably totally obscure and may have been misinterpreted. Sorry.

It's a literal translation from a French expression. In French, "discuter du sexe des anges", literally meaning "talk about the sex of angels" means having a discussion about secondary topics when there is a more important topic to deal with. Something like "putting the cart before the horses" but for talk.

The origin of the expression is the Constantinople battle of May 29, 1453, where the Turks allegedly won because the Byzantine forces were too busy arguing the deep theological question of whether angels were male or female.

So now this bug became an opportunity for a totally pointless cultural exchange ;-)

Sorry about the confusion this expression may have caused. For some reason, I believed it was also common in English.


</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/53" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~devimc" class="sprite person">Julio Montes (devimc)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T19:03:13.989897+00:00" title="2020-05-18 19:03:13 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/53"> #53</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Apologies if my comment was not clear enough or misunderstood, going back to the bug,</p>
<p>this is a bug if and *only if* the user can set/add annotations, right?</p>
<p>What does a user need to set/add annotations?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Apologies if my comment was not clear enough or misunderstood, going back to the bug, 

this is a bug if and *only if* the user can set/add annotations, right?

What does a user need to set/add annotations?
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/54" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-18T19:10:03.251901+00:00" title="2020-05-18 19:10:03 UTC">on 2020-05-18</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/54"> #54</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt;&gt; What was given was a key to the cluster, not a ssh key to the root user.
</span></p>
<p><span class="foldable-quoted">&gt; Create me an user account (without admin priviledges, no sudo)<br />
&gt; in your cluster and let me run the following container, let&#x27;s<br />
&gt; see what I can do after running it ;)
</span></p>
<p>Ouch.</p>
<p>So I guess that what you are saying is that not restricting access to annotations at all is consistent with the way the rest of the system works. If so, I agree this may not be a kata-runtime bug, although I must admit I find it very counter-intuitive. I am probably not the only one.</p>
<p>Going to sleep on this one.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt;&gt; What was given was a key to the cluster, not a ssh key to the root user.

&gt; Create me an user account (without admin priviledges, no sudo)
&gt; in your cluster and let me run the following container, let's
&gt; see what I can do after running it ;)

Ouch.

So I guess that what you are saying is that not restricting access to annotations at all is consistent with the way the rest of the system works. If so, I agree this may not be a kata-runtime bug, although I must admit I find it very counter-intuitive. I am probably not the only one.

Going to sleep on this one.
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/55" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~amshinde" class="sprite person">Archana Shinde (amshinde)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-19T02:40:30.192696+00:00" title="2020-05-19 02:40:30 UTC">on 2020-05-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/55"> #55</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Kubernetes defaults are not really secure by default__ One can pretty much bring the cluster down or gain elevated privileges by using hostpath as seen in the example posted by devimc.<br />
The responsibility to secure the cluster lies with the cluster admin using admission controller or Pod Security Policies to limit what an user can do with the pod. Pod Security policies allow for a fine grained control where pods that use hostpath or hostpid  or run as privileged are rejected.</p>
<p>We have taken a similar approach so far by allowing annotations with Kata  and placing the responsibility of validating fields on the service provider by having proper admission controls in place.<br />
That being said, I do see the value of kata annotations being used by the end-users and not just the service provider, such as being able to use different kernel or boot options for a particular workload.<br />
So it makes sense to have validation for the annotations in Kata.<br />
I am leaning towards Tao&#x27;s suggestion, add an ability to completely disable/enable annotations and extend this with a whitelist, with us identifying annotations that are safe for a user to configure.<br />
We would need to systematically go through the list of annotations and identify those that can be whitelisted or need additional validations. (We can potentially identify those that can be removed altogether in 2.0)<br />
Specifically for the the exec binaries, instead of having regular expressions, we can have a list of system paths such as [&quot;/usr/bin&quot;, &quot;/usr/local/bin&quot;, &quot;/opt/kata/bin&quot;].<br />
That way it is ok to use an executable as long as the base directory of the executable belongs to these paths. Would like to see what others think.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Kubernetes defaults are not really secure by default__ One can pretty much bring the cluster down or gain elevated privileges by using hostpath as seen in the example posted by devimc.
The responsibility to secure the cluster lies with the cluster admin using admission controller or Pod Security Policies to limit what an user can do with the pod. Pod Security policies allow for a fine grained control where pods that use hostpath or hostpid  or run as privileged are rejected.

We have taken a similar approach so far by allowing annotations with Kata  and placing the responsibility of validating fields on the service provider by having proper admission controls in place.
That being said, I do see the value of kata annotations being used by the end-users and not just the service provider, such as being able to use different kernel or boot options for a particular workload.
So it makes sense to have validation for the annotations in Kata.
I am leaning towards Tao's suggestion, add an ability to completely disable/enable annotations and extend this with a whitelist, with us identifying annotations that are safe for a user to configure.
We would need to systematically go through the list of annotations and identify those that can be whitelisted or need additional validations. (We can potentially identify those that can be removed altogether in 2.0)
Specifically for the the exec binaries, instead of having regular expressions, we can have a list of system paths such as ["/usr/bin", "/usr/local/bin", "/opt/kata/bin"].
That way it is ok to use an executable as long as the base directory of the executable belongs to these paths. Would like to see what others think.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/56" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-19T06:14:02.487225+00:00" title="2020-05-19 06:14:02 UTC">on 2020-05-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/56"> #56</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Julio,</p>
<p>Yes; the bug only exists if the user can set annotations.</p>
<p>I tried to think more about why my mental model broke down on your scenario. I tested it, and indeed, it seems to work. But I&#x27;m confused *why* it does work. My understanding was that the container root was in some namespace and therefore would have the access of a regular user to the host filesystem.</p>
<p>If I try to mount a filesystem using podman, here is what I get (which is what I expected):</p>
<p># mkdir /tmp/somedir<br />
# podman run -it -v /tmp/somedir:<wbr />/somedir busybox sh<br />
/ # ls /somedir/<br />
ls: can&#x27;t open &#x27;/somedir/&#x27;: Permission denied</p>
<p>If I try to do the same experience suggested by your pod with podman, here is what I get:</p>
<p># podman run -it -v /etc:/etc busybox sh<br />
/ # passwd<br />
passwd: unknown uid 0</p>
<p>This is what I expected. So why is it different with your example?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Julio,

Yes; the bug only exists if the user can set annotations.

I tried to think more about why my mental model broke down on your scenario. I tested it, and indeed, it seems to work. But I'm confused *why* it does work. My understanding was that the container root was in some namespace and therefore would have the access of a regular user to the host filesystem.

If I try to mount a filesystem using podman, here is what I get (which is what I expected):

# mkdir /tmp/somedir
# podman run -it -v /tmp/somedir:/somedir busybox sh 
/ # ls /somedir/
ls: can't open '/somedir/': Permission denied

If I try to do the same experience suggested by your pod with podman, here is what I get:

# podman run -it -v /etc:/etc busybox sh 
/ # passwd 
passwd: unknown uid 0

This is what I expected. So why is it different with your example?
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/57" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-19T06:16:59.499997+00:00" title="2020-05-19 06:16:59 UTC">on 2020-05-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/57"> #57</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Archana,</p>
<p><span class="foldable-quoted">&gt; Specifically for the the exec binaries, instead of having<br />
&gt; regular expressions, we can have a list of system paths<br />
&gt; such as [&quot;/usr/bin&quot;, &quot;/usr/local/bin&quot;, &quot;/opt/kata/bin&quot;]
</span></p>
<p>This option is mentioned in #45. What are the scenarios where you think it would help?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Archana,


&gt; Specifically for the the exec binaries, instead of having
&gt; regular expressions, we can have a list of system paths
&gt; such as ["/usr/bin", "/usr/local/bin", "/opt/kata/bin"]

This option is mentioned in #45. What are the scenarios where you think it would help?</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/58" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-19T06:19:14.352634+00:00" title="2020-05-19 06:19:14 UTC">on 2020-05-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/58"> #58</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; The responsibility to secure the cluster lies with<br />
&gt; the cluster admin using admission controller or Pod<br />
&gt; Security Policies to limit what an user can do with<br />
&gt; the pod. Pod Security policies allow for a fine grained<br />
&gt; control where pods that use hostpath or hostpid or run<br />
&gt; as privileged are rejected.
</span></p>
<p>Does that mean we should connect the annotation whitelists to pod security policies instead of config file? Or do you see a benefit to having both a config-based control of annotations as well as pod security policies?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; The responsibility to secure the cluster lies with
&gt; the cluster admin using admission controller or Pod
&gt; Security Policies to limit what an user can do with
&gt; the pod. Pod Security policies allow for a fine grained
&gt; control where pods that use hostpath or hostpid or run
&gt; as privileged are rejected.

Does that mean we should connect the annotation whitelists to pod security policies instead of config file? Or do you see a benefit to having both a config-based control of annotations as well as pod security policies?</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/59" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-19T08:04:26.085044+00:00" title="2020-05-19 08:04:26 UTC">on 2020-05-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/59"> #59</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Yesterday, I replaced regexps with globs as I initially intended (see comment #11 and then #47). The function to check is a little bit more complicated, but not that much:</p>
<p>+func checkPathIsInGl<wbr />obList(<wbr />list []string, path string) bool {<br />
+       for _, glob := range list {<br />
+               filenames, _ := filepath.Glob(glob)<br />
+               for _, a := range filenames {<br />
+                       if path == a {<br />
+                               return true<br />
+                       }<br />
+               }<br />
+       }<br />
+       return false<br />
+}<br />
+</p>
<p>I believe that globs are more natural to express families of paths, and they don&#x27;t suffer from the same risks for that use case as regexps, i.e. if you have /opt/kata/bin/*, it won&#x27;t accept /opt/kata/<wbr />bin/../<wbr />../../whatever as input.</p>
<p>Experimenting, one thing that surprised me is that the Go filepath.Glob() does not seem to have GLOB_BRACE, i.e. you can&#x27;t have /foo/{abc,def}/bar. That&#x27;s not a big deal IMO.</p>
<p>So for paths, that would be my recommendation.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Yesterday, I replaced regexps with globs as I initially intended (see comment #11 and then #47). The function to check is a little bit more complicated, but not that much:

+func checkPathIsInGlobList(list []string, path string) bool {
+       for _, glob := range list {
+               filenames, _ := filepath.Glob(glob)
+               for _, a := range filenames {
+                       if path == a {
+                               return true
+                       }
+               }
+       }
+       return false
+}
+

I believe that globs are more natural to express families of paths, and they don't suffer from the same risks for that use case as regexps, i.e. if you have /opt/kata/bin/*, it won't accept /opt/kata/bin/../../../whatever as input. 

Experimenting, one thing that surprised me is that the Go filepath.Glob() does not seem to have GLOB_BRACE, i.e. you can't have /foo/{abc,def}/bar. That's not a big deal IMO.

So for paths, that would be my recommendation.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/60" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-19T08:05:30.204392+00:00" title="2020-05-19 08:05:30 UTC">on 2020-05-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/60"> #60</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>I thought if I left the + at beginning of lines, it would not destroy indentation.</p>
<p>Is there a way to put code in a comment on this web site?</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">I thought if I left the + at beginning of lines, it would not destroy indentation.

Is there a way to put code in a comment on this web site?</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/61" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~ericisonic" class="sprite person">ERNST Eric (ericisonic)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-19T12:07:29+00:00" title="2020-05-19 12:07:29 UTC">on 2020-05-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/61"> #61</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Bonjour,</p>
<p>Euh, je ne sais pas pourquoi j&#x27;ai atteris dans ce sujet de discution.....</p>
<p>Le mar. 19 mai 2020 à 10:11, Christophe de Dinechin &lt;email address hidden&gt;<br />
a écrit :</p>
<p><span class="foldable-quoted">&gt; Yesterday, I replaced regexps with globs as I initially intended (see<br />
&gt; comment #11 and then #47). The function to check is a little bit more<br />
&gt; complicated, but not that much:<br />
&gt;<br />
&gt; +func checkPathIsInGl<wbr />obList(<wbr />list []string, path string) bool {<br />
&gt; +       for _, glob := range list {<br />
&gt; +               filenames, _ := filepath.Glob(glob)<br />
&gt; +               for _, a := range filenames {<br />
&gt; +                       if path == a {<br />
&gt; +                               return true<br />
&gt; +                       }<br />
&gt; +               }<br />
&gt; +       }<br />
&gt; +       return false<br />
&gt; +}<br />
&gt; +<br />
&gt;<br />
&gt; I believe that globs are more natural to express families of paths, and<br />
&gt; they don&#x27;t suffer from the same risks for that use case as regexps, i.e.<br />
&gt; if you have /opt/kata/bin/*, it won&#x27;t accept<br />
&gt; /opt/kata/<wbr />bin/../<wbr />../../whatever as input.<br />
&gt;<br />
&gt; Experimenting, one thing that surprised me is that the Go<br />
&gt; filepath.Glob() does not seem to have GLOB_BRACE, i.e. you can&#x27;t have<br />
&gt; /foo/{abc,def}/bar. That&#x27;s not a big deal IMO.<br />
&gt;<br />
&gt; So for paths, that would be my recommendation.<br />
&gt;<br />
&gt; --<br />
&gt; You received this bug notification because you are subscribed to the bug<br />
&gt; report.<br />
&gt; <a rel="nofollow" href="https://bugs.launchpad.net/bugs/1878234">https:/<wbr />/bugs.launchpad<wbr />.net/bugs/<wbr />1878234</a><br />
&gt;<br />
&gt; Title:<br />
&gt;   Some kata-runtime annotations can execute arbitrary code<br />
&gt;<br />
&gt; Status in Kata Containers:<br />
&gt;   New<br />
&gt;<br />
&gt; Bug description:<br />
&gt;   =======<wbr />=======<wbr />=======<wbr />=======<wbr />====<br />
&gt;   This issue is being treated as a potential security risk under embargo.<br />
&gt;   Please do not make any public mention of embargoed (private) security<br />
&gt;   vulnerabilities before their coordinated publication by the Kata<br />
&gt;   Containers Vulnerability Management Team in the form of an official<br />
&gt;   Kata Containers Security Advisory. This includes discussion of the bug<br />
&gt;   or associated fixes in public forums such as mailing lists, code review<br />
&gt;   systems and bug trackers. Please also avoid private disclosure to other<br />
&gt;   individuals not already approved for access to this information, and<br />
&gt;   provide this same reminder to those who are made aware of the issue<br />
&gt;   prior to publication. All discussion should remain confined to this<br />
&gt;   private bug report, and any proposed fixes should be added to the bug<br />
&gt;   as attachments.<br />
&gt;   =======<wbr />=======<wbr />=======<wbr />=======<wbr />====<br />
&gt;<br />
&gt;   A few of the kata-runtime annotations can be used to execute arbitrary<br />
&gt;   pre-existing binaries on the host.<br />
&gt;<br />
&gt;   For example, &quot;virtio_fs_daemon&quot; in combination with<br />
&gt;   &quot;virtio_<wbr />fs_extra_<wbr />args&quot; makes it possible to invoke a host binary with<br />
&gt;   arbitrary args.<br />
&gt;<br />
&gt;   The hypervisor.path and hypervisor.<wbr />jailer_<wbr />path annotations could also<br />
&gt;   be used the same way.<br />
&gt;<br />
&gt;   Suggestion for fix: add valid annotation values to the configuration<br />
&gt;   file that lists the acceptable values for such annotations, with a<br />
&gt;   suitable default value of &quot;empty&quot;.<br />
&gt;<br />
&gt; To manage notifications about this bug go to:<br />
&gt; <a rel="nofollow" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+subscriptions">https:/<wbr />/bugs.launchpad<wbr />.net/katacontai<wbr />ners.io/<wbr />+bug/1878234/<wbr />+subscriptions</a><br />
&gt;
</span></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Bonjour,

Euh, je ne sais pas pourquoi j'ai atteris dans ce sujet de discution.....




Le mar. 19 mai 2020 à 10:11, Christophe de Dinechin &lt;christophe@dinechin.org&gt;
a écrit :

&gt; Yesterday, I replaced regexps with globs as I initially intended (see
&gt; comment #11 and then #47). The function to check is a little bit more
&gt; complicated, but not that much:
&gt;
&gt; +func checkPathIsInGlobList(list []string, path string) bool {
&gt; +       for _, glob := range list {
&gt; +               filenames, _ := filepath.Glob(glob)
&gt; +               for _, a := range filenames {
&gt; +                       if path == a {
&gt; +                               return true
&gt; +                       }
&gt; +               }
&gt; +       }
&gt; +       return false
&gt; +}
&gt; +
&gt;
&gt; I believe that globs are more natural to express families of paths, and
&gt; they don't suffer from the same risks for that use case as regexps, i.e.
&gt; if you have /opt/kata/bin/*, it won't accept
&gt; /opt/kata/bin/../../../whatever as input.
&gt;
&gt; Experimenting, one thing that surprised me is that the Go
&gt; filepath.Glob() does not seem to have GLOB_BRACE, i.e. you can't have
&gt; /foo/{abc,def}/bar. That's not a big deal IMO.
&gt;
&gt; So for paths, that would be my recommendation.
&gt;
&gt; --
&gt; You received this bug notification because you are subscribed to the bug
&gt; report.
&gt; https://bugs.launchpad.net/bugs/1878234
&gt;
&gt; Title:
&gt;   Some kata-runtime annotations can execute arbitrary code
&gt;
&gt; Status in Kata Containers:
&gt;   New
&gt;
&gt; Bug description:
&gt;   ================================
&gt;   This issue is being treated as a potential security risk under embargo.
&gt;   Please do not make any public mention of embargoed (private) security
&gt;   vulnerabilities before their coordinated publication by the Kata
&gt;   Containers Vulnerability Management Team in the form of an official
&gt;   Kata Containers Security Advisory. This includes discussion of the bug
&gt;   or associated fixes in public forums such as mailing lists, code review
&gt;   systems and bug trackers. Please also avoid private disclosure to other
&gt;   individuals not already approved for access to this information, and
&gt;   provide this same reminder to those who are made aware of the issue
&gt;   prior to publication. All discussion should remain confined to this
&gt;   private bug report, and any proposed fixes should be added to the bug
&gt;   as attachments.
&gt;   ================================
&gt;
&gt;   A few of the kata-runtime annotations can be used to execute arbitrary
&gt;   pre-existing binaries on the host.
&gt;
&gt;   For example, "virtio_fs_daemon" in combination with
&gt;   "virtio_fs_extra_args" makes it possible to invoke a host binary with
&gt;   arbitrary args.
&gt;
&gt;   The hypervisor.path and hypervisor.jailer_path annotations could also
&gt;   be used the same way.
&gt;
&gt;   Suggestion for fix: add valid annotation values to the configuration
&gt;   file that lists the acceptable values for such annotations, with a
&gt;   suitable default value of "empty".
&gt;
&gt; To manage notifications about this bug go to:
&gt; https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+subscriptions
&gt;
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/62" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-19T17:49:49.512337+00:00" title="2020-05-19 17:49:49 UTC">on 2020-05-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/62"> #62</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite download-icon" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+attachment/5374221/+files/host-execution-vulnerability-v3.tar">Series of patches to control annotations</a>
        <a class="sprite edit action-icon" href="/katacontainers.io/+bug/1878234/+attachment/5374221">Edit</a>
        (110.0 KiB,
        application/x-tar)
      </li>
    </ul>

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Attached is a revised series of patches.</p>
<p>0012-config-<wbr />Add-makefile-<wbr />variables-<wbr />for-path-<wbr />lists.patch is my attempt at addressing Fabiano&#x27;s comments on distro build-time configuration. I am not entirely sure this is the right way to do it for arrays.</p>
<p>0014-config-<wbr />Use-glob-<wbr />instead-<wbr />of-regexp-<wbr />to-match-<wbr />paths-in-<wbr />.patch is the replacement of regexps with glob for paths. With that change, I believe that the security concerns are no longer there, so I removed the SECURITY WARNING.</p>
<p>0015-config-<wbr />Whitelist-<wbr />hypervisor-<wbr />annotations-<wbr />by-name.<wbr />patch is my attempt at implementing Peng Tao&#x27;s whitelisting idea. I have only implemented it for the hypervisor. Agent and runtime may follow, but I have several questions about this one, including:</p>
<p>1. If an annotation is not whitelisted, should we fail to start, or just ignore it? It&#x27;s a bit harder to ignore it with the existing code structure, so for now it fails.</p>
<p>2. Should each section have its own &quot;enable_<wbr />annotations&quot; configuration? Or does it make sense to add a global [anotations] section to configure all the annotation-related aspects?</p>
<p>But then, the top-level question is whether this a bug. I still believe it is better to not allow arbitrary execution so easily, so I still see that as a bug, although following Julio&#x27;s comments, it may well fit in the &quot;normal&quot; security model.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Attached is a revised series of patches.

0012-config-Add-makefile-variables-for-path-lists.patch is my attempt at addressing Fabiano's comments on distro build-time configuration. I am not entirely sure this is the right way to do it for arrays.

0014-config-Use-glob-instead-of-regexp-to-match-paths-in-.patch is the replacement of regexps with glob for paths. With that change, I believe that the security concerns are no longer there, so I removed the SECURITY WARNING.

0015-config-Whitelist-hypervisor-annotations-by-name.patch is my attempt at implementing Peng Tao's whitelisting idea. I have only implemented it for the hypervisor. Agent and runtime may follow, but I have several questions about this one, including:

1. If an annotation is not whitelisted, should we fail to start, or just ignore it? It's a bit harder to ignore it with the existing code structure, so for now it fails.

2. Should each section have its own "enable_annotations" configuration? Or does it make sense to add a global [anotations] section to configure all the annotation-related aspects?



But then, the top-level question is whether this a bug. I still believe it is better to not allow arbitrary execution so easily, so I still see that as a bug, although following Julio's comments, it may well fit in the "normal" security model.
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/63" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-19T17:49:53.268813+00:00" title="2020-05-19 17:49:53 UTC">on 2020-05-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/63"> #63</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    <ul style="margin-bottom: 1em">
      <li class="download-attachment">
        <a class="sprite download-icon" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+attachment/5374222/+files/host-execution-vulnerability-v3.tar">Series of patches to control annotations</a>
        <a class="sprite edit action-icon" href="/katacontainers.io/+bug/1878234/+attachment/5374222">Edit</a>
        (110.0 KiB,
        application/x-tar)
      </li>
    </ul>

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Attached is a revised series of patches.</p>
<p>0012-config-<wbr />Add-makefile-<wbr />variables-<wbr />for-path-<wbr />lists.patch is my attempt at addressing Fabiano&#x27;s comments on distro build-time configuration. I am not entirely sure this is the right way to do it for arrays.</p>
<p>0014-config-<wbr />Use-glob-<wbr />instead-<wbr />of-regexp-<wbr />to-match-<wbr />paths-in-<wbr />.patch is the replacement of regexps with glob for paths. With that change, I believe that the security concerns are no longer there, so I removed the SECURITY WARNING.</p>
<p>0015-config-<wbr />Whitelist-<wbr />hypervisor-<wbr />annotations-<wbr />by-name.<wbr />patch is my attempt at implementing Peng Tao&#x27;s whitelisting idea. I have only implemented it for the hypervisor. Agent and runtime may follow, but I have several questions about this one, including:</p>
<p>1. If an annotation is not whitelisted, should we fail to start, or just ignore it? It&#x27;s a bit harder to ignore it with the existing code structure, so for now it fails.</p>
<p>2. Should each section have its own &quot;enable_<wbr />annotations&quot; configuration? Or does it make sense to add a global [anotations] section to configure all the annotation-related aspects?</p>
<p>But then, the top-level question is whether this a bug. I still believe it is better to not allow arbitrary execution so easily, so I still see that as a bug, although following Julio&#x27;s comments, it may well fit in the &quot;normal&quot; security model.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Attached is a revised series of patches.

0012-config-Add-makefile-variables-for-path-lists.patch is my attempt at addressing Fabiano's comments on distro build-time configuration. I am not entirely sure this is the right way to do it for arrays.

0014-config-Use-glob-instead-of-regexp-to-match-paths-in-.patch is the replacement of regexps with glob for paths. With that change, I believe that the security concerns are no longer there, so I removed the SECURITY WARNING.

0015-config-Whitelist-hypervisor-annotations-by-name.patch is my attempt at implementing Peng Tao's whitelisting idea. I have only implemented it for the hypervisor. Agent and runtime may follow, but I have several questions about this one, including:

1. If an annotation is not whitelisted, should we fail to start, or just ignore it? It's a bit harder to ignore it with the existing code structure, so for now it fails.

2. Should each section have its own "enable_annotations" configuration? Or does it make sense to add a global [anotations] section to configure all the annotation-related aspects?



But then, the top-level question is whether this a bug. I still believe it is better to not allow arbitrary execution so easily, so I still see that as a bug, although following Julio's comments, it may well fit in the "normal" security model.
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/64" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~amshinde" class="sprite person">Archana Shinde (amshinde)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-19T17:52:45.836689+00:00" title="2020-05-19 17:52:45 UTC">on 2020-05-19</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/64"> #64</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; If I try to mount a filesystem using podman, here is what I get (which is what I expected):
</span></p>
<p><span class="foldable-quoted">&gt; # mkdir /tmp/somedir<br />
&gt; # podman run -it -v /tmp/somedir:<wbr />/somedir busybox sh<br />
&gt; / # ls /somedir/<br />
&gt; ls: can&#x27;t open &#x27;/somedir/&#x27;: Permission denied
</span></p>
<p><span class="foldable-quoted">&gt; If I try to do the same experience suggested by your pod with podman, here is what I get:
</span></p>
<p><span class="foldable-quoted">&gt; # podman run -it -v /etc:/etc busybox sh<br />
&gt; / # passwd<br />
&gt; passwd: unknown uid 0
</span></p>
<p><span class="foldable-quoted">&gt; This is what I expected. So why is it different with your example?
</span></p>
<p>Christophe, looks like you are running a rootless container there with podman(I&#x27;ll let you confirm), which explains the permissions issue, whereas containers launched with k8s are launched as root.</p>
<p><span class="foldable-quoted">&gt; Specifically for the the exec binaries, instead of having<br />
&gt; regular expressions, we can have a list of system paths<br />
&gt; such as [&quot;/usr/bin&quot;, &quot;/usr/local/bin&quot;, &quot;/opt/kata/bin&quot;]
</span></p>
<p>I mentioned this as a way to get rid of regular expressions in the configuration. You may simply get the base dir of the path provided for the executable using golang path.Dir (<a rel="nofollow" href="https://golang.org/pkg/path/#Dir">https:/<wbr />/golang.<wbr />org/pkg/<wbr />path/#Dir</a>) and check if the directory is contained within the system paths configured(using maybe go strings.Prefix)</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; If I try to mount a filesystem using podman, here is what I get (which is what I expected):

&gt; # mkdir /tmp/somedir
&gt; # podman run -it -v /tmp/somedir:/somedir busybox sh
&gt; / # ls /somedir/
&gt; ls: can't open '/somedir/': Permission denied

&gt; If I try to do the same experience suggested by your pod with podman, here is what I get:

&gt; # podman run -it -v /etc:/etc busybox sh
&gt; / # passwd
&gt; passwd: unknown uid 0

&gt; This is what I expected. So why is it different with your example?

Christophe, looks like you are running a rootless container there with podman(I'll let you confirm), which explains the permissions issue, whereas containers launched with k8s are launched as root.

&gt; Specifically for the the exec binaries, instead of having
&gt; regular expressions, we can have a list of system paths
&gt; such as ["/usr/bin", "/usr/local/bin", "/opt/kata/bin"]

I mentioned this as a way to get rid of regular expressions in the configuration. You may simply get the base dir of the path provided for the executable using golang path.Dir (https://golang.org/pkg/path/#Dir) and check if the directory is contained within the system paths configured(using maybe go strings.Prefix)

</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/65" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-05-20T17:41:09.197809+00:00" title="2020-05-20 17:41:09 UTC">on 2020-05-20</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/65"> #65</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; Christophe, looks like you are running a rootless<br />
&gt; container there with podman(I&#x27;ll let you confirm),<br />
&gt; which explains the permissions issue, whereas<br />
&gt; containers launched with k8s are launched as root.
</span></p>
<p>I&#x27;m running podman as root, if that&#x27;s what you are asking.<br />
However, even in that case, the container root user is<br />
not host uid 0, but uses namespaces to map that to some<br />
other user. This is the reason of the failure above.</p>
<p>Apparently, the behavior reported for k8s does not happen with OpenShift either. OpenShift, like podman, blocks this particular form of attack. I suspect it would be possible to achieve a similar result with a privileged container, however.</p>
<p><span class="foldable-quoted">&gt; I mentioned this as a way to get rid of regular<br />
&gt; expressions in the configuration.
</span></p>
<p>In comment #62, I shared a new iteration of the patch series, which uses glob instead of regexp. I see no security issue with glob, since a pattern like /opt/kata/<wbr />bin/../<wbr />../../usr/<wbr />bin/ls is not a valid match for glob pattern /opt/kata/bin/*. As mentioned in comment #11, this was my first choice, but for (very invalid) reasons I first shared an implementation using regexps.</p>
<p>Do you object to using glob patterns? They are pretty familiar to any Unix sysadmin IMO.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; Christophe, looks like you are running a rootless
&gt; container there with podman(I'll let you confirm),
&gt; which explains the permissions issue, whereas
&gt; containers launched with k8s are launched as root.

I'm running podman as root, if that's what you are asking.
However, even in that case, the container root user is
not host uid 0, but uses namespaces to map that to some
other user. This is the reason of the failure above.

Apparently, the behavior reported for k8s does not happen with OpenShift either. OpenShift, like podman, blocks this particular form of attack. I suspect it would be possible to achieve a similar result with a privileged container, however.

&gt; I mentioned this as a way to get rid of regular
&gt; expressions in the configuration.

In comment #62, I shared a new iteration of the patch series, which uses glob instead of regexp. I see no security issue with glob, since a pattern like /opt/kata/bin/../../../usr/bin/ls is not a valid match for glob pattern /opt/kata/bin/*. As mentioned in comment #11, this was my first choice, but for (very invalid) reasons I first shared an implementation using regexps.

Do you object to using glob patterns? They are pretty familiar to any Unix sysadmin IMO.
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/66" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-10-15T09:09:31.714440+00:00" title="2020-10-15 09:09:31 UTC">on 2020-10-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/66"> #66</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Known as CVE-2020-27151.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Known as CVE-2020-27151.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/67" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~knoel-9" class="sprite person">Karen Noel (knoel-9)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-10-15T11:34:55+00:00" title="2020-10-15 11:34:55 UTC">on 2020-10-15</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/67"> #67</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Cool. We don&#x27;t ship Kata yet, but we have a component in Bugzilla. Will the<br />
Red Hat ProdSec team create a BZ to make sure it gets fixed downstream?</p>
<p>Karen</p>
<p>On Thu, Oct 15, 2020, 6:05 AM Christophe de Dinechin &lt;<br />
&lt;email address hidden&gt;&gt; wrote:</p>
<p><span class="foldable-quoted">&gt; Known as CVE-2020-27151.<br />
&gt;<br />
&gt; ** CVE added: <a rel="nofollow" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=2020-27151">https:/<wbr />/cve.mitre.<wbr />org/cgi-<wbr />bin/cvename.<wbr />cgi?name=<wbr />2020-27151</a><br />
&gt;<br />
&gt; --<br />
&gt; You received this bug notification because you are subscribed to the bug<br />
&gt; report.<br />
&gt; <a rel="nofollow" href="https://bugs.launchpad.net/bugs/1878234">https:/<wbr />/bugs.launchpad<wbr />.net/bugs/<wbr />1878234</a><br />
&gt;<br />
&gt; Title:<br />
&gt;   Some kata-runtime annotations can execute arbitrary code<br />
&gt;<br />
&gt; Status in Kata Containers:<br />
&gt;   New<br />
&gt;<br />
&gt; Bug description:<br />
&gt;   =======<wbr />=======<wbr />=======<wbr />=======<wbr />====<br />
&gt;   This issue is being treated as a potential security risk under embargo.<br />
&gt;   Please do not make any public mention of embargoed (private) security<br />
&gt;   vulnerabilities before their coordinated publication by the Kata<br />
&gt;   Containers Vulnerability Management Team in the form of an official<br />
&gt;   Kata Containers Security Advisory. This includes discussion of the bug<br />
&gt;   or associated fixes in public forums such as mailing lists, code review<br />
&gt;   systems and bug trackers. Please also avoid private disclosure to other<br />
&gt;   individuals not already approved for access to this information, and<br />
&gt;   provide this same reminder to those who are made aware of the issue<br />
&gt;   prior to publication. All discussion should remain confined to this<br />
&gt;   private bug report, and any proposed fixes should be added to the bug<br />
&gt;   as attachments.<br />
&gt;   =======<wbr />=======<wbr />=======<wbr />=======<wbr />====<br />
&gt;<br />
&gt;   A few of the kata-runtime annotations can be used to execute arbitrary<br />
&gt;   pre-existing binaries on the host.<br />
&gt;<br />
&gt;   For example, &quot;virtio_fs_daemon&quot; in combination with<br />
&gt;   &quot;virtio_<wbr />fs_extra_<wbr />args&quot; makes it possible to invoke a host binary with<br />
&gt;   arbitrary args.<br />
&gt;<br />
&gt;   The hypervisor.path and hypervisor.<wbr />jailer_<wbr />path annotations could also<br />
&gt;   be used the same way.<br />
&gt;<br />
&gt;   Suggestion for fix: add valid annotation values to the configuration<br />
&gt;   file that lists the acceptable values for such annotations, with a<br />
&gt;   suitable default value of &quot;empty&quot;.<br />
&gt;<br />
&gt; To manage notifications about this bug go to:<br />
&gt; <a rel="nofollow" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+subscriptions">https:/<wbr />/bugs.launchpad<wbr />.net/katacontai<wbr />ners.io/<wbr />+bug/1878234/<wbr />+subscriptions</a><br />
&gt;<br />
&gt;
</span></p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Cool. We don't ship Kata yet, but we have a component in Bugzilla. Will the
Red Hat ProdSec team create a BZ to make sure it gets fixed downstream?

Karen

On Thu, Oct 15, 2020, 6:05 AM Christophe de Dinechin &lt;
1878234@bugs.launchpad.net&gt; wrote:

&gt; Known as CVE-2020-27151.
&gt;
&gt; ** CVE added: https://cve.mitre.org/cgi-bin/cvename.cgi?name=2020-27151
&gt;
&gt; --
&gt; You received this bug notification because you are subscribed to the bug
&gt; report.
&gt; https://bugs.launchpad.net/bugs/1878234
&gt;
&gt; Title:
&gt;   Some kata-runtime annotations can execute arbitrary code
&gt;
&gt; Status in Kata Containers:
&gt;   New
&gt;
&gt; Bug description:
&gt;   ================================
&gt;   This issue is being treated as a potential security risk under embargo.
&gt;   Please do not make any public mention of embargoed (private) security
&gt;   vulnerabilities before their coordinated publication by the Kata
&gt;   Containers Vulnerability Management Team in the form of an official
&gt;   Kata Containers Security Advisory. This includes discussion of the bug
&gt;   or associated fixes in public forums such as mailing lists, code review
&gt;   systems and bug trackers. Please also avoid private disclosure to other
&gt;   individuals not already approved for access to this information, and
&gt;   provide this same reminder to those who are made aware of the issue
&gt;   prior to publication. All discussion should remain confined to this
&gt;   private bug report, and any proposed fixes should be added to the bug
&gt;   as attachments.
&gt;   ================================
&gt;
&gt;   A few of the kata-runtime annotations can be used to execute arbitrary
&gt;   pre-existing binaries on the host.
&gt;
&gt;   For example, "virtio_fs_daemon" in combination with
&gt;   "virtio_fs_extra_args" makes it possible to invoke a host binary with
&gt;   arbitrary args.
&gt;
&gt;   The hypervisor.path and hypervisor.jailer_path annotations could also
&gt;   be used the same way.
&gt;
&gt;   Suggestion for fix: add valid annotation values to the configuration
&gt;   file that lists the acceptable values for such annotations, with a
&gt;   suitable default value of "empty".
&gt;
&gt; To manage notifications about this bug go to:
&gt; https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+subscriptions
&gt;
&gt;
</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/68" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~amshinde" class="sprite person">Archana Shinde (amshinde)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-11-20T16:21:01.904426+00:00" title="2020-11-20 16:21:01 UTC">on 2020-11-20</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/68"> #68</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p>Christophe, now that we have the fix pushed in a release, we should make the CVE public. I dont see it has been published yet.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">Christophe, now that we have the fix pushed in a release, we should make the CVE public. I dont see it has been published yet.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  <div class="boardCommentActivity">
    
      <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in katacontainers.io: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        New &#8594; Confirmed
      </td>
    </tr>
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        Confirmed &#8594; Fix Committed
      </td>
    </tr>
  
</table>
    
    
  </div>
  
</div>

          

          

          

        
        
          

          
              <div class="boardComment">
  <div class="boardCommentDetails">
    
      <a href="https://launchpad.net/~amshinde" class="sprite person">Archana Shinde (amshinde)</a>
    
    <time title="2020-12-03 19:32:37 UTC" datetime="2020-12-03T19:32:37.288601+00:00">on 2020-12-03</time>
  </div>
  <div class="boardCommentActivity">
    <table class="bug-activity">
  
    
      <tr>
        <td colspan="2">Changed in katacontainers.io: </td>
      </tr>
    
    <tr>
      <td style="text-align: right;">
        <b>status</b>:
      </td>
      <td>
        Fix Committed &#8594; Fix Released
      </td>
    </tr>
  
</table>
  </div>
</div>
          

          

        
        
          

          
              <div class="boardComment">
  <div class="boardCommentDetails">
    
      <a href="https://launchpad.net/~amshinde" class="sprite person">Archana Shinde (amshinde)</a>
    
    <time title="2020-12-03 19:38:45 UTC" datetime="2020-12-03T19:38:45.153019+00:00">on 2020-12-03</time>
  </div>
  <div class="boardCommentActivity">
    <table class="bug-activity">
  
    
      
    
    <tr>
      <td style="text-align: right;">
        <b>information type</b>:
      </td>
      <td>
        Private Security &#8594; Public Security
      </td>
    </tr>
  
</table>
  </div>
</div>
          

          

        
        
          
            <div xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/UserComments" class="boardComment editable-message
                  " data-baseurl="/katacontainers.io/+bug/1878234/comments/69" data-i-can-edit="False">
  <div class="boardCommentDetails">
    <div class="message-revision-container">
      <div class="message-revision-container-header">
        <span>Revision history for this message</span>
        <img src="/+icing/build/overlay/assets/skins/sam/images/close.gif" class="message-revision-close" />
      </div>
      <script type="text/template">
        <div class='message-revision-item'>
          <div class='message-revision-title'>
              <a class="sprite remove action-icon message-revision-del-btn">
                  Remove
              </a>
              <a class="js-action">
                  Revision #{revision}, created at {date_created_display}
              </a>
          </div>
          <div class='message-revision-body'>{content}</div>
        </div>
      </script>
      <div class="message-revision-list"></div>
    </div>

    <table>
      <tbody>
        <tr>
          <td>
            <a href="https://launchpad.net/~i-christophe" class="sprite person">Christophe de Dinechin (i-christophe)</a>
            wrote
            <time itemprop="commentTime" datetime="2020-12-09T21:52:33.473484+00:00" title="2020-12-09 21:52:33 UTC">on 2020-12-09</time><span class="editable-message-last-edit-date">:
              </span>
              
          </td>
          

          <td>
            
          </td>
          <td>
            
          </td>
          <td class="bug-comment-index">
          <a itemprop="url" href="/katacontainers.io/+bug/1878234/comments/69"> #69</a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="boardCommentBody">
    

    

    

  
  <div class="editable-message-body">
    <div class="comment-text editable-message-text" itemprop="commentText"><p><span class="foldable-quoted">&gt; Christophe, now that we have the fix pushed in a release, we should make the CVE public. I dont see it has been published yet.
</span></p>
<p>It&#x27;s public now, see <a rel="nofollow" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27151">https:/<wbr />/cve.mitre.<wbr />org/cgi-<wbr />bin/cvename.<wbr />cgi?name=<wbr />CVE-2020-<wbr />27151</a>.</p></div>
    
    
    
  </div>

  <div class="editable-message-form" style="display: none">
     <textarea style="width: 100%" rows="10">&gt; Christophe, now that we have the fix pushed in a release, we should make the CVE public. I dont see it has been published yet.

It's public now, see https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27151.</textarea>
     <input type="button" value="Update" class="editable-message-update-btn" />
     <input type="button" value="Cancel" class="editable-message-cancel-btn" />
  </div>


  </div>

  
  
</div>

          

          

          

        
        <div style="float: right;">
          <a class="menu-link-activitylog" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+activity">See full activity log</a>
        </div>
        <div class="clearfix"></div>

        
          

          
            <div align="center" id="add-comment-login-first">
              To post a comment you must <a href="+login?comments=all">log in</a>.
            </div>
          
        
        
      

      </div><!-- class="top-portlet" -->
      </div><!--- id="maincontentsub"-->
      <div>
        <div id="duplicate-form-container"></div>
        <div id="privacy-form-container"></div>
      </div>
    </div>
            
            
          </div><!-- yui-b -->
        </div><!-- yui-main -->

        
          <div id="side-portlets" class="yui-b side">
            
      <div id="involvement" class="portlet">
        <ul class="involvement">
          <li class="single">
            <a class="sprite bugs" href="/katacontainers.io/+filebug">
              Report a bug
            </a>
          </li>
        </ul>
      </div>
      <div id="privacy" class="first portlet public">
  <div id="privacy-text">
     <span id="information-type-summary" class="sprite public">This report contains
         <strong id="information-type">Public Security</strong>
         information
     </span>&nbsp;<a class="sprite edit action-icon" id="privacy-link" href="/katacontainers.io/+bug/1878234/+secrecy">Edit</a>

     <div id="information-type-description" style="padding-top: 5px">Everyone can see this security related information.
</div>
  </div>
</div>

      <div id="portlet-actions" class="portlet vertical">
  <ul id="duplicate-actions">
    <li class="sprite bug-dupe">
    <span id="mark-duplicate-text">
    <a class="menu-link-mark-dupe" href="/katacontainers.io/+bug/1878234/+duplicate">Mark as duplicate</a>
    </span>
    </li>
    
    <li><a class="menu-link-createquestion sprite add" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+create-question">Convert to a question</a></li>
    
    <li><a class="menu-link-addbranch sprite add" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+addbranch">Link a related branch</a></li>
    <li><a class="menu-link-linktocve sprite add" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+linkcve">Link to <abbr title="Common Vulnerabilities and Exposures Index">CVE</abbr></a></li>
    <li><a class="menu-link-unlinkcve sprite modify remove" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+unlinkcve">Remove CVE link</a></li>
  </ul>
</div>

      

      <div class="portlet vertical" id="portlet-subscription">
  <div class="section">
    <div id="current_user_subscription" class="False">
      
        <span>You are</span>
        
        <a class="menu-link-subscription sprite modify edit" href="/katacontainers.io/+bug/1878234/+subscribe">
           
           
           
           not directly subscribed to this bug's notifications.
        </a>
      
      
    </div>
    <div id="sub-unsub-spinner">Subscribing...</div>
    <ul>
      
      <li><a class="menu-link-editsubscriptions sprite modify edit" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+subscriptions" title="View and change your subscriptions to this bug">Edit bug mail</a></li>
    </ul>
  </div>
  <script type="text/javascript">
    LPJS.use('io-base', 'node',
            'lp.bugs.bugtask_index.portlets.subscription', function(Y) {
        Y.on('domready', function() {
            Y.lp.bugs.bugtask_index.portlets.subscription.initialize();
        });
    });
  </script>
</div>

      <div class="portlet vertical" id="portlet-subscribers">
  <h2>Other bug subscribers</h2>
  <div>
    <div><a class="menu-link-addsubscriber sprite add" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+addsubscriber" title="Launchpad will email that person whenever this bugs changes">Subscribe someone else</a></div>
  </div>
  <div id="other-bug-subscribers"></div>
</div>

      

      

      
  <div class="portlet" id="portlet-patches">
    <h2>Patches</h2>
    <ul>
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+attachment/5371684/+files/patches.tgz">Patches that only addresses the VirtIOFS case - It looks like the hypervisor is not</a>
        <small>
          (<a href="/katacontainers.io/+bug/1878234/+attachment/5371684">edit</a>)
        </small>
      </li>
      <li class="download-attachment">
        <a class="sprite haspatch-icon" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+attachment/5372233/+files/host-execution-vulnerability.patch">Patch arbitrary host execution vulnerability in kata runtime</a>
        <small>
          (<a href="/katacontainers.io/+bug/1878234/+attachment/5372233">edit</a>)
        </small>
      </li>
    </ul>
    <ul>
      <li>
        <a class="sprite add" href="/katacontainers.io/+bug/1878234/+addcomment?field.patch=on">Add patch</a>
      </li>
    </ul>
  </div>
  <div class="portlet" id="portlet-attachments">
    <h2>Bug attachments</h2>
    <ul>
      <li class="download-attachment">
        <a class="sprite download-icon" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+attachment/5373236/+files/KCSA-2020-0001-draft">draft-KCSA</a>
        <small>
          (<a href="/katacontainers.io/+bug/1878234/+attachment/5373236">edit</a>)
        </small>
      </li>
      <li class="download-attachment">
        <a class="sprite download-icon" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+attachment/5374221/+files/host-execution-vulnerability-v3.tar">Series of patches to control annotations</a>
        <small>
          (<a href="/katacontainers.io/+bug/1878234/+attachment/5374221">edit</a>)
        </small>
      </li>
      <li class="download-attachment">
        <a class="sprite download-icon" href="https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+attachment/5374222/+files/host-execution-vulnerability-v3.tar">Series of patches to control annotations</a>
        <small>
          (<a href="/katacontainers.io/+bug/1878234/+attachment/5374222">edit</a>)
        </small>
      </li>
    </ul>
    <ul>
      <li>
        <a class="sprite add" href="/katacontainers.io/+bug/1878234/+addcomment">Add attachment</a>
      </li>
    </ul>
  </div>


      

    
          </div><!-- yui-b side -->
        
      </div><!-- yui-t4 -->

      
  <div id="footer" class="footer">
    <div class="lp-arcana">
        <div class="lp-branding">
          <a href="https://launchpad.net/"><img src="/@@/launchpad-logo-and-name-hierarchy.png" alt="Launchpad" /></a>
          &nbsp;&bull;&nbsp;
          <a href="https://launchpad.net/+tour">Take the tour</a>
          &nbsp;&bull;&nbsp;
          <a href="https://help.launchpad.net/">Read the guide</a>
          &nbsp;
          <form id="globalsearch" method="get" accept-charset="UTF-8" action="https://launchpad.net/+search">
            <input type="search" id="search-text" name="field.text" />
            <input type="image" src="/@@/search" style="vertical-align:5%" alt="Search Launchpad" />
          </form>
        </div>
        
  

    </div>

    <div class="colophon">
      &copy; 2004-2021
      <a href="http://canonical.com/">Canonical&nbsp;Ltd.</a>
      &nbsp;&bull;&nbsp;
      <a href="https://launchpad.net/legal">Terms of use</a>
      &nbsp;&bull;&nbsp;
      <a href="https://www.ubuntu.com/legal/dataprivacy">Data privacy</a>
      &nbsp;&bull;&nbsp;
      <a href="/feedback">Contact Launchpad Support</a>
      
      &nbsp;&bull;&nbsp;
      <a href="http://blog.launchpad.net/">Blog</a>
      
	&nbsp;&bull;&nbsp;
	<a href="https://canonical.com/careers">Careers</a>
      
      &nbsp;&bull;&nbsp;
      <a href="https://twitter.com/launchpadstatus">System status</a>
      <span id="lp-version">
      &nbsp;&bull;&nbsp;
        r0d8de2b
        
        
        (<a href="https://dev.launchpad.net/">Get the code!</a>)
      </span>
    </div>
  </div>

    </div><!-- yui-d0-->

    
  
  
  <script id="json-cache-script">LP.cache = {"subscribers_portlet_url_data": {"web_link": "https://bugs.launchpad.net/bugs/1878234", "self_link": "https://bugs.launchpad.net/api/devel/bugs/1878234"}, "information_type_data": {"PUBLIC": {"description": "Everyone can see this information.\n", "name": "Public", "is_private": false, "order": 0, "description_css_class": "choice-description", "value": "PUBLIC"}, "PUBLICSECURITY": {"description": "Everyone can see this security related information.\n", "name": "Public Security", "is_private": false, "order": 1, "description_css_class": "choice-description", "value": "PUBLICSECURITY"}, "USERDATA": {"description": "Only shared with users permitted to see private user information.\n", "name": "Private", "is_private": true, "order": 3, "description_css_class": "choice-description", "value": "USERDATA"}, "PRIVATESECURITY": {"description": "Only the security group can see this information.\n ", "name": "Private Security", "is_private": true, "order": 2, "description_css_class": "choice-description", "value": "PRIVATESECURITY"}}, "total_comments_and_activity": 93, "bug_is_private": false, "related_features": {}, "first visible_recent_comment": 29, "bug": {"self_link": "https://bugs.launchpad.net/api/devel/bugs/1878234", "web_link": "https://bugs.launchpad.net/bugs/1878234", "resource_type_link": "https://bugs.launchpad.net/api/devel/#bug", "id": 1878234, "private": false, "information_type": "Public Security", "name": null, "title": "Some kata-runtime annotations can execute arbitrary code", "description": "================================\nThis issue is being treated as a potential security risk under embargo.\nPlease do not make any public mention of embargoed (private) security\nvulnerabilities before their coordinated publication by the Kata\nContainers Vulnerability Management Team in the form of an official\nKata Containers Security Advisory. This includes discussion of the bug\nor associated fixes in public forums such as mailing lists, code review\nsystems and bug trackers. Please also avoid private disclosure to other\nindividuals not already approved for access to this information, and\nprovide this same reminder to those who are made aware of the issue\nprior to publication. All discussion should remain confined to this\nprivate bug report, and any proposed fixes should be added to the bug\nas attachments.\n================================\n\nA few of the kata-runtime annotations can be used to execute arbitrary pre-existing binaries on the host.\n\nFor example, \"virtio_fs_daemon\" in combination with \"virtio_fs_extra_args\" makes it possible to invoke a host binary with arbitrary args.\n\nThe hypervisor.path and hypervisor.jailer_path annotations could also be used the same way.\n\nSuggestion for fix: add valid annotation values to the configuration file that lists the acceptable values for such annotations, with a suitable default value of \"empty\".", "owner_link": "https://bugs.launchpad.net/api/devel/~i-christophe", "bug_tasks_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/bug_tasks", "duplicate_of_link": null, "date_created": "2020-05-12T15:51:33.045177+00:00", "activity_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/activity", "subscriptions_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/subscriptions", "date_last_updated": "2020-12-09T21:52:33.751446+00:00", "who_made_private_link": null, "date_made_private": null, "heat": 270, "bug_watches_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/bug_watches", "cves_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/cves", "duplicates_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/duplicates", "attachments_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/attachments", "security_related": true, "latest_patch_uploaded": "2020-05-15T17:43:35.635060+00:00", "tags": [], "date_last_message": "2020-12-09T21:52:33.473484+00:00", "number_of_duplicates": 0, "message_count": 70, "users_affected_count": 1, "users_unaffected_count": 0, "users_affected_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/users_affected", "users_unaffected_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/users_unaffected", "users_affected_count_with_dupes": 1, "other_users_affected_count_with_dupes": 1, "users_affected_with_dupes_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/users_affected_with_dupes", "messages_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/messages", "linked_branches_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/linked_branches", "linked_merge_proposals_collection_link": "https://bugs.launchpad.net/api/devel/bugs/1878234/linked_merge_proposals", "http_etag": "\"2c317b3d2028a973b92ad95ffe0208724a8d4907-65635b44d379a61c51592b57330d5fe400717844\""}, "bugtask_data": {"2602226": {"assignee_vocabulary": "AllUserTeamsParticipation", "user_can_unassign": false, "bugtask_path": "/katacontainers.io/+bug/1878234", "assignee_value": null, "user_can_edit_status": true, "bug_title": "Some kata-runtime annotations can execute arbitrary code", "user_can_edit_milestone": false, "prefix": "katacontainers.io", "form_row_id": "task2602226", "target_is_product": true, "user_can_edit_importance": false, "assignee_is_team": null, "delete_link": "https://bugs.launchpad.net/katacontainers.io/+bug/1878234/+delete", "user_can_edit_assignee": false, "milestone_widget_items": "[]", "status_widget_items": "[]", "status_value": "Fix Released", "importance_value": "Critical", "hide_assignee_team_selection": true, "user_can_delete": false, "row_id": "tasksummary2602226", "assignee_vocabulary_filters": [], "targetname": "Kata Containers", "importance_widget_items": "[]", "milestone_value": null, "id": 2602226}}, "context": {"self_link": "https://bugs.launchpad.net/api/devel/katacontainers.io/+bug/1878234", "web_link": "https://bugs.launchpad.net/katacontainers.io/+bug/1878234", "resource_type_link": "https://bugs.launchpad.net/api/devel/#bug_task", "bug_link": "https://bugs.launchpad.net/api/devel/bugs/1878234", "milestone_link": null, "status": "Fix Released", "importance": "Critical", "assignee_link": null, "bug_target_display_name": "Kata Containers", "bug_target_name": "katacontainers.io", "bug_watch_link": null, "date_assigned": null, "date_created": "2020-05-12T15:51:33.045177+00:00", "date_confirmed": "2020-11-20T16:19:38.445457+00:00", "date_incomplete": null, "date_in_progress": "2020-11-20T16:19:45.154647+00:00", "date_closed": "2020-12-03T19:32:37.532604+00:00", "date_left_new": "2020-11-20T16:19:38.445457+00:00", "date_triaged": "2020-11-20T16:19:45.154647+00:00", "date_fix_committed": "2020-11-20T16:19:45.154647+00:00", "date_fix_released": "2020-12-03T19:32:37.532604+00:00", "date_left_closed": null, "owner_link": "https://bugs.launchpad.net/api/devel/~i-christophe", "target_link": "https://bugs.launchpad.net/api/devel/katacontainers.io", "title": "Bug #1878234 in Kata Containers: \"Some kata-runtime annotations can execute arbitrary code\"", "related_tasks_collection_link": "https://bugs.launchpad.net/api/devel/katacontainers.io/+bug/1878234/related_tasks", "is_complete": true, "http_etag": "\"ae9f2297b3db3d3a27f9fe328e4d46c75e7b967f-c875ce89f380631ed71f91cec191ee8399c9fc82\""}, "initial_comment_batch_offset": 41};</script>

    
  

    
  </body>


  <!--
    Facet name: bugs
    Page type: main_side
    Has global search: True
    Has application tabs: True
    Has side portlets: True

    At least 55 queries/external actions issued in 1.17 seconds

    Features: {'app.maintenance_message': None, 'visible_render_time': None, 'bugs.affected_count_includes_dupes.disabled': None, 'app.mainsite_only.canonical_url': None, 'disclosure.dsp_picker.enabled': 'on', 'bugs.nominations.bug_supervisors_can_target': 'on', 'baselayout.careers_link.disabled': None, 'hard_timeout': '9000', 'js.yui_version': None, 'profiling.enabled': None}

    r0d8de2b

    -->

</html>

