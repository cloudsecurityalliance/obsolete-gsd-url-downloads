<!DOCTYPE html>
<html lang="en">
  <head>
    <title>15613 &ndash; Wireshark assertion failure (&quot;call_dissector_only: assertion failed: (handle != NULL)&quot;)</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link href="data/assets/64b49332a92937374625c24ed9a89c85.css?1635022386" rel="stylesheet" type="text/css">

<link href="data/assets/f6911ed8e5a97f108734d9324cb6bd67.css?1635022386" rel="stylesheet" type="text/css">

    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1635022386"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "15613 – Wireshark assertion failure (\"call_dissector_only: assertion failed: (handle != NULL)\")",
                             "show_bug.cgi?id=15613" );
        document.title = "15613 – Wireshark assertion failure (\"call_dissector_only: assertion failed: (handle != NULL)\")";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "15613 – Wireshark assertion failure (\"call_dissector_only: assertion failed: (handle != NULL)\")", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1635022386"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-wireshark-org-bugzilla
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_Wireshark
                 bz_component_Dissection_engine_&#X28;libwireshark&#X29;
                 bz_bug_15613 yui-skin-sam">

  <div id="header"><div id="banner">
      <a href="/bugzilla/"><img id="badge" src="/image/wsbadge-bug@186x57.png"></a>
      <span id="banner-text">
        Wireshark Bug Database &ndash; Bug&nbsp;15613
      </span>
      <div id="subtitle">
        <p class="subheader">Wireshark assertion failure (&quot;call_dissector_only: assertion failed: (handle != NULL)&quot;)</p>
      </div>

       <div id="motd_yellow">

<p>
This Bugzilla instance was migrated to <a href="https://gitlab.com/wireshark/wireshark">GitLab</a> on Sunday, August 23.
</p>


<p>
This bug has been migrated to <a href="https://gitlab.com/wireshark/wireshark/-/issues/15613">issue 15613</a> in the <a href="https://gitlab.com/wireshark/wireshark/-/issues">GitLab issue tracker</a>.
It can be viewed and updated there.
</p>


</p>

<p>
See the <a href="https://gitlab.com/wireshark/gitlab-migration/wikis/home">migration wiki</a> for more details.
</p>

       </div>


    </div>

<!-- WS: Title info is in the banner
    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;15613</span>
  
        <span id="subtitle" class="subheader">Wireshark assertion failure (&quot;call_dissector_only: assertion failed: (handle != NULL)&quot;)</span>

        <span id="information" class="header_addl_info">Last modified: 2019-04-05 22:50:27 UTC</span>
    </div>
  -->


    <div id="common_links"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=15613&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=15613" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=15613&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635621515-I-MTGusTEHUnCbm-z6ztBl8h6I3waE7Vm4N5oayzXQg">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2019-04-05 22:50:27">
  <input type="hidden" name="id" value="15613">
  <input type="hidden" name="token" value="1635621515-4ISV8ud9W7iPrNPs8ukfF_sh5NYCYc-R4GCvlCOw3Hg">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=15613"><b>Bug&nbsp;15613</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">Wireshark assertion failure (&quot;call_dissector_only: assertion failed: (handle != NULL)&quot;)</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span><span title="Wireshark assertion failure (&quot;call_dissector_only: assertion failed: (handle != NULL)&quot;)">Wireshark assertion failure (&quot;call_dissector_only: assertion failed: (handle ...
        </span>
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'Wireshark assertion failure (\"call_dissector_only: assertion failed: (handle != NULL)\")' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Wireshark

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Wireshark"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >Dissection engine (libwireshark)

  (<a href="buglist.cgi?component=Dissection%20engine%20(libwireshark)&amp;product=Wireshark&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>Git
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">x86-64
        Linux
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>Low
       Major<span id="votes_container">
    (<a href="page.cgi?id=voting/user.html&amp;bug_id=15613#vote_15613">vote</a>)
  </span>
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Bugzilla Administrator</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'bugzilla-admin\x40wireshark.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          <tr>
    <th class="field_label">
      <label>Duplicates (1)</label>:
    </th>
    <td class="field_value">
      <span id="duplicates"><a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED DUPLICATE - Buildbot crash output: fuzz-2019-03-26-19143.pcap"
   href="show_bug.cgi?id=15645">15645</a> 
      </span>
      (<a href="buglist.cgi?bug_id=15645">view as bug list</a>)
    </td>
  </tr>
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2019-03-18 12:53 UTC by <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2019-04-05 22:50 UTC
      (<a href="show_activity.cgi?id=15613">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>2 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="buildbot-do-not-reply">buildbot-do-not-reply</option>
                <option value="lomato">lomato</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" ><ul class="bug_urls">
          <li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10894">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10894</a>
          </li></ul>

</td>
    </tr> 

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_application_octet-stream">
        <td>
            <a href="attachment.cgi?id=16988"
               title="View the content of the attachment">
          <b>Reproducer</b></a>

          <span class="bz_attach_extra_info">
              (5.88 KB,
                application/octet-stream)

            <br>
            <a href="#attach_16988"
               title="Go to the comment associated with the attachment">2019-03-18 12:53 UTC</a>,

            <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=16988&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
        </span>
        <a href="attachment.cgi?bugid=15613&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=15613&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1490378926" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15613#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Mateusz Jurczyk</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-18 12:53:56 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=16988" name="attach_16988" title="Reproducer">attachment 16988</a> <a href="attachment.cgi?id=16988&amp;action=edit" title="Reproducer">[details]</a></span>
Reproducer

Build Information:
TShark (Wireshark) 3.1.0 (<a href="https://code.wireshark.org/review/gitweb?p=wireshark.git;a=commit;h=d777c88d">v3.1.0rc0-4-gd777c88d</a>)

Copyright 1998-2019 Gerald Combs &lt;<a href="/cdn-cgi/l/email-protection#3e595b4c5f525a181d080a0549574c5b4d565f4c5510514c59">gerald&#64;wireshark.org</a>&gt; and contributors.
License GPLv2+: GNU GPL version 2 or later &lt;<a href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.html">http://www.gnu.org/licenses/old-licenses/gpl-2.0.html</a>&gt;
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Compiled (64-bit) with libpcap, with POSIX capabilities (Linux), without libnl,
with GLib 2.56.0, with zlib 1.2.8, without SMI, without c-ares, without Lua,
without GnuTLS, with Gcrypt 1.8.3, with MIT Kerberos, without MaxMind DB
resolver, without nghttp2, without LZ4, without Snappy, without libxml2.

Running on Linux 4.19.20-1rodete1-amd64, with Intel(R) Xeon(R) CPU E5-1650 v4 &#64;
3.60GHz (with SSE4.2), with 64406 MB of physical memory, with locale
en_US.UTF-8, with libpcap version 1.8.1, with Gcrypt 1.8.3, with zlib 1.2.8,
binary plugins supported (0 loaded).

Built using clang 4.2.1 Compatible Clang 7.0.1 (tags/RELEASE_701/final).
--
The following crash due to an assertion failure can be observed in an ASAN build of Wireshark (current git master), by feeding a malformed file to tshark (&quot;$ ./tshark -nVxr /path/to/file&quot;):

Attached is an input file which triggers the crash.

--- cut ---
[...]

ERROR:wireshark/epan/packet.c:3140:call_dissector_only: assertion failed: (handle != NULL)

Thread 1 &quot;tshark&quot; received signal SIGABRT, Aborted.
__GI_raise (sig=sig&#64;entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51
51      ../sysdeps/unix/sysv/linux/raise.c: No such file or directory.
(gdb) bt
#0  __GI_raise (sig=sig&#64;entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51
#1  0x00007fffdfb673fa in __GI_abort () at abort.c:89
#2  0x00007fffe05822d5 in g_assertion_message () from /lib/x86_64-linux-gnu/libglib-2.0.so.0
#3  0x00007fffe058233a in g_assertion_message_expr () from /lib/x86_64-linux-gnu/libglib-2.0.so.0
#4  0x00007fffea24e16d in call_dissector_only (handle=0x0, tvb=0x61d0000041e0, pinfo=0x614000000458, tree=0x7fffd7cdb770, data=0x7fffffff98e0)
    at wireshark/epan/packet.c:3140
#5  call_dissector_with_data (handle=0x0, tvb=0x61d0000041e0, pinfo=0x614000000458, tree=0x7fffd7cdb770, data=0x7fffffff98e0)
    at wireshark/epan/packet.c:3154
#6  0x00007fffeab8d18c in dissect_gssapi_work (tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, tree=&lt;optimized out&gt;, is_verifier=&lt;optimized out&gt;,
    encrypt_info=&lt;optimized out&gt;) at wireshark/epan/dissectors/packet-gssapi.c:378
#7  0x00007fffeab8bd5d in dissect_gssapi_work_wrapper (tvb=0x61d000004850, pinfo=0x614000000458, tree=0x7fffd7cdb250, is_verifier=1,
    encrypt_info=&lt;optimized out&gt;) at wireshark/epan/dissectors/packet-gssapi.c:518
#8  dissect_gssapi_verf (tvb=0x61d000004850, pinfo=0x614000000458, tree=0x7fffd7cdb250, data=&lt;optimized out&gt;)
    at wireshark/epan/dissectors/packet-gssapi.c:538
#9  wrap_dissect_gssapi_verf (tvb=&lt;optimized out&gt;, offset=0, pinfo=0x614000000458, tree=0x7fffd7cdb250, di=&lt;optimized out&gt;, drep=&lt;optimized out&gt;)
    at wireshark/epan/dissectors/packet-gssapi.c:654
#10 0x00007fffea877c34 in dissect_auth_verf (pinfo=&lt;optimized out&gt;, hdr=&lt;optimized out&gt;, auth_info=&lt;optimized out&gt;)
    at wireshark/epan/dissectors/packet-dcerpc.c:1246
#11 dissect_dcerpc_cn_auth (tvb=0x61d000004940, stub_offset=&lt;optimized out&gt;, pinfo=0x614000000458, dcerpc_tree=0x7fffd7cd9ed0, hdr=0x7fffffffa2f0,
    auth_info=0x7fffffffa0e0) at wireshark/epan/dissectors/packet-dcerpc.c:3840
#12 0x00007fffea871161 in dissect_dcerpc_cn_rqst (tvb=0x61d000004940, offset=40, pinfo=0x614000000458, dcerpc_tree=&lt;optimized out&gt;, tree=&lt;optimized out&gt;,
    hdr=&lt;optimized out&gt;) at wireshark/epan/dissectors/packet-dcerpc.c:4503
#13 dissect_dcerpc_cn (tvb=0x61d000004940, offset=3, pinfo=0x614000000458, tree=0x619000002a40, can_desegment=-674390672, pkt_len=0x7fffffff0001)
    at wireshark/epan/dissectors/packet-dcerpc.c:5566
#14 0x00007fffea86a91c in dissect_dcerpc_pdu (tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, tree=&lt;optimized out&gt;, data=&lt;optimized out&gt;)
    at wireshark/epan/dissectors/packet-dcerpc.c:5768
#15 0x00007fffeb59c0f2 in tcp_dissect_pdus (tvb=0x61d000004a30, pinfo=&lt;optimized out&gt;, tree=0x619000002a40, proto_desegment=&lt;optimized out&gt;, fixed_len=10,
    get_pdu_len=0x7fffea86a6c0 &lt;get_dcerpc_pdu_len&gt;, dissect_pdu=0x7fffea86a840 &lt;dissect_dcerpc_pdu&gt;, dissector_data=0x7fffffffb8f0)
    at wireshark/epan/dissectors/packet-tcp.c:3819
#16 0x00007fffea862e8d in dissect_dcerpc_tcp_heur (tvb=0x61d000004a30, pinfo=0x614000000458, tree=0x619000002a40, data=0x7fffffffb8f0)
    at wireshark/epan/dissectors/packet-dcerpc.c:5786
#17 0x00007fffea257538 in dissector_try_heuristic (sub_dissectors=&lt;optimized out&gt;, tvb=0x61d000004a30, pinfo=&lt;optimized out&gt;, tree=0x619000002a40,
    heur_dtbl_entry=0x7fffffffaae0, data=0x7fffffffb8f0) at wireshark/epan/packet.c:2750
#18 0x00007fffeb59db6b in decode_tcp_ports (tvb=&lt;optimized out&gt;, offset=18992, pinfo=0x614000000458, tree=0x619000002a40, src_port=51288, dst_port=53572,
    tcpd=&lt;optimized out&gt;, tcpinfo=&lt;optimized out&gt;) at wireshark/epan/dissectors/packet-tcp.c:5785
#19 0x00007fffeb5a2ca8 in process_tcp_payload (tvb=&lt;optimized out&gt;, offset=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, tree=&lt;optimized out&gt;,
    tcp_tree=&lt;optimized out&gt;, src_port=&lt;optimized out&gt;, dst_port=-28640, seq=&lt;optimized out&gt;, nxtseq=&lt;optimized out&gt;, is_tcp_segment=&lt;optimized out&gt;,
    tcpd=&lt;optimized out&gt;, tcpinfo=&lt;optimized out&gt;) at wireshark/epan/dissectors/packet-tcp.c:5840
#20 0x00007fffeb5a05bf in desegment_tcp (tvb=0x61d0000049e0, pinfo=0x614000000458, offset=20, seq=1978, nxtseq=2294, sport=51288, dport=&lt;optimized out&gt;,
    tree=&lt;optimized out&gt;, tcp_tree=&lt;optimized out&gt;, tcpd=&lt;optimized out&gt;, tcpinfo=&lt;optimized out&gt;)
    at wireshark/epan/dissectors/packet-tcp.c:3322
#21 dissect_tcp_payload (tvb=0x61d0000049e0, pinfo=0x614000000458, offset=20, seq=1978, nxtseq=2294, sport=51288, dport=&lt;optimized out&gt;,
    tree=&lt;optimized out&gt;, tcp_tree=&lt;optimized out&gt;, tcpd=&lt;optimized out&gt;, tcpinfo=&lt;optimized out&gt;)
    at wireshark/epan/dissectors/packet-tcp.c:5913
#22 0x00007fffeb5adc0e in dissect_tcp (tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, tree=&lt;optimized out&gt;, data=&lt;optimized out&gt;)
    at wireshark/epan/dissectors/packet-tcp.c:6763
#23 0x00007fffea251871 in call_dissector_through_handle (handle=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, tree=&lt;optimized out&gt;,
    data=&lt;optimized out&gt;) at wireshark/epan/packet.c:706
#24 call_dissector_work (handle=0x7fffd9bad7a0, tvb=&lt;optimized out&gt;, pinfo_arg=0x614000000458, tree=0x619000002a40, add_proto_name=1, data=&lt;optimized out&gt;)
    at wireshark/epan/packet.c:791
#25 0x00007fffea251241 in dissector_try_uint_new (sub_dissectors=&lt;optimized out&gt;, uint_val=6, tvb=0x61d0000049e0, pinfo=0x614000000458,
    tree=0x619000002a40, add_proto_name=&lt;optimized out&gt;, data=0x7fffd7ad1880) at wireshark/epan/packet.c:1383
#26 0x00007fffeacf57ef in ip_try_dissect (heur_first=&lt;optimized out&gt;, nxt=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;,
    tree=&lt;optimized out&gt;, iph=&lt;optimized out&gt;) at wireshark/epan/dissectors/packet-ip.c:1832
#27 dissect_ip_v4 (tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, parent_tree=&lt;optimized out&gt;, data=&lt;optimized out&gt;)
    at wireshark/epan/dissectors/packet-ip.c:2289
#28 0x00007fffea251871 in call_dissector_through_handle (handle=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, tree=&lt;optimized out&gt;,
    data=&lt;optimized out&gt;) at wireshark/epan/packet.c:706
#29 call_dissector_work (handle=0x7fffd9c480c0, tvb=&lt;optimized out&gt;, pinfo_arg=0x614000000458, tree=0x619000002a40, add_proto_name=1, data=&lt;optimized out&gt;)
    at wireshark/epan/packet.c:791
#30 0x00007fffea251d87 in dissector_try_uint_new (sub_dissectors=&lt;optimized out&gt;, uint_val=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;,
    tree=&lt;optimized out&gt;, add_proto_name=1, data=&lt;optimized out&gt;) at wireshark/epan/packet.c:1383
#31 dissector_try_uint (sub_dissectors=&lt;optimized out&gt;, uint_val=2048, tvb=0x61d0000048f0, pinfo=0x614000000458, tree=0x619000002a40)
    at wireshark/epan/packet.c:1407
#32 0x00007fffeaa045e9 in dissect_ethertype (tvb=0x61d000158b00, pinfo=0x614000000458, tree=0x619000002a40, data=&lt;optimized out&gt;)
    at wireshark/epan/dissectors/packet-ethertype.c:263
#33 0x00007fffea251871 in call_dissector_through_handle (handle=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, tree=&lt;optimized out&gt;,
    data=&lt;optimized out&gt;) at wireshark/epan/packet.c:706
#34 call_dissector_work (handle=0x7fffd9b3e7b0, tvb=&lt;optimized out&gt;, pinfo_arg=0x614000000458, tree=0x619000002a40, add_proto_name=1, data=&lt;optimized out&gt;)
    at wireshark/epan/packet.c:791
#35 0x00007fffea24e0c7 in call_dissector_only (handle=0x7fffd9b3e7b0, tvb=0x61d000158b00, pinfo=0x614000000458, tree=0x619000002a40, data=0x7fffffffc200)
    at wireshark/epan/packet.c:3141
#36 call_dissector_with_data (handle=0x7fffd9b3e7b0, tvb=0x61d000158b00, pinfo=0x614000000458, tree=0x619000002a40, data=0x7fffffffc200)
    at wireshark/epan/packet.c:3154
#37 0x00007fffeaa02581 in dissect_eth_common (tvb=0x61d000158b00, pinfo=0x614000000458, parent_tree=&lt;optimized out&gt;, fcs_len=-1)
    at wireshark/epan/dissectors/packet-eth.c:527
#38 0x00007fffeaa00e59 in dissect_eth (tvb=0x61d000158b00, pinfo=0x614000000458, tree=&lt;optimized out&gt;, data=&lt;optimized out&gt;)
    at wireshark/epan/dissectors/packet-eth.c:803
#39 0x00007fffea251871 in call_dissector_through_handle (handle=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, tree=&lt;optimized out&gt;,
    data=&lt;optimized out&gt;) at wireshark/epan/packet.c:706
#40 call_dissector_work (handle=0x7fffd9c1a9a0, tvb=&lt;optimized out&gt;, pinfo_arg=0x614000000458, tree=0x619000002a40, add_proto_name=1, data=&lt;optimized out&gt;)
    at wireshark/epan/packet.c:791
#41 0x00007fffea251241 in dissector_try_uint_new (sub_dissectors=&lt;optimized out&gt;, uint_val=1, tvb=0x61d000158b00, pinfo=0x614000000458,
    tree=0x619000002a40, add_proto_name=&lt;optimized out&gt;, data=0x6140000002a0) at wireshark/epan/packet.c:1383
---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---
#42 0x00007fffeaa72ba3 in dissect_frame (tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, parent_tree=&lt;optimized out&gt;, data=&lt;optimized out&gt;)
    at wireshark/epan/dissectors/packet-frame.c:598
#43 0x00007fffea251871 in call_dissector_through_handle (handle=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, tree=&lt;optimized out&gt;,
    data=&lt;optimized out&gt;) at wireshark/epan/packet.c:706
#44 call_dissector_work (handle=0x7fffd9b41a60, tvb=&lt;optimized out&gt;, pinfo_arg=0x614000000458, tree=0x619000002a40, add_proto_name=1, data=&lt;optimized out&gt;)
    at wireshark/epan/packet.c:791
#45 0x00007fffea24e0c7 in call_dissector_only (handle=0x7fffd9b41a60, tvb=0x61d000158b00, pinfo=0x614000000458, tree=0x619000002a40, data=0x7fffffffcbe0)
    at wireshark/epan/packet.c:3141
#46 call_dissector_with_data (handle=0x7fffd9b41a60, tvb=0x61d000158b00, pinfo=0x614000000458, tree=0x619000002a40, data=0x7fffffffcbe0)
    at wireshark/epan/packet.c:3154
#47 0x00007fffea24d857 in dissect_record (edt=0x614000000440, file_type_subtype=2, rec=0x614000000260, tvb=0x61d000158b00, fd=0x7fffffffcea0,
    cinfo=&lt;optimized out&gt;) at wireshark/epan/packet.c:580
#48 0x00007fffea2343ab in epan_dissect_run_with_taps (edt=0x614000000440, file_type_subtype=-28640, rec=0x0, tvb=0x7fffdfb65fcf &lt;__GI_raise+207&gt;, fd=0x0,
    cinfo=0x7fffffff9020) at wireshark/epan/epan.c:563
#49 0x000055555569cda7 in process_packet_single_pass (cf=&lt;optimized out&gt;, edt=0x614000000440, offset=&lt;optimized out&gt;, rec=0x614000000260,
    pd=&lt;optimized out&gt;, tap_flags=&lt;optimized out&gt;) at wireshark/tshark.c:3518
#50 0x0000555555695b22 in process_cap_file (save_file=&lt;optimized out&gt;, out_file_type=&lt;optimized out&gt;, out_file_name_res=&lt;optimized out&gt;,
    max_packet_count=&lt;optimized out&gt;, max_byte_count=&lt;optimized out&gt;, cf=&lt;optimized out&gt;)
    at wireshark/tshark.c:3351
#51 main (argc=&lt;optimized out&gt;, argv=0x7fffffffdba8) at wireshark/tshark.c:2044
(gdb)
--- cut ---</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15613#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-25 16:59:39 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32576 had a related patch set uploaded by Gerald Combs:
GSS-API: Make sure we call a valid dissector.

<a href="https://code.wireshark.org/review/32576">https://code.wireshark.org/review/32576</a></pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15613#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-26 08:49:39 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32576 merged by Dario Lombardo:
GSS-API: Make sure we call a valid dissector.

<a href="https://code.wireshark.org/review/32576">https://code.wireshark.org/review/32576</a></pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15613#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-26 18:21:23 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32586 had a related patch set uploaded by Gerald Combs:
GSS-API: Make sure we call a valid dissector.

<a href="https://code.wireshark.org/review/32586">https://code.wireshark.org/review/32586</a></pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15613#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-26 20:38:54 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32586 merged by Gerald Combs:
GSS-API: Make sure we call a valid dissector.

<a href="https://code.wireshark.org/review/32586">https://code.wireshark.org/review/32586</a></pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15613#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-26 20:39:04 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32587 had a related patch set uploaded by Gerald Combs:
GSS-API: Make sure we call a valid dissector.

<a href="https://code.wireshark.org/review/32587">https://code.wireshark.org/review/32587</a></pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15613#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-26 20:39:17 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32588 had a related patch set uploaded by Gerald Combs:
GSS-API: Make sure we call a valid dissector.

<a href="https://code.wireshark.org/review/32588">https://code.wireshark.org/review/32588</a></pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15613#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-26 20:39:35 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32587 merged by Gerald Combs:
GSS-API: Make sure we call a valid dissector.

<a href="https://code.wireshark.org/review/32587">https://code.wireshark.org/review/32587</a></pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15613#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Gerrit Code Review</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-26 20:39:51 UTC
        </span>

      </div>




<pre class="bz_comment_text">Change 32588 merged by Gerald Combs:
GSS-API: Make sure we call a valid dissector.

<a href="https://code.wireshark.org/review/32588">https://code.wireshark.org/review/32588</a></pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=15613#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2019-03-27 12:18:37 UTC
        </span>

      </div>




<pre class="bz_comment_text">*** <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED DUPLICATE - Buildbot crash output: fuzz-2019-03-26-19143.pcap"
   href="show_bug.cgi?id=15645">Bug 15645</a> has been marked as a duplicate of this bug. ***</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=15613">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=15613">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=15613">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=15613&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=15613" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=15613&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635621515-I-MTGusTEHUnCbm-z6ztBl8h6I3waE7Vm4N5oayzXQg">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>