<!doctype html>
<!--[if lt IE 7]><html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if (IE 7)&!(IEMobile)]><html class="no-js lt-ie9 lt-ie8" lang="en"><![endif]-->
<!--[if (IE 8)&!(IEMobile)]><html class="no-js lt-ie9" lang="en"><![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en"><!--<![endif]-->
<head>
<meta charset="utf-8">
<title>The CybrBlog</title>
<meta name="description" content="CVE-2019-11488 SimplyBook.me Account Access Hash Replay Attack">
<meta name="keywords" content="Our CVE Disclosures">

<meta name="twitter:card" content="summary">
<meta name="twitter:site" content="@cybrgrade">
<meta name="twitter:creator" content="@cybrgrade">

<meta property="og:locale" content="en_GB">
<meta property="og:type" content="article">
<meta property="og:title" content="Exploiting SimplyBook.me Account Access Hash Replay Attack">
<meta property="og:description" content="CVE-2019-11488 SimplyBook.me Account Access Hash Replay Attack">
<meta property="og:url" content="/CVE-2019-11488-SimplyBook.me-hash-replay-attack/">
<meta property="og:site_name" content="The CybrBlog">
<meta property="og:image" content="/images/images/logo.png">
<script src="/cdn-cgi/apps/head/OIDpBFlviuL5YmmPTpx6DNMrVB0.js"></script><link rel="canonical" href="/CVE-2019-11488-SimplyBook.me-hash-replay-attack/">
<link href="/feed.xml" type="application/atom+xml" rel="alternate" title="The CybrBlog Feed">

<meta name="HandheldFriendly" content="True">
<meta name="MobileOptimized" content="320">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no" />

<link rel="stylesheet" href="/assets/css/main.css">
<link rel="stylesheet" href="/assets/css/jquery.mmenu.all.css">
<link rel="stylesheet" href="/assets/css/jquery.floating-social-share.min.css">

<link href="//fonts.googleapis.com/css?family=Lato:300,400,700,300italic,400italic" rel="stylesheet" type="text/css">
<meta http-equiv="cleartype" content="on">

<script type="text/javascript" src="/assets/js/vendor/modernizr-2.6.2.custom.min.js"></script>


<link rel="shortcut icon" href="/favicon.ico">

<link rel="shortcut icon" href="/favicon.png">

<link rel="apple-touch-icon-precomposed" href="/images/apple-touch-icon-precomposed.png">

<link rel="apple-touch-icon-precomposed" sizes="72x72" href="/images/apple-touch-icon-72x72-precomposed.png">

<link rel="apple-touch-icon-precomposed" sizes="114x114" href="/images/apple-touch-icon-114x114-precomposed.png">

<link rel="apple-touch-icon-precomposed" sizes="144x144" href="/images/apple-touch-icon-144x144-precomposed.png">
<link rel="apple-touch-icon" sizes="180x180" href="/assets/favicons/apple-touch-icon.png?v=gAdQR6YrpJ">
<link rel="icon" type="image/png" sizes="32x32" href="/assets/favicons/favicon-32x32.png?v=gAdQR6YrpJ">
<link rel="icon" type="image/png" sizes="192x192" href="/assets/favicons/android-chrome-192x192.png?v=gAdQR6YrpJ">
<link rel="icon" type="image/png" sizes="16x16" href="/assets/favicons/favicon-16x16.png?v=gAdQR6YrpJ">
<link rel="manifest" href="/assets/favicons/site.webmanifest?v=gAdQR6YrpJ">
<link rel="mask-icon" href="/assets/favicons/safari-pinned-tab.svg?v=gAdQR6YrpJ" color="#a60d0d">
<link rel="shortcut icon" href="/assets/favicons/favicon.ico?v=gAdQR6YrpJ">
<meta name="msapplication-TileColor" content="#000000">
<meta name="msapplication-TileImage" content="/assets/favicons/mstile-144x144.png?v=gAdQR6YrpJ">
<meta name="msapplication-config" content="/assets/favicons/browserconfig.xml?v=gAdQR6YrpJ">
<meta name="theme-color" content="#a60d0d">
<style type="text/css">body {background-image:url(/images/cybrblog-bg-logo.png);}</style>
</head>
<body id="post">
<!--[if lt IE 9]><div class="upgrade"><strong><a href="http://whatbrowser.org/">Your browser is quite old!</strong> Why not upgrade to a different browser to better enjoy this site?</a></div><![endif]-->
<div class="header-menu header-menu-top">
<ul class="header-item-container">
<li class="header-item-title header-toggle "><a href="#menu"><h2><i class="fa fa-bars"></i></h2></a></li>
<li class="header-item-title">
<a href="/">
<img class="logo" src="/images/logo.png" alt="The CybrBlog">
<a href="/" class="title"> The CybrBlog</a>
</a>
</li>
<li class="header-item "><a href="https://cybrgrade.com" target="_blank"><h3>CybrGrade UK Ltd</h3></a></li>
<li class="header-item "><a href="#"><h3>Posts Archive</h3></a>
<ul class="header-submenu">
<li class="sub-item"><a href="/tags/">By Tag</a></li>
<li class="sub-item"><a href="/categories/">By Category</a></li>
</ul>
</li>
<li class="header-item "><a href="/search/"><h3>Search</h3></a></li>
<li class="header-item"><a href="/search"><h3><i class="fa fa-search"></i></h3></a></li>
</ul>
</div>
<div class="entry-header">
<div class="header-title">
<div class="header-title-wrap">
<h1>Exploiting SimplyBook.me Account Access Hash Replay Attack</h1>
<h2><span class="entry-date date published updated"><time datetime="2019-04-24T00:00:00+01:00">April 24, 2019</time></span></h2>
<p class="entry-reading-time">
<i class="fa fa-clock-o"></i>
Reading time ~6 minutes
</p>
</div>
</div>
</div>
<nav id="menu" style="display: none">
<ul>
<li><a href="/search/"><h3>Search</h3></a></li>
<li><a href="#"><h3>Posts Archive</h3></a>
<ul>
<li><a href="/tags/">By Tag</a></li>
<li><a href="/categories/">By Category</a></li>
</ul>
</li>
<li><a href="https://cybrgrade.com"><h3>CybrGrade UK Ltd</h3></a></li>
</ul>
</nav>
<a href="https://twitter.com/cybrgrade" class="btn btn-info button-twitter" data-show-count="false" data-size="large"><i class="fa fa-twitter"></i> <span> | Follow @cybrgrade</span></a>
<div id="main" role="main">
<article class="hentry">
<div class="entry-content">
<p><a name="CVE-2019-11488"></a></p>
<h1 id="cve-2019-11488"><a href="#CVE-2019-11488">CVE-2019-11488</a></h1>
<blockquote>
<h3>Incorrect Access Control in the Account Access / Password Reset Link in SimplyBook.me Enterprise before 2019-04-23 allows Unauthorized Attackers to READ/WRITE Customer or Administrator data via a persistent HTTP GET Request Hash Link Replay, as demonstrated by a login-link from the browser history</h3>
</blockquote>
<p><a name="Vuln"></a></p>
<h2 id="the-vulnerability"><a href="#Vuln"><u>The Vulnerability</u></a></h2>
<p>When any <strong><a href="https://simplybook.me">SimplyBook.it/SimplyBook.me</a></strong> management portal administrator/user or booking/scheduling service provider client account is created, a non-expiring MD5 hash value is generated and associated with that account in perpetuity. The purpose of the hash is to allow a 1-click login and password reset function for administrators, users, &amp; clients of both the services booking/scheduling website and the services management portal.</p>
<p>The <strong>login-link</strong> URL contains the sub-domain for a particular booking site hosted on <strong><a href="https://simplybook.it">SimplyBook.it</a></strong> and a token in the form an MD5 hash value that appears to be created the first time it is used and stored in the database for the duration of the life of the account. This hash represents a fully authenticated session for the associated user, and anyone who has knowledge of the hash has the ability to perpetually re-authenticate as that user regardless of any password, username, email address changes made to the details of that account.</p>
<p>Because the hash does not expire and it is passed as part of the URL in a GET request, this means it will be recorded in both browser history logs, and business web monitoring service logs. So if a user accesses their account using a <strong>login-link</strong> via a shared system and even makes sure to log out and clear their session cookies afterwards, the full URL path is still recorded in the browser history and anyone with access to the browser can access and use it to access the account associated with that login-link.</p>
<p><a name="booking"></a></p>
<h3 id="clients-of-the-booking-service-website"><a href="#booking"><u>Clients of the booking service website</u></a></h3>
<p>When the “<strong>Client Login</strong>” custom feature is enabled on a <strong><a href="https://simplybook.me">SimplyBook.me</a></strong> site, both the “<strong>send login link</strong>” and “<strong>password reset</strong>”” features send a hyper-link via email to the client’s registered email account when activated. For client accounts hyper-link is in the form of:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://[SITENAME].simplybook.it/v2/client/restore-password/hash/[MD5-HASH]
</code></pre></div></div>
<p><a name="portal"></a></p>
<h3 id="user-accounts-used-for-accessing-the-management-portal"><a href="#portal"><u>User accounts used for accessing the management portal</u></a></h3>
<p>Management portal accounts have a hyper-link in the form of:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://[SITENAME].secure.simplybook.it/login/by-hash/code/[MD5-HAS]?reset-password=true    
</code></pre></div></div>
<p>on your post. This theme adds a dark background with a white panel to show your content.</p>
<p><a name="Rec"></a></p>
<h3 id="observations--recommendations"><a href="#Rec"><u>Observations &amp; Recommendations</u></a></h3>
<p>Tokens used for password reset and account recovery should be randomly generated and be single use only and should expire as soon as either one of the following conditions are met:</p>
<ul>
<li>After a specified short amount of time (e.g. 5 mins)</li>
<li>After they are used.</li>
</ul>
<p>Account owners should be sent a notification email upon creation and use of a <strong>login-link</strong> and also when any changes are made to their user details or account information. <em>(e.g change of email address or phone number)</em>.</p>
<p>Due to time limitations, I have not fully carried out <strong><a href="https://csrc.nist.gov/publications/detail/sp/800-90b/final">entropy testing</a></strong> or reverse engineering of the MD5 generation algorithm in this case. However, if a deterministic dataset <em>(e.g a combination of account details + time or + static salt value)</em> is being used to generate the MD5 hash values this leaves the system fully open to remote compromise of accounts and services hosted on the platform because this approach is open to reverse engineering and “<strong>login-link MD5 Hash prediction attacks</strong>” resistant to account lockout due to the authentication system design.</p>
<p>Because <strong><a href="https://simplybook.me">SimplyBook.it/SimplyBook.me</a></strong> have implemented user data access and handling features to enable compliance with the <strong><a href="https://ec.europa.eu/commission/priorities/justice-and-fundamental-rights/data-protection/2018-reform-eu-data-protection-rules_en">European General Data Protection Regulation (GDPR)</a></strong>, if service providers enable the feature on their site, this additionally risks detailed and complete repositories of user data becoming accessible to attackers. This is because, anyone with a valid login-link for a client account is able to reconfigure the email address for that account, get an access code via their own email, download a full copy of the account owners Personal Data Report, then change the email back to the original without the account owner being made aware. This scenario is demonstrated below and would lead to a full breach of <strong><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Information_Security_Basics/Confidentiality,_Integrity,_and_Availability">CONFIDENTIALITY</a></strong>,<strong><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Information_Security_Basics/Confidentiality,_Integrity,_and_Availability">INTEGRITY</a></strong> and <strong><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Information_Security_Basics/Confidentiality,_Integrity,_and_Availability">ACCESSIBILITY</a></strong> of client account data.</p>
<p>For security reasons it is becoming common practice within secured business networks for web traffic to be monitored, and for GET requests originating from within their networks to be logged. A typical sample of a logged GET request will contain the full URL path. As you can see in the demonstration using <strong><a href="https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/">Nginx Proxy</a></strong> access logs, the <strong>login-link</strong> values would also be logged in such a situation.</p>
<p><img src="/images/CVE-2019-11488/1.png" alt="" /></p>
<p><a name="Sploit"></a></p>
<h2 id="exploit-examples"><a href="#Sploit"><u>Exploit Examples</u></a></h2>
<p>Here I will demonstrate how an attacker that finds a <strong>login-link</strong> in the history of the browser they have shared access to can lead to full loss of <strong><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Information_Security_Basics/Confidentiality,_Integrity,_and_Availability">CONFIDENTIALITY</a></strong>,<strong><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Information_Security_Basics/Confidentiality,_Integrity,_and_Availability">INTEGRITY</a></strong> and <strong><a href="https://developer.mozilla.org/en-US/docs/Web/Security/Information_Security_Basics/Confidentiality,_Integrity,_and_Availability">ACCESSIBILITY</a></strong> of the data associated with account the <strong>login-link</strong> is associated with.</p>
<p><a name="1."></a></p>
<h3 id="step-1"><a href="#1."><u>Step 1</u></a></h3>
<p>Starting without a user session, we can open the history search sidebar and search for “<strong><em>simplybook hash</em></strong>” to get a list of all the <strong>login-link</strong>” URLs saved in the browser history.</p>
<p><img src="/images/CVE-2019-11488/2.png" alt="[Image Error!]" /></p>
<p><a name="2."></a></p>
<h3 id="step-2"><a href="#2."><u>Step 2</u></a></h3>
<p>Next, by opening one of them we are instantly granted access to the associated user account. <strong><u>Even though the link has been used previously, the user logged out, and no session state was saved in the browser</u></strong>.</p>
<p><img src="/images/CVE-2019-11488/3.png" alt="[Image Error!]" /></p>
<p><a name="3."></a></p>
<h3 id="step-3"><a href="#3."><u>Step 3</u></a></h3>
<p>Now an attacker is able to change the account email address to one that they control.</p>
<p><img src="/images/CVE-2019-11488/4.png" alt="[Image Error!]" /></p>
<p><a name="4."></a></p>
<h3 id="step-4"><a href="#4."><u>Step 4</u></a></h3>
<p>Then they can safely click to read the <strong><a href="https://simplybook.me/en/gdpr-compliance">Personal Data Report</a></strong> of the owner of the account and intercept the temporary access code without the data owner being notified.</p>
<p><img src="/images/CVE-2019-11488/5.png" alt="[Image Error!]" /></p>
<p><a name="5."></a></p>
<h3 id="step-5"><a href="#5."><u>Step 5</u></a></h3>
<p>The attacker can now export all data ever generated by or on behalf of that associated account identity. The Data can include <strong>Financial Transaction Data</strong>, <strong>Medical Data</strong>, <strong>SMS History</strong>, <strong>Email History</strong>, <strong>Social Media Authentication Data</strong>…</p>
<p><img src="/images/CVE-2019-11488/6.png" alt="[Image Error!]" /></p>
<hr />
<p>The same kind of attack is also possible for any management portal accounts that do not have 2FA enabled <em>(disabled by default)</em> and would lead to an even more devastating attack if combined with the <strong><a href="/CVE-2019-11489-SimplyBook.me-privesc/">Management Portal Privilege Escalation Exploit</a></strong> demonstrated on <strong><a href="/CVE-2019-11489-SimplyBook.me-privesc/">another post</a></strong>.</p>
<p>As you can see below. The same situation is true for a Admin account <strong>login-link</strong> where it can be harvested from an old entry in browser history. It’s hardly worth showing, but here you go…</p>
<p><a name="1.."></a></p>
<h3 id="step-1-1"><a href="#1.."><u>Step 1</u></a></h3>
<p>Search history for a link used by management accounts.</p>
<p><img src="/images/CVE-2019-11488/7.png" alt="[Image Error!]" /></p>
<p><a name="2.."></a></p>
<h3 id="step-2-1"><a href="#2.."><u>Step 2</u></a></h3>
<p>Click Link… Instant Admin with access to the <strong>whole customer database</strong>, <strong>credit card payment api keys/credentials</strong>, <strong>web services management</strong> etc…</p>
<p><img src="/images/CVE-2019-11488/8.png" alt="[Image Error!]" /></p>
<hr />
<p><a name="Response"></a></p>
<h2 id="vendor-response"><a href="#Response"><u>Vendor Response</u></a></h2>
<p><em>(covers CVE-2019-11488 &amp; CVE-2019-11489)</em><br />
<strong>13-April-2019: Vendor is first sent the details of the vulnerabilities.<br />
23-April-2019: Notified of fix and bounty award by the vendor.</strong></p>
<blockquote>
<p>Hello,</p>
<p>Thank you.</p>
<p>As a reward for accepted vulnerabilities we will pay you 600USD, since we consider them as average seriousness:</p>
<p>(1) with admin access issue, the attacker, employee of same company as he would already need access, can only affect the system internally (not cross-system) and</p>
<p>(2) with hash issue the attacker needs to have access to user’s browser data.</p>
<p>Obviously both issues that should absolutely not be there, and have been fixed already, and we are thankful for you pointing them out to us.</p>
<p>. . .</p>
<p>Additionally we will give you 2 years of premium access to our system.</p>
<p>Best regards,
Elina - Security Manager</p>
</blockquote>
<p>Overall it was a positive experience communicating with the <strong><a href="https://simplybook.me">SimplyBook.me</a></strong> team, and I was glad to see the devs work to apply a fix within 10 days.</p>
<p>Thanks for reading,<br />
Please Comment Below.</p>
<p>The CybrGrade UK Team<br />
<img src="/images/cybrgrade-sig.png" alt="Image Error!" /></p>
<p><a name="refs"></a></p>
<h2 id="references"><a href="#refs"><u>References</u></a></h2>
<h4 id="simplybookme-gdpr-compliance-assertion-owasp-authentication-cheat-sheet-github-link-owasp-rest-security-cheat-sheet-github-link-cve-details-mitreorg-link">SimplyBook.me GDPR: <a href="https://simplybook.me/en/gdpr-compliance">Compliance Assertion</a> <br />OWASP Authentication Cheat Sheet: <a href="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Authentication_Cheat_Sheet.md">Github Link</a> <br />OWASP REST Security Cheat Sheet: <a href="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/REST_Security_Cheat_Sheet.md">Github Link</a> <br />CVE Details: <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-11488">Mitre.org Link</a></h4>
<footer class="entry-meta">
<span class="entry-tags"><a href="/tags#Our CVE Disclosures" title="Pages tagged Our CVE Disclosures" class="tag"><span class="term">Our CVE Disclosures</span></a></span>
<span class="author vcard"><span class="fn">CybrGrade UK</span></span>
<div class="social-share">
<ul class="socialcount socialcount-small inline-list">
<li class="facebook"><a href="https://www.facebook.com/sharer/sharer.php?u=/CVE-2019-11488-SimplyBook.me-hash-replay-attack/" title="Share on Facebook"><span class="count"><i class="fa fa-facebook-square"></i> Like</span></a></li>
<li class="twitter"><a href="https://twitter.com/intent/tweet?text=/CVE-2019-11488-SimplyBook.me-hash-replay-attack/" title="Share on Twitter"><span class="count"><i class="fa fa-twitter-square"></i> Tweet</span></a></li>
<li class="googleplus"><a href="https://plus.google.com/share?url=/CVE-2019-11488-SimplyBook.me-hash-replay-attack/" title="Share on Google Plus"><span class="count"><i class="fa fa-google-plus-square"></i> +1</span></a></li>
</ul>
</div>
</footer>
</div>
<div class="read-more">
<div class="read-more-header">
<a href="https://cybrgrade.com" class="read-more-btn">About CybrGrade UK</a>
</div>
<div class="read-more-content main">
<h2 id="just-who-exactly-are-cybrgrade-uk-i-hear-you-ask">Just who exactly are CybrGrade UK? I hear you ask…</h2>
<p>Read our opening post on <strong><a href="/Welcome_To_The_CybrBlog/">here</a></strong> or checkout some background on how and <strong><a href="https://cybrgrade.com/?about">why our company was founded</a></strong>.</p>
</div>
</div>
<section id="disqus_thread"></section>
<div class="read-more">
<div class="read-more-header">
<a href="/SimplyBook.me_Disclosures/" class="read-more-btn">Read More</a>
</div>
<div class="read-more-content">
<h3><a href="/CVE-2019-11489-SimplyBook.me-privesc/" title="SimplyBook.me Management Portal Privilege Escalation Exploit">SimplyBook.me Management Portal Privilege Escalation Exploit</a></h3>
<p>CVE 2019-11489 SimplyBook.me Management Portal Privilege Escalation Exploit <a href="/CVE-2019-11489-SimplyBook.me-privesc/">Continue reading</a></p>
</div>
<div class="read-more-list">
<div class="list-item">
<h4><a href="/SimplyBook.me_Disclosures/" title="Keep Your Eyes Peeled For Our Upcoming CVE Disclosures Right Here!">Keep Your Eyes Peeled For Our Upcoming CVE Disclosures Right Here!</a></h4>
<span>Published on April 20, 2019</span>
</div>
<div class="list-item">
<h4><a href="/Password_problems/" title="Just How Secure Is That Company VPN Password You've Been Using For The Last Two Years?">Just How Secure Is That Company VPN Password You've Been Using For The Last Two Years?</a></h4>
<span>Published on April 19, 2019</span>
</div>
</div>
</div>
</article>
</div>
<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script type="text/javascript">window.jQuery || document.write('<script type="text/javascript" src="/assets/js/vendor/jquery-1.9.1.min.js"><\/script>')</script>
<script type="text/javascript" src="/assets/js/scripts.min.js"></script>
<script type="text/javascript" async defer id="github-bjs" src="https://buttons.github.io/buttons.js"></script>
<script type="text/javascript">!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
<script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'cybrgrade'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function () {
            var s = document.createElement('script'); s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
    </script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="https://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
<div class="footer-wrapper">
<footer role="contentinfo">
<span>&copy; 2019 CYBRGRADE UK LTD</span>
</footer>
</div>
</body>
</html>
