<!DOCTYPE html>
<html lang="en">
  <head>
      <meta charset="UTF-8">

      <meta name="referrer" content="origin">
<script type="text/javascript" src="page.cgi?1635552584&amp;id=bayotbase/fielddefs.js"></script>




<script type="text/javascript">var BB_CONFIG = ({"defaults":{"op_sys":"Unspecified","bugentry_fields":["summary","product","component","rh_sub_components","severity","priority","comment"],"severity":"Unspecified","priority":"Unspecified","platform":"Unspecified"},"user":{"logged_in":false,"enterable_products":[],"groups":[]}});</script><script type="text/javascript">
var classifications = '[ { "name": "Red Hat", "description": "Red Hat Products"},{ "name": "Workflows", "description": "User driven workflows"},{ "name": "JBoss", "description": "JBoss Products"},{ "name": "CentOS", "description": "CentOS Projects"},{ "name": "Fedora", "description": "Fedora Products"},{ "name": "Community", "description": "Community Projects"},{ "name": "oVirt", "description": "oVirt Virtualization Management Projects"},{ "name": "Internal", "description": "Internal Projects."},{ "name": "Other", "description": "Other Miscellaneous Products"},{ "name": "Unclassified", "description": "Not assigned to any classification"},{ "name": "Retired", "description": "Products that have reached end of life, or were never released."} ]';
var c_optgroups = JSON.parse(classifications);
</script>
    <title>1077441 &ndash; [ovirt][engine-api] CSRF vulnerability in REST API</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="js/yui/assets/skins/sam/autocomplete.css" rel="stylesheet" type="text/css"><link href="js/yui/assets/skins/sam/calendar.css" rel="stylesheet" type="text/css"><link href="skins/standard/global.css" rel="stylesheet" type="text/css"><link href="extensions/BayotBase/web/css/base.css" rel="stylesheet" type="text/css"><link href="extensions/BayotBase/web/jquery-ui-1.12.1.custom/jquery-ui.min.css" rel="stylesheet" type="text/css"><link href="skins/standard/bug.css" rel="stylesheet" type="text/css"><link href="extensions/Voting/web/style.css" rel="stylesheet" type="text/css"><link href="extensions/ExternalBugs/web/css/global.css" rel="stylesheet" type="text/css"><link href="extensions/FontAwesome/web/css/all.min.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/css/redhat.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/DataTables/datatables.min.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/alertify/css/alertify.min.css" rel="stylesheet" type="text/css"><link href="extensions/RedHat/web/alertify/css/themes/bootstrap.min.css" rel="stylesheet" type="text/css"><link href="extensions/SelectizeJS/web/css/selectize.bootstrap3.css" rel="stylesheet" type="text/css"><link href="extensions/SelectizeJS/web/css/SelectizeJS.css" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="js/yui/yahoo-dom-event/yahoo-dom-event.js"></script><script type="text/javascript" src="js/yui/cookie/cookie-min.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/jquery-3.6.0.min.js"></script><script type="text/javascript" src="extensions/BayotBase/web/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/jquery.cookie.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/jquery.jsonrpc.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/Base.js"></script><script type="text/javascript" src="extensions/BayotBase/web/js/bayot.util.js"></script><script type="text/javascript" src="js/yui/datasource/datasource-min.js"></script><script type="text/javascript" src="js/yui/connection/connection-min.js"></script><script type="text/javascript" src="js/yui/json/json-min.js"></script><script type="text/javascript" src="js/yui/autocomplete/autocomplete-min.js"></script><script type="text/javascript" src="js/yui/calendar/calendar-min.js"></script><script type="text/javascript" src="js/global.js"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 5,
                maxattachmentsize: 20000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug.",
                group_required:
                    "You must select at least one group for bugs in this product."
            }
            
              , api_token: ''
            
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "1077441 – [ovirt][engine-api] CSRF vulnerability in REST API",
                             "show_bug.cgi?id=1077441" );
        document.title = "1077441 – [ovirt][engine-api] CSRF vulnerability in REST API";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "1077441 – [ovirt][engine-api] CSRF vulnerability in REST API", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="js/util.js"></script><script type="text/javascript" src="js/field.js"></script><script type="text/javascript" src="extensions/ExternalBugs/web/js/external_bugs.js"></script><script type="text/javascript" src="extensions/RedHat/web/DataTables/datatables.min.js"></script><script type="text/javascript" src="extensions/RedHat/web/alertify/alertify.min.js"></script><script type="text/javascript" src="extensions/RedHat/web/colResize/dataTables.colResize.js"></script><script type="text/javascript" src="extensions/RedHat/web/js/redhat.js"></script><script type="text/javascript" src="extensions/SelectizeJS/web/js/standalone/selectize.min.js"></script><script type="text/javascript" src="extensions/SelectizeJS/web/js/SelectizeJS.js"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Red Hat Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="/extensions/RedHat/web/css/favicons/production.ico?v=0">
  </head>

  <body 
        class="bugzilla-redhat-com status_colours_pastel
                 bz_bug
                 bz_status_CLOSED
                 bz_product_oVirt
                 bz_component_ovirt-engine-api
                 bz_bug_1077441 yui-skin-sam">

  <div id="header"><div id="banner">
   <ul id="loginin_launcher"><a href="#" onclick="$('#loginin_launcher').addClass('bz_default_hidden');$('#login_container').removeClass('bz_default_hidden');"><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;Login</a></ul>
   <ul id="login_container" class="bz_default_hidden">
    <a href="#" id="hide_mini_login" onclick="$('#login_container').addClass('bz_default_hidden');$('#loginin_launcher').removeClass('bz_default_hidden');">[x]</a>
     
    <li id="mini_login_container"><div id="saml2_container">
    Log in using an account from:
  <div id="saml2auth_login_Fedora Account System">
    <a href="saml2_login.cgi?idp=Fedora%20Account%20System&amp;target=show_bug.cgi%3Fid%3D1077441"><i class="fa fa-cogs" aria-hidden="true"></i>&nbsp;&nbsp;Fedora Account System</a>
  </div>
  <div id="saml2auth_login_Red Hat Associate">
    <a href="saml2_login.cgi?idp=Red%20Hat%20Associate&amp;target=show_bug.cgi%3Fid%3D1077441"><i class="fa fa-user-secret" aria-hidden="true"></i>&nbsp;&nbsp;Red Hat Associate</a>
  </div>
  <div id="saml2auth_login_Red Hat Customer">
    <a href="saml2_login.cgi?idp=Red%20Hat%20Customer&amp;target=show_bug.cgi%3Fid%3D1077441"><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;Red Hat Customer</a>
  </div>
  Or login using a Red Hat Bugzilla account
  <div>

  <form action="show_bug.cgi?id=1077441" method="POST"
        class="mini_login "
        id="mini_login">
    <input id="Bugzilla_login" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in">
  </form>
</li>
<li id="forgot_container">
  <a id="forgot_link" href="#forgot"
     onclick="return show_forgot_form('')"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>&nbsp;&nbsp;Forgot&nbsp;Password</a>
  <form action="token.cgi" method="post" id="forgot_form"
        class="mini_forgot bz_default_hidden">
    <label for="login">Login:</label>
    <input name="loginname" size="20" id="login" required
        type="email" placeholder="Your Email Address">
    <input id="forgot_button" value="Reset Password" 
           type="submit">
    <input type="hidden" name="a" value="reqpw">
    <input type="hidden" id="token" name="token"
           value="1635624516-kl6f7NtISGlN6R6chwHHehkPvFSOZVf3r8kfsnk1pDo">
    <p>
    <a href="#" onclick="return hide_forgot_form('')"><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>&nbsp;&nbsp;Hide Forgot</a>
  </form>
</li>
<li>
  <a href="createaccount.cgi"><span><i class="fas fa-plus" aria-hidden="true"></i>&nbsp;&nbsp;Create an Account</span></a>
</li>
    
   </ul>
  </div>

    <div id="titles">
      <span id="title">Red Hat Bugzilla &ndash; Bug&nbsp;1077441</span>


    </div>


    <div id="common_links"><ul class="links">
  <li class="form">
    
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>
  <li><a href="./" title="Home"><i class="fas fa-home"></i></a></li>
  <li><a href="enter_bug.cgi">New</a></li>
  <li class="submenu">
    <a href="#" title="Search"><i class="fas fa-search"></i> <span class="fa fa-caret-down"></span></a>
    <div>
      <ul>
        <li><a href="query.cgi?format=specific">Simple Search</a></li>
        <li><a href="query.cgi?format=advanced">Advanced Search</a></li>
      </ul>
    </div>
  </li>
  <li class="submenu">
   <a href="#">My Links <span class="fa fa-caret-down"></span></a>
   <div>
    <ul>
      <li><a href="describecomponents.cgi">Browse</a></li>
      <li>
            <a href="request.cgi">Requests</a></li>
      <li class="submenu">
        <a  href="report.cgi">Reports <span class="fa fa-caret-right"></span></a>
        <div>
          <ul>
            </li>
            <li class="submenu">
              <a  href="#">Current State <span class="fa fa-caret-right"></span></a>
              <div>
                <ul>
                  <li id="report_search">
                    <a href="query.cgi">Search</a>
                  </li>
                  <li id="report_tabular">
                      <a href="query.cgi?format=report-table">Tabular reports</a>
                  </li>
                    <li id="report_graphical">
                        <a href="query.cgi?format=report-graph">Graphical reports</a>
                    </li>
                  <li id="report_duplicates">
                    <a href="duplicates.cgi">Duplicates</a>
                  </li>
                </ul>
              </div>
            </li>
            <li class="submenu">
              <a  href="#">Other Reports <span class="fa fa-caret-right"></span></a>
              <div>
                <ul>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=user_activity.html">User Changes</a>
                  </li>
                </ul>
              </div>
            </li>
            <li class="submenu">
              <a  href="#">Plotly Reports <span class="fa fa-caret-right"></span></a>
              <div>
                <ul>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=bug_status.html">Bug Status</a>
                  </li>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=bug_severity.html">Bug Severity</a>
                  </li>
                  <li>
                      <a href="https://bugzilla.redhat.com/page.cgi?id=non_defaults.html">Non-Defaults</a>
                  </li>
                </ul>
              </div>
            </li>
          </ul>
        </div>
      </li><li><span class="separator"> | </span><a href="page.cgi?id=productdashboard.html">Product Dashboard</a></li>
    </ul>
   </div>
  </li>

  <li class="submenu">
   <a href="#">Help <span class="fa fa-caret-down"></span></a>
   <div>
    <ul><li><a href="docs/en/html/using/understanding.html" >Page Help!</a></li>
      <li><a href="page.cgi?id=bug-writing.html">Bug Writing Guidelines</a></li> 
      <li><a href="page.cgi?id=whats-new.html">What's new</a></li>
      <li><a href="https://access.redhat.com/help/browsers">Browser Support Policy</a></li>
      <li><a href="page.cgi?id=release-notes.html">5.0.4.rh64 Release notes</a></li>
      <li><a href="page.cgi?id=faq.html">FAQ</a></li>
      <li><a href="docs/en/html/index.html">Guides index</a></li>
      <li><a href="docs/en/html/using/index.html">User guide</a></li>
      <li><a href="docs/en/html/integrating/api/Bugzilla/WebService/Bug.html">Web Services</a></li>
      <li><a href="page.cgi?id=redhat/contact.html" >Contact</a></li> 
      <li><a href="page.cgi?id=terms-conditions.html" >Legal</a></li> 
    </ul>
   </div>
  </li>



</ul>
    </div>
  </div>


  <div id="bugzilla-body">



<noscript>
      <div id="no-js-message">This site requires JavaScript to be enabled to function correctly, please enable it.</div>
</noscript>

<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=1077441" title="Format For Printing"><i class="fa fa-print"></i></a></li>
    <li><a href="show_bug.cgi?ctype=xml&amp;id=1077441" title="Export as XML"><i class="far fa-file-excel"></i></a></li>
    <li><a href="enter_bug.cgi?cloned_bug_id=1077441" title="Clone This Bug"><i class="fa fa-clone"></i></a></li>
    <li>
      <a href="enter_bug.cgi?cloned_bug_id=1077441&lite=1" title="Copy is a lite weight clone that only copies the summary &amp; description">
       <i class="far fa-clone"></i>
      </a>
    </li>


          
    <li>
      <a href="#c23" title="Last Comment">
         <i class="fas fa-arrow-down" aria-hidden="true"></i>
      </a>
    </li><li>
  <a href="buglist.cgi?bug_id=1077441&amp;bug_id_type=anddependson&amp;format=tvp" title="TreeView+">
    <i class="fa fa-tree"></i>
  </a>
</li>
    </ul>
<script type="text/javascript">
<!--

//-->
</script>




<form name="changeform" id="changeform" method="post" action="process_bug.cgi">





  <input type="hidden" name="delta_ts" value="2016-02-10 19:32:48">
  <input type="hidden" name="id" value="1077441">
  <input type="hidden" name="token" value="1635624516-NNU05JiXeGqS7RkZUlcXbkNOqyRdBjwGodrY1iawcoA">
<div class="bz_short_desc_container edit_form">
    
    

     <a href="show_bug.cgi?id=1077441"><b>Bug&nbsp;1077441</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">[ovirt][engine-api] CSRF vulnerability in REST API</span>
     </span>

    
    

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

  
  
</span>[ovirt][engine-api] CSRF vulnerability in REST API
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      '[ovirt][engine-api] CSRF vulnerability in REST API' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
      <th class="field_label">
        <a href="describekeywords.cgi">Keywords</a>:
      </th>
      <td>
        <div class="keywords_select">
          <select id="keywords" name="keywords"  disabled="disabled" multiple="multiple">
              <option value="Security"
                      title="Bugs with the &quot;Security&quot; keyword are those that relate to a security vulnerability with a Red Hat product or service. For further information on how to report a security vulnerability to Red Hat please see the &quot;Security Contacts and Procedures&quot; page at http://www.redhat.com/security/team/contact/"
                      selected="selected"
              >Security
              </option>
          </select>
        </div>
      </td>
    </tr>

  <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">CLOSED
          CURRENTRELEASE
      </span>
    </td>
  </tr>

<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

  
  
</th>
    <td>
        None
    </td>
  </tr>

<tr>

<th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components. Select a Classification to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_product" >oVirt

</td>


    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_classification" >Retired

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=oVirt"
  >Component:</a>

  
  
</th>
      <td>
        

            <input type="hidden" id="component" name="component" value="ovirt-engine-api">ovirt-engine-api
        
        
        <span class="show_others">
          <a href="buglist.cgi?component=ovirt-engine-api&amp;product=oVirt"
            title="Show other bugs for this component"><i class="fas fa-th-list"></i></a>
        
        
          <a href="enter_bug.cgi?component=ovirt-engine-api&amp;product=oVirt&amp;version=3.4"
            title="Create a new bug for this component"><i class="fas fa-plus-circle"></i></a>
        
        </span>
      </td>
    </tr>
    <tr>
        <th id="bz_rh_sub_component_input_th"
            class="field_label bz_default_hidden">
          <label for="rh_sub_component">
            <a class="field_help_link" href="page.cgi?id=fields.html#rh_sub_components" title="The sub component of a specific component">Sub Component:</a>
          </label>
        </th>
        <td id="bz_rh_sub_component_input_td" class="bz_default_hidden">
          <input type="hidden" name="defined_rh_sub_component" id="defined_rh_sub_component" value="0">
          <select name="rh_sub_component" id="rh_sub_component"  disabled="disabled" onchange="assign_to_default();" >
            <option value="">---</option>
          </select>
          <script>
            $(document).ready(function () {
              init_sub_components();
            });
          </script>
        
          <span class="show_others">
            <a href="buglist.cgi?component=ovirt-engine-api&amp;product=oVirt" title="Show other bugs for this sub-component"><i class="fas fa-th-list"></i></a>
          
          </span>
        </td>
      </tr>

<script>
  function rh_check_sub_components () {
    var ret = '';
      var sub_comp_obj = document.getElementById('rh_sub_component');
        if ($('#defined_rh_sub_component').val() == 1 && !$("#rh_sub_component").selectize()[0].selectize.getValue()) {
          if (!ret) ret = sub_comp_obj;
          _sub_comps_errorFor(
            sub_comp_obj,
            "You must specify the sub component"
          );
      }

    return ret;
  }

  function _sub_comps_errorFor(field, error_text) {
      var new_node = document.createElement('div');
      YAHOO.util.Dom.addClass(new_node, 'validation_error_text');
      new_node.innerHTML = error_text;
      YAHOO.util.Dom.insertAfter(new_node, field);
      YAHOO.util.Dom.addClass(field, 'validation_error_field');
      new_node.scrollIntoView();
  }
</script>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

  
  
</th>
<td>
      <span id="version">3.4
      </span></td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

  
  
</th>
      <td class="field_value">Unspecified
      </td>
    </tr>
    <tr><th class="field_label "
    id="field_label_op_sys">


  <a 
      title="The operating system the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#op_sys"
  >OS:</a>

  
  
</th>
      <td class="field_value">
        Unspecified
      </td>
    </tr>
          
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#priority">Priority:</a></label>
      </th>
      <td>unspecified
      </td>
    </tr>
    <tr>
      <th class="field_label">
        <label ><a href="page.cgi?id=fields.html#bug_severity">Severity:</a>
        </label>
      </th>
      <td>
       high
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

  
  
</th><td>
      <span id="target_milestone">---
      </span></td>
      </tr>
      <tr>
        <td class="field_label">
          <label for="target_release">
              <a href="page.cgi?id=fields.html#target_release">
            Target&nbsp;Release</a></label>:
        </td><td>
      <span id="target_release">3.5.0
      </span></td>
        
        
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

  
  
</th>
      <td><span class="vcard redhat_user"><span class="fn">Juan Hernández</span>
</span>
      </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_qa_contact">


  <a 
      title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#qa_contact"
  >QA Contact:</a>

  
  
</th>
      <td><span class="vcard "><span class="fn">Petr Beňas</span>
</span>
      </td>
    </tr>
    
    <tr><th class="field_label "
    id="field_label_docs_contact">

    <label for="docs_contact" accesskey="q">

  <a 
      title="The person responsible for documenting once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#docs_contact"
  >Docs Contact:</a>
</label>
  
  
</th>
      <td><span class="vcard ">
</span>
      </td>
    </tr>
    
    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'juan.hernandez\x40redhat.com',
        'pstehlik\x40redhat.com',
        '');
    </script>
          
          
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

  
  
</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>

    <tr><th class="field_label "
    id="field_label_status_whiteboard">


  <a 
      title="Each bug has a free-form single line text entry box for adding tags and status information."
      class="field_help_link"
      href="page.cgi?id=fields.html#status_whiteboard"
  >Whiteboard:</a>

  
  
</th><td>infra  
  </td>
    </tr>
          

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends On:</a>

  
  
</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

  
  
</th>

  <td>
    <span id="blocked_input_area">
    </span>
<a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=1077444">1077444</a> <a class="bz_bug_link
          bz_secure
    "
   title=""
   href="show_bug.cgi?id=1081905">1081905</a> 
  </td>
  </tr>

          <tr>
    <th class="field_label">TreeView+</th>
    <td>
        <a href="buglist.cgi?bug_id=1077441&amp;bug_id_type=anddependson&amp;format=tvp">
        depends on</a> /
        <a href="buglist.cgi?bug_id=1077441&amp;bug_id_type=andblocked&amp;format=tvp&amp;tvp_dir=blocked">
        blocked</a>
    </td>
    <td></td>
</tr>
          
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#reporter">Reported:</a>
    </th>
    <td>2014-03-18 03:02 UTC by <span class="vcard redhat_user"><span class="fn">lzhuang</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#modified">Modified:</a>
    </th>
    <td>2016-02-10 19:32 UTC
      (<a href="show_activity.cgi?id=1077441">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          <a href="page.cgi?id=fields.html#cclist">CC List:</a>
        </label>
      </th>
      <td>21 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="alonbl">alonbl</option>
                <option value="bazulay">bazulay</option>
                <option value="bugs">bugs</option>
                <option value="djorm">djorm</option>
                <option value="ecohen">ecohen</option>
                <option value="gklein">gklein</option>
                <option value="gmollett">gmollett</option>
                <option value="huiwang">huiwang</option>
                <option value="iheim">iheim</option>
                <option value="jechoi">jechoi</option>
                <option value="juan.hernandez">juan.hernandez</option>
                <option value="khong">khong</option>
                <option value="lzhuang">lzhuang</option>
                <option value="mishka8520">mishka8520</option>
                <option value="pstehlik">pstehlik</option>
                <option value="rbalakri">rbalakri</option>
                <option value="s.kieske">s.kieske</option>
                <option value="suli">suli</option>
                <option value="vszocs">vszocs</option>
                <option value="yeylon">yeylon</option>
                <option value="yuzheng">yuzheng</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>


 
<tr>
      <th class="field_label "
    id="field_label_cf_fixed_in">


  <a 
      title="The full package version. PGM uses to check if brew ..."
  >Fixed In Version:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_fixed_in"  colspan="2">ovirt-3.5.0-beta1.1

</td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_doc_type">


  <a 
      title="Click the information icon to the right to see the description"
  >Doc Type:</a>

  
  <i class="fas fa-info-circle pop-text" onclick="alertify.alert('Doc Type', BB_FIELDS['cf_doc_type'].long_desc)" title="Click to see full description"></i>

  
</th>
  <td class="field_value "
      id="field_container_cf_doc_type"  colspan="2">Bug Fix

<span id="cf_doc_warn"></span></td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_release_notes">


  <a 
      title="Click the information icon to the right to see the description"
  >Doc Text:</a>

  
  <i class="fas fa-info-circle pop-text" onclick="alertify.alert('Doc Text', BB_FIELDS['cf_release_notes'].long_desc)" title="Click to see full description"></i>

  
</th>
  <td class="field_value "
      id="field_container_cf_release_notes"  colspan="2">
      <div class="uneditable_textarea"></div>

</td>
    </tr>
    
    

    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_clone_of">


  <a 
      title="The bug listed here was the bug cloned to create thi..."
  >Clone Of:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_clone_of"  colspan="2">

</td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_environment">


  <a 
      title="This field is used for unformatted text that helps t..."
  >Environment:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_environment"  colspan="2">
      <div class="uneditable_textarea"></div>

</td>
    </tr>
    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_last_closed">


  <a 
      title="When this bug was last marked as closed. Used for st..."
  >Last Closed:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_last_closed"  colspan="2">2014-10-17 12:44:38 UTC
    

</td>
    </tr>
    
    

    
    

    
    

    
    

    
    

    
    

    
    

    
    

    <tr>
      <th class="field_label "
    id="field_label_cf_ovirt_team">


  <a 
      title="This records what vertical team is working on the bug."
  >oVirt Team:</a>

  
  
</th>
  <td class="field_value "
      id="field_container_cf_ovirt_team"  colspan="2">Infra

</td>
    </tr>

<tr>
  <th class="field_label">
    <label for="dependent_products">
      <a
        class="field_help_link"
        href="page.cgi?id=fields.html#dependent_products"
        title="Other Products that are affected by this bug."
      >
        Dependent Products:
      </a>
     </label>
  </th>
  <td>
    <select id="dependent_products" name="dependent_products" multiple disabled="disabled"
    >
        <option value="171" >Red Hat Enterprise Virtualization Manager</option>
    </select>
    <script type="text/javascript">
      $(document).ready(function () {
        init_products({id : "dependent_products", noajax: 1});
      });
    </script>
  </td>
</tr>
<tr>
      <th class="field_label">
        <label>Flags:</label>
      </th>
      <td><span title="lzhuang">lzhuang</span>:
      
      needinfo-<br>
      </td>
    </tr>

        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    
    <th align="left">
      Attachments
    </th>
    <th colspan="2" align="right">
      <a href="page.cgi?id=terms-conditions.html">(Terms of Use)</a>
    </th>
    
  </tr>



  <tr class="bz_attach_footer">
    <td colspan="3">
        <a href="attachment.cgi?bugid=1077441&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>

    

    <script>
  YAHOO.ExternalBugs.sUrlYUI = 'https://bugzilla.redhat.com/jsonrpc.cgi';
  YAHOO.ExternalBugs.sUrlRPC = 'https://bugzilla.redhat.com/xmlrpc.cgi';
  YAHOO.ExternalBugs.extRefreshList = [];
function _extbz_errorFor(field, error_text) {
    var new_node = document.createElement('div');
    YAHOO.util.Dom.addClass(new_node, 'validation_error_text');
    new_node.innerHTML = error_text;
    YAHOO.util.Dom.insertAfter(new_node, field);
    YAHOO.util.Dom.addClass(field, 'validation_error_field');
    return new_node;
}

function check_external_bugs (f) {
    var focus_me;
    var external_bugs = YAHOO.util.Dom.getElementsByClassName(
        'external_bug_id', null, f);
    for (var i = 0; i < external_bugs.length; i++) {
        var bug_id_key   = external_bugs[i].name;
        var bug_type_key = 'external_' + bug_id_key.substr(13);
        if($('#' + bug_id_key).length > 0) {
            var bug_id       = document.getElementById(bug_id_key).value;
            var bug_type     = document.getElementById(bug_type_key).value;
            if ((bug_type == '' || bug_type == '0') && bug_id != '') {
                focus_me = _extbz_errorFor(
                    document.getElementById(bug_type_key),
                    'You specified the external tracker id, but not the type'
                );
            }
            else if (bug_type != '' && bug_type != '0' && bug_id == '') {
                focus_me = _extbz_errorFor(
                    external_bugs[i],
                    'You specified the external tracker type, but not the id'
                );
            }
            else if (bug_type != '' && bug_id != '') {
            }
        }
    }

    return focus_me;
}

var bz_no_validate_enter_bug = false;
function validateChangeBug(changeform) {
    // This is for the "bookmarkable templates" button.
    if (bz_no_validate_enter_bug) {
        // Set it back to false for people who hit the "back" button
        bz_no_validate_enter_bug = false;
        return true;
    }

    var current_errors = YAHOO.util.Dom.getElementsByClassName(
        'validation_error_text', null, changeform);
    for (var i = 0; i < current_errors.length; i++) {
        current_errors[i].parentNode.removeChild(current_errors[i]);
    }
    var current_error_fields = YAHOO.util.Dom.getElementsByClassName(
        'validation_error_field', null, changeform);
    for (var i = 0; i < current_error_fields.length; i++) {
        var field = current_error_fields[i];
        YAHOO.util.Dom.removeClass(field, 'validation_error_field');
    }

    var focus_me;

    // REDHAT EXTENSION 1000743
    focus_me = check_external_bugs(changeform);

    if (focus_me) {
        focus_me.scrollIntoView(false);
        return false;
    }

    return true;
}

changeform.onsubmit = function() { return validateChangeBug(changeform)};
</script>

<br>
<table id="external_bugs_table" cellspacing="0" cellpadding="4">
  <caption name="et0" id="et0">Links</caption>
    <tr>
      <th>System</th>
      <th>ID</th>
      <th>Private</th>
      <th>Priority</th>
      <th>Status</th>
      <th>Summary</th>
      <th>Last Updated</th>
    </tr>

    
    <tr id="ext_row_151759" >
      <td>oVirt gerrit
      </td>
      <td>
        <a href="https://gerrit.ovirt.org/26578">26578</a>
      </td>
      <td>
        <span id="ext_is_private_151759">0
        </span>
      </td>
      <td>
        <span id="ext_priority_151759">master
        </span>
      </td>
      <td>
        <span id="ext_status_151759">ABANDONED
        </span>
      </td>
      <td>
        <span id="ext_description_151759"
              title="restapi: Add CSRF protection filter">restapi: Add CSRF protection filter
        </span>
      </td>
      <td>
        <span id="ext_last_updated_151759">
            Never
        </span>
      </td>
    </tr>
    
    <tr id="ext_row_165185" >
      <td>oVirt gerrit
      </td>
      <td>
        <a href="https://gerrit.ovirt.org/29681">29681</a>
      </td>
      <td>
        <span id="ext_is_private_165185">0
        </span>
      </td>
      <td>
        <span id="ext_priority_165185">master
        </span>
      </td>
      <td>
        <span id="ext_status_165185">MERGED
        </span>
      </td>
      <td>
        <span id="ext_description_165185"
              title="restapi: CSRF protection filter">restapi: CSRF protection filter
        </span>
      </td>
      <td>
        <span id="ext_last_updated_165185">
            Never
        </span>
      </td>
    </tr>
    
    <tr id="ext_row_165572" >
      <td>oVirt gerrit
      </td>
      <td>
        <a href="https://gerrit.ovirt.org/29849">29849</a>
      </td>
      <td>
        <span id="ext_is_private_165572">0
        </span>
      </td>
      <td>
        <span id="ext_priority_165572">ovirt-engine-3.5
        </span>
      </td>
      <td>
        <span id="ext_status_165572">MERGED
        </span>
      </td>
      <td>
        <span id="ext_description_165572"
              title="restapi: CSRF protection filter">restapi: CSRF protection filter
        </span>
      </td>
      <td>
        <span id="ext_last_updated_165572">
            Never
        </span>
      </td>
    </tr>
    
    <tr id="ext_row_166574" >
      <td>oVirt gerrit
      </td>
      <td>
        <a href="https://gerrit.ovirt.org/30222">30222</a>
      </td>
      <td>
        <span id="ext_is_private_166574">0
        </span>
      </td>
      <td>
        <span id="ext_priority_166574">None
        </span>
      </td>
      <td>
        <span id="ext_status_166574">None
        </span>
      </td>
      <td>
        <span id="ext_description_166574"
              title="None">None
        </span>
      </td>
      <td>
        <span id="ext_last_updated_166574">
            Never
        </span>
      </td>
    </tr>
    
    <tr id="ext_row_166594" >
      <td>oVirt gerrit
      </td>
      <td>
        <a href="https://gerrit.ovirt.org/30234">30234</a>
      </td>
      <td>
        <span id="ext_is_private_166594">0
        </span>
      </td>
      <td>
        <span id="ext_priority_166594">ovirt-engine-3.5
        </span>
      </td>
      <td>
        <span id="ext_status_166594">MERGED
        </span>
      </td>
      <td>
        <span id="ext_description_166594"
              title="restapi: Different realms for different URLs">restapi: Different realms for different URLs
        </span>
      </td>
      <td>
        <span id="ext_last_updated_166594">
            Never
        </span>
      </td>
    </tr>

</table>

<br>
    

  </td>

  <td class="groups">
  </td>
  </tr></table>

  
  <div id="comments"><script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>






<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment
            "
    >

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">lzhuang</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-03-18 03:02:17 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Description of problem:
Because no protection against CSRF attack is performed in oVirt REST APIs(https://&lt;host_ip&gt;/api), an attacker could force an end user to execute unwanted actions to oVirt.

Version-Release number of selected component (if applicable):
oVirt 3.4.0-5 beta3

How reproducible:
100%

Steps to Reproduce:
1. Log in oVirt web application
2. Generate a malicious page that will send a request to oVirt REST API to delete a VM
3. Open that page in the same browser with oVirt

Actual results:
A request is sent to oVirt REST API, and that VM is deleted.

Expected results:
Prevention exists in all REST APIs, such as a CSRF token.

Additional info:

</pre>
    </div>

    <div id="c1" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Juan Hernández</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-03-18 13:10:22 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">This is a real issue, but currently we can't implement a CSRF token solution without breaking the UI plugins, as they expect to be able to use the authentication and session created by webadmin, even when running from different machines.

Can we make this bug public?

</pre>
    </div>

    <div id="c5" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Michael Pasternak</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-04-17 08:46:26 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hi Juan,

CSRF is an issue indeed, however i'm not sure that fix described in your patch
[1] is a right way to go, as it not just breaks backward compatibility, but
completely disables native authentication method (per request), which is common
and expected in RESTful applications.

also forcing users explicitly mark theirs product as 'insecure' (just to continue
working as they used to) does not seem right to me,

as about the fix itself, existence of Session &amp; JSESSIONID header in request does not verify that the end-user intended to submit the request, 

there are verity of options to deal with this, such as 'Checking The Referer Header', 'Double Submit Cookies ', 'Encrypted Token Pattern', 'Synchronizer Token Pattern', etc.

Thanks.

[1] <a href="http://gerrit.ovirt.org/#/c/26578/2//COMMIT_MSG">http://gerrit.ovirt.org/#/c/26578/2//COMMIT_MSG</a>

</pre>
    </div>

    <div id="c6" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Juan Hernández</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-04-21 10:55:17 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">The proposed fix doesn't disable per request authentication. The check is only performed if the request contains the JSESSIONID cookie, and this cookie won't be contained if the caller is using per request authentication. These are the first few lines of the doFilter method:

   // Nothing to check if there isn't a session yet:
   HttpSession session = request.getSession(false);
   if (session == null) {
     chain.doFilter(request, response);
     return;
   }

The fix does break backwards compatibility, that I agree, but so will do any mechanism that requires new headers/parameters/cookies. In my opinion there is no way around that. And that is why we need a way to allow users, as a last resort, to mark their installation as insecure and thus continue using it. Note that the proposal is to let users do this in a fine grained way, so, for example, if a user has updated most of his RESTAPI callers, but still has a old application that can't be updated, he can just allow request from that particular application:

  function isTrusted(request) {
    // Check if the request is coming from the old application, using
    // the source IP address, the user agent, or whatever it takes
    // to detect that.
    return ...;    
  }

The existence in the request of the JSESSIONID header with the same value that the JSESSIONID cookie demonstrates that the request comes from someone that was able to read the value of the JSESSIONID cookie or the JSESSIONID response header. In a browser that hasn't been compromised this means that only the application that received the original legitimate response. This is thanks to the &quot;same origin policy&quot; of the browser.

The proposal is in fact a variant of the &quot;double submit cookies&quot; technique.

</pre>
    </div>

    <div id="c7" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Michael Pasternak</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-04-26 11:29:52 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to Juan Hernández from <a href="show_bug.cgi?id=1077441#c6">comment #6</a>)
<span class="quote">&gt; The proposed fix doesn't disable per request authentication. The check is
&gt; only performed if the request contains the JSESSIONID cookie, and this
&gt; cookie won't be contained if the caller is using per request authentication.</span >

indeed, so if one uses per request authentication (does not ask for persistent-auth and never got back JSESSIONID cookie in response from api, can't send it in the following request to api) and as result all his requests will be insecure (cause they does not have JSESSIONID http header),

if to address this, he'll have to add persistant-auth:true header, engine will be fluded with zombie sessions which none needs, what will become an abuse of persistent authentication.

anyway per-request auth will be broken after your patch for all clients,
cause they can't fulfill you request of supplying JSESSIONID header.

when i say &quot;disables per-request auth&quot;, i mean it's not physically disabled,
but won't be served anymore as is.

<span class="quote">&gt; These are the first few lines of the doFilter method:
&gt; 
&gt;    // Nothing to check if there isn't a session yet:
&gt;    HttpSession session = request.getSession(false);
&gt;    if (session == null) {
&gt;      chain.doFilter(request, response);
&gt;      return;
&gt;    }
&gt; 
&gt; The fix does break backwards compatibility, that I agree, but so will do any
&gt; mechanism that requires new headers/parameters/cookies. In my opinion there
&gt; is no way around that. And that is why we need a way to allow users, as a
&gt; last resort, to mark their installation as insecure and thus continue using
&gt; it. </span >

i don't think this is a right approach, of course you can say it was insecure
before anyway, but my complain is not about being secure or not, but about a
need in doing something in order to be able continue working after this patch, and this is a huge problem,

i think such changes should come in api-v2 and force api-v1 deprecation, but not
breaking v1, it's simply not right.

(btw the fact that you've addressed it in our clients, does not mean you sollved the issue this fix produces ...)

</pre>
    </div>

    <div id="c8" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vojtech Szocs</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-04-28 16:57:19 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Hi guys, I would like to share some of my opinions on this topic.

<span class="quote">&gt; The existence in the request of the JSESSIONID header with the same value
&gt; that the JSESSIONID cookie demonstrates that the request comes from someone
&gt; that was able to read the value of the JSESSIONID cookie or the JSESSIONID
&gt; response header.</span >

+1

In general, the use of cookies is the main source of CSRF vulnerability in web applications. Any kind of user credentials/identification (JSESSIONID cookie, HTTP Authorization header, etc.) that is *automatically* sent by the web browser as part of request essentially opens CSRF vulnerability.

In web applications, web browsers typically *remember* HTTP Basic Auth info once it has been set for given domain (unless you restart the browser) -- this means that also per-request authentication is implicitly subject to CSRF via HTTP Authorization header. I belive there should be a separate patch to address this. (On a side note, we should think about moving away from HTTP Basic Auth altogether, for security reasons.)

Similarly, web browsers automatically send cookies that were set for given domain (JSESSIONID cookie is typically marked as 'session' cookie which means it is deleted on browser restart). As Juan noted, only JavaScript that originated from domain X path Y can read cookie set for domain X path Y. In general, cookies are subject to *both* Same-Origin Policy (same domain) + same path check.

So if the client (JavaScript) is able to read JSESSIONID cookie (and send its value via JSESSIONID *request* header), we can assume that this client can be trusted. In addition to JSESSIONID cookie, REST API backend also sends JSESSIONID *response* header for clients that are on *same origin* but *different path* -- for example:

* WebAdmin GUI runs on <a href="http://example/ovirt-engine/webadmin">http://example/ovirt-engine/webadmin</a>
  -&gt; domain <a href="http://example/">http://example/</a>
  -&gt; path /ovirt-engine/webadmin

* REST API backend runs on <a href="http://example/ovirt-engine/api">http://example/ovirt-engine/api</a>
  -&gt; domain <a href="http://example/">http://example/</a>
  -&gt; path /ovirt-engine/api

As you can see in example above, domains are the same, but paths are *not* the same, this is why having JSESSIONID *response* header is useful for JavaScript clients -- they normally wouldn't be able to read JSESSIONID cookie (due to same-domain + same-path restriction).

Regardless of how the client reads the JSESSIONID value (from cookie or from response header), the important thing is that the client needs to include JSESSIONID *request* header with this value -- this is something web browser won't do automatically, therefore it serves as CSRF request token.

<span class="quote">&gt; indeed, so if one uses per request authentication (does not ask for
&gt; persistent-auth and never got back JSESSIONID cookie in response from api,
&gt; can't send it in the following request to api) and as result all his
&gt; requests will be insecure (cause they does not have JSESSIONID http header),</span >

In web browser, requests using per-request authentication will be vulnerable to CSRF anyway, because per-request authentication relies on HTTP Basic Auth -- as I mentioned above, web browsers typically remember Basic Auth info once it has been set for given domain (this is analogous to browsers automatically sending cookies for given domain once the cookie has been set).

As I wrote above, there should be patch to fix CSRF due to HTTP Basic Auth (per-request authentication scenario) as well.

I agree with Juan that there is no way to make CSRF-protection changes *and* stay compatible with old clients at the same time. It's simply because the current authentication mechanism (relying on HTTP Basic Auth and cookies) is vulnerable to CSRF on its own.
 
<span class="quote">&gt; anyway per-request auth will be broken after your patch for all clients,
&gt; cause they can't fulfill you request of supplying JSESSIONID header.</span >

We should address CSRF for both per-request authentication (HTTP Authorization header) and persistent authentication (cookie) scenarios.

<span class="quote">&gt; i don't think this is a right approach, of course you can say it was insecure
&gt; before anyway, but my complain is not about being secure or not, but about a
&gt; need in doing something in order to be able continue working after this
&gt; patch, and this is a huge problem,
&gt; 
&gt; i think such changes should come in api-v2 and force api-v1 deprecation, but
&gt; not
&gt; breaking v1, it's simply not right.</span >

This is a good point, but it would mean that api-v1 is vulnerable to CSRF whereas api-v2 contains CSRF protection. It's essentially a sacrifice of security in favor of backwards compatibility.

</pre>
    </div>

    <div id="c9" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Michael Pasternak</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-04-30 09:53:44 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to vszocs from <a href="show_bug.cgi?id=1077441#c8">comment #8</a>)
<span class="quote">&gt; &gt; i don't think this is a right approach, of course you can say it was insecure
&gt; &gt; before anyway, but my complain is not about being secure or not, but about a
&gt; &gt; need in doing something in order to be able continue working after this
&gt; &gt; patch, and this is a huge problem,
&gt; &gt; 
&gt; &gt; i think such changes should come in api-v2 and force api-v1 deprecation, but
&gt; &gt; not
&gt; &gt; breaking v1, it's simply not right.
&gt; 
&gt; This is a good point, but it would mean that api-v1 is vulnerable to CSRF
&gt; whereas api-v2 contains CSRF protection. It's essentially a sacrifice of
&gt; security in favor of backwards compatibility.</span >

we are not in position to decide that, but the consumers of our api are,
we should let them being able to choose - this is common practice btw.

</pre>
    </div>

    <div id="c10" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Juan Hernández</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-04-30 10:55:59 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">I have to insist that non persistent authentication isn't affected in any way by this change, as when there isn't a session the filter does nothing. Callers that use non persistent authentication will work exactly as they used to.

Letting the consumers of the API decide is the reason for the existence of the trust script. The administrators of the engine can use it to decide, with a fine grained criteria. For example, an administrator may decide that he wants to require CSRF protection for requests coming for browsers, but not for requests coming from his curl scripts:

  function isTrusted(request) {
    return request.getHeader(&quot;User-Agent&quot;).startsWith(&quot;curl/&quot;);
  }

Or he may decide to give their users one month to update their applications:

  function isTrusted(request) {
    var now = Date();
    var limit = Date(2014, 06, 01);
    return now &lt; limit;
  }

Or he may decide that he doesn't want to sacrifice compatibility at all:

  function isTrusted(request) {
    return false;
  }

Of he may decide that security is paramount (this is the default):

  function isTrusted(request) {
    return true;
  }

Or he may have any other criteria that we aren't aware of. The decision to when to sacrifice security in favor of compatibility is thus in the hands of the administrator, not in our hands.

</pre>
    </div>

    <div id="c11" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Michael Pasternak</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-01 10:44:09 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">
Juan,

(In reply to Juan Hernández from <a href="show_bug.cgi?id=1077441#c10">comment #10</a>)
<span class="quote">&gt; I have to insist that non persistent authentication isn't affected in any
&gt; way by this change, as when there isn't a session the filter does nothing.
&gt; Callers that use non persistent authentication will work exactly as they
&gt; used to.</span >

you don't have to insist, but to explain yourself better in the description
of the feature which is says at [1]:

FEATURE-DOC: &quot;Currently we don't have any mechanism to protect the RESTAPI from CSRF attacks. This patch adds a filter that increases the protection from
this attacks requiring callers to include a copy of the session
identifier in a request header. This way only applications that have
legitimately obtained a session cookie will be able to send valid
requests, Requests that don't contain this JSESSIONID header will be rejected with error code 403 (forbidden)&quot;

[1] <a href="http://gerrit.ovirt.org/#/c/26578/2//COMMIT_MSG">http://gerrit.ovirt.org/#/c/26578/2//COMMIT_MSG</a>

as i read this, don't have jsession+header -&gt; not get served and &quot;non persistent authentication&quot; users never have jessionid in request, thus
applying basic transitivity logic -&gt; they never get served.

<span class="quote">&gt; 
&gt; Letting the consumers of the API decide is the reason for the existence of
&gt; the trust script. The administrators of the engine can use it to decide,
&gt; with a fine grained criteria. For example, an administrator may decide that
&gt; he wants to require CSRF protection for requests coming for browsers, but
&gt; not for requests coming from his curl scripts:
&gt; 
&gt;   function isTrusted(request) {
&gt;     return request.getHeader(&quot;User-Agent&quot;).startsWith(&quot;curl/&quot;);
&gt;   }
&gt; 
&gt; Or he may decide to give their users one month to update their applications:
&gt; 
&gt;   function isTrusted(request) {
&gt;     var now = Date();
&gt;     var limit = Date(2014, 06, 01);
&gt;     return now &lt; limit;
&gt;   }
&gt; 
&gt; Or he may decide that he doesn't want to sacrifice compatibility at all:
&gt; 
&gt;   function isTrusted(request) {
&gt;     return false;
&gt;   }
&gt; 
&gt; Of he may decide that security is paramount (this is the default):
&gt; 
&gt;   function isTrusted(request) {
&gt;     return true;
&gt;   }
&gt; 
&gt; Or he may have any other criteria that we aren't aware of. The decision to
&gt; when to sacrifice security in favor of compatibility is thus in the hands of
&gt; the administrator, not in our hands.</span >

that's what i've told to begin with, but fixing things after it got broken using your workaround can't be call &quot;choice&quot; as it already stopped working ...

so after upgrading to latest build (including your change), they will have no choice whatsoever till administrator reads your documentation (let's assume he finds it ...) described here [1] understand what we're talking about / google it a bit, and maybe fix the env,

(don't assuming that all sysadmins on a same level of knowledge as you are,
also sysadmins maybe not in position to decide if it should be trusted or not
so they have to get developer/s involved while they may have used outsourcing to develop the app, etc., to make a long story short - it's a mess),

putting myself in position of product consumer, i'd be really frustrated dealing
with this change without heads up,

thus i'm convinced this is a good change, but for api-v2.

[1]

FEATURE-DOC: &quot;This change will break backwards compatibility with old callers, as they aren't aware of the new requirement. To handle that the filter uses a
configurable script that decides if a request is trusted. Trusted
requests don't need to use the JSESSIONID header. This script doesn't
exist by default, so no request will be trusted by default. In order to
use it the administrator will have to create it.&quot;

<a href="http://gerrit.ovirt.org/#/c/26578/2//COMMIT_MSG">http://gerrit.ovirt.org/#/c/26578/2//COMMIT_MSG</a>

</pre>
    </div>

    <div id="c12" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Michael Pasternak</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-01 13:33:11 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to Michael Pasternak from <a href="show_bug.cgi?id=1077441#c11">comment #11</a>)
<span class="quote">&gt; Juan,
&gt; 
&gt; (In reply to Juan Hernández from <a href="show_bug.cgi?id=1077441#c10">comment #10</a>)
&gt; &gt; I have to insist that non persistent authentication isn't affected in any
&gt; &gt; way by this change, as when there isn't a session the filter does nothing.
&gt; &gt; Callers that use non persistent authentication will work exactly as they
&gt; &gt; used to.
&gt; 
&gt; you don't have to insist, </span >

though looking at the code you indeed ignoring requests with no session,
so i apologize for being lazy &amp; not checking the code first, i think it worth
mentioning that in the commit message/documentation btw,

anyway my point made at <a href="show_bug.cgi?id=1077441#c11">comment 11</a> is still valid.

thanks.

</pre>
    </div>

    <div id="c13" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Michael Pasternak</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-03 15:47:38 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Juan,

i believe there is a way out, If you you want this feature in this version of api, you can push it, but make it disabled by default (so no clients will stop
working), this way:

1. users can adapt to it
2. UI can start using it imminently
3. you can state it will be forced at api-v2

how does it sounds?

</pre>
    </div>

    <div id="c14" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">David Jorm</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-05 00:46:58 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to Michael Pasternak from <a href="show_bug.cgi?id=1077441#c13">comment #13</a>)
<span class="quote">&gt; Juan,
&gt; 
&gt; i believe there is a way out, If you you want this feature in this version
&gt; of api, you can push it, but make it disabled by default (so no clients will
&gt; stop
&gt; working), this way:
&gt; 
&gt; 1. users can adapt to it
&gt; 2. UI can start using it imminently
&gt; 3. you can state it will be forced at api-v2
&gt; 
&gt; how does it sounds?</span >

This would be acceptable from a security perspective. The initial patch with an option to enable this feature would be shipped as an RHSA, with documentation explaining that manual configuration is necessary to apply the fix.

</pre>
    </div>

    <div id="c15" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Juan Hernández</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-07-07 20:01:41 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">The CSRF protection filter has been reworked so that it is disabled by default. It can be enabled using the &quot;CSRFProtection&quot; configuration parameter:

  # engine-config -s CSRFProtection=true

Then the engine needs to be restarted.

In addition the clients can decide to enable/disable protection using the &quot;Prefer&quot; header. If the first request of the session contains the &quot;Prefer&quot; header with the &quot;csrf-protection&quot; element then protection will be enabled, otherwise it will be disabled. This is intended for clients that don't need CSRF protection, as they don't run inside a browser (the SDKs and the CLI, in particular).

More details in the commit message of the change:

  <a href="http://gerrit.ovirt.org/29681">http://gerrit.ovirt.org/29681</a>

The GUI applications do run in a browser, and I'm proposing to modify them so that they always send the &quot;Prefer&quot; header requesting protection:

  <a href="http://gerrit.ovirt.org/29682">http://gerrit.ovirt.org/29682</a>

Note that once protection is enabled (with the CSRFProtection parameter) all UI plugins that use the session identifier passed by webadmin will need also to pass the session identifier in the &quot;JSESSIONID&quot; header.

</pre>
    </div>

    <div id="c16" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard "><span class="fn">Sven Kieske</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-07-08 07:16:28 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">Is there any chance to deprecate the old behaviour for UI-Plugins in some
future version?

As far as I know there are not a heck of a lot UI plugins, couldn't those
few devs get encouraged to adopt this new parameter?

What I am aiming for is a secure default installation.

The default installation has no plugins installed (correct my if I'm wrong).

</pre>
    </div>

    <div id="c17" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Juan Hernández</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-07-08 09:56:32 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">The default installation of oVirt doesn't have plugins installed, so you can perfectly change the CSRFParameter to true right after installation, if you want to have a more secure installation.

I have already notified the plugin developers I know. If the change is accepted we will notify other plugin developers.

For the future we plan to change the session tracking mechanism. Currently we use a JSSESSIONID cookie, which is problematic for JavaScript applications. In the future we want to use the JSESSIONID instead. This means that all client applications, including UI plugins, will have to send the JSESSIONID header. Once they do this change, they will be automatically supported by the CSRF protection mechanism. This will probably happen with oVirt 4.x, but there isn't a commitment yet.

</pre>
    </div>

    <div id="c18" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vojtech Szocs</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-07-08 10:39:29 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to Juan Hernández from <a href="show_bug.cgi?id=1077441#c15">comment #15</a>)

<span class="quote">&gt; The GUI applications do run in a browser, and I'm proposing to modify them
&gt; so that they always send the &quot;Prefer&quot; header requesting protection:</span >

+1

<span class="quote">&gt; Note that once protection is enabled (with the CSRFProtection parameter) all
&gt; UI plugins that use the session identifier passed by webadmin will need also
&gt; to pass the session identifier in the &quot;JSESSIONID&quot; header.</span >

UI plugins that wish to integrate with Engine REST API will be encouraged to utilize oVirt.js library (which will take care of HTTP communication details).

More generally, UI plugins shouldn't make any assumptions about &quot;CSRFProtection&quot; config parameter value. If a UI plugin wishes to talk directly to Engine REST API (i.e. using XMLHttpRequest), it must take care of sending &quot;JSESSIONID&quot; request header on its own.

(In reply to Sven Kieske from <a href="show_bug.cgi?id=1077441#c16">comment #16</a>)

<span class="quote">&gt; As far as I know there are not a heck of a lot UI plugins, couldn't those
&gt; few devs get encouraged to adopt this new parameter?</span >

UI plugin devs will be encouraged to use oVirt.js.


(In reply to Juan Hernández from <a href="show_bug.cgi?id=1077441#c17">comment #17</a>)

<span class="quote">&gt; For the future we plan to change the session tracking mechanism. Currently
&gt; we use a JSSESSIONID cookie, which is problematic for JavaScript
&gt; applications. In the future we want to use the JSESSIONID instead. This
&gt; means that all client applications, including UI plugins, will have to send
&gt; the JSESSIONID header. Once they do this change, they will be automatically
&gt; supported by the CSRF protection mechanism.</span >

This is a *much* needed improvement, at least from UI (plugin) point of view.

&#64;Juan, just out of curiosity, after we support &quot;JSESSIONID&quot; request/response header as an option for session tracking mechanism, can't we remove &quot;Prefer:csrf-protection&quot; and simply honor &quot;CSRFProtection&quot; config parameter?

</pre>
    </div>

    <div id="c19" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Juan Hernández</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-07-08 10:52:04 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to vszocs from <a href="show_bug.cgi?id=1077441#c18">comment #18</a>)
<span class="quote">&gt; &#64;Juan, just out of curiosity, after we support &quot;JSESSIONID&quot; request/response
&gt; header as an option for session tracking mechanism, can't we remove
&gt; &quot;Prefer:csrf-protection&quot; and simply honor &quot;CSRFProtection&quot; config parameter?</span >

We can remove &quot;Prefer: csrf-protection&quot; once that all clients are moved to use the JSESSIONID header instead of the cookie, but that will be a long time.

</pre>
    </div>

    <div id="c20" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Vojtech Szocs</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-07-08 11:14:28 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">(In reply to Juan Hernández from <a href="show_bug.cgi?id=1077441#c19">comment #19</a>)
<span class="quote">&gt; We can remove &quot;Prefer: csrf-protection&quot; once that all clients are moved to
&gt; use the JSESSIONID header instead of the cookie, but that will be a long
&gt; time.</span >

OK, sounds reasonable, thanks for your answer.

</pre>
    </div>

    <div id="c23" class="bz_comment
            "
    >

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1077441#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard redhat_user"><span class="fn">Sandro Bonazzola</span>
</span>
        </span>

        
        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-10-17 12:44:38 UTC
        </span>

      </div>

      


      
      



<pre class="bz_comment_text">oVirt 3.5 has been released and should include the fix for this issue.

</pre>
    </div>


  <script>
$(document).ready(function() {
  var mysel = document.getElementsByClassName('flag_type-415')[0];
  var relnotes = document.getElementById('cf_release_notes');
  if ( mysel && relnotes &&
      relnotes.value != '' &&
      relnotes.value != cf_doc_type_text[document.getElementById('cf_doc_type').value] &&
      mysel.options[mysel.selectedIndex].value != '+'
    )
      document.getElementById('cf_doc_warn').innerHTML = '<div class="warning "><b>Warning: Doc Text is not yet verified as correct</b></div>';
});
</script>

</td>
<td>
</td>
</tr></table>
  </div>

    <hr><div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=1077441&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=1077441" title="Format For Printing"><i class="fa fa-print"></i></a></li>
    <li><a href="show_bug.cgi?ctype=xml&amp;id=1077441" title="Export as XML"><i class="far fa-file-excel"></i></a></li>
    <li><a href="enter_bug.cgi?cloned_bug_id=1077441" title="Clone This Bug"><i class="fa fa-clone"></i></a></li>
    <li>
      <a href="enter_bug.cgi?cloned_bug_id=1077441&lite=1" title="Copy is a lite weight clone that only copies the summary &amp; description">
       <i class="far fa-clone"></i>
      </a>
    </li><li>
  <a href="buglist.cgi?bug_id=1077441&amp;bug_id_type=anddependson&amp;format=tvp" title="TreeView+">
    <i class="fa fa-tree"></i>
  </a>
</li>
    <li>
      <a href="#" title="Top of page">
        <i class="fa fa-arrow-up" aria-hidden="true"></i>
      </a>
    </li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li class="form">
    
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>
<script type="text/javascript">
function dt_submit() {
  var tables = $.fn.dataTable.tables( { visible: true, api: true } );
  $.each(tables.context, function() {
    var $myform = this.nTable.closest('form');

    // Checked checkboxes
    $.each(this.oInstance.$('input:checked'), function() {
      add_hidden(this.name, this.value, $myform)
    });

    // Inputs in selected rows
    $.each(this.oInstance.$('tr.selected'), function() {
      $(this).find('input').each( function() {
        add_hidden(this.name, this.value, $myform)
      });
    });

    // select boxes
    $.each(this.oInstance.$('select'), function() {
      if(($(this).val()!=="") && ($(this).val() !== 0)) {
        add_hidden(this.name, this.value, $myform);
      }
    });
  });
}

function add_hidden(nm, val, $frm) {
        $('<input />').attr('type', 'hidden')
          .attr('name', nm)
          .attr('value', val)
          .appendTo($frm);
}

$(document).ready(function() {
    $('form').submit(function( event ) {
        dt_submit();
        if( $(this).attr('id') === 'changeform') {
          return(validateEnterBug(this));
        }
    });
});

if (window.self !== window.top) {
    $('#header').addClass('bz_default_hidden');
    $('#footer').addClass('bz_default_hidden');
    $('.navigation').addClass('bz_default_hidden');
    $('body').css('background-image', 'none');
}
</script><script type="text/javascript">
$(document).ready(function() {
    $('select').not('.custom_search_condition select, #member_template select, #available_columns, #p2_component, #select_user_verify_class, #inclusion_to_remove, #exclusion_to_remove, #cc, #hide, #ack_col_edit #show, .noselectize, #j_top').each(function() {
        if(! $(this).hasClass('selectized')) {
            $(this).selectize({
                plugins: ['remove_button', 'minimum_search_length', 'extra_keys_control', 'related_fields', 'load_from_js'],
                selectOnTab: true,
                maxOptions: 'nolimit',
                minimum_search_length: 2,
                render: {
                    option: function(item, escape) {
                        var classes = "option";
                        var selected = this.items.indexOf(item.value) !== -1;
                        if(item.disabled) {
                            classes = classes + " bz_default_hidden" ;
                        }

                        return '<div class="' +  classes  + '" title="' + escape(item.title) + '" id="' + escape(item.id) + '" data-value="' + escape(item.value) + '">' +
                                    '<span>' + escape(item.text) + '</span>' +
                                '</div>';
                    }
                },
            });
        }
    });
});
</script>
  </body>
</html>