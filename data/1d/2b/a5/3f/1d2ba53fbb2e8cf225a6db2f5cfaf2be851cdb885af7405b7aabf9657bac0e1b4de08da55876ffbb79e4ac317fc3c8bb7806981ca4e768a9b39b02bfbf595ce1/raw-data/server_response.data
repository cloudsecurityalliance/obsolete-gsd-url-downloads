<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='Scripting Engine problem Bug #55475 - RDF' href='rss/bug.php?id=55475'>
        <link rel='alternate' type='application/rss+xml' title='Scripting Engine problem Bug #55475 - RSS 2.0' href='rss/bug.php?id=55475&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Bug #55475 :: is_a() triggers autoloader</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=55475">Bug</a>&nbsp;#55475</th>
            <td id="summary" colspan="5">is_a() triggers autoloader</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2011-08-22 08:16 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2011-11-09 05:27 UTC</td>
            <td rowspan="6">

                <table id="votes">
                    <tr><th class="details">Votes:</th><td>29</td></tr>
                    <tr><th class="details">Avg. Score:</th><td>4.5 &plusmn; 1.0</td></tr>
                    <tr><th class="details">Reproduced:</th><td>25 of 27 (92.6%)</td></tr>
                    <tr><th class="details">Same Version:</th><td>17 (68.0%)</td></tr>
                    <tr><th class="details">Same OS:</th><td>11 (44.0%)</td></tr>
                </table>

            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>mads &#x61;&#116; gartneriet &#x64;&#111;&#x74; dk</td>
            <th class="details">Assigned:</th>
            <td><a href="search.php?cmd=display&amp;assign=dmitry">dmitry</a> (<a href="https://people.php.net/dmitry">profile</a>)</td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=Scripting+Engine+problem">Scripting Engine problem</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>5.3.7</td>
            <th class="details">OS:</th>
            <td></td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3379" target="_blank">2011-3379</a></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=55475&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=55475&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=55475&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1314000962">&nbsp;</a><strong>[2011-08-22 08:16 UTC] mads &#x61;&#116; gartneriet &#x64;&#111;&#x74; dk</strong>
<pre class='note'>Description:
------------
When calling is_a() with a first argument that is not an object, then __autoload() is triggered:



Test script:
---------------
&lt;?php

function __autoload($class) {
	echo &quot;Would load: &quot; . $class . PHP_EOL;
}

$var = &quot;test&quot;;
var_dump(is_a($var, 'B'));

$obj = new Stdclass;
var_dump(is_a($obj, 'C'));

?&gt;

Expected result:
----------------
bool(false)
bool(false)

Actual result:
--------------
Would load: test
bool(false)
bool(false)


</pre>
</div><h2>Patches</h2>
<a href="patch-display.php?bug_id=55475&amp;patch=final_patch_for_5_4_and_HEAD_v2&amp;revision=latest" >final_patch_for_5_4_and_HEAD_v2</a>
(last revision 2011-11-08 09:24 UTC by alan_k@php.net)
<br><a href="patch-display.php?bug_id=55475&amp;patch=is_a_5.4_alternative&amp;revision=latest" >is_a_5.4_alternative</a>
(last revision 2011-10-17 13:15 UTC by jbondc &#x61;&#116; openmv &#x64;&#111;&#x74; com)
<br><a href="patch-display.php?bug_id=55475&amp;patch=final_patch_for_5_4_and_HEAD&amp;revision=latest"  style="background-color: yellow; text-decoration: line-through;" >final_patch_for_5_4_and_HEAD</a>
(last revision 2011-10-13 07:36 UTC by alan_k@php.net)
<br><a href="patch-display.php?bug_id=55475&amp;patch=is_a_with_warning.txt&amp;revision=latest" >is_a_with_warning.txt</a>
(last revision 2011-09-25 09:32 UTC by alan_k@php.net)
<br><a href="patch-display.php?bug_id=55475&amp;patch=Is_a_with_allow_string_argument_v3&amp;revision=latest"  style="background-color: yellow; text-decoration: line-through;" >Is_a_with_allow_string_argument_v3</a>
(last revision 2011-09-22 23:31 UTC by alan_k@php.net)
<br><a href="patch-display.php?bug_id=55475&amp;patch=Is_a_with_allow_string_argument_v2&amp;revision=latest" >Is_a_with_allow_string_argument_v2</a>
(last revision 2011-09-22 23:26 UTC by alan_k@php.net)
<br><a href="patch-display.php?bug_id=55475&amp;patch=Is_a_with_allow_string_argument&amp;revision=latest"  style="background-color: yellow; text-decoration: line-through;" >Is_a_with_allow_string_argument</a>
(last revision 2011-09-22 23:24 UTC by alan_k@php.net)
<br><a href="patch-display.php?bug_id=55475&amp;patch=is_class_of.diff&amp;revision=latest" >is_class_of.diff</a>
(last revision 2011-09-20 21:32 UTC by alan_k@php.net)
<br><a href="patch-display.php?bug_id=55475&amp;patch=is_class_of.txt&amp;revision=latest"  style="background-color: yellow; text-decoration: line-through;" >is_class_of.txt</a>
(last revision 2011-09-20 21:25 UTC by alan_k@php.net)
<br><a href="patch-display.php?bug_id=55475&amp;patch=revert.is_a.behaviour.to.ignoring.strings.diff&amp;revision=latest"  style="background-color: yellow; text-decoration: line-through;" >revert.is_a.behaviour.to.ignoring.strings.diff</a>
(last revision 2011-08-25 02:37 UTC by alan &#x61;&#116; akbkhome &#x64;&#111;&#x74; com)
<br><a href="patch-display.php?bug_id=55475&amp;patch=bug55475&amp;revision=latest" >bug55475</a>
(last revision 2011-08-22 10:30 UTC by kalle@php.net)
<br><p><a href='patch-add.php?bug_id=55475'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=55475'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_log' ><a name="1314001144">&nbsp;</a><strong>[2011-08-22 08:19 UTC] <a href="//people.php.net/pajoye">pajoye@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status:      Open</span>
<span class="added">+Status:      Assigned</span>
<span class="removed">-Assigned To:</span>
<span class="added">+Assigned To: dmitry</span>
</div></div></div><div class='comment type_comment' ><a name="1314001144">&nbsp;</a><strong>[2011-08-22 08:19 UTC] <a href="//people.php.net/pajoye">pajoye@php.net</a></strong>
<pre class='note'>Related to change for the #53727 fix.

<a href="http://svn.php.net/viewvc/php/php-" rel="nofollow">http://svn.php.net/viewvc/php/php-</a>
src/branches/PHP_5_3/Zend/zend_builtin_functions.c?r1=307522&amp;r2=312904

Assigned to Dmitry
</pre>
</div><div class='comment type_comment' ><a name="1314003452">&nbsp;</a><strong>[2011-08-22 08:57 UTC] konstantin &#x64;&#111;&#x74; leboev &#x61;&#116; gmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>I guess it's not a bug. The first argument can be a class name, what will be 
loaded only on calling this function.
</pre>
</div><div class='comment type_comment' ><a name="1314004523">&nbsp;</a><strong>[2011-08-22 09:15 UTC] <a href="//people.php.net/colder">colder@php.net</a></strong>
<pre class='note'>1) The underlying implementation is shared between is_a and is_subclass_of.
2) Previously, strings as first argument was not permitted by is_a but
was for is_subclass_of,
3) is_subclass_of always triggered autoload in such cases.
4) Following a fix from Dmitry, the underlying implementation now
allows a string as first argument for is_a as well.

Conclusion: it is now consistent, but if you wrongly used is_a with a
string before, it now triggers autoload because it actually accepts
it.
</pre>
</div><div class='comment type_comment' ><a name="1314007968">&nbsp;</a><strong>[2011-08-22 10:12 UTC] <a href="//people.php.net/zeev">zeev@php.net</a></strong>
<pre class='note'>Discussed with Dmitry, the current functionality appears to be correct.

is_a('foo', 'bar') *can* be true even if class foo isn't loaded, and we'll only 
know that if we try to load 'foo'.

This is different from is_a($obj, 'non_existent_class'), which we can resolve as 
'false' in case non_existent_class isn't loaded without trying to load it (there 
can't be an instance of a class that doesn't exist).
</pre>
</div><div class='comment type_comment' ><a name="1314008991">&nbsp;</a><strong>[2011-08-22 10:29 UTC] <a href="//people.php.net/kalle">kalle@php.net</a></strong>
<pre class='note'>Zeev, although the functionality might appear as it should be then we should not make sudden changes like that in the middle of a stable branch, we should patch up 5.3 and keep the behaviour in 5.4 if its indeed intended atleast to comply with previous versions.

The fix for 5.3 is simple, attached
</pre>
</div><div class='comment type_patch' ><a name="1314009019">&nbsp;</a><strong>[2011-08-22 10:30 UTC] <a href="//people.php.net/kalle">kalle@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: bug55475
Revision:   1314009019
URL:        <a href="https://bugs.php.net/patch-display.php?bug=55475&amp;patch=bug55475&amp;revision=1314009019" rel="nofollow">https://bugs.php.net/patch-display.php?bug=55475&amp;patch=bug55475&amp;revision=1314009019</a>
</pre>
</div><div class='comment type_comment' ><a name="1314010828">&nbsp;</a><strong>[2011-08-22 11:00 UTC] <a href="//people.php.net/dmitry">dmitry@php.net</a></strong>
<pre class='note'>Before the patch, is_a() didn't accept string as the first argument at all, so it always returned &quot;false&quot; and never triggered __autoload(). The proposed patch didn't revert to original behavior. It just disables autoloading and may lead to wrong result.

class a {}
class b extends a {}
var_dump(is_a(&quot;b&quot;, &quot;a&quot;)); // it was false before 5.3.7, now it's true

I would say that the old behaviour was wrong, especially because &quot;instanceof&quot; and is_subclass_of() already implemented support for string arguments.
</pre>
</div><div class='comment type_comment' ><a name="1314019881">&nbsp;</a><strong>[2011-08-22 13:31 UTC] <a href="//people.php.net/colder">colder@php.net</a></strong>
<pre class='note'>It seems correct to me as well to trigger autoload in this case. It does and 
always did so for is_subclass_of(), I don't see any reason for a condition of 
&quot;subclasses_only&quot; to yes or no trigger the autoload.
</pre>
</div><div class='comment type_comment' ><a name="1314020476">&nbsp;</a><strong>[2011-08-22 13:41 UTC] <a href="//people.php.net/kalle">kalle@php.net</a></strong>
<pre class='note'>I'm not arguing that the new behaviour is wrong, I believe it is the desired too but I don't agree to break BC in the middle of a stable release series nor as much as I would like to myself to achieve the right behaviour.
</pre>
</div><div class='comment type_comment' ><a name="1314023251">&nbsp;</a><strong>[2011-08-22 14:27 UTC] <a href="//people.php.net/colder">colder@php.net</a></strong>
<pre class='note'>But what BC break are you talking about exactly?

It went from not-working (returning always false for strings as first argument) 
to working with autoload.
</pre>
</div><div class='comment type_comment' ><a name="1314024046">&nbsp;</a><strong>[2011-08-22 14:40 UTC] <a href="//people.php.net/kalle">kalle@php.net</a></strong>
<pre class='note'>I'm talking about the usual procedure we have about changing behaviour, a function suddenly returns the oppersite of what it used to in the middle of a stable series is very unlike to do, even for PHP.

I knnow it went from not working to working, but I don't on the fact that such a commonly used function will change behaviour like that. What we should do is to make a big fat warning in the migration guide for 5.3.x -&gt; 5.4.x about it, and in the manual.

It would be the same if we changed substr() to be case insensitive in the middle of a release series, lets just not venture in such dark corners.
</pre>
</div><div class='comment type_comment' ><a name="1314024258">&nbsp;</a><strong>[2011-08-22 14:44 UTC] <a href="//people.php.net/kalle">kalle@php.net</a></strong>
<pre class='note'>... the behaviour I'm talking about is obvious the return value and the fact that the autoloader now is called.
</pre>
</div><div class='comment type_comment' ><a name="1314024571">&nbsp;</a><strong>[2011-08-22 14:49 UTC] <a href="//people.php.net/colder">colder@php.net</a></strong>
<pre class='note'>Well, we have 3 options here:

1) keep it like it is since 5.3.7
2) reverting it to how it worked before 5.3.7
3) change it even more to not use autoload, so that it neither works like &lt;5.3.6 nor 5.3.7

Apparently through your proposed fix you're advocating for (3). If so, I can't see how it would improve the situation in 
any way.

Personally, given that the BC change is minimal, and that we're only adding functionality, (1) seems fine.
Correct code existing before 5.3.6 will work just fine anyway.
</pre>
</div><div class='comment type_comment' ><a name="1314027965">&nbsp;</a><strong>[2011-08-22 15:46 UTC] <a href="//people.php.net/johannes">johannes@php.net</a></strong>
<pre class='note'>is_a()'s first argument is documented to be an object. If called with a string, following the documentation, I would actually expect a &quot;Warning: is_a() expects parameter 1 to be object, string given&quot; and return NULL.

That aside and looking at the actual behavior: Previously is_a() could be used to check whether the parameter is an object AND of a specific type in one go. This can't be done anymore. In $a = &quot;test&quot;; is_a($a, &quot;foo&quot;); test might be an existing class and might be of type foo. Now people have to do is_object() &amp;&amp; is_a().

I don't like having such behavior change in bug fix versions as I don't like going back and forth which is annoying for documentation and confusing for users. I would love to keep it out of 5.3.8 to have that as low risk quick release for the hash issue. Which means a rollback to the old way is even harder to do. (two versions with the new behavior out)
</pre>
</div><div class='comment type_comment' ><a name="1314038219">&nbsp;</a><strong>[2011-08-22 18:36 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>This is not a bug. If first argument is a string, it is interpreted as a class 
name and autoloader is called for it. Actually, IIRC, one the reasons why is_a was 
un-deprecated is that it can work with strings.
</pre>
</div><div class='comment type_comment' ><a name="1314040648">&nbsp;</a><strong>[2011-08-22 19:17 UTC] mads &#x61;&#116; gartneriet &#x64;&#111;&#x74; dk</strong>
<pre class='note'>Maybe not a bug, but it is behaving different ind 5.3.7 than in the previous versions, which makes some of the code from PEAR that i use, give errors.
</pre>
</div><div class='comment type_comment' ><a name="1314049579">&nbsp;</a><strong>[2011-08-22 21:46 UTC] <a href="//people.php.net/colder">colder@php.net</a></strong>
<pre class='note'>What code? Do you have some example?
</pre>
</div><div class='comment type_comment' ><a name="1314076672">&nbsp;</a><strong>[2011-08-23 05:17 UTC] mads &#x61;&#116; gartneriet &#x64;&#111;&#x74; dk</strong>
<pre class='note'>DB_DataObject uses is_a() to check if a variable is both an object and an instance of a particular object.
PEAR::isError() does too.

This just gives warnings in my code, and I could of course easily fix these two places in my local pear-code. But then it will bite me the next time I upgrade those packages from PEAR.
</pre>
</div><div class='comment type_comment' ><a name="1314080781">&nbsp;</a><strong>[2011-08-23 06:26 UTC] alan &#x61;&#116; akbkhome &#x64;&#111;&#x74; com</strong>
<pre class='note'>From the manual.

&quot;Returns TRUE if the object is of this class or has this class as one of its 
parents, FALSE otherwise.&quot;

note the &quot;FALSE otherwise&quot; ...

Defiantly a bug..
</pre>
</div><div class='comment type_comment' ><a name="1314087933">&nbsp;</a><strong>[2011-08-23 08:25 UTC] alan &#x61;&#116; akbkhome &#x64;&#111;&#x74; com</strong>
<pre class='note'>@stas - the point of un-depreciating and working with a string was the second 
argument, not the first one. 

eg.

is_a($something, 'might_be_not_loaded_class') 
rather than
$something instanceof might_be_not_loaded_class
</pre>
</div><div class='comment type_comment' ><a name="1314109499">&nbsp;</a><strong>[2011-08-23 14:24 UTC] jha &#x64;&#111;&#x74; rajeev &#x61;&#116; gmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>This also affects HTML_Template_Flexy pear package that uses is_a to check 
returned object against PEAR_Error class. No matter what behavior is right it 
looks broken to me because I am patching this pear packages files right now!
</pre>
</div><div class='comment type_comment' ><a name="1314151144">&nbsp;</a><strong>[2011-08-24 01:59 UTC] alan &#x61;&#116; akbkhome &#x64;&#111;&#x74; com</strong>
<pre class='note'>For reference: 
The workaround is to do this 

if (is_a($a, 'B')) {

becomes

if (is_object($a) &amp;&amp; is_a($a, 'B')) {
</pre>
</div><div class='comment type_comment' ><a name="1314162971">&nbsp;</a><strong>[2011-08-24 05:16 UTC] jha &#x64;&#111;&#x74; rajeev &#x61;&#116; gmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>I have a question re. the correct behavior of custom __autoload() functions when 
called from is_a() in 5.3.7. How do we handle/report missing classes? is is_a() 
prepared to handle any sort of exceptions or does it assume that __autoload will 
return TRUE/FALSE only?

what if I just did something like is_a(&quot;&quot;,ABCD)?
</pre>
</div><div class='comment type_comment' ><a name="1314354279">&nbsp;</a><strong>[2011-08-26 10:24 UTC] kkaminski &#x61;&#116; itens &#x64;&#111;&#x74; pl</strong>
<pre class='note'>+1 for reverting change in 5.3 branch and implementing it in 5.4 (or giving up as it really CHANGES BEHAVIOR)
Currently __autoload throws Exceptions to break code execution on some frameworks. This is clean solution as if developer makes a typo, code still can handle missing class and for instance - display a dedicated error report.

Unfortunately, with your latest 'fix' all PEAR packages are now broken on frameworks with __autoload + exceptions - due to isError implementation.

Are you really sure is it MY duty to rewrite / repatch all code (external) code to work around your 'fix' ?
How I am supposed to handle missing classes in this case? With exceptions I can catch everything and handle myself. Whats the other way?
</pre>
</div><div class='comment type_comment' ><a name="1314602147">&nbsp;</a><strong>[2011-08-29 07:15 UTC] <a href="//people.php.net/tyrael">tyrael@php.net</a></strong>
<pre class='note'>&quot;note the &quot;FALSE otherwise&quot; ...&quot;

note &quot;if the object&quot; ...

Tyrael
</pre>
</div><div class='comment type_comment' ><a name="1315377047">&nbsp;</a><strong>[2011-09-07 06:30 UTC] vchernoivan &#x61;&#116; gmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>I guess it is no use to argue if the behaviuor is correct or not, or how precise 
the manual is. Since IT IS BREAKING EXISTING CODE, for me, too.
Before the change
   if (is_a($date,&quot;DateTime&quot;))
       return $date-&gt;format(...);
   /// some code handling datetime strings
worked just fine. Now it triggers __autoload and results in completely broken 
page. 
For sure, personally I can  change every piece of MY OWN code. 
But consider users of tons of PHP libraries! 
What do you think, how long will it take to update every piece of them?
Vote for reverting to prior-5.7 behavior until 5.4
</pre>
</div><div class='comment type_svn' ><a name="1316080697">&nbsp;</a><strong>[2011-09-15 09:58 UTC] <a href="//people.php.net/dmitry">dmitry@php.net</a></strong>
<pre class='note'>Automatic comment from SVN on behalf of dmitry
Revision: <a href="http://svn.php.net/viewvc/?view=revision&amp;amp;revision=316810" rel="nofollow">http://svn.php.net/viewvc/?view=revision&amp;amp;revision=316810</a>
Log: Fixed <a href='bug.php?id=55475'>bug #55475</a> (is_a() triggers autoloader). (alan at akbkhome dot com)
</pre>
</div><div class='comment type_log' ><a name="1316080816">&nbsp;</a><strong>[2011-09-15 10:00 UTC] <a href="//people.php.net/dmitry">dmitry@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Closed</span>
</div></div></div><div class='comment type_comment' ><a name="1316080816">&nbsp;</a><strong>[2011-09-15 10:00 UTC] <a href="//people.php.net/dmitry">dmitry@php.net</a></strong>
<pre class='note'>I've committed the revert.is_a.behaviour.to.ignoring.strings.diff by alan at akbkhome dot com into 5.3.

5.4 is going to support string argument.
</pre>
</div><div class='comment type_svn' ><a name="1316084363">&nbsp;</a><strong>[2011-09-15 10:59 UTC] <a href="//people.php.net/dmitry">dmitry@php.net</a></strong>
<pre class='note'>Automatic comment from SVN on behalf of dmitry
Revision: <a href="http://svn.php.net/viewvc/?view=revision&amp;amp;revision=316811" rel="nofollow">http://svn.php.net/viewvc/?view=revision&amp;amp;revision=316811</a>
Log: Reverted the fix for #55475 (is_a() triggers autoloader) before the common decision
</pre>
</div><div class='comment type_log' ><a name="1316084429">&nbsp;</a><strong>[2011-09-15 11:00 UTC] <a href="//people.php.net/dmitry">dmitry@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Closed</span>
<span class="added">+Status: Assigned</span>
</div></div></div><div class='comment type_comment' ><a name="1316084429">&nbsp;</a><strong>[2011-09-15 11:00 UTC] <a href="//people.php.net/dmitry">dmitry@php.net</a></strong>
<pre class='note'>Reverted before the common decision.
</pre>
</div><div class='comment type_patch' ><a name="1316553958">&nbsp;</a><strong>[2011-09-20 21:25 UTC] <a href="//people.php.net/alan_k">alan_k@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: is_class_of.txt
Revision:   1316553958
URL:        <a href="https://bugs.php.net/patch-display.php?bug=55475&amp;patch=is_class_of.txt&amp;revision=1316553958" rel="nofollow">https://bugs.php.net/patch-display.php?bug=55475&amp;patch=is_class_of.txt&amp;revision=1316553958</a>
</pre>
</div><div class='comment type_comment' ><a name="1316554206">&nbsp;</a><strong>[2011-09-20 21:30 UTC] <a href="//people.php.net/alan_k">alan_k@php.net</a></strong>
<pre class='note'>Attached now is a patch that fixes this by adding

is_class_of

Which behaves the same as is_subclass_of, (autoload/ accepts strings)

It also fixes the documentation on is_subclass_of and reverts the behaviour of 
is_a

Note: the is_a change is now a security bug as sending url's to is_a may trigger 
remote code execution now.

Note: I'm not sure you can classify a 2-3 developers comments as the &quot;common 
decision&quot; there where objections to the original change from core developers, 
this patch gives everybody what they want....
</pre>
</div><div class='comment type_patch' ><a name="1316554378">&nbsp;</a><strong>[2011-09-20 21:32 UTC] <a href="//people.php.net/alan_k">alan_k@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: is_class_of.diff
Revision:   1316554378
URL:        <a href="https://bugs.php.net/patch-display.php?bug=55475&amp;patch=is_class_of.diff&amp;revision=1316554378" rel="nofollow">https://bugs.php.net/patch-display.php?bug=55475&amp;patch=is_class_of.diff&amp;revision=1316554378</a>
</pre>
</div><div class='comment type_patch' ><a name="1316733848">&nbsp;</a><strong>[2011-09-22 23:24 UTC] <a href="//people.php.net/alan_k">alan_k@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: Is_a_with_allow_string_argument
Revision:   1316733848
URL:        <a href="https://bugs.php.net/patch-display.php?bug=55475&amp;patch=Is_a_with_allow_string_argument&amp;revision=1316733848" rel="nofollow">https://bugs.php.net/patch-display.php?bug=55475&amp;patch=Is_a_with_allow_string_argument&amp;revision=1316733848</a>
</pre>
</div><div class='comment type_patch' ><a name="1316733980">&nbsp;</a><strong>[2011-09-22 23:26 UTC] <a href="//people.php.net/alan_k">alan_k@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: Is_a_with_allow_string_argument_v2
Revision:   1316733980
URL:        <a href="https://bugs.php.net/patch-display.php?bug=55475&amp;patch=Is_a_with_allow_string_argument_v2&amp;revision=1316733980" rel="nofollow">https://bugs.php.net/patch-display.php?bug=55475&amp;patch=Is_a_with_allow_string_argument_v2&amp;revision=1316733980</a>
</pre>
</div><div class='comment type_patch' ><a name="1316734303">&nbsp;</a><strong>[2011-09-22 23:31 UTC] <a href="//people.php.net/alan_k">alan_k@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: Is_a_with_allow_string_argument_v3
Revision:   1316734303
URL:        <a href="https://bugs.php.net/patch-display.php?bug=55475&amp;patch=Is_a_with_allow_string_argument_v3&amp;revision=1316734303" rel="nofollow">https://bugs.php.net/patch-display.php?bug=55475&amp;patch=Is_a_with_allow_string_argument_v3&amp;revision=1316734303</a>
</pre>
</div><div class='comment type_svn' ><a name="1316771511">&nbsp;</a><strong>[2011-09-23 09:51 UTC] <a href="//people.php.net/rasmus">rasmus@php.net</a></strong>
<pre class='note'>Automatic comment from SVN on behalf of rasmus
Revision: <a href="http://svn.php.net/viewvc/?view=revision&amp;amp;revision=317183" rel="nofollow">http://svn.php.net/viewvc/?view=revision&amp;amp;revision=317183</a>
Log: Re-committing Alan's is_a revert/fix for <a href='bug.php?id=55475'>bug #55475</a>
Dmitry had done so earlier, but reverted pending discussion.
It is completely clear that this should never have been changed in the
5.3 branch in the first place giving the number of things that broke
because of it.
</pre>
</div><div class='comment type_comment' ><a name="1316856124">&nbsp;</a><strong>[2011-09-24 09:22 UTC] henri &#x61;&#116; nerv &#x64;&#111;&#x74; fi</strong>
<pre class='note'>Has someone requested CVE-identifier for this issue? I can do it if not.
</pre>
</div><div class='comment type_comment' ><a name="1316870024">&nbsp;</a><strong>[2011-09-24 13:13 UTC] <a href="//people.php.net/cipri">cipri@php.net</a></strong>
<pre class='note'>Yes, I contacted the CVE yesterday to request a CVE-ID and  I'll update it here as soon as I receive one.
</pre>
</div><div class='comment type_patch' ><a name="1316943145">&nbsp;</a><strong>[2011-09-25 09:32 UTC] <a href="//people.php.net/alan_k">alan_k@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: is_a_with_warning.txt
Revision:   1316943145
URL:        <a href="https://bugs.php.net/patch-display.php?bug=55475&amp;patch=is_a_with_warning.txt&amp;revision=1316943145" rel="nofollow">https://bugs.php.net/patch-display.php?bug=55475&amp;patch=is_a_with_warning.txt&amp;revision=1316943145</a>
</pre>
</div><div class='comment type_comment' ><a name="1317065933">&nbsp;</a><strong>[2011-09-26 19:38 UTC] togos00 &#x61;&#116; gmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>Even if the new behavior is not a bug, per se, it is definitely surprising.  
is_a( $string, $className ) returning true would imply that $string is an 
instance of $className, which obviously it is not, as it is a string and not even 
an object.  Having a separate function such as is_subclass_of( $className1, 
$className2 ) has the dual benefits of being more intuitive and not breaking old 
code.
</pre>
</div><div class='comment type_comment' ><a name="1317066305">&nbsp;</a><strong>[2011-09-26 19:45 UTC] <a href="//people.php.net/pajoye">pajoye@php.net</a></strong>
<pre class='note'>@cipri

Please contact security@php.net prior to request a CVE, to avoid double requests 
or confusing information. or mark a bug as security issue so we will catch it (and 
the sec guys of the linux distro as well) :)
</pre>
</div><div class='comment type_comment' ><a name="1317066863">&nbsp;</a><strong>[2011-09-26 19:54 UTC] henri &#x61;&#116; nerv &#x64;&#111;&#x74; fi</strong>
<pre class='note'>CVE already requested with A LOT of conversation: 
<a href="http://www.openwall.com/lists/oss-security/2011/09/24/2" rel="nofollow">http://www.openwall.com/lists/oss-security/2011/09/24/2</a>
</pre>
</div><div class='comment type_comment' ><a name="1317067029">&nbsp;</a><strong>[2011-09-26 19:57 UTC] <a href="//people.php.net/pajoye">pajoye@php.net</a></strong>
<pre class='note'>that's what I meant.
</pre>
</div><div class='comment type_svn' ><a name="1317116131">&nbsp;</a><strong>[2011-09-27 09:35 UTC] <a href="//people.php.net/alan_k">alan_k@php.net</a></strong>
<pre class='note'>Automatic comment from SVN on behalf of alan_k
Revision: <a href="http://svn.php.net/viewvc/?view=revision&amp;amp;revision=317382" rel="nofollow">http://svn.php.net/viewvc/?view=revision&amp;amp;revision=317382</a>
Log: document fix for #55475 in NEWS
</pre>
</div><div class='comment type_log' ><a name="1317148615">&nbsp;</a><strong>[2011-09-27 18:36 UTC] <a href="//people.php.net/pajoye">pajoye@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID:</span>
<span class="added">+CVE-ID: 2011-3379</span>
</div></div></div><div class='comment type_comment' ><a name="1317148615">&nbsp;</a><strong>[2011-09-27 18:36 UTC] <a href="//people.php.net/pajoye">pajoye@php.net</a></strong>
<pre class='note'>Add CVE #
</pre>
</div><div class='comment type_comment' ><a name="1317627043">&nbsp;</a><strong>[2011-10-03 07:30 UTC] <a href="//people.php.net/alan_k">alan_k@php.net</a></strong>
<pre class='note'>Any comments on 5.4.*

It seems like applying the 5.3 fix to 5.4 is the only option here, as there is no 
'reasonable' way to flag the previous behavior as E_DEPRECIATED that works well 
as both forward and backward compatible.
</pre>
</div><div class='comment type_patch' ><a name="1318491419">&nbsp;</a><strong>[2011-10-13 07:36 UTC] <a href="//people.php.net/alan_k">alan_k@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: final_patch_for_5_4_and_HEAD
Revision:   1318491419
URL:        <a href="https://bugs.php.net/patch-display.php?bug=55475&amp;patch=final_patch_for_5_4_and_HEAD&amp;revision=1318491419" rel="nofollow">https://bugs.php.net/patch-display.php?bug=55475&amp;patch=final_patch_for_5_4_and_HEAD&amp;revision=1318491419</a>
</pre>
</div><div class='comment type_patch' ><a name="1320744264">&nbsp;</a><strong>[2011-11-08 09:24 UTC] <a href="//people.php.net/alan_k">alan_k@php.net</a></strong>
<pre class='note'>The following patch has been added/updated:

Patch Name: final_patch_for_5_4_and_HEAD_v2
Revision:   1320744263
URL:        <a href="https://bugs.php.net/patch-display.php?bug=55475&amp;patch=final_patch_for_5_4_and_HEAD_v2&amp;revision=1320744263" rel="nofollow">https://bugs.php.net/patch-display.php?bug=55475&amp;patch=final_patch_for_5_4_and_HEAD_v2&amp;revision=1320744263</a>
</pre>
</div><div class='comment type_svn' ><a name="1320816458">&nbsp;</a><strong>[2011-11-09 05:27 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>Automatic comment from SVN on behalf of stas
Revision: <a href="http://svn.php.net/viewvc/?view=revision&amp;amp;revision=318938" rel="nofollow">http://svn.php.net/viewvc/?view=revision&amp;amp;revision=318938</a>
Log: fix <a href='bug.php?id=55475'>bug #55475</a> - implement is_a BC solution
</pre>
</div><div class='comment type_comment' ><a name="1320816469">&nbsp;</a><strong>[2011-11-09 05:27 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<pre class='note'>This bug has been fixed in SVN.

Snapshots of the sources are packaged every three hours; this change
will be in the next snapshot. You can grab the snapshot at
<a href="http://snaps.php.net/" rel="nofollow">http://snaps.php.net/</a>.

 For Windows:

<a href="http://windows.php.net/snapshots/" rel="nofollow">http://windows.php.net/snapshots/</a>
 
Thank you for the report, and for helping us make PHP better.


</pre>
</div><div class='comment type_log' ><a name="1320816469">&nbsp;</a><strong>[2011-11-09 05:27 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status: Assigned</span>
<span class="added">+Status: Closed</span>
</div></div></div><div class='comment type_comment' ><a name="1326097668">&nbsp;</a><strong>[2012-01-09 08:27 UTC] counterpoint &#x61;&#116; aliro &#x64;&#111;&#x74; org</strong>
<pre class='note'>It's worrying that something that appears to have been accidentally introduced is then justified as how things should work.  Little attention seems to be paid to how people may have been using the mechanism that has changed.  The whole thrust in this area was for is_a to test something that is supposed to be an instance.  Indeed, the at one time intended replacement for is_a is called &quot;instanceof&quot; and a string is not an instance of anything.  Changing an operation called &quot;instanceof&quot; to accept a class name ahead of the operator would seem perverse in the extreme.  Clearly the altered behavior of is_a may break any autoloader that assumes that it will only ever receive strings that can be assumed to be class names.  In particular, consider the common case where a set of class names can be mapped to a set of file names: in this situation, it is not unreasonable for the autoloader to terminate immediately if it receives a class name that contains &quot;..&quot; because this is very likely a hack attempt.
</pre>
</div><div class='comment type_svn' ><a name="1334742475">&nbsp;</a><strong>[2012-04-18 09:47 UTC] <a href="//people.php.net/laruence">laruence@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=10f20585fcbd524016e439c17bf01a0fd5191107" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=10f20585fcbd524016e439c17bf01a0fd5191107</a>
Log: fix <a href='bug.php?id=55475'>bug #55475</a> - implement is_a BC solution
</pre>
</div><div class='comment type_comment' ><a name="1341225029">&nbsp;</a><strong>[2012-07-02 10:30 UTC] rmc1134 &#x61;&#116; gmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>I don't get it: why should is_a() accept a string as its first argument?

This function is supposed to be a check on AN OBJECT and is_a('stdClass', 
'stdClass') SHOULD NOT EVER RETURN any truthy value.

Calling __autoload() to check whether some string might be some object is 
something a programmer should do, not the language.
</pre>
</div><div class='comment type_svn' ><a name="1343173141">&nbsp;</a><strong>[2012-07-24 23:39 UTC] <a href="//people.php.net/rasmus">rasmus@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=10f20585fcbd524016e439c17bf01a0fd5191107" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=10f20585fcbd524016e439c17bf01a0fd5191107</a>
Log: fix <a href='bug.php?id=55475'>bug #55475</a> - implement is_a BC solution
</pre>
</div><div class='comment type_comment' ><a name="1359392941">&nbsp;</a><strong>[2013-01-28 17:09 UTC] martijn &#x64;&#111;&#x74; niji &#x61;&#116; gmail &#x64;&#111;&#x74; com</strong>
<pre class='note'>I must agree with the people who say that is_a('stdClass', 'stdClass') should not return true.

The is_a() function is intended as a function that checks a certain condition is true, that condition being that a certain variable/object is of a certain type/class.

Having is_a() try to automatically load a class by calling autoload is bad behaviour at best and a code breaking security flaw at worst.
</pre>
</div><div class='comment type_svn' ><a name="1384680934">&nbsp;</a><strong>[2013-11-17 09:35 UTC] <a href="//people.php.net/laruence">laruence@php.net</a></strong>
<pre class='note'>Automatic comment on behalf of stas
Revision: <a href="http://git.php.net/?p=php-src.git;a=commit;h=10f20585fcbd524016e439c17bf01a0fd5191107" rel="nofollow">http://git.php.net/?p=php-src.git;a=commit;h=10f20585fcbd524016e439c17bf01a0fd5191107</a>
Log: fix <a href='bug.php?id=55475'>bug #55475</a> - implement is_a BC solution
</pre>
</div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
