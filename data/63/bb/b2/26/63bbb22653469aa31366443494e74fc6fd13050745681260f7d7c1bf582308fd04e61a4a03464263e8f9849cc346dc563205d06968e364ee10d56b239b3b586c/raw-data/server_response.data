<!DOCTYPE html>
<html lang="en">
  <head>
    <title>78979 &ndash; [CVE-2014-3477] security and activation: error and denial of service</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="data/assets/c60deb3d48830179eae269c9e65a7506.css?1462892334" rel="stylesheet" type="text/css">



    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1462892331"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "78979 – [CVE-2014-3477] security and activation: error and denial of service",
                             "show_bug.cgi?id=78979" );
        document.title = "78979 – [CVE-2014-3477] security and activation: error and denial of service";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "78979 – [CVE-2014-3477] security and activation: error and denial of service", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1462892334"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-freedesktop-org
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_dbus
                 bz_component_core
                 bz_bug_78979 yui-skin-sam">

  <div id="header"><div id="banner">
  </div>

    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;78979</span>

        <span id="subtitle" class="subheader">[CVE-2014-3477] security and activation: error and denial of service</span>

        <span id="information" class="header_addl_info">Last modified: 2014-06-10 17:38:29 UTC</span>
    </div>


    <div id="common_links"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>


</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2014-06-10 17:38:29">
  <input type="hidden" name="id" value="78979">
  <input type="hidden" name="token" value="1635619158-dhJrkNyNvktbuNFPKzCUCHAuY8F19uPCMWfx_MfxYEQ">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=78979"><b>Bug&nbsp;78979</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">[CVE-2014-3477] security and activation: error and denial of service</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>[CVE-2014-3477] security and activation: error and denial of service
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      '[CVE-2014-3477] security and activation: error and denial of service' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >dbus

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=dbus"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >core

  (<a href="buglist.cgi?component=core&amp;product=dbus&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>unspecified
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">Other
        All
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>medium
       normal
      </td>
    </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Simon McVittie</span>
</span>
      </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_qa_contact">


  <a 
      title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#qa_contact"
  >QA Contact:</a>

</th>
      <td><span class="vcard"><span class="fn">Sjoerd Simons</span>
</span>
      </td>
    </tr>
    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'dbus\x40maint.invalid',
        'dbus\x40maint.invalid');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>

    <tr><th class="field_label "
    id="field_label_status_whiteboard">


  <a 
      title="Each bug has a free-form single line text entry box for adding tags and status information."
      class="field_help_link"
      href="page.cgi?id=fields.html#status_whiteboard"
  >Whiteboard:</a>

</th><td>  
  </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_keywords">


  <a 
      title="You can add keywords from a defined list to bugs, in order to easily identify and group them."
      class="field_help_link"
      href="describekeywords.cgi"
  >Keywords:</a>

</th>
  <td class="field_value "
      id="field_container_keywords" >security

</td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2014-05-20 17:12 UTC by <span class="vcard"><span class="fn">Daniel Stone</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2014-06-10 17:38 UTC
      (<a href="show_activity.cgi?id=78979">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>5 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="alban.crequy">alban.crequy</option>
                <option value="fridrich.strba">fridrich.strba</option>
                <option value="lennart">lennart</option>
                <option value="thiago">thiago</option>
                <option value="walters">walters</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" >

</td>
    </tr> 
<tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_i915_platform">


  <a 
      title="Intel platforms affected by the bug"
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_i915_platform"
  >i915 platform:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_i915_platform" >

</td>
    </tr>
    <tr>
      <th class="field_label  bz_hidden_field"
    id="field_label_cf_i915_features">


  <a 
      title="Features of the i915 driver affected by the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#cf_i915_features"
  >i915 features:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_i915_features" >

</td>
    </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=99433"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">resolve the error</span></b></a>

          <span class="bz_attach_extra_info">
              (4.07 KB,
                patch)

            <br>
            <a href="#attach_99433"
               title="Go to the comment associated with the attachment">2014-05-20 17:12 UTC</a>,

            <span class="vcard"><span class="fn">Daniel Stone</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=99433&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=78979&amp;attachment=99433">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden">
        <td>
            <a href="attachment.cgi?id=100282"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">[PATCH v2] security and activation: deliver error messages correctly and fix Denial of Service</span></b></a>

          <span class="bz_attach_extra_info">
              (6.15 KB,
                patch)

            <br>
            <a href="#attach_100282"
               title="Go to the comment associated with the attachment">2014-06-02 10:48 UTC</a>,

            <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=100282&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=78979&amp;attachment=100282">
      Splinter Review</a>
        </td>
      </tr>
      <tr id="a3" class="bz_contenttype_text_plain bz_patch">
        <td>
            <a href="attachment.cgi?id=100463"
               title="View the content of the attachment">
          <b>CVE-2014-3477: deliver activation errors correctly, fixing  Denial of Service</b></a>

          <span class="bz_attach_extra_info">
              (6.38 KB,
                patch)

            <br>
            <a href="#attach_100463"
               title="Go to the comment associated with the attachment">2014-06-05 14:31 UTC</a>,

            <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=100463&amp;action=edit">Details</a>&#x0020; |
    <a href="https://bugs.freedesktop.org/page.cgi?id=splinter.html&amp;bug=78979&amp;attachment=100463">
      Splinter Review</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
            <a href="#a0" onclick="return toggle_display(this);">Show
              Obsolete</a> (2)
            <a id="view_all" href="attachment.cgi?bugid=78979&amp;action=viewall&amp;hide_obsolete=1">View All</a>
        </span>
    </td>
  </tr>
</table>
<br>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1462891770" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Daniel Stone</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-20 17:12:58 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=99433" name="attach_99433" title="resolve the error">attachment 99433</a> <a href="attachment.cgi?id=99433&amp;action=edit" title="resolve the error">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=78979&amp;attachment=99433'>[review]</a>
resolve the error

How it should work:

When a D-Bus message activates a service, LSMs (SELinux or AppArmor) check
whether the message can be delivered after the service has been activated. The
service is considered activated when its well-known name is requested with
org.freedesktop.DBus.RequestName. When the message delivery is denied, the
service stays activated but should not receive the activating message (the
message which triggered the activation). dbus-daemon is supposed to drop the
activating message and reply to the sender with a D-Bus error message.

However, it does not work as expected:

1. The error message is delivered to the service instead of being delivered to
   the sender. As an example, the error message could be something like:

     An SELinux policy prevents this sender from sending this
     message to this recipient, [...] member=&quot;MaliciousMethod&quot;

   So the sender could maliciously leak information to the service by inserting
   the information in the member name, even though the LSM attempted to block
   the communication between the sender and the service.

2. The error message is delivered as a reply to the RequestName call from
   service. It means the activated service will believe it cannot request the
   name and might exit. The sender could activate the service frequently and
   systemd will give up activating it. Thus the denial of service.

The attached patch fixes the bug in my test.</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Daniel Stone</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-20 17:13:39 UTC
        </span>

      </div>




<pre class="bz_comment_text">(Filed on behalf of Alban as he couldn't restrict it to security-only. I don't know the first thing about it, and didn't even read what I copy and pasted.)</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-23 17:25:48 UTC
        </span>

      </div>




<pre class="bz_comment_text">This bug is not specific to LSMs (SELinux or AppArmor): I manage to trigger it with a D-Bus security policy alone.

My test is the following:

/etc/dbus-1/system.d/org.freedesktop.RealtimeKit1.conf:

&lt;!DOCTYPE busconfig PUBLIC
 &quot;-//freedesktop//DTD D-BUS Bus Configuration 1.0//EN&quot;
 &quot;<a href="http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd">http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd</a>&quot;&gt;
&lt;busconfig&gt;
  &lt;policy user=&quot;rtkit&quot;&gt;
    &lt;allow own=&quot;org.freedesktop.RealtimeKit1&quot;/&gt;
  &lt;/policy&gt;
  &lt;policy user=&quot;root&quot;&gt;
    &lt;allow own=&quot;org.freedesktop.RealtimeKit1&quot;/&gt;
  &lt;/policy&gt;
  &lt;policy context=&quot;default&quot;&gt;
    &lt;!-- XXX: I replaced &quot;allow&quot; by &quot;deny&quot; here for my test! --&gt;
    &lt;deny send_destination=&quot;org.freedesktop.RealtimeKit1&quot;/&gt;
  &lt;/policy&gt;
  &lt;policy user=&quot;root&quot;&gt;
    &lt;allow send_destination=&quot;org.freedesktop.RealtimeKit1&quot;/&gt;
    &lt;allow receive_sender=&quot;org.freedesktop.RealtimeKit1&quot;/&gt;
  &lt;/policy&gt;
&lt;/busconfig&gt;

For the purpose of the test, I forbid non-root processes (such as pulseaudio) to deliver a message to rtkit. Then, when starting pulseaudio, it attempts to send a message to rtkit: the message is not delivered (that's ok, that's what I wanted) but rtkit couldn't request its well-known name (that's not ok, that's a denial of service):

rtkit-daemon[1167]: Failed to register name on bus: Rejected send message, 2 matched rules; type=&quot;method_call&quot;, sender=&quot;:1.59&quot; (uid=1000 pid=1093 comm=&quot;/usr/bin/pulseaudio --start --log-target=syslog &quot;) interface=&quot;org.freedesktop.RealtimeKit1&quot; member=&quot;MakeThreadRealtime&quot; error name=&quot;(unset)&quot; requested_reply=&quot;0&quot; destination=&quot;org.freedesktop.RealtimeKit1&quot; (uid=0 pid=1167 comm=&quot;/usr/lib/rtkit/rtkit-daemon &quot;)

When rtkit-daemon calls RequestName(), it receives the signal &quot;NameAcquired&quot; successfully but RequestName() returns the D-Bus error message above that should have been delivered to Pulseaudio, and it does not receive the real D-Bus reply. So rtkit believes it failed to claim its well-known name and exits.

The patch works by sending the D-Bus error message to pulseaudio immediately in a different context (using local variables &quot;sub_transaction&quot; and &quot;tmp_error&quot;) instead of hijacking the context of RequestName (parameters &quot;transaction&quot; and &quot;error&quot;).</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-26 09:19:37 UTC
        </span>

      </div>




<pre class="bz_comment_text">Adding de facto D-Bus security contacts to Cc</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-26 09:25:48 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=78979#c0">comment #0</a>)
<span class="quote">&gt; 1. The error message is delivered to the service instead of being delivered
&gt; to
&gt;    the sender. As an example, the error message could be something like:
&gt; 
&gt;      An SELinux policy prevents this sender from sending this
&gt;      message to this recipient, [...] member=&quot;MaliciousMethod&quot;
&gt; 
&gt;    So the sender could maliciously leak information to the service by
&gt; inserting
&gt;    the information in the member name, even though the LSM attempted to block
&gt;    the communication between the sender and the service.</span >

I do not consider this sort of compartmentalization to be something that D-Bus should claim to support - it isn't something we test, and isn't necessary for mainstream Linux. In my view, if you have a mixture of &quot;normal&quot; and &quot;top secret&quot; processes and you want it to be impossible for the &quot;top secret&quot; processes to leak information to the &quot;normal&quot; processes, you should be using virtual machines or containers. However, if fans of SELinux do want it, they are welcome to help support it.

So I don't consider (1) to be a vulnerability, as such...

<span class="quote">&gt; 2. The error message is delivered as a reply to the RequestName call from
&gt;    service. It means the activated service will believe it cannot request the
&gt;    name and might exit. The sender could activate the service frequently and
&gt;    systemd will give up activating it. Thus the denial of service.</span >

... but (2) is certainly a denial-of-service vulnerability, so this is worth addressing. I'll try to do a detailed review on this soon.</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Thiago Macieira</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-26 16:33:57 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=78979#c4">comment #4</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=78979#c0">comment #0</a>)
&gt; &gt; 1. The error message is delivered to the service instead of being delivered
&gt; &gt; to
&gt; &gt;    the sender. As an example, the error message could be something like:
&gt; &gt; 
&gt; &gt;      An SELinux policy prevents this sender from sending this
&gt; &gt;      message to this recipient, [...] member=&quot;MaliciousMethod&quot;
&gt; &gt; 
&gt; &gt;    So the sender could maliciously leak information to the service by
&gt; &gt; inserting
&gt; &gt;    the information in the member name, even though the LSM attempted to block
&gt; &gt;    the communication between the sender and the service.
&gt; 
&gt; I do not consider this sort of compartmentalization to be something that
&gt; D-Bus should claim to support - it isn't something we test, and isn't
&gt; necessary for mainstream Linux.</span >

I don't see how this is leaking any information. You get an error message saying the message you sent was rejected, with some of the details of the message you sent. That is, the malicious sender already knew about &quot;MaliciousMethod&quot; in order to send a call to that method.

Once we fix the destination of the error message, the problem is gone.</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-26 17:20:36 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=78979#c5">comment #5</a>)
<span class="quote">&gt; (In reply to <a href="show_bug.cgi?id=78979#c4">comment #4</a>)
&gt; &gt; (In reply to <a href="show_bug.cgi?id=78979#c0">comment #0</a>)
&gt; &gt; &gt; 1. The error message is delivered to the service instead of being delivered
&gt; &gt; &gt; to
&gt; &gt; &gt;    the sender. As an example, the error message could be something like:
&gt; &gt; &gt; 
&gt; &gt; &gt;      An SELinux policy prevents this sender from sending this
&gt; &gt; &gt;      message to this recipient, [...] member=&quot;MaliciousMethod&quot;
&gt; &gt; &gt; 
&gt; &gt; &gt;    So the sender could maliciously leak information to the service by
&gt; &gt; &gt; inserting
&gt; &gt; &gt;    the information in the member name, even though the LSM attempted to block
&gt; &gt; &gt;    the communication between the sender and the service.
&gt; &gt; 
&gt; &gt; I do not consider this sort of compartmentalization to be something that
&gt; &gt; D-Bus should claim to support - it isn't something we test, and isn't
&gt; &gt; necessary for mainstream Linux.
&gt; 
&gt; I don't see how this is leaking any information. You get an error message
&gt; saying the message you sent was rejected, with some of the details of the
&gt; message you sent. That is, the malicious sender already knew about
&gt; &quot;MaliciousMethod&quot; in order to send a call to that method.</span >

It can only leak information if the sender and the service are malicious confederates and agree on a protocol to leak the information, e.g. base64 the secret information and insert the result in the &quot;member&quot; field of the D-Bus message.

<span class="quote">&gt; Once we fix the destination of the error message, the problem is gone.</span >

I agree.</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-30 15:37:13 UTC
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class="bz_obsolete"><a href="attachment.cgi?id=99433" name="attach_99433" title="resolve the error">attachment 99433</a> <a href="attachment.cgi?id=99433&amp;action=edit" title="resolve the error">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=78979&amp;attachment=99433'>[review]</a>
resolve the error

Review of <span class="bz_obsolete"><a href="attachment.cgi?id=99433" name="attach_99433" title="resolve the error">attachment 99433</a> <a href="attachment.cgi?id=99433&amp;action=edit" title="resolve the error">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=78979&amp;attachment=99433'>[review]</a>:
-----------------------------------------------------------------

Code review: looks correct, but could be simpler.

::: bus/activation.c
&#64;&#64; +1203,5 &#64;&#64;
<span class="quote">&gt;                                       addressed_recipient,
&gt; +                                     entry-&gt;activation_message, &amp;tmp_error))
&gt; +            {
&gt; +              if (!bus_transaction_send_error_reply (sub_transaction, entry-&gt;connection,
&gt; +                                                     &amp;tmp_error, entry-&gt;activation_message))</span >

(As a side note, that function is confusingly-named: it does not actually send anything. Instead, it reserves enough memory that sending the message later cannot fail.)

&#64;&#64; +1207,5 &#64;&#64;
<span class="quote">&gt; +                                                     &amp;tmp_error, entry-&gt;activation_message))
&gt; +                {
&gt; +                  bus_connection_send_oom_error (entry-&gt;connection,
&gt; +                                                 entry-&gt;activation_message);
&gt; +                  bus_transaction_cancel_and_free (sub_transaction);</span >

The bug here is really: if bus_activation_send_pending_auto_activation_messages() raises a DBusError, it is sent back to the service requesting the name. That's correct if the error is OOM, but not correct if the intention was to send the error back to the process that originally requested activation instead.

So the function at least deserves a comment

/* Any DBusError raised here will make the RequestName call fail with that error,
 * so do not return a DBusError unless the whole transaction has failed. */

I'm tempted to say it should not have a DBusError parameter at all, so it's more clearly an example of the &quot;return TRUE, or FALSE on OOM&quot; pattern (and its only caller would have to set the OOM error instead).

In addition to fixing that, you're introducing slightly more complex transactions. Your code essentially reads: if there is not enough memory to send the error message(s) to each client that was not allowed to talk to the service, send OOM to the client(s) that hit OOM instead, and ignore those OOMs for the purposes of deciding whether RequestName() was successful or needs to be rolled back.

Not using the sub-transaction, and just using &#64;transaction, would instead result in: if there is not enough memory to send the error message(s) to each client that was not allowed to talk to the service, RequestName() fails with OOM; the service may retry, or just exit (which is theoretically DoS I suppose, but if you're hitting OOM in dbus-daemon then your system is already being denied service).

This is all pretty theoretical - dbus-daemon shouldn't OOM under any normal circumstance - so I'm tempted to ask for the simpler version. Alban, would you mind implementing and testing that simpler version, and we can decide which is better when we can compare both patches?</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-05-30 15:39:57 UTC
        </span>

      </div>




<pre class="bz_comment_text">Proposed advisory text:

----8&lt;----
D-Bus &lt;<a href="http://www.freedesktop.org/wiki/Software/dbus/">http://www.freedesktop.org/wiki/Software/dbus/</a>&gt; is an
asynchronous inter-process communication system, commonly used
for system services or within a desktop session on Linux and other
operating systems.

Alban Crequy discovered a denial-of-service flaw in the reference
implementation of dbus-daemon, the D-Bus message bus daemon. Additionally,
in highly unusual environments the same flaw could lead to a side channel
between processes that should not be able to communicate.

Summary:

If a client C1 is prohibited from sending a message to a service S1,
and S1 is not currently running, then C1 can attempt to send a message
to S1's well-known bus name, causing dbus-daemon to start S1 [1].
When S1 has started and obtained its well-known bus name, the
dbus-daemon evaluates its security policy, decides that it will not
deliver the message to S1, and constructs an AccessDenied error.
However, instead of sending that AccessDenied error reply to C1
as a reply to the denied message, dbus-daemon incorrectly sends it to S1
as a reply to the request to obtain its well-known bus name.

Impact 1: denial of service. S1 will fail to initialize, and exit,
denying service to legitimate clients of S1.

Impact 2: in environments where C1 and S1 are untrusted and are
administratively prohibited from communicating, S1 could also use these
incorrectly-directed error messages as a side channel to receive information
from C1.

Mitigations:

Impact 1: if a legitimate client was actively using S1, S1 would already
have been started, so C1 can only deny service to a legitimate client
that only recently became active.

Impact 2: in practice processes sharing a system bus can typically
communicate in other ways (non-D-Bus IPC mechanisms, files in /tmp, etc.),
so impact 2 is not relevant on normal systems. It might be relevant
on systems when an LSM such as SELinux is used in a highly restrictive
configuration.

Footnotes:

[1] This is perhaps unexpected, but the dbus-daemon is behaving as designed:
it cannot necessarily evaluate which security policies it should apply
to S1 until S1 has actually connected back to dbus-daemon, because S1
might change its uid, SELinux context, etc. during startup.
The conceptual model is that activatable services are always running,
and that the dbus-daemon delaying their startup until they are actually
needed is a form of lazy evaluation. As such, the D-Bus maintainers do not
consider this to be a bug or vulnerability.
----8&lt;----</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-02 10:48:57 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=100282" name="attach_100282" title="[PATCH v2] security and activation: deliver error messages correctly and fix Denial of Service">attachment 100282</a> <a href="attachment.cgi?id=100282&amp;action=edit" title="[PATCH v2] security and activation: deliver error messages correctly and fix Denial of Service">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=78979&amp;attachment=100282'>[review]</a>
[PATCH v2] security and activation: deliver error messages correctly and fix Denial of Service

patch updated after smcv's review:
- prototype changed to remove the error parameter and let the caller set the OOM error if it retuns FALSE.
- do not use subtransaction but the same transaction.
- do not cancel, execute or free the transaction: let the caller do it.

I tested the patch in the same way as the previous one and this one works as well for me.

The proposed advisory text looks good to me.</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-02 12:15:02 UTC
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class="bz_obsolete"><a href="attachment.cgi?id=100282" name="attach_100282" title="[PATCH v2] security and activation: deliver error messages correctly and fix Denial of Service">attachment 100282</a> <a href="attachment.cgi?id=100282&amp;action=edit" title="[PATCH v2] security and activation: deliver error messages correctly and fix Denial of Service">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=78979&amp;attachment=100282'>[review]</a>
[PATCH v2] security and activation: deliver error messages correctly and fix Denial of Service

Review of <span class="bz_obsolete"><a href="attachment.cgi?id=100282" name="attach_100282" title="[PATCH v2] security and activation: deliver error messages correctly and fix Denial of Service">attachment 100282</a> <a href="attachment.cgi?id=100282&amp;action=edit" title="[PATCH v2] security and activation: deliver error messages correctly and fix Denial of Service">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=78979&amp;attachment=100282'>[review]</a>:
-----------------------------------------------------------------

This looks good to me, but reviews from other D-Bus maintainers would be extremely welcome.

I'll contact distros&#64; and see whether I can get a CVE ID before releasing.</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-04 20:20:53 UTC
        </span>

      </div>




<pre class="bz_comment_text">Colin pointed out that the comment is confusingly wrong now, and suggested this:

               /* Any DBusError raised here will make the RequestName call fail
-               * with that error, so do not return a DBusError unless the
-               * whole transaction has failed. */
+               * with that error; we want to return the error to the original
+               * method invoker. */

I don't think that's really right either: maybe this?

/* If permission is denied, we just want to return the
 * error to the original method invoker; in particular,
 * we don't want to make the RequestName call fail
 * with that error (see fd.o #78979, CVE-2014-3477). */

I'll commit --amend if people are happy with that wording. I need to do that to add the CVE reference anyway.</pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Colin Walters</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-04 21:54:33 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=78979#c11">comment #11</a>)

<span class="quote">&gt; I don't think that's really right either: maybe this?
&gt; 
&gt; /* If permission is denied, we just want to return the
&gt;  * error to the original method invoker; in particular,
&gt;  * we don't want to make the RequestName call fail
&gt;  * with that error (see fd.o #78979, CVE-2014-3477). */</span >

Yep, this looks good to me.</pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-05 08:23:26 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=78979#c11">comment #11</a>)

<span class="quote">&gt; I'll commit --amend if people are happy with that wording. I need to do that
&gt; to add the CVE reference anyway.</span >

This looks good to me too.</pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-05 14:31:44 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=100463" name="attach_100463" title="CVE-2014-3477: deliver activation errors correctly, fixing  Denial of Service">attachment 100463</a> <a href="attachment.cgi?id=100463&amp;action=edit" title="CVE-2014-3477: deliver activation errors correctly, fixing  Denial of Service">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=78979&amp;attachment=100463'>[review]</a>
CVE-2014-3477: deliver activation errors correctly, fixing  Denial of Service

Here is a revised version of Alban's patch with the adjusted comment. This is what I'm going to recommend to vendors, assuming my tests are successful. I'm preparing 1.6.20 and 1.8.4 releases ahead of time so that they're ready for upload on $(date -d '2014-06-10 16:00+0000').

The same patch seems to cherry-pick nicely to 1.6 and 1.4, and to 1.2 with a bit of conflict-fixing (where trailing whitespace was deleted post-1.2).

I do not consider 1.4 or 1.2 to be security-supported upstream any more, but I will push suggested patches to those branches.</pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alban Crequy</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-06 16:41:01 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=78979#c14">comment #14</a>)
<span class="quote">&gt; Created <span class=""><a href="attachment.cgi?id=100463" name="attach_100463" title="CVE-2014-3477: deliver activation errors correctly, fixing  Denial of Service">attachment 100463</a> <a href="attachment.cgi?id=100463&amp;action=edit" title="CVE-2014-3477: deliver activation errors correctly, fixing  Denial of Service">[details]</a></span> <a href='page.cgi?id=splinter.html&amp;bug=78979&amp;attachment=100463'>[review]</a> [review]
&gt; CVE-2014-3477: deliver activation errors correctly, fixing  Denial of Service
&gt; 
&gt; Here is a revised version of Alban's patch with the adjusted comment. This
&gt; is what I'm going to recommend to vendors, assuming my tests are successful.
&gt; I'm preparing 1.6.20 and 1.8.4 releases ahead of time so that they're ready
&gt; for upload on $(date -d '2014-06-10 16:00+0000').
&gt; 
&gt; The same patch seems to cherry-pick nicely to 1.6 and 1.4, and to 1.2 with a
&gt; bit of conflict-fixing (where trailing whitespace was deleted post-1.2).
&gt; 
&gt; I do not consider 1.4 or 1.2 to be security-supported upstream any more, but
&gt; I will push suggested patches to those branches.</span >

It looks good to me.

I gave the patch another try in the environment I was using to trigger the bug (basically, dbus 1.8.0) and it worked fine for me.</pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=78979#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Simon McVittie</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-06-10 17:38:29 UTC
        </span>

      </div>




<pre class="bz_comment_text">Unembargoing.

Fixed in 1.8.4, 1.6.20. Fixed in git for 1.4 and 1.2 branches.</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=78979">Format For Printing</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>


</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>
<p align="center">
  Use of freedesktop.org services, including Bugzilla, is subject to our <a href="https://www.freedesktop.org/wiki/CodeOfConduct/">Code of Conduct</a>. How we collect and use information is described in our <a href="https://www.freedesktop.org/wiki/PrivacyPolicy">Privacy Policy</a>.
</p>
  </body>
</html>