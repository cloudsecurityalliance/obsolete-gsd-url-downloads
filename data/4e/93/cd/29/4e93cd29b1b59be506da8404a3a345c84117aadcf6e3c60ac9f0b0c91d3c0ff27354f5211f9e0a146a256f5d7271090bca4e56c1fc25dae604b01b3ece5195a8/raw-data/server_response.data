
<!DOCTYPE html>

<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Release Notes &#8212; Botan</title>
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="_static/agogo.css" type="text/css" />
    <script id="documentation_options" data-url_root="./" src="_static/documentation_options.js"></script>
    <script src="_static/jquery.js"></script>
    <script src="_static/underscore.js"></script>
    <script src="_static/doctools.js"></script>
    <link rel="search" type="application/opensearchdescription+xml"
          title="Search within Botan"
          href="_static/opensearch.xml"/>
    <link rel="index" title="Index" href="genindex.html" />
    <link rel="search" title="Search" href="search.html" />
    <link rel="next" title="Security Advisories" href="security.html" />
    <link rel="prev" title="Botan: Crypto and TLS for Modern C++" href="index.html" /> 
  </head><body>
    <div class="header-wrapper">
      <div class="header">
        <h1>Botan</h1>
      </div>
    </div>

    <div class="content-wrapper">
      <div class="content">
        <div class="document">
            
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body" role="main">
            
  <div class="section" id="release-notes">
<h1>Release Notes<a class="headerlink" href="#release-notes" title="Permalink to this headline">¶</a></h1>
<div class="section" id="version-2-18-2-2021-10-25">
<h2>Version 2.18.2, 2021-10-25<a class="headerlink" href="#version-2-18-2-2021-10-25" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Avoid using short exponents when encrypting in ElGamal, as some PGP
implementations generate keys with parameters that are weak when
short exponents are used (GH #2794)</p></li>
<li><p>Fix a low risk OAEP decryption side channel (GH #2797)</p></li>
<li><p>Work around a miscompilation of SHA-3 caused by a bug in Clang 12
and XCode 13. (GH #2826)</p></li>
<li><p>Remove support in OpenSSL provider for algorithms which are
disabled by default in OpenSSL 3.0 (GH #2823, #2814)</p></li>
<li><p>Add CI based on GitHub actions to replace Travis CI (GH #2632)</p></li>
<li><p>Fix the online OCSP test, as the certificate involved had expired.
(GH #2799)</p></li>
<li><p>Fix some test failures induced by the expiration of the trust root
“DST Root CA X3” (GH #2820)</p></li>
</ul>
</div>
<div class="section" id="version-2-18-1-2021-05-09">
<h2>Version 2.18.1, 2021-05-09<a class="headerlink" href="#version-2-18-1-2021-05-09" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Fix a build regression in 2.18.0 which caused linker flags which
contain <code class="docutils literal notranslate"><span class="pre">-l</span></code> within them (such as <code class="docutils literal notranslate"><span class="pre">-fuse-linker-plugin</span></code>) to
be misinterpreted. (GH #2715)</p></li>
<li><p>Fix a bug which caused decoding a certificate which contained
more than one name in a single RDN. (GH #2611 #2630 #2724)</p></li>
<li><p>Fix a bug which caused OID lookup failures when run in a locale
which uses thousands separators (pt_BR was reported as having
this issue). (GH #2732 #2730 #2237)</p></li>
<li><p>DNS names in name constraints were compared with case sensitivity, which
could cause valid certificates to be rejected. (GH #2739 #2735)</p></li>
<li><p>X.509 name constraint extensions were rejected if non-critical. RFC 5280
requires conforming CAs issue such extensions as critical, but not all
certificates are compliant, and all other known implementations do not
require this. (GH #2739 #2736)</p></li>
<li><p>X.509 name constraints were incorrectly applied to the certificate which
included the constraint. (GH #2739 #2737)</p></li>
</ul>
</div>
<div class="section" id="version-2-18-0-2021-04-15">
<h2>Version 2.18.0, 2021-04-15<a class="headerlink" href="#version-2-18-0-2021-04-15" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Add support for implementing custom RNG objects through the
FFI interface (GH #2627 #2600)</p></li>
<li><p>Improve safegcd bounds, improving runtime performance (GH #2628 #2619)</p></li>
<li><p>Fix a bug introduced in 2.9.0 where BigInt::operator&lt; would return
an incorrect result if both operands were negative. (GH #2641 #2638)</p></li>
<li><p>Reject non-TLS messages as quickly as possible without waiting for
a full record. (GH #2676)</p></li>
<li><p>Add build support for RISC-V 32</p></li>
<li><p>Fixes for TLS::Stream::async_shutdown (GH #2673)</p></li>
<li><p>Fix a regression introduced in 2.17.0 where LDFLAGS which add an extra
library (such as <code class="docutils literal notranslate"><span class="pre">-latomic</span></code> needed on SPARC) were not always applied
effectively. (GH #2622 #2623 #2625)</p></li>
</ul>
</div>
<div class="section" id="version-2-17-3-2020-12-21">
<h2>Version 2.17.3, 2020-12-21<a class="headerlink" href="#version-2-17-3-2020-12-21" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>CVE-2021-24115 Change base64, base58, base32, and hex encoding and
decoding operations to run in constant time (GH #2549)</p></li>
<li><p>Fix a build problem on PPC64 building with Clang (GH #2547)</p></li>
<li><p>Fix an install problem introduced in 2.17.2 affecting MSVC 2015</p></li>
<li><p>Fix use of -L flag in linking when configured using <code class="docutils literal notranslate"><span class="pre">--with-external-libdir</span></code>
(GH #2496)</p></li>
<li><p>Fix a build problem on big-endian PowerPC related to VSX instructions
in the AES code. (GH #2515)</p></li>
</ul>
</div>
<div class="section" id="version-2-17-2-2020-11-13">
<h2>Version 2.17.2, 2020-11-13<a class="headerlink" href="#version-2-17-2-2020-11-13" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Fix an build problem on ppc64 introduced with certain recent
versions of GCC or binutils where using the DARN instruction
requires using an appropriate -mcpu flag to enable the instruction
in the assembler. (GH #2481 2463)</p></li>
<li><p>Resolve an issue in the modular square root algorithm where a loop
to find a quadratic non-residue could, for a carefully chosen
composite modulus, not terminate in a timely manner. (GH #2482 #2476)</p></li>
<li><p>Fix a regression in MinGW builds introduced in 2.17.1</p></li>
</ul>
</div>
<div class="section" id="version-2-17-1-2020-11-07">
<h2>Version 2.17.1, 2020-11-07<a class="headerlink" href="#version-2-17-1-2020-11-07" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Fix a build problem that could occur if Python was not in the PATH.
This was known to occur on some installations of macOS.</p></li>
<li><p>Re-enable support for the x86 CLMUL instruction on Visual C++, which was
accidentally disabled starting in 2.12.0. (GH #2460)</p></li>
</ul>
</div>
<div class="section" id="version-2-17-0-2020-11-05">
<h2>Version 2.17.0, 2020-11-05<a class="headerlink" href="#version-2-17-0-2020-11-05" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Fix a bug in ECDSA which could occur when the group size and hash length
differ. In this case, on occasion the generated signature would not be
accepted by other ECDSA implementations. This was particularly likely to
affect users of 160-bit or 239-bit curves. (GH #2433 #2415)</p></li>
<li><p>Fix a bug in ECDSA verification when the public key was chosen to be
a small multiple of the group generator. In that case, verification
would fail even if the signature was actually valid. (GH #2425)</p></li>
<li><p>SIV’s functionality of supporting multiple associated data inputs has been
generalized onto the AEAD_Mode interface. However at the moment SIV is the
only AEAD implemented which supports more than one AD. (GH #2440)</p></li>
<li><p>The contents of ASN.1 headers <code class="docutils literal notranslate"><span class="pre">asn1_str.h</span></code>, <code class="docutils literal notranslate"><span class="pre">asn1_time.h</span></code>, <code class="docutils literal notranslate"><span class="pre">asn1_oid.h</span></code>
and <code class="docutils literal notranslate"><span class="pre">alg_id.h</span></code> have been moved to <code class="docutils literal notranslate"><span class="pre">asn1_obj.h</span></code>. The header files remain
but simply forward the include to <code class="docutils literal notranslate"><span class="pre">asn1_obj.h</span></code>. These now-empty header files
are deprecated, and will be removed in a future major release. (GH #2441)</p></li>
<li><p>The contents of X.509/PKIX headers <code class="docutils literal notranslate"><span class="pre">asn1_attribute.h</span></code> <code class="docutils literal notranslate"><span class="pre">asn1_alt_name.h</span></code>
<code class="docutils literal notranslate"><span class="pre">name_constraint.h</span></code> <code class="docutils literal notranslate"><span class="pre">x509_dn.h</span></code> <code class="docutils literal notranslate"><span class="pre">cert_status.h</span></code> and <code class="docutils literal notranslate"><span class="pre">key_constraint.h</span></code>
have been merged into <code class="docutils literal notranslate"><span class="pre">pkix_enums.h</span></code> (for enumerations) and <code class="docutils literal notranslate"><span class="pre">pkix_types.h</span></code>
(for all other definitions). The previous header files remain but simply
forward the include to the new header containing the definition. These
now-empty header files are deprecated, and will be removed in a future major
release. (GH #2441)</p></li>
<li><p>A number of other headers including those related to HOTP/TOTP, XMSS,
PKCS11, PSK_DB have also been merged. Any now deprecated/empty headers
simply include the new header and issue a deprecation warning.
(GH #2443 #2446 #2447 2448 #2449)</p></li>
<li><p>Small optimizations in the non-hardware assisted AES key generation
code path (GH #2417 #2418)</p></li>
<li><p>Move the GHASH code to a new module in utils, making it possible
to build GMAC support without requiring GCM (GH #2416)</p></li>
<li><p>Add more detection logic for AVX-512 features (GH #2430)</p></li>
<li><p>Avoid std::is_pod which is deprecated in C++20 (GH #2429)</p></li>
<li><p>Fix a bug parsing deeply nested cipher names (GH #2426)</p></li>
<li><p>Add support for <code class="docutils literal notranslate"><span class="pre">aarch64_be</span></code> target CPU (GH #2422)</p></li>
<li><p>Fix order of linker flags so they are always applied effectively (GH #2420)</p></li>
<li><p>Prevent requesting DER encoding of signatures when the algorithm
did not support it (GH #2419)</p></li>
</ul>
</div>
<div class="section" id="version-2-16-0-2020-10-06">
<h2>Version 2.16.0, 2020-10-06<a class="headerlink" href="#version-2-16-0-2020-10-06" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Now userspace PRNG objects (such as AutoSeeded_RNG and HMAC_DRBG)
use an internal lock, which allows safe concurrent use. This however
is purely a precaution in case of accidental sharing of such RNG
objects; for performance reasons it is always preferable to use
a RNG per thread if a userspace RNG is needed. (GH #2399)</p></li>
<li><p>DL_Group and EC_Group objects now track if they were created from a
known trusted group (such as P-256 or an IPsec DH parameter).  If
so, then verification tests can be relaxed, as compared to
parameters which may have been maliciously constructed in order to
pass primality checks. (GH #2409)</p></li>
<li><p>RandomNumberGenerator::add_entropy_T assumed its input was a POD
type but did not verify this. (GH #2403)</p></li>
<li><p>Support OCSP responders that live on a non-standard port (GH #2401)</p></li>
<li><p>Add support for Solaris sandbox (GH #2385)</p></li>
<li><p>Support suffixes on release numbers for alpha/beta releases (GH #2404)</p></li>
<li><p>Fix a bug in EAX which allowed requesting a 0 length tag, which had
the effect of using a full length tag. Instead omit the length field,
or request the full tag length explicitly. (GH #2392 #2390)</p></li>
<li><p>Fix a memory leak in GCM where if passed an unsuitable block cipher
(eg not 128 bit) it would throw an exception and leak the cipher
object. (GH #2392 #2388)</p></li>
</ul>
</div>
<div class="section" id="version-2-15-0-2020-07-07">
<h2>Version 2.15.0, 2020-07-07<a class="headerlink" href="#version-2-15-0-2020-07-07" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Fix a bug where the name constraint extension did not constrain the
alternative DN field which can be included in a subject alternative name. This
would allow a corrupted sub-CA which was otherwise constrained by a name
constraint to issue a certificate with a prohibited DN.</p></li>
<li><p>Fix a bug in the TLS server during client authentication where where
if a (disabled by default) static RSA ciphersuite was selected, then
no certificate request would be sent. This would have an equivalent
effect to a client which simply replied with an empty Certificate
message. (GH #2367)</p></li>
<li><p>Replace the T-Tables implementation of AES with a 32-bit bitsliced
version. As a result AES is now constant time on all processors.
(GH #2346 #2348 #2353 #2329 #2355)</p></li>
<li><p>In TLS, enforce that the key usage given in the server certificate
allows the operation being performed in the ciphersuite. (GH #2367)</p></li>
<li><p>In X.509 certificates, verify that the algorithm parameters are
the expected NULL or empty. (GH #2367)</p></li>
<li><p>Change the HMAC key schedule to attempt to reduce the information
leaked from the key schedule with regards to the length of the key,
as this is at times (as for example in PBKDF2) sensitive information.
(GH #2362)</p></li>
<li><p>Add Processor_RNG which wraps RDRAND or the POWER DARN RNG
instructions. The previous RDRAND_RNG interface is deprecated.
(GH #2352)</p></li>
<li><p>The documentation claimed that mlocked pages were created with a
guard page both before and after. However only a trailing guard page
was used. Add a leading guard page. (GH #2334)</p></li>
<li><p>Add support for generating and verifying DER-encoded ECDSA signatures
in the C and Python interfaces. (GH #2357 #2356)</p></li>
<li><p>Workaround a bug in GCC’s UbSan which triggered on a code sequence
in XMSS (GH #2322)</p></li>
<li><p>When building documentation using Sphinx avoid parallel builds with
version 3.0 due to a bug in that version (GH #2326 #2324)</p></li>
<li><p>Fix a memory leak in the CommonCrypto block cipher calls (GH #2371)</p></li>
<li><p>Fix a flaky test that would occasionally fail when running the tests
with a large number of threads. (GH #2325 #2197)</p></li>
<li><p>Additional algorithms are now deprecated: XTEA, GOST, and Tiger.
They will be removed in a future major release.</p></li>
</ul>
</div>
<div class="section" id="version-2-14-0-2020-04-06">
<h2>Version 2.14.0, 2020-04-06<a class="headerlink" href="#version-2-14-0-2020-04-06" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Add support for using POWER8+ VPSUMD instruction to accelerate GCM
(GH #2247)</p></li>
<li><p>Optimize the vector permute AES implementation, especially improving
performance on ARMv7, Aarch64, and POWER. (GH #2243)</p></li>
<li><p>Use a new algorithm for modular inversions which is both faster and
more resistant to side channel attacks. (GH #2287 #2296 #2301)</p></li>
<li><p>Address an issue in CBC padding which would leak the length of the
plaintext which was being padded. Unpadding during decryption was
not affected. Thanks to Maximilian Blochberger for reporting this.
(GH #2312)</p></li>
<li><p>Optimize NIST prime field reductions, improving ECDSA by 3-9% (GH #2295)</p></li>
<li><p>Increase the size of the ECC blinding mask and scale it based on the
size of the group order. (GH #880 #893 #2308)</p></li>
<li><p>Add server side support for the TLS asio wrapper. (GH #2229)</p></li>
<li><p>Add support for using Windows certificate store on MinGW (GH #2280)</p></li>
<li><p>Use the library thread pool instead of a new thread for RSA computations,
improving signature performance by up to 20%. (GH #2257)</p></li>
<li><p>Precompute and cache additional fields in <code class="docutils literal notranslate"><span class="pre">X509_Certificate</span></code> (GH #2250)</p></li>
<li><p>Add a CLI utility <code class="docutils literal notranslate"><span class="pre">cpu_clock</span></code> which estimates the speed of the
processor cycle counter. (GH #2251)</p></li>
<li><p>Fix a bug which prevented using DER-encoded ECDSA signatures with a PKCS11
key (GH #2293)</p></li>
<li><p>Enable use of raw block ciphers from CommonCrypto (GH #2278)</p></li>
<li><p>Support for splitting up the amalgamation file by ABI extension has
been removed. Instead only <code class="docutils literal notranslate"><span class="pre">botan_all.cpp</span></code> and <code class="docutils literal notranslate"><span class="pre">botan_all.h</span></code> are
generated. (GH #2246)</p></li>
<li><p>Improve support for baremetal systems with no underlying OS, with
target OS <code class="docutils literal notranslate"><span class="pre">none</span></code> (GH #2303 #2304 #2305)</p></li>
<li><p>The build system now avoids using <code class="docutils literal notranslate"><span class="pre">-rpath=$ORIGIN</span></code> or (on macOS)
install_name which allowed running the tests from the build
directory without setting <code class="docutils literal notranslate"><span class="pre">LD_LIBRARY_PATH</span></code>/<code class="docutils literal notranslate"><span class="pre">DYLD_LIBRARY_PATH</span></code>
environment variables. Instead set the dynamic linker variables
appropriately, or use <code class="docutils literal notranslate"><span class="pre">make</span> <span class="pre">check</span></code>. (GH #2294 #2302)</p></li>
<li><p>Add new option <code class="docutils literal notranslate"><span class="pre">--name-amalgamation</span></code> which allows naming the
amalgamation output, instead of the default <code class="docutils literal notranslate"><span class="pre">botan_all</span></code>. (GH #2246)</p></li>
<li><p>Avoid using symbolic links on Windows (GH #2288 #2286 #2285)</p></li>
<li><p>Fix a bug that prevented compilation of the amalgamation on ARM and
POWER processors (GH #2245 #2241)</p></li>
<li><p>Fix some build problems under Intel C++ (GH #2260)</p></li>
<li><p>Remove use of Toolhelp Windows library, which was known to trigger
false positives under some antivirus systems. (GH #2261)</p></li>
<li><p>Fix a compilation problem when building on Windows in Unicode mode.
Add Unicode build to CI to prevent regressions. (GH #2254 #2256)</p></li>
<li><p>Work around a GCC bug affecting old libc (GH #2235)</p></li>
<li><p>Workaround a bug in macOS 10.15 which caused a test to crash.
(GH #2279 #2268)</p></li>
<li><p>Avoid a crash in PKCS8::load_key due to a bug in Clang 8.
(GH #2277)</p></li>
</ul>
</div>
<div class="section" id="version-2-13-0-2020-01-06">
<h2>Version 2.13.0, 2020-01-06<a class="headerlink" href="#version-2-13-0-2020-01-06" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Add Roughtime client (GH #2143 #1842)</p></li>
<li><p>Add support for XMSS X.509 certificates (GH #2172)</p></li>
<li><p>Add support for X.509 CRLs in FFI layer and Python wrapper (GH #2213)</p></li>
<li><p>It is now possible to disable TLS v1.0/v1.1 and DTLS v1.0 at build time.
(GH #2188)</p></li>
<li><p>The format of encrypted TLS sessions has changed, which will invalidate all
existing session tickets. The new format will make it easier to support ticket
key rotation in the future. (GH #2225)</p></li>
<li><p>Improve RSA key generation performance (GH #2148)</p></li>
<li><p>Make gcd computation constant-time (GH #2147)</p></li>
<li><p>Add AVX2 implementation of SHACAL2 (GH #2196)</p></li>
<li><p>Update BSI policy to reflect 2019 update of TR 02102-2 (GH #2195)</p></li>
<li><p>Support more functionality for X.509 in the Python API (GH #2165)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">generic</span></code> CPU target useful when building for some new or unusual
platform.</p></li>
<li><p>Disable MD5 in BSI or NIST modes (GH #2188)</p></li>
<li><p>Disable stack protector on MinGW as it causes crashes with some recent
versions. (GH #2187)</p></li>
<li><p>On Windows the DLL is now installed into the binary directory (GH #2233)</p></li>
<li><p>Previously Windows required an explicit <code class="docutils literal notranslate"><span class="pre">.lib</span></code> suffix be added when
providing an explicit library name, as is used for example for Boost.
Now the <code class="docutils literal notranslate"><span class="pre">.lib</span></code> suffix is implicit, and should be omitted.</p></li>
<li><p>Remove the 32-bit x86 inline asm for Visual C++ as it seemed to not offer
much in the way of improved performance. (GH #2204 #256)</p></li>
<li><p>Resolve all compile time warnings generated by GCC, Clang and MSVC.
Modify CI to compile with warnings-as-errors. (GH #2170 #2206 #2211 #2212)</p></li>
<li><p>Fix bugs linking to 3rd party libraries on Windows due to invalid
link specifiers. (GH #2210 #2215)</p></li>
<li><p>Add long input and NIST Monte-Carlo hash function tests.</p></li>
<li><p>Fix a bug introduced in 2.12.0 where <code class="docutils literal notranslate"><span class="pre">TLS::Channel::is_active</span></code> and
<code class="docutils literal notranslate"><span class="pre">TLS::Channel::is_closed</span></code> could simultaneously return true.
(GH #2174 #2171)</p></li>
<li><p>Use <code class="docutils literal notranslate"><span class="pre">std::shared_ptr</span></code> instead of <code class="docutils literal notranslate"><span class="pre">boost::shared_ptr</span></code> in some examples.
(GH #2155)</p></li>
</ul>
</div>
<div class="section" id="version-2-12-1-2019-10-14">
<h2>Version 2.12.1, 2019-10-14<a class="headerlink" href="#version-2-12-1-2019-10-14" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Fix a bug that prevented building with nmake (GH #2142 #2141)</p></li>
<li><p>Fix an issue where make install would attempt to build targets which
were disabled. (GH #2140)</p></li>
<li><p>If the option <code class="docutils literal notranslate"><span class="pre">--without-documentation</span></code> is used, avoid invoking the
documentation build script. (GH #2138)</p></li>
<li><p>Fix a bug that prevented compilation on x86-32 using GCC 4.9 (GH #2139)</p></li>
<li><p>Fix a bug in CCM encryption, where it was possible to call <code class="docutils literal notranslate"><span class="pre">finish</span></code> without
ever setting a nonce (GH #2151 #2150)</p></li>
<li><p>Improve ECIES/DLIES interfaces. If no initialization vector was set, they
would typically produce hard to understand exceptions. (GH #2151 #2150)</p></li>
</ul>
</div>
<div class="section" id="version-2-12-0-2019-10-07">
<h2>Version 2.12.0, 2019-10-07<a class="headerlink" href="#version-2-12-0-2019-10-07" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Many currently public headers are being deprecated. If any such header is
included by an application, a warning is issued at compile time. Headers
issuing this warning will be made internal in a future major release.
(GH #2061)</p></li>
<li><p>RSA signature performance improvements (GH #2068 #2070)</p></li>
<li><p>Performance improvements for GCM (GH #2024 #2099 #2119), OCB (#2122),
XTS (#2123) and ChaCha20Poly1305 (GH #2117), especially for small messages.</p></li>
<li><p>Add support for constant time AES using NEON and AltiVec (GH #2093 #2095 #2100)</p></li>
<li><p>Improve performance of POWER8 AES instructions (GH #2096)</p></li>
<li><p>Add support for the POWER9 hardware random number generator (GH #2026)</p></li>
<li><p>Add support for 64-bit version of RDRAND, doubling performance on x86-64 (GH #934 #2022)</p></li>
<li><p>In DTLS server, support a client crashing and then reconnecting from
the same source port, as described in RFC 6347 sec 4.2.8 (GH #2029)</p></li>
<li><p>Optimize DTLS MTU splitting to split precisely to the set MTU (GH #2042)</p></li>
<li><p>Add support for the TLS v1.3 downgrade indicator. (GH #2027)</p></li>
<li><p>Improve the error messages generated when an invalid TLS state transition occurs
(GH #2030)</p></li>
<li><p>Fix some edge cases around TLS close_notify support. (GH #2054)</p></li>
<li><p>Modifications to support GOST 34.10-2012 signatures (GH #2055 #2056 #1860 #1897)</p></li>
<li><p>Add some new APIs on <code class="docutils literal notranslate"><span class="pre">OID</span></code> objects (GH #2057)</p></li>
<li><p>Properly decode OCSP responses which indicate an error (GH #2110)</p></li>
<li><p>Add a function to remove an X.509 extension from an Extensions object.
(GH #2101 #2073 #2065)</p></li>
<li><p>Support Argon2 outputs longer than 64 bytes (GH #2079 #2078)</p></li>
<li><p>Correct a bug in CAST-128 which caused incorrect computation using
11, 13, 14, or 15 byte keys. (GH #2081)</p></li>
<li><p>Fix a bug which would cause Streebog to produce incorrect outputs for
certain messages (GH #2082 #2083)</p></li>
<li><p>Fix a bug that prevented loading EC points with an affine x or y
value of 0. For certain curves such points can exist. (GH #2102)</p></li>
<li><p>Fix a bug which would cause PBKDF2 to go into a very long loop if
it was requested to use an iteration count of 0. (GH #2090 #2088)</p></li>
<li><p>The BearSSL provider has been removed (GH #2020)</p></li>
<li><p>Add a new <code class="docutils literal notranslate"><span class="pre">entropy</span></code> cli which allows sampling the output of the entropy sources.</p></li>
<li><p>Add new <code class="docutils literal notranslate"><span class="pre">base32_enc</span></code> and <code class="docutils literal notranslate"><span class="pre">base32_dec</span></code> cli for base32 encoding operations. (GH #2111)</p></li>
<li><p>Support setting TLS policies in CLIs like <code class="docutils literal notranslate"><span class="pre">tls_client</span></code> and <code class="docutils literal notranslate"><span class="pre">tls_proxy_server</span></code> (GH #2047)</p></li>
<li><p>The tests now run in multithreaded mode by default. Provide option <code class="docutils literal notranslate"><span class="pre">--test-threads=1</span></code> to
return to previous single-threaded behavior. (GH #2071 #2075)</p></li>
<li><p>Cleanups in TLS record layer (GH #2021)</p></li>
<li><p>Fix typos in some OCSP enums which used “OSCP” instead. (GH #2048)</p></li>
<li><p>In the Python module, avoid trying to load DLLs for names that don’t match the current
platform (GH #2062 #2059)</p></li>
<li><p>In the Python module, also look for <code class="docutils literal notranslate"><span class="pre">botan.dll</span></code> so Python wrapper can run on Windows.
(GH #2059 #2060)</p></li>
<li><p>Add support for TOTP algorithm to the Python module. (GH #2112)</p></li>
<li><p>Now the minimum Windows target is set to Windows 7 (GH #2036 #2028)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">BOTAN_FORCE_INLINE</span></code> macro to resolve a performance issue with BLAKE2b on MSVC
(GH #2092 #2089)</p></li>
<li><p>Avoid using <code class="docutils literal notranslate"><span class="pre">__GNUG__</span></code> in headers that may be consumed by a C compiler (GH #2013)</p></li>
<li><p>Improve the PKCS11 tests (GH #2115)</p></li>
<li><p>Fix a warning from Klocwork (GH #2128 #2129)</p></li>
<li><p>Fix a bug which caused amalgamation builds to fail on iOS (GH #2045)</p></li>
<li><p>Support disabling thread local storage, needed for building on old iOS (GH #2045)</p></li>
<li><p>Add a script to help with building for Android, using Docker (GH #2016 #2033 #513)</p></li>
<li><p>Add Android NDK build to Travis CI (GH #2017)</p></li>
</ul>
</div>
<div class="section" id="version-2-11-0-2019-07-01">
<h2>Version 2.11.0, 2019-07-01<a class="headerlink" href="#version-2-11-0-2019-07-01" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Add Argon2 PBKDF and password hash (GH #459 #1981 #1987)</p></li>
<li><p>Add Bcrypt-PBKDF (GH #1990)</p></li>
<li><p>Add a libsodium compat layer in sodium.h (GH #1996)</p></li>
<li><p>XMSS now follows RFC 8391 which is incompatible with previous versions, which
had followed draft 6. (GH #1858 #2003)</p></li>
<li><p>Add server side support for issuing DTLS HelloVerifyRequest messages
(GH #1999)</p></li>
<li><p>Add a shim allowing testing Botan against the BoringSSL test suite,
and fix a number of bugs in TLS found using it.
(GH #1954 #1955 #1956 #1959 #1966 #1970)</p></li>
<li><p>Add support for the TLS v1.3 supported_versions extension. (GH #1976)</p></li>
<li><p>Add Ed25519ph compatible with RFC 8032 (GH #1699 #2000)</p></li>
<li><p>Add support for OCSP stapling on server side. (GH #1703 #1967)</p></li>
<li><p>Add a <code class="docutils literal notranslate"><span class="pre">boost::asio</span></code> TLS stream compatible with <code class="docutils literal notranslate"><span class="pre">boost::asio::ssl</span></code>.
(GH #1839 #1927 #1992)</p></li>
<li><p>Add a certificate store for Linux/Unix systems. (GH #1885 #1936)</p></li>
<li><p>Add a certificate store for Windows systems. (GH #1931)</p></li>
<li><p>Add a generic <code class="docutils literal notranslate"><span class="pre">System_Certificate_Store</span></code> which wraps Windows, macOS,
and Linux certificate stores. (GH #1893)</p></li>
<li><p>Fix verification rooted in a v1 certificate which previously would fail.
(GH #1890)</p></li>
<li><p>Add ability to specify the maximum age of an OCSP response which does not
have the nextUpdate field set. (GH #1974 #1995)</p></li>
<li><p>Fix X509_DN::operator&lt; which could erroneously return true in both
directions (ie, DN1 &lt; DN2 &amp;&amp; DN2 &lt; DN1). This would break STL
containers using a DN as the key. (GH #1938)</p></li>
<li><p>It is now possible to create intermediate CA certificates using the
command line interface. (GH #1879 #1889)</p></li>
<li><p>Add a new build time option to set where the system stores trusted
certificates. (GH #1888)</p></li>
<li><p>New <code class="docutils literal notranslate"><span class="pre">trust_roots</span></code> CLI that examines the system certificate store.
(GH #1893)</p></li>
<li><p>Fix bugs and add many new features in the Python wrapper.
(GH #1899 #1900 #1901 #1902 #1903 #1904 #1906 #1907 #1915)</p></li>
<li><p>Various FFI interfaces which are redundant with other APIs are now
deprecated. The deprecation message suggests the alternate API to use.
(GH #1915)</p></li>
<li><p>Fix decoding of RSA-OAEP certificates. (GH #1943 #1944)</p></li>
<li><p>Allow setting multiple organization unit fields in a certificate or
certificate request. (GH #1939)</p></li>
<li><p>Increase the maximum allowed year in ASN1_Time to 3100. This works
around a problem parsing certs in AppVeyor’s trust store.</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">--format</span></code> option to <code class="docutils literal notranslate"><span class="pre">rng</span></code> CLI command allowing to format
as base64, base58 or binary in addition to hex. (GH #1945)</p></li>
<li><p>Remove use of table lookups for IP/FP transforms in DES (GH #1928)</p></li>
<li><p>Improve the tests for SRP6 (GH #1917 #1923)</p></li>
<li><p>Document the build system</p></li>
<li><p>When available use POSIX <code class="docutils literal notranslate"><span class="pre">sysconf</span></code> to detect the number of CPUs (GH #1877)</p></li>
<li><p>Add functionality to handle Boost naming conventions on different platforms,
especially affecting Windows. Enable Boost in AppVeyor builds. (GH #1964)</p></li>
<li><p>Add alternate implementation of <code class="docutils literal notranslate"><span class="pre">getauxval</span></code> for older Android (GH #1962)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">configure.py</span></code> option allowing to set arbitrary macros during build.
(GH #1960)</p></li>
<li><p>Use FreeBSD’s <code class="docutils literal notranslate"><span class="pre">elf_aux_info</span></code> to detect ARM and POWER CPU features
(GH #1895)</p></li>
<li><p>Use FreeBSD’s <code class="docutils literal notranslate"><span class="pre">PROT_MAX</span></code> to prevent mmap regions from being made executable
later. (GH #2001)</p></li>
<li><p>Fix a memory leak in the tests (GH #1886)</p></li>
<li><p>Fix an issue building with the new Boost 1.70 (GH #1881 #1880)</p></li>
<li><p>Fix an issue with UbSan in the tests (GH #1892)</p></li>
<li><p>Remove use of <code class="docutils literal notranslate"><span class="pre">-mabi</span></code> flag when building on MIPS64 (GH #1918)</p></li>
<li><p>Make it possible to specify additional libraries in <code class="docutils literal notranslate"><span class="pre">LDFLAGS</span></code> (GH #1916)</p></li>
<li><p>Fix some warnings from Clang 8 (GH #1941)</p></li>
<li><p>Fix the makefile .PHONY syntax (GH #1874)</p></li>
<li><p>Fix build issue with SoftHSM 2.5.0 (GH #1986)</p></li>
</ul>
</div>
<div class="section" id="version-2-10-0-2019-03-30">
<h2>Version 2.10.0, 2019-03-30<a class="headerlink" href="#version-2-10-0-2019-03-30" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Notice: the developers plan to switch from gzip to xz compression for
releases starting in 2.11. If this is a problem please comment at
<a class="reference external" href="https://github.com/randombit/botan/issues/1872">https://github.com/randombit/botan/issues/1872</a></p></li>
<li><p>Warning: XMSS currently implements draft-06 which is not compatible with the
final RFC 8391 specification. A PR is open to fix this, however it will break
all current uses of XMSS. If you are currently using XMSS please comment at
<a class="reference external" href="https://github.com/randombit/botan/pull/1858">https://github.com/randombit/botan/pull/1858</a>. Otherwise the PR will be merged
and support for draft-06 will be removed starting in 2.11.</p></li>
<li><p>Added a new certificate store implementation that can access the
MacOS keychain certificate store. (GH #1830)</p></li>
<li><p>Redesigned <code class="docutils literal notranslate"><span class="pre">Memory_Pool</span></code> class, which services allocations out of a
set of pages locked into memory (using <code class="docutils literal notranslate"><span class="pre">mlock</span></code>/<code class="docutils literal notranslate"><span class="pre">VirtualLock</span></code>). It is now
faster and with improved exploit mitigations. (GH #1800)</p></li>
<li><p>Add BMI2 implementations of SHA-512 and SHA-3 which improve performance by
25-35% on common CPUs. (GH #1815)</p></li>
<li><p>Unroll SHA-3 computation improving performance by 10-12% (GH #1838)</p></li>
<li><p>Add a <code class="docutils literal notranslate"><span class="pre">Thread_Pool</span></code> class. It is now possible to run the tests in multiple
threads with <code class="docutils literal notranslate"><span class="pre">--test-threads=N</span></code> flag to select the number of threads to use.
Use <code class="docutils literal notranslate"><span class="pre">--test-threads=0</span></code> to run with as many CPU cores as are available on the
current system. The default remains single threaded. (GH #1819)</p></li>
<li><p>XMSS signatures now uses a global thread pool instead of spawning new threads
for each usage. This improves signature generation performance by between 10%
and 60% depending on architecture and core count. (GH #1864)</p></li>
<li><p>Some functions related to encoding and decoding BigInts have been deprecated.
(GH #1817)</p></li>
<li><p>Binary encoding and decoding of BigInts has been optimized by performing
word-size operations when possible. (GH #1817)</p></li>
<li><p>Rename the exception <code class="docutils literal notranslate"><span class="pre">Integrity_Failure</span></code> to <code class="docutils literal notranslate"><span class="pre">Invalid_Authentication_Tag</span></code> to make
its meaning and usage more clear. The old name remains as a typedef. (GH #1816)</p></li>
<li><p>Support for using Boost <code class="docutils literal notranslate"><span class="pre">filesystem</span></code> and MSVC’s <code class="docutils literal notranslate"><span class="pre">std::filesystem</span></code> have been
removed, since already POSIX and Win32 versions had to be maintained for
portability. (GH #1814)</p></li>
<li><p>Newly generated McEliece and XMSS keys now default to being encrypted using
SIV mode, support for which was added in 2.8.0. Previously GCM was used by
default for these algorithms.</p></li>
<li><p>Use <code class="docutils literal notranslate"><span class="pre">arc4random</span></code> on Android systems (GH #1851)</p></li>
<li><p>Fix the encoding of PGP-S2K iteration counts (GH #1853 #1854)</p></li>
<li><p>Add a facility for sandboxing the command line util. Currently FreeBSD
(Capsicum) and OpenBSD (<code class="docutils literal notranslate"><span class="pre">pledge</span></code>) sandboxes are supported. (GH #1808)</p></li>
<li><p>Use <code class="docutils literal notranslate"><span class="pre">if</span> <span class="pre">constexpr</span></code> when available.</p></li>
<li><p>Disable building shared libs on iOS as it was broken and it is not clear shared
libraries are ever useful on iOS (GH #1865)</p></li>
<li><p>Renamed the <code class="docutils literal notranslate"><span class="pre">darwin</span></code> build target to <code class="docutils literal notranslate"><span class="pre">macos</span></code>. This should not cause any
user-visible change. (GH #1866)</p></li>
<li><p>Add support for using <code class="docutils literal notranslate"><span class="pre">sccache</span></code> to cache the Windows CI build (GH #1807)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">--extra-cxxflags</span></code> option which allows adding compilation flags without
overriding the default set. (GH #1826)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">--format=</span></code> option to the <code class="docutils literal notranslate"><span class="pre">hash</span></code> cli which allows formatting the output
as base64 or base58, default output remains hex.</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">base58_enc</span></code> and <code class="docutils literal notranslate"><span class="pre">base58_dec</span></code> cli utils for base58 encoding/decoding.
(GH #1848)</p></li>
<li><p>Enable <code class="docutils literal notranslate"><span class="pre">getentropy</span></code> by default on macOS (GH #1862)</p></li>
<li><p>Avoid using <code class="docutils literal notranslate"><span class="pre">-momit-leaf-frame-pointer</span></code> flags, since <code class="docutils literal notranslate"><span class="pre">-fomit-frame-pointer</span></code>
is already the default with recent versions of GCC.</p></li>
<li><p>Fix XLC sanitizer flags.</p></li>
<li><p>Rename <code class="docutils literal notranslate"><span class="pre">Blake2b</span></code> class to <code class="docutils literal notranslate"><span class="pre">BLAKE2b</span></code> to match the official name. There is
a typedef for compat.</p></li>
<li><p>Fix a bug where loading a raw <code class="docutils literal notranslate"><span class="pre">Ed25519_PublicKey</span></code> of incorrect length would
lead to a crash. (GH #1850)</p></li>
<li><p>Fix a bug that caused compilation problems using CryptoNG PRNG. (GH #1832)</p></li>
<li><p>Extended SHAKE-128 cipher to support any key between 1 and 160 bytes, instead
of only multiples of 8 bytes.</p></li>
<li><p>Minor HMAC optimizations.</p></li>
<li><p>Build fixes for GNU/Hurd.</p></li>
<li><p>Fix a bug that prevented generating or verifying Ed25519 signatures in the CLI
(GH #1828 #1829)</p></li>
<li><p>Fix a compilation error when building the amalgamation outside of the original
source directory when AVX2 was enabled. (GH #1812)</p></li>
<li><p>Fix a crash when creating the amalgamation if a header file was edited on
Windows but then the amalgamation was built on Linux (GH #1763)</p></li>
</ul>
</div>
<div class="section" id="version-2-9-0-2019-01-04">
<h2>Version 2.9.0, 2019-01-04<a class="headerlink" href="#version-2-9-0-2019-01-04" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>CVE-2018-20187 Address a side channel during ECC key generation,
which used an unblinded Montgomery ladder. As a result, a timing
attack can reveal information about the high bits of the secret key.</p></li>
<li><p>Fix bugs in TLS which caused negotiation failures when the client
used an unknown signature algorithm or version (GH #1711 #1709 #1708)</p></li>
<li><p>Fix bug affecting GCM, EAX and ChaCha20Poly1305 where if the associated data
was set after starting a message, the new AD was not reflected in the produced
tag. Now with these modes setting an AD after beginning a message throws an
exception.</p></li>
<li><p>Use a smaller sieve which improves performance of prime generation.</p></li>
<li><p>Fixed a bug that caused ChaCha to produce incorrect output after encrypting
256 GB. (GH #1728)</p></li>
<li><p>Add NEON and AltiVec implementations of ChaCha (GH #1719 #1728 #1729)</p></li>
<li><p>Optimize AVX2 ChaCha (GH #1730)</p></li>
<li><p>Many more operations in BigInt, ECC and RSA code paths are either fully const time
or avoid problematic branches that could potentially be exploited in a side
channel attack. (GH #1738 #1750 #1754 #1755 #1757 #1758 #1759 #1762 #1765
#1770 #1773 #1774 #1779 #1780 #1794 #1795 #1796 #1797)</p></li>
<li><p>Several optimizations for BigInt and ECC, improving ECDSA performance by as
much as 30%. (GH #1734 #1737 #1777 #1750 #1737 #1788)</p></li>
<li><p>Support recovering an ECDSA public key from a message/signature pair (GH #664 #1784)</p></li>
<li><p>Add base58 encoding/decoding functions (GH #1783)</p></li>
<li><p>In the command line interface, add support for reading passphrases from the
terminal with echo disabled (GH #1756)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">CT::Mask</span></code> type to simplify const-time programming (GH #1751)</p></li>
<li><p>Add new configure options <code class="docutils literal notranslate"><span class="pre">--disable-bmi2</span></code>, <code class="docutils literal notranslate"><span class="pre">--disable-rdrand</span></code>,
and <code class="docutils literal notranslate"><span class="pre">--disable-rdseed</span></code> to prevent use of those instruction sets.</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">error_type</span></code> and <code class="docutils literal notranslate"><span class="pre">error_code</span></code> functions to Exception type (GH #1744)</p></li>
<li><p>Now on POSIX systems <code class="docutils literal notranslate"><span class="pre">posix_memalign</span></code> is used instead of <code class="docutils literal notranslate"><span class="pre">mmap</span></code> for
allocating the page-locked memory pool. This avoids issues with <code class="docutils literal notranslate"><span class="pre">fork</span></code>.
(GH #602 #1798)</p></li>
<li><p>When available, use RDRAND to generate the additional data in
<code class="docutils literal notranslate"><span class="pre">Stateful_RNG::randomize_with_ts_input</span></code></p></li>
<li><p>Use vzeroall/vzeroupper intrinsics to avoid AVX2/SSE transition penalties.</p></li>
<li><p>Support for Visual C++ 2013 has been removed (GH #1557 #1697)</p></li>
<li><p>Resolve a memory leak when verifying ECDSA signatures with versions
of OpenSSL before 1.1.0 (GH #1698)</p></li>
<li><p>Resolve a memory leak using ECDH via OpenSSL (GH #1767)</p></li>
<li><p>Fix an error in XTS which prohibited encrypting values which were
exactly the same length as the underlying block size. Messages of
this size are allowed by the standard and other XTS implementations.
(GH #1706)</p></li>
<li><p>Resolve a bug in TSS which resulted in it using an incorrect length
field in the shares. Now the correct length is encoded, but either
correct or buggy lengths are accepted when decoding. (GH #1722)</p></li>
<li><p>Correct a bug when reducing a negative <code class="docutils literal notranslate"><span class="pre">BigInt</span></code> modulo a small power of 2.
(GH #1755)</p></li>
<li><p>Add CLI utils for threshold secret splitting. (GH #1722)</p></li>
<li><p>Fix a bug introduced in 2.8.0 that caused compilation failure if using
a single amalgamation file with AVX2 enabled. (GH #1700)</p></li>
<li><p>Add an explicit OS target for Emscripten and improve support for it.
(GH #1702)</p></li>
<li><p>Fix small issues when building for QNX</p></li>
<li><p>Switch the Travis CI build to using Ubuntu 16.04 (GH #1767)</p></li>
<li><p>Add options to <code class="docutils literal notranslate"><span class="pre">configure.py</span></code> to disable generation of <code class="docutils literal notranslate"><span class="pre">pkg-config</span></code>
file, and (for systems where <code class="docutils literal notranslate"><span class="pre">pkg-config</span></code> support defaults to off,
like Windows), to enable generating it. (GH #1268)</p></li>
<li><p>Modify <code class="docutils literal notranslate"><span class="pre">configure.py</span></code> to accept empty lists or trailing/extra commas.
(GH #1705)</p></li>
</ul>
</div>
<div class="section" id="version-2-8-0-2018-10-01">
<h2>Version 2.8.0, 2018-10-01<a class="headerlink" href="#version-2-8-0-2018-10-01" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Add support for using Apple CommonCrypto library for hashing (GH #1667),
cipher modes (GH #1674) and block ciphers (GH #1673).</p></li>
<li><p>Support for negotiating TLS versions 1.0 and 1.1 is disabled in the default
TLS policy. In addition, support for negotiating TLS ciphersuites using CBC or
CCM mode is disabled by default. Applications which need to interop with old
peers must enable these in their TLS policy object. (GH #1651)</p></li>
<li><p>During primality testing, use a Lucas test in addition to Miller-Rabin. It is
possible to construct a composite integer which passes n Miller-Rabin tests
with probability (1/4)^n. So for a incautious verifier using a small number
of tests (under 16 or so) it is possible if unlikely they would accept such a
composite as prime. Adding a Lucas test precludes such an attack. (GH #1636)</p></li>
<li><p>Add XChaCha and XChaCha20Poly1305 (GH #1640)</p></li>
<li><p>Add AVX2 implementations of ChaCha (GH #1662) and Serpent (GH #1660)</p></li>
<li><p>Add a new password hashing interface in pwdhash.h (GH #1670)</p></li>
<li><p>C binding improvements. Added functions to get name and supported
keylengths of cipher, hash and MAC objects, support for FE1 format
preserving encryption (GH #1625 #1646), functions to load and save
RSA keys in PKCS #1 format (GH #1621), HOTP and TOTP algorithms,
scrypt, certificate verification (GH #1647), functions to get the
output length of public key operations (GH #1642), and functions for
loading and serializing X25519 keys (GH #1681)</p></li>
<li><p>Support for building with BOTAN_MP_WORD_BITS set to 8 or 16 has been removed.</p></li>
<li><p>Previously SM2 had two distinct key types, one for signatures and another for
encryption. They have now been merged into a single key type since in practice
it seems the same key is at times used for both operations. (GH #1637)</p></li>
<li><p>The <code class="docutils literal notranslate"><span class="pre">Cipher_Mode</span></code> class now derives from <code class="docutils literal notranslate"><span class="pre">SymmetricAlgorithm</span></code> (GH #1639)</p></li>
<li><p>Add support for using the ARMv8 instructions for SM4 encryption (GH #1622)</p></li>
<li><p>The entropy source using <code class="docutils literal notranslate"><span class="pre">SecRandomCopyBytes</span></code> has been removed as it was
redundant with other entropy sources (GH #1668)</p></li>
<li><p>The Python module has much better error checking and reporting, and offers new
functionality such as scrypt, MPI and FPE. (GH #1643 #1646)</p></li>
<li><p>Fixed a bug that caused CCM to fail with an exception when used with L=8
(GH #1631 #1632)</p></li>
<li><p>The default bcrypt work factor has been increased from 10 to 12.</p></li>
<li><p>The default algorithm used in passhash9 has changed from SHA-256 to SHA-512,
and the default work factor increased from 10 to 15.</p></li>
<li><p>In ECC private keys, include the public key data for compatibility with
GnuTLS (GH #1634 #1635)</p></li>
<li><p>Add support for using Linux <code class="docutils literal notranslate"><span class="pre">getrandom</span></code> syscall to access the system PRNG.
This is disabled by default, use <code class="docutils literal notranslate"><span class="pre">--with-os-feature=getrandom</span></code> to enable.</p></li>
<li><p>It is now possible to encrypt private keys using SIV mode.</p></li>
<li><p>The FFI function botan_privkey_load now ignores its rng argument.</p></li>
<li><p>Resolve a problem when building under Visual C++ 15.8 (GH #1624)</p></li>
<li><p>Fix a bug in XSalsa20 (192-bit Salsa nonces) where if set_iv was called twice
without calling set_key, the resulting encryption was incorrect. (GH #1640)</p></li>
<li><p>Handle an error seen when verifying invalid ECDSA signatures using LibreSSL
on non x86-64 platforms (GH #1627 #1628)</p></li>
<li><p>Fix bugs in PKCS7 and X9.23 CBC padding schemes, which would ignore
the first byte in the event the padding took up the entire block. (GH #1690)</p></li>
<li><p>Correct bugs which would cause CFB, OCB, and GCM modes to crash when they
were used in an unkeyed state. (GH #1639)</p></li>
<li><p>Optimizations for SM4 and Poly1305</p></li>
<li><p>Avoid a cache side channel in the AES key schedule</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">pk_encrypt</span></code> and <code class="docutils literal notranslate"><span class="pre">pk_decrypt</span></code> CLI operations</p></li>
<li><p>Now <code class="docutils literal notranslate"><span class="pre">asn1print</span></code> CLI defaults to printing context-specific fields.</p></li>
<li><p>Use codec_base for Base64, which matches how Base32 is implemented (GH #1597)</p></li>
<li><p>The <code class="docutils literal notranslate"><span class="pre">cast</span></code> module has been split up into <code class="docutils literal notranslate"><span class="pre">cast128</span></code> and <code class="docutils literal notranslate"><span class="pre">cast256</span></code> (GH #1685)</p></li>
<li><p>When building under Visual C++ 2013, the user must acknowledge the upcoming
removal of support using the configure.py flag <code class="docutils literal notranslate"><span class="pre">--ack-vc2013-deprecated</span></code>
(GH #1557)</p></li>
</ul>
</div>
<div class="section" id="version-2-7-0-2018-07-02">
<h2>Version 2.7.0, 2018-07-02<a class="headerlink" href="#version-2-7-0-2018-07-02" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>CVE-2018-12435 Avoid a side channel in ECDSA signature generation (GH #1604)</p></li>
<li><p>Avoid a side channel in RSA key generation due to use of a non-constant time
gcd algorithm. (GH #1542 #1556)</p></li>
<li><p>Optimize prime generation, especially improving RSA key generation. (GH #1542)</p></li>
<li><p>Make Karatsuba multiplication, Montgomery field operations, Barrett reduction
and Montgomery exponentiation const time (GH #1540 #1606 #1609 #1610)</p></li>
<li><p>Optimizations for elliptic curve operations especially improving reductions
and inversions modulo NIST primes (GH #1534 #1538 #1545 #1546 #1547 #1550)</p></li>
<li><p>Add 24 word wide Comba multiplication, improving 3072-bit RSA and DH by ~25%.
(GH #1564)</p></li>
<li><p>Unroll Montgomery reduction for specific sizes (GH #1603)</p></li>
<li><p>Improved performance of signature verification in ECGDSA, ECKCDSA,
SM2 and GOST by 10-15%.</p></li>
<li><p>XMSS optimizations (GH #1583 #1585)</p></li>
<li><p>Fix an error that meant XMSS would only sign half as many signatures as is
allowed (GH #1582)</p></li>
<li><p>Add support for base32 encoding/decoding (GH #1541)</p></li>
<li><p>Add BMI2 optimized version of SHA-256, 40% faster on Skylake (GH #1584)</p></li>
<li><p>Allow the year to be up to 2200 in ASN.1 time objects. Previously this
was limited to 2100. (GH #1536)</p></li>
<li><p>Add support for Scrypt password hashing (GH #1570)</p></li>
<li><p>Add support for using Scrypt for private key encryption (GH #1574)</p></li>
<li><p>Optimizations for DES/3DES, approx 50% faster when used in certain modes such
as CBC decrypt or CTR.</p></li>
<li><p>XMSS signature verification did not check that the signature was of
the expected length which could lead to a crash. (GH #1537)</p></li>
<li><p>The bcrypt variants 2b and 2y are now supported.</p></li>
<li><p>Support for 192-bit Suite B TLS profile is now implemented, as the 128-bit
Suite B is since 2015 not allowed anymore.</p></li>
<li><p>Previously botan allowed GCM to be used with an empty nonce, which is not
allowed by the specification. Now such nonces are rejected.</p></li>
<li><p>Avoid problems on Windows when compiling in Unicode mode (GH #1615 #1616)</p></li>
<li><p>Previously for ASN.1 encoded signatures (eg ECDSA) Botan would accept any
valid BER encoding. Now only the single valid DER encoding is accepted.</p></li>
<li><p>Correct an error that could in rare cases cause an internal error exception
when doing computations with the P-224 curve.</p></li>
<li><p>Optimizations to reduce allocations/copies during DER encoding and BER
decoding (GH #1571 #1572 #1600)</p></li>
<li><p>Botan generates X.509 subject key IDs by hashing the public key with whatever
hash function is being used to sign the certificate. However especially for
SHA-512 this caused SKIDs that were far longer than necessary. Now all SKIDs
are truncated to 192 bits.</p></li>
<li><p>In the test suite use <code class="docutils literal notranslate"><span class="pre">mkstemp</span></code> to create temporary files instead of
creating them in the current working directory. (GH #1533 #1530)</p></li>
<li><p>It is now possible to safely override <code class="docutils literal notranslate"><span class="pre">CXX</span></code> when invoking make in addition
to when <code class="docutils literal notranslate"><span class="pre">configure.py</span></code> is run. (GH #1579)</p></li>
<li><p>OIDs for Camellia and SM4 in CBC and GCM mode are now defined, making it
possible to use this algorithms for private key encryption.</p></li>
<li><p>Avoid creating symlinks to the shared object on OpenBSD (#1535)</p></li>
<li><p>The <code class="docutils literal notranslate"><span class="pre">factor</span></code> command runs much faster on larger inputs now.</p></li>
<li><p>Support for Windows Phone/UWP was deprecated starting in 2.5. This deprecation
has been reversed as it seems UWP is still actively used. (GH #1586 #1587)</p></li>
<li><p>Support for Visual C++ 2013 is deprecated, and will be removed in Jan 2019.</p></li>
<li><p>Added support for GCC’s –sysroot option to configure.py for cross-compiling.</p></li>
</ul>
</div>
<div class="section" id="version-2-6-0-2018-04-10">
<h2>Version 2.6.0, 2018-04-10<a class="headerlink" href="#version-2-6-0-2018-04-10" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>CVE-2018-9860 Fix a bug decrypting TLS CBC ciphertexts which could
for a malformed ciphertext cause the decryptor to read and HMAC an
additional 64K bytes of data which is not part of the record. This
could cause a crash if the read went into unmapped memory. No
information leak or out of bounds write occurs.</p></li>
<li><p>Add support for OAEP labels (GH #1508)</p></li>
<li><p>RSA signing is about 15% faster (GH #1523) and RSA verification is
about 50% faster.</p></li>
<li><p>Add exponent blinding to RSA (GH #1523)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">Cipher_Mode::create</span></code> and <code class="docutils literal notranslate"><span class="pre">AEAD_Mode::create</span></code> (GH #1527)</p></li>
<li><p>Fix bug in TLS server introduced in 2.5 which caused connection to
fail if the client offered any signature algorithm not known to the
server (for example RSA/SHA-224).</p></li>
<li><p>Fix a bug in inline asm that would with GCC 7.3 cause incorrect
computations and an infinite loop during the tests. (GH #1524 #1529)</p></li>
</ul>
</div>
<div class="section" id="version-2-5-0-2018-04-02">
<h2>Version 2.5.0, 2018-04-02<a class="headerlink" href="#version-2-5-0-2018-04-02" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Fix error in certificate wildcard matching (CVE-2018-9127), where a
wildcard cert for <code class="docutils literal notranslate"><span class="pre">b*.example.com</span></code> would be accepted as a match for
any host with name <code class="docutils literal notranslate"><span class="pre">*b*.example.com</span></code> (GH #1519)</p></li>
<li><p>Add support for RSA-PSS signatures in TLS (GH #1285)</p></li>
<li><p>Ed25519 certificates are now supported (GH #1501)</p></li>
<li><p>Many optimizations in ECC operations. ECDSA signatures are 8-10 times faster.
ECDSA verification is about twice as fast. ECDH key agreement is 3-4 times
faster. (GH #1457 #1478)</p></li>
<li><p>Implement product scanning Montgomery reduction, which improves Diffie-Hellman
and RSA performance by 10 to 20% on most platforms. (GH #1472)</p></li>
<li><p>DSA signing and verification performance has improved by 30-50%.</p></li>
<li><p>Add a new Credentials_Manager callback that specifies which CAs the server
has indicated it trusts (GH #1395 fixing #1261)</p></li>
<li><p>Add new TLS::Callbacks methods that allow creating or removing extensions,
as well as examining extensions sent by the peer (GH #1394 #1186)</p></li>
<li><p>Add new TLS::Callbacks methods that allow an application to
negotiate use of custom elliptic curves. (GH #1448)</p></li>
<li><p>Add ability to create custom elliptic curves (GH #1441 #1444)</p></li>
<li><p>Add support for POWER8 AES instructions (GH #1459 #1393 #1206)</p></li>
<li><p>Fix DSA/ECDSA handling of hashes longer than the group order (GH #1502 #986)</p></li>
<li><p>The default encoding of ECC public keys has changed from compressed
to uncompressed point representation. This improves compatibility with
some common software packages including Golang’s standard library.
(GH #1480 #1483)</p></li>
<li><p>It is now possible to create DNs with custom components. (GH #1490 #1492)</p></li>
<li><p>It is now possible to specify the serial number of created certificates,
instead of using the default 128-bit random integer. (GH #1489 #1491)</p></li>
<li><p>Change DL_Group and EC_Group to store their data as shared_ptr for
fast copying. Also both classes precompute additional useful values
(eg for modular reductions). (GH #1435 #1454)</p></li>
<li><p>On Windows platforms RtlGenRandom is now used in preference to CryptoAPI
or CryptoNG libraries. (GH #1494)</p></li>
<li><p>Make it possible for PKCS10 requests to include custom extensions. This also
makes it possible to use multiple SubjectAlternativeNames of a single type in
a request, which was previously not possible. (GH #1429 #1428)</p></li>
<li><p>Add new optimized interface for FE1 format preserving encryption. By caching a
number of values computed in the course of the FPE calculation, it provides a
6-7x speedup versus the old API. (GH #1469)</p></li>
<li><p>Add DSA and ElGamal keygen functions to FFI (#1426)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">Pipe::prepend_filter</span></code> to replace deprecated <code class="docutils literal notranslate"><span class="pre">Pipe::prepend</span></code> (GH #1402)</p></li>
<li><p>Fix a memory leak in the OpenSSL block cipher integration, introduced in 2.2.0</p></li>
<li><p>Use an improved algorithm for generating safe primes which is several tens of
times faster. Also, fix a bug in the prime sieving algorithm which caused
standard prime generation (like for RSA keys) to be slower than necessary.
(GH #1413 #1411)</p></li>
<li><p>Correct the return value of <code class="docutils literal notranslate"><span class="pre">PK_Encryptor::maximum_input_size</span></code> which
reported a much too small value (GH #1410)</p></li>
<li><p>Remove use of CPU specific optimization flags, instead the user should set
these via CXXFLAGS if desired. (GH #1392)</p></li>
<li><p>Resolve an issue that would cause a crash in the tests if they were run on
a machine without SSE2/NEON/VMX instructions. (GH #1495)</p></li>
<li><p>The Python module now tries to load DLLs from a list of names and
uses the first one which successfully loads and indicates it
supports the desired API level. (GH #1497)</p></li>
<li><p>Various minor optimizations for SHA-3 (GH #1433 #1434)</p></li>
<li><p>The output of <code class="docutils literal notranslate"><span class="pre">botan</span> <span class="pre">--help</span></code> has been improved (GH #1387)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">--der-format</span></code> flag to command line utils, making it possible verify
DSA/ECDSA signatures generated by OpenSSL command line (GH #1409)</p></li>
<li><p>Add support for <code class="docutils literal notranslate"><span class="pre">--library-suffix</span></code> option to <code class="docutils literal notranslate"><span class="pre">configure.py</span></code> (GH #1405 #1404)</p></li>
<li><p>Use feature flags to enable/disable system specific code (GH #1378)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">--msvc-runtime</span></code> option to allow using static runtime (GH #1499 #210)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">--enable-sanitizers=</span></code> option to allow specifying which sanitizers to
enable. The existing <code class="docutils literal notranslate"><span class="pre">--with-sanitizers</span></code> option just enables some default
set which is known to work with the minimum required compiler versions.</p></li>
<li><p>Use either <code class="docutils literal notranslate"><span class="pre">rst2man</span></code> or <code class="docutils literal notranslate"><span class="pre">rst2man.py</span></code> for generating man page as
distributions differ on where this program is installed (GH #1516)</p></li>
<li><p>The threefish module has been renamed threefish_512 since that is the
algorithm it provides. (GH #1477)</p></li>
<li><p>The Perl XS based wrapper has been removed, as it was unmaintained and
broken. (GH #1412)</p></li>
<li><p>The sqlite3 encryption patch under <code class="docutils literal notranslate"><span class="pre">contrib</span></code> has been removed. It
is still maintained by the original author at
<a class="reference external" href="https://github.com/OlivierJG/botansqlite3">https://github.com/OlivierJG/botansqlite3</a></p></li>
<li><p>Support for Windows Phone is deprecated.</p></li>
</ul>
</div>
<div class="section" id="version-2-4-0-2018-01-08">
<h2>Version 2.4.0, 2018-01-08<a class="headerlink" href="#version-2-4-0-2018-01-08" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Several build improvements requested by downstream packagers, including the
ability to disable building the static library. All makefile constructs that
were specific to nmake or GNU make have been eliminated, thus the option
<code class="docutils literal notranslate"><span class="pre">--makefile-style</span></code> which was previously used to select the makefile type has
also been removed. (GH #1230 #1237 #1300 #1318 #1319 #1324 #1325 #1346)</p></li>
<li><p>Support for negotiating the DH group as specified in RFC 7919 is now available
in TLS (GH #1263)</p></li>
<li><p>Support for ARIA-GCM ciphersuites are now available in TLS. They are disabled
by default. (GH #1284)</p></li>
<li><p>Add support for generating and verifying X.509 objects (certificates, CRLs,
etc) using RSA-PSS signatures (GH #1270 and #1368)</p></li>
<li><p>Add support for AES key wrapping with padding, as specified in RFC 5649 and
NIST SP 800-38F (GH #1301)</p></li>
<li><p>OCSP requests made during certificate verification had the potential to hang
forever. Now the sockets are non-blocking and a timeout is enforced. (GH #1360
fixing GH #1326)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">Public_Key::fingerprint_public</span></code> which allows fingerprinting the public key.
The previously available <code class="docutils literal notranslate"><span class="pre">Private_Key::fingerprint</span></code> is deprecated, now
<code class="docutils literal notranslate"><span class="pre">Private_Key::fingerprint_private</span></code> should be used if this is required.
(GH #1357)</p></li>
<li><p>ECC certificates generated by Botan used an invalid encoding for the
parameters field, which was rejected by some certificate validation libraries
notably BouncyCastle. (GH #1367)</p></li>
<li><p>Loading an ECC key which used OID encoding for the domain parameters, then
saving it, would result in a key using the explicit parameters encoding.
Now the OID encoding is retained. (GH #1365)</p></li>
<li><p>Correct various problems in certificate path validation that arose when
multiple paths could be constructed leading to a trusted root but due to
other constraints only some of them validated. (GH #1363)</p></li>
<li><p>It is now possible for certificate validation to return warning indicators,
such as that the distinguished name is not within allowed limits or that a
certificate with a negative serial number was observed. (GH #1363 #1359)</p></li>
<li><p>XMSS signatures now are multi-threaded for improved performance (GH #1267)</p></li>
<li><p>Fix a bug that caused the TLS peer cert list to be empty on a resumed session.
(GH #1303 #1342)</p></li>
<li><p>Increase the maximum HMAC key length from 512 bytes to 4096 bytes. This allows
using a DH key exchange in TLS with a group greater than 4096 bits. (GH #1316)</p></li>
<li><p>Fix a bug in the TLS server where, on receiving an SSLv3 client hello, it
would attempt to negotiate TLS v1.2. Now a protocol_version alert is sent.
Found with tlsfuzzer. (GH #1316)</p></li>
<li><p>Fix several bugs related to sending the wrong TLS alert type in various error
scenarios, caught with tlsfuzzer.</p></li>
<li><p>Add support for a <code class="docutils literal notranslate"><span class="pre">tls_http_server</span></code> command line utility which responds to
simple GET requests. This is useful for testing against a browser, or various
TLS test tools which expect the underlying protocol to be HTTP. (GH #1315)</p></li>
<li><p>Add an interface for generic PSK data stores, as well as an implementation
which encrypts stored values with AES key wrapping. (GH #1302)</p></li>
<li><p>Optimize GCM mode on systems both with and without carryless multiply
support. This includes a new base case implementation (still constant time), a
new SSSE3 implementation for systems with SSSE3 but not clmul, and better
algorithms for systems with clmul and pmull. (GH #1253 #1263)</p></li>
<li><p>Various optimizations for OCB, CFB, CTR, SM3, SM4, GMAC, BLAKE2b, Blowfish,
Twofish, CAST-128, and CRC24 (GH #1281)</p></li>
<li><p>Salsa20 now supports the seek operation.</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">EC_Group::known_named_groups</span></code> (GH #1339)</p></li>
<li><p>Symmetric algorithms (block ciphers, stream ciphers, MACs) now verify that a
key was set before accepting data. Previously attempting to use an unkeyed
object would instead result in either a crash or invalid outputs. (GH #1279)</p></li>
<li><p>The X509 certificate, CRL and PKCS10 types have been heavily refactored
internally. Previously all data of these types was serialized to strings, then
in the event a more complicated data structure (such as X509_DN) was needed,
it would be recreated from the string representation. However the round trip
process was not perfect and could cause fields to become lost. This approach
is no longer used, fixing several bugs (GH #1010 #1089 #1242 #1252). The
internal data is now stored in a <code class="docutils literal notranslate"><span class="pre">shared_ptr</span></code>, so copying such objects is
now very cheap. (GH #884)</p></li>
<li><p>ASN.1 string objects previously held their contents as ISO 8859-1 codepoints.
However this led to certificates which contained strings outside of this
character set (eg in Cyrillic, Greek, or Chinese) being rejected. Now the
strings are always converted to UTF-8, which allows representing any
character. In addition, UCS-4 strings are now supported.
(GH #1113 #1250 #1287 #1289)</p></li>
<li><p>It is now possible to create an uninitialized X509_Certificate object. Such an
object will throw if any attempt to access its members is made. (GH #1335)</p></li>
<li><p>In BER decoder, avoid unbounded stack recursion when parsing nested indefinite
length values. Now at most 16 nested indefinite length values are accepted,
anything deeper resulting in a decoding error.  (GH #1304 OSS-Fuzz 4353).</p></li>
<li><p>A new ASN.1 printer API allows generating a string representation of arbitrary
BER data. This is used in the <code class="docutils literal notranslate"><span class="pre">asn1print</span></code> command line utility and may be
useful in other applications, for instance for debugging.</p></li>
<li><p>New functions for bit rotations that distinguish rotating by a compile-time
constant vs a runtime variable rotation. This allows better optimizations in
both cases. Notably performance of CAST-128 and CAST-256 are substantially
improved. (GH #1247)</p></li>
<li><p>TLS CBC ciphersuites now are implemented using the standard CBC code, instead
of reimplementing CBC inside the TLS stack. This allows for parallel
decryption of TLS CBC ciphertexts, and improves performance especially when
using AES hardware support. (GH #1269)</p></li>
<li><p>Add callbacks to make it possible for an application using TLS to provide
custom implementations of signature schemes, eg when offloading the
computations to another device. (GH #1332)</p></li>
<li><p>Use a direct calculation for calendar computations instead of relying on
non-portable operating system interfaces. (GH #1336)</p></li>
<li><p>Fix a bug in the amalgamation generation which could cause build failures on
some systems including macOS. (GH #1264 #1265)</p></li>
<li><p>A particular code sequence in TLS handshake would always (with an ECC
ciphersuite) result in an exception being thrown and then caught.  This has
changed so no exception is thrown. (GH #1275)</p></li>
<li><p>The code for byteswapping has been improved for ARMv7 and for Windows x86-64
systems using MSVC. (GH #1274)</p></li>
<li><p>The GMAC class no longer derives from GHASH. This should not cause any
noticeable change for applications. (GH #1253)</p></li>
<li><p>The base implementation of AES now uses a single 4K table, instead of 4 such
tables. This offers a significant improvement against cache-based side
channels without hurting performance too much. In addition the table is now
guaranteed to be aligned on a cache line, which ensures the additional
countermeasure of reading each cache line works as expected. (GH #1255)</p></li>
<li><p>In TLS client resumption, avoid sending a OCSP stapling request. This caused
resumption failures with some servers. (GH #1276)</p></li>
<li><p>The overhead of making a call through the FFI layer has been reduced.</p></li>
<li><p>The IDs for SHA-3 PKCSv1.5 signatures added in 2.3.0 were incorrect. They have
been changed to use the correct encoding, and a test added to ensure such
errors do not recur.</p></li>
<li><p>Counter mode allows setting a configurable width of the counter. Previously it
was allowed for a counter of even 8 bits wide, which would mean the keystream
would repeat after just 256 blocks. Now it requires the width be at least 32
bits. The only way this feature could be used was by manually constructing a
<code class="docutils literal notranslate"><span class="pre">CTR_BE</span></code> object and setting the second parameter to something in the range
of 1 to 3.</p></li>
<li><p>A new mechanism for formatting ASN.1 data is included in <code class="docutils literal notranslate"><span class="pre">asn1_print.h</span></code>.
This is the same functionality used by the command line <code class="docutils literal notranslate"><span class="pre">asn1print</span></code> util,
now cleaned up and moved to the library.</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">Pipe::append_filter</span></code>. This is like the existing (deprecated)
<code class="docutils literal notranslate"><span class="pre">Pipe::append</span></code>, the difference being that <code class="docutils literal notranslate"><span class="pre">append_filter</span></code> only
allows modification before the first call to <code class="docutils literal notranslate"><span class="pre">start_msg</span></code>. (GH #1306 #1307)</p></li>
<li><p>The size of ASN1_Tag is increased to 32 bits. This avoids a problem
with UbSan (GH #751)</p></li>
<li><p>Fix a bug affecting bzip2 compression. In certain circumstances, compression
would fail with <code class="docutils literal notranslate"><span class="pre">BZ_SEQUENCE_ERROR</span></code> due to calling bzlib in an way it does
not support. (GH #1308 #1309)</p></li>
<li><p>In 2.3.0, final annotations were added to many classes including the TLS
policies (like <code class="docutils literal notranslate"><span class="pre">Strict_Policy</span></code> and <code class="docutils literal notranslate"><span class="pre">BSI_TR_02102_2</span></code>). However it is
reasonable and useful for an application to derive from one of these policies, so
as to create an application specific policy that is based on a library-provided
policy, but with a few tweaks. So the final annotations have been removed on
these classes. (GH #1292)</p></li>
<li><p>A new option <code class="docutils literal notranslate"><span class="pre">--with-pdf</span></code> enables building a PDF copy of the handbook.
(GH #1337)</p></li>
<li><p>A new option <code class="docutils literal notranslate"><span class="pre">--with-rst2man</span></code> enables building a man page for the
command line util using Docutils rst2man. (GH #1349)</p></li>
<li><p>Support for NEON is now enabled under Clang.</p></li>
<li><p>Now the compiler version is detected using the preprocessor, instead of trying
to parse the output of the compiler’s version string, which was subject to
problems with localization. (GH #1358)</p></li>
<li><p>By default the gzip compressor will not include a timestamp in the header.
The timestamp can be set by passing it to the <code class="docutils literal notranslate"><span class="pre">Gzip_Compression</span></code>
constructor.</p></li>
<li><p>Resolve a performance regression on Windows involving the system stats
entropy source. (GH #1369)</p></li>
<li><p>Add an OID for RIPEMD-160</p></li>
<li><p>Fixes for CMake build (GH #1251)</p></li>
<li><p>Avoid some signed overflow warnings (GH #1220 #1245)</p></li>
<li><p>As upstream support for Native Client has been deprecated by Google, support
is now also deprecated in Botan and will be removed in a future release.</p></li>
<li><p>The Perl-XS wrapper has not been maintained in many years. It is now deprecated,
and if no attempts are made to revive it, it will be removed in a future release.</p></li>
<li><p>Support for building on IRIX has been removed.</p></li>
</ul>
</div>
<div class="section" id="version-2-3-0-2017-10-02">
<h2>Version 2.3.0, 2017-10-02<a class="headerlink" href="#version-2-3-0-2017-10-02" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Address a side channel affecting modular exponentiation. An attacker
capable of a local or cross-VM cache analysis attack may be able
to recover bits of secret exponents as used in RSA, DH, etc.
CVE-2017-14737</p></li>
<li><p>Add the SHACAL2 block cipher, including optimizations using SIMD and SHA-NI
instructions. (GH #1151)</p></li>
<li><p>Add the ARIA block cipher (GH #1004 and #1157)</p></li>
<li><p>Add support for the ARMv8 AES instructions (GH #1182 and #1146)</p></li>
<li><p>Add support for the ARMv8 PMULL instruction (GH #1181 and #842)</p></li>
<li><p>On macOS and iOS the <code class="docutils literal notranslate"><span class="pre">System_RNG</span></code> class is now implemented using <code class="docutils literal notranslate"><span class="pre">arc4random</span></code>.
Previously the system RNG class was not available on iOS. (GH #1219)</p></li>
<li><p>Optimized the CMAC polynomial doubling operation, and removed a small timing
channel due to a conditional operation.</p></li>
<li><p>Added support for the ECDHE_PSK AEAD TLS ciphersuites from
draft-ietf-tls-ecdhe-psk-aead-05.</p></li>
<li><p>SM2 encryption and signature schemes were previously hardcoded to use SM3
hash, now any hash is allowed. (GH #1188)</p></li>
<li><p>SM2 encryption in 2.2.0 followed an obsolete version of the standard. The
format of the ciphertext changed in a more recent revision of the standard,
and now uses an ASN.1 encoding. Botan has changed to reflect this format,
which is compatible with GmSSL (GH #1218)</p></li>
<li><p>OCB mode now supports 192, 256 and 512 bit block ciphers. (GH #1205)</p></li>
<li><p>XTS mode now supports 256-bit and 512-bit block ciphers.</p></li>
<li><p>Add ids to allow SHA-3 signatures with PKCSv1.5 (GH #1184)</p></li>
<li><p>Add support for <code class="docutils literal notranslate"><span class="pre">PSSR_Raw</span></code> signatures which PSS sign an externally derived
hash. (GH #1212 #1211)</p></li>
<li><p>GCM now supports truncated tags in the range 96…128 bits. GCM had
previously supported 64-bit truncated tags, but these are known to
be insecure and are now deprecated. (GH #1210 #1207)</p></li>
<li><p>Add a new TLS policy hook <code class="docutils literal notranslate"><span class="pre">allow_client_initiated_renegotiation</span></code> which is the
parallel of the existing <code class="docutils literal notranslate"><span class="pre">allow_server_initiated_renegotiation</span></code>. If set to
false, servers will reject attempts by the client to renegotiation the
session, instead sending a <code class="docutils literal notranslate"><span class="pre">no_renegotiation</span></code> warning alert. Note that the
default is <code class="docutils literal notranslate"><span class="pre">false</span></code>, ie that client renegotiation is now prohibited by default.
(GH #872)</p></li>
<li><p>Add HKDF-Expand-Label function which is used in TLS v1.3 and QUIC protocols.
(GH #1226)</p></li>
<li><p>Fix decoding of ECC keys that use extensions from RFC 5915 (GH #1208)</p></li>
<li><p>The entropy source that called CryptGenRandom has been removed, and
replaced by a version which invokes the system PRNG, which may
be CryptGenRandom or some other source. (GH #1180)</p></li>
<li><p>Add support for gathering entropy using the Crypt-NG BCryptGenRandom
API. This is necessary to build for Windows Phone/Windows Store. (GH #1180)</p></li>
<li><p>Extend “Raw” signature padding (which allows signing a hash computed
externally) to optionally take a hash function name. In this case, it will be
verified that the input matches the expected hash size.  This also will
control the hash algorithm used for RFC 6979 deterministic nonces; previously
SHA-512 was always used for RFC 6979 nonces with “Raw”. (GH #1153)</p></li>
<li><p>The advertised FFI API version has increased. This should have happened
already in 2.2 but was neglected. The <code class="docutils literal notranslate"><span class="pre">botan_ffi_supports_api</span></code> call will
return true for either the current or older versions of the API version since
no backwards incompatible changes have occurred.</p></li>
<li><p>Add new C89 API functions <code class="docutils literal notranslate"><span class="pre">botan_hex_decode</span></code>, <code class="docutils literal notranslate"><span class="pre">botan_base64_encode</span></code>,
<code class="docutils literal notranslate"><span class="pre">botan_base64_decode</span></code>, <code class="docutils literal notranslate"><span class="pre">botan_constant_time_compare</span></code>.</p></li>
<li><p>Add new C89 API functions <code class="docutils literal notranslate"><span class="pre">botan_privkey_load_dh</span></code>, <code class="docutils literal notranslate"><span class="pre">botan_pubkey_load_dh</span></code>,
and <code class="docutils literal notranslate"><span class="pre">botan_privkey_create_dh</span></code> (GH #1155)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">is_passhash9_alg_supported</span></code> (GH #1154)</p></li>
<li><p>The <code class="docutils literal notranslate"><span class="pre">power_mod</span></code> function now supports negative bases (GH #1179 #1168)</p></li>
<li><p>Add a new command line utility for examining TLS client hellos.</p></li>
<li><p>Added a new target for LLVM bitcode (GH #1169)</p></li>
<li><p>Improve support for Windows Phone (GH #1180 #796 #794)</p></li>
<li><p>Correct return value of <code class="docutils literal notranslate"><span class="pre">botan_pk_op_verify_finish</span></code>. In 2.2.0 this function
returned -1 on invalid signature, instead of 1 which was used in 2.0, 2.1, and
now again in 2.3. (GH #1189 #1187)</p></li>
<li><p>Allow loading unencrypted private keys via FFI API (GH #1197)</p></li>
<li><p>Add new command line options <code class="docutils literal notranslate"><span class="pre">--rng-type=drbg</span></code> and <code class="docutils literal notranslate"><span class="pre">--drbg-seed</span></code> which
allow running commands with a deterministic RNG. (GH #1169)</p></li>
<li><p>Fix a number of warnings seen under Visual C++ (GH #1171 #795)</p></li>
<li><p>Workaround a GCC 7 bug that caused miscompilation of the GOST-34.11 hash
function on x86-32. (GH #882 #1148)</p></li>
<li><p>Fix a bug in SIMD_4x32 which affected little-endian PowerPC processors.
This would cause test failures for Serpent, among other problems.</p></li>
<li><p>Fix Altivec runtime detection, which was broken starting in Botan 2.1.0</p></li>
<li><p>Optimized the verification of TLS CBC padding bytes. Previously the check
examined every byte of the record, even though at most 256 bytes of padding
may be appended. (GH #1227)</p></li>
<li><p>Simplified definition of <code class="docutils literal notranslate"><span class="pre">Botan::secure_allocator</span></code>. In particular, not
defining the <code class="docutils literal notranslate"><span class="pre">construct</span></code> and <code class="docutils literal notranslate"><span class="pre">destroy</span></code> methods avoids a performance problem
under MSVC. (GH #1228 and #1229)</p></li>
<li><p>The <code class="docutils literal notranslate"><span class="pre">secure_allocator</span></code> class now uses <code class="docutils literal notranslate"><span class="pre">calloc</span></code> and <code class="docutils literal notranslate"><span class="pre">free</span></code> instead of
<code class="docutils literal notranslate"><span class="pre">new</span></code> and <code class="docutils literal notranslate"><span class="pre">delete</span></code>. In addition the actual allocation operation is hidden
inside of compiled functions, which significantly reduces code size. (GH #1231)</p></li>
<li><p>The <code class="docutils literal notranslate"><span class="pre">secure_scrub_memory</span></code> function now uses <code class="docutils literal notranslate"><span class="pre">explicit_bzero</span></code> on OpenBSD.</p></li>
<li><p>Previously ARM feature detection (NEON, AES, …) relied on getauxval, which
is only supported on Linux and Android. Now iOS is supported, by checking the
model name/version and matching it against known versions. Unfortunately this
is the best available technique on iOS. On Aarch64 systems that are not iOS or
Linux/Android, a technique based on trial execution while catching SIGILL is
used. (GH #1213)</p></li>
<li><p>The output of <code class="docutils literal notranslate"><span class="pre">botan</span> <span class="pre">config</span> <span class="pre">libs</span></code> was incorrect, it produced <code class="docutils literal notranslate"><span class="pre">-lbotan-2.X</span></code>
where X is the minor version, instead of the actual lib name <code class="docutils literal notranslate"><span class="pre">-lbotan-2</span></code>.</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">constant_time_compare</span></code> as better named equivalent of <code class="docutils literal notranslate"><span class="pre">same_mem</span></code>.</p></li>
<li><p>Silence a Clang warning in <code class="docutils literal notranslate"><span class="pre">create_private_key</span></code> (GH #1150)</p></li>
<li><p>The fuzzers have been better integrated with the main build. See the
handbook for details. (GH #1158)</p></li>
<li><p>The Travis CI and AppVeyor CI builds are now run via a Python script. This
makes it easier to replicate the behavior of the CI build locally. Also a
number of changes were made to improve the turnaround time of CI builds.
(GH #1162 #1199)</p></li>
<li><p>Add support for Win32 filesystem operation, so the tests pass completely
on MinGW now (GH #1203)</p></li>
<li><p>Added a script to automate running TLS-Attacker tests.</p></li>
<li><p>The distribution script now creates reproducible outputs, by
forcing all modification times, uids, etc to values fixed by the release date.
(GH #1217)</p></li>
<li><p>The <code class="docutils literal notranslate"><span class="pre">BOTAN_DLL</span></code> macro has been split up into <code class="docutils literal notranslate"><span class="pre">BOTAN_PUBLIC_API</span></code>,
<code class="docutils literal notranslate"><span class="pre">BOTAN_UNSTABLE_API</span></code> and <code class="docutils literal notranslate"><span class="pre">BOTAN_TEST_API</span></code> which allows
indicating in the header the API stability of the export. All three
are defined as <code class="docutils literal notranslate"><span class="pre">BOTAN_DLL</span></code> so overriding just that macro continues
to work as before. (GH #1216)</p></li>
<li><p>Optimize <code class="docutils literal notranslate"><span class="pre">bigint_divop</span></code> when a double-word type is available. (GH #494)</p></li>
<li><p>Fix several memory leaks in the tests. Additionally a false positive
leak seen under <code class="docutils literal notranslate"><span class="pre">valgrind</span></code> in the <code class="docutils literal notranslate"><span class="pre">fork</span></code> tests for the RNG was resolved.</p></li>
<li><p>Export <code class="docutils literal notranslate"><span class="pre">CurveGFp_Repr</span></code> type (only used internally) to resolve a
long standing UBSan warning. (GH #453)</p></li>
<li><p>Now <code class="docutils literal notranslate"><span class="pre">-fstack-protector</span></code> and similar flags that affect linking are exported
in <code class="docutils literal notranslate"><span class="pre">botan</span> <span class="pre">config</span> <span class="pre">ldflags</span></code> as they already were in the <code class="docutils literal notranslate"><span class="pre">pkg-config</span></code> output.
(GH #863)</p></li>
<li><p>Remove double underscore in header guards to avoid using names
reserved by ISO C++. (GH #512)</p></li>
<li><p>Additions to the SRP documentation (GH #1029)</p></li>
<li><p>The package transform (in <code class="docutils literal notranslate"><span class="pre">package.h</span></code>) is now deprecated, and will be
removed in a future release. (GH #1215)</p></li>
<li><p>Add more tests for the const-time utils (GH #1214)</p></li>
<li><p>Fix a bug in FFI tests that caused the test files not to be found when using
<code class="docutils literal notranslate"><span class="pre">--data-dir</span></code> option (GH #1149)</p></li>
<li><p>C++ <code class="docutils literal notranslate"><span class="pre">final</span></code> annotations have been added to classes which are not
intended for derivation. This keyword was already in use but was not
applied consistently.</p></li>
<li><p>A typedef <code class="docutils literal notranslate"><span class="pre">SecureVector</span></code> has been added for the <code class="docutils literal notranslate"><span class="pre">secure_vector</span></code> type.
This makes porting code from 1.10 to 2.x API slightly simpler.</p></li>
<li><p>Header files have been cleaned up to remove unnecessary inclusions. In some
cases it may be required to include additional botan headers to get all the
declarations that were previously visible. For example, <code class="docutils literal notranslate"><span class="pre">bigint.h</span></code> no longer
includes <code class="docutils literal notranslate"><span class="pre">rng.h</span></code>, but just forward declares <code class="docutils literal notranslate"><span class="pre">RandomNumberGenerator</span></code>.</p></li>
<li><p>Improved support for IBM xlc compiler.</p></li>
</ul>
</div>
<div class="section" id="version-2-2-0-2017-08-07">
<h2>Version 2.2.0, 2017-08-07<a class="headerlink" href="#version-2-2-0-2017-08-07" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Add the Ed25519 signature scheme (GH #1066)</p></li>
<li><p>The format of x25519 keys, which previously used a non-standard encoding,
has changed to match the upcoming IETF specification. (GH #1076)</p></li>
<li><p>Add the SM2 signature scheme (GH #1082)</p></li>
<li><p>Add the SM2 public key encryption scheme (GH #1142)</p></li>
<li><p>Add the SM3 hash function (GH #996)</p></li>
<li><p>Add the Streebog (GOST R 34.11-2012) hash function (GH #1114)</p></li>
<li><p>Add the SM4 block cipher (GH #1080)</p></li>
<li><p>Add the PGP S2K algorithm (GH #1060)</p></li>
<li><p>Add SP 800-56A KDF (GH #1040)</p></li>
<li><p>Add ChaCha_RNG which is a very fast and completely non-standard
random bit generator (GH #1137)</p></li>
<li><p>Add support for SHA-1 and SHA-2 instructions added in Intel Goldmont
(GH #826)</p></li>
<li><p>Add support for SHA-1 and SHA-2 instructions added in ARMv8 (GH #844)</p></li>
<li><p>Add support for HOTP (RFC 4226) and TOTP (RFC 6238)
one-time-password algorithms (GH #1054)</p></li>
<li><p>Fix a bug that caused secure_allocator to not fully zeroize blocks
when sizeof(T) was greater than 1.</p></li>
<li><p>Add HashFunction::copy_state which allows efficiently computing the
hash of several messages with a common prefix (GH #1056 #1037)</p></li>
<li><p>ECC keys now encode their parameters using an OID instead of a literal
encoding of the domain parameters. This will lead to smaller public and
private keys in most instances. (GH #1093)</p></li>
<li><p>The OpenSSL backend now supports the 1.1.0 API (GH #1056)</p></li>
<li><p>Add a preliminary provider using BearSSL, currently EC and hashes supported
(GH #1094)</p></li>
<li><p>Fix a bug in certificate path length checking that could cause valid
chains to be rejected. (GH #1053)</p></li>
<li><p>It is possible for CBC, CFB, and stream ciphers to carry over the
nonce from the previous message, which is needed by some applications.
This worked in 1.10 but broke in 2.0. (GH #1044 fixing GH #864)</p></li>
<li><p>Avoid recursion in BER_Decoder::get_next_object which could cause
stack exhaustion. (GH #989)</p></li>
<li><p>Fix missing flush in DataSink_Stream::end_msg. (GH #972 fixing GH #972)</p></li>
<li><p>Allow to seek in the big endian counter mode of operation (GH #999)</p></li>
<li><p>Support loading ElGamal keys through FFI interface (GH #1008)</p></li>
<li><p>Support Windows sockets in <code class="docutils literal notranslate"><span class="pre">http_util</span></code> (allowing OCSP checks on Windows),
as well as in the TLS command line utils (GH #1138).</p></li>
<li><p>The <code class="docutils literal notranslate"><span class="pre">--destdir</span></code> flag to <code class="docutils literal notranslate"><span class="pre">configure.py</span></code> has been removed. Instead use
the <code class="docutils literal notranslate"><span class="pre">DESTDIR</span></code> environment variable at install time. This change was
done to more closely match how autoconf handles this case.
(GH #1139 #1111 #997 #996).</p></li>
<li><p>Many changes to configure.py and botan2.py to make them pylint clean
(GH #1041 #1002 #984)</p></li>
<li><p>Add command line utils <code class="docutils literal notranslate"><span class="pre">hmac</span></code> (GH #1001), <code class="docutils literal notranslate"><span class="pre">encryption</span></code> (GH #359),
<code class="docutils literal notranslate"><span class="pre">hex_enc</span></code>, and <code class="docutils literal notranslate"><span class="pre">hex_dec</span></code>.</p></li>
<li><p>Fix an error in <code class="docutils literal notranslate"><span class="pre">sign_cert</span></code> command line util, which ignored the
<code class="docutils literal notranslate"><span class="pre">--ca-key-pass</span></code> option. (GH #1106)</p></li>
<li><p>The <code class="docutils literal notranslate"><span class="pre">speed</span></code> util can now benchmark multiple buffer sizes (GH #1084)</p></li>
<li><p>Fix return value of FFI botan_bcrypt_is_valid (GH #1033)</p></li>
<li><p>Support generating RSA keys using OpenSSL (GH #1035)</p></li>
<li><p>Add new FFI functions botan_hash_block_size (GH #1036),
botan_hash_copy_state (GH #1059), botan_scrub_mem</p></li>
<li><p>Add support for RFC 3394 keywrap through FFI (GH #1135)</p></li>
<li><p>Support AES-CBC ciphers via OpenSSL (GH #1022)</p></li>
<li><p>Add function to return certificates included in OCSP response (GH #1123)</p></li>
<li><p>Complete wildcard handling for X.509 certificates (GH #1017)</p></li>
<li><p>Add some missing functions to TLS::Text_Policy (GH #1023)</p></li>
<li><p>It was previously possible to use <code class="docutils literal notranslate"><span class="pre">--single-amalgamation-file</span></code>
without <code class="docutils literal notranslate"><span class="pre">--amalgamation</span></code>, though it did not do anything useful. Now
<code class="docutils literal notranslate"><span class="pre">--single-amalgamation-file</span></code> requires <code class="docutils literal notranslate"><span class="pre">--amalgamation</span></code> also be set
on the command line.</p></li>
</ul>
</div>
<div class="section" id="version-2-1-0-2017-04-04">
<h2>Version 2.1.0, 2017-04-04<a class="headerlink" href="#version-2-1-0-2017-04-04" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Fix incorrect truncation in Bcrypt. Passwords in length between 56 and 72
characters were truncated at 56 characters. Found and reported by Solar Designer.
(CVE-2017-7252) (GH #938)</p></li>
<li><p>Fix a bug in X509 DN string comparisons that could result in out of bound
reads. This could result in information leakage, denial of service, or
potentially incorrect certificate validation results. Found independently
by Cisco Talos team and OSS-Fuzz. (CVE-2017-2801)</p></li>
<li><p>Correct minimum work factor for Bcrypt password hashes. All other
implementations require the work factor be at least 4. Previously Botan simply
required it be greater than zero. (GH #938)</p></li>
<li><p>Converge on a single side channel silent EC blinded multiply algorithm.
Uses Montgomery ladder with order/2 bits scalar blinding and point randomization
now by default. (GH #893)</p></li>
<li><p>Add ability to search for certificates using the SHA-256 of the distinguished name.
(GH #900)</p></li>
<li><p>Support a 0-length IV in ChaCha stream cipher. Such an IV is treated
identically to an 8-byte IV of all zeros.</p></li>
<li><p>Add new interfaces to the C API including multiple precision integers, key
validity tests, block ciphers, and extracting algorithm specific key parameters
(such as the modulus and public exponent from RSA public keys). GH #899 #944
#946 #961 #964</p></li>
<li><p>The PKCS11 module did not require any external dependencies, so it
has been enabled by default. The <code class="docutils literal notranslate"><span class="pre">--with-pkcs11</span></code> and <code class="docutils literal notranslate"><span class="pre">--without-pkcs11</span></code>
flags to <code class="docutils literal notranslate"><span class="pre">configure.py</span></code> have been removed. PKCS11 can still be disabled
using <code class="docutils literal notranslate"><span class="pre">--disable-modules=pkcs11</span></code> (GH #837)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">OS::run_cpu_instruction_probe</span></code> for runtime probing of ISA extensions.
Supporting this requires system-specific techniques, currently Windows SEH and
Unix signal handling are supported.</p></li>
<li><p>Add support for ARM NEON in the SIMD_4x32 type</p></li>
<li><p>Add support for ARM CPU feature detection using getauxval (GH #843)</p></li>
<li><p>Previously Botan forbid any use of times past 2037 to avoid Y2038 issues.
Now this restriction is only in place on systems which have a 32-bit
<code class="docutils literal notranslate"><span class="pre">time_t</span></code>. (GH #933 fixing #917)</p></li>
<li><p>Add generic type decoder function to BER decoder (GH #897)</p></li>
<li><p>Fix portability or build problems affecting Sun Studio compiler (GH #846),
Solaris, ppc64le, DragonflyBSD (GH #887)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">--with-external-libdir</span></code> to configure.py (GH #857 fixing #19 #767)</p></li>
<li><p>Add <code class="docutils literal notranslate"><span class="pre">OS::get_high_resolution_clock</span></code> which returns the best resolution
clock available on the system.</p></li>
<li><p>Change <code class="docutils literal notranslate"><span class="pre">OS::get_processor_timestamp</span></code> to return 0 if no hardware
cycle counter is available. Previously it silently fell back on some
other clock type.</p></li>
<li><p>Report cycles/byte in the output of <code class="docutils literal notranslate"><span class="pre">botan</span> <span class="pre">speed</span></code>.</p></li>
<li><p>Add speed tests for modular exponentiations and ECC scalar multiplies.</p></li>
<li><p>Avoid using IP address for SNI in <code class="docutils literal notranslate"><span class="pre">tls_client</span></code>. (GH #942)</p></li>
<li><p>Add command line util <code class="docutils literal notranslate"><span class="pre">timing_test</span></code> which enables running
timing-based side channel analysis of TLS CBC decryption, ECC scalar
multiplies, OAEP decoding, and other operations which are prone to
providing an oracle via side channel. This replaces the standalone
timing test suite added in 1.11.34, which has been removed.</p></li>
<li><p>Various cleanups and refactorings (GH #965)</p></li>
<li><p>Add wrapper of C++14 make_unique (GH #974)</p></li>
<li><p>Fix pkg-config output when –build-dir was used (GH #936)</p></li>
<li><p>Make it possible to disable <cite>-fstack-protector</cite> using a build-time flag.
GH #863</p></li>
<li><p>Add tests for TLS DSA ciphersuites, more Noekeon tests, others.</p></li>
<li><p>Avoid a GCC warning that triggered on the public key types (GH #849)</p></li>
<li><p>Fix various warnings flagged by pylint and pyflakes linters in
configure.py and botan.py (GH #832 #836 #839 #962 #975)</p></li>
<li><p>Improve support for OpenBSD including using getentropy (GH #954)
for PRNG seeding, and arc4random to access system RNG (GH #953)</p></li>
<li><p>Add ability to build through CMake. As of now this is only supported
for development rather than production builds. (GH #967)</p></li>
<li><p>Rename python wrapper to botan2.py (GH #847)</p></li>
<li><p>Change name constraint test to use a fixed reference time. Test certs have expired.</p></li>
<li><p>Increase Miller-Rabin iterations for DSA primes to match FIPS 186-4. (GH #881)</p></li>
<li><p>Fix possible ISO 9796-2 padding side channel, and add a missing length check (GH #891)</p></li>
<li><p>In command line utility, prefer the system RNG if it is available.</p></li>
</ul>
</div>
<div class="section" id="version-2-0-1-2017-01-09">
<h2>Version 2.0.1, 2017-01-09<a class="headerlink" href="#version-2-0-1-2017-01-09" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>Change an unintended behavior of 2.0.0, which named the include
directory <code class="docutils literal notranslate"><span class="pre">botan-2.0</span></code>. Since future release of Botan-2 should be
compatible with code written against old versions, there does not
seem to be any reason to version the include directory with the
minor number. (GH #830 #833)</p></li>
<li><p>Fix a bug which caused an error when building on Cygwin or
other platforms where shared libraries are not supported.
(GH #821)</p></li>
<li><p>Enable use of readdir on Cygwin, which allows the tests to run (GH #824)</p></li>
<li><p>Switch to readthedocs Sphinx theme by default (GH #822 #823)</p></li>
</ul>
</div>
<div class="section" id="version-2-0-0-2017-01-06">
<h2>Version 2.0.0, 2017-01-06<a class="headerlink" href="#version-2-0-0-2017-01-06" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>With this release the project adopts Semantic Versioning (GH #766)</p></li>
<li><p>Fix a longstanding bug in modular exponentiation which caused most
exponentiations modulo an even number to have an incorrect result; such moduli
occur only rarely in cryptographic contexts. (GH #754)</p></li>
<li><p>Fix a bug in BigInt multiply operation, introduced in 1.11.30, which could
cause incorrect results. Found by OSS-Fuzz fuzzing the ressol function, where
the bug manifested as an incorrect modular exponentiation. OSS-Fuzz bug #287</p></li>
<li><p>Fix a bug that meant the “ietf/modp/6144” and “ietf/modp/8192” discrete log
groups used an incorrect value for the generator, specifically the value
(p-1)/2 was used instead of the correct value of 2.</p></li>
<li><p>The DL_Group enum value X942_DH_PARAMETERS has been renamed
ANSI_X9_42_DH_PARAMETERS to avoid a conflict with Windows headers (GH #482)</p></li>
<li><p>Change default PEM header for X942 DH to match OpenSSL. Either version is
accepted on reading. (GH #818)</p></li>
<li><p>DL_Group strong generation previously set the generator to 2. However
sometimes 2 generates the entire group mod p, rather than the subgroup mod q.
This is invalid by X9.42 standard, and exposes incautious applications to
small subgroup attacks. Now DL_Group uses the smallest g which is a quadratic
residue. (GH #818)</p></li>
<li><p>Add iOS build target instead of piggybacking on OS X configuration. (GH #793)</p></li>
<li><p>Changes all Public_Key derived class ctors to take a std::vector instead of a
secure_vector for the DER encoded public key bits. (GH #768)</p></li>
<li><p>Allow use of custom extensions when creating X.509 certificates (GH #744)</p></li>
<li><p>The default TLS policy now requires 2048 or larger DH groups by default.</p></li>
<li><p>Add BSI_TR_02102_2 TLS::Policy subclass representing BSI TR-02102-2 recommendations.</p></li>
<li><p>The default Path_Validation_Restrictions constructor has changed to
require at least 110 bit signature strength. This means 1024 bit RSA
certificates and also SHA-1 certificates are rejected by default.
Both settings were already the default for certificate validation in
TLS handshake, but this changes it for applications also.</p></li>
<li><p>Add ISO 9796-2 signature padding schemes DS2 and DS3. These schemes provide
message recovery (part or all of the plaintext message can be recovered from
the signature alone) and are used by some industry protocols. (GH #759)</p></li>
<li><p>Rewrite all the code that handles parsing CBC padding bytes to run without
conditional jumps or loads. (GH #765 #728)</p></li>
<li><p>Fix deref of invalid memory location in TLS client when the server chooses a
ciphersuite value larger than the largest TLS ciphersuite ID compiled into the
table. This might conceivably cause a crash in rare circumstances, but does
not seem to be further exploitable. (GH #758)</p></li>
<li><p>Rename Public_Key::x509_subject_public_key, which does not return a
X.509 SubjectPublicKey, to public_key_bits. Add a new non-virtual function
Public_Key::subject_public_key which does exactly that. (GH #685 #757)</p></li>
<li><p>Rename Private_Key::pkcs8_private_key, which does not return a
PKCS#8 private key, to private_key_bits. Add a new non-virtual function
Private_Key::private_key_info which does exactly that. (GH #685 #757)</p></li>
<li><p>The deprecated ECB Cipher_Mode class has been removed (GH #756)</p></li>
<li><p>The class SRP6_Authenticator_File (in srp6_files.h) was meant to parse GnuTLS
SRP files. But it was completely untested, and it turns out due to several
problems it was completely unable to parse any SRP file correctly. It has
been removed, with a future replacement planned that can handle both
flat files (in the actual SRP format) or using a SQL database.</p></li>
<li><p>Fix tests errors when write access to /dev/urandom is prohibited (GH #748)</p></li>
<li><p>Add more Diffie-Hellman tests (GH #790), tests for RSA blinding, others.</p></li>
<li><p>Add <cite>tls_ciphers</cite> command which prints the ciphersuites a client
hello will contain, depending on the policy specified.</p></li>
<li><p>Prevent TLS from negotiating SHA-2 ciphersuites in TLS v1.0/v1.1. These
ciphersuites are technically not defined except for v1.2, so disable
them in older protocols. (GH #496)</p></li>
<li><p>Documentation: add project goals (GH #788) and side channel info (GH #787)</p></li>
</ul>
</div>
<div class="section" id="older-versions">
<h2>Older Versions<a class="headerlink" href="#older-versions" title="Permalink to this headline">¶</a></h2>
<ul class="simple">
<li><p>The release notes for versions 0.7.0 through 1.11.34 can be found in
<code class="docutils literal notranslate"><span class="pre">doc/old_news.rst</span></code></p></li>
</ul>
</div>
</div>


            <div class="clearer"></div>
          </div>
        </div>
      </div>
        </div>
        <div class="sidebar">
          
          <h3>Table of Contents</h3>
          <ul class="current">
<li class="toctree-l1"><a class="reference internal" href="index.html">Botan: Crypto and TLS for Modern C++</a></li>
<li class="toctree-l1 current"><a class="current reference internal" href="#">Release Notes</a><ul>
<li class="toctree-l2"><a class="reference internal" href="#version-2-18-2-2021-10-25">Version 2.18.2, 2021-10-25</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-18-1-2021-05-09">Version 2.18.1, 2021-05-09</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-18-0-2021-04-15">Version 2.18.0, 2021-04-15</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-17-3-2020-12-21">Version 2.17.3, 2020-12-21</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-17-2-2020-11-13">Version 2.17.2, 2020-11-13</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-17-1-2020-11-07">Version 2.17.1, 2020-11-07</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-17-0-2020-11-05">Version 2.17.0, 2020-11-05</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-16-0-2020-10-06">Version 2.16.0, 2020-10-06</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-15-0-2020-07-07">Version 2.15.0, 2020-07-07</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-14-0-2020-04-06">Version 2.14.0, 2020-04-06</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-13-0-2020-01-06">Version 2.13.0, 2020-01-06</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-12-1-2019-10-14">Version 2.12.1, 2019-10-14</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-12-0-2019-10-07">Version 2.12.0, 2019-10-07</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-11-0-2019-07-01">Version 2.11.0, 2019-07-01</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-10-0-2019-03-30">Version 2.10.0, 2019-03-30</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-9-0-2019-01-04">Version 2.9.0, 2019-01-04</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-8-0-2018-10-01">Version 2.8.0, 2018-10-01</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-7-0-2018-07-02">Version 2.7.0, 2018-07-02</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-6-0-2018-04-10">Version 2.6.0, 2018-04-10</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-5-0-2018-04-02">Version 2.5.0, 2018-04-02</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-4-0-2018-01-08">Version 2.4.0, 2018-01-08</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-3-0-2017-10-02">Version 2.3.0, 2017-10-02</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-2-0-2017-08-07">Version 2.2.0, 2017-08-07</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-1-0-2017-04-04">Version 2.1.0, 2017-04-04</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-0-1-2017-01-09">Version 2.0.1, 2017-01-09</a></li>
<li class="toctree-l2"><a class="reference internal" href="#version-2-0-0-2017-01-06">Version 2.0.0, 2017-01-06</a></li>
<li class="toctree-l2"><a class="reference internal" href="#older-versions">Older Versions</a></li>
</ul>
</li>
<li class="toctree-l1"><a class="reference internal" href="security.html">Security Advisories</a></li>
<li class="toctree-l1"><a class="reference external" href="https://botan.randombit.net/handbook">User Guide</a></li>
<li class="toctree-l1"><a class="reference external" href="https://botan.randombit.net/doxygen">API Reference</a></li>
</ul>

          <div role="search">
            <h3 style="margin-top: 1.5em;">Search</h3>
            <form class="search" action="search.html" method="get">
                <input type="text" name="q" />
                <input type="submit" value="Go" />
            </form>
          </div>

        </div>
        <div class="clearer"></div>
      </div>
    </div>

    <div class="footer-wrapper">
      <div class="footer">
        <div class="left">
          <div role="navigation" aria-label="related navigaton">
            <a href="index.html" title="Botan: Crypto and TLS for Modern C++"
              accesskey="P">previous</a> |
            <a href="security.html" title="Security Advisories"
              accesskey="N">next</a> |
            <a href="genindex.html" title="General Index"
              accesskey="I">index</a>
          </div>
          <div role="note" aria-label="source link">
          </div>
        </div>

        <div class="right">
          
    <div class="footer" role="contentinfo">
      Last updated on 2021-10-25.
    </div>
        </div>
        <div class="clearer"></div>
      </div>
    </div>

  </body>
</html>