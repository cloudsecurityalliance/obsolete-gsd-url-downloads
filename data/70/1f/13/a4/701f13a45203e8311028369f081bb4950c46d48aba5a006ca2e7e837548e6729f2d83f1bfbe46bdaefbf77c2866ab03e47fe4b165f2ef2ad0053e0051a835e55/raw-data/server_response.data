<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
                      "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
  <head>
    <title>Bug 1159740 &ndash; VUL-0: CVE-2020-8016: texlive-filesystem: sticky bit for dirs like /var/lib/texmf/fonts, race condition in spec file</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link rel="Top" href="https://bugzilla.suse.com/">

  


  
    <link rel="Show" title="Dependency Tree"
          href="showdependencytree.cgi?id=1159740&amp;hide_resolved=1">
      <link rel="Show" title="Dependency Graph"
            href="showdependencygraph.cgi?id=1159740">

      <link rel="Show" title="Bug Activity"
            href="show_activity.cgi?id=1159740">
      <link rel="Show" title="Printer-Friendly Version"
            href="show_bug.cgi?format=multiple&amp;id=1159740">



    
    <link href="skins/standard/global.css?1411227340"
          rel="alternate stylesheet" 
          title="Classic"><link href="js/yui/assets/skins/sam/autocomplete.css?1411227331" rel="stylesheet"
            type="text/css" ><link href="js/yui/assets/skins/sam/calendar.css?1411227331" rel="stylesheet"
            type="text/css" ><link href="skins/standard/global.css?1411227340" rel="stylesheet"
            type="text/css" ><link href="skins/standard/show_bug.css?1416528352" rel="stylesheet"
            type="text/css" ><link href="extensions/Voting/web/style.css?1411227348" rel="stylesheet"
            type="text/css" ><!--[if lte IE 7]>
      


      <link href="skins/standard/IE-fixes.css?1411227340" rel="stylesheet"
            type="text/css" >
<![endif]-->

    <link href="skins/contrib/SUSE/global.css?1411227340" rel="stylesheet"
            type="text/css" 
          title="SUSE">

    

    

    
<script type="text/javascript" src="js/yui/yahoo-dom-event/yahoo-dom-event.js?1411227335"></script><script type="text/javascript" src="js/yui/cookie/cookie-min.js?1411227333"></script><script type="text/javascript" src="js/yui/datasource/datasource-min.js?1411227329"></script><script type="text/javascript" src="js/yui/connection/connection-min.js?1411227329"></script><script type="text/javascript" src="js/yui/json/json-min.js?1411227333"></script><script type="text/javascript" src="js/yui/autocomplete/autocomplete-min.js?1411227334"></script><script type="text/javascript" src="js/yui/calendar/calendar-min.js?1411227335"></script><script type="text/javascript" src="js/global.js?1411227336"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    'You must enter a Description for this attachment.',
                component_required:
                    'You must select a Component for this bug.',
                description_required:
                    'You must enter a Description for this bug.',
                short_desc_required:
                    'You must enter a Summary for this bug.',
                version_required:
                    'You must select a Version for this bug.'
            }
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null, 
                             "Bug 1159740 – VUL-0: CVE-2020-8016: texlive-filesystem: sticky bit for dirs like \/var\/lib\/texmf\/fonts, race condition in spec file",  
                             "show_bug.cgi?id=1159740" );
        document.title = "Bug 1159740 – VUL-0: CVE-2020-8016: texlive-filesystem: sticky bit for dirs like \/var\/lib\/texmf\/fonts, race condition in spec file";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "Bug 1159740 – VUL-0: CVE-2020-8016: texlive-filesystem: sticky bit for dirs like \/var\/lib\/texmf\/fonts, race condition in spec file", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();
    });
    // -->
    </script>
<script type="text/javascript" src="js/util.js?1411227336"></script><script type="text/javascript" src="js/field.js?1414105521"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico" ><link href="extensions/Testopia/css/testopia.css" rel="stylesheet" type="text/css">
    <link href="extensions/Testopia/extjs/examples/ux/css/RowEditor.css" rel="stylesheet" type="text/css"  />
    <script type="text/javascript">
        Testopia_user = {login: "", id: 0};
        DEFAULT_CASE_STATUS = 'CONFIRMED';
    </script>
  </head>



  <body onload=""
        class="bugzilla-suse-com bz_bug bz_status_RESOLVED bz_product_SUSE_Security_Incidents bz_component_Incidents bz_bug_1159740 yui-skin-sam">



<div id="header">
<div id="banner">
  </div>

<!--div id="tmp_warning_wnd" style="
    position:fixed; 
    color:red; 
    font-size:20px; 
    top:50px; 
    left:10%; 
    right:10%; 
    padding:1em;
    background-color:#ffffff;
    border:3px solid red;
    z-index:9999;
    text-align:center;">
  This Bugzilla is for TESTING ONLY. All new bugs and comments WILL BE LOST. Use <a href="https://bugzilla.suse.com">bugzilla.suse.com</a> instead.
  <button style="
      background:none;
      border:0;
      box-shadow:none;
      color:red;
      text-shadow:none;
      position:absolute;
      right:0;
      top:0;" onclick="document.getElementById('tmp_warning_wnd').style.display='none';">[X]</button>
</div-->

<table border="0" cellspacing="0" cellpadding="0" id="titles">
<tr>
    <td id="title">
      <p>Bugzilla &ndash; Bug&nbsp;1159740</p>
    </td>

    <td id="subtitle">
      <p class="subheader">VUL-0: CVE-2020-8016: texlive-filesystem: sticky bit for dirs like /var/lib/texmf/fonts, race condition in spec file</p>
    </td>

    <td id="information">
      <p class="header_addl_info">Last modified: 2020-07-09 14:31:26 UTC</p>
    </td>
</tr>
</table>

<table id="lang_links_container" cellpadding="0" cellspacing="0"
       class="bz_default_hidden"><tr><td>
</td></tr></table>
<ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li>
      <span class="separator">| </span>
        <a href="request.cgi">Requests</a></li>

  <li>
        <span class="separator">| </span>
        <a href="docs/en/html/bug_page.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <!--a id="login_link_top" href="show_bug.cgi?id=1159740&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a-->
  <a id="login_link_top" href="show_bug.cgi?id=1159740&amp;GoAheadAndLogIn=1">Log In</a>


  <form action="show_bug.cgi?id=1159740" method="POST" 
        class="mini_login bz_default_hidden"
        id="mini_login_top"
        onsubmit="return check_mini_login_fields( '_top' );"
  >
    <input id="Bugzilla_login_top" 
           class="bz_login"
           name="Bugzilla_login"
           title="Login"
           onfocus="mini_login_on_focus('_top')"
    >
    <input class="bz_password" 
           id="Bugzilla_password_top" 
           name="Bugzilla_password"
           type="password"
           title="Password"
    >
    <input class="bz_password bz_default_hidden bz_mini_login_help" type="text" 
           id="Bugzilla_password_dummy_top" value="password"
           title="Password"
           onfocus="mini_login_on_focus('_top')"
    >
    <input type="submit" name="GoAheadAndLogIn" value="Log in" 
            id="log_in_top">
    <script type="text/javascript">
      mini_login_constants = {
          "login" : "login",
          "warning" : "You must set the login and password before logging in."
      };
      
      if (YAHOO.env.ua.gecko || YAHOO.env.ua.ie || YAHOO.env.ua.opera) {
          YAHOO.util.Event.onDOMReady(function() {
              init_mini_login_form('_top');
          });
      }
      else {
          YAHOO.util.Event.on(window, 'load', function () {
              window.setTimeout(function() {
                  init_mini_login_form('_top');
              }, 200);
          });
    }
    </script>
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>
<li id="forgot_container_top">
  <span class="separator">| </span>
  <a id="forgot_link_top" href="https://idp-portal.suse.com/univention/self-service/#page=passwordreset">Forgot Password</a>
</li>
</ul>
</div> 

<div id="bugzilla-body">

<div class="navigation">
  
  <i><font color="#777777">First</font></i>
  <i><font color="#777777">Last</font></i>
  <i><font color="#777777">Prev</font></i>
  <i><font color="#777777">Next</font></i>
  &nbsp;&nbsp;
  <i><font color="#777777">This bug is not in your last
    search results.</font></i>
</div>
<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2020-07-09 14:31:26">
  <input type="hidden" name="longdesclength" value="71">
  <input type="hidden" name="id" value="1159740">
  <input type="hidden" name="token" value="1635630453-sMgr_WdQCbpr8H9Z3AnfOCoLtcKd79AZMIpCGUZT89Q">
<div class="bz_alias_short_desc_container edit_form">
        <strike>
     <a href="show_bug.cgi?id=1159740"><b>Bug&nbsp;1159740</b></a> -<span id="summary_alias_container" class="bz_default_hidden">
        (<span id="alias_nonedit_display">CVE-2020-8016</span>) 
      <span id="short_desc_nonedit_display">VUL-0: CVE-2020-8016: texlive-filesystem: sticky bit for dirs like /var/lib/texmf/fonts, race condition in spec file</span></strike>
     </span>  
       
    <div id="summary_alias_input">
      <table id="summary"> 
        <tr>
            <td colspan="2">(CVE-2020-8016)
          </td>
        </tr>
        
        <tr><th class="field_label "
    id="field_label_short_desc">

    <label for="short_desc" accesskey="s">

  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=glossary.html#short_desc"
  >Summary:</a>
</label>
</th>
          <td><span title="VUL-0: CVE-2020-8016: texlive-filesystem: sticky bit for dirs like /var/lib/texmf/fonts, race condition in spec file">VUL-0: CVE-2020-8016: texlive-filesystem: sticky bit for dirs like /var/lib/t...
        </span>
          </td>
        </tr>
      </table>
    </div>
  </div>
  <script type="text/javascript">
    hideAliasAndSummary('VUL-0: CVE-2020-8016: texlive-filesystem: sticky bit for dirs like \/var\/lib\/texmf\/fonts, race condition in spec file', 'CVE-2020-8016');
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=status_resolution_matrix.html">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>

          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=glossary.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Novell Products</td>
      </tr>

    
    
    
    <tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components. Select a Classification to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >SUSE Security Incidents</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=glossary.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Novell Products</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=SUSE Security Incidents"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >Incidents</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">

    <label for="version">

  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=glossary.html#version"
  >Version:</a>
</label>
</th>
        <td>unspecified
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">

    <label for="rep_platform" accesskey="h">

  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=glossary.html#rep_platform"
  >Hardware:</a>
</label>
</th>
      <td class="field_value">Other
       Other
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label for="priority">
          <a href="page.cgi?id=glossary.html#priority">Priority</a></label>:
      </th>
      <td>P3 - Medium
        <label for="severity">
          <b>Severity</b></label>:
       Normal
      </td>
    </tr>

      <tr>
        <th class="field_label">
          <label for="target_milestone">
            <a href="page.cgi?id=glossary.html#target_milestone">
            Target&nbsp;Milestone</a></label>:
        </th><td>---
  </td>
      </tr>            
          
          <tr>
      <th class="field_label">
        <a href="page.cgi?id=glossary.html#assigned_to">Assigned To</a>:
      </th>
      <td><span class="vcard"><span class="fn">Security Team bot</span>
</span>
      </td>
    </tr>

    <tr><th class="field_label "
    id="field_label_qa_contact">

    <label for="qa_contact" accesskey="q">

  <a 
      title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved."
      class="field_help_link"
      href="page.cgi?id=glossary.html#qa_contact"
  >QA Contact:</a>
</label>
</th>
      <td><span class="vcard"><span class="fn">Security Team bot</span>
</span>
      </td>
    </tr>
    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'security-team\x40suse.de',
        'security-team\x40suse.de');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">

    <label for="bug_file_loc" accesskey="u">

  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=glossary.html#bug_file_loc"
  >URL:</a>
</label>
</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>
  
    <tr><th class="field_label "
    id="field_label_status_whiteboard">

    <label for="status_whiteboard" accesskey="w">

  <a 
      title="Each bug has a free-form single line text entry box for adding tags and status information."
      class="field_help_link"
      href="page.cgi?id=glossary.html#status_whiteboard"
  >Whiteboard:</a>
</label>
</th><td colspan="2">
        <span title="CVSSv2:NVD:CVE-2020-8016:4.4:(AV:L/AC:M/Au:N/C:P/I:P/A:P) CVSSv3.1:NVD:CVE-2020-8016:7.0:(AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H)">CVSSv2:NVD:CVE-2020-8016:4.4:(AV:L/AC...
        </span>  
  </td>
    </tr>
  
    <tr>
      <th class="field_label">
        <label for="keywords" accesskey="k">
          <a href="describekeywords.cgi"><u>K</u>eywords</a></label>:
      </th>
      <td class="field_value" colspan="2">
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=glossary.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>
    
  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=glossary.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>
    
  </td>
  </tr>
  
  <tr>
    <th>&nbsp;</th>
  
    <td colspan="2" align="left" id="show_dependency_tree_or_graph">
      Show dependency <a href="showdependencytree.cgi?id=1159740&amp;hide_resolved=1">tree</a>
  
        /&nbsp;<a href="showdependencygraph.cgi?id=1159740">graph</a>
    </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table cellpadding="3" cellspacing="1">
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2019-12-23 13:14 UTC by <span class="vcard"><span class="fn">Matthias Gerstner</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2020-07-09 14:31 UTC 
      (<a href="show_activity.cgi?id=1159740">History</a>)
    </td>
  
  </tr>
         <tr>
      <th class="field_label">
        <label for="newcc" accesskey="a">CC List:</label>
      </th>
      <td>9 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5">
                <option value="atoptsoglou">atoptsoglou</option>
                <option value="jsegitz">jsegitz</option>
                <option value="junguo.wang">junguo.wang</option>
                <option value="malte.kraus">malte.kraus</option>
                <option value="marina.latini">marina.latini</option>
                <option value="matthias.gerstner">matthias.gerstner</option>
                <option value="security-team">security-team</option>
                <option value="stefan.fent">stefan.fent</option>
                <option value="werner">werner</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>
         <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with a comma. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=glossary.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" ></td>
    </tr> 
         <tr><th class="field_label "
    id="field_label_cf_foundby">


  <a 
      title="A custom Drop Down field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=glossary.html#cf_foundby"
  >Found By:</a>

</th>
  <td class="field_value "
      id="field_container_cf_foundby"  colspan="2">---</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_cf_nts_priority">


  <a 
      title="A custom Free Text field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=glossary.html#cf_nts_priority"
  >Services Priority:</a>

</th>
  <td class="field_value "
      id="field_container_cf_nts_priority"  colspan="2"></td>
    </tr>
    <tr><th class="field_label "
    id="field_label_cf_biz_priority">


  <a 
      title="A custom Free Text field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=glossary.html#cf_biz_priority"
  >Business Priority:</a>

</th>
  <td class="field_value "
      id="field_container_cf_biz_priority"  colspan="2"></td>
    </tr>
    <tr><th class="field_label "
    id="field_label_cf_blocker">


  <a 
      title="A custom Drop Down field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=glossary.html#cf_blocker"
  >Blocker:</a>

</th>
  <td class="field_value "
      id="field_container_cf_blocker"  colspan="2">---</td>
    </tr>
    <tr><th class="field_label  bz_hidden_field"
    id="field_label_cf_marketing_qa_status">


  <a 
      title="A custom Drop Down field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=glossary.html#cf_marketing_qa_status"
  >Marketing QA Status:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_marketing_qa_status"  colspan="2">---</td>
    </tr>
    <tr><th class="field_label  bz_hidden_field"
    id="field_label_cf_it_deployment">


  <a 
      title="A custom Drop Down field in this installation of Bugzilla."
      class="field_help_link"
      href="page.cgi?id=glossary.html#cf_it_deployment"
  >IT Deployment:</a>

</th>
  <td class="field_value  bz_hidden_field"
      id="field_container_cf_it_deployment"  colspan="2">---</td>
    </tr>
         <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
         <ul>
    <li><a href="tr_new_case.cgi?product=SUSE%20Security%20Incidents&bug=1159740">Create test case</a></li>
</ul><ul>
  <li><a href="enter_bug.cgi?cloned_bug_id=1159740">Clone This Bug</a></li>
</ul>
                <tr>
      <th class="field_label">
        <label>Flags:</label>
      </th>
      <td><span title="Dr. Werner Fink">werner</span>:
      SHIP_STOPPER?<br>
        <span title="Dr. Werner Fink">werner</span>:
      CCB_Review?<br>
      </td>
    </tr>

        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts" cellspacing="0" cellpadding="0"><tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table" cellspacing="0" cellpadding="4">
  <tr id="a0">
    <th colspan="2" align="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_text_plain">
        <td valign="top">
            <a href="attachment.cgi?id=828996"
               title="View the content of the attachment">
          <b>new cron script</b></a>

          <span class="bz_attach_extra_info">
              (2.10 KB,
                text/plain)

            <br>
            <a href="#attach_828996"
               title="Go to the comment associated with the attachment">2020-02-04 08:44 UTC</a>,

            <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
          </span>
        </td>


        <td valign="top">
          <a href="attachment.cgi?id=828996&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_text_plain">
        <td valign="top">
            <a href="attachment.cgi?id=829048"
               title="View the content of the attachment">
          <b>corrected cron script</b></a>

          <span class="bz_attach_extra_info">
              (2.10 KB,
                text/plain)

            <br>
            <a href="#attach_829048"
               title="Go to the comment associated with the attachment">2020-02-04 11:38 UTC</a>,

            <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
          </span>
        </td>


        <td valign="top">
          <a href="attachment.cgi?id=829048&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a3" class="bz_contenttype_text_plain">
        <td valign="top">
            <a href="attachment.cgi?id=831040"
               title="View the content of the attachment">
          <b>texlive-filesystem.spec</b></a>

          <span class="bz_attach_extra_info">
              (1.40 MB,
                text/plain)

            <br>
            <a href="#attach_831040"
               title="Go to the comment associated with the attachment">2020-02-24 13:33 UTC</a>,

            <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
          </span>
        </td>


        <td valign="top">
          <a href="attachment.cgi?id=831040&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a4" class="bz_contenttype_text_plain">
        <td valign="top">
            <a href="attachment.cgi?id=831047"
               title="View the content of the attachment">
          <b>the public.c which does execute the mktexlsr</b></a>

          <span class="bz_attach_extra_info">
              (4.48 KB,
                text/plain)

            <br>
            <a href="#attach_831047"
               title="Go to the comment associated with the attachment">2020-02-24 14:34 UTC</a>,

            <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
          </span>
        </td>


        <td valign="top">
          <a href="attachment.cgi?id=831047&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
            <a id="view_all" href="attachment.cgi?bugid=1159740&amp;action=viewall">View All</a>
        </span>
        <a href="attachment.cgi?bugid=1159740&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=1159740&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1411227336" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the `comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>




<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table" cellpadding="0" cellspacing="0"><tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Matthias Gerstner</span>
</span>
        </span>

        <span class="bz_comment_time">
          2019-12-23 13:14:47 UTC
        </span>
      </div>



<pre class="bz_comment_text" >+++ This bug was initially created as a clone of <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - VUL-0: CVE-2020-8017: texlive-filesystem: race condition on cron job, no longer use /usr/bin/safe-{rm,rmdir}"
   href="show_bug.cgi?id=1158910">Bug #1158910</a>

Split-off from <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - VUL-0: CVE-2020-8017: texlive-filesystem: race condition on cron job, no longer use /usr/bin/safe-{rm,rmdir}"
   href="show_bug.cgi?id=1158910">bug 1158910</a>. texlive-filesystem installs a plethora of
directories with sticky bit set as a kind of preparation for shared user dirs
regarding e.g. TeX fonts.

For the example of directory /var/cache/texmf/fonts, it is created like this:

drwxrwxr-t 5 root mktex 4.0K 23. Dez 12:31 /var/cache/texmf/fonts

So it is writeable by members of the group mktex. Due to the sticky bit
semantics, files cannot be removed from the directory unless the calling
process is the *owner* of the file.

In the texlive-filesystem there currently exists the following code to create
a couple of these directories and prepare ls-R files in them:

```
[...]
%set_permissions %{_texmfvardir}/fonts/
[...]

for dir in	%{_texmfconfdir}	\
		%{_fontcache}		\
		%{_texmfvardir}		\
		%{_texmfvardir}/dist	\
		%{_texmfvardir}/main
do
    test ! -e ${dir}/ls-R || continue
    echo '%% ls-R -- filename database for kpathsea; do not change this line.' &gt; \
    ${dir}/ls-R
    chown root:%{texgrp} ${dir}/ls-R || :
    chmod 0664 ${dir}/ls-R || :
done
```

This initial setup in the %post section of the spec file opens up a race
condition in its own regard. A compromised mktex group member could place
symlinks into these directories that will be followed by the shell code,
allowing corruption of system files.

Even though the mktex group is only created a bit earlier in the
texlive-filesystem, another vulnerability might allow to compromise e.g.
non-root groups easily. Or the mktex group might already exist from an
earlier installation of texlive-filesystem.

Furthermore there seems to be some inconsistency, since the ls-R files are
created with root:mktex ownership by the spec file, but the `mktexlsr` tool
creates with nobody:mktex, when created anew. This inconsistency also causes
troubles with file deletion logic in the cron job as outlined in <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - VUL-0: CVE-2020-8017: texlive-filesystem: race condition on cron job, no longer use /usr/bin/safe-{rm,rmdir}"
   href="show_bug.cgi?id=1158910">bug 1158910</a>.

Possible action plan is as follows:

a) fix the race condition in the spec file, e.g. by creating ls-R files only
with lowered privileges like nobody:mktex. This would also fix the
inconsistency issue c) at the same time.
b) consider dropping those sticky bits from the directories when there is no
compelling use case any more.
c) the inconsistency of ls-R ownership should be harmonized, best by creating
them only for nobody:mktex in the first place.</pre>
    </div><div id="c1" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-08 15:30:33 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Matthias Gerstner from <a href="show_bug.cgi?id=1159740#c0">comment #0</a>)

<span class="quote">&gt; a couple of these directories and prepare ls-R files in them:
&gt; 
&gt; ```
&gt; [...]
&gt; %set_permissions %{_texmfvardir}/fonts/
&gt; [...]
&gt; 
&gt; for dir in	%{_texmfconfdir}	\
&gt; 		%{_fontcache}		\
&gt; 		%{_texmfvardir}		\
&gt; 		%{_texmfvardir}/dist	\
&gt; 		%{_texmfvardir}/main
&gt; do
&gt;     test ! -e ${dir}/ls-R || continue
&gt;     echo '%% ls-R -- filename database for kpathsea; do not change this
&gt; line.' &gt; \
&gt;     ${dir}/ls-R
&gt;     chown root:%{texgrp} ${dir}/ls-R || :
&gt;     chmod 0664 ${dir}/ls-R || :
&gt; done
&gt; ```</span >

[...]

<span class="quote">&gt; Possible action plan is as follows:
&gt; 
&gt; a) fix the race condition in the spec file, e.g. by creating ls-R files only
&gt; with lowered privileges like nobody:mktex. This would also fix the
&gt; inconsistency issue c) at the same time.</span >

<span class="quote">&gt; b) consider dropping those sticky bits from the directories when there is no
&gt; compelling use case any more.</span >

That is a noop.  Larger worker groups using TeX/LaTeX should be able to become
member of the group mktex to be able to share their created fonts.

<span class="quote">&gt; c) the inconsistency of ls-R ownership should be harmonized, best by creating
&gt; them only for nobody:mktex in the first place.</span ></pre>
    </div><div id="c2" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-10 14:10:10 UTC
        </span>
      </div>



<pre class="bz_comment_text" >This is an autogenerated message for OBS integration:
This bug (1159740) was mentioned in
<a href="https://build.opensuse.org/request/show/762831">https://build.opensuse.org/request/show/762831</a> Factory / texlive-filesystem</pre>
    </div><div id="c3" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-13 13:21:31 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Please test if SR#762831 and SR#763971 do fix this bug</pre>
    </div><div id="c4" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Matthias Gerstner</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-21 11:51:29 UTC
        </span>
      </div>



<pre class="bz_comment_text" >The changes from SR#762831 do harmonize the ownership of those directories. In the spec file we now have this line:

```
chown %{nobody}:%{texgrp} ${dir}/ls-R || error=1
```

I'm leaving it up to jsegitz to judge the security of this. He handled this class of issues in the past months in a lot of packages.

As I see it this still could cause a symlink to be followed, so at least `chown --no-dereference` should be used.</pre>
    </div><div id="c5" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-21 12:50:40 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Matthias Gerstner from <a href="show_bug.cgi?id=1159740#c4">comment #4</a>)
<span class="quote">&gt; The changes from SR#762831 do harmonize the ownership of those directories.
&gt; In the spec file we now have this line:
&gt; 
&gt; ```
&gt; chown %{nobody}:%{texgrp} ${dir}/ls-R || error=1
&gt; ```
&gt; 
&gt; I'm leaving it up to jsegitz to judge the security of this. He handled this
&gt; class of issues in the past months in a lot of packages.
&gt; 
&gt; As I see it this still could cause a symlink to be followed, so at least
&gt; `chown --no-dereference` should be used.</span >

Those files are no symbolic links ... the only link you mean is e.g. /usr/share/texmf/ls-R which points to the real file /var/lib/texmf/main/ls-R simply to be able to make /usr ro</pre>
    </div><div id="c6" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Matthias Gerstner</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-22 09:05:35 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to <a href="mailto:werner&#64;suse.com">werner&#64;suse.com</a> from <a href="show_bug.cgi?id=1159740#c5">comment #5</a>)
<span class="quote">&gt; (In reply to Matthias Gerstner from <a href="show_bug.cgi?id=1159740#c4">comment #4</a>)
&gt; &gt; The changes from SR#762831 do harmonize the ownership of those directories.
&gt; &gt; In the spec file we now have this line:
&gt; &gt; 
&gt; &gt; ```
&gt; &gt; chown %{nobody}:%{texgrp} ${dir}/ls-R || error=1
&gt; &gt; ```
&gt; &gt; 
&gt; &gt; I'm leaving it up to jsegitz to judge the security of this. He handled this
&gt; &gt; class of issues in the past months in a lot of packages.
&gt; &gt; 
&gt; &gt; As I see it this still could cause a symlink to be followed, so at least
&gt; &gt; `chown --no-dereference` should be used.
&gt; 
&gt; Those files are no symbolic links ... the only link you mean is e.g. /usr/share/texmf/ls-R which points to the real file /var/lib/texmf/main/ls-R simply to be able to make /usr ro</span >

Of course they're not *expected* symbolic links, but if a compromised &quot;nobody&quot;
user or &quot;mktex&quot; group is around then they could become symbolic links.</pre>
    </div><div id="c8" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Johannes Segitz</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-30 14:02:09 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Unfortunately the current %post section is still problematic. POC:

# ls -lah /var/cache/texmf/fonts/
total 24K
drwxrwxr-t 6 nobody mktex 4.0K Jan 30 14:51 .
drwxr-xr-t 3 root   root  4.0K Jan 24 17:00 ..
-rw-r--r-- 1 nobody mktex    0 Jan 30 14:51 ls-R
# ls -lah /test/shadow
-rw-r----- 1 root shadow 315 Jan 30 14:49 /test/shadow

Using inotify_add_watch to watch /var/cache/texmf/fonts/ as nobody I can jump in once the tmp file is generated by root, delete it and set it to a link to /test/shadow

nobody&#64;linux-v0tl:/var/cache/texmf/fonts&gt; id
uid=65534(nobody) gid=65533(nobody) groups=65533(nobody),65534(nogroup)
nobody&#64;linux-v0tl:/var/cache/texmf/fonts&gt; /tmp/exploit /var/cache/texmf/fonts ls-R
[+] watching /var/cache/texmf/fonts
[+] unlinked
[+] back from read
[+] read 32
[+] Got name: ls-R.X4hHy7 len 16
[+] added link

Once /tmp/exploit started watching the directory I ran
zypper in -f texlive-filesystem 
as root to trigger the %post section.

After that the test file belongs nobody
-rw-rw-r-- 1 nobody mktex 315 Jan 30 14:54 /test/shadow

I don't see how this can be solved with the current setup. You could try to first change the ownership of the parent directory to root, then check if everything is sane and generate the file. Then you give the parent directory back to the user. But to be honest I think that's a lot of complexity for a really rare use case.

How about making the default installation safe by having root own /var/cache/texmf/fonts and explain the special use case you outlined above in a README.SUSE? That way users that need this can accept the risk and the default is hardened.</pre>
    </div><div id="c9" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-30 14:35:59 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Johannes Segitz from <a href="show_bug.cgi?id=1159740#c8">comment #8</a>)
<span class="quote">&gt; Unfortunately the current %post section is still problematic. POC:
&gt; 
&gt; # ls -lah /var/cache/texmf/fonts/
&gt; total 24K
&gt; drwxrwxr-t 6 nobody mktex 4.0K Jan 30 14:51 .
&gt; drwxr-xr-t 3 root   root  4.0K Jan 24 17:00 ..
&gt; -rw-r--r-- 1 nobody mktex    0 Jan 30 14:51 ls-R
&gt; # ls -lah /test/shadow
&gt; -rw-r----- 1 root shadow 315 Jan 30 14:49 /test/shadow
&gt; 
&gt; Using inotify_add_watch to watch /var/cache/texmf/fonts/ as nobody I can
&gt; jump in once the tmp file is generated by root, delete it and set it to a
&gt; link to /test/shadow
&gt; 
&gt; nobody&#64;linux-v0tl:/var/cache/texmf/fonts&gt; id
&gt; uid=65534(nobody) gid=65533(nobody) groups=65533(nobody),65534(nogroup)
&gt; nobody&#64;linux-v0tl:/var/cache/texmf/fonts&gt; /tmp/exploit
&gt; /var/cache/texmf/fonts ls-R
&gt; [+] watching /var/cache/texmf/fonts
&gt; [+] unlinked
&gt; [+] back from read
&gt; [+] read 32
&gt; [+] Got name: ls-R.X4hHy7 len 16
&gt; [+] added link
&gt; 
&gt; Once /tmp/exploit started watching the directory I ran
&gt; zypper in -f texlive-filesystem 
&gt; as root to trigger the %post section.
&gt; 
&gt; After that the test file belongs nobody
&gt; -rw-rw-r-- 1 nobody mktex 315 Jan 30 14:54 /test/shadow
&gt; 
&gt; I don't see how this can be solved with the current setup. You could try to
&gt; first change the ownership of the parent directory to root, then check if
&gt; everything is sane and generate the file. Then you give the parent directory
&gt; back to the user. But to be honest I think that's a lot of complexity for a
&gt; really rare use case.
&gt; 
&gt; How about making the default installation safe by having root own
&gt; /var/cache/texmf/fonts and explain the special use case you outlined above
&gt; in a README.SUSE? That way users that need this can accept the risk and the
&gt; default is hardened.</span >

Then provide me a WORKING setup, that is secure AND usable by all tex users, with and without being member of group mktex.
Do we need an own mktex user ... any even if, if you become as an attacker this user you are always able to attack.
Maybe we should drop TeX :(

There must be a secure way to overwrite the ls-R as I've done it in the CURRENT %post section:

error=0
for dir in      %{_texmfconfdir}        \
                %{_fontcache}           \
                %{_texmfvardir}         \
                %{_texmfvardir}/dist    \
                %{_texmfvardir}/main
do
    test ! -e ${dir}/ls-R -o -h ${dir}/ls-R || continue
    tmp=$(mktemp ${dir}/ls-R.XXXXXX) || error=1
    test $error = 0 || continue
    mv ${tmp} ${dir}/ls-R || error=1
    test $error = 0 || continue
    chown %{nobody}:%{texgrp} ${dir}/ls-R || error=1
    test $error = 0 || continue
    chmod 0664 ${dir}/ls-R || error=1
    test $error = 0 || continue
    echo '%% ls-R -- filename database for kpathsea; do not change this line.' &gt; \
    ${dir}/ls-R
done</pre>
    </div><div id="c10" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Johannes Segitz</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-30 16:01:34 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Please have a look at
home:jsegitz:branches:Publishing:TeXLive/texlive-filesystem
for how a possible solution could look like. It's not perfect in that files owned by nobody/group mktex could get an additional
%% ls-R -- filename database for kpathsea; do not change this line.
line added, but that should be tricky to abuse</pre>
    </div><div id="c11" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 06:46:50 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Johannes Segitz from <a href="show_bug.cgi?id=1159740#c10">comment #10</a>)
<span class="quote">&gt; Please have a look at
&gt; home:jsegitz:branches:Publishing:TeXLive/texlive-filesystem
&gt; for how a possible solution could look like. It's not perfect in that files
&gt; owned by nobody/group mktex could get an additional
&gt; %% ls-R -- filename database for kpathsea; do not change this line.
&gt; line added, but that should be tricky to abuse</span >

OK ... nevertheless if the attacker had already become nobody then he is able to change ls-R at any time before, during, and after %post scriptlet</pre>
    </div><div id="c12" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 07:00:43 UTC
        </span>
      </div>



<pre class="bz_comment_text" >And .. as now fontcache dir tree is owned by user nobody an attacker is able to move ls-R to a symbolic link.

The mktexlsr in path is a link to /usr/lib/mktex/public which switches always to user nobody and group mktex and then call /usr/lib/mktex/mktexlsr to (re)generate all ls-R files (hence those have to owned by user nobody and gropu mktex).

But now with fontcache dir tree is owned by user nobody I do not see any advantage. Simply is an attacker had become nobody he can do anythin with ls-R below fontcache dir tree even with the sticky bit set.

IMHO the switch to user nobody as owner of the fontcache dir tree is a bad idea</pre>
    </div><div id="c13" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 07:01:53 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Btw: if an attacker has become root then we have other problems.</pre>
    </div><div id="c14" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 09:39:39 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Please can I have an answer ...

Before any change the font cache dir was owned by root:mktex and the mktexlsr tool executed by /usr/lib/mktex/public as nobody:mktex was only able to write to an existing ls-R below /var/cache/texmf/fonts/ set to sticky because the tree was owned by root:mktex

Now the nobody can remove any files owned by its own and do waht it want?

I in doubt that this change for a better cron job for <a href="http://bugzilla.opensuse.org/show_bug.cgi?id=1158910">boo#1158910</a> does really inrease security ... in fact now if an attacker has become user nobody he can do anything as hew is now allowed to remove and replace the ls-R file below /var/cache/texmf/fonts/</pre>
    </div><div id="c15" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Johannes Segitz</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 10:22:34 UTC
        </span>
      </div>



<pre class="bz_comment_text" ><span class="quote">&gt; OK ... nevertheless if the attacker had already become nobody then he is able to change ls-R at any time before, during, and after %post scriptlet</span >

yes, of course. I was thinking about an attacker that has limited ability to operate as nobody.

<span class="quote">&gt; And .. as now fontcache dir tree is owned by user nobody an attacker is able to move ls-R to a symbolic link.</span >

With the suggestion I gave we can switch the directory back to root.mktex
I gave it a try in my fork and it works.

Basically we're now at what was suggested in <a href="show_bug.cgi?id=1159740#c0">comment0</a> (option c).
                                                                                                                                                                                               &gt; Btw: if an attacker has become root then we have other problems.

I don't understand this comment. I showed an escalation from nobody to root with the current packaging. It is not assumed that the attacker is root.

<span class="quote">&gt; Please can I have an answer ...</span >

Well you need to give me some time to actually answer ;)

<span class="quote">&gt; I in doubt that this change for a better cron job for <a href="http://bugzilla.opensuse.org/show_bug.cgi?id=1158910">boo#1158910</a> does really inrease security ... in fact now if an attacker has become user nobody he can do anything as hew is now allowed to remove and replace the ls-R file below /var/cache/texmf/fonts/</span >

The change to the cron job is one issue, but the other issue is that the %post section operates as root on this directory, leading to the escalation shown in <a href="show_bug.cgi?id=1159740#c8">comment 8</a></pre>
    </div><div id="c16" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 10:37:37 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Johannes Segitz from <a href="show_bug.cgi?id=1159740#c15">comment #15</a>)
<span class="quote">&gt; &gt; OK ... nevertheless if the attacker had already become nobody then he is able to change ls-R at any time before, during, and after %post scriptlet
&gt; 
&gt; yes, of course. I was thinking about an attacker that has limited ability to
&gt; operate as nobody.
&gt; 
&gt; &gt; And .. as now fontcache dir tree is owned by user nobody an attacker is able to move ls-R to a symbolic link.
&gt; 
&gt; With the suggestion I gave we can switch the directory back to root.mktex
&gt; I gave it a try in my fork and it works.
&gt; 
&gt; Basically we're now at what was suggested in <a href="show_bug.cgi?id=1159740#c0">comment0</a> (option c).
&gt;                                                                             
&gt; &gt; Btw: if an attacker has become root then we have other problems.
&gt; 
&gt; I don't understand this comment. I showed an escalation from nobody to root
&gt; with the current packaging. It is not assumed that the attacker is root.
&gt; 
&gt; &gt; Please can I have an answer ...
&gt; 
&gt; Well you need to give me some time to actually answer ;)
&gt; 
&gt; &gt; I in doubt that this change for a better cron job for <a href="http://bugzilla.opensuse.org/show_bug.cgi?id=1158910">boo#1158910</a> does really inrease security ... in fact now if an attacker has become user nobody he can do anything as hew is now allowed to remove and replace the ls-R file below /var/cache/texmf/fonts/
&gt; 
&gt; The change to the cron job is one issue, but the other issue is that the
&gt; %post section operates as root on this directory, leading to the escalation
&gt; shown in <a href="show_bug.cgi?id=1159740#c8">comment 8</a></span >

Those changes depend on each other .... I'll switch back to root:mktex for /var/cache/texmf/fonts/ font cache tree and set to sticky. Simply to allow only writes to /var/cache/texmf/fonts/ls-R for nobody:mktex, tnhat is no remove or relink</pre>
    </div><div id="c17" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 10:47:35 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Johannes Segitz from <a href="show_bug.cgi?id=1159740#c15">comment #15</a>)
<span class="quote">&gt; &gt; OK ... nevertheless if the attacker had already become nobody then he is able to change ls-R at any time before, during, and after %post scriptlet
&gt; 
&gt; yes, of course. I was thinking about an attacker that has limited ability to
&gt; operate as nobody.
&gt; 
&gt; &gt; And .. as now fontcache dir tree is owned by user nobody an attacker is able to move ls-R to a symbolic link.
&gt; 
&gt; With the suggestion I gave we can switch the directory back to root.mktex
&gt; I gave it a try in my fork and it works.</span >

Hmmm ... you are able to create ls-R bewloe a tree owned by root:mktex as
user nobody:mktex ?

I do not see how this works:


for dir in      %{_fontcache}
do
    test ! -e ${dir}/ls-R || continue
    runuser %{nobody} -g %{texgrp} -c &quot;umask 013; touch ${dir}/ls-R&quot;
    echo '%% ls-R -- filename database for kpathsea; do not change this line.' | runuser -u %{nobody} -g %{texgrp} -- tee -a ${dir}/ls-R &gt; /dev/null
done</pre>
    </div><div id="c18" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 10:53:20 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Beside this if I switch to user nobody in the cron job the script is not able to clean font files created by other users which are member of the group mktex.

And as mktexlsr and the end of the cron job is always executed for nobody:mktex to refresh the ls-R ii would be better to drop the

  setpriv --reuid nobody --regid mktex --init-groups

in the cron script. Or I have to switch tge user of the current ownership of each file to to the job for each user.</pre>
    </div><div id="c19" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Matthias Gerstner</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 11:33:42 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to <a href="mailto:werner&#64;suse.com">werner&#64;suse.com</a> from <a href="show_bug.cgi?id=1159740#c14">comment #14</a>)
<span class="quote">&gt; Now the nobody can remove any files owned by its own and do waht it want?</span >

What is your problem with that? You have a component that is only accessible
to nobody:mktex and the programs operating on it run as nobody:mktex to
prevent them having higher privileges elsewhere in the system.

For mysql we have a mysql user and the mysql user may do anything with the
mysql database. So what?

If you're only worried about the nobody user because it is shared with other
packages then you can also create your own &quot;mktex&quot; user instead.</pre>
    </div><div id="c20" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 11:49:15 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Matthias Gerstner from <a href="show_bug.cgi?id=1159740#c19">comment #19</a>)
<span class="quote">&gt; (In reply to <a href="mailto:werner&#64;suse.com">werner&#64;suse.com</a> from <a href="show_bug.cgi?id=1159740#c14">comment #14</a>)
&gt; &gt; Now the nobody can remove any files owned by its own and do waht it want?
&gt; 
&gt; What is your problem with that? You have a component that is only accessible
&gt; to nobody:mktex and the programs operating on it run as nobody:mktex to
&gt; prevent them having higher privileges elsewhere in the system.
&gt; 
&gt; For mysql we have a mysql user and the mysql user may do anything with the
&gt; mysql database. So what?
&gt; 
&gt; If you're only worried about the nobody user because it is shared with other
&gt; packages then you can also create your own &quot;mktex&quot; user instead.</span >

Nevertheless the owner of the ls-R should not be the owner of the font cache directory tree as otherwiese the sticky bit does not protect the ls-R file for being removed and replaced by a e.g. symbolic link.  And all ls-R files will be always refreshed by the user nobody due to the program /usr/lib/mktex/public which switches to nobody:mktex before executing the final mktex tool scripts like mktexlsr.

Btw:  /tmp and /var/tmp are also owned by root and not by nobody nor `mrandmrstmp'

But if you feel better I'll create a user mktex at the beginning in %pre scriptlet together with the group mktex</pre>
    </div><div id="c21" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Matthias Gerstner</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 12:28:07 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to <a href="mailto:werner&#64;suse.com">werner&#64;suse.com</a> from <a href="show_bug.cgi?id=1159740#c20">comment #20</a>)
<span class="quote">&gt; Nevertheless the owner of the ls-R should not be the owner of the font cache
&gt; directory tree as otherwiese the sticky bit does not protect the ls-R file
&gt; for being removed and replaced by a e.g. symbolic link.</span >

I think lots of the problems we are having here are coming from the fact that
you are misusing the sticky bit here for a purpose it was never meant to be.

<span class="quote">&gt; Btw:  /tmp and /var/tmp are also owned by root and not by nobody nor
&gt; `mrandmrstmp'</span >

These comparisons are pointless and it doesn't help coming to a conclusion
with the matter at hand.

But if you insist: The major difference to /tmp and /var/tmp is that no
program running as root (should!) operates on files in /tmp and /var/tmp that
are owned by users with lower privilege. Sometimes we still find programs
running as root doing that and then these instances are called security
issues, get assigned a CVE and hopefully get fixed.

And the few programs that do successfully run as root and operate on files
owned by users with lower privilege *take a lot of precautions* using a set of
*complicated system calls* like systemd-tmpfiles does.</pre>
    </div><div id="c22" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 12:53:47 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Matthias Gerstner from <a href="show_bug.cgi?id=1159740#c21">comment #21</a>)
<span class="quote">&gt; (In reply to <a href="mailto:werner&#64;suse.com">werner&#64;suse.com</a> from <a href="show_bug.cgi?id=1159740#c20">comment #20</a>)
&gt; &gt; Nevertheless the owner of the ls-R should not be the owner of the font cache
&gt; &gt; directory tree as otherwiese the sticky bit does not protect the ls-R file
&gt; &gt; for being removed and replaced by a e.g. symbolic link.
&gt; 
&gt; I think lots of the problems we are having here are coming from the fact that
&gt; you are misusing the sticky bit here for a purpose it was never meant to be.
&gt; </span >

The sticky bit is uesed here to protect files to be removed from other users as the owner.  This is how it is described in chmod(1), section `RESTRICTED DELETION FLAG OR STICKY BIT'.

Now see SR#769054 and SR#769055 which is now with new user mktex instead of nobody and ls-R files again owned by usr:group pair root:mktex and write permission for group mktex.  This allows the wrapper program public to switch to new user mktex and its group mktex before executing /usr/lib/mktex/mktexlsr to write the ls-R files[1].  The font cache directory is owned by user mktex with group mktex and is still sicky to protect the ls-R file.  Also the cron job is simply done by root to clean the font cache directoy from time to time.

[1] The final mktexlsr in e.g. the cron job is /usr/bin/mktexlsr which points to /usr/lib/mktex/public and this wrapper will execute the /usr/lib/mktex/mktexlsr script as user mktex within its group mktex to regenerate the ls-R files.</pre>
    </div><div id="c23" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 13:20:06 UTC
        </span>
      </div>



<pre class="bz_comment_text" >This is an autogenerated message for OBS integration:
This bug (1159740) was mentioned in
<a href="https://build.opensuse.org/request/show/769054">https://build.opensuse.org/request/show/769054</a> Factory / texlive
<a href="https://build.opensuse.org/request/show/769055">https://build.opensuse.org/request/show/769055</a> Factory / texlive-filesystem</pre>
    </div><div id="c24" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c24">Comment 24</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Matthias Gerstner</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 13:21:59 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to <a href="mailto:werner&#64;suse.com">werner&#64;suse.com</a> from <a href="show_bug.cgi?id=1159740#c22">comment #22</a>)
<span class="quote">&gt; The sticky bit is uesed here to protect files to be removed from other users as the owner.  This is how it is described in chmod(1), section `RESTRICTED DELETION FLAG OR STICKY BIT'.</span >

Yes that is all very fine, as long as root does not fiddle around in those
directories.

<span class="quote">&gt; Also the cron job is simply done by root to clean the font cache directoy
&gt; from time to time.</span >

This brings us back to the very beginning, that this is poses a security issue
and can't stay this way. Privileges need to be dropped. Or you need to use
systemd-tmpfiles.</pre>
    </div><div id="c25" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c25">Comment 25</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 13:41:53 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Matthias Gerstner from <a href="show_bug.cgi?id=1159740#c24">comment #24</a>)
<span class="quote">&gt; (In reply to <a href="mailto:werner&#64;suse.com">werner&#64;suse.com</a> from <a href="show_bug.cgi?id=1159740#c22">comment #22</a>)
&gt; &gt; The sticky bit is uesed here to protect files to be removed from other users as the owner.  This is how it is described in chmod(1), section `RESTRICTED DELETION FLAG OR STICKY BIT'.
&gt; 
&gt; Yes that is all very fine, as long as root does not fiddle around in those
&gt; directories.
&gt; 
&gt; &gt; Also the cron job is simply done by root to clean the font cache directoy
&gt; &gt; from time to time.
&gt; 
&gt; This brings us back to the very beginning, that this is poses a security
&gt; issue
&gt; and can't stay this way. Privileges need to be dropped. Or you need to use
&gt; systemd-tmpfiles.</span >

I'll not drop the sticky bit.  This remains accpeted I hope.  Then please explain me where here the security risk is of removing files below /var/cache/texmf/fonts/ as root. Please remember that the ls-R file is never removed and all other files are never owned by root</pre>
    </div><div id="c26" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c26">Comment 26</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 13:49:28 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Also how do I stop systemd-tmpfiles(8) from removing the ls-R file below /var/cache/texmf/fonts/ but only the file otherwise found?</pre>
    </div><div id="c27" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c27">Comment 27</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-01-31 14:16:39 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Would this work even for the many subdirectories which will be created by
e.g. mktexpk

 x /var/cache/texmfs/fonts/ls-R         0664 root  mktex -
 d /var/cache/texmfs/fonts/             1775 mktex mktex -
 d /var/cache/texmfs/fonts/pk           1775 mktex mktex 20d
 d /var/cache/texmfs/fonts/source       1775 mktex mktex 60d
 d /var/cache/texmfs/fonts/tfm          1775 mktex mktex 60d
 d /var/cache/texmfs/fonts/luatex-cache 1775 mktex mktex 60d

also ... interesting the upstream /usr/lib/tmpfiles.d/man-db.conf does not protect the index files of man (?)</pre>
    </div><div id="c28" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c28">Comment 28</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-04 08:44:47 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Created <span class=""><a href="attachment.cgi?id=828996" name="attach_828996" title="new cron script">attachment 828996</a> <a href="attachment.cgi?id=828996&amp;action=edit" title="new cron script">[details]</a></span>
new cron script

What is about this?  With this the specific user uid is used to switch for every file or what else have been placed below '/var/cache/texmf/ the user uid before removing</pre>
    </div><div id="c29" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c29">Comment 29</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-04 11:38:52 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Created <span class=""><a href="attachment.cgi?id=829048" name="attach_829048" title="corrected cron script">attachment 829048</a> <a href="attachment.cgi?id=829048&amp;action=edit" title="corrected cron script">[details]</a></span>
corrected cron script

Check also forbidden directories for all uids</pre>
    </div><div id="c30" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c30">Comment 30</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-04 13:00:07 UTC
        </span>
      </div>



<pre class="bz_comment_text" >This is an autogenerated message for OBS integration:
This bug (1159740) was mentioned in
<a href="https://build.opensuse.org/request/show/769966">https://build.opensuse.org/request/show/769966</a> Factory / texlive-filesystem</pre>
    </div><div id="c31" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c31">Comment 31</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-05 08:00:07 UTC
        </span>
      </div>



<pre class="bz_comment_text" >This is an autogenerated message for OBS integration:
This bug (1159740) was mentioned in
<a href="https://build.opensuse.org/request/show/770139">https://build.opensuse.org/request/show/770139</a> Factory / texlive-filesystem
<a href="https://build.opensuse.org/request/show/770144">https://build.opensuse.org/request/show/770144</a> Factory / texlive</pre>
    </div><div id="c33" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c33">Comment 33</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Matthias Gerstner</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-19 14:08:08 UTC
        </span>
      </div>



<pre class="bz_comment_text" >So the newest version of the cron job script as found in <span class=""><a href="attachment.cgi?id=829048" name="attach_829048" title="corrected cron script">attachment 829048</a> <a href="attachment.cgi?id=829048&amp;action=edit" title="corrected cron script">[details]</a></span> and
also in the current texlive-filesystem packages basically does this now:

```
uids=$(find $VARTEXFONTS/ \( -not -type d \) -printf '%U\n' | sort -u)

if test &quot;$CLEAR_TEXMF_FONTS&quot; = &quot;yes&quot; -a -n &quot;$VARTEXFONTS&quot;
then
    for uid in ${uids[&#64;]}
    do
	for p in $VARTEXFONTS
	do
	    test -d $p/pk/	&amp;&amp; find $p/pk/	   \( -not -type d -and -atime +20 -and -uid $uid \) -print0
	    test -d $p/tfm/	&amp;&amp; find $p/tfm/	   \( -not -type d -and -atime +60 -and -uid $uid \) -print0
	    test -d $p/source/  &amp;&amp; find $p/source/ \( -not -type d -and -atime +60 -and -uid $uid \) -print0
    	done &gt; &gt;(exec -a xargs xargs -r -L100 -0 -- setpriv --reuid $uid --regid mktex --init-groups rm -f)
    done
fi
```

It is a more complex approach than in the original version but it still
contains the basic race condition. `find` itself isn't safe against race
conditions, so the collection of UIDs in the beginning can already be fooled.
Once uid 0 comes into play we can apply the usual symlink attacks using
sub-directories to get arbitrary files deleted in the system.

Furthermore on current Tumbleweed during installation of texlive-filesystem
the following warning from chkstat is emitted:

```
(2/2) Installing: texlive-filesystem-2019.169-45.1.noarch ...........[done]
Additional rpm output:
Updating /etc/sysconfig/texlive ...
/var/cache/texmf/fonts/ls-R: on an insecure path - /var/cache/texmf/fonts has different non-root owner who could tamper with the file.
```

So the current ownership(s) in /var/cache/texmf are still broken.

All the comments about the cron job in this bug are actually misplaced, they
should have gone to <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - VUL-0: CVE-2020-8017: texlive-filesystem: race condition on cron job, no longer use /usr/bin/safe-{rm,rmdir}"
   href="show_bug.cgi?id=1158910">bug 1158910</a> instead. This bug here is about a race
condition in the spec file, not in the cron job.

In accordance with our new security disclosure policy [1], this bug here (the
spec file aspect) will be published - fixed or not - after March 22, based on
the creation date of the bug.

Internal CRD: 2020-03-22 or earlier

[1]: <a href="https://en.opensuse.org/openSUSE:Security_disclosure_policy">https://en.opensuse.org/openSUSE:Security_disclosure_policy</a></pre>
    </div><div id="c34" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c34">Comment 34</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-19 14:40:28 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Matthias Gerstner from <a href="show_bug.cgi?id=1159740#c33">comment #33</a>)

Then provide me a *working* solution which a) is inm your opinion secure and is *still* usabel for all TeXLive users which b) *are* member of the mktex and c) are *not* member of the mktex group.</pre>
    </div><div id="c35" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c35">Comment 35</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Matthias Gerstner</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-20 10:50:00 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to <a href="mailto:werner&#64;suse.com">werner&#64;suse.com</a> from <a href="show_bug.cgi?id=1159740#c34">comment #34</a>)
<span class="quote">&gt; (In reply to Matthias Gerstner from <a href="show_bug.cgi?id=1159740#c33">comment #33</a>)
&gt; 
&gt; Then provide me a *working* solution which a) is inm your opinion secure and
&gt; is *still* usabel for all TeXLive users which b) *are* member of the mktex
&gt; and c) are *not* member of the mktex group.</span >

I can give you suggestions and I already did so plenty. The possibility to
drop the bash cleanup code completely and switch to systemd-tmpfiles still
exists. The state you had before <a href="show_bug.cgi?id=1159740#c14">comment 14</a> was also quite good. By using not
the nobody user but the mktex user the security of the ls-R files is still
fine in the context of texlive.

We are not required to provide an implementation. In particular when the
current implementation is not coming from upstream but from yourself. When you
want to implement a certain feature a certain way then it is your
responsibility to do so in a safe manner.</pre>
    </div><div id="c36" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c36">Comment 36</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-20 12:30:06 UTC
        </span>
      </div>



<pre class="bz_comment_text" >This is an autogenerated message for OBS integration:
This bug (1159740) was mentioned in
<a href="https://build.opensuse.org/request/show/777662">https://build.opensuse.org/request/show/777662</a> Factory / texlive
<a href="https://build.opensuse.org/request/show/777663">https://build.opensuse.org/request/show/777663</a> Factory / texlive-filesystem</pre>
    </div><div id="c37" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c37">Comment 37</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-20 14:48:28 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Matthias Gerstner from <a href="show_bug.cgi?id=1159740#c35">comment #35</a>)
<span class="quote">&gt; (In reply to <a href="mailto:werner&#64;suse.com">werner&#64;suse.com</a> from <a href="show_bug.cgi?id=1159740#c34">comment #34</a>)
&gt; &gt; (In reply to Matthias Gerstner from <a href="show_bug.cgi?id=1159740#c33">comment #33</a>)
&gt; &gt; 
&gt; &gt; Then provide me a *working* solution which a) is inm your opinion secure and
&gt; &gt; is *still* usabel for all TeXLive users which b) *are* member of the mktex
&gt; &gt; and c) are *not* member of the mktex group.
&gt; 
&gt; I can give you suggestions and I already did so plenty. The possibility to
&gt; drop the bash cleanup code completely and switch to systemd-tmpfiles still
&gt; exists. The state you had before <a href="show_bug.cgi?id=1159740#c14">comment 14</a> was also quite good. By using not
&gt; the nobody user but the mktex user the security of the ls-R files is still
&gt; fine in the context of texlive.
&gt; 
&gt; We are not required to provide an implementation. In particular when the
&gt; current implementation is not coming from upstream but from yourself. When
&gt; you
&gt; want to implement a certain feature a certain way then it is your
&gt; responsibility to do so in a safe manner</span >

See latest submit requests for texlive and texlive-filesystem ... btw: It seems that you do not ave worked within a team wich had done a book or other projects within TeX/LaTeX. This implementation is one of the possible setups of MT_FEATURES in the  upstream configuration which I've choosen in /etc/texmf/web2c/mktex.cnf which is based on my experience as TeX/LaTeX/Printer manager at the University Stuttgart. There we had a group tex to be able to share on the fly created fonts between all members of the group tex.  Otherwise all users would have their own local copy of the generated fonts used for the most diploma and Phd thesis in their home directories.  An other possible configuration would be that every user has its own copy of the full TeXlive tree together with a local cache tree and all based in the home directory.</pre>
    </div><div id="c38" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c38">Comment 38</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-20 14:54:27 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Btw: there is also SR#777641 which seems to be accepted but does not have reached Factory

```
[  112s] RPMLINT report:
[  112s] ===============
[  122s] texlive-filesystem.noarch: W: cronjob-unauthorized-file /etc/cron.daily/suse-texlive
[  122s] A cron job file is installed by this package. If the package is
[  122s] intended for inclusion in any SUSE product please open a bug report to request
[  122s] review of the package by the security team. Please refer to
[  122s] <a href="https://en.opensuse.org/openSUSE:Package_security_guidelines#audit_bugs">https://en.opensuse.org/openSUSE:Package_security_guidelines#audit_bugs</a> for
[  122s] more             information
[  122s] 
[  122s] texlive-filesystem.noarch: W: non-standard-uid /var/cache/texmf/fonts mktex
[  122s] texlive-filesystem.noarch: W: non-standard-uid /var/cache/texmf/fonts/ls-R mktex
[  122s] texlive-filesystem.noarch: W: non-standard-uid /var/cache/texmf/fonts/pk mktex
[  122s] texlive-filesystem.noarch: W: non-standard-uid /var/cache/texmf/fonts/source mktex
[  122s] texlive-filesystem.noarch: W: non-standard-uid /var/cache/texmf/fonts/tfm mktex
[  122s] A file in this package is owned by an unregistered user id. To register the
[  122s] user, please branch the devel:openSUSE:Factory:rpmlint rpmlint package,  add
[  122s] the user to the &quot;config&quot; file and send a submitrequest.
```</pre>
    </div><div id="c39" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c39">Comment 39</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Johannes Segitz</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-24 09:34:36 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Dr. Werner Fink from <a href="show_bug.cgi?id=1159740#c37">comment #37</a>)
<span class="quote">&gt; See latest submit requests for texlive and texlive-filesystem ... </span >

  test &quot;$(stat --format '%U:%G' ${dir}/ls-R)&quot; != %{texusr}:%{texgrp}  || continue
  chown %{texusr}:%{texgrp} ${dir}/ls-R || error=1

This is insecure. There is no way you can do that securely as long as the directory you operate in can be manipulated by an unprivileged user (now mktex). There must not be a window between the check of the current permissions and the setting of the new ones. As this is not possible here the only way to do this securely is to drop privileges before operating on the directory.

Please go back to the version suggested by me and switch to nobody the new user.

I assigned CVE-2020-8016 for this issue. Please stop submitting ideas to Factory until we found a solution that you can accept and that is secure. If we would be strict every submit you made that changed the behavior and wasn't secure would need to get a CVE.

<span class="quote">&gt;  btw: It seems that you do not ave worked within a team wich had done a book or other projects within TeX/LaTeX.</span >

Yes, we don't have that experience. But for the question at hand that's only of limited relevance. We understand that you see this as necessary functionality, but it needs to be implemented in a secure way</pre>
    </div><div id="c40" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c40">Comment 40</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-24 09:49:52 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Johannes Segitz from <a href="show_bug.cgi?id=1159740#c39">comment #39</a>)
<span class="quote">&gt; (In reply to Dr. Werner Fink from <a href="show_bug.cgi?id=1159740#c37">comment #37</a>)
&gt; &gt; See latest submit requests for texlive and texlive-filesystem ... 
&gt; 
&gt;   test &quot;$(stat --format '%U:%G' ${dir}/ls-R)&quot; != %{texusr}:%{texgrp}  ||
&gt; continue
&gt;   chown %{texusr}:%{texgrp} ${dir}/ls-R || error=1
&gt; 
&gt; This is insecure. There is no way you can do that securely as long as the
&gt; directory you operate in can be manipulated by an unprivileged user (now
&gt; mktex). There must not be a window between the check of the current
&gt; permissions and the setting of the new ones. As this is not possible here
&gt; the only way to do this securely is to drop privileges before operating on
&gt; the directory.</span >

Hmmm ... OK.  What about simply removing this ls-R file as it will generated
in the %post scriplet.  Maybe with the help of a tag file owned by root only
to enforce the generation even if there will be an attacker file between the
time gap of %pre and %post?

<span class="quote">&gt; Please go back to the version suggested by me and switch to nobody the new
&gt; user.</span >

Why now nobody again? ... AFAICR from this thread I'm not allowed to use
nobody as user, hence the user mktex.  Now I've switched to user mktex and
it would be very helpful not switch back to nobody again.

<span class="quote">&gt; I assigned CVE-2020-8016 for this issue. Please stop submitting ideas to
&gt; Factory until we found a solution that you can accept and that is secure. If
&gt; we would be strict every submit you made that changed the behavior and
&gt; wasn't secure would need to get a CVE.
&gt; 
&gt; &gt;  btw: It seems that you do not ave worked within a team wich had done a book or other projects within TeX/LaTeX.
&gt; 
&gt; Yes, we don't have that experience. But for the question at hand that's only
&gt; of limited relevance. We understand that you see this as necessary
&gt; functionality, but it needs to be implemented in a secure way</span ></pre>
    </div><div id="c41" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c41">Comment 41</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-24 13:04:48 UTC
        </span>
      </div>



<pre class="bz_comment_text" >IMHO all ls-R files should be root:mktex and 0664, as well as the directory /var/cache/texmf/fonts/ shouldbe mktex:mktex and 1775, that is sticky.  With this is is only for root possible to remove or overwrite the ls-R files or ls-R symlinks with an other symlink. Nevertheless the mktex user and group is able to refresh the content of the ls-R files on any new file added to the texmf trees including the /var/cache/texmf/fonts/

The tool for this is /usr/lib/mktex/mktexlsr which is called by the binary /usr/lib/mktex/public via /usr/bin/mktexlsr.  This public binary, if called by root, switches over to user mktex and group mktex. If called by a user without membership of group mktex it only updates $HOME/.cache/texmf and  $HOME/texmf if exist.  If the user is member of the group mktex also the content of the /var/cache/texmf/fonts/ls-R is updated.</pre>
    </div><div id="c42" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c42">Comment 42</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-24 13:33:00 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Created <span class=""><a href="attachment.cgi?id=831040" name="attach_831040" title="texlive-filesystem.spec">attachment 831040</a> <a href="attachment.cgi?id=831040&amp;action=edit" title="texlive-filesystem.spec">[details]</a></span>
texlive-filesystem.spec

As long as /var/cache/texmf/fonts is sticky the following report is not true:

 Updating /etc/sysconfig/texlive ...
 /var/cache/texmf/fonts/ls-R: on an insecure path - /var/cache/texmf/fonts has different non-root owner who could tamper with the file.

as only root can remove or overwrite the ls-R files and only members of the group can modify the content of the ls-R files.

Maybe we need a new maintainer for TeXLive as I'm getting wearily ... anyone else should break the TeXLive installation and its usability</pre>
    </div><div id="c43" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c43">Comment 43</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-24 14:32:30 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Just a simple test:

 su -s /bin/bash - mktex
 ln -sf /etc/hosts.backup ls-R
 exit
 logout

Copy as root /etc/hosts to /etc/hosts.backup
then add as root the magic line as first line of /etc/hosts.backup with

  % ls-R -- filename database for kpathsea; do not change this line.

and then try as root to run mktexlsr

  mktexlsr 
  warning: kpathsea: /var/cache/texmf/fonts/ls-R: No usable entries in ls-R.
  warning: kpathsea: See the manual for how to generate ls-R.
  warning: kpathsea: /var/cache/texmf/fonts/ls-R: No usable entries in ls-R.
  warning: kpathsea: See the manual for how to generate ls-R.
  mktexlsr: Updating /etc/texmf/ls-R... 
  mktexlsr: Updating /var/lib/texmf/main/ls-R... 
  mktexlsr: /etc/hosts.backup: no write permission, skipping...
  mktexlsr: Updating /var/lib/texmf/ls-R... 
  mktexlsr: Done.

simply because the real mktexlsr is executred as mktex:mktrex and not as root:root
check as user mktex

  su -s /bin/bash - mktex
  echo XXXX &gt; ls-R 
  -bash: ls-R: Permission denied
  ls -l
  total 0
  lrwxrwxrwx 1 mktex mktex 17 Feb 24 15:22 ls-R -&gt; /etc/hosts.backup
  drwxrwxr-t 3 mktex mktex 20 Feb  5 07:58 pk
  drwxrwxr-t 2 mktex mktex  6 Feb  5 07:58 source
  drwxrwxr-t 2 mktex mktex  6 Feb  5 07:58 tfm</pre>
    </div><div id="c44" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c44">Comment 44</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-24 14:34:28 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Created <span class=""><a href="attachment.cgi?id=831047" name="attach_831047" title="the public.c which does execute the mktexlsr">attachment 831047</a> <a href="attachment.cgi?id=831047&amp;action=edit" title="the public.c which does execute the mktexlsr">[details]</a></span>
the public.c which does execute the mktexlsr</pre>
    </div><div id="c45" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c45">Comment 45</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Johannes Segitz</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-25 08:11:00 UTC
        </span>
      </div>



<pre class="bz_comment_text" ><span class="quote">&gt; Hmmm ... OK.  What about simply removing this ls-R file as it will generated
&gt; in the %post scriplet.  Maybe with the help of a tag file owned by root only
&gt; to enforce the generation even if there will be an attacker file between the
&gt; time gap of %pre and %post?</span >

yes, that should be okay. The tag file should be written in a root owned directory
though and the
  15425     chmod 0664 ${dir}/ls-R || error=1
  15437     chmod 0664 ${dir}/ls-R || error=1
calls need to also be called with setpriv, otherwise an attacker can change ${dir}/ls-R
to a symlink again before the call to chmod

<span class="quote">&gt; Why now nobody again? ... AFAICR from this thread I'm not allowed to use
&gt; nobody as user, hence the user mktex.  Now I've switched to user mktex and
&gt; it would be very helpful not switch back to nobody again.</span >

Sorry for the confusion. I switched two words. That should have read
&quot;switch nobody to the new user.&quot; So mktex is the way to go

As for the &quot;on an insecure path&quot; I'll have a look. As long as root doesn't
operate on this path this is not an issue</pre>
    </div><div id="c46" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c46">Comment 46</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-25 09:25:55 UTC
        </span>
      </div>



<pre class="bz_comment_text" >
(In reply to Johannes Segitz from <a href="show_bug.cgi?id=1159740#c45">comment #45</a>)
<span class="quote">&gt; &gt; Hmmm ... OK.  What about simply removing this ls-R file as it will generated
&gt; &gt; in the %post scriplet.  Maybe with the help of a tag file owned by root only
&gt; &gt; to enforce the generation even if there will be an attacker file between the
&gt; &gt; time gap of %pre and %post?
&gt; 
&gt; yes, that should be okay. The tag file should be written in a root owned
&gt; directory
&gt; though and the
&gt;   15425     chmod 0664 ${dir}/ls-R || error=1
&gt;   15437     chmod 0664 ${dir}/ls-R || error=1
&gt; calls need to also be called with setpriv, otherwise an attacker can change
&gt; ${dir}/ls-R
&gt; to a symlink again before the call to chmod
&gt; 
&gt; &gt; Why now nobody again? ... AFAICR from this thread I'm not allowed to use
&gt; &gt; nobody as user, hence the user mktex.  Now I've switched to user mktex and
&gt; &gt; it would be very helpful not switch back to nobody again.
&gt; 
&gt; Sorry for the confusion. I switched two words. That should have read
&gt; &quot;switch nobody to the new user.&quot; So mktex is the way to go
&gt; 
&gt; As for the &quot;on an insecure path&quot; I'll have a look. As long as root doesn't
&gt; operate on this path this is not an issue</span >


As long as I had been maintainer of TeTeX and its successor TeXLive root had never 
operate on this path.  The former su solution within the mktex scripts themselfs I had replaced by the public.c solution in 2010 with its switch to user nobody and group mktex, simply do not patch the scripts every time and ignore the scwithc from shell script to perl script.   That is that there was never an attack vector here</pre>
    </div><div id="c47" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c47">Comment 47</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-27 17:12:10 UTC
        </span>
      </div>



<pre class="bz_comment_text" >SUSE-SU-2020:0520-1: An update that contains security fixes can now be installed.

Category: security (moderate)
Bug References: 1150556,1155381,1158910,1159740
CVE References: 
Sources used:
SUSE Linux Enterprise Software Development Kit 12-SP5 (src):    texlive-filesystem-2013.74-16.5.1
SUSE Linux Enterprise Software Development Kit 12-SP4 (src):    texlive-filesystem-2013.74-16.5.1

NOTE: This line indicates an update has been released for the listed product(s). At times this might be only a partial fix. If you have questions please reach out to maintenance coordination.</pre>
    </div><div id="c48" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c48">Comment 48</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-27 17:14:39 UTC
        </span>
      </div>



<pre class="bz_comment_text" >SUSE-SU-2020:0519-1: An update that contains security fixes can now be installed.

Category: security (moderate)
Bug References: 1150556,1155381,1158910,1159740
CVE References: 
Sources used:
SUSE Linux Enterprise Module for Desktop Applications 15-SP1 (src):    texlive-filesystem-2017.135-9.5.1

NOTE: This line indicates an update has been released for the listed product(s). At times this might be only a partial fix. If you have questions please reach out to maintenance coordination.</pre>
    </div><div id="c50" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c50">Comment 50</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-02-28 17:30:06 UTC
        </span>
      </div>



<pre class="bz_comment_text" >This is an autogenerated message for OBS integration:
This bug (1159740) was mentioned in
<a href="https://build.opensuse.org/request/show/780341">https://build.opensuse.org/request/show/780341</a> Factory / rpmlint</pre>
    </div><div id="c53" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c53">Comment 53</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dr. Werner Fink</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-03-05 10:32:11 UTC
        </span>
      </div>



<pre class="bz_comment_text" >When can I submit to Tumbleweed/Factory</pre>
    </div><div id="c54" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c54">Comment 54</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Johannes Segitz</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-03-06 09:19:44 UTC
        </span>
      </div>



<pre class="bz_comment_text" >(In reply to Dr. Werner Fink from <a href="show_bug.cgi?id=1159740#c53">comment #53</a>)
Submission for the spec file to Factory is fine. I'll have another look at the cron job in 1158910</pre>
    </div><div id="c55" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c55">Comment 55</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-03-23 17:00:14 UTC
        </span>
      </div>



<pre class="bz_comment_text" >This is an autogenerated message for OBS integration:
This bug (1159740) was mentioned in
<a href="https://build.opensuse.org/request/show/787537">https://build.opensuse.org/request/show/787537</a> Factory / texlive-filesystem</pre>
    </div><div id="c56" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c56">Comment 56</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-03-23 20:46:05 UTC
        </span>
      </div>



<pre class="bz_comment_text" >openSUSE-SU-2020:0368-1: An update that contains security fixes can now be installed.

Category: security (moderate)
Bug References: 1150556,1155381,1158910,1159740
CVE References: 
Sources used:
openSUSE Leap 15.1 (src):    texlive-filesystem-2017.135-lp151.8.3.1</pre>
    </div><div id="c66" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c66">Comment 66</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-06-09 22:34:15 UTC
        </span>
      </div>



<pre class="bz_comment_text" >SUSE-SU-2020:1580-1: An update that fixes two vulnerabilities is now available.

Category: security (moderate)
Bug References: 1158910,1159740
CVE References: CVE-2020-8016,CVE-2020-8017
Sources used:
SUSE Linux Enterprise Module for Desktop Applications 15-SP1 (src):    texlive-2017.20170520-11.13.2, texlive-filesystem-2017.135-9.12.1

NOTE: This line indicates an update has been released for the listed product(s). At times this might be only a partial fix. If you have questions please reach out to maintenance coordination.</pre>
    </div><div id="c67" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c67">Comment 67</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-06-09 22:35:18 UTC
        </span>
      </div>



<pre class="bz_comment_text" >SUSE-SU-2020:1581-1: An update that solves two vulnerabilities and has one errata is now available.

Category: security (moderate)
Bug References: 1138793,1158910,1159740
CVE References: CVE-2020-8016,CVE-2020-8017
Sources used:
SUSE Linux Enterprise Software Development Kit 12-SP5 (src):    texlive-2013.20130620-22.8.2, texlive-filesystem-2013.74-16.12.1
SUSE Linux Enterprise Software Development Kit 12-SP4 (src):    texlive-2013.20130620-22.8.2, texlive-filesystem-2013.74-16.12.1
SUSE Linux Enterprise Server 12-SP5 (src):    texlive-2013.20130620-22.8.2
SUSE Linux Enterprise Server 12-SP4 (src):    texlive-2013.20130620-22.8.2

NOTE: This line indicates an update has been released for the listed product(s). At times this might be only a partial fix. If you have questions please reach out to maintenance coordination.</pre>
    </div><div id="c68" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c68">Comment 68</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-06-13 07:17:39 UTC
        </span>
      </div>



<pre class="bz_comment_text" >openSUSE-SU-2020:0804-1: An update that fixes two vulnerabilities is now available.

Category: security (moderate)
Bug References: 1158910,1159740
CVE References: CVE-2020-8016,CVE-2020-8017
Sources used:
openSUSE Leap 15.1 (src):    texlive-2017.20170520-lp151.12.3.1, texlive-filesystem-2017.135-lp151.8.6.1</pre>
    </div><div id="c69" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c69">Comment 69</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Swamp Workflow Management</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-07-08 13:26:03 UTC
        </span>
      </div>



<pre class="bz_comment_text" >SUSE-SU-2020:1580-2: An update that fixes two vulnerabilities is now available.

Category: security (moderate)
Bug References: 1158910,1159740
CVE References: CVE-2020-8016,CVE-2020-8017
Sources used:
SUSE Linux Enterprise Module for Desktop Applications 15-SP2 (src):    texlive-filesystem-2017.135-9.12.1

NOTE: This line indicates an update has been released for the listed product(s). At times this might be only a partial fix. If you have questions please reach out to maintenance coordination.</pre>
    </div><div id="c70" class="bz_comment">

      <div class="bz_comment_head">



        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=1159740#c70">Comment 70</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Alexandros Toptsoglou</span>
</span>
        </span>

        <span class="bz_comment_time">
          2020-07-09 14:31:26 UTC
        </span>
      </div>



<pre class="bz_comment_text" >Done</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=1159740">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=1159740">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=1159740">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>        


<div class="navigation">
  
  <i><font color="#777777">First</font></i>
  <i><font color="#777777">Last</font></i>
  <i><font color="#777777">Prev</font></i>
  <i><font color="#777777">Next</font></i>
  &nbsp;&nbsp;
  <i><font color="#777777">This bug is not in your last
    search results.</font></i>
</div>

<br>
</div>



<div id="footer">
  <div class="intro"></div>




<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li>
      <span class="separator">| </span>
        <a href="request.cgi">Requests</a></li>

  <li>
        <span class="separator">| </span>
        <a href="docs/en/html/bug_page.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <!--a id="login_link_bottom" href="show_bug.cgi?id=1159740&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a-->
  <a id="login_link_bottom" href="show_bug.cgi?id=1159740&amp;GoAheadAndLogIn=1">Log In</a>


  <form action="show_bug.cgi?id=1159740" method="POST" 
        class="mini_login bz_default_hidden"
        id="mini_login_bottom"
        onsubmit="return check_mini_login_fields( '_bottom' );"
  >
    <input id="Bugzilla_login_bottom" 
           class="bz_login"
           name="Bugzilla_login"
           title="Login"
           onfocus="mini_login_on_focus('_bottom')"
    >
    <input class="bz_password" 
           id="Bugzilla_password_bottom" 
           name="Bugzilla_password"
           type="password"
           title="Password"
    >
    <input class="bz_password bz_default_hidden bz_mini_login_help" type="text" 
           id="Bugzilla_password_dummy_bottom" value="password"
           title="Password"
           onfocus="mini_login_on_focus('_bottom')"
    >
    <input type="submit" name="GoAheadAndLogIn" value="Log in" 
            id="log_in_bottom">
    <script type="text/javascript">
      mini_login_constants = {
          "login" : "login",
          "warning" : "You must set the login and password before logging in."
      };
      
      if (YAHOO.env.ua.gecko || YAHOO.env.ua.ie || YAHOO.env.ua.opera) {
          YAHOO.util.Event.onDOMReady(function() {
              init_mini_login_form('_bottom');
          });
      }
      else {
          YAHOO.util.Event.on(window, 'load', function () {
              window.setTimeout(function() {
                  init_mini_login_form('_bottom');
              }, 200);
          });
    }
    </script>
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>
<li id="forgot_container_bottom">
  <span class="separator">| </span>
  <a id="forgot_link_bottom" href="https://idp-portal.suse.com/univention/self-service/#page=passwordreset">Forgot Password</a>
</li>
</ul>
  </li>

  
    


  <form id="testopia_helper_frm"></form><ul class="links">
    <li>Legal: </li>
    <li><a href="http://en.opensuse.org/Terms_of_site">openSUSE</a></li>
    <li><a href="https://www.suse.com/company/legal/">SUSE</a></li>
  </ul>
</ul>

  <div class="outro"></div>
</div>


</body>
</html>