<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
<title>Bug 739134 – Out of bounds read / heap overflow in tga importer / function bgr2rgb.part.1</title>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
<link href="https://bugzilla.gnome.org/" rel="Top"/>
<link href="showdependencytree.cgi?id=739134&amp;hide_resolved=1" rel="Show" title="Dependency Tree"/>
<link href="show_bug.cgi?format=multiple&amp;id=739134" rel="Show" title="Printer-Friendly Version"/>
<link href="skins/standard/global.css" rel="alternate stylesheet" title="Classic"/><link href="js/yui/assets/skins/sam/autocomplete.css" rel="stylesheet" type="text/css"/><link href="js/yui/assets/skins/sam/calendar.css" rel="stylesheet" type="text/css"/><link href="skins/standard/global.css" rel="stylesheet" type="text/css"/><link href="skins/standard/show_bug.css" rel="stylesheet" type="text/css"/><!--[if lte IE 7]>
      


  <link href="skins/standard/IE-fixes.css" rel="stylesheet"
        type="text/css" >
<![endif]-->
<link href="skins/contrib/Gnome/global.css" rel="stylesheet" title="Gnome" type="text/css"/>
<script src="js/yui/yahoo-dom-event/yahoo-dom-event.js" type="text/javascript"></script><script src="js/yui/cookie/cookie-min.js" type="text/javascript"></script><script src="js/yui/datasource/datasource-min.js" type="text/javascript"></script><script src="js/yui/connection/connection-min.js" type="text/javascript"></script><script src="js/yui/json/json-min.js" type="text/javascript"></script><script src="js/yui/autocomplete/autocomplete-min.js" type="text/javascript"></script><script src="js/yui/calendar/calendar-min.js" type="text/javascript"></script><script src="js/global.js" type="text/javascript"></script>
<script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 50
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    'You must enter a Description for this attachment.',
                component_required:
                    'You must select a Component for this bug.',
                description_required:
                    'You must enter a Description for this bug.',
                short_desc_required:
                    'You must enter a Summary for this bug.',
                version_required:
                    'You must select a Version for this bug.'
            }
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null, 
                             "Bug 739134 – Out of bounds read \/ heap overflow in tga importer \/ function bgr2rgb.part.1",  
                             "show_bug.cgi?id=739134" );
        document.title = "Bug 739134 – Out of bounds read \/ heap overflow in tga importer \/ function bgr2rgb.part.1";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "Bug 739134 – Out of bounds read \/ heap overflow in tga importer \/ function bgr2rgb.part.1", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();
    });
    // -->
    </script>
<script src="js/util.js" type="text/javascript"></script><script src="js/field.js" type="text/javascript"></script>
<link href="./search_plugin.cgi" rel="search" title="GNOME Bugzilla" type="application/opensearchdescription+xml"/>
<link href="images/favicon.ico" rel="shortcut icon"/><link href="extensions/TraceParser/web/style.css" rel="stylesheet" type="text/css"/>
</head>
<body class="bugzilla-gnome-org bz_bug bz_status_RESOLVED bz_product_GIMP bz_component_General bz_bug_739134 yui-skin-sam" onload="">
<div id="header">
<div id="banner">
</div>
<table border="0" cellpadding="0" cellspacing="0" id="titles">
<tr>
<td id="title">
<p>GNOME Bugzilla – Bug 739134</p>
</td>
<td id="subtitle">
<p class="subheader">Out of bounds read / heap overflow in tga importer / function bgr2rgb.part.1</p>
</td>
<td id="information">
<p class="header_addl_info">Last modified: 2017-12-21 00:17:24 UTC</p>
</td>
</tr>
</table>
<table cellpadding="0" cellspacing="0" class="bz_default_hidden" id="lang_links_container"><tr><td>
</td></tr></table>
<ul class="links"><li><a href="./">Home</a></li></ul>
</div>
<div id="bugzilla-body">
<div style="margin-bottom: 50px; margin-top: 50px; padding: 40px; text-align: center; background-color: rgb(74,134,207); border: rgb(57,104,161); color: rgb(255,255,255); line-height: 300%;">After an <a href="https://wiki.gnome.org/Initiatives/DevelopmentInfrastructure" style="color: rgb(255,255,255);">evaluation</a>, GNOME has moved from Bugzilla to <a href="https://gitlab.gnome.org/" style="color: rgb(255,255,255);">GitLab</a>. <a href="https://wiki.gnome.org/GitLab" style="color: rgb(255,255,255);">Learn more about GitLab</a>. <br/><span style="background-color: #EE0000; font-size: xx-large;"><b>No new issues can be reported in GNOME Bugzilla anymore.</b></span>
<br/><span style="background-color: #EE0000; font-size: xx-large;"><b>To report an issue in a GNOME project, <a href="https://gitlab.gnome.org/GNOME" style="color: rgb(255,255,255);">go to GNOME GitLab</a></b>.</span><br/>Do <b>not</b> go to GNOME Gitlab for: <a href="https://sourceforge.net/p/bluefish/tickets" style="color: rgb(255,255,255);">Bluefish</a>, <a href="https://github.com/doxygen/doxygen/issues" style="color: rgb(255,255,255);">Doxygen</a>, <a href="https://bugs.gnucash.org/" style="color: rgb(255,255,255);">GnuCash</a>, <a href="https://gitlab.freedesktop.org/gstreamer/" style="color: rgb(255,255,255);">GStreamer</a>, <a href="https://github.com/afcowie/java-gnome/issues" style="color: rgb(255,255,255);">java-gnome</a>, <a href="https://github.com/ldtp/ldtp2/issues" style="color: rgb(255,255,255);">LDTP</a>, <a href="https://gitlab.freedesktop.org/NetworkManager/NetworkManager/issues" style="color: rgb(255,255,255);">NetworkManager</a>, <a href="https://github.com/tomboy-notes/tomboy/issues" style="color: rgb(255,255,255);">Tomboy</a>.</div>
<script type="text/javascript">
<!--

//-->
</script>
<form action="process_bug.cgi" id="changeform" method="post" name="changeform">
<input name="delta_ts" type="hidden" value="2017-12-21 00:17:24"/>
<input name="longdesclength" type="hidden" value="15"/>
<input name="id" type="hidden" value="739134"/>
<input name="token" type="hidden" value="1626083759-p3XyqQGF_6jF1VLEScxNNVT-PYzoYJn7oWDDuxtFyDw"/>
<div class="bz_alias_short_desc_container edit_form">
<a href="show_bug.cgi?id=739134"><b>Bug 739134</b></a> -<span class="bz_default_hidden" id="summary_alias_container"> 
        (<span id="alias_nonedit_display">CVE-2017-17786</span>) 
      <span id="short_desc_nonedit_display">Out of bounds read / heap overflow in tga importer / function bgr2rgb.part.1</span>
</span>
<div id="summary_alias_input">
<table id="summary">
<tr>
<td colspan="2">(CVE-2017-17786)
          </td>
</tr>
<tr><th class="field_label" id="field_label_short_desc">
<label accesskey="s" for="short_desc">
<a class="field_help_link" href="page.cgi?id=fields.html#short_desc" title="The bug summary is a short sentence which succinctly describes what the bug is about.">Summary:</a>
</label>
</th>
<td>Out of bounds read / heap overflow in tga importer / function bgr2rgb.part.1
          </td>
</tr>
</table>
</div>
</div>
<script type="text/javascript">
    hideAliasAndSummary('Out of bounds read \/ heap overflow in tga importer \/ function bgr2rgb.part.1', 'CVE-2017-17786');
  </script>
<table class="edit_form">
<tr>
<td class="bz_show_bug_column" id="bz_show_bug_column_1">
<table>
<tr>
<th class="field_label">
<a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
<td id="bz_field_status">
<span id="static_bug_status">RESOLVED
          FIXED
      </span>
</td>
</tr>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_product">
<a class="field_help_link" href="describecomponents.cgi" title="Bugs are categorised into Products and Components. Select a Classification to narrow down this list.">Product:</a>
</th>
<td class="field_value" id="field_container_product">GIMP</td>
</tr>
<tr class="bz_default_hidden"><th class="field_label" id="field_label_classification">
<a class="field_help_link" href="page.cgi?id=fields.html#classification" title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation.">Classification:</a>
</th>
<td class="field_value" id="field_container_classification">Other</td>
</tr>
<tr><th class="field_label" id="field_label_component">
<a class="field_help_link" href="describecomponents.cgi?product=GIMP" title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list.">Component:</a>
</th>
<td class="field_value" id="field_container_component">General</td>
</tr>
<tr><th class="field_label" id="field_label_version">
<label for="version">
<a class="field_help_link" href="page.cgi?id=fields.html#version" title="The version field defines the version of the software the bug was found in.">Version:</a>
</label>
</th>
<td>2.8.14
  </td>
</tr>
<tr><th class="field_label" id="field_label_rep_platform">
<label accesskey="h" for="rep_platform">
<a class="field_help_link" href="page.cgi?id=fields.html#rep_platform" title='The hardware platform the bug was observed on. Note: When searching, selecting the option "All" only finds bugs whose value for this field is literally the word "All".'>Hardware:</a>
</label>
</th>
<td class="field_value">Other
       All
      </td>
</tr>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr>
<th class="field_label">
<label accesskey="i" for="priority">
<a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
<td>Normal
       blocker
      </td>
</tr>
<tr>
<th class="field_label">
<label for="target_milestone">
<a href="page.cgi?id=fields.html#target_milestone">
            Target Milestone</a></label>:
        </th><td>2.10
  </td>
</tr>
<tr>
<th class="field_label">
<a href="page.cgi?id=fields.html#assigned_to">Assigned To</a>:
      </th>
<td><span class="vcard"><span class="fn">GIMP Bugs</span>
</span>
</td>
</tr>
<tr><th class="field_label" id="field_label_qa_contact">
<label accesskey="q" for="qa_contact">
<a class="field_help_link" href="page.cgi?id=fields.html#qa_contact" title="The person responsible for confirming this bug if it is unconfirmed, and for verifying the fix once the bug has been resolved.">QA Contact:</a>
</label>
</th>
<td><span class="vcard"><span class="fn">GIMP Bugs</span>
</span>
</td>
</tr>
<script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'bugs\x40gimp.org',
        'bugs\x40gimp.org');
    </script>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_bug_file_loc">
<label accesskey="u" for="bug_file_loc">
<a class="field_help_link" href="page.cgi?id=fields.html#bug_file_loc" title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen.">URL:</a>
</label>
</th>
<td>
<span id="bz_url_input_area">
</span>
</td>
</tr>
<tr><th class="field_label" id="field_label_status_whiteboard">
<label accesskey="w" for="status_whiteboard">
<a class="field_help_link" href="page.cgi?id=fields.html#status_whiteboard" title="Each bug has a free-form single line text entry box for adding tags and status information.">Whiteboard:</a>
</label>
</th><td colspan="2">
</td>
</tr>

<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_dependson">
<a class="field_help_link" href="page.cgi?id=fields.html#dependson" title="The bugs listed here must be resolved before this bug can be resolved.">Depends on:</a>
</th>
<td>
<span id="dependson_input_area">
</span>
</td>
</tr>
<tr><th class="field_label" id="field_label_blocked">
<a class="field_help_link" href="page.cgi?id=fields.html#blocked" title="This bug must be resolved before the bugs listed in this field can be resolved.">Blocks:</a>
</th>
<td>
<span id="blocked_input_area">
</span>
</td>
</tr>
<tr>
<th> </th>

</tr>
</table>
</td>
<td>
<div class="bz_column_spacer"> </div>
</td>
<td class="bz_show_bug_column" id="bz_show_bug_column_2">
<table cellpadding="3" cellspacing="1">
<tr>
<th class="field_label">
      Reported:
    </th>
<td>2014-10-24 14:51 UTC by <span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</td>
</tr>
<tr>
<th class="field_label">
      Modified:
    </th>
<td>2017-12-21 00:17 UTC 
    </td>
</tr>

<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
<tr><th class="field_label" id="field_label_see_also">
<a class="field_help_link" href="page.cgi?id=fields.html#see_also" title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with a comma. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields.">See Also:</a>
</th>
<td class="field_value" id="field_container_see_also"></td>
</tr>
<tr><th class="field_label" id="field_label_cf_gnome_target">
<a class="field_help_link" href="page.cgi?id=fields.html#cf_gnome_target" title="A custom Drop Down field in this installation of GNOME Bugzilla.">GNOME target:</a>
</th>
<td class="field_value" colspan="2" id="field_container_cf_gnome_target">---</td>
</tr>
<tr><th class="field_label" id="field_label_cf_gnome_version">
<a class="field_help_link" href="page.cgi?id=fields.html#cf_gnome_version" title="A custom Drop Down field in this installation of GNOME Bugzilla.">GNOME version:</a>
</th>
<td class="field_value" colspan="2" id="field_container_cf_gnome_version">---</td>
</tr>
<tr>
<td class="bz_section_spacer" colspan="2"></td>
</tr>
</table>
</td>
</tr>
<tr>
<td colspan="3">
<hr id="bz_top_half_spacer"/>
</td>
</tr>
</table>
<table cellpadding="0" cellspacing="0" id="bz_big_form_parts"><tr>
<td>
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>
<br/>
<table cellpadding="4" cellspacing="0" id="attachment_table">
<tr id="a0">
<th align="left" colspan="3">
      Attachments
    </th>
</tr>
<tr class="bz_contenttype_image_x-tga" id="a1">
<td valign="top">
<a href="attachment.cgi?id=289280" title="View the content of the attachment">
<b>sample tga file exposing the bug</b></a>
<span class="bz_attach_extra_info">
              (18.94 KB,
                image/x-tga)

            <br/>
<a href="#attach_289280" title="Go to the comment associated with the attachment">2014-10-24 14:51 UTC</a>,

            <span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">
             
          </td>
<td valign="top">
<a href="attachment.cgi?id=289280&amp;action=edit">Details</a>
</td>
</tr>
<tr class="bz_contenttype_text_plain" id="a2">
<td valign="top">
<a href="attachment.cgi?id=289281" title="View the content of the attachment">
<b>address sanitizer output</b></a>
<span class="bz_attach_extra_info">
              (2.15 KB,
                text/plain)

            <br/>
<a href="#attach_289281" title="Go to the comment associated with the attachment">2014-10-24 14:51 UTC</a>,

            <span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">
             
          </td>
<td valign="top">
<a href="attachment.cgi?id=289281&amp;action=edit">Details</a>
</td>
</tr>
<tr class="bz_contenttype_text_plain" id="a3">
<td valign="top">
<a href="attachment.cgi?id=289282" title="View the content of the attachment">
<b>decoded / symbolized address sanitizer output</b></a>
<span class="bz_attach_extra_info">
              (2.58 KB,
                text/plain)

            <br/>
<a href="#attach_289282" title="Go to the comment associated with the attachment">2014-10-24 14:52 UTC</a>,

            <span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">
             
          </td>
<td valign="top">
<a href="attachment.cgi?id=289282&amp;action=edit">Details</a>
</td>
</tr>
<tr class="bz_contenttype_text_plain bz_patch" id="a4">
<td valign="top">
<a href="attachment.cgi?id=363975" title="View the content of the attachment">
<b>patch to prevent trying to load rgba/32 bit image where bytes per pixel is not 4</b></a>
<span class="bz_attach_extra_info">
              (553 bytes,
                patch)

            <br/>
<a href="#attach_363975" title="Go to the comment associated with the attachment">2017-11-18 15:06 UTC</a>,

            <span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">needs-work
          </td>
<td valign="top">
<a href="attachment.cgi?id=363975&amp;action=edit">Details</a>  |
    <a href="review?bug=739134&amp;attachment=363975">Review</a>
</td>
</tr>
<tr class="bz_contenttype_image_x-tga" id="a5">
<td valign="top">
<a href="attachment.cgi?id=365807" title="View the content of the attachment">
<b>poc file smaller (tga)</b></a>
<span class="bz_attach_extra_info">
              (18 bytes,
                image/x-tga)

            <br/>
<a href="#attach_365807" title="Go to the comment associated with the attachment">2017-12-20 20:52 UTC</a>,

            <span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
</td>
<td class="bz_attach_status" valign="top">
             
          </td>
<td valign="top">
<a href="attachment.cgi?id=365807&amp;action=edit">Details</a>
</td>
</tr>

</table>
<br/>
</td>
<td>
</td>
</tr></table>
<div id="comments"><script src="js/comments.js" type="text/javascript">
</script>
<script type="text/javascript">
<!--
  /* Adds the reply text to the `comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>
<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table cellpadding="0" cellspacing="0" class="bz_comment_table"><tr>
<td>
<div class="bz_comment bz_first_comment" id="c0">
<div class="bz_first_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c0">Description</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2014-10-24 14:51:05 UTC
        </span>
</div>
<pre class="bz_comment_text">The tga importer has an out of bounds read / heap overflow bug. The bug can be triggered with the attached sample when GIMP was compiled with address sanitizer. I'll attach the sample and the output of address sanitizer.
This is a potential (low severity) security issue, however as it is only a read error it's unlikely there's a realistic exploit scenario. Still it should be fixed.</pre>
</div><div class="bz_comment" id="c1">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c1">Comment 1</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2014-10-24 14:51:25 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=289280" name="attach_289280" title="sample tga file exposing the bug">attachment 289280</a> <a href="attachment.cgi?id=289280&amp;action=edit" title="sample tga file exposing the bug">[details]</a></span>
sample tga file exposing the bug</pre>
</div><div class="bz_comment" id="c2">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c2">Comment 2</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2014-10-24 14:51:42 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=289281" name="attach_289281" title="address sanitizer output">attachment 289281</a> <a href="attachment.cgi?id=289281&amp;action=edit" title="address sanitizer output">[details]</a></span>
address sanitizer output</pre>
</div><div class="bz_comment" id="c3">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c3">Comment 3</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2014-10-24 14:52:01 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=289282" name="attach_289282" title="decoded / symbolized address sanitizer output">attachment 289282</a> <a href="attachment.cgi?id=289282&amp;action=edit" title="decoded / symbolized address sanitizer output">[details]</a></span>
decoded / symbolized address sanitizer output</pre>
</div><div class="bz_comment" id="c4">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c4">Comment 4</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-11-18 15:06:34 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=363975" name="attach_363975" title="patch to prevent trying to load rgba/32 bit image where bytes per pixel is not 4">attachment 363975</a> <a href="attachment.cgi?id=363975&amp;action=edit" title="patch to prevent trying to load rgba/32 bit image where bytes per pixel is not 4">[details]</a></span> <a href="review?bug=739134&amp;attachment=363975">[review]</a>
patch to prevent trying to load rgba/32 bit image where bytes per pixel is not 4

I made an attempt at fixing this.
The problem is that for an RGBA image the code assumes it's always 4 bytes / 32 bits per pixel, however you can define less bits per pixel in the header, which should be invalid.

The attached patch will catch this case and prevent loading.

This fixes this case, but there may very well be similar issues in the code.</pre>
</div><div class="bz_comment" id="c5">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c5">Comment 5</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Jehan</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-20 09:48:25 UTC
        </span>
</div>
<pre class="bz_comment_text">Thanks for the patch!

Next time, could you make it a git-formatted patch so that it is easier to apply, and has proper authorship and description comment? Are the name and email used in bugzilla the right authorship I can use if I push this change?

Anyway I am going to review now.

<span class="quote">&gt; This fixes this case, but there may very well be similar issues in the code.</span>

I am sure there are. We'll be happy to get more patches if you find more. :-)</pre>
</div><div class="bz_comment" id="c6">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c6">Comment 6</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-20 09:53:33 UTC
        </span>
</div>
<pre class="bz_comment_text">yes, feel free to add me as the author in all patches I upload with Hanno Böck / hanno[at]hboeck[dot]de.</pre>
</div><div class="bz_comment" id="c7">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c7">Comment 7</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Jehan</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-20 12:12:30 UTC
        </span>
</div>
<pre class="bz_comment_text">Review of <span class=""><a href="attachment.cgi?id=363975" name="attach_363975" title="patch to prevent trying to load rgba/32 bit image where bytes per pixel is not 4">attachment 363975</a> <a href="attachment.cgi?id=363975&amp;action=edit" title="patch to prevent trying to load rgba/32 bit image where bytes per pixel is not 4">[details]</a></span> <a href="review?bug=739134&amp;attachment=363975">[review]</a>:

So the patch has a few issues.

First the validity check you do can be made earlier, inside `load_image()` when the header is parsed. We can already stop here, so let's do the error check as soon as possible (also that's where most similar checks on supported variants of TGA are already done).

Second issue is that, when you say:

<span class="quote">&gt; The problem is that for an RGBA image the code assumes it's always 4 bytes / 32 bits per pixel, however you can define less bits per pixel in the header, which should be invalid.</span>

This is actually not right.
I could not find an official spec for TGA, but found a bunch of specs here and there. Basically the `bitsperpixel` (offset x10 in the file) allows variants, even within RGB/RGBA images. For instance, on this link: <a href="http://www.paulbourke.net/dataformats/tga/">http://www.paulbourke.net/dataformats/tga/</a>

<span class="quote">&gt; The bitsperpixel specifies the size of each colour value. When 24 or 32 the normal conventions apply. For 16 bits each colour component is stored as 5 bits and the remaining bit is a binary alpha value. The colour components are converted into single byte components by simply shifting each component up by 3 bits (multiply by 8).</span>

And it turns out we have the support in our TGA plug-in. Actually we have support for RGB 15 and 24 bits, and RGBA 16 and 32 bits. With 15/16, the function upsample() will be used, whereas that for 24/32, it uses bgr2rgb(). Your patch would break such support of valid TGA files (RGBA stored as 16-bits in particular would lose support although it is valid).

Now you are right that the code (in particular these 2 functions) make assumptions without comparing with the values in the header. And that's where the issue happens. In your example TGA file, I can see in a hexadecimal editor that it is a 24bits RGBA image with 4 declared bits of alpha, which is wrong (I don't know if this could theoretically be supported, though it would be weird since RGB would be on 20 bits, which is not a multiple of 3! In any case, we clearly don't have support for such variant, whether possible or not valid theoretically, so we must stop there for sure). Simply we must be more thorough with our checks regarding what we support or not.
While I was reviewing, I have written a more correct patch for this issue.</pre>
</div><div class="bz_comment" id="c8">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c8">Comment 8</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Jehan</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-20 12:16:00 UTC
        </span>
</div>
<pre class="bz_comment_text">Ok here is the patch fixing the issue and not losing support for valid 16 bits RGBA TGA files.
We are simply more thorough on our tests, and we do them earlier. Basically let's check that 15-bit and 24-bit RGB images have 0 alpha bits, that 16-bit RGBA has 1 alpha bit and finally 32-bit RGBA has 8 alpha bits.

commit <a href="https://git.gnome.org/browse/GIMP/commit/?id=674b62ad45b6579ec6d7923dc3cb1ef4e8b5498b">674b62ad45b6579ec6d7923dc3cb1ef4e8b5498b</a> (HEAD -&gt; master, origin/master, origin/HEAD)
Author: Jehan &lt;<a href="mailto:jehan@girinstud.io">jehan@girinstud.io</a>&gt;
Date:   Wed Dec 20 13:02:38 2017 +0100

    <a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=739134" title="RESOLVED FIXED - Out of bounds read / heap overflow in tga importer / function bgr2rgb.part.1">Bug 739134</a> - (CVE-2017-17786) Out of bounds read / heap overflow in...
    
    ... TGA importer.
    
    Be more thorough on valid TGA RGB and RGBA images.
    In particular current TGA plug-in can import RGBA as 32 bits (8 bits per
    channel) and 16 bits (5 bits per color channel and 1 bit for alpha), and
    RGB as 15 and 24 bits.
    Maybe there exist more variants, but if they do exist, we simply don't
    support them yet.
    
    Thanks to Hanno Böck for the report and a first patch attempt.</pre>
</div><div class="bz_comment" id="c9">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c9">Comment 9</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Jehan</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-20 12:34:10 UTC
        </span>
</div>
<pre class="bz_comment_text">Small update.
According to: <a href="http://www.paulbourke.net/dataformats/tga/">http://www.paulbourke.net/dataformats/tga/</a>

<span class="quote">&gt; For the Targa 16, this would be 0 or 1</span>

(about the alpha bits)
So it is possible to have a 16-bit RGB with the last bit simply ignored. Code updated.

commit <a href="https://git.gnome.org/browse/GIMP/commit/?id=8ea316667c8a3296bce2832b3986b58d0fdfc077">8ea316667c8a3296bce2832b3986b58d0fdfc077</a> (HEAD -&gt; master, origin/master, origin/HEAD)
Author: Jehan &lt;<a href="mailto:jehan@girinstud.io">jehan@girinstud.io</a>&gt;
Date:   Wed Dec 20 13:26:26 2017 +0100

    plug-ins: TGA 16-bit RGB (without alpha bit) is also valid.
    
    According to some spec on the web, 16-bit RGB is also valid. In this
    case, the last bit is simply ignored (at least that's how it is
    implemented right now).

 plug-ins/common/file-tga.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)</pre>
</div><div class="bz_comment" id="c10">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c10">Comment 10</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-20 12:41:37 UTC
        </span>
</div>
<pre class="bz_comment_text">Thanks.

It would be ideal to have a test suite that checks the rendering of different variations of all supported input file formats against a raw test rendering. That would make it easier to check such patches for correctness. But I guess I'll bring that up on the dev mailing list.

I must admit it's challenging for me to try to propose fixes for these issues while not being overly familiar with the code and the supported formats.</pre>
</div><div class="bz_comment" id="c11">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c11">Comment 11</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Jehan</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-20 12:48:02 UTC
        </span>
</div>
<pre class="bz_comment_text"><span class="quote">&gt; It would be ideal to have a test suite</span>

Test suites are always welcome. Current code base has tests, but they are clearly not extensive and we suck a lot at increasing out test base.
Patches welcome in this direction. ;-)

<span class="quote">&gt; I must admit it's challenging for me to try to propose fixes for these issues while not being overly familiar with the code and the supported formats.</span>

No prob. It's also the first time I look at this plug-in code. :-)</pre>
</div><div class="bz_comment" id="c12">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c12">Comment 12</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Jehan</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-20 12:49:51 UTC
        </span>
</div>
<pre class="bz_comment_text">P.S.: the commits have also been backported to gimp-2-8 branch.

commit <a href="https://git.gnome.org/browse/GIMP/commit/?id=22e2571c25425f225abdb11a566cc281fca6f366">22e2571c25425f225abdb11a566cc281fca6f366</a> (HEAD -&gt; gimp-2-8, origin/gimp-2-8)
Author: Jehan &lt;<a href="mailto:jehan@girinstud.io">jehan@girinstud.io</a>&gt;
Date:   Wed Dec 20 13:26:26 2017 +0100

    plug-ins: TGA 16-bit RGB (without alpha bit) is also valid.
    
    According to some spec on the web, 16-bit RGB is also valid. In this
    case, the last bit is simply ignored (at least that's how it is
    implemented right now).
    
    (cherry picked from commit <a href="https://git.gnome.org/browse/GIMP/commit/?id=8ea316667c8a3296bce2832b3986b58d0fdfc077">8ea316667c8a3296bce2832b3986b58d0fdfc077</a>)

 plug-ins/common/file-tga.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit <a href="https://git.gnome.org/browse/GIMP/commit/?id=ef9c821fff8b637a2178eab1c78cae6764c50e12">ef9c821fff8b637a2178eab1c78cae6764c50e12</a>
Author: Jehan &lt;<a href="mailto:jehan@girinstud.io">jehan@girinstud.io</a>&gt;
Date:   Wed Dec 20 13:02:38 2017 +0100

    <a class="bz_bug_link bz_status_RESOLVED bz_closed" href="show_bug.cgi?id=739134" title="RESOLVED FIXED - Out of bounds read / heap overflow in tga importer / function bgr2rgb.part.1">Bug 739134</a> - (CVE-2017-17786) Out of bounds read / heap overflow in...
    
    ... TGA importer.
    
    Be more thorough on valid TGA RGB and RGBA images.
    In particular current TGA plug-in can import RGBA as 32 bits (8 bits per
    channel) and 16 bits (5 bits per color channel and 1 bit for alpha), and
    RGB as 15 and 24 bits.
    Maybe there exist more variants, but if they do exist, we simply don't
    support them yet.
    
    Thanks to Hanno Böck for the report and a first patch attempt.
    
    (cherry picked from commit <a href="https://git.gnome.org/browse/GIMP/commit/?id=674b62ad45b6579ec6d7923dc3cb1ef4e8b5498b">674b62ad45b6579ec6d7923dc3cb1ef4e8b5498b</a>)

 plug-ins/common/file-tga.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)</pre>
</div><div class="bz_comment" id="c13">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c13">Comment 13</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Hanno Böck</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-20 20:52:14 UTC
        </span>
</div>
<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=365807" name="attach_365807" title="poc file smaller (tga)">attachment 365807</a> <a href="attachment.cgi?id=365807&amp;action=edit" title="poc file smaller (tga)">[details]</a></span>
poc file smaller (tga)

Just in case someone cares, a much smaller example file triggering the bug (18 bytes).</pre>
</div><div class="bz_comment" id="c14">
<div class="bz_comment_head">
<span class="bz_comment_number">
<a href="show_bug.cgi?id=739134#c14">Comment 14</a>
</span>
<span class="bz_comment_user">
<span class="vcard"><span class="fn">Jehan</span>
</span>
</span>
<span class="bz_comment_user_images">
</span>
<span class="bz_comment_time">
          2017-12-21 00:17:24 UTC
        </span>
</div>
<pre class="bz_comment_text">It fails to load with appropriate message "Unhandled sub-format in '/home/jehan/dev/tmp/poc.tga' (type = 2, bpp = 24, alpha = 8)".
Looks all fine. :-)</pre>
</div>
<script type="text/javascript">
  function traceparser_toggle_trace(link, trace_id) {
    var trace = document.getElementById('trace_' + trace_id);
    bz_toggleClass(trace, 'bz_default_hidden');
    if (link.innerHTML == '+') { link.innerHTML = '&mdash;'; }
    else { link.innerHTML = '+'; }
  }
</script>
</td>
<td>
</td>
</tr></table>
</div>
<hr/>
</form>
<hr/>

<br/>
</div>
<div id="footer">
<div class="intro"></div>
<ul id="useful-links">
<li id="links-actions"><ul class="links">
<li><a href="./">Home</a></li>
<li><span class="separator">| </span><span style="text-decoration:line-through"><a href="">New</a></span></li>
<li><span class="separator">| </span><a href="page.cgi?id=browse.html&amp;product=GIMP">Browse</a></li>
<li><span class="separator">| </span><a href="query.cgi">Search</a></li>
<li class="form">
<span class="separator">| </span>
<form action="buglist.cgi" method="get" onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
<input id="no_redirect_bottom" name="no_redirect" type="hidden" value="0"/>
<script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
<input class="txt" id="quicksearch_bottom" name="quicksearch" title="Quick Search" type="text" value=""/>
<input class="btn" id="find_bottom" type="submit" value="Search"/></form>
<a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>
<li><span class="separator">| </span><a href="page.cgi?id=reports.html">Reports</a></li>
<li>
<span class="separator">| </span>
<a href="http://www.bugzilla.org/docs/4.4/en/html/bug_page.html" target="_blank">Help</a>
</li>
<li id="mini_login_container_bottom">
<span class="separator">| </span>
<a href="show_bug.cgi?id=739134&amp;GoAheadAndLogIn=1" id="login_link_bottom" onclick="return show_mini_login_form('_bottom')">Log In</a>
<form action="show_bug.cgi?id=739134" class="mini_login bz_default_hidden" id="mini_login_bottom" method="POST" onsubmit="return check_mini_login_fields( '_bottom' );">
<input class="bz_login" id="Bugzilla_login_bottom" name="Bugzilla_login" onfocus="mini_login_on_focus('_bottom')" title="Login"/>
<input class="bz_password" id="Bugzilla_password_bottom" name="Bugzilla_password" title="Password" type="password"/>
<input class="bz_password bz_default_hidden bz_mini_login_help" id="Bugzilla_password_dummy_bottom" onfocus="mini_login_on_focus('_bottom')" title="Password" type="text" value="password"/>
<input checked="" class="bz_remember" id="Bugzilla_remember_bottom" name="Bugzilla_remember" type="checkbox" value="on"/>
<label for="Bugzilla_remember_bottom">Remember</label>
<input name="Bugzilla_login_token" type="hidden" value=""/>
<input id="log_in_bottom" name="GoAheadAndLogIn" type="submit" value="Log in"/>
<script type="text/javascript">
      mini_login_constants = {
          "login" : "login",
          "warning" : "You must set the login and password before logging in."
      };
      
      if (YAHOO.env.ua.gecko || YAHOO.env.ua.ie || YAHOO.env.ua.opera) {
          YAHOO.util.Event.onDOMReady(function() {
              init_mini_login_form('_bottom');
          });
      }
      else {
          YAHOO.util.Event.on(window, 'load', function () {
              window.setTimeout(function() {
                  init_mini_login_form('_bottom');
              }, 200);
          });
    }
    </script>
<a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
</form>
</li>
<li id="forgot_container_bottom">
<span class="separator">| </span>
<a href="show_bug.cgi?id=739134&amp;GoAheadAndLogIn=1#forgot" id="forgot_link_bottom" onclick="return show_forgot_form('_bottom')">Forgot Password</a>
<form action="token.cgi" class="mini_forgot bz_default_hidden" id="forgot_form_bottom" method="post">
<label for="login_bottom">Login:</label>
<input id="login_bottom" name="loginname" size="20" type="text"/>
<input id="forgot_button_bottom" type="submit" value="Reset Password"/>
<input name="a" type="hidden" value="reqpw"/>
<input id="token_bottom" name="token" type="hidden" value="1626083759-TJknJ54mvztrJDWYXpEwoMpkFJSjjr4Hrx4M87khZHI"/>
<a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
</form>
</li>
</ul>
</li>
</ul>
<div class="outro"></div>
</div>
</body>
</html>