<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<title>#34142 - AddressSanitizer reported heap-buffer-overflow - GNU bug report logs</title>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<meta name="robots" content="noindex, nofollow">
<link rel="stylesheet" href="/css/bugs.css" type="text/css">

<script type="text/javascript">
function toggle_infmessages()
{
        allDivs=document.getElementsByTagName("div");
        for (var i = 0 ; i < allDivs.length ; i++ )
        {
                if (allDivs[i].className == "infmessage")
                {
                        allDivs[i].style.display=(allDivs[i].style.display == 'none' | allDivs[i].style.display == '') ? 'block' : 'none';
                }
        }
}
</script>
</head>
<body>
<h1>GNU bug report logs - 
#34142<br/>
AddressSanitizer reported heap-buffer-overflow</h1>
<p><a href="bugreport.cgi?bug=34141">Previous</a> <a href="bugreport.cgi?bug=34143">Next</a></p>
<div class="versiongraph"></div>
<div class="pkginfo">
  <p>Package:
     <a class="submitter" href="pkgreport.cgi?package=sed">sed</a>;
</p>
</div>

<div class="buginfo">
  <p>Reported by: <a href="pkgreport.cgi?submitter=leftcopy.chx%40gmail.com">Hongxu Chen &lt;leftcopy.chx &lt;at&gt; gmail.com&gt;</a></p>
  <p>Date: Sun, 20 Jan 2019 06:11:02 UTC</p>

<p>Severity: normal</p>
<p></p>




</div>

<p>To reply to this bug, email your comments to 34142 AT debbugs.gnu.org.
<p><a href="javascript:toggle_infmessages();">Toggle</a> the display of automated, internal messages from the tracker.</p><div class="msgreceived"><p>View this report as an <a href="bugreport.cgi?bug=34142;mbox=yes" title="Folder with messages as they arrived at the tracker">mbox folder</a>, <a href="bugreport.cgi?bug=34142;mboxstat=yes" title="Folder with a status summary message at the start">status mbox</a>, <a href="bugreport.cgi?bug=34142;mboxmaint=yes;mbox=yes" title="Folder of messages as sent from the tracker to the maintainers">maintainer mbox</a></p></div>

<div class="infmessage"><hr>
<a name="1"></a>
<!-- request_addr: bug-sed &lt;at&gt; gnu.org -->
<!-- time:1547964662 -->
<strong>Report forwarded</strong>
to <code>bug-sed &lt;at&gt; gnu.org</code>:<br>
<code>bug#34142</code>; Package <code>sed</code>.
 (Sun, 20 Jan 2019 06:11:02 GMT) <a href="bugreport.cgi?msg=2;bug=34142">Full text</a> and <a href="bugreport.cgi?bug=34142;msg=2;mbox=yes">rfc822 format</a> available.</div>

<div class="infmessage"><hr>
<a name="3"></a>
<!-- request_addr: Hongxu Chen &lt;leftcopy.chx &lt;at&gt; gmail.com&gt; -->
<!-- time:1547964662 -->
<strong>Acknowledgement sent</strong>
to <code>Hongxu Chen &lt;leftcopy.chx &lt;at&gt; gmail.com&gt;</code>:<br>
New bug report received and forwarded.  Copy sent to <code>bug-sed &lt;at&gt; gnu.org</code>.
 (Sun, 20 Jan 2019 06:11:02 GMT) <a href="bugreport.cgi?msg=4;bug=34142">Full text</a> and <a href="bugreport.cgi?bug=34142;mbox=yes;msg=4">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="5"></a><a name="msg5"></a><a href="#5">Message #5</a> received at submit &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=34142;msg=5">full text</a>, <a href="bugreport.cgi?mbox=yes;msg=5;bug=34142">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Hongxu Chen &lt;leftcopy.chx &lt;at&gt; gmail.com&gt;
<b>To:</b> bug-sed &lt;at&gt; gnu.org
<b>Subject:</b> AddressSanitizer reported heap-buffer-overflow
<b>Date:</b> Sun, 20 Jan 2019 14:09:48 +0800
</pre>
<pre class="mime">[<a href="bugreport.cgi?att=0;bug=34142;msg=5">Message part 1</a> (text/plain, inline)]</pre>
<pre class="message">Hi,

    When latest sed (4.7.4-f8503-dirty) is compiled with ASan, it report a
heap-buffer-overflow when executing the following command.

      echo &#39;0000000000000000000000000000&#39; | ./sed -f c02.sed

   =================================================================
==13920==ERROR: AddressSanitizer: heap-buffer-overflow on address
0x606000000233 at pc 0x0000004b4136 bp 0x7ffc475e3930 sp 0x7ffc475e30e0
READ of size 26 at 0x606000000233 thread T0
    #0 0x4b4135 in __interceptor_memcmp.part.283
(/home/hongxu/FOT/sed-O0/install/bin/sed+0x4b4135)
    #1 0x5b274c in proceed_next_node
/home/hongxu/FOT/sed-O0/./lib/regexec.c:1296:9
    #2 0x597a4c in set_regs /home/hongxu/FOT/sed-O0/./lib/regexec.c:1453:18
    #3 0x569a4f in re_search_internal
/home/hongxu/FOT/sed-O0/./lib/regexec.c:864:10
    #4 0x56acd7 in re_search_stub
/home/hongxu/FOT/sed-O0/./lib/regexec.c:425:12
    #5 0x56b061 in rpl_re_search
/home/hongxu/FOT/sed-O0/./lib/regexec.c:289:10
    #6 0x52f572 in match_regex /home/hongxu/FOT/sed-O0/sed/regexp.c:358:11
    #7 0x5292d1 in do_subst /home/hongxu/FOT/sed-O0/sed/execute.c:1015:8
    #8 0x5233a2 in execute_program
/home/hongxu/FOT/sed-O0/sed/execute.c:1543:15
    #9 0x520cba in process_files
/home/hongxu/FOT/sed-O0/sed/execute.c:1680:16
    #10 0x5300dc in main /home/hongxu/FOT/sed-O0/sed/sed.c:382:17
    #11 0x7f1dc2297b96 in __libc_start_main
/build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310
    #12 0x41b219 in _start
(/home/hongxu/FOT/sed-O0/install/bin/sed+0x41b219)

0x606000000233 is located 0 bytes to the right of 51-byte region
[0x606000000200,0x606000000233)
allocated by thread T0 here:
    #0 0x4db0d0 in malloc (/home/hongxu/FOT/sed-O0/install/bin/sed+0x4db0d0)
    #1 0x5624f4 in xmalloc /home/hongxu/FOT/sed-O0/lib/xmalloc.c:41:13
    #2 0x5627c4 in xzalloc /home/hongxu/FOT/sed-O0/lib/xmalloc.c:86:18
    #3 0x520e16 in line_init /home/hongxu/FOT/sed-O0/sed/execute.c:281:15
    #4 0x5209ad in process_files
/home/hongxu/FOT/sed-O0/sed/execute.c:1654:3
    #5 0x5300dc in main /home/hongxu/FOT/sed-O0/sed/sed.c:382:17
    #6 0x7f1dc2297b96 in __libc_start_main
/build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310

SUMMARY: AddressSanitizer: heap-buffer-overflow
(/home/hongxu/FOT/sed-O0/install/bin/sed+0x4b4135) in
__interceptor_memcmp.part.283
Shadow bytes around the buggy address:
  0x0c0c7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0c7fff8000: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa
  0x0c0c7fff8010: fd fd fd fd fd fd fd fa fa fa fa fa fd fd fd fd
  0x0c0c7fff8020: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa
  0x0c0c7fff8030: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa
=&gt;0x0c0c7fff8040: 00 00 00 00 00 00[03]fa fa fa fa fa 00 00 00 00
  0x0c0c7fff8050: 00 00 03 fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c0c7fff8060: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa
  0x0c0c7fff8070: 00 00 00 00 00 00 00 fa fa fa fa fa 00 00 00 00
  0x0c0c7fff8080: 00 00 00 fa fa fa fa fa fd fd fd fd fd fd fd fd
  0x0c0c7fff8090: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13920==ABORTING
[1]    13917 done       echo &#39;0000000000000000000000000000&#39; |
       13920 abort      ./sed -f c02.sed

c02.sed is attached (it seems ok when executing with the c02.sed content
directly, `echo &#39;0000000000000000000000000000&#39; | ./sed -f
&quot;s000;s0\(..*\)*\1\(\)\S00&quot;`).

This seems an issue in lib/regexec.c since we found GNU debbugs #34140 has
a similar case.

Best Regards,
Hongxu
</pre>
<pre class="mime">[<a href="bugreport.cgi?msg=5;bug=34142;att=1">Message part 2</a> (text/html, inline)]</pre>
<pre class="mime">[<a href="bugreport.cgi?msg=5;filename=c02.sed;bug=34142;att=2">c02.sed</a> (application/octet-stream, attachment)]</pre>

<div class="infmessage"><hr>
<a name="6"></a>
<!-- request_addr: bug-sed &lt;at&gt; gnu.org -->
<!-- time:1547975703 -->
<strong>Information forwarded</strong>
to <code>bug-sed &lt;at&gt; gnu.org</code>:<br>
<code>bug#34142</code>; Package <code>sed</code>.
 (Sun, 20 Jan 2019 09:15:03 GMT) <a href="bugreport.cgi?bug=34142;msg=7">Full text</a> and <a href="bugreport.cgi?bug=34142;msg=7;mbox=yes">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="8"></a><a name="msg8"></a><a href="#8">Message #8</a> received at 34142 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?bug=34142;msg=8">full text</a>, <a href="bugreport.cgi?msg=8;mbox=yes;bug=34142">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Assaf Gordon &lt;assafgordon &lt;at&gt; gmail.com&gt;
<b>To:</b> Hongxu Chen &lt;leftcopy.chx &lt;at&gt; gmail.com&gt;, 34142 &lt;at&gt; debbugs.gnu.org
<b>Subject:</b> Re: bug#34142: AddressSanitizer reported heap-buffer-overflow
<b>Date:</b> Sun, 20 Jan 2019 02:14:10 -0700
</pre>
<pre class="message">(forwarding to gnulib)

Hello,

Hongxu Chen reported a heap-buffer-overflow in gnulib&#39;s regexec code.

It can be reproduced with current sed using:

     git clone git://git.sv.gnu.org/sed.git
     cd sed
     ./bootstrap &amp;&amp; ./configure
     make build-asan

     echo 00000000000000000000000000 | ./sed/sed -E -e &#39;s/(.*)*\1//&#39;

The above &#39;sed&#39; invocation is a simplified variation of Hongxu&#39;s report.

Details below:

On 2019-01-19 11:09 p.m., Hongxu Chen wrote:
&gt; 
&gt;     =================================================================
&gt; ==13920==ERROR: AddressSanitizer: heap-buffer-overflow on address
&gt; 0x606000000233 at pc 0x0000004b4136 bp 0x7ffc475e3930 sp 0x7ffc475e30e0
&gt; READ of size 26 at 0x606000000233 thread T0
&gt;      #0 0x4b4135 in __interceptor_memcmp.part.283
&gt; (/home/hongxu/FOT/sed-O0/install/bin/sed+0x4b4135)
&gt;      #1 0x5b274c in proceed_next_node
&gt; /home/hongxu/FOT/sed-O0/./lib/regexec.c:1296:9
&gt;      #2 0x597a4c in set_regs /home/hongxu/FOT/sed-O0/./lib/regexec.c:1453:18
&gt;      #3 0x569a4f in re_search_internal
&gt; /home/hongxu/FOT/sed-O0/./lib/regexec.c:864:10
&gt;      #4 0x56acd7 in re_search_stub
&gt; /home/hongxu/FOT/sed-O0/./lib/regexec.c:425:12
&gt;      #5 0x56b061 in rpl_re_search
&gt; /home/hongxu/FOT/sed-O0/./lib/regexec.c:289:10
&gt;      #6 0x52f572 in match_regex /home/hongxu/FOT/sed-O0/sed/regexp.c:358:11
&gt;      #7 0x5292d1 in do_subst /home/hongxu/FOT/sed-O0/sed/execute.c:1015:8
&gt;      #8 0x5233a2 in execute_program
&gt; /home/hongxu/FOT/sed-O0/sed/execute.c:1543:15
&gt;      #9 0x520cba in process_files
&gt; /home/hongxu/FOT/sed-O0/sed/execute.c:1680:16
&gt;      #10 0x5300dc in main /home/hongxu/FOT/sed-O0/sed/sed.c:382:17
&gt;      #11 0x7f1dc2297b96 in __libc_start_main
&gt; /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310
&gt;      #12 0x41b219 in _start
&gt; (/home/hongxu/FOT/sed-O0/install/bin/sed+0x41b219)
&gt; 
&gt; 0x606000000233 is located 0 bytes to the right of 51-byte region
&gt; [0x606000000200,0x606000000233)
&gt; allocated by thread T0 here:
&gt;      #0 0x4db0d0 in malloc (/home/hongxu/FOT/sed-O0/install/bin/sed+0x4db0d0)
&gt;      #1 0x5624f4 in xmalloc /home/hongxu/FOT/sed-O0/lib/xmalloc.c:41:13
&gt;      #2 0x5627c4 in xzalloc /home/hongxu/FOT/sed-O0/lib/xmalloc.c:86:18
&gt;      #3 0x520e16 in line_init /home/hongxu/FOT/sed-O0/sed/execute.c:281:15
&gt;      #4 0x5209ad in process_files
&gt; /home/hongxu/FOT/sed-O0/sed/execute.c:1654:3
&gt;      #5 0x5300dc in main /home/hongxu/FOT/sed-O0/sed/sed.c:382:17
&gt;      #6 0x7f1dc2297b96 in __libc_start_main
&gt; /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310
&gt; 
&gt; SUMMARY: AddressSanitizer: heap-buffer-overflow
&gt; (/home/hongxu/FOT/sed-O0/install/bin/sed+0x4b4135) in
&gt; __interceptor_memcmp.part.283
&gt; Shadow bytes around the buggy address:
&gt;    0x0c0c7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
&gt;    0x0c0c7fff8000: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa
&gt;    0x0c0c7fff8010: fd fd fd fd fd fd fd fa fa fa fa fa fd fd fd fd
&gt;    0x0c0c7fff8020: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa
&gt;    0x0c0c7fff8030: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa
&gt; =&gt;0x0c0c7fff8040: 00 00 00 00 00 00[03]fa fa fa fa fa 00 00 00 00
&gt;    0x0c0c7fff8050: 00 00 03 fa fa fa fa fa 00 00 00 00 00 00 00 00
&gt;    0x0c0c7fff8060: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa
&gt;    0x0c0c7fff8070: 00 00 00 00 00 00 00 fa fa fa fa fa 00 00 00 00
&gt;    0x0c0c7fff8080: 00 00 00 fa fa fa fa fa fd fd fd fd fd fd fd fd
&gt;    0x0c0c7fff8090: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa
&gt; Shadow byte legend (one shadow byte represents 8 application bytes):
&gt;    Addressable:           00
&gt;    Partially addressable: 01 02 03 04 05 06 07
&gt;    Heap left redzone:       fa
&gt;    Freed heap region:       fd
&gt;    Stack left redzone:      f1
&gt;    Stack mid redzone:       f2
&gt;    Stack right redzone:     f3
&gt;    Stack after return:      f5
&gt;    Stack use after scope:   f8
&gt;    Global redzone:          f9
&gt;    Global init order:       f6
&gt;    Poisoned by user:        f7
&gt;    Container overflow:      fc
&gt;    Array cookie:            ac
&gt;    Intra object redzone:    bb
&gt;    ASan internal:           fe
&gt;    Left alloca redzone:     ca
&gt;    Right alloca redzone:    cb
&gt; ==13920==ABORTING




</pre>

<div class="infmessage"><hr>
<a name="9"></a>
<!-- request_addr: bug-sed &lt;at&gt; gnu.org -->
<!-- time:1547975762 -->
<strong>Information forwarded</strong>
to <code>bug-sed &lt;at&gt; gnu.org</code>:<br>
<code>bug#34142</code>; Package <code>sed</code>.
 (Sun, 20 Jan 2019 09:16:02 GMT) <a href="bugreport.cgi?msg=10;bug=34142">Full text</a> and <a href="bugreport.cgi?bug=34142;mbox=yes;msg=10">rfc822 format</a> available.</div>

<hr><p class="msgreceived"><a name="11"></a><a name="msg11"></a><a href="#11">Message #11</a> received at 34142 &lt;at&gt; debbugs.gnu.org (<a href="bugreport.cgi?msg=11;bug=34142">full text</a>, <a href="bugreport.cgi?mbox=yes;msg=11;bug=34142">mbox</a>):</p>
<pre class="headers">
<b>From:</b> Assaf Gordon &lt;assafgordon &lt;at&gt; gmail.com&gt;
<b>To:</b> Hongxu Chen &lt;leftcopy.chx &lt;at&gt; gmail.com&gt;, 34142 &lt;at&gt; debbugs.gnu.org,
 &quot;bug-gnulib &lt;at&gt; gnu.org List&quot; &lt;bug-gnulib &lt;at&gt; gnu.org&gt;
<b>Subject:</b> Re: bug#34142: AddressSanitizer reported heap-buffer-overflow
<b>Date:</b> Sun, 20 Jan 2019 02:15:08 -0700
</pre>
<pre class="message">(forwarding to gnulib)

Hello,

Hongxu Chen reported a heap-buffer-overflow in gnulib&#39;s regexec code.

It can be reproduced with current sed using:

     git clone git://git.sv.gnu.org/sed.git
     cd sed
     ./bootstrap &amp;&amp; ./configure
     make build-asan

     echo 00000000000000000000000000 | ./sed/sed -E -e &#39;s/(.*)*\1//&#39;

The above &#39;sed&#39; invocation is a simplified variation of Hongxu&#39;s report.

Details below:

On 2019-01-19 11:09 p.m., Hongxu Chen wrote:
&gt; 
&gt;     =================================================================
&gt; ==13920==ERROR: AddressSanitizer: heap-buffer-overflow on address
&gt; 0x606000000233 at pc 0x0000004b4136 bp 0x7ffc475e3930 sp 0x7ffc475e30e0
&gt; READ of size 26 at 0x606000000233 thread T0
&gt;      #0 0x4b4135 in __interceptor_memcmp.part.283
&gt; (/home/hongxu/FOT/sed-O0/install/bin/sed+0x4b4135)
&gt;      #1 0x5b274c in proceed_next_node
&gt; /home/hongxu/FOT/sed-O0/./lib/regexec.c:1296:9
&gt;      #2 0x597a4c in set_regs /home/hongxu/FOT/sed-O0/./lib/regexec.c:1453:18
&gt;      #3 0x569a4f in re_search_internal
&gt; /home/hongxu/FOT/sed-O0/./lib/regexec.c:864:10
&gt;      #4 0x56acd7 in re_search_stub
&gt; /home/hongxu/FOT/sed-O0/./lib/regexec.c:425:12
&gt;      #5 0x56b061 in rpl_re_search
&gt; /home/hongxu/FOT/sed-O0/./lib/regexec.c:289:10
&gt;      #6 0x52f572 in match_regex /home/hongxu/FOT/sed-O0/sed/regexp.c:358:11
&gt;      #7 0x5292d1 in do_subst /home/hongxu/FOT/sed-O0/sed/execute.c:1015:8
&gt;      #8 0x5233a2 in execute_program
&gt; /home/hongxu/FOT/sed-O0/sed/execute.c:1543:15
&gt;      #9 0x520cba in process_files
&gt; /home/hongxu/FOT/sed-O0/sed/execute.c:1680:16
&gt;      #10 0x5300dc in main /home/hongxu/FOT/sed-O0/sed/sed.c:382:17
&gt;      #11 0x7f1dc2297b96 in __libc_start_main
&gt; /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310
&gt;      #12 0x41b219 in _start
&gt; (/home/hongxu/FOT/sed-O0/install/bin/sed+0x41b219)
&gt; 
&gt; 0x606000000233 is located 0 bytes to the right of 51-byte region
&gt; [0x606000000200,0x606000000233)
&gt; allocated by thread T0 here:
&gt;      #0 0x4db0d0 in malloc (/home/hongxu/FOT/sed-O0/install/bin/sed+0x4db0d0)
&gt;      #1 0x5624f4 in xmalloc /home/hongxu/FOT/sed-O0/lib/xmalloc.c:41:13
&gt;      #2 0x5627c4 in xzalloc /home/hongxu/FOT/sed-O0/lib/xmalloc.c:86:18
&gt;      #3 0x520e16 in line_init /home/hongxu/FOT/sed-O0/sed/execute.c:281:15
&gt;      #4 0x5209ad in process_files
&gt; /home/hongxu/FOT/sed-O0/sed/execute.c:1654:3
&gt;      #5 0x5300dc in main /home/hongxu/FOT/sed-O0/sed/sed.c:382:17
&gt;      #6 0x7f1dc2297b96 in __libc_start_main
&gt; /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310
&gt; 
&gt; SUMMARY: AddressSanitizer: heap-buffer-overflow
&gt; (/home/hongxu/FOT/sed-O0/install/bin/sed+0x4b4135) in
&gt; __interceptor_memcmp.part.283
&gt; Shadow bytes around the buggy address:
&gt;    0x0c0c7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
&gt;    0x0c0c7fff8000: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa
&gt;    0x0c0c7fff8010: fd fd fd fd fd fd fd fa fa fa fa fa fd fd fd fd
&gt;    0x0c0c7fff8020: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fa
&gt;    0x0c0c7fff8030: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa
&gt; =&gt;0x0c0c7fff8040: 00 00 00 00 00 00[03]fa fa fa fa fa 00 00 00 00
&gt;    0x0c0c7fff8050: 00 00 03 fa fa fa fa fa 00 00 00 00 00 00 00 00
&gt;    0x0c0c7fff8060: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa
&gt;    0x0c0c7fff8070: 00 00 00 00 00 00 00 fa fa fa fa fa 00 00 00 00
&gt;    0x0c0c7fff8080: 00 00 00 fa fa fa fa fa fd fd fd fd fd fd fd fd
&gt;    0x0c0c7fff8090: fa fa fa fa 00 00 00 00 00 00 00 00 fa fa fa fa
&gt; Shadow byte legend (one shadow byte represents 8 application bytes):
&gt;    Addressable:           00
&gt;    Partially addressable: 01 02 03 04 05 06 07
&gt;    Heap left redzone:       fa
&gt;    Freed heap region:       fd
&gt;    Stack left redzone:      f1
&gt;    Stack mid redzone:       f2
&gt;    Stack right redzone:     f3
&gt;    Stack after return:      f5
&gt;    Stack use after scope:   f8
&gt;    Global redzone:          f9
&gt;    Global init order:       f6
&gt;    Poisoned by user:        f7
&gt;    Container overflow:      fc
&gt;    Array cookie:            ac
&gt;    Intra object redzone:    bb
&gt;    ASan internal:           fe
&gt;    Left alloca redzone:     ca
&gt;    Right alloca redzone:    cb
&gt; ==13920==ABORTING




</pre>

<hr>
<div class="msgreceived">This bug report was last modified 2 years and 284 days ago.</div>

<hr>
<p><a href="bugreport.cgi?bug=34141">Previous</a> <a href="bugreport.cgi?bug=34143">Next</a></p>
<!--
<p class="msgreceived">Send a report that <a href="//debbugs.gnu.org/cgi/bugspam.cgi">this bug log contains spam</a>.</p> -->
<hr>
<P>
<A HREF="//debbugs.gnu.org/">GNU bug tracking system</A><BR>
Copyright (C) 1999 Darren O. Benham,
1997,2003 nCipher Corporation Ltd,
1994-97 Ian Jackson.
</ADDRESS>

</body>
</html>
