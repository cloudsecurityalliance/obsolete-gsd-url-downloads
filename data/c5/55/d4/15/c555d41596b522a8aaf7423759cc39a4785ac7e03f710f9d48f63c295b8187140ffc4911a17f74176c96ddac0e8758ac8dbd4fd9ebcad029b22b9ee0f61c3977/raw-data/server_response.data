<!DOCTYPE html>
<html class="no-touch" lang="en-US" xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="pingback" href="https://blog.openzeppelin.com/xmlrpc.php">
<meta name='robots' content='index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1' />

	<!-- This site is optimized with the Yoast SEO plugin v17.4 - https://yoast.com/wordpress/plugins/seo/ -->
	<title>Libra&#039;s Move IR Compiler Vulnerability - OpenZeppelin blog</title>
	<link rel="canonical" href="https://blog.openzeppelin.com/libra-vulnerability-summary/" />
	<meta property="og:locale" content="en_US" />
	<meta property="og:type" content="article" />
	<meta property="og:title" content="Libra&#039;s Move IR Compiler Vulnerability - OpenZeppelin blog" />
	<meta property="og:description" content="We describe a vulnerability in the Move IR compiler whereby inline comments can be disguised as executable code." />
	<meta property="og:url" content="https://blog.openzeppelin.com/libra-vulnerability-summary/" />
	<meta property="og:site_name" content="OpenZeppelin blog" />
	<meta property="article:published_time" content="2019-09-09T16:20:40+00:00" />
	<meta property="article:modified_time" content="2020-09-02T18:47:27+00:00" />
	<meta property="og:image" content="https://i2.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/cover_audits_libra_02.png?fit=2400%2C1350&#038;ssl=1" />
	<meta property="og:image:width" content="2400" />
	<meta property="og:image:height" content="1350" />
	<meta name="twitter:card" content="summary_large_image" />
	<meta name="twitter:creator" content="@openzeppelin" />
	<meta name="twitter:site" content="@openzeppelin" />
	<meta name="twitter:label1" content="Written by" />
	<meta name="twitter:data1" content="OpenZeppelin Security" />
	<meta name="twitter:label2" content="Est. reading time" />
	<meta name="twitter:data2" content="14 minutes" />
	<script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"Organization","@id":"https://blog.openzeppelin.com/#organization","name":"OpenZeppelin","url":"https://blog.openzeppelin.com/","sameAs":["https://twitter.com/openzeppelin"],"logo":{"@type":"ImageObject","@id":"https://blog.openzeppelin.com/#logo","inLanguage":"en-US","url":"https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2021/06/OZ_logo.png?fit=1168%2C101&ssl=1","contentUrl":"https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2021/06/OZ_logo.png?fit=1168%2C101&ssl=1","width":1168,"height":101,"caption":"OpenZeppelin"},"image":{"@id":"https://blog.openzeppelin.com/#logo"}},{"@type":"WebSite","@id":"https://blog.openzeppelin.com/#website","url":"https://blog.openzeppelin.com/","name":"OpenZeppelin blog","description":"OpenZeppelin blog","publisher":{"@id":"https://blog.openzeppelin.com/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https://blog.openzeppelin.com/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"ImageObject","@id":"https://blog.openzeppelin.com/libra-vulnerability-summary/#primaryimage","inLanguage":"en-US","url":"https://i2.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/cover_audits_libra_02.png?fit=2400%2C1350&ssl=1","contentUrl":"https://i2.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/cover_audits_libra_02.png?fit=2400%2C1350&ssl=1","width":2400,"height":1350},{"@type":"WebPage","@id":"https://blog.openzeppelin.com/libra-vulnerability-summary/#webpage","url":"https://blog.openzeppelin.com/libra-vulnerability-summary/","name":"Libra's Move IR Compiler Vulnerability - OpenZeppelin blog","isPartOf":{"@id":"https://blog.openzeppelin.com/#website"},"primaryImageOfPage":{"@id":"https://blog.openzeppelin.com/libra-vulnerability-summary/#primaryimage"},"datePublished":"2019-09-09T16:20:40+00:00","dateModified":"2020-09-02T18:47:27+00:00","breadcrumb":{"@id":"https://blog.openzeppelin.com/libra-vulnerability-summary/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https://blog.openzeppelin.com/libra-vulnerability-summary/"]}]},{"@type":"BreadcrumbList","@id":"https://blog.openzeppelin.com/libra-vulnerability-summary/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https://blog.openzeppelin.com/"},{"@type":"ListItem","position":2,"name":"Libra&#8217;s Move IR Compiler Vulnerability"}]},{"@type":"Article","@id":"https://blog.openzeppelin.com/libra-vulnerability-summary/#article","isPartOf":{"@id":"https://blog.openzeppelin.com/libra-vulnerability-summary/#webpage"},"author":{"@id":"https://blog.openzeppelin.com/#/schema/person/71ff2430ddbe7d19025bee5c84e8c35e"},"headline":"Libra&#8217;s Move IR Compiler Vulnerability","datePublished":"2019-09-09T16:20:40+00:00","dateModified":"2020-09-02T18:47:27+00:00","mainEntityOfPage":{"@id":"https://blog.openzeppelin.com/libra-vulnerability-summary/#webpage"},"wordCount":2518,"publisher":{"@id":"https://blog.openzeppelin.com/#organization"},"image":{"@id":"https://blog.openzeppelin.com/libra-vulnerability-summary/#primaryimage"},"thumbnailUrl":"https://i2.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/cover_audits_libra_02.png?fit=2400%2C1350&ssl=1","articleSection":["Security audits"],"inLanguage":"en-US"},{"@type":"Person","@id":"https://blog.openzeppelin.com/#/schema/person/71ff2430ddbe7d19025bee5c84e8c35e","name":"OpenZeppelin Security","image":{"@type":"ImageObject","@id":"https://blog.openzeppelin.com/#personlogo","inLanguage":"en-US","url":"https://secure.gravatar.com/avatar/cfa72672cf44136add520ce294fbc937?s=96&d=identicon&r=g","contentUrl":"https://secure.gravatar.com/avatar/cfa72672cf44136add520ce294fbc937?s=96&d=identicon&r=g","caption":"OpenZeppelin Security"}}]}</script>
	<!-- / Yoast SEO plugin. -->


<link rel='dns-prefetch' href='//js.hs-scripts.com' />
<link rel='dns-prefetch' href='//a.omappapi.com' />
<link rel='dns-prefetch' href='//fonts.googleapis.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel='dns-prefetch' href='//widgets.wp.com' />
<link rel='dns-prefetch' href='//s0.wp.com' />
<link rel='dns-prefetch' href='//0.gravatar.com' />
<link rel='dns-prefetch' href='//1.gravatar.com' />
<link rel='dns-prefetch' href='//2.gravatar.com' />
<link rel='dns-prefetch' href='//c0.wp.com' />
<link rel='dns-prefetch' href='//i0.wp.com' />
<link rel='dns-prefetch' href='//i1.wp.com' />
<link rel='dns-prefetch' href='//i2.wp.com' />
<link rel="alternate" type="application/rss+xml" title="OpenZeppelin blog &raquo; Feed" href="https://blog.openzeppelin.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="OpenZeppelin blog &raquo; Comments Feed" href="https://blog.openzeppelin.com/comments/feed/" />
		<!-- This site uses the Google Analytics by MonsterInsights plugin v8.1.0 - Using Analytics tracking - https://www.monsterinsights.com/ -->
							<script src="//www.googletagmanager.com/gtag/js?id=UA-85043059-2"  type="text/javascript" data-cfasync="false" async></script>
			<script type="text/javascript" data-cfasync="false">
				var mi_version = '8.1.0';
				var mi_track_user = true;
				var mi_no_track_reason = '';
				
								var disableStrs = [
															'ga-disable-UA-85043059-2',
									];

				/* Function to detect opted out users */
				function __gtagTrackerIsOptedOut() {
					for ( var index = 0; index < disableStrs.length; index++ ) {
						if ( document.cookie.indexOf( disableStrs[ index ] + '=true' ) > -1 ) {
							return true;
						}
					}

					return false;
				}

				/* Disable tracking if the opt-out cookie exists. */
				if ( __gtagTrackerIsOptedOut() ) {
					for ( var index = 0; index < disableStrs.length; index++ ) {
						window[ disableStrs[ index ] ] = true;
					}
				}

				/* Opt-out function */
				function __gtagTrackerOptout() {
					for ( var index = 0; index < disableStrs.length; index++ ) {
						document.cookie = disableStrs[ index ] + '=true; expires=Thu, 31 Dec 2099 23:59:59 UTC; path=/';
						window[ disableStrs[ index ] ] = true;
					}
				}

				if ( 'undefined' === typeof gaOptout ) {
					function gaOptout() {
						__gtagTrackerOptout();
					}
				}
								window.dataLayer = window.dataLayer || [];

				window.MonsterInsightsDualTracker = {
					helpers: {},
					trackers: {},
				};
				if ( mi_track_user ) {
					function __gtagDataLayer() {
						dataLayer.push( arguments );
					}

					function __gtagTracker( type, name, parameters ) {
						if ( type === 'event' ) {
							
															parameters.send_to = monsterinsights_frontend.ua;
								__gtagDataLayer.apply( null, arguments );
													} else {
							__gtagDataLayer.apply( null, arguments );
						}
					}
					__gtagTracker( 'js', new Date() );
					__gtagTracker( 'set', {
						'developer_id.dZGIzZG' : true,
											} );
															__gtagTracker( 'config', 'UA-85043059-2', {"forceSSL":"true","anonymize_ip":"true","link_attribution":"true"} );
										window.gtag = __gtagTracker;										(
						function () {
							/* https://developers.google.com/analytics/devguides/collection/analyticsjs/ */
							/* ga and __gaTracker compatibility shim. */
							var noopfn = function () {
								return null;
							};
							var newtracker = function () {
								return new Tracker();
							};
							var Tracker = function () {
								return null;
							};
							var p = Tracker.prototype;
							p.get = noopfn;
							p.set = noopfn;
							p.send = function (){
								var args = Array.prototype.slice.call(arguments);
								args.unshift( 'send' );
								__gaTracker.apply(null, args);
							};
							var __gaTracker = function () {
								var len = arguments.length;
								if ( len === 0 ) {
									return;
								}
								var f = arguments[len - 1];
								if ( typeof f !== 'object' || f === null || typeof f.hitCallback !== 'function' ) {
									if ( 'send' === arguments[0] ) {
										var hitConverted, hitObject = false, action;
										if ( 'event' === arguments[1] ) {
											if ( 'undefined' !== typeof arguments[3] ) {
												hitObject = {
													'eventAction': arguments[3],
													'eventCategory': arguments[2],
													'eventLabel': arguments[4],
													'value': arguments[5] ? arguments[5] : 1,
												}
											}
										}
										if ( 'pageview' === arguments[1] ) {
											if ( 'undefined' !== typeof arguments[2] ) {
												hitObject = {
													'eventAction': 'page_view',
													'page_path' : arguments[2],
												}
											}
										}
										if ( typeof arguments[2] === 'object' ) {
											hitObject = arguments[2];
										}
										if ( typeof arguments[5] === 'object' ) {
											Object.assign( hitObject, arguments[5] );
										}
										if ( 'undefined' !== typeof arguments[1].hitType ) {
											hitObject = arguments[1];
											if ( 'pageview' === hitObject.hitType ) {
												hitObject.eventAction = 'page_view';
											}
										}
										if ( hitObject ) {
											action = 'timing' === arguments[1].hitType ? 'timing_complete' : hitObject.eventAction;
											hitConverted = mapArgs( hitObject );
											__gtagTracker( 'event', action, hitConverted );
										}
									}
									return;
								}

								function mapArgs( args ) {
									var arg, hit = {};
									var gaMap = {
										'eventCategory': 'event_category',
										'eventAction': 'event_action',
										'eventLabel': 'event_label',
										'eventValue': 'event_value',
										'nonInteraction': 'non_interaction',
										'timingCategory': 'event_category',
										'timingVar': 'name',
										'timingValue': 'value',
										'timingLabel': 'event_label',
										'page' : 'page_path',
										'location' : 'page_location',
										'title' : 'page_title',
									};
									for ( arg in args ) {
																				if ( ! ( ! args.hasOwnProperty(arg) || ! gaMap.hasOwnProperty(arg) ) ) {
											hit[gaMap[arg]] = args[arg];
										} else {
											hit[arg] = args[arg];
										}
									}
									return hit;
								}

								try {
									f.hitCallback();
								} catch ( ex ) {
								}
							};
							__gaTracker.create = newtracker;
							__gaTracker.getByName = newtracker;
							__gaTracker.getAll = function () {
								return [];
							};
							__gaTracker.remove = noopfn;
							__gaTracker.loaded = true;
							window['__gaTracker'] = __gaTracker;
						}
					)();
									} else {
										console.log( "" );
					( function () {
							function __gtagTracker() {
								return null;
							}
							window['__gtagTracker'] = __gtagTracker;
							window['gtag'] = __gtagTracker;
					} )();
									}
			</script>
				<!-- / Google Analytics by MonsterInsights -->
				<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/blog.openzeppelin.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.8.1"}};
			!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([10084,65039,8205,55357,56613],[10084,65039,8203,55357,56613])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='mec-select2-style-css'  href='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/packages/select2/select2.min.css?ver=6.1.0' type='text/css' media='all' />
<link rel='stylesheet' id='mec-font-icons-css'  href='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/css/iconfonts.css?ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='mec-frontend-style-css'  href='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/css/frontend.min.css?ver=6.1.0' type='text/css' media='all' />
<link rel='stylesheet' id='mec-tooltip-style-css'  href='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/packages/tooltip/tooltip.css?ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='mec-tooltip-shadow-style-css'  href='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/packages/tooltip/tooltipster-sideTip-shadow.min.css?ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='featherlight-css'  href='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/packages/featherlight/featherlight.css?ver=5.8.1' type='text/css' media='all' />
<link crossorigin="anonymous" rel='stylesheet' id='mec-google-fonts-css'  href='//fonts.googleapis.com/css?family=Montserrat%3A400%2C700%7CRoboto%3A100%2C300%2C400%2C700&#038;ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='mec-lity-style-css'  href='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/packages/lity/lity.min.css?ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='mec-general-calendar-style-css'  href='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/css/mec-general-calendar.css?ver=5.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='layerslider-css'  href='https://blog.openzeppelin.com/wp-content/plugins/LayerSlider/assets/static/layerslider/css/layerslider.css?ver=6.11.7' type='text/css' media='all' />
<link rel='stylesheet' id='wp-block-library-css'  href='https://c0.wp.com/c/5.8.1/wp-includes/css/dist/block-library/style.min.css' type='text/css' media='all' />
<style id='wp-block-library-inline-css' type='text/css'>
.has-text-align-justify{text-align:justify;}
</style>
<link rel='stylesheet' id='uncode-style-css'  href='https://blog.openzeppelin.com/wp-content/themes/uncode/library/css/style.css?ver=1595529927' type='text/css' media='all' />
<style id='uncode-style-inline-css' type='text/css'>

@media (min-width: 960px) { .limit-width { max-width: 1200px; margin: auto;}}
</style>
<link rel='stylesheet' id='uncode-icons-css'  href='https://blog.openzeppelin.com/wp-content/themes/uncode/library/css/uncode-icons.css?ver=1595529927' type='text/css' media='all' />
<link rel='stylesheet' id='uncode-custom-style-css'  href='https://blog.openzeppelin.com/wp-content/themes/uncode/library/css/style-custom.css?ver=1595529927' type='text/css' media='all' />
<style id='uncode-custom-style-inline-css' type='text/css'>
.sharedaddy {display:none !important;}@font-face {font-family:'Silka';src:url('uploads/2019/08/silka-semibold-webfont.eot'); src:url('uploads/2019/08/silka-semibold-webfont.eot?#iefix') format('embedded-opentype'),url('uploads/2019/08/silka-semibold-webfont.woff2') format('woff2'),url('uploads/2019/08/silka-semibold-webfont.woff') format('woff'),url('uploads/2019/08/silka-semibold-webfont.ttf')format('truetype'), }h1, h2, h3, h4, h6 { font-weight:600; line-height:1.35; }blockquote p { font-size:15px; line-height:1.75; margin:18px 0 0; }blockquote { padding:0px 0px 0px 20px; }table td { font-weight:400; }a:link, a:visited, a:hover, a:active, a code {color:#4d5de4;}ol, ul { padding-left:18px; }li { padding-left:6px; padding-bottom:6px; }ul li { list-style-type:disc; }.wp-caption-text { text-align:center; }.enlighter-default { margin:20px 0 !important;padding:1rem 0 !important;font-size:0.75em !important; border-radius:6px; }.ol.EnlighterJS li { margin-left:30px;}ul.EnlighterJS {margin:16px 0 0 0 !important;}span.atomicEnlighterJS { padding:5px !important; border-radius:3px !important; }.pre { overflow:auto; font-size:15px;}code { padding:2px 4px !important; }.style-light code {background-color:#f7f7f7 !important;border:1px solid #eaeaea !important;border-radius:3px !important;font-size:13px !important;}.row.row-parent.style-light.double-top-padding.double-bottom-padding { padding-bottom:36px; }.main-container .row-container .double-bottom-padding { padding-top:2rem; }.isotope-wrapper.single-gutter, .index-system.single-gutter .index-wrapper, .justified-wrapper.single-gutter { margin-top:-30px !important; }#index-1041816597 .main-container .row-container .row-parent .double-internal-gutter { margin-top:0px !important; background:#0000; }.post-after hr {bottom:0px !important;height:1px;width:50%;margin-left:25%;margin-top:10px;}.row div[class*=col-lg-].align_left > .uncol > .uncoltable > .uncell > .uncont hr {margin-right:auto;margin-left:25%;}hr.separator-no-padding {margin-top:27px;margin-bottom:32px;}.home-headings hr{position:absolute;bottom:62px !important;height:1px;width:280px;}.single-block-padding { padding:30px; }.tmb .t-entry .t-entry-title { font-weight:600; font-family:'Silka', Helvetica, Arial, sans-serif; }.tmb .t-entry p.t-entry-author span.tmb-username-wrap { font-size:14px; }.author-profile-bio { margin:-10px; }.contact-methods li { font-size:24px; }.author-profile .contact-methods li a { color:#777777; }.author-profile .contact-methods li a:hover, .author-profile .contact-methods li.contact-method-twitter a:hover, .author-profile .contact-methods li.contact-method-twitter a:focus { background-color:#f7f7f7 !important; color:#4d5ce3 !important;}.home-headings .t-inside.style-color-xsdn-bg, .post-after .t-inside.style-color-xsdn-bg { height:512px !important; }.home-headings .t-entry-text, .post-after .t-entry-text { height:340px !important; }.home-headings .t-entry, .post-after .t-entry { height:280px !important; }.home-headings p.t-entry-author, .post-after p.t-entry-author { position:absolute; bottom:36px; }.footer-copy-mobile { display:none; }.footer-full { max-width:1200px; margin-left:auto; margin-right:auto; }.footer-full a:link, .footer-full a:visited, .footer-full a:hover, .footer-full a:active {color:#a9a9b5;}.footer-links { float:right;}footer .footer-last p { font-size:13px; line-height:2; margin-top:12px }footer .footer-center { padding-top:70px; padding-bottom:50px; }.footer-logo img { width:177px; }.footer-logo { margin-bottom:20px; }.footer-logo, .footer-copy { text-align:left; font-size:12px; }.footer-left, .footer-right { height:auto; }.footer-left { float:left; width:25%; color:#a9a9b5; }.footer-right { float:left; width:75%; text-align:left; }.fcolumn { float:left; margin-right:60px; }.fcolumn h3 { margin:0px; font-size:16px; font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif; }.fcolumn1 {}.fcolumn .fcolumn4{ margin-right:0px; }.footer-icons { float:right; margin-right:60px; clear:right; margin-top:24px;}.footer-icons img { margin:0 10px; height:24px; }.uncode_text_column.footer-post, .uncode_text_column.footer-post-2{ max-width:50%; margin-left:25%; }ol { margin-left:0; }.comment-content { padding:0; }.comment-content p { margin-top:10px; }.comment { padding:28px;margin:24px 0px 0px 0px;border-style:solid;border-color:lightgray;border-width:1px;border-radius:6px;}.comment-author img { max-width:44px; height:auto; border-radius:22px; margin-right:6px;}.comment-author .fn a { color:#282846; font-size:18px; font-family:'Silka', Helvetica, Arial, sans-serif; vertical-align:text-bottom; line-height:44px; }.comment-list { padding:0; }.comment-metadata { font-size:12px; text-transform:uppercase; color:#999999; font-weight:500; margin-top:8px; }article.onebox-body, article.onebox-body .quoted {border-left:solid 1px lightgray;padding:1rem;padding-left:1.5rem;word-break:break-word;margin-top:1rem;}img.site-icon {height:1rem;width:1rem;margin-right:.5rem;margin-top:1rem;}.onebox .date a { color:#282846; }.quoted-title { margin-top:0; }.onebox p span.label1, .onebox .date {font-style:italic;font-size:14px;margin-top:1rem;opacity:.6;}article.onebox-body .onebox-avatar {max-width:1.5rem;border-radius:1rem;margin-right:.5rem;}.aspect-image img.thumbnail { display:none; }aside.onebox.twitterstatus h4, aside.onebox h3 {display:inline;vertical-align:top;line-height:1.5rem;}p.quoted-title {margin-top:0;font-weight:600;font-size:16px;}.quoted-title span { font-weight:300; }.vertical-tab-menu { width:9rem; }.vertical-tab-contents { width:calc(100% - 9rem); }.tab-content.vertical { padding:0px 24px; }.reports-col { max-width:70%; }.reports-header { max-width:55%; margin:auto; }.uncode-info-box, .uncode-info-box a { color:#777 !important; }.nav-tabs > li > a span {white-space:normal;word-break:break-word;line-height:.5;letter-spacing:1px;}.tabs-left > li > a {margin-right:0;display:block;text-align:left;padding:.5rem .5rem .5rem 0;}h6 { margin-top:8px; padding:4px 8px; width:fit-content; border-radius:6px; }.critical h6 { background:#ee5253; color:white; }.high h6 { background:#ff9f43; color:white; }.medium h6 { background:#fbc531; color:white; }.low h6 { background:#63B0F9; color:white; }.note h6 { background:#4e5ee4; color:white; }.reading h6 {background-color:#f1f1f4;font-weight:400;text-transform:uppercase;padding:4px 10px;}.summary h6 {font-weight:400;text-transform:uppercase;padding:4px 10px;border-style:solid;border-width:1px;border-color:#40405988;font-size:12px;}button a.custom-link {display:block;min-width:150px;border:solid 1px #282846;border-radius:8px;padding:13px 31px;font-weight:600;color:#282846;font-family:'Silka',"Helvetica Neue",BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,sans-serif, -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif !important;letter-spacing:0.1em;text-transform:uppercase;font-size:12px;}button a.custom-link:hover {background-color:#282846;color:white !important;}.btn-container {display:flex;margin-top:30px;justify-content:center;}button { background:none; }@media (max-width:425px) {.reports-col, .reports-header { max-width:100%; }.vertical-tab-contents { width:100%; }.tab-content.vertical { padding:0px; }.uncode_text_column.footer-post, .uncode_text_column.footer-post-2{ max-width:80%; margin-left:10%; }.main-container .row.row-parent:not(.row-slider):not(.row-header), .main-container .row .row-parent:not(.row-slider):not(.row-header) .row { max-width:100% !important; }}@media (min-width:426px) and (max-width:569px) {.vertical-tab-contents { width:100%; }.tab-content.vertical { padding:0px; border:none; }.reports-col, .reports-header { position:relative; max-width:90%; margin:auto; }}@media (max-width:569px) { .post-info, .post-info a, .uncode-info-box, .uncode-info-box a { font-size:14px !important; line-height:1.7em; }.btn:not(input):not(.checkout-button), .btn-link:not(input):not(.checkout-button) { transform:scale(1); }.t-entry-readmore .btn:not(input):not(.checkout-button), .t-entry-readmore .btn-link:not(input):not(.checkout-button) { transform:scale(1.2); padding:10px 0 !important; } }@media (min-width:570px) and (max-width:1080px) {.reports-header { max-width:80%; }.reports-col { position:relative; max-width:100%; margin:auto; }}@media only screen and (max-width:870px) {.footer-left, .footer-right { float:none; width:80%; margin-left:10%; }.fcolumn1 { margin-left:0%; }.fcolumn { float:left; margin-right:76px; height:140px; width:24%; }.footer-left { height:auto; }footer .footer-center { padding-top:33px; }.footer-right { margin-bottom:139px; }.footer-logo { margin-bottom:40px; }.footer-icons { float:left; margin:24px 0; }.footer-copy-mobile { display:block; text-align:center; color:#a9a9b5; clear:both; }.footer-copy { display:none; }.submenu-light .menu-smart ul a { color:#57566f; text-transform:capitalize;}}
</style>
<link rel='stylesheet' id='enlighterjs-css'  href='https://blog.openzeppelin.com/wp-content/plugins/enlighter/cache/enlighterjs.min.css?ver=88YGwSeMxKpTIVg' type='text/css' media='all' />
<link rel='stylesheet' id='child-style-css'  href='https://blog.openzeppelin.com/wp-content/themes/uncode-child/style.css?ver=39823323' type='text/css' media='all' />
<link rel='stylesheet' id='social-logos-css'  href='https://blog.openzeppelin.com/wp-content/plugins/jetpack/_inc/social-logos/social-logos.min.css?ver=10.3-beta' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack_css-css'  href='https://blog.openzeppelin.com/wp-content/plugins/jetpack/css/jetpack.css?ver=10.3-beta' type='text/css' media='all' />
<script type='text/javascript' src='https://c0.wp.com/c/5.8.1/wp-includes/js/jquery/jquery.min.js' id='jquery-core-js'></script>
<script type='text/javascript' src='https://c0.wp.com/c/5.8.1/wp-includes/js/jquery/jquery-migrate.min.js' id='jquery-migrate-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/js/mec-general-calendar.js?ver=6.1.0' id='mec-general-calendar-script-js'></script>
<script type='text/javascript' id='mec-frontend-script-js-extra'>
/* <![CDATA[ */
var mecdata = {"day":"day","days":"days","hour":"hour","hours":"hours","minute":"minute","minutes":"minutes","second":"second","seconds":"seconds","elementor_edit_mode":"no","recapcha_key":"","ajax_url":"https:\/\/blog.openzeppelin.com\/wp-admin\/admin-ajax.php","fes_nonce":"de538f0425","current_year":"2021","current_month":"10","datepicker_format":"yy-mm-dd&Y-m-d"};
/* ]]> */
</script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/js/frontend.js?ver=6.1.0' id='mec-frontend-script-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/js/events.js?ver=6.1.0' id='mec-events-script-js'></script>
<script type='text/javascript' id='layerslider-utils-js-extra'>
/* <![CDATA[ */
var LS_Meta = {"v":"6.11.7","fixGSAP":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/LayerSlider/assets/static/layerslider/js/layerslider.utils.js?ver=6.11.7' id='layerslider-utils-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/LayerSlider/assets/static/layerslider/js/layerslider.kreaturamedia.jquery.js?ver=6.11.7' id='layerslider-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/LayerSlider/assets/static/layerslider/js/layerslider.transitions.js?ver=6.11.7' id='layerslider-transitions-js'></script>
<script type='text/javascript' id='monsterinsights-frontend-script-js-extra'>
/* <![CDATA[ */
var monsterinsights_frontend = {"js_events_tracking":"true","download_extensions":"doc,pdf,ppt,zip,xls,docx,pptx,xlsx","inbound_paths":"[{\"path\":\"\\\/go\\\/\",\"label\":\"affiliate\"},{\"path\":\"\\\/recommend\\\/\",\"label\":\"affiliate\"}]","home_url":"https:\/\/blog.openzeppelin.com","hash_tracking":"false","ua":"UA-85043059-2","v4_id":""};
/* ]]> */
</script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/google-analytics-for-wordpress/assets/js/frontend-gtag.min.js?ver=8.1.0' id='monsterinsights-frontend-script-js'></script>
<script type='text/javascript' src='/wp-content/themes/uncode/library/js/ai-uncode.js' id='uncodeAI' data-home='/' data-path='/' data-breakpoints-images='258,516,720,1032,1440,2064,2880' id='ai-uncode-js'></script>
<script type='text/javascript' id='uncode-init-js-extra'>
/* <![CDATA[ */
var SiteParameters = {"days":"days","hours":"hours","minutes":"minutes","seconds":"seconds","constant_scroll":"on","scroll_speed":"2","parallax_factor":"0.25","loading":"Loading\u2026","slide_name":"slide","slide_footer":"footer","ajax_url":"https:\/\/blog.openzeppelin.com\/wp-admin\/admin-ajax.php","nonce_adaptive_images":"4ea250df43","enable_debug":"","block_mobile_videos":"","is_frontend_editor":"","mobile_parallax_allowed":"","wireframes_plugin_active":"1","sticky_elements":"off","lazyload_type":"","update_wc_fragments":"1","uncode_adaptive":"1"};
/* ]]> */
</script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/themes/uncode/library/js/init.js?ver=1595529927' id='uncode-init-js'></script>
<meta name="generator" content="Powered by LayerSlider 6.11.7 - Multi-Purpose, Responsive, Parallax, Mobile-Friendly Slider Plugin for WordPress." />
<!-- LayerSlider updates and docs at: https://layerslider.kreaturamedia.com -->
<link rel="https://api.w.org/" href="https://blog.openzeppelin.com/wp-json/" /><link rel="alternate" type="application/json" href="https://blog.openzeppelin.com/wp-json/wp/v2/posts/83146" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://blog.openzeppelin.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://blog.openzeppelin.com/wp-includes/wlwmanifest.xml" /> 

<link rel='shortlink' href='https://wp.me/paYM0r-lD4' />
<link rel="alternate" type="application/json+oembed" href="https://blog.openzeppelin.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fblog.openzeppelin.com%2Flibra-vulnerability-summary%2F" />
<link rel="alternate" type="text/xml+oembed" href="https://blog.openzeppelin.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fblog.openzeppelin.com%2Flibra-vulnerability-summary%2F&#038;format=xml" />
				<style type="text/css">
					@font-face {font-family: "Silka";font-display: auto;font-fallback: ;font-weight: 400;src: url(https://blog.openzeppelin.com/wp-content/uploads/2019/08/silka-semibold-webfont.woff2) format('woff2'), url(https://blog.openzeppelin.com/wp-content/uploads/2019/08/silka-semibold-webfont.woff) format('woff'), url(https://blog.openzeppelin.com/wp-content/uploads/2019/08/silka-semibold-webfont.ttf) format('TrueType'), url(https://blog.openzeppelin.com/wp-content/uploads/2019/08/silka-semibold-webfont.eot) format('eot');}				</style>
							<!-- DO NOT COPY THIS SNIPPET! Start of Page Analytics Tracking for HubSpot WordPress plugin v8.4.329-->
			<script type="text/javascript">
				var _hsq = _hsq || [];
				_hsq.push(["setContentType", "blog-post"]);
			</script>
			<!-- DO NOT COPY THIS SNIPPET! End of Page Analytics Tracking for HubSpot WordPress plugin -->
						<script>
				(function() {
					var hbspt = window.hbspt = window.hbspt || {};
					hbspt.forms = hbspt.forms || {};
					hbspt._wpFormsQueue = [];
					hbspt.enqueueForm = function(formDef) {
						if (hbspt.forms && hbspt.forms.create) {
							hbspt.forms.create(formDef);
						} else {
							hbspt._wpFormsQueue.push(formDef);
						}
					}
					if (!window.hbspt.forms.create) {
						Object.defineProperty(window.hbspt.forms, 'create', {
							configurable: true,
							get: function() {
								return hbspt._wpCreateForm;
							},
							set: function(value) {
								hbspt._wpCreateForm = value;
								while (hbspt._wpFormsQueue.length) {
									var formDef = hbspt._wpFormsQueue.shift();
									if (!document.currentScript) {
										var formScriptId = 'leadin-forms-v2-js';
										hubspot.utils.currentScript = document.getElementById(formScriptId);
									}
									hbspt._wpCreateForm.call(hbspt.forms, formDef);
								}
							},
						});
					}
				})();
			</script>
		<style type='text/css'>img#wpstats{display:none}</style>
				<style type="text/css">
			.recentcomments a {
				display: inline !important;
				padding: 0 !important;
				margin: 0 !important;
			}

			table.recentcommentsavatartop img.avatar, table.recentcommentsavatarend img.avatar {
				border: 0px;
				margin: 0;
			}

			table.recentcommentsavatartop a, table.recentcommentsavatarend a {
				border: 0px !important;
				background-color: transparent !important;
			}

			td.recentcommentsavatarend, td.recentcommentsavatartop {
				padding: 0px 0px 1px 0px;
				margin: 0px;
			}

			td.recentcommentstextend {
				border: none !important;
				padding: 0px 0px 2px 10px;
			}

			.rtl td.recentcommentstextend {
				padding: 0px 10px 2px 0px;
			}

			td.recentcommentstexttop {
				border: none;
				padding: 0px 0px 0px 10px;
			}

			.rtl td.recentcommentstexttop {
				padding: 0px 10px 0px 0px;
			}
		</style>
		<link rel="amphtml" href="https://blog.openzeppelin.com/libra-vulnerability-summary/amp/"><meta name="generator" content="Powered by Slider Revolution 6.5.6 - responsive, Mobile-Friendly Slider Plugin for WordPress with comfortable drag and drop interface." />
<link rel="icon" href="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/05/cropped-OZ_icon_background.png?fit=32%2C32&#038;ssl=1" sizes="32x32" />
<link rel="icon" href="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/05/cropped-OZ_icon_background.png?fit=192%2C192&#038;ssl=1" sizes="192x192" />
<link rel="apple-touch-icon" href="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/05/cropped-OZ_icon_background.png?fit=180%2C180&#038;ssl=1" />
<meta name="msapplication-TileImage" content="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/05/cropped-OZ_icon_background.png?fit=270%2C270&#038;ssl=1" />
<script type="text/javascript">function setREVStartSize(e){
			//window.requestAnimationFrame(function() {				 
				window.RSIW = window.RSIW===undefined ? window.innerWidth : window.RSIW;	
				window.RSIH = window.RSIH===undefined ? window.innerHeight : window.RSIH;	
				try {								
					var pw = document.getElementById(e.c).parentNode.offsetWidth,
						newh;
					pw = pw===0 || isNaN(pw) ? window.RSIW : pw;
					e.tabw = e.tabw===undefined ? 0 : parseInt(e.tabw);
					e.thumbw = e.thumbw===undefined ? 0 : parseInt(e.thumbw);
					e.tabh = e.tabh===undefined ? 0 : parseInt(e.tabh);
					e.thumbh = e.thumbh===undefined ? 0 : parseInt(e.thumbh);
					e.tabhide = e.tabhide===undefined ? 0 : parseInt(e.tabhide);
					e.thumbhide = e.thumbhide===undefined ? 0 : parseInt(e.thumbhide);
					e.mh = e.mh===undefined || e.mh=="" || e.mh==="auto" ? 0 : parseInt(e.mh,0);		
					if(e.layout==="fullscreen" || e.l==="fullscreen") 						
						newh = Math.max(e.mh,window.RSIH);					
					else{					
						e.gw = Array.isArray(e.gw) ? e.gw : [e.gw];
						for (var i in e.rl) if (e.gw[i]===undefined || e.gw[i]===0) e.gw[i] = e.gw[i-1];					
						e.gh = e.el===undefined || e.el==="" || (Array.isArray(e.el) && e.el.length==0)? e.gh : e.el;
						e.gh = Array.isArray(e.gh) ? e.gh : [e.gh];
						for (var i in e.rl) if (e.gh[i]===undefined || e.gh[i]===0) e.gh[i] = e.gh[i-1];
											
						var nl = new Array(e.rl.length),
							ix = 0,						
							sl;					
						e.tabw = e.tabhide>=pw ? 0 : e.tabw;
						e.thumbw = e.thumbhide>=pw ? 0 : e.thumbw;
						e.tabh = e.tabhide>=pw ? 0 : e.tabh;
						e.thumbh = e.thumbhide>=pw ? 0 : e.thumbh;					
						for (var i in e.rl) nl[i] = e.rl[i]<window.RSIW ? 0 : e.rl[i];
						sl = nl[0];									
						for (var i in nl) if (sl>nl[i] && nl[i]>0) { sl = nl[i]; ix=i;}															
						var m = pw>(e.gw[ix]+e.tabw+e.thumbw) ? 1 : (pw-(e.tabw+e.thumbw)) / (e.gw[ix]);					
						newh =  (e.gh[ix] * m) + (e.tabh + e.thumbh);
					}
					var el = document.getElementById(e.c);
					if (el!==null && el) el.style.height = newh+"px";					
					el = document.getElementById(e.c+"_wrapper");
					if (el!==null && el) {
						el.style.height = newh+"px";
						el.style.display = "block";
					}
				} catch(e){
					console.log("Failure at Presize of Slider:" + e)
				}					   
			//});
		  };</script>
<!-- Your Google Analytics Plugin is missing the tracking ID -->
<noscript><style> .wpb_animate_when_almost_visible { opacity: 1; }</style></noscript><style type="text/css">.mec-wrap, .mec-wrap div:not([class^="elementor-"]), .lity-container, .mec-wrap h1, .mec-wrap h2, .mec-wrap h3, .mec-wrap h4, .mec-wrap h5, .mec-wrap h6, .entry-content .mec-wrap h1, .entry-content .mec-wrap h2, .entry-content .mec-wrap h3, .entry-content .mec-wrap h4, .entry-content .mec-wrap h5, .entry-content .mec-wrap h6, .mec-wrap .mec-totalcal-box input[type="submit"], .mec-wrap .mec-totalcal-box .mec-totalcal-view span, .mec-agenda-event-title a, .lity-content .mec-events-meta-group-booking select, .lity-content .mec-book-ticket-variation h5, .lity-content .mec-events-meta-group-booking input[type="number"], .lity-content .mec-events-meta-group-booking input[type="text"], .lity-content .mec-events-meta-group-booking input[type="email"],.mec-organizer-item a, .mec-single-event .mec-events-meta-group-booking ul.mec-book-tickets-container li.mec-book-ticket-container label { font-family: "Montserrat", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;}.mec-event-content p, .mec-search-bar-result .mec-event-detail{ font-family: Roboto, sans-serif;} .mec-wrap .mec-totalcal-box input, .mec-wrap .mec-totalcal-box select, .mec-checkboxes-search .mec-searchbar-category-wrap, .mec-wrap .mec-totalcal-box .mec-totalcal-view span { font-family: "Roboto", Helvetica, Arial, sans-serif; }.mec-event-grid-modern .event-grid-modern-head .mec-event-day, .mec-event-list-minimal .mec-time-details, .mec-event-list-minimal .mec-event-detail, .mec-event-list-modern .mec-event-detail, .mec-event-grid-minimal .mec-time-details, .mec-event-grid-minimal .mec-event-detail, .mec-event-grid-simple .mec-event-detail, .mec-event-cover-modern .mec-event-place, .mec-event-cover-clean .mec-event-place, .mec-calendar .mec-event-article .mec-localtime-details div, .mec-calendar .mec-event-article .mec-event-detail, .mec-calendar.mec-calendar-daily .mec-calendar-d-top h2, .mec-calendar.mec-calendar-daily .mec-calendar-d-top h3, .mec-toggle-item-col .mec-event-day, .mec-weather-summary-temp { font-family: "Roboto", sans-serif; } .mec-fes-form, .mec-fes-list, .mec-fes-form input, .mec-event-date .mec-tooltip .box, .mec-event-status .mec-tooltip .box, .ui-datepicker.ui-widget, .mec-fes-form button[type="submit"].mec-fes-sub-button, .mec-wrap .mec-timeline-events-container p, .mec-wrap .mec-timeline-events-container h4, .mec-wrap .mec-timeline-events-container div, .mec-wrap .mec-timeline-events-container a, .mec-wrap .mec-timeline-events-container span { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif !important; }.mec-event-grid-minimal .mec-modal-booking-button:hover, .mec-events-timeline-wrap .mec-organizer-item a, .mec-events-timeline-wrap .mec-organizer-item:after, .mec-events-timeline-wrap .mec-shortcode-organizers i, .mec-timeline-event .mec-modal-booking-button, .mec-wrap .mec-map-lightbox-wp.mec-event-list-classic .mec-event-date, .mec-timetable-t2-col .mec-modal-booking-button:hover, .mec-event-container-classic .mec-modal-booking-button:hover, .mec-calendar-events-side .mec-modal-booking-button:hover, .mec-event-grid-yearly  .mec-modal-booking-button, .mec-events-agenda .mec-modal-booking-button, .mec-event-grid-simple .mec-modal-booking-button, .mec-event-list-minimal  .mec-modal-booking-button:hover, .mec-timeline-month-divider,  .mec-wrap.colorskin-custom .mec-totalcal-box .mec-totalcal-view span:hover,.mec-wrap.colorskin-custom .mec-calendar.mec-event-calendar-classic .mec-selected-day,.mec-wrap.colorskin-custom .mec-color, .mec-wrap.colorskin-custom .mec-event-sharing-wrap .mec-event-sharing > li:hover a, .mec-wrap.colorskin-custom .mec-color-hover:hover, .mec-wrap.colorskin-custom .mec-color-before *:before ,.mec-wrap.colorskin-custom .mec-widget .mec-event-grid-classic.owl-carousel .owl-nav i,.mec-wrap.colorskin-custom .mec-event-list-classic a.magicmore:hover,.mec-wrap.colorskin-custom .mec-event-grid-simple:hover .mec-event-title,.mec-wrap.colorskin-custom .mec-single-event .mec-event-meta dd.mec-events-event-categories:before,.mec-wrap.colorskin-custom .mec-single-event-date:before,.mec-wrap.colorskin-custom .mec-single-event-time:before,.mec-wrap.colorskin-custom .mec-events-meta-group.mec-events-meta-group-venue:before,.mec-wrap.colorskin-custom .mec-calendar .mec-calendar-side .mec-previous-month i,.mec-wrap.colorskin-custom .mec-calendar .mec-calendar-side .mec-next-month:hover,.mec-wrap.colorskin-custom .mec-calendar .mec-calendar-side .mec-previous-month:hover,.mec-wrap.colorskin-custom .mec-calendar .mec-calendar-side .mec-next-month:hover,.mec-wrap.colorskin-custom .mec-calendar.mec-event-calendar-classic dt.mec-selected-day:hover,.mec-wrap.colorskin-custom .mec-infowindow-wp h5 a:hover, .colorskin-custom .mec-events-meta-group-countdown .mec-end-counts h3,.mec-calendar .mec-calendar-side .mec-next-month i,.mec-wrap .mec-totalcal-box i,.mec-calendar .mec-event-article .mec-event-title a:hover,.mec-attendees-list-details .mec-attendee-profile-link a:hover,.mec-wrap.colorskin-custom .mec-next-event-details li i, .mec-next-event-details i:before, .mec-marker-infowindow-wp .mec-marker-infowindow-count, .mec-next-event-details a,.mec-wrap.colorskin-custom .mec-events-masonry-cats a.mec-masonry-cat-selected,.lity .mec-color,.lity .mec-color-before :before,.lity .mec-color-hover:hover,.lity .mec-wrap .mec-color,.lity .mec-wrap .mec-color-before :before,.lity .mec-wrap .mec-color-hover:hover,.leaflet-popup-content .mec-color,.leaflet-popup-content .mec-color-before :before,.leaflet-popup-content .mec-color-hover:hover,.leaflet-popup-content .mec-wrap .mec-color,.leaflet-popup-content .mec-wrap .mec-color-before :before,.leaflet-popup-content .mec-wrap .mec-color-hover:hover, .mec-calendar.mec-calendar-daily .mec-calendar-d-table .mec-daily-view-day.mec-daily-view-day-active.mec-color, .mec-map-boxshow div .mec-map-view-event-detail.mec-event-detail i,.mec-map-boxshow div .mec-map-view-event-detail.mec-event-detail:hover,.mec-map-boxshow .mec-color,.mec-map-boxshow .mec-color-before :before,.mec-map-boxshow .mec-color-hover:hover,.mec-map-boxshow .mec-wrap .mec-color,.mec-map-boxshow .mec-wrap .mec-color-before :before,.mec-map-boxshow .mec-wrap .mec-color-hover:hover, .mec-choosen-time-message, .mec-booking-calendar-month-navigation .mec-next-month:hover, .mec-booking-calendar-month-navigation .mec-previous-month:hover, .mec-yearly-view-wrap .mec-agenda-event-title a:hover, .mec-yearly-view-wrap .mec-yearly-title-sec .mec-next-year i, .mec-yearly-view-wrap .mec-yearly-title-sec .mec-previous-year i, .mec-yearly-view-wrap .mec-yearly-title-sec .mec-next-year:hover, .mec-yearly-view-wrap .mec-yearly-title-sec .mec-previous-year:hover, .mec-av-spot .mec-av-spot-head .mec-av-spot-box span, .mec-wrap.colorskin-custom .mec-calendar .mec-calendar-side .mec-previous-month:hover .mec-load-month-link, .mec-wrap.colorskin-custom .mec-calendar .mec-calendar-side .mec-next-month:hover .mec-load-month-link, .mec-yearly-view-wrap .mec-yearly-title-sec .mec-previous-year:hover .mec-load-month-link, .mec-yearly-view-wrap .mec-yearly-title-sec .mec-next-year:hover .mec-load-month-link, .mec-skin-list-events-container .mec-data-fields-tooltip .mec-data-fields-tooltip-box ul .mec-event-data-field-item a, .mec-booking-shortcode .mec-event-ticket-name, .mec-booking-shortcode .mec-event-ticket-price, .mec-booking-shortcode .mec-ticket-variation-name, .mec-booking-shortcode .mec-ticket-variation-price, .mec-booking-shortcode label, .mec-booking-shortcode .nice-select, .mec-booking-shortcode input, .mec-booking-shortcode span.mec-book-price-detail-description, .mec-booking-shortcode .mec-ticket-name, .mec-booking-shortcode label.wn-checkbox-label{color: #333333}.mec-skin-carousel-container .mec-event-footer-carousel-type3 .mec-modal-booking-button:hover, .mec-wrap.colorskin-custom .mec-event-sharing .mec-event-share:hover .event-sharing-icon,.mec-wrap.colorskin-custom .mec-event-grid-clean .mec-event-date,.mec-wrap.colorskin-custom .mec-event-list-modern .mec-event-sharing > li:hover a i,.mec-wrap.colorskin-custom .mec-event-list-modern .mec-event-sharing .mec-event-share:hover .mec-event-sharing-icon,.mec-wrap.colorskin-custom .mec-event-list-modern .mec-event-sharing li:hover a i,.mec-wrap.colorskin-custom .mec-calendar:not(.mec-event-calendar-classic) .mec-selected-day,.mec-wrap.colorskin-custom .mec-calendar .mec-selected-day:hover,.mec-wrap.colorskin-custom .mec-calendar .mec-calendar-row  dt.mec-has-event:hover,.mec-wrap.colorskin-custom .mec-calendar .mec-has-event:after, .mec-wrap.colorskin-custom .mec-bg-color, .mec-wrap.colorskin-custom .mec-bg-color-hover:hover, .colorskin-custom .mec-event-sharing-wrap:hover > li, .mec-wrap.colorskin-custom .mec-totalcal-box .mec-totalcal-view span.mec-totalcalview-selected,.mec-wrap .flip-clock-wrapper ul li a div div.inn,.mec-wrap .mec-totalcal-box .mec-totalcal-view span.mec-totalcalview-selected,.event-carousel-type1-head .mec-event-date-carousel,.mec-event-countdown-style3 .mec-event-date,#wrap .mec-wrap article.mec-event-countdown-style1,.mec-event-countdown-style1 .mec-event-countdown-part3 a.mec-event-button,.mec-wrap .mec-event-countdown-style2,.mec-map-get-direction-btn-cnt input[type="submit"],.mec-booking button,span.mec-marker-wrap,.mec-wrap.colorskin-custom .mec-timeline-events-container .mec-timeline-event-date:before, .mec-has-event-for-booking.mec-active .mec-calendar-novel-selected-day, .mec-booking-tooltip.multiple-time .mec-booking-calendar-date.mec-active, .mec-booking-tooltip.multiple-time .mec-booking-calendar-date:hover, .mec-ongoing-normal-label, .mec-calendar .mec-has-event:after, .mec-event-list-modern .mec-event-sharing li:hover .telegram{background-color: #333333;}.mec-booking-tooltip.multiple-time .mec-booking-calendar-date:hover, .mec-calendar-day.mec-active .mec-booking-tooltip.multiple-time .mec-booking-calendar-date.mec-active{ background-color: #333333;}.mec-skin-carousel-container .mec-event-footer-carousel-type3 .mec-modal-booking-button:hover, .mec-timeline-month-divider, .mec-wrap.colorskin-custom .mec-single-event .mec-speakers-details ul li .mec-speaker-avatar a:hover img,.mec-wrap.colorskin-custom .mec-event-list-modern .mec-event-sharing > li:hover a i,.mec-wrap.colorskin-custom .mec-event-list-modern .mec-event-sharing .mec-event-share:hover .mec-event-sharing-icon,.mec-wrap.colorskin-custom .mec-event-list-standard .mec-month-divider span:before,.mec-wrap.colorskin-custom .mec-single-event .mec-social-single:before,.mec-wrap.colorskin-custom .mec-single-event .mec-frontbox-title:before,.mec-wrap.colorskin-custom .mec-calendar .mec-calendar-events-side .mec-table-side-day, .mec-wrap.colorskin-custom .mec-border-color, .mec-wrap.colorskin-custom .mec-border-color-hover:hover, .colorskin-custom .mec-single-event .mec-frontbox-title:before, .colorskin-custom .mec-single-event .mec-wrap-checkout h4:before, .colorskin-custom .mec-single-event .mec-events-meta-group-booking form > h4:before, .mec-wrap.colorskin-custom .mec-totalcal-box .mec-totalcal-view span.mec-totalcalview-selected,.mec-wrap .mec-totalcal-box .mec-totalcal-view span.mec-totalcalview-selected,.event-carousel-type1-head .mec-event-date-carousel:after,.mec-wrap.colorskin-custom .mec-events-masonry-cats a.mec-masonry-cat-selected, .mec-marker-infowindow-wp .mec-marker-infowindow-count, .mec-wrap.colorskin-custom .mec-events-masonry-cats a:hover, .mec-has-event-for-booking .mec-calendar-novel-selected-day, .mec-booking-tooltip.multiple-time .mec-booking-calendar-date.mec-active, .mec-booking-tooltip.multiple-time .mec-booking-calendar-date:hover, .mec-virtual-event-history h3:before, .mec-booking-tooltip.multiple-time .mec-booking-calendar-date:hover, .mec-calendar-day.mec-active .mec-booking-tooltip.multiple-time .mec-booking-calendar-date.mec-active, .mec-rsvp-form-box form > h4:before, .mec-wrap .mec-box-title::before, .mec-box-title::before  {border-color: #333333;}.mec-wrap.colorskin-custom .mec-event-countdown-style3 .mec-event-date:after,.mec-wrap.colorskin-custom .mec-month-divider span:before, .mec-calendar.mec-event-container-simple dl dt.mec-selected-day, .mec-calendar.mec-event-container-simple dl dt.mec-selected-day:hover{border-bottom-color:#333333;}.mec-wrap.colorskin-custom  article.mec-event-countdown-style1 .mec-event-countdown-part2:after{border-color: transparent transparent transparent #333333;}.mec-wrap.colorskin-custom .mec-box-shadow-color { box-shadow: 0 4px 22px -7px #333333;}.mec-events-timeline-wrap .mec-shortcode-organizers, .mec-timeline-event .mec-modal-booking-button, .mec-events-timeline-wrap:before, .mec-wrap.colorskin-custom .mec-timeline-event-local-time, .mec-wrap.colorskin-custom .mec-timeline-event-time ,.mec-wrap.colorskin-custom .mec-timeline-event-location,.mec-choosen-time-message { background: rgba(51,51,51,.11);}.mec-wrap.colorskin-custom .mec-timeline-events-container .mec-timeline-event-date:after{ background: rgba(51,51,51,.3);}.mec-booking-shortcode button { box-shadow: 0 2px 2px rgba(51 51 51 / 27%);}.mec-booking-shortcode button.mec-book-form-back-button{ background-color: rgba(51 51 51 / 40%);}.mec-events-meta-group-booking-shortcode{ background: rgba(51,51,51,.14);}.mec-booking-shortcode label.wn-checkbox-label, .mec-booking-shortcode .nice-select,.mec-booking-shortcode input, .mec-booking-shortcode .mec-book-form-gateway-label input[type=radio]:before, .mec-booking-shortcode input[type=radio]:checked:before, .mec-booking-shortcode ul.mec-book-price-details li, .mec-booking-shortcode ul.mec-book-price-details{ border-color: rgba(51 51 51 / 27%) !important;}.mec-booking-shortcode input::-webkit-input-placeholder,.mec-booking-shortcode textarea::-webkit-input-placeholder{color: #333333}.mec-booking-shortcode input::-moz-placeholder,.mec-booking-shortcode textarea::-moz-placeholder{color: #333333}.mec-booking-shortcode input:-ms-input-placeholder,.mec-booking-shortcode textarea:-ms-input-placeholder {color: #333333}.mec-booking-shortcode input:-moz-placeholder,.mec-booking-shortcode textarea:-moz-placeholder {color: #333333}.mec-booking-shortcode label.wn-checkbox-label:after, .mec-booking-shortcode label.wn-checkbox-label:before, .mec-booking-shortcode input[type=radio]:checked:after{background-color: #333333}</style><style type="text/css">.post-body .mec-timeline-readmore{

color: #ffffff;

}

.post-body:hover .mec-timeline-readmore:hover {

color: #ffffff;

}



</style></head>
<body class="post-template-default single single-post postid-83146 single-format-standard  style-color-lxmt-bg non-logged-in group-blog hormenu-position-left hmenu hmenu-position-right header-full-width main-center-align menu-has-cta mobile-parallax-not-allowed ilb-no-bounce unreg qw-body-scroll-disabled wpb-js-composer js-comp-ver-6.7.0 vc_responsive" data-border="0">
		<div class="body-borders" data-border="0"><div class="top-border body-border-shadow"></div><div class="right-border body-border-shadow"></div><div class="bottom-border body-border-shadow"></div><div class="left-border body-border-shadow"></div><div class="top-border style-light-bg"></div><div class="right-border style-light-bg"></div><div class="bottom-border style-light-bg"></div><div class="left-border style-light-bg"></div></div>	<div class="box-wrapper">
		<div class="box-container">
		<script type="text/javascript" id="initBox">UNCODE.initBox();</script>
		<div class="menu-wrapper">
													
													<header id="masthead" class="navbar menu-primary menu-light submenu-light style-light-original menu-with-logo">
														<div class="menu-container style-color-xsdn-bg menu-borders menu-shadows">
															<div class="row-menu limit-width">
																<div class="row-menu-inner">
																	<div id="logo-container-mobile" class="col-lg-0 logo-container middle">
																		<div id="main-logo" class="navbar-header style-light">
																			<a href="https://blog.openzeppelin.com/" class="navbar-brand" data-minheight="20"><div class="logo-image main-logo logo-skinnable" data-maxheight="27" style="height: 27px;"><img src="https://blog.openzeppelin.com/wp-content/uploads/2021/06/OZ_logo_2021.svg" alt="logo" width="2546" height="400" class="img-responsive" /></div></a>
																		</div>
																		<div class="mmb-container"><div class="mobile-additional-icons"></div><div class="mobile-menu-button 1 mobile-menu-button-light lines-button x2"><span class="lines"></span></div></div>
																	</div>
																	<div class="col-lg-12 main-menu-container middle">
																		<div class="menu-horizontal menu-dd-shadow-xs">
																			<div class="menu-horizontal-inner">
																				<div class="nav navbar-nav navbar-main navbar-nav-first"><ul id="menu-openzeppelin" class="menu-primary-inner menu-smart sm"><li id="menu-item-79967" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-79967 menu-item-link"><a title="Security Audits" href="https://blog.openzeppelin.com/security-audits/">Security Audits<i class="fa fa-angle-right fa-dropdown"></i></a></li>
<li id="menu-item-79738" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-79738 menu-item-link"><a title="News" href="https://blog.openzeppelin.com/news/">News<i class="fa fa-angle-right fa-dropdown"></i></a></li>
<li id="menu-item-87896" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-87896 menu-item-link"><a title="Events" href="https://blog.openzeppelin.com/ozevents/">Events<i class="fa fa-angle-right fa-dropdown"></i></a></li>
<li id="menu-item-79737" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-79737 menu-item-link"><a title="Website" href="https://openzeppelin.com">Website<i class="fa fa-angle-right fa-dropdown"></i></a></li>
</ul></div><div class="nav navbar-nav navbar-cta"><ul id="menu-call-to-action" class="menu-cta-inner menu-smart sm"><li id="menu-item-89011" class="menu-item-button"><a title="We&#039;re hiring!" href="https://openzeppelin.com/jobs/"><div class="menu-btn-table"><div class="menu-btn-cell"><div class="hiring_button btn-color-768098 btn-round menu-item menu-item-type-custom menu-item-object-custom menu-item-89011 menu-btn-container btn"><span>We&#8217;re hiring!</span></div></div></div></a></li>
</ul></div><div class="nav navbar-nav navbar-nav-last"><ul class="menu-smart sm menu-icons"><li class="menu-item-link search-icon style-light dropdown "><a href="#" class="trigger-overlay search-icon" data-area="search" data-container="box-container">
													<i class="fa fa-search3"></i><span class="desktop-hidden"><span>Search</span></span><i class="fa fa-angle-down fa-dropdown desktop-hidden"></i>
													</a><ul role="menu" class="drop-menu desktop-hidden">
														<li>
															<form class="search ccc" method="get" action="https://blog.openzeppelin.com/">
																<input type="search" class="search-field no-livesearch" placeholder="Search…" value="" name="s" title="Search…" /></form>
														</li>
													</ul></li></ul></div><div class="desktop-hidden">
														 							</div></div>
																		</div>
																	</div>
																</div>
															</div>
														</div>
													</header>
												</div>			<script type="text/javascript" id="fixMenuHeight">UNCODE.fixMenuHeight();</script>
			<div class="main-wrapper">
				<div class="main-container">
					<div class="page-wrapper">
						<div class="sections-container">
<script type="text/javascript">UNCODE.initHeader();</script><article id="post-83146" class="page-body style-light-bg post-83146 post type-post status-publish format-standard has-post-thumbnail hentry category-security-audits">
          <div class="post-wrapper">
          	<div class="post-body"><div class="post-content un-no-sidebar-layout" style="max-width: 55%; margin: auto;"><div class="row-container">
		  					<div class="row row-parent style-light double-top-padding double-bottom-padding">
									<div class="post-title-wrapper"><h1 class="post-title">Libra&#8217;s Move IR Compiler Vulnerability</h1><div class="post-info"><div class="date-info">September 9, 2019</div><div class="category-info"><span>|</span>In <a href="https://blog.openzeppelin.com/category/security-audits/" title="View all posts in Security audits">Security audits</a></div><div class="author-info"><span>|</span>By <a href="https://blog.openzeppelin.com/author/openzeppelin-security/">OpenZeppelin Security</a></div></div></div><p><img data-attachment-id="83200" data-permalink="https://blog.openzeppelin.com/libra-vulnerability-release/cover_audits_libra_03/" data-orig-file="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/cover_audits_libra_03.png?fit=2400%2C1350&amp;ssl=1" data-orig-size="2400,1350" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="cover_audits_libra_03" data-image-description="" data-image-caption="" data-medium-file="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/cover_audits_libra_03.png?fit=300%2C169&amp;ssl=1" data-large-file="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/cover_audits_libra_03.png?fit=840%2C473&amp;ssl=1" class="aligncenter wp-image-83200 size-large" src="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/cover_audits_libra_03.png?resize=840%2C473&#038;ssl=1" alt="" width="840" height="473" srcset="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/cover_audits_libra_03.png?resize=1024%2C576&amp;ssl=1 1024w, https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/cover_audits_libra_03.png?w=1680&amp;ssl=1 1680w" sizes="(max-width: 840px) 100vw, 840px" data-recalc-dims="1" /></p>
<p><span style="font-weight: 400;">We describe a vulnerability in the Move IR compiler whereby inline comments can be disguised as executable code. This is due to the Move IR parser failing to recognize some Unicode line break characters at the end of inline comments. In particular, while the code intends to parse the common \r, \n and \r\n, it fails to parse \r correctly. Additionally, other valid Unicode line break characters are ignored entirely by the parser.</span></p>
<p><span style="font-weight: 400;">The potential impact of the vulnerability can vary greatly and depend on i) the business logic of each specific module and its use cases, ii) current and future features of the Move IR language, and iii) the developer platform being used to submit bytecode to the Libra network. Some potential exploiting scenarios one can think of are:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">A faucet that mints assets (Libra Coins or any other asset on the Libra network) in exchange for a fee can deploy a malicious module that takes a fee but never actually provide the possibility of minting such asset to the user.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">A wallet that claims to keep deposits frozen and release them after a period of time may actually never release such funds.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">A payment splitter module that appears to divide some asset and forward it to multiple parties may actually never send the corresponding part to some of them.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">A module that takes sensitive data and applies some kind of cryptographic operation to obscure it (e.g. hashing or encrypting operations) may actually never apply such operation.</span></li>
</ul>
<p><span style="font-weight: 400;">By crafting modules with specific line break characters different from </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> at the end of inline comments, malicious module publishers can deceive users that trust their apparent source code. This is especially important in the blockchain setting, where trust is replaced by auditability. A related vulnerability was previously found by our team in the </span><span style="font-weight: 400;"><a href="https://blog.openzeppelin.com/solidity-compiler-audit-8cfc0316a420/">Solidity compiler audit</a></span><span style="font-weight: 400;"> on Nov 1st, 2018.</span></p>
<p><strong>The events timeline is as follows:</strong></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">August 6th: We disclosed the vulnerability to the Libra team, who acknowledged our notification.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">August 8th: The Libra team introduced a change to the line of code where we had pinpointed the vulnerability. The vulnerability was still present after this change. Upon checking in with them, they stated that the code change was unrelated to the vulnerability, and acknowledged that it didn&#8217;t fix the problem. We provide a technical description of the vulnerability in the patched code in the </span><strong>Code change</strong><span style="font-weight: 400;"> section.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">September 3rd: The Libra team pushed a fix for the vulnerability and notified us about it. </span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">September 4th: We reviewed the patch, confirming that the vulnerability has been fixed. We provide details about this patch in</span> <strong>The fix</strong><span style="font-weight: 400;"> section.</span></li>
</ul>
<h2><b>Details</b></h2>
<p><span style="font-weight: 400;">We first explain where the vulnerability is, to then introduce two critical scenarios under which it could be exploited to disguise inline comments as executable code. The exploit relies on the fact that different text editors interpret and render line breaks in different ways. This could be leveraged by malicious actors entitled to publish Move modules in the Libra network to deceive users, who would then interact with modules behaving in unexpected ways. </span></p>
<p><span style="font-weight: 400;">While this feature is restricted to a set of trusted users today, it could potentially be open, public and permissionless in the future. In </span><strong>The exploit</strong><span style="font-weight: 400;"> section we showcase a simple proof-of-concept Move module with a single resource declaration; more dangerous cases can be thought of in modules that handle valuable assets.</span></p>
<h3><b>The vulnerability</b></h3>
<p><span style="font-weight: 400;">In the Move IR compiler code at commit </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/tree/8ea33298678117748f1c75112f35a9fbc05b2172">8ea3329</a></span><span style="font-weight: 400;">, within the</span> <a href="https://github.com/libra/libra/blob/8ea33298678117748f1c75112f35a9fbc05b2172/language/compiler/ir_to_bytecode/src/parser.rs#L22"><span style="font-weight: 400;">strip_comments function</span></a><span style="font-weight: 400;">, the parser module tries to identify inline comments </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/blob/8ea33298678117748f1c75112f35a9fbc05b2172/language/compiler/ir_to_bytecode/src/parser.rs#L24">with a simple regular expression</a></span><span style="font-weight: 400;"> intended to match comments that end in </span><span style="font-weight: 400;"><code>\r</code></span>, <span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> or </span><span style="font-weight: 400;"><code>\r\n</code></span><span style="font-weight: 400;">:</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="rust">fn strip_comments(string: &amp;str) -&gt; String {   // Remove line comments   let line_comments = Regex::new(r"//.*(\r\n|\n|\r)").unwrap();   line_comments.replace_all(string, "$1").into_owned() }</pre>
<p><span style="font-weight: 400;">We have identified two cases where the parser fails:</span></p>
<ol>
<li style="font-weight: 400;"><span style="font-weight: 400;">The above function silently fails at detecting the end of an inline comment marked with the </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> character.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">The above function ignores several other Unicode characters lawfully representing line breaks.</span></li>
</ol>
<h4><span style="font-weight: 400;">Case 1</span></h4>
<p><span style="font-weight: 400;">The Move IR parser uses a regular expression from the </span><span style="font-weight: 400;"><a href="https://docs.rs/regex/1.1.9/regex">regex</a></span><span style="font-weight: 400;"><a href="https://docs.rs/regex/1.1.9/regex"> Rust crate</a></span><span style="font-weight: 400;"> to detect inline comments in the code of Move modules. It attempts to match inline comments ending with </span><span style="font-weight: 400;"><code>\r\n</code></span><span style="font-weight: 400;">, </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> or </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> using:</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="rust">Regex::new(r"//.*(\r\n|\n|\r)")</pre>
<p><span style="font-weight: 400;">However, the regular expression does not actually behave as expected, as it </span><b>does not actually detect the end of inline comments marked by the </b><code>\r</code><b> line break character</b><span style="font-weight: 400;">.</span></p>
<p><span style="font-weight: 400;">In order to understand the exact behavior of the erroneous regular expression, we explain each of its components individually.</span></p>
<ol>
<li style="font-weight: 400;"><span style="font-weight: 400;">The </span><span style="font-weight: 400;"><code>r</code></span><span style="font-weight: 400;"> before the double quotes is a Rust feature to identify a </span><span style="font-weight: 400;"><a href="https://doc.rust-lang.org/rust-by-example/std/str.html#literals-and-escapes">“raw string literal”</a></span><span style="font-weight: 400;">, used just as a convenient way to write the regex string as-is without having to escape special characters.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;"><code>//</code></span>:<span style="font-weight: 400;"> matches the start of the Move IR inline comment syntax.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;"><code>.*</code></span><span style="font-weight: 400;">: matches zero or more characters</span> <span style="font-weight: 400;">except for the line break character </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;">.</span><span style="font-weight: 400;">This is due to </span><span style="font-weight: 400;"><a href="https://www.regular-expressions.info/dot.html">historic reasons</a></span><span style="font-weight: 400;">, as regexes were originally used in line-based tools. The behavior is </span><span style="font-weight: 400;"><a href="https://docs.rs/regex/1.1.9/regex/#unicode">documented</a></span><span style="font-weight: 400;"> in the </span><span style="font-weight: 400;"><code>regex</code></span><span style="font-weight: 400;"> Rust crate as follows:  </span><span style="font-weight: 400;"><i>“[The character] . will match any valid UTF-8 encoded Unicode scalar value except for </i></span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"><i>&#8220;.</i></span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;"><code>(\r\n|\n|\r)</code></span><span style="font-weight: 400;">: is a capturing group matching characters </span><span style="font-weight: 400;"><code>\r\n</code></span><span style="font-weight: 400;">,  </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;">, or </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;">, attempting to identify the end of the inline comment.</span></li>
</ol>
<p><span style="font-weight: 400;">In general, a regex engine walks through the regular expression attempting to match the next token in the regex to the next character in the string. If a match is found, the engine advances through the regex and the subject string. In our case, every character in a Move IR inline comment will be first matched by the </span><span style="font-weight: 400;"><code>.*</code></span><span style="font-weight: 400;"> expression except for </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;">, as explained in point 3. Crucially, however, the </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> character will be among those matched by </span><span style="font-weight: 400;"><code>.*</code></span><span style="font-weight: 400;">. When the engine finally finds a </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> in the string, it will stop consuming further characters. </span></p>
<p><span style="font-weight: 400;">What this entails is that the parser will only identify </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> as the end of the inline comment, silently failing to identify </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> as a line terminator. In other words, just as any other regular character, </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> is considered as part of the comment instead of as its ending.</span></p>
<p><span style="font-weight: 400;">In </span><strong>The exploit &#8211; Case 1</strong><span style="font-weight: 400;"> section we show a proof-of-concept case of a malicious Module that takes advantage of how a major editor renders the </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> character.</span></p>
<h4><span style="font-weight: 400;">Case 2</span></h4>
<p><span style="font-weight: 400;">The Move IR parser intends to handle the most common line break characters CR (</span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;">), LF (</span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;">) and CRLF (</span><span style="font-weight: 400;"><code>\r\n</code></span><span style="font-weight: 400;">). Besides failing to parse </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> correctly, as described in </span><strong>The vulnerability &#8211; Case 1</strong><span style="font-weight: 400;">, there are several other </span><span style="font-weight: 400;"><a href="https://en.wikipedia.org/wiki/Newline#Unicode">Unicode characters representing line breaks</a></span><span style="font-weight: 400;"> that the parser does not even attempt to detect. The complete set of Unicode line break characters is:</span></p>
<ul>
<li style="font-weight: 400;"><span style="font-weight: 400;">LF (</span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> or </span><span style="font-weight: 400;"><code>0x0A</code></span><span style="font-weight: 400;"> in hex)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">VT (</span><span style="font-weight: 400;"><code>\v</code></span><span style="font-weight: 400;"> or </span><span style="font-weight: 400;"><code>0x0B</code></span><span style="font-weight: 400;"> in hex)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">FF (</span><span style="font-weight: 400;"><code>0x0C</code></span><span style="font-weight: 400;"> in hex)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">CR (</span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> or </span><span style="font-weight: 400;"><code>0x0D</code></span><span style="font-weight: 400;"> in hex)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">CRLF (</span><span style="font-weight: 400;"><code>\r\n</code></span><span style="font-weight: 400;"> or </span><span style="font-weight: 400;"><code>0x0D0A</code></span><span style="font-weight: 400;"> in hex)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">NEL (</span><span style="font-weight: 400;"><code>0xC285</code></span><span style="font-weight: 400;"> in hex)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">LS (</span><span style="font-weight: 400;"><code>0xE280A8</code></span><span style="font-weight: 400;"> in hex)</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">PS (</span><span style="font-weight: 400;"><code>0xE280A9</code></span><span style="font-weight: 400;"> in hex)</span></li>
</ul>
<p><span style="font-weight: 400;">Characters LF, CR and CRLF are the most widely recognized line breaks. Yet several code editors, the popular Visual Studio IDE among them, still properly render some of the less common line break characters such as NEL, LS or PS. As in Case 1, this can lead to malicious Move Modules that are hard to detect. Such examples are showcased in </span><strong>The exploit &#8211; Case 2</strong><span style="font-weight: 400;"> section.</span></p>
<h3><b>The exploit</b></h3>
<p><span style="font-weight: 400;">Any malicious actor entitled to deploy a module to the Libra network can leverage the described vulnerability. By crafting malicious modules with specific line break characters different from </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> at the end of inline comments, they can deceive users that trust the apparent source code of the module, tricking them into executing undesired actions. This is especially important in the blockchain setting, where trust is replaced by auditability.</span></p>
<p><span style="font-weight: 400;">The nature of the deception can vary greatly and depend on i) the business logic of each specific module and its use cases and ii) current and future features of the Move IR language. Some potential exploiting scenarios one can think of are listed in the </span><strong>Summary</strong><span style="font-weight: 400;"> section.</span></p>
<p><span style="font-weight: 400;">As a proof of concept, we now present two cases of malicious modules that respectively take advantage of both cases described in </span><strong>The vulnerability</strong><span style="font-weight: 400;"> section. All test files referenced in this write up can be found in a private repository: </span><span style="font-weight: 400;"><a href="https://github.com/OpenZeppelin/move-compiler-vulnerability">https://github.com/OpenZeppelin/move-compiler-vulnerability</a></span><span style="font-weight: 400;">.</span></p>
<h4><span style="font-weight: 400;">Case 1: </span><span style="font-weight: 400;"><code>\r</code></span></h4>
<p><span style="font-weight: 400;">Several code editors and renderers (e.g. Visual Studio Code, Sublime Text, Gedit, GitHub) consider the </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> character (</span><span style="font-weight: 400;"><code>0x0d</code></span><span style="font-weight: 400;"> in hex) a valid line break. This means that these editors will show an inline comment and the following instruction in two different lines when separated by a </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;">. For example, </span><span style="font-weight: 400;"><a href="https://github.com/OpenZeppelin/move-compiler-vulnerability/blob/master/modules/Module_CR.mvir">the following Move module</a></span><span style="font-weight: 400;">, as rendered by GitHub, appears to be declaring a resource.</span></p>
<p><img class="aligncenter" src="https://lh6.googleusercontent.com/_zKTLJNkIQerGK40PX5tA08hp7kl7gi0ABNek5KFemRsFY5j_xobgwcOf2yMWYt_cvyCTCNTFnf-zcK7BGy8W8anpXUOgT8ETZiL1IkBcIZPSH7EYrVAHRzPXj6EpEvF4GuPcFM" /></p>
<p><span style="font-weight: 400;">But at the end of the inline comment there is an invisible </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> line break character, which can be detected via inspection of the file’s hexdump:</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="shell">$ xxd Module_CR.mvir  00000000: 6d6f 6475 6c65 204d 207b 0a20 2020 202f module M {. / 00000010: 2f20 536f 6d65 2063 6f6d 6d65 6e74 0d20 / Some comment.  00000020: 2020 2072 6573 6f75 7263 6520 417b 783a   resource A{x: 00000030: 2075 3634 7d0a 7d0a                     u64}.}.</pre>
<p><span style="font-weight: 400;">As explained in </span><strong>The vulnerability &#8211; Case 1</strong><span style="font-weight: 400;"> section, the above module will actually be compiled as an empty module.</span></p>
<p><span style="font-weight: 400;">In the </span><span style="font-weight: 400;"><strong>Validating with the Move IR compiler output</strong></span><span style="font-weight: 400;"> section we demonstrate the scenario with a more in-depth comparison of the compiler’s bytecode produced for regular and malicious Move modules.</span></p>
<h4><span style="font-weight: 400;">Case 2: other line break characters</span></h4>
<p><span style="font-weight: 400;">The most commonly accepted line break characters are </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;">, </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> and </span><span style="font-weight: 400;"><code>\r\n</code></span><span style="font-weight: 400;">. But as we already stated, the way in which text editors render line break characters differ from editor to editor. Here is how the</span> <span style="font-weight: 400;"><a href="https://visualstudio.microsoft.com/vs/">Visual Studio IDE</a></span><span style="font-weight: 400;"> editor (widely used by software developers) renders a very simple Move module with the common </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> line break between the inline comment and the resource declaration:</span></p>
<h2><b><img data-attachment-id="83244" data-permalink="https://blog.openzeppelin.com/libra-vulnerability-summary/unnamed-3/" data-orig-file="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-3.png?fit=512%2C156&amp;ssl=1" data-orig-size="512,156" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="unnamed (3)" data-image-description="" data-image-caption="" data-medium-file="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-3.png?fit=300%2C91&amp;ssl=1" data-large-file="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-3.png?fit=512%2C156&amp;ssl=1" class="alignnone size-full wp-image-83244" src="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-3.png?resize=512%2C156&#038;ssl=1" alt="" width="512" height="156" data-recalc-dims="1" /></b></h2>
<p><span style="font-weight: 400;">But this editor interprets not only LF as a valid line break, </span><span style="font-weight: 400;"><a href="https://docs.microsoft.com/en-us/visualstudio/ide/encodings-and-line-breaks?view=vs-2019">but also CRLF, NEL, LS and PS</a></span><span style="font-weight: 400;">.</span></p>
<p><span style="font-weight: 400;">Following we show how Visual Studio IDE shows the same simple module but with PS, NEL and LS line breaks respectively:</span></p>
<h2><b><img data-attachment-id="83251" data-permalink="https://blog.openzeppelin.com/libra-vulnerability-summary/unnamed-5/" data-orig-file="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-4.png?fit=512%2C161&amp;ssl=1" data-orig-size="512,161" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="unnamed" data-image-description="" data-image-caption="" data-medium-file="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-4.png?fit=300%2C94&amp;ssl=1" data-large-file="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-4.png?fit=512%2C161&amp;ssl=1" class="alignnone size-full wp-image-83251" src="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-4.png?resize=512%2C161&#038;ssl=1" alt="" width="512" height="161" data-recalc-dims="1" /><img data-attachment-id="83246" data-permalink="https://blog.openzeppelin.com/libra-vulnerability-summary/unnamed-1/" data-orig-file="https://i0.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-1.png?fit=512%2C157&amp;ssl=1" data-orig-size="512,157" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="unnamed (1)" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-1.png?fit=300%2C92&amp;ssl=1" data-large-file="https://i0.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-1.png?fit=512%2C157&amp;ssl=1" class="alignnone size-full wp-image-83246" src="https://i0.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-1.png?resize=512%2C157&#038;ssl=1" alt="" width="512" height="157" data-recalc-dims="1" /><img data-attachment-id="83245" data-permalink="https://blog.openzeppelin.com/libra-vulnerability-summary/unnamed-2/" data-orig-file="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-2.png?fit=512%2C158&amp;ssl=1" data-orig-size="512,158" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="unnamed (2)" data-image-description="" data-image-caption="" data-medium-file="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-2.png?fit=300%2C93&amp;ssl=1" data-large-file="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-2.png?fit=512%2C158&amp;ssl=1" class="alignnone size-full wp-image-83245" src="https://i1.wp.com/blog.openzeppelin.com/wp-content/uploads/2019/09/unnamed-2.png?resize=512%2C158&#038;ssl=1" alt="" width="512" height="158" data-recalc-dims="1" /></b></h2>
<p><span style="font-weight: 400;">A user reading Move module&#8217;s code from any of these three last files using the Visual Studio IDE can be tricked into believing that the M module is declaring a resource, whereas the Move IR compiler will consider that instruction as part of the inline comment. </span></p>
<p><span style="font-weight: 400;">As exhibited in the screenshots included in the </span><span style="font-weight: 400;"><a href="https://github.com/OpenZeppelin/move-compiler-vulnerability/tree/master/images">images folder</a></span><span style="font-weight: 400;">, the Unix command line </span><span style="font-weight: 400;"><code>cat</code></span><span style="font-weight: 400;"> as well as GNOME&#8217;s Gedit also display a similar behavior, unlike other major editors such as Visual Studio Code, Atom, Sublime Text, or the GitHub online editor.</span></p>
<h3><b>Validating the Move IR compiler output</b></h3>
<p><span style="font-weight: 400;">For the sake of simplicity, we showcase the compiler’s output using two simple proof-of-concept modules, each corresponding to the cases 1 and 2 described previously. Yet, the following can be reproduced for all other line break characters that the Move IR parser fails to detect. The compiler we used was built from the latest commit to the date,</span> <a href="https://github.com/libra/libra/tree/8ea33298678117748f1c75112f35a9fbc05b2172"><span style="font-weight: 400;">8ea33298678117748f1c75112f35a9fbc05b2172</span></a><span style="font-weight: 400;">.</span></p>
<p><span style="font-weight: 400;">First, compile a simple non-malicious Move module with an inline comment and a resource declaration where all line breaks are </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> (see </span><span style="font-weight: 400;"><a href="https://github.com/OpenZeppelin/move-compiler-vulnerability/blob/master/modules/Module_LF.mvir">Module_LF.mvir</a></span><span style="font-weight: 400;">):</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="shell">$ ./compiler Module_LF.mvir --module --output lf-output</pre>
<p><span style="font-weight: 400;">The output in this case is:</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="shell">$ xxd -ps lf-output  4c49425241564d0a0100080153000000020000000255000000040000000b 59000000020000000d5b00000002000000055d0000000600000004630000 002000000008830000000400000009870000000300000000000001010001 020300014d01410178000000000000000000000000000000000000000000 000000000000000000000000020100000200</pre>
<p><span style="font-weight: 400;">Now compile a non-malicious Move module </span><span style="font-weight: 400;"><i>without</i></span><span style="font-weight: 400;"> a resource declaration (see </span><span style="font-weight: 400;"><a href="https://github.com/OpenZeppelin/move-compiler-vulnerability/blob/master/modules/Module_Commented.mvir">Module_Commented.mvir</a></span><span style="font-weight: 400;">):</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="shell">$ ./compiler Module_Commented.mvir --module --output commented-output</pre>
<pre class="EnlighterJSRAW" data-enlighter-language="shell">$ xxd -ps commented-output  4c49425241564d0a010004012f000000020000000d310000000200000005 330000000200000004350000002000000000000300014d00000000000000 00000000000000000000000000000000000000000000000000</pre>
<p><span style="font-weight: 400;">Let’s now compile two different malicious Move modules that disguise an inline comment as executable code. First, corresponding to </span><span style="font-weight: 400;"><a href="https://docs.google.com/document/d/1_L2aS2XCzrZQ1jME8BIAbMDgCdgdCKn_oDgYSQ7mGZg/edit#heading=h.gk9j48odzs3f">Case 1</a></span><span style="font-weight: 400;">, the line break between the inline comment and the resource declaration will be the CR character (</span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> or </span><span style="font-weight: 400;"><code>0x0D</code></span><span style="font-weight: 400;"> in hex; see </span><span style="font-weight: 400;"><a href="https://github.com/OpenZeppelin/move-compiler-vulnerability/blob/master/modules/Module_CR.mvir">Module_CR.mvir</a></span><span style="font-weight: 400;">):</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="shell">$ ./compiler Module_CR.mvir --module --output cr-output</pre>
<p><span style="font-weight: 400;">The output in this case is:</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="shell">$ xxd -ps cr-output  4c49425241564d0a010004012f000000020000000d310000000200000005 330000000200000004350000002000000000000300014d00000000000000 00000000000000000000000000000000000000000000000000</pre>
<p><span style="font-weight: 400;">Next, as an instance of </span><span style="font-weight: 400;"><a href="https://docs.google.com/document/d/1_L2aS2XCzrZQ1jME8BIAbMDgCdgdCKn_oDgYSQ7mGZg/edit#heading=h.pnomon5g0m0i">Case 2</a></span><span style="font-weight: 400;">, the line break between the inline comment and the resource declaration will be the PS character (</span><span style="font-weight: 400;"><code>0xE280A9</code></span><span style="font-weight: 400;"> in hex; see </span><span style="font-weight: 400;"><a href="https://github.com/OpenZeppelin/move-compiler-vulnerability/blob/master/modules/Module_PS.mvir">Module_PS.mvir</a></span><span style="font-weight: 400;">).</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="shell">$ ./compiler Module_PS.mvir --module --output ps-output</pre>
<p><span style="font-weight: 400;">Similarly, the output in this case is:</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="shell">$ xxd -ps ps-output  4c49425241564d0a010004012f000000020000000d310000000200000005 330000000200000004350000002000000000000300014d00000000000000 00000000000000000000000000000000000000000000000000</pre>
<p><span style="font-weight: 400;">Note that the bytecode produced in both cases is identical to the bytecode produced in the case of a module </span><span style="font-weight: 400;"><i>without</i></span><span style="font-weight: 400;"> a resource declaration. This demonstrates that the compiler indeed misses the resource declaration in modules where comments are terminated with the CR and PS line break characters.</span></p>
<h2><b>Code change</b></h2>
<p><span style="font-weight: 400;">In commit </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/commit/1acec930f3417d6ba75cf5b25f0fa2f0d5fb715e">5fb715e</a></span><span style="font-weight: 400;">, the Libra team introduced changes to the lines of code affected by the vulnerability and modified the regex used to identify inline comments within the </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/blob/06958e69fdedc6cea6e96502b668b8c75ef10ec9/language/compiler/ir_to_bytecode/src/parser.rs#L22"><code>strip_comments_function</code></a></span><span style="font-weight: 400;">. The improved code results in a more concise way to match comments that end with a newline (</span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;">) character, but is still vulnerable to the possibility of disguising inline comments as executable code. Let’s take a closer look to the code:</span></p>
<pre class="EnlighterJSRAW" data-enlighter-language="rust">fn strip_comments(string: &amp;str) -&gt; String {   // Remove line comments   let line_comments = Regex::new(r"(?m)//.*$").unwrap();   line_comments.replace_all(string, "$1").into_owned() }</pre>
<p><span style="font-weight: 400;">The regular expression which is used to match inline comments works fine when using </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> as a line break character, but, as was the case with the original one, lacks the ability to </span><b>detect the end of inline comments marked by </b><code>\r</code><b> or other Unicode line break characters</b><span style="font-weight: 400;">. </span></p>
<p><span style="font-weight: 400;">In order to understand the exact behavior of the new erroneous regular expression, we explain each of its components individually:</span></p>
<ol>
<li style="font-weight: 400;"><span style="font-weight: 400;">As before, the </span><span style="font-weight: 400;"><code>r</code></span><span style="font-weight: 400;"> before the double quotes is a Rust feature to identify a </span><span style="font-weight: 400;"><a href="https://doc.rust-lang.org/rust-by-example/std/str.html#literals-and-escapes">“raw string literal”</a></span><span style="font-weight: 400;">, used just as a convenient way to write the regex string as-is without having to escape special characters.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">The </span><span style="font-weight: 400;"><code>(?m)</code></span><span style="font-weight: 400;"> flag symbolizes the multi-line mode, which means that the </span><span style="font-weight: 400;"><code>^</code></span> <span style="font-weight: 400;">and</span> <span style="font-weight: 400;"><code>$</code></span> <span style="font-weight: 400;">no longer match just the beginning/end of the input, but the beginning/end of lines.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">As before,</span> <span style="font-weight: 400;"><code>//</code></span><span style="font-weight: 400;"> matches the start of the Move IR inline comment syntax.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;">As before,</span> <span style="font-weight: 400;"><code>.*</code></span><span style="font-weight: 400;"> matches zero or more characters</span> <span style="font-weight: 400;">except for the line break character </span><span style="font-weight: 400;">\n</span><span style="font-weight: 400;">.</span></li>
<li style="font-weight: 400;"><span style="font-weight: 400;"><code>$</code></span><span style="font-weight: 400;"> is a special character that matches the newline (</span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;">) character. Is it</span><span style="font-weight: 400;"><a href="https://docs.rs/regex/1.2.1/regex/#unicode"> explicitly explained in the documentation of the regex crate</a></span><span style="font-weight: 400;"> that this character does not match other Unicode line break characters, including the </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> line break.</span></li>
</ol>
<p><span style="font-weight: 400;">To summarize, this regular expression works exactly as the previous one in terms of not matching any other line break except from the </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> character, resulting in the same attack vectors  and exploitation explained on the original report, based on the </span><span style="font-weight: 400;"><a href="https://github.com/OpenZeppelin/move-compiler-vulnerability">same Move IR modules</a></span><span style="font-weight: 400;"> originally used to illustrate the vulnerability.</span></p>
<h2><b>The fix</b></h2>
<p><span style="font-weight: 400;">In commit </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/commit/7efb0221989f17fdf7f8486730898ed947a1e19e">7efb022</a></span><span style="font-weight: 400;"> the Libra team fixed the vulnerability by introducing a </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/blob/00da9f3c845b81b924d643eac3b678443f2ba0d4/language/compiler/ir_to_bytecode/src/parser.rs#L78"><code>strip_comments_and_verify</code></a></span><span style="font-weight: 400;"> function, which in turn calls the </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/blob/00da9f3c845b81b924d643eac3b678443f2ba0d4/language/compiler/ir_to_bytecode/src/parser.rs#L46"><code>verify_string</code></a></span><span style="font-weight: 400;"> function before actually stripping the comments. This function makes sure that all characters in the string are permitted characters through the </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/blob/00da9f3c845b81b924d643eac3b678443f2ba0d4/language/compiler/ir_to_bytecode/src/parser.rs#L22"><code>is_permitted_printable_char</code></a></span><span style="font-weight: 400;"> and </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/blob/00da9f3c845b81b924d643eac3b678443f2ba0d4/language/compiler/ir_to_bytecode/src/parser.rs#L33"><code>is_permitted_newline_char</code></a></span><span style="font-weight: 400;"> functions. These functions validate the characters by making sure they lie within a limited range of the whole character set. In particular, the </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/blob/00da9f3c845b81b924d643eac3b678443f2ba0d4/language/compiler/ir_to_bytecode/src/parser.rs#L35">only newline character explicitly allowed</a></span><span style="font-weight: 400;"> is </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> (</span><span style="font-weight: 400;"><code>0x0A</code></span><span style="font-weight: 400;">), and the </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> and other more esoteric newline characters are </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/blob/00da9f3c845b81b924d643eac3b678443f2ba0d4/language/compiler/ir_to_bytecode/src/parser.rs#L24">outside the range</a></span><span style="font-weight: 400;"> defined in the </span><span style="font-weight: 400;"><code>is_permitted_printable_char</code></span><span style="font-weight: 400;"> function.</span></p>
<p><span style="font-weight: 400;">We have validated this fix with all our new line character test cases. Apart from the </span><span style="font-weight: 400;"><code>\n</code></span><span style="font-weight: 400;"> case, which works as expected, all other test modules now give rise to a compile time parser error.</span></p>
<h2><b>Conclusion</b></h2>
<p><span style="font-weight: 400;">We demonstrated that </span><b>Move modules could disguise inline comments as executable code</b><span style="font-weight: 400;">, due to a vulnerability in the language&#8217;s parser. Malicious actors entitled to publish Move modules in the Libra network could deceive users who would interact with modules behaving differently than expected. We conclude that </span><b>no Move IR module file with inline comments could be trusted</b><span style="font-weight: 400;"> to behave as expected without a deeper analysis of the file’s real content or the actual bytecode produced after compilation as long as the vulnerability is not fixed.</span></p>
<p><span style="font-weight: 400;">Two scenarios were explored, the most critical one being how the source code of the Move IR parser can deceive developers and auditors into believing that a widely-used line break character is recognized as a valid inline comment ending, while it is actually not. To fix the vulnerability, we recommended that Move&#8217;s development team modified the regex in the </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/blob/8ea33298678117748f1c75112f35a9fbc05b2172/language/compiler/ir_to_bytecode/src/parser.rs#L22"><code>strip_comments function</code></a></span><span style="font-weight: 400;"> so as to correctly parse the </span><span style="font-weight: 400;"><code>\r</code></span><span style="font-weight: 400;"> character along with all other Unicode characters that represent a line break. To increase the software’s transparency, thorough and extensive unit testing considering Move modules with all different line breaks was also recommended.</span></p>
<p><span style="font-weight: 400;">After a code change unrelated to the issue, the vulnerability was fixed by the Libra team in commit </span><span style="font-weight: 400;"><a href="https://github.com/libra/libra/commit/7efb0221989f17fdf7f8486730898ed947a1e19e">7efb022</a></span><span style="font-weight: 400;">.</span></p>

								</div>
							</div></div><div class="post-after row-container"><div data-parent="true" class="vc_row row-container" id="row-101809"><div class="row no-top-padding single-bottom-padding one-h-padding full-width row-parent"><div class="wpb_row row-inner"><div class="wpb_column pos-top pos-center align_left column_parent col-lg-12 single-internal-gutter"><div class="uncol style-light"  ><div class="uncoltable"><div class="uncell no-block-padding"><div class="uncont"><div class="divider-wrapper "  >
    <hr class="border-color-uydo-color separator-no-padding"  style="width: 50%;" />
</div>
<div class="uncode_text_column footer-post" ><h3>Security Audits</h3>
<ul>
<li>If you are interested in smart contract security, you can continue the discussion in our <a href="http://forum.openzeppelin.com">forum</a>, or even better, <a href="http://openzeppelin.com/jobs">join the team</a> 🚀</li>
<li>If you are building a project of your own and would like to request a security audit, please do so <a href="http://openzeppelin.com/security-audits">here</a>.</li>
</ul>
</div></div></div></div></div></div><script id="script-row-101809" data-row="script-row-101809" type="text/javascript" class="vc_controls">UNCODE.initRow(document.getElementById("row-101809"));</script></div></div></div></div><div class="post-after row-container"><div data-parent="true" class="vc_row style-color-lxmt-bg row-container" id="row-146964"><div class="row limit-width row-parent"><div class="wpb_row row-inner"><div class="wpb_column pos-top pos-center align_left column_parent col-lg-12 single-internal-gutter"><div class="uncol style-light"  ><div class="uncoltable"><div class="uncell no-block-padding"><div class="uncont"><div class="vc_custom_heading_wrap "><div class="heading-text el-text" ><h5 class="h5 font-weight-200 text-uppercase" ><span><p style="text-align: center;">related posts</p></span></h5></div><div class="clear"></div></div><div id="index-5" class="isotope-system isotope-general-light">
									<div class="isotope-wrapper single-gutter style-color-lxmt-bg">
			<div class="isotope-container isotope-layout style-masonry isotope-pagination" data-type="masonry" data-layout="masonry" data-lg="1000" data-md="600" data-sm="480" data-vp-height="">
			<div class="tmb tmb-iso-w4 tmb-iso-h4 tmb-light tmb-content-left tmb-image-anim tmb-shadowed tmb-shadowed-xs  grid-cat-1444 tmb-id-82589 tmb-img-ratio tmb-content-under tmb-media-first">
						<div class="t-inside style-color-xsdn-bg" ><div class="t-entry-visual"><div class="t-entry-visual-tc"><div class="t-entry-visual-cont"><div class="dummy" style="padding-top: 50%;"></div><a tabindex="-1" href="https://blog.openzeppelin.com/compound-finance-audit-summary/" class="pushed" target="_self" data-lb-index="0"><div class="t-entry-visual-overlay"><div class="t-entry-visual-overlay-in style-dark-bg" style="opacity: 0.5;"></div></div>
									<div class="t-overlay-wrap">
										<div class="t-overlay-inner">
											<div class="t-overlay-content">
												<div class="t-overlay-text single-block-padding"><div class="t-entry t-single-line"></div></div></div></div></div><img class="adaptive-async wp-image-82910" src="https://blog.openzeppelin.com/wp-content/uploads/2019/09/cover_audits_compound-copy-uai-258x129.png" width="258" height="129" alt="" data-uniqueid="82910-414853" data-guid="https://blog.openzeppelin.com/wp-content/uploads/2019/09/cover_audits_compound-copy.png" data-path="2019/09/cover_audits_compound-copy.png" data-width="2400" data-height="1350" data-singlew="4" data-singleh="2" data-crop="1" data-fixed="" /></a></div>
				</div>
			</div><div class="t-entry-text">
							<div class="t-entry-text-tc single-block-padding"><div class="t-entry"><p class="t-entry-meta"><span class="t-entry-category t-entry-tax"><a class="bordered-cat tmb-term-evidence font-ui" href="https://blog.openzeppelin.com/category/security-audits/">Security audits</a></span></p><h3 class="t-entry-title h3"><a href="https://blog.openzeppelin.com/compound-finance-audit-summary/" target="_self">Compound Finance Audit Summary</a></h3><div class="t-entry-excerpt "><p>Compound Finance is a protocol, currently deployed on the Ethereum network, for automatic,…</p></div><p class="t-entry-readmore btn-container"><a href="https://blog.openzeppelin.com/compound-finance-audit-summary/" class="btn btn-link " target="_self">Read More</a></p></div></div>
					</div></div>
					</div><div class="tmb tmb-iso-w4 tmb-iso-h4 tmb-light tmb-content-left tmb-image-anim tmb-shadowed tmb-shadowed-xs  grid-cat-1444 tmb-id-79927 tmb-img-ratio tmb-content-under tmb-media-first">
						<div class="t-inside style-color-xsdn-bg" ><div class="t-entry-visual"><div class="t-entry-visual-tc"><div class="t-entry-visual-cont"><div class="dummy" style="padding-top: 50%;"></div><a tabindex="-1" href="https://blog.openzeppelin.com/solidity-compiler-audit-8cfc0316a420/" class="pushed" target="_self" data-lb-index="1"><div class="t-entry-visual-overlay"><div class="t-entry-visual-overlay-in style-dark-bg" style="opacity: 0.5;"></div></div>
									<div class="t-overlay-wrap">
										<div class="t-overlay-inner">
											<div class="t-overlay-content">
												<div class="t-overlay-text single-block-padding"><div class="t-entry t-single-line"></div></div></div></div></div><img class="adaptive-async wp-image-80189" src="https://blog.openzeppelin.com/wp-content/uploads/2019/05/Solidity-1-uai-258x129.png" width="258" height="129" alt="" data-uniqueid="80189-115834" data-guid="https://blog.openzeppelin.com/wp-content/uploads/2019/05/Solidity-1.png" data-path="2019/05/Solidity-1.png" data-width="2560" data-height="1350" data-singlew="4" data-singleh="2" data-crop="1" data-fixed="" /></a></div>
				</div>
			</div><div class="t-entry-text">
							<div class="t-entry-text-tc single-block-padding"><div class="t-entry"><p class="t-entry-meta"><span class="t-entry-category t-entry-tax"><a class="bordered-cat tmb-term-evidence font-ui" href="https://blog.openzeppelin.com/category/security-audits/">Security audits</a></span></p><h3 class="t-entry-title h3"><a href="https://blog.openzeppelin.com/solidity-compiler-audit-8cfc0316a420/" target="_self">Solidity Compiler Audit</a></h3><div class="t-entry-excerpt "><p>The Augur team and the Ethereum Foundation (through a joint grant) asked us to review and audit the…</p></div><p class="t-entry-readmore btn-container"><a href="https://blog.openzeppelin.com/solidity-compiler-audit-8cfc0316a420/" class="btn btn-link " target="_self">Read More</a></p></div></div>
					</div></div>
					</div><div class="tmb tmb-iso-w4 tmb-iso-h4 tmb-light tmb-content-left tmb-image-anim tmb-shadowed tmb-shadowed-xs  grid-cat-1444 tmb-id-80335 tmb-img-ratio tmb-content-under tmb-media-first">
						<div class="t-inside style-color-xsdn-bg" ><div class="t-entry-visual"><div class="t-entry-visual-tc"><div class="t-entry-visual-cont"><div class="dummy" style="padding-top: 50%;"></div><a tabindex="-1" href="https://blog.openzeppelin.com/makerdao-critical-vulnerability-notice-d581b30c9b39/" class="pushed" target="_self" data-lb-index="2"><div class="t-entry-visual-overlay"><div class="t-entry-visual-overlay-in style-dark-bg" style="opacity: 0.5;"></div></div>
									<div class="t-overlay-wrap">
										<div class="t-overlay-inner">
											<div class="t-overlay-content">
												<div class="t-overlay-text single-block-padding"><div class="t-entry t-single-line"></div></div></div></div></div><img class="adaptive-async wp-image-80194" src="https://blog.openzeppelin.com/wp-content/uploads/2019/05/maker-uai-258x129.png" width="258" height="129" alt="" data-uniqueid="80194-106413" data-guid="https://blog.openzeppelin.com/wp-content/uploads/2019/05/maker.png" data-path="2019/05/maker.png" data-width="2560" data-height="1350" data-singlew="4" data-singleh="2" data-crop="1" data-fixed="" /></a></div>
				</div>
			</div><div class="t-entry-text">
							<div class="t-entry-text-tc single-block-padding"><div class="t-entry"><p class="t-entry-meta"><span class="t-entry-category t-entry-tax"><a class="bordered-cat tmb-term-evidence font-ui" href="https://blog.openzeppelin.com/category/security-audits/">Security audits</a></span></p><h3 class="t-entry-title h3"><a href="https://blog.openzeppelin.com/makerdao-critical-vulnerability-notice-d581b30c9b39/" target="_self">MakerDAO Critical Vulnerability Notice</a></h3><div class="t-entry-excerpt "><p>While working on an audit for the Coinbase team, we found a critical vulnerability in one of the…</p></div><p class="t-entry-readmore btn-container"><a href="https://blog.openzeppelin.com/makerdao-critical-vulnerability-notice-d581b30c9b39/" class="btn btn-link " target="_self">Read More</a></p></div></div>
					</div></div>
					</div>		</div>

	</div>
	</div>
</div></div></div></div></div><script id="script-row-146964" data-row="script-row-146964" type="text/javascript" class="vc_controls">UNCODE.initRow(document.getElementById("row-146964"));</script></div></div></div></div></div>
          </div>
        </article>								</div><!-- sections container -->
							</div><!-- page wrapper -->
												<footer id="colophon" class="site-footer">
							<div class="row-container style-color-nhtu-bg footer-center footer-last">
		  					<div class="row row-parent style-dark limit-width no-top-padding no-h-padding no-bottom-padding">
									<div class="site-info uncell col-lg-6 pos-middle text-center"><div class="footer-full">
<div class="footer-left">
<div class="footer-logo"><a href="http://openzeppelin.com"><img src="https://blog.openzeppelin.com/wp-content/uploads/2019/05/logo_OZ_white.png" /></a><span class="oz_footer_sign"><br />
<!--[if lte IE 8]>
<script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2-legacy.js"></script>
<![endif]--><br />
<script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2.js"></script><br />
<script>
  hbspt.forms.create({
	region: "na1",
	portalId: "7795250",
	formId: "302e486e-d812-4b0c-b817-d1fe7cb47534"
});
</script></span></div>
<div class="footer-copy">© OpenZeppelin 2017-2021 | <a href="http://openzeppelin.com/privacy">Privacy </a> | <a href="http://openzeppelin.com/tos">Terms of Service</a></div>
</div>
<div class="footer-right">
<div class="footer-links">
<div class="fcolumn fcolumn1">
<h3>Products</h3>
<p><a href="http://openzeppelin.com/contracts">Contracts</a><br /><a href="https://openzeppelin.com/defender">Defender</a></div>
<div class="fcolumn fcolumn2">
<h3>Security</h3>
<p><a href="http://openzeppelin.com/security-audits">Security Audits</a></div>
<div class="fcolumn fcolumn3">
<h3>Learn</h3>
<p><a href="http://docs.openzeppelin.com">Docs</a><br /><a href="http://forum.openzeppelin.com">Forum</a><br /><a href="http://ethernaut.openzeppelin.com">Ethernaut</a></div>
<div class="fcolumn fcolumn4">
<h3>Company</h3>
<p><a href="http://openzeppelin.com">Website</a><br /><a href="http://openzeppelin.com/about">About</a><br /><a href="http://openzeppelin.com/jobs">Jobs</a><br /><a href="https://openzeppelin.com/images/OpenZeppelin_brand.zip">Logo Kit</a></div>
</div>
<div class="footer-icons"><a href="http://github.com/openzeppelin"><img src="https://blog.openzeppelin.com/wp-content/uploads/2019/11/github.svg" /></a><a href="http://twitter.com/openzeppelin"><img src="https://blog.openzeppelin.com/wp-content/uploads/2019/11/twitter.svg" /></a><a href="https://zpl.in/discord"><img src="https://blog.openzeppelin.com/wp-content/uploads/2021/02/discord.svg" /></a><a href="https://blog.openzeppelin.com/feed/"><img src="https://blog.openzeppelin.com/wp-content/uploads/2019/11/rss.svg" /></a></div>
</div>
<div class="footer-copy-mobile">©2021. All rights reserved | <a href="http://openzeppelin.com/privacy">Privacy </a> | <a href="http://openzeppelin.com/tos">Terms of Service</a></div>
</div>
</div><!-- site info -->
								</div>
							</div>						</footer>
																	</div><!-- main container -->
				</div><!-- main wrapper -->
							</div><!-- box container -->
		</div><!-- box wrapper -->
		
					<div class="overlay overlay-sequential style-dark style-dark-bg overlay-search" data-area="search" data-container="box-container">
				<div class="mmb-container"><div class="menu-close-search mobile-menu-button menu-button-offcanvas mobile-menu-button-dark lines-button x2 overlay-close close" data-area="search" data-container="box-container"><span class="lines"></span></div></div>
				<div class="search-container"><form action="https://blog.openzeppelin.com/" method="get">
	<div class="search-container-inner">
		<input type="search" class="search-field form-fluid no-livesearch" placeholder="Search…" value="" name="s" title="Search for:">
		<i class="fa fa-search3"></i>

			</div>
</form>
</div>
			</div>
		
	
		<script type="text/javascript">
			window.RS_MODULES = window.RS_MODULES || {};
			window.RS_MODULES.modules = window.RS_MODULES.modules || {};
			window.RS_MODULES.waiting = window.RS_MODULES.waiting || [];
			window.RS_MODULES.defered = true;
			window.RS_MODULES.moduleWaiting = window.RS_MODULES.moduleWaiting || {};
			window.RS_MODULES.type = 'compiled';
		</script>
		<!--  -->
<script defer id='bilmur' data-provider='wordpress.com' data-service='atomic' src='https://s0.wp.com/wp-content/js/bilmur.min.js?m=202143'></script>
<script type="text/javascript">function customscroll() {
    window.scroll({
        top: 500, 
        left: 0, 
        behavior: 'smooth',
    });
}</script><script type="text/html" id="wpb-modifications"></script><!-- This site is converting visitors into subscribers and customers with OptinMonster - https://optinmonster.com :: Campaign Title: Forta Popup: A/B: 2 --><script>(function(d){var s=d.createElement('script');s.type='text/javascript';s.src='https://a.omappapi.com/app/js/api.min.js';s.async=true;s.dataset.campaign='uuq5ap35aejtqqcckaba';s.dataset.user='131584';d.getElementsByTagName('head')[0].appendChild(s);})(document);</script><!-- / OptinMonster -->		<div id="jp-carousel-loading-overlay">
			<div id="jp-carousel-loading-wrapper">
				<span id="jp-carousel-library-loading">&nbsp;</span>
			</div>
		</div>
		<div class="jp-carousel-overlay" style="display: none;">

		<div class="jp-carousel-container">
			<!-- The Carousel Swiper -->
			<div
				class="jp-carousel-wrap swiper-container jp-carousel-swiper-container jp-carousel-transitions"
				itemscope
				itemtype="https://schema.org/ImageGallery">
				<div class="jp-carousel swiper-wrapper"></div>
				<div class="jp-swiper-button-prev swiper-button-prev">
					<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<mask id="maskPrev" mask-type="alpha" maskUnits="userSpaceOnUse" x="8" y="6" width="9" height="12">
							<path d="M16.2072 16.59L11.6496 12L16.2072 7.41L14.8041 6L8.8335 12L14.8041 18L16.2072 16.59Z" fill="white"/>
						</mask>
						<g mask="url(#maskPrev)">
							<rect x="0.579102" width="23.8823" height="24" fill="#FFFFFF"/>
						</g>
					</svg>
				</div>
				<div class="jp-swiper-button-next swiper-button-next">
					<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<mask id="maskNext" mask-type="alpha" maskUnits="userSpaceOnUse" x="8" y="6" width="8" height="12">
							<path d="M8.59814 16.59L13.1557 12L8.59814 7.41L10.0012 6L15.9718 12L10.0012 18L8.59814 16.59Z" fill="white"/>
						</mask>
						<g mask="url(#maskNext)">
							<rect x="0.34375" width="23.8822" height="24" fill="#FFFFFF"/>
						</g>
					</svg>
				</div>
			</div>
			<!-- The main close buton -->
			<div class="jp-carousel-close-hint">
				<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<mask id="maskClose" mask-type="alpha" maskUnits="userSpaceOnUse" x="5" y="5" width="15" height="14">
						<path d="M19.3166 6.41L17.9135 5L12.3509 10.59L6.78834 5L5.38525 6.41L10.9478 12L5.38525 17.59L6.78834 19L12.3509 13.41L17.9135 19L19.3166 17.59L13.754 12L19.3166 6.41Z" fill="white"/>
					</mask>
					<g mask="url(#maskClose)">
						<rect x="0.409668" width="23.8823" height="24" fill="#FFFFFF"/>
					</g>
				</svg>
			</div>
			<!-- Image info, comments and meta -->
			<div class="jp-carousel-info">
				<div class="jp-carousel-info-footer">
					<div class="jp-carousel-pagination-container">
						<div class="jp-swiper-pagination swiper-pagination"></div>
						<div class="jp-carousel-pagination"></div>
					</div>
					<div class="jp-carousel-photo-title-container">
						<h2 class="jp-carousel-photo-caption"></h2>
					</div>
					<div class="jp-carousel-photo-icons-container">
						<a href="#" class="jp-carousel-icon-btn jp-carousel-icon-info" aria-label="Toggle photo metadata visibility">
							<span class="jp-carousel-icon">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="maskInfo" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="2" width="21" height="20">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M12.7537 2C7.26076 2 2.80273 6.48 2.80273 12C2.80273 17.52 7.26076 22 12.7537 22C18.2466 22 22.7046 17.52 22.7046 12C22.7046 6.48 18.2466 2 12.7537 2ZM11.7586 7V9H13.7488V7H11.7586ZM11.7586 11V17H13.7488V11H11.7586ZM4.79292 12C4.79292 16.41 8.36531 20 12.7537 20C17.142 20 20.7144 16.41 20.7144 12C20.7144 7.59 17.142 4 12.7537 4C8.36531 4 4.79292 7.59 4.79292 12Z" fill="white"/>
									</mask>
									<g mask="url(#maskInfo)">
										<rect x="0.8125" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>
							</span>
						</a>
												<a href="#" class="jp-carousel-icon-btn jp-carousel-icon-comments" aria-label="Toggle photo comments visibility">
							<span class="jp-carousel-icon">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="maskComments" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="2" width="21" height="20">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M4.3271 2H20.2486C21.3432 2 22.2388 2.9 22.2388 4V16C22.2388 17.1 21.3432 18 20.2486 18H6.31729L2.33691 22V4C2.33691 2.9 3.2325 2 4.3271 2ZM6.31729 16H20.2486V4H4.3271V18L6.31729 16Z" fill="white"/>
									</mask>
									<g mask="url(#maskComments)">
										<rect x="0.34668" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>

								<span class="jp-carousel-has-comments-indicator" aria-label="This image has comments."></span>
							</span>
						</a>
											</div>
				</div>
				<div class="jp-carousel-info-extra">
					<div class="jp-carousel-info-content-wrapper">
						<div class="jp-carousel-photo-title-container">
							<h2 class="jp-carousel-photo-title"></h2>
						</div>
						<div class="jp-carousel-comments-wrapper">
															<div id="jp-carousel-comments-loading">
									<span>Loading Comments...</span>
								</div>
								<div class="jp-carousel-comments"></div>
								<div id="jp-carousel-comment-form-container">
									<span id="jp-carousel-comment-form-spinner">&nbsp;</span>
									<div id="jp-carousel-comment-post-results"></div>
																														<form id="jp-carousel-comment-form">
												<label for="jp-carousel-comment-form-comment-field" class="screen-reader-text">Write a Comment...</label>
												<textarea
													name="comment"
													class="jp-carousel-comment-form-field jp-carousel-comment-form-textarea"
													id="jp-carousel-comment-form-comment-field"
													placeholder="Write a Comment..."
												></textarea>
												<div id="jp-carousel-comment-form-submit-and-info-wrapper">
													<div id="jp-carousel-comment-form-commenting-as">
																													<fieldset>
																<label for="jp-carousel-comment-form-email-field">Email (Required)</label>
																<input type="text" name="email" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-email-field" />
															</fieldset>
															<fieldset>
																<label for="jp-carousel-comment-form-author-field">Name (Required)</label>
																<input type="text" name="author" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-author-field" />
															</fieldset>
															<fieldset>
																<label for="jp-carousel-comment-form-url-field">Website</label>
																<input type="text" name="url" class="jp-carousel-comment-form-field jp-carousel-comment-form-text-field" id="jp-carousel-comment-form-url-field" />
															</fieldset>
																											</div>
													<input
														type="submit"
														name="submit"
														class="jp-carousel-comment-form-button"
														id="jp-carousel-comment-form-button-submit"
														value="Post Comment" />
												</div>
											</form>
																											</div>
													</div>
						<div class="jp-carousel-image-meta">
							<div class="jp-carousel-title-and-caption">
								<div class="jp-carousel-photo-info">
									<h3 class="jp-carousel-caption" itemprop="caption description"></h3>
								</div>

								<div class="jp-carousel-photo-description"></div>
							</div>
							<ul class="jp-carousel-image-exif" style="display: none;"></ul>
							<a class="jp-carousel-image-download" target="_blank" style="display: none;">
								<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg">
									<mask id="mask0" mask-type="alpha" maskUnits="userSpaceOnUse" x="3" y="3" width="19" height="18">
										<path fill-rule="evenodd" clip-rule="evenodd" d="M5.84615 5V19H19.7775V12H21.7677V19C21.7677 20.1 20.8721 21 19.7775 21H5.84615C4.74159 21 3.85596 20.1 3.85596 19V5C3.85596 3.9 4.74159 3 5.84615 3H12.8118V5H5.84615ZM14.802 5V3H21.7677V10H19.7775V6.41L9.99569 16.24L8.59261 14.83L18.3744 5H14.802Z" fill="white"/>
									</mask>
									<g mask="url(#mask0)">
										<rect x="0.870605" width="23.8823" height="24" fill="#FFFFFF"/>
									</g>
								</svg>
								<span class="jp-carousel-download-text"></span>
							</a>
							<div class="jp-carousel-image-map" style="display: none;"></div>
						</div>
					</div>
				</div>
			</div>
		</div>

		</div>
				<script type="text/javascript">
		var uuq5ap35aejtqqcckaba_shortcode = true;		</script>
		<link rel='stylesheet' id='rs-plugin-settings-css'  href='https://blog.openzeppelin.com/wp-content/plugins/revslider/public/assets/css/rs6.css?ver=6.5.6' type='text/css' media='all' />
<style id='rs-plugin-settings-inline-css' type='text/css'>
#rs-demo-id {}
</style>
<script type='text/javascript' src='https://c0.wp.com/c/5.8.1/wp-includes/js/underscore.min.js' id='underscore-js'></script>
<script type='text/javascript' id='daves-wordpress-live-search-js-extra'>
/* <![CDATA[ */
var DavesWordPressLiveSearchConfig = {"resultsDirection":"down","showThumbs":"false","showExcerpt":"false","displayPostCategory":"false","showMoreResultsLink":"true","activateWidgetLink":"true","minCharsToSearch":"2","xOffset":"0","yOffset":"0","blogURL":"https:\/\/blog.openzeppelin.com","ajaxURL":"https:\/\/blog.openzeppelin.com\/wp-admin\/admin-ajax.php","viewMoreText":"View more results","outdatedJQuery":"Dave's WordPress Live Search requires jQuery 1.2.6 or higher. WordPress ships with current jQuery versions. But if you are seeing this message, it's likely that another plugin is including an earlier version.","resultTemplate":"<ul id=\"dwls_search_results\" class=\"search_results dwls_search_results\">\n<input type=\"hidden\" name=\"query\" value=\"<%- resultsSearchTerm %>\" \/>\n<% _.each(searchResults, function(searchResult, index, list) { %>\n        <%\n        \/\/ Thumbnails\n        if(DavesWordPressLiveSearchConfig.showThumbs == \"true\" && searchResult.attachment_thumbnail) {\n                liClass = \"post_with_thumb\";\n        }\n        else {\n                liClass = \"\";\n        }\n        %>\n        <li class=\"post-<%= searchResult.ID %> daves-wordpress-live-search_result <%- liClass %>\">\n\n        <a href=\"<%= searchResult.permalink %>\" class=\"daves-wordpress-live-search_title\">\n        <% if(DavesWordPressLiveSearchConfig.displayPostCategory == \"true\" && searchResult.post_category !== undefined) { %>\n                <span class=\"search-category\"><%= searchResult.post_category %><\/span>\n        <% } %><span class=\"search-title\"><%= searchResult.post_title %><\/span><\/a>\n\n        <% if(searchResult.post_price !== undefined) { %>\n                <p class=\"price\"><%- searchResult.post_price %><\/p>\n        <% } %>\n\n        <% if(DavesWordPressLiveSearchConfig.showExcerpt == \"true\" && searchResult.post_excerpt) { %>\n                <%= searchResult.post_excerpt %>\n        <% } %>\n\n        <% if(e.displayPostMeta) { %>\n                <p class=\"meta clearfix daves-wordpress-live-search_author\" id=\"daves-wordpress-live-search_author\">Posted by <%- searchResult.post_author_nicename %><\/p><p id=\"daves-wordpress-live-search_date\" class=\"meta clearfix daves-wordpress-live-search_date\"><%- searchResult.post_date %><\/p>\n        <% } %>\n        <div class=\"clearfix\"><\/div><\/li>\n<% }); %>\n\n<% if(searchResults[0].show_more !== undefined && searchResults[0].show_more && DavesWordPressLiveSearchConfig.showMoreResultsLink == \"true\") { %>\n        <div class=\"clearfix search_footer\"><a href=\"<%= DavesWordPressLiveSearchConfig.blogURL %>\/?s=<%-  resultsSearchTerm %>\"><%- DavesWordPressLiveSearchConfig.viewMoreText %><\/a><\/div>\n<% } %>\n\n<\/ul>"};
/* ]]> */
</script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/uncode-daves-wordpress-live-search/js/daves-wordpress-live-search.js?ver=5.8.1' id='daves-wordpress-live-search-js'></script>
<script type='text/javascript' src='https://c0.wp.com/c/5.8.1/wp-includes/js/jquery/ui/core.min.js' id='jquery-ui-core-js'></script>
<script type='text/javascript' src='https://c0.wp.com/c/5.8.1/wp-includes/js/jquery/ui/datepicker.min.js' id='jquery-ui-datepicker-js'></script>
<script type='text/javascript' id='jquery-ui-datepicker-js-after'>
jQuery(document).ready(function(jQuery){jQuery.datepicker.setDefaults({"closeText":"Close","currentText":"Today","monthNames":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthNamesShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"nextText":"Next","prevText":"Previous","dayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"dayNamesShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"dayNamesMin":["S","M","T","W","T","F","S"],"dateFormat":"MM d, yy","firstDay":1,"isRTL":false});});
</script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/js/jquery.typewatch.js?ver=6.1.0' id='mec-typekit-script-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/packages/featherlight/featherlight.js?ver=6.1.0' id='featherlight-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/packages/select2/select2.full.min.js?ver=6.1.0' id='mec-select2-script-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/packages/tooltip/tooltip.js?ver=6.1.0' id='mec-tooltip-script-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/packages/lity/lity.min.js?ver=6.1.0' id='mec-lity-script-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/packages/colorbrightness/colorbrightness.min.js?ver=6.1.0' id='mec-colorbrightness-script-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/modern-events-calendar-lite/assets/packages/owl-carousel/owl.carousel.min.js?ver=6.1.0' id='mec-owl-carousel-script-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/jetpack/_inc/build/photon/photon.min.js?ver=20191001' id='jetpack-photon-js'></script>
<script type='text/javascript' id='leadin-script-loader-js-js-extra'>
/* <![CDATA[ */
var leadin_wordpress = {"userRole":"visitor","pageType":"post","leadinPluginVersion":"8.4.329"};
/* ]]> */
</script>
<script type='text/javascript' src='https://js.hs-scripts.com/7795250.js?integration=WordPress' async defer id='hs-script-loader'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/revslider/public/assets/js/rbtools.min.js?ver=6.5.6' defer async id='tp-tools-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/revslider/public/assets/js/rs6.min.js?ver=6.5.6' defer async id='revmin-js'></script>
<script type='text/javascript' id='mediaelement-core-js-before'>
var mejsL10n = {"language":"en","strings":{"mejs.download-file":"Download File","mejs.install-flash":"You are using a browser that does not have Flash player enabled or installed. Please turn on your Flash player plugin or download the latest version from https:\/\/get.adobe.com\/flashplayer\/","mejs.fullscreen":"Fullscreen","mejs.play":"Play","mejs.pause":"Pause","mejs.time-slider":"Time Slider","mejs.time-help-text":"Use Left\/Right Arrow keys to advance one second, Up\/Down arrows to advance ten seconds.","mejs.live-broadcast":"Live Broadcast","mejs.volume-help-text":"Use Up\/Down Arrow keys to increase or decrease volume.","mejs.unmute":"Unmute","mejs.mute":"Mute","mejs.volume-slider":"Volume Slider","mejs.video-player":"Video Player","mejs.audio-player":"Audio Player","mejs.captions-subtitles":"Captions\/Subtitles","mejs.captions-chapters":"Chapters","mejs.none":"None","mejs.afrikaans":"Afrikaans","mejs.albanian":"Albanian","mejs.arabic":"Arabic","mejs.belarusian":"Belarusian","mejs.bulgarian":"Bulgarian","mejs.catalan":"Catalan","mejs.chinese":"Chinese","mejs.chinese-simplified":"Chinese (Simplified)","mejs.chinese-traditional":"Chinese (Traditional)","mejs.croatian":"Croatian","mejs.czech":"Czech","mejs.danish":"Danish","mejs.dutch":"Dutch","mejs.english":"English","mejs.estonian":"Estonian","mejs.filipino":"Filipino","mejs.finnish":"Finnish","mejs.french":"French","mejs.galician":"Galician","mejs.german":"German","mejs.greek":"Greek","mejs.haitian-creole":"Haitian Creole","mejs.hebrew":"Hebrew","mejs.hindi":"Hindi","mejs.hungarian":"Hungarian","mejs.icelandic":"Icelandic","mejs.indonesian":"Indonesian","mejs.irish":"Irish","mejs.italian":"Italian","mejs.japanese":"Japanese","mejs.korean":"Korean","mejs.latvian":"Latvian","mejs.lithuanian":"Lithuanian","mejs.macedonian":"Macedonian","mejs.malay":"Malay","mejs.maltese":"Maltese","mejs.norwegian":"Norwegian","mejs.persian":"Persian","mejs.polish":"Polish","mejs.portuguese":"Portuguese","mejs.romanian":"Romanian","mejs.russian":"Russian","mejs.serbian":"Serbian","mejs.slovak":"Slovak","mejs.slovenian":"Slovenian","mejs.spanish":"Spanish","mejs.swahili":"Swahili","mejs.swedish":"Swedish","mejs.tagalog":"Tagalog","mejs.thai":"Thai","mejs.turkish":"Turkish","mejs.ukrainian":"Ukrainian","mejs.vietnamese":"Vietnamese","mejs.welsh":"Welsh","mejs.yiddish":"Yiddish"}};
</script>
<script type='text/javascript' src='https://c0.wp.com/c/5.8.1/wp-includes/js/mediaelement/mediaelement-and-player.min.js' id='mediaelement-core-js'></script>
<script type='text/javascript' src='https://c0.wp.com/c/5.8.1/wp-includes/js/mediaelement/mediaelement-migrate.min.js' id='mediaelement-migrate-js'></script>
<script type='text/javascript' id='mediaelement-js-extra'>
/* <![CDATA[ */
var _wpmejsSettings = {"pluginPath":"\/wp-includes\/js\/mediaelement\/","classPrefix":"mejs-","stretching":"responsive"};
/* ]]> */
</script>
<script type='text/javascript' src='https://c0.wp.com/c/5.8.1/wp-includes/js/mediaelement/wp-mediaelement.min.js' id='wp-mediaelement-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/themes/uncode/library/js/plugins.js?ver=1595529927' id='uncode-plugins-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/themes/uncode/library/js/app.js?ver=1595529927' id='uncode-app-js'></script>
<script>(function(d){var s=d.createElement("script");s.type="text/javascript";s.src="https://a.omappapi.com/app/js/api.min.js";s.async=true;s.id="omapi-script";d.getElementsByTagName("head")[0].appendChild(s);})(document);</script><script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/jetpack/_inc/build/postmessage.min.js?ver=10.3-beta' id='postmessage-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/jetpack/_inc/build/jquery.jetpack-resize.min.js?ver=10.3-beta' id='jetpack_resize-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/jetpack/_inc/build/likes/queuehandler.min.js?ver=10.3-beta' id='jetpack_likes_queuehandler-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/enlighter/cache/enlighterjs.min.js?ver=88YGwSeMxKpTIVg' id='enlighterjs-js'></script>
<script type='text/javascript' id='enlighterjs-js-after'>
!function(e,n){if("undefined"!=typeof EnlighterJS){var o={"selectors":{"block":"pre.EnlighterJSRAW","inline":"code.EnlighterJSRAW"},"options":{"indent":4,"ampersandCleanup":true,"linehover":true,"rawcodeDbclick":false,"textOverflow":"scroll","linenumbers":false,"theme":"atomic","language":"generic","retainCssClasses":false,"collapse":false,"toolbarOuter":"","toolbarTop":"{BTN_RAW}{BTN_COPY}{BTN_WINDOW}{BTN_WEBSITE}","toolbarBottom":""}};(e.EnlighterJSINIT=function(){EnlighterJS.init(o.selectors.block,o.selectors.inline,o.options)})()}else{(n&&(n.error||n.log)||function(){})("Error: EnlighterJS resources not loaded yet!")}}(window,console);
</script>
<script type='text/javascript' src='https://c0.wp.com/c/5.8.1/wp-includes/js/wp-embed.min.js' id='wp-embed-js'></script>
<script type='text/javascript' id='jetpack-carousel-js-extra'>
/* <![CDATA[ */
var jetpackSwiperLibraryPath = {"url":"https:\/\/blog.openzeppelin.com\/wp-content\/plugins\/jetpack\/_inc\/build\/carousel\/swiper-bundle.min.js"};
var jetpackCarouselStrings = {"widths":[370,700,1000,1200,1400,2000],"is_logged_in":"","lang":"en","ajaxurl":"https:\/\/blog.openzeppelin.com\/wp-admin\/admin-ajax.php","nonce":"6bbc7b8a34","display_exif":"1","display_comments":"1","display_geo":"1","single_image_gallery":"1","single_image_gallery_media_file":"","background_color":"black","comment":"Comment","post_comment":"Post Comment","write_comment":"Write a Comment...","loading_comments":"Loading Comments...","download_original":"View full size <span class=\"photo-size\">{0}<span class=\"photo-size-times\">\u00d7<\/span>{1}<\/span>","no_comment_text":"Please be sure to submit some text with your comment.","no_comment_email":"Please provide an email address to comment.","no_comment_author":"Please provide your name to comment.","comment_post_error":"Sorry, but there was an error posting your comment. Please try again later.","comment_approved":"Your comment was approved.","comment_unapproved":"Your comment is in moderation.","camera":"Camera","aperture":"Aperture","shutter_speed":"Shutter Speed","focal_length":"Focal Length","copyright":"Copyright","comment_registration":"0","require_name_email":"1","login_url":"https:\/\/blog.openzeppelin.com\/wp-login.php?redirect_to=https%3A%2F%2Fblog.openzeppelin.com%2Flibra-vulnerability-summary%2F","blog_id":"1","meta_data":["camera","aperture","shutter_speed","focal_length","copyright"]};
/* ]]> */
</script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/jetpack/_inc/build/carousel/jetpack-carousel.min.js?ver=10.3-beta' id='jetpack-carousel-js'></script>
<script type='text/javascript' src='https://blog.openzeppelin.com/wp-content/plugins/optinmonster/assets/js/helper.js?ver=2.6.6' id='optinmonster-wp-helper-js'></script>
<script src='https://stats.wp.com/e-202143.js' defer></script>
<script>
	_stq = window._stq || [];
	_stq.push([ 'view', {v:'ext',j:'1:10.3-beta',blog:'162247579',post:'83146',tz:'-3',srv:'blog.openzeppelin.com'} ]);
	_stq.push([ 'clickTrackerInit', '162247579', '83146' ]);
</script>
		<script type="text/javascript">var omapi_localized = { ajax: 'https://blog.openzeppelin.com/wp-admin/admin-ajax.php?optin-monster-ajax-route=1', nonce: 'f8dd8d3342', slugs: {"uuq5ap35aejtqqcckaba":{"slug":"uuq5ap35aejtqqcckaba","mailpoet":false}} };</script>
				<script type="text/javascript">var omapi_data = {"wc_cart":[],"object_id":83146,"object_key":"post","object_type":"post","term_ids":[1444]};</script>
		</body>
</html>
