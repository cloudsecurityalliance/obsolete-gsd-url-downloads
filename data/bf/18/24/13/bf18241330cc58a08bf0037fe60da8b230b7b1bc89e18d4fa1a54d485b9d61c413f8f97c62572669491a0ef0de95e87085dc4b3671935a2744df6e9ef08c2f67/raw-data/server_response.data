<!DOCTYPE html>
<html lang="en"><head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="shortcut icon" type="image/png" href="/favicon.png">
<title>Privilege Escalation in Automate Agent 2020.7 and Below | dbeta.com</title>
<meta name="generator" content="Jekyll v4.2.0" />
<meta property="og:title" content="Privilege Escalation in Automate Agent 2020.7 and Below" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="A Quick Summary" />
<meta property="og:description" content="A Quick Summary" />
<link rel="canonical" href="https://dbeta.com/2020/10/07/PrivilegeEscalationInAutomateAgent" />
<meta property="og:url" content="http://dbeta.com/2020/10/07/PrivilegeEscalationInAutomateAgent" />
<meta property="og:site_name" content="dbeta.com" />
<meta property="og:type" content="article" />
<meta property="article:published_time" content="2020-10-07T11:40:00-05:00" />
<meta name="twitter:card" content="summary" />
<meta property="twitter:title" content="Privilege Escalation in Automate Agent 2020.7 and Below" />
<script type="application/ld+json">
{"headline":"Privilege Escalation in Automate Agent 2020.7 and Below","dateModified":"2020-10-07T11:40:00-05:00","@type":"BlogPosting","description":"A Quick Summary","mainEntityOfPage":{"@type":"WebPage","@id":"http://dbeta.com/2020/10/07/PrivilegeEscalationInAutomateAgent"},"datePublished":"2020-10-07T11:40:00-05:00","url":"http://dbeta.com/2020/10/07/PrivilegeEscalationInAutomateAgent","@context":"https://schema.org"}</script>

<link rel="stylesheet" href="/assets/main.css">
<link rel="stylesheet" href="/assets/dbeta.css"><link type="application/atom+xml" rel="alternate" href="https://dbeta.com/feed.xml" title="dbeta.com" /></head>
<body><header class="site-header" role="banner">
<div class="wrapper"><a class="site-title" rel="author" href="/"><img src="/textlogo.png"></a><nav class="site-nav">
<input type="checkbox" id="nav-trigger" class="nav-trigger" />
<label for="nav-trigger">
<span class="menu-icon">
<svg viewBox="0 0 18 15" width="18px" height="15px">
<path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
</svg>
</span>
</label>
<div class="trigger">
<div class="dropdown">
<span class="page-link">Pages</span>
<div class="dropdown-content">
<div class="dropdown-item"><a class="page-link" href="/category/automate/">Automate</a></div>
<div class="dropdown-item"><a class="page-link" href="/automateglossary/">ConnectWise Automate Glossary</a></div>
<div class="dropdown-item"><a class="page-link" href="/category/powershell/">PowerShell</a></div></div>
</div>
<div class="dropdown">
<span class="page-link">Games</span>
<div class="dropdown-content">
<div class="dropdown-item"><a class="page-link" href="/games/finalwavetd/">Final Wave TD</a></div>
<div class="dropdown-item"><a class="page-link" href="/games/jetpackjoust/">Jetpack Joust</a></div>
<div class="dropdown-item"><a class="page-link" href="/games/onaroll/">On a Roll</a></div>
<div class="dropdown-item"><a class="page-link" href="/games/ludumdare48/">LudumDare48</a></div>
<div class="dropdown-item"><a class="page-link" href="/games/airportrush/">Airport Rush</a></div>
<div class="dropdown-item"><a class="page-link" href="/games/mainmenutemplate/">Main Menu Template</a></div></div>
</div>
</div>
</nav></div>
</header>
<main class="page-content" aria-label="Content">
<div class="wrapper">
<article class="post h-entry" itemscope itemtype="http://schema.org/BlogPosting">
<header class="post-header">
<h1 class="post-title p-name" itemprop="name headline">Privilege Escalation in Automate Agent 2020.7 and Below</h1>
<p class="post-meta">
<time class="dt-published" datetime="2020-10-07T11:40:00-05:00" itemprop="datePublished">Oct 7, 2020
</time></p>
</header>
<div class="post-content e-content" itemprop="articleBody">
<h1 id="a-quick-summary">A Quick Summary</h1>
<p>Before I get into great technical detail, here’s the security bug in a nutshell. In Automate versions 2020.7 and below, the Automate agent uses the C:\Windows\Temp\_LTUPDATE\ folder for processing updates without verifying signatures or changing permissions. A simple attack is to take that folder, which is read/write by everyone on a system, even standard users, is to change the permissions on the folder to be read only to system, and replace LabtechUpdate.exe with a malicious executable and the agent will run it after failing to download the proper LabtechUpdate.exe. This will run the executable as system.</p>
<h1 id="how-it-was-discovered">How it was discovered</h1>
<p>Shortly after installing Automate 2020.7 on my Automate server, I had an agent that failed to update. I did a whole lot of digging into this agent’s problem. In the end, this problem was unrelated to the found vulnerability, but it led me to digging into the update system.</p>
<h1 id="the-problem">The Problem</h1>
<p>Pre-2020.8 Automate downloaded it’s updates to the C:\Windows\Temp\_LTUPDATE\ folder. It downloads one executable that self-unpacks several DLLs and EXEs, not to mention some CONFIG files.</p>
<p><img src="/assets/images/20201007_Automate_Temp_Folder.png" alt="Automate Update Temp Folder" /></p>
<p>Once unpacked, the update executable then runs Update.exe. All together a pretty simple and effective update system. The Agent is already always on, so it just takes the update request from the servers to kick off the process.</p>
<p>The folders permissions are all inherited from C:\Windows\Temp, which means “Everyone” gets full control over the folder. Which allows an attacker signed in, no matter what their permission levels are, to execute the attack.</p>
<p><img src="/assets/images/20201007_Automate_Permissions.png" alt="Automate Update Temp Folder" /></p>
<p>Automate is a trusted platform that most AV’s know to mostly ignore. It is, by nature, a high powered, high trust system. So anything it does is less likely to get caught by antivirus software.</p>
<h1 id="how-to-exploit">How to Exploit</h1>
<p>Exploiting is absolutely trivial. Simply change the permissions on the temp folder to remove System’s rights to modify. The update will attempt to download, but fail. CWA will then run whatever executable is in the folder as long as it is named “LabtechUpdate.exe”</p>
<p><img src="/assets/images/20201007_Automate_Permissions_Modified.png" alt="Automate Update Temp Folder" /></p>
<p>After changing the permissions, replace “LabtechUpdate.exe” with a malicious program and wait until the next Automate Agent update. Your executable will lie in wait until Automate decides it’s time to update, then it will pounce. A sufficiently advanced attacker could possibly even trick the system into believing it did a proper update, so no update failure will register in the Automate logs.</p>
<h1 id="the-solutions">The Solution(s)</h1>
<p>There are two primary, straight forward, solutions.</p>
<ol>
<li>Move the update process to a directory that does not give permissions to non admin users by default or modify the permissions of the _LTUPDATE folder to prevent non-admins from making changes to it.</li>
<li>Verify the hashes of every update file in the process, including the DLLs and CONFIG file. Signature checking would also be smart for the EXEs and DLLs.</li>
</ol>
<p>I recommended both solutions to this problem.</p>
<h1 id="connectwises-solution">Connectwise’s Solution</h1>
<p>After my report, Connectwise had the problem solved by the next major release, 2020.8. Which was good turn around. They did not, however, inform me that the problem was fixed. I discovered it myself when upgrading to 2020.9. As far as I can tell(and without feedback from CW it is hard to know for sure), the only mitigation put in place was that the update process went from being stored in C:\Windows\Temp\_LTUPDATE\ to C:\Windows\LTSVC\_LTUPDATE\. This does effectively solve the problem.</p>
<p>What I don’t know is if they added any additional hash or signature checks to the process in case permissions are ever broke for that folder. Or even a permissions check on that folder.</p>
<h1 id="additional-details">Additional Details</h1>
<p>I filed for and was issued the CVE of <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15838">CVE-2020-15838</a>.</p>
<p>More details of the class of attack can be found here <a href="https://attack.mitre.org/techniques/T1574/">Hijack Execution Flow</a>/<a href="https://attack.mitre.org/techniques/T1574/005/">Executable Installer File Permissions Weakness</a></p>
<p>The solution Connectwise chose to solve the problem was <a href="https://attack.mitre.org/mitigations/M1022/">Restrict File and Directory Permissions</a></p>
</div><a class="u-url" href="/2020/10/07/PrivilegeEscalationInAutomateAgent" hidden></a>
</article>
</div>
</main><footer class="site-footer h-card">
<data class="u-url" href="/"></data>
<div class="wrapper">
<h2 class="footer-heading">dbeta.com</h2>
<div class="footer-col-wrapper">
<div class="footer-col footer-col-1">
<ul class="contact-list">
<li class="p-name">dbeta.com</li></ul>
</div>
<div class="footer-col footer-col-2"><ul class="social-media-list"><li><a href="https://github.com/dbeta"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#github"></use></svg> <span class="username">dbeta</span></a></li><li><a href="https://www.twitter.com/dbeta"><svg class="svg-icon"><use xlink:href="/assets/minima-social-icons.svg#twitter"></use></svg> <span class="username">dbeta</span></a></li></ul>
</div>
<div class="footer-col footer-col-3">
<p>A blog about IT stuff.</p>
</div>
</div>
</div>
</footer>
</body>
</html>
