<!DOCTYPE html>
<html lang="en">
  <head>
    <title>126384 &ndash; (CVE-2018-11713) [SOUP] WebSockets must use system proxy settings</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<link href="data/assets/52436921e68ed468d372628fc792a752.css?1591398800" rel="stylesheet" type="text/css">

<link href="data/assets/3173de5410adb6e3827752fbd2bfd7b4.css?1591398794" rel="stylesheet" type="text/css">

    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1591398800"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "126384 – (CVE-2018-11713) [SOUP] WebSockets must use system proxy settings",
                             "show_bug.cgi?id=126384" );
        document.title = "126384 – (CVE-2018-11713) [SOUP] WebSockets must use system proxy settings";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "126384 – (CVE-2018-11713) [SOUP] WebSockets must use system proxy settings", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1591398800"></script>


    


    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-webkit-org
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_WebKit
                 bz_component_WebKitGTK
                 bz_bug_126384 yui-skin-sam">


  <div id="header">

    


    <div id="titles">

      <span id="title"> WebKit Bugzilla</span>



    </div>



        <div id="bug_title">Bug&nbsp;126384: [SOUP] WebSockets must use system proxy settings</div>


    <div id="common_links"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li>
      <span class="separator">| </span>
        <a href="request.cgi">Requests</a></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    
      <li id="new_account_container_top">
        <span class="separator">| </span>
        <a href="createaccount.cgi">New&nbsp;Account</a>
      </li>

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=126384&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=126384" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=126384&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635620797-uhyjYLyS3dOIQNQgfecagNJJH_Iz39xmEuE-oSGrJwE">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>


  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2018-06-04 08:09:45">
  <input type="hidden" name="id" value="126384">
  <input type="hidden" name="token" value="1635620797-5FB_Ilj5HVK0hVQfVQId7C6rlDW_zb5kGFfxL1KRRl8">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=126384"><b>Bug&nbsp;126384</b></a> <span id="summary_container" class="bz_default_hidden">
        (<span id="alias_nonedit_display">CVE-2018-11713</span>)
      - <span id="short_desc_nonedit_display">[SOUP] WebSockets must use system proxy settings</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>[SOUP] WebSockets must use system proxy settings
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      '[SOUP] WebSockets must use system proxy settings' );
  </script>

  <table id="bug_details" class="edit_form">

    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>CVE-2018-11713
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >WebKit

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=WebKit"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >WebKitGTK

  (<a href="buglist.cgi?component=WebKitGTK&amp;product=WebKit&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr>
<th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>528+ (Nightly build)
  </td>

    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">Unspecified
        Unspecified
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>P1

       Critical

      </td>
    </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Nobody</span>
</span>
      </td>
    </tr>


    <script type="text/javascript">
      assignToDefaultOnChange(['product'],
        'webkit-unassigned\x40lists.webkit.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>


    <tr><th class="field_label "
    id="field_label_keywords">


  <a 
      title="You can add keywords from a defined list to bugs, in order to easily identify and group them."
      class="field_help_link"
      href="describekeywords.cgi"
  >Keywords:</a>

</th>
  <td class="field_value "
      id="field_container_keywords" >

</td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2014-01-02 08:11 PST by <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2018-06-04 08:09 PDT
      (<a href="show_activity.cgi?id=126384">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>9 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="bugs-noreply">bugs-noreply</option>
                <option value="cgarcia">cgarcia</option>
                <option value="clopez">clopez</option>
                <option value="csaavedra">csaavedra</option>
                <option value="danw">danw</option>
                <option value="gns">gns</option>
                <option value="mcatanzaro">mcatanzaro</option>
                <option value="silviapf">silviapf</option>
                <option value="svillar">svillar</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" ><ul class="bug_urls">
          <li><a href="https://bugzilla.gnome.org/show_bug.cgi?id=792212">https://bugzilla.gnome.org/show_bug.cgi?id=792212</a>
          </li>
          <li><a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - REGRESSION(r228088): [SOUP] Certificate verification no longer performed for secure WebSocket connections"
   href="show_bug.cgi?id=184804">CVE-2018-11712</a>
          </li></ul>

</td>
    </tr> 

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script src="js/status-bubble.js?1584556449"></script>
<script type="text/javascript">
<!--
window.addEventListener('message', handleStatusBubbleMessage, false);

function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="3" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden"


      >
        <td>
            <a href="attachment.cgi?id=220225"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">Use new libsoup function to get a proxied GIOStream</span></b></a>

          <span class="bz_attach_extra_info">
              (7.26 KB,
                patch)

            <br>
            <a href="#attach_220225"
               title="Go to the comment associated with the attachment">2014-01-02 08:19 PST</a>,

            <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>


          <a href="attachment.cgi?id=220225&amp;action=edit">Details</a>

            | <a href="attachment.cgi?id=220225&amp;action=prettypatch">Formatted Diff</a>

            | <a href="attachment.cgi?id=220225&amp;action=diff">Diff</a>

          <div class="statusBubble">
            <iframe src="https://ews.webkit.org/status-bubble/220225/"
                    style="width: 0px; height: 20px; border: none;" scrolling="no" onload="handleStatusBubbleLoad(this)">
            </iframe>
          </div>

        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden"


      >
        <td>
            <a href="attachment.cgi?id=220284"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">Use new libsoup function to get a proxied GIOStream</span></b></a>

          <span class="bz_attach_extra_info">
              (6.24 KB,
                patch)

            <br>
            <a href="#attach_220284"
               title="Go to the comment associated with the attachment">2014-01-02 23:50 PST</a>,

            <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>


          <a href="attachment.cgi?id=220284&amp;action=edit">Details</a>

            | <a href="attachment.cgi?id=220284&amp;action=prettypatch">Formatted Diff</a>

            | <a href="attachment.cgi?id=220284&amp;action=diff">Diff</a>

          <div class="statusBubble">
            <iframe src="https://ews.webkit.org/status-bubble/220284/"
                    style="width: 0px; height: 20px; border: none;" scrolling="no" onload="handleStatusBubbleLoad(this)">
            </iframe>
          </div>

        </td>
      </tr>
      <tr id="a3" class="bz_contenttype_text_plain bz_patch"
 style="background-color: rgb(255,255,200);" 

      >
        <td>
            <a href="attachment.cgi?id=220303"
               title="View the content of the attachment">
          <b>Version of the patch that applies to recent WebKit SVN</b></a>

          <span class="bz_attach_extra_info">
              (6.16 KB,
                patch)

            <br>
            <a href="#attach_220303"
               title="Go to the comment associated with the attachment">2014-01-03 07:46 PST</a>,

            <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>


          <a href="attachment.cgi?id=220303&amp;action=edit">Details</a>

            | <a href="attachment.cgi?id=220303&amp;action=prettypatch">Formatted Diff</a>

            | <a href="attachment.cgi?id=220303&amp;action=diff">Diff</a>

          <div class="statusBubble">
            <iframe src="https://ews.webkit.org/status-bubble/220303/"
                    style="width: 0px; height: 20px; border: none;" scrolling="no" onload="handleStatusBubbleLoad(this)">
            </iframe>
          </div>

        </td>
      </tr>
      <tr id="a4" class="bz_contenttype_text_plain"


      >
        <td>
            <a href="attachment.cgi?id=327158"
               title="View the content of the attachment">
          <b>WebKit patches for libsoup WebSockets over proxy</b></a>

          <span class="bz_attach_extra_info">
              (9.77 KB,
                text/plain)

            <br>
            <a href="#attach_327158"
               title="Go to the comment associated with the attachment">2017-11-17 02:30 PST</a>,

            <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>


          <a href="attachment.cgi?id=327158&amp;action=edit">Details</a>




        </td>
      </tr>
      <tr id="a5" class="bz_contenttype_text_plain"


      >
        <td>
            <a href="attachment.cgi?id=327159"
               title="View the content of the attachment">
          <b>libsoup patches for libsoup WebSockets over proxy</b></a>

          <span class="bz_attach_extra_info">
              (22.47 KB,
                text/plain)

            <br>
            <a href="#attach_327159"
               title="Go to the comment associated with the attachment">2017-11-17 02:31 PST</a>,

            <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>


          <a href="attachment.cgi?id=327159&amp;action=edit">Details</a>




        </td>
      </tr>
      <tr id="a6" class="bz_contenttype_text_plain bz_patch bz_tr_obsolete bz_default_hidden"


      >
        <td>
            <a href="attachment.cgi?id=330537"
               title="View the content of the attachment">
          <b><span class="bz_obsolete">Patch</span></b></a>

          <span class="bz_attach_extra_info">
              (9.89 KB,
                patch)

            <br>
            <a href="#attach_330537"
               title="Go to the comment associated with the attachment">2018-01-05 00:15 PST</a>,

            <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
              <i>no flags</i>
          </td>

        <td>


          <a href="attachment.cgi?id=330537&amp;action=edit">Details</a>

            | <a href="attachment.cgi?id=330537&amp;action=prettypatch">Formatted Diff</a>

            | <a href="attachment.cgi?id=330537&amp;action=diff">Diff</a>

          <div class="statusBubble">
            <iframe src="https://ews.webkit.org/status-bubble/330537/"
                    style="width: 0px; height: 20px; border: none;" scrolling="no" onload="handleStatusBubbleLoad(this)">
            </iframe>
          </div>

        </td>
      </tr>
      <tr id="a7" class="bz_contenttype_text_plain bz_patch"
 style="background-color: rgb(255,255,200);" 

      >
        <td>
            <a href="attachment.cgi?id=330682"
               title="View the content of the attachment">
          <b>Patch with unit tests</b></a>

          <span class="bz_attach_extra_info">
              (19.50 KB,
                patch)

            <br>
            <a href="#attach_330682"
               title="Go to the comment associated with the attachment">2018-01-08 04:28 PST</a>,

            <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
          </span>
        </td>

          <td class="bz_attach_flags">
                  <span title="Michael Catanzaro">mcatanzaro</span>:
                review+
                <br>
          </td>

        <td>


          <a href="attachment.cgi?id=330682&amp;action=edit">Details</a>

            | <a href="attachment.cgi?id=330682&amp;action=prettypatch">Formatted Diff</a>

            | <a href="attachment.cgi?id=330682&amp;action=diff">Diff</a>

          <div class="statusBubble">
            <iframe src="https://ews.webkit.org/status-bubble/330682/"
                    style="width: 0px; height: 20px; border: none;" scrolling="no" onload="handleStatusBubbleLoad(this)">
            </iframe>
          </div>

        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="3">
        <span class="bz_attach_view_hide">
            <a href="#a0" onclick="return toggle_display(this);">Show
              Obsolete</a> (3)
            <a id="view_all" href="attachment.cgi?bugid=126384&amp;action=viewall&amp;hide_obsolete=1">View All</a>
        </span>
        <a href="attachment.cgi?bugid=126384&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=126384&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1490751600" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-01-02 08:11:22 PST
        </span>

      </div>




<pre class="bz_comment_text">Currently, it doesn't appear like WebSockets will work with proxies. I'd like to fix that.</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-01-02 08:19:01 PST
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=220225&amp;action=diff" name="attach_220225" title="Use new libsoup function to get a proxied GIOStream">attachment 220225</a> <a href="attachment.cgi?id=220225&amp;action=edit" title="Use new libsoup function to get a proxied GIOStream">[details]</a></span>
Use new libsoup function to get a proxied GIOStream

Here's a WIP patch. I'd like for this to get a preliminary review. It probably doesn't apply cleanly to current HEAD, but I'd like to gather some comments on the design.

The patch relies on a new function in libsoup. That work is being tracked in <a href="https://bugzilla.gnome.org/show_bug.cgi?id=721343">https://bugzilla.gnome.org/show_bug.cgi?id=721343</a>. I was advised there that extracting a GIOStream from libsoup made the most sense, which is why I also replaced the GSocketConnection in SocketStreamHandle by a GIOStream. I'm aware of the changes from <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - Web Inspector: Add a WebInspectorServer on Linux using the GSocket API for the GTK port"
   href="show_bug.cgi?id=88094">bug 88094</a>, so I'm also wondering how that would make sense to integrate.</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-01-02 08:59:18 PST
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=126384#c1">comment #1</a>)
<span class="quote">&gt; Created an attachment (id=220225) [details]
&gt; Use new libsoup function to get a proxied GIOStream</span >

This looks like a libsoup patch, you should use the GNOME bugzilla instead.

<span class="quote">&gt; Here's a WIP patch. I'd like for this to get a preliminary review. It probably doesn't apply cleanly to current HEAD, but I'd like to gather some comments on the design.</span >

It's ok to submit WIP patches to bugzilla for early reviews, but do not set the r? flag in such case.

<span class="quote">&gt; The patch relies on a new function in libsoup. That work is being tracked in <a href="https://bugzilla.gnome.org/show_bug.cgi?id=721343">https://bugzilla.gnome.org/show_bug.cgi?id=721343</a>. I was advised there that extracting a GIOStream from libsoup made the most sense, which is why I also replaced the GSocketConnection in SocketStreamHandle by a GIOStream. I'm aware of the changes from <a class="bz_bug_link 
          bz_status_RESOLVED  bz_closed"
   title="RESOLVED FIXED - Web Inspector: Add a WebInspectorServer on Linux using the GSocket API for the GTK port"
   href="show_bug.cgi?id=88094">bug 88094</a>, so I'm also wondering how that would make sense to integrate.</span >

hmm, I think you submitted the libsoup patch here instead by mistake :-)</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-01-02 23:50:43 PST
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=220284&amp;action=diff" name="attach_220284" title="Use new libsoup function to get a proxied GIOStream">attachment 220284</a> <a href="attachment.cgi?id=220284&amp;action=edit" title="Use new libsoup function to get a proxied GIOStream">[details]</a></span>
Use new libsoup function to get a proxied GIOStream</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-01-02 23:51:30 PST
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=126384#c2">comment #2</a>)
<span class="quote">&gt; This looks like a libsoup patch, you should use the GNOME bugzilla instead.</span >

Doh! You're right, of course. I've now attached the correct patch.

<span class="quote">&gt; It's ok to submit WIP patches to bugzilla for early reviews, but do not set the r? flag in such case.</span >

Okay, sorry about that!</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Martin Robinson</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-01-03 06:40:38 PST
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class="bz_obsolete"><a href="attachment.cgi?id=220284&amp;action=diff" name="attach_220284" title="Use new libsoup function to get a proxied GIOStream">attachment 220284</a> <a href="attachment.cgi?id=220284&amp;action=edit" title="Use new libsoup function to get a proxied GIOStream">[details]</a></span>
Use new libsoup function to get a proxied GIOStream

View in context: <a href="https://bugs.webkit.org/attachment.cgi?id=220284&amp;action=review">https://bugs.webkit.org/attachment.cgi?id=220284&amp;action=review</a>

<span class="quote">&gt; WebCore/platform/network/soup/SocketStreamHandleSoup.cpp:-94
&gt; -    if (url.protocolIs(&quot;wss&quot;))
&gt; -        g_socket_client_set_tls(socketClient.get(), TRUE);</span >

Why are you removing this code? Doesn't this break secure web sockets?

<span class="quote">&gt; WebCore/platform/network/soup/SocketStreamHandleSoup.cpp:94
&gt; +    soup_session_proxy_connect(session, uri, connectedCallback, m_id);</span >

Is this the only change related to proxy support?

<span class="quote">&gt; WebCore/platform/network/soup/SocketStreamHandleSoup.cpp:238
&gt; -static void connectedCallback(GSocketClient* client, GAsyncResult* result, void* id)
&gt; +static void connectedCallback(GIOStream *iostream, GError *error, void* id)</span >

Is the GIOStream here actually a GSocketClient? If so, perhaps it would make more sense to cast it and avoid the rest of your changes.</pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-01-03 06:51:36 PST
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=126384#c5">comment #5</a>)
<span class="quote">&gt; (From update of <span class="bz_obsolete"><a href="attachment.cgi?id=220284&amp;action=diff" name="attach_220284" title="Use new libsoup function to get a proxied GIOStream">attachment 220284</a> <a href="attachment.cgi?id=220284&amp;action=edit" title="Use new libsoup function to get a proxied GIOStream">[details]</a></span>)
&gt; View in context: <a href="https://bugs.webkit.org/attachment.cgi?id=220284&amp;action=review">https://bugs.webkit.org/attachment.cgi?id=220284&amp;action=review</a>
&gt; 
&gt; &gt; WebCore/platform/network/soup/SocketStreamHandleSoup.cpp:-94
&gt; &gt; -    if (url.protocolIs(&quot;wss&quot;))
&gt; &gt; -        g_socket_client_set_tls(socketClient.get(), TRUE);
&gt; 
&gt; Why are you removing this code? Doesn't this break secure web sockets?</span >

I doesn't seem to in my testing. Before my patch, SocketStreamHandles rely on the pretty low-level GSocketClient API. By using more libsoup infrastructure, this kind of thing is handled for us. In this case, I think (but have not verified) that libsoup can figure out from the URL that TLS support is required.

<span class="quote">&gt; 
&gt; &gt; WebCore/platform/network/soup/SocketStreamHandleSoup.cpp:94
&gt; &gt; +    soup_session_proxy_connect(session, uri, connectedCallback, m_id);
&gt; 
&gt; Is this the only change related to proxy support?</span >

Yes, this is the core of the motivating change.

<span class="quote">&gt; &gt; WebCore/platform/network/soup/SocketStreamHandleSoup.cpp:238
&gt; &gt; -static void connectedCallback(GSocketClient* client, GAsyncResult* result, void* id)
&gt; &gt; +static void connectedCallback(GIOStream *iostream, GError *error, void* id)
&gt; 
&gt; Is the GIOStream here actually a GSocketClient? If so, perhaps it would make more sense to cast it and avoid the rest of your changes.</span >

Probably! IIRC danw suggested the use of GIOStream in the soup_session_proxy_connect() API. It seems to me like maybe GSocketConnection makes more sense there. If not, then casting on the WebKit side would be fine as far as I'm concerned.</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dan Winship</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-01-03 07:02:54 PST
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=126384#c5">comment #5</a>)
<span class="quote">&gt; Is the GIOStream here actually a GSocketClient? If so, perhaps it would make more sense to cast it and avoid the rest of your changes.</span >

You mean &quot;actually a GSocketConnection&quot;. And yes, it is, but the point of returning a GIOStream rather than a GSocketConnection is that you mostly don't care that it's a GSocketConnection specifically. ie, in the current code, every single place in SocketStreamHandleSoup that uses it casts it to a GIOStream first. So it makes more sense to just have it be an iostream.</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2014-01-03 07:46:00 PST
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=220303&amp;action=diff" name="attach_220303" title="Version of the patch that applies to recent WebKit SVN">attachment 220303</a> <a href="attachment.cgi?id=220303&amp;action=edit" title="Version of the patch that applies to recent WebKit SVN">[details]</a></span>
Version of the patch that applies to recent WebKit SVN</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Silvia Pfeiffer</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-08-09 05:41:49 PDT
        </span>

      </div>




<pre class="bz_comment_text">Corporate networks often have machines behind a Web proxy. Is this bug going to get addressed, so websockets can be used in corporate networks? I'm particularly curious because WebRTC is about to be released in WebKit/Safari and many WebRTC applications use a websocket signalling server.</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Alberto Lopez Perez</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-08-09 06:13:19 PDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Silvia Pfeiffer from <a href="show_bug.cgi?id=126384#c9">comment #9</a>)
<span class="quote">&gt; Corporate networks often have machines behind a Web proxy. Is this bug going
&gt; to get addressed, so websockets can be used in corporate networks? I'm
&gt; particularly curious because WebRTC is about to be released in WebKit/Safari
&gt; and many WebRTC applications use a websocket signalling server.</span >

The Mac or iOS ports of WebKit (the ones used in Safari) don't use the soup backend for network access. So this bug doesn't affect them.

The libsoup network backend is only used by the GTK+ and WPE ports of WebKit, and WebRTC support on this ports is still a WIP.</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Michael Catanzaro</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-08-09 08:23:11 PDT
        </span>

      </div>




<pre class="bz_comment_text">Oh wow, if WebKit's implementation of WebSockets does not respect GNOME's proxy settings, that's very bad. These kinds of bugs are what get people arrested or killed.

Dirkjan, are you still watching your bugmail? Do you know what the status of this is?</pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Michael Catanzaro</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-08-09 08:24:48 PDT
        </span>

      </div>




<pre class="bz_comment_text">I've also considered if maybe we should be using libsoup's implementation of WebSockets rather than WebKit's implementation. I always assumed that WebKit's implementation was likely to have fewer bugs. Silly me.</pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Alberto Lopez Perez</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-08-09 09:48:49 PDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Michael Catanzaro from <a href="show_bug.cgi?id=126384#c12">comment #12</a>)
<span class="quote">&gt; I've also considered if maybe we should be using libsoup's implementation of
&gt; WebSockets rather than WebKit's implementation. I always assumed that
&gt; WebKit's implementation was likely to have fewer bugs. Silly me.</span >

Do you know something about the quality of the libsoup WebSocket implementation and/or about any project that uses it? 
Keep in mind _any_ implementation is going to have bugs.</pre>
    </div>

    <div id="c14" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c14">Comment 14</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dan Winship</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-08-09 11:02:23 PDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Carlos Alberto Lopez Perez from <a href="show_bug.cgi?id=126384#c13">comment #13</a>)
<span class="quote">&gt; (In reply to Michael Catanzaro from <a href="show_bug.cgi?id=126384#c12">comment #12</a>)
&gt; &gt; I've also considered if maybe we should be using libsoup's implementation of
&gt; &gt; WebSockets rather than WebKit's implementation. I always assumed that
&gt; &gt; WebKit's implementation was likely to have fewer bugs. Silly me.</span >

(Of course, this bug predates libsoup's WebSockets implementation.)

<span class="quote">&gt; Do you know something about the quality of the libsoup WebSocket
&gt; implementation and/or about any project that uses it? 
&gt; Keep in mind _any_ implementation is going to have bugs.</span >

The actual WebSockets implementation isn't all that complicated. The code for letting SoupSession make a (possibly-proxied) connection to a server, and then stealing that GIOStream from SoupSession to use as a websockets connection is kind of tricky, but of course, that's exactly the code that the patch here makes use of, so you'd be using it either way. (Well, the patch here is written against Dirkjan's original proposal that isn't quite how things eventually got implemented, but it would be similar.)

Anyway, a handful of people are using libsoup's websockets code now, (and it was originally based on cockpit's code that had been in use for a few years before that). And I assume WebKit has some WebSockets tests anyway that would validate that it was good enough for WebKit purposes?</pre>
    </div>

    <div id="c15" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c15">Comment 15</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-08-10 04:14:10 PDT
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Dan Winship from <a href="show_bug.cgi?id=126384#c14">comment #14</a>)
<span class="quote">&gt; (In reply to Carlos Alberto Lopez Perez from <a href="show_bug.cgi?id=126384#c13">comment #13</a>)
&gt; &gt; (In reply to Michael Catanzaro from <a href="show_bug.cgi?id=126384#c12">comment #12</a>)
&gt; &gt; &gt; I've also considered if maybe we should be using libsoup's implementation of
&gt; &gt; &gt; WebSockets rather than WebKit's implementation. I always assumed that
&gt; &gt; &gt; WebKit's implementation was likely to have fewer bugs. Silly me.
&gt; 
&gt; (Of course, this bug predates libsoup's WebSockets implementation.)</span >

Yes, that's why we don't use the libsoup one, not because it's more or less buggy, we always prefer to use libsoup (well, except in the case of the disk cache, because the webkit implementation is much better and shared with all other ports).

<span class="quote">&gt; &gt; Do you know something about the quality of the libsoup WebSocket
&gt; &gt; implementation and/or about any project that uses it? 
&gt; &gt; Keep in mind _any_ implementation is going to have bugs.
&gt; 
&gt; The actual WebSockets implementation isn't all that complicated. The code
&gt; for letting SoupSession make a (possibly-proxied) connection to a server,
&gt; and then stealing that GIOStream from SoupSession to use as a websockets
&gt; connection is kind of tricky, but of course, that's exactly the code that
&gt; the patch here makes use of, so you'd be using it either way. (Well, the
&gt; patch here is written against Dirkjan's original proposal that isn't quite
&gt; how things eventually got implemented, but it would be similar.)
&gt; 
&gt; Anyway, a handful of people are using libsoup's websockets code now, (and it
&gt; was originally based on cockpit's code that had been in use for a few years
&gt; before that). And I assume WebKit has some WebSockets tests anyway that
&gt; would validate that it was good enough for WebKit purposes?</span >

WebSockets were added to libsoup in 2.50, IIRC, and we depend on 2.40, so we still need to fix our implementation. Then we can use libsoup, but we will have to use ifdefs.</pre>
    </div>

    <div id="c16" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c16">Comment 16</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-08-10 04:29:29 PDT
        </span>

      </div>




<pre class="bz_comment_text">Michael: yeah, I'm still reading my bug mail.

We've had this working in our internal WebKit fork, based on an also-forked libsoup pinned to somewhere 2.45ish. If there's interest I can try to dig out our patches.</pre>
    </div>

    <div id="c17" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c17">Comment 17</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Michael Catanzaro</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-08-10 08:19:36 PDT
        </span>

      </div>




<pre class="bz_comment_text">Yes we're definitely interested, thanks.</pre>
    </div>

    <div id="c18" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c18">Comment 18</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-11-17 02:30:46 PST
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=327158" name="attach_327158" title="WebKit patches for libsoup WebSockets over proxy">attachment 327158</a> <a href="attachment.cgi?id=327158&amp;action=edit" title="WebKit patches for libsoup WebSockets over proxy">[details]</a></span>
WebKit patches for libsoup WebSockets over proxy</pre>
    </div>

    <div id="c19" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c19">Comment 19</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-11-17 02:31:11 PST
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=327159" name="attach_327159" title="libsoup patches for libsoup WebSockets over proxy">attachment 327159</a> <a href="attachment.cgi?id=327159&amp;action=edit" title="libsoup patches for libsoup WebSockets over proxy">[details]</a></span>
libsoup patches for libsoup WebSockets over proxy</pre>
    </div>

    <div id="c20" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c20">Comment 20</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-11-17 02:31:58 PST
        </span>

      </div>




<pre class="bz_comment_text">I made a quick attempt at extracting the relevant patches from our libsoup and WebKit repositories. Hope this helps. If you have questions or something seems missing, let me know and I can have another look.</pre>
    </div>

    <div id="c21" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c21">Comment 21</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Claudio Saavedra</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-11-20 07:11:43 PST
        </span>

      </div>




<pre class="bz_comment_text">Would you mind submitting the libsoup patches to GNOME bugzilla? Please use separate bug reports if they tackle different issues, as it seems to be the case, then we can see about getting them reviewed and in.</pre>
    </div>

    <div id="c22" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c22">Comment 22</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Dirkjan Ochtman</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2017-11-20 11:03:14 PST
        </span>

      </div>




<pre class="bz_comment_text">See also the libsoup bug mentioned in <a href="show_bug.cgi?id=126384#c1">comment 1</a>. I have no further desire to chase these issues, so I'll leave any new work in creating libsoup bugs to others.</pre>
    </div>

    <div id="c23" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c23">Comment 23</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-01-03 04:45:26 PST
        </span>

      </div>




<pre class="bz_comment_text">If we need new libsoup API in both cases, then I think it's better to keep current impl for older soup versions and use soup web sockets for newer versions then.</pre>
    </div>

    <div id="c24" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c24">Comment 24</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-01-04 01:06:12 PST
        </span>

      </div>




<pre class="bz_comment_text">I've looked at this and we can't really use the libsoup websockets API, because WebKit already implements websockets protocol, the only platform specific part is creating a network connection to send and receive data from. That's lower level than the libsoup websockets API. We can't use soup_session_steal_connection() either, because you are expected to steal the connection when upgrading the protocol once 101 response is returned from the server. However, we need the connection before to properly send the upgrade message. So, we indeed need new API in libsoup to create a connection using ssl and proxy as with any other HTTP connection, but returning the GIOStream for the socket *before* any data is sent.</pre>
    </div>

    <div id="c25" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c25">Comment 25</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-01-04 01:07:18 PST
        </span>

      </div>




<pre class="bz_comment_text">Dirkjan, why do you need to force the tunneling in libsoup when creating a connection for the websockets?</pre>
    </div>

    <div id="c26" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c26">Comment 26</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-01-05 00:15:53 PST
        </span>

      </div>




<pre class="bz_comment_text">Created <span class="bz_obsolete"><a href="attachment.cgi?id=330537&amp;action=diff" name="attach_330537" title="Patch">attachment 330537</a> <a href="attachment.cgi?id=330537&amp;action=edit" title="Patch">[details]</a></span>
Patch</pre>
    </div>

    <div id="c27" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c27">Comment 27</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Michael Catanzaro</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-01-05 12:49:20 PST
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class="bz_obsolete"><a href="attachment.cgi?id=330537&amp;action=diff" name="attach_330537" title="Patch">attachment 330537</a> <a href="attachment.cgi?id=330537&amp;action=edit" title="Patch">[details]</a></span>
Patch

View in context: <a href="https://bugs.webkit.org/attachment.cgi?id=330537&amp;action=review">https://bugs.webkit.org/attachment.cgi?id=330537&amp;action=review</a>

Thanks for fixing this exceptionally serious issue.

We definitely need to request a CVE. I can handle that.

How hard would it be to extend testWebContextProxySettings in TestWebKitWebContext.cpp to test this?

<span class="quote">&gt; Source/WebCore/platform/network/soup/SocketStreamHandleImplSoup.cpp:58
&gt; +#if SOUP_CHECK_VERSION(2, 61, 2)</span >

I see a few different options here:

 (a) We could stick with what you implemented. But I suggest we do not allow web socket connections to ignore proxy settings under any circumstances, certainly not just because libsoup is too old.
 (b) We could ignore our usual dependency policy and require newer libsoup. This would be justified by the severity of this issue. We'd have to send a notice and apology to distributors-list and inform them of the need to update libsoup. Debian would probably refuse. Not great.
 (c) We could disable WebSocket support if libsoup is not new enough. This will break loads of websites.
 (d) We could disable WebSocket support if libsoup is not new enough *and* a system proxy is configured. Websites only break if a proxy is configured.

(d) seems like the best approach to me. What do you think? If we go with (a) or (b) or (c), then we'll certainly need to be backport your new API to libsoup 2.60. But I'm OK with temporarily breaking web sockets for proxy users, so we wouldn't need to do that if we take approach (d).</pre>
    </div>

    <div id="c28" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c28">Comment 28</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-01-08 04:28:46 PST
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=330682&amp;action=diff" name="attach_330682" title="Patch with unit tests">attachment 330682</a> <a href="attachment.cgi?id=330682&amp;action=edit" title="Patch with unit tests">[details]</a></span>
Patch with unit tests</pre>
    </div>

    <div id="c29" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c29">Comment 29</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-01-08 04:30:45 PST
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Michael Catanzaro from <a href="show_bug.cgi?id=126384#c27">comment #27</a>)
<span class="quote">&gt; Comment on <span class="bz_obsolete"><a href="attachment.cgi?id=330537&amp;action=diff" name="attach_330537" title="Patch">attachment 330537</a> <a href="attachment.cgi?id=330537&amp;action=edit" title="Patch">[details]</a></span>
&gt; Patch
&gt; 
&gt; View in context:
&gt; <a href="https://bugs.webkit.org/attachment.cgi?id=330537&amp;action=review">https://bugs.webkit.org/attachment.cgi?id=330537&amp;action=review</a>
&gt; 
&gt; Thanks for fixing this exceptionally serious issue.
&gt; 
&gt; We definitely need to request a CVE. I can handle that.
&gt; 
&gt; How hard would it be to extend testWebContextProxySettings in
&gt; TestWebKitWebContext.cpp to test this?
&gt; 
&gt; &gt; Source/WebCore/platform/network/soup/SocketStreamHandleImplSoup.cpp:58
&gt; &gt; +#if SOUP_CHECK_VERSION(2, 61, 2)
&gt; 
&gt; I see a few different options here:
&gt; 
&gt;  (a) We could stick with what you implemented. But I suggest we do not allow
&gt; web socket connections to ignore proxy settings under any circumstances,
&gt; certainly not just because libsoup is too old.
&gt;  (b) We could ignore our usual dependency policy and require newer libsoup.
&gt; This would be justified by the severity of this issue. We'd have to send a
&gt; notice and apology to distributors-list and inform them of the need to
&gt; update libsoup. Debian would probably refuse. Not great.
&gt;  (c) We could disable WebSocket support if libsoup is not new enough. This
&gt; will break loads of websites.
&gt;  (d) We could disable WebSocket support if libsoup is not new enough *and* a
&gt; system proxy is configured. Websites only break if a proxy is configured.
&gt; 
&gt; (d) seems like the best approach to me. What do you think? If we go with (a)
&gt; or (b) or (c), then we'll certainly need to be backport your new API to
&gt; libsoup 2.60. But I'm OK with temporarily breaking web sockets for proxy
&gt; users, so we wouldn't need to do that if we take approach (d).</span >

I don't think we should backport any new API to libsoup stable branches. I'm not sure it's possible to do d) either, there might be proxy settings that are acceptable, for example if the websockets host used is blacklisted, or if only https proxy is used. We would need to check the actual proxy settings to decide whether to allow the websocket connection or not.</pre>
    </div>

    <div id="c30" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c30">Comment 30</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Michael Catanzaro</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-01-08 09:00:58 PST
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Carlos Garcia Campos from <a href="show_bug.cgi?id=126384#c29">comment #29</a>)
<span class="quote">&gt; I don't think we should backport any new API to libsoup stable branches. I'm
&gt; not sure it's possible to do d) either, there might be proxy settings that
&gt; are acceptable,</span >

We should fail safe: assume that if the user has set a proxy, no WebSockets connection should ever be attempted.

<span class="quote">&gt; for example if the websockets host used is blacklisted,</span >

OK, in that case it really would be safe, but that seems like a very unlikely configuration. Since this is only a fallback codepath, I would not worry about this unlikely case at all.

<span class="quote">&gt; or
&gt; if only https proxy is used. </span >

Another odd case... in that case, wss sockets should still use the https proxy settings, but I guess it's not very much of a privacy issue if no http proxy is set. I suppose it would make sense to block use of ws WebSockets only when an http proxy is set, and to block wss WebSockets only when an https proxy is set.

<span class="quote">&gt; We would need to check the actual proxy
&gt; settings to decide whether to allow the websocket connection or not.</span >

We certainly need to check the proxy settings, but I don't think it's important to do as thorough checks as you propose. The question is: how hard is it to check the proxy settings from WebCore/platform? We really should.</pre>
    </div>

    <div id="c31" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c31">Comment 31</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Michael Catanzaro</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-01-08 09:19:41 PST
        </span>

      </div>




<pre class="bz_comment_text">Comment on <span class=""><a href="attachment.cgi?id=330682&amp;action=diff" name="attach_330682" title="Patch with unit tests">attachment 330682</a> <a href="attachment.cgi?id=330682&amp;action=edit" title="Patch with unit tests">[details]</a></span>
Patch with unit tests

View in context: <a href="https://bugs.webkit.org/attachment.cgi?id=330682&amp;action=review">https://bugs.webkit.org/attachment.cgi?id=330682&amp;action=review</a>

r=me because I can't find any problems with the code, and I like the new test. But I'm still concerned about not blocking WebSocket connections when a proxy is in use in the fallback codepath.

<span class="quote">&gt; Tools/TestWebKitAPI/Tests/WebKitGLib/TestWebKitWebContext.cpp:700
&gt; +    void webSockedConnected(WebSocketServerType serverType)</span >

webSocketConnected

<span class="quote">&gt; Tools/TestWebKitAPI/glib/WebKitGLib/WebKitTestServer.cpp:56
&gt; +#if SOUP_CHECK_VERSION(2, 50, 0)</span >

Why do we switch to (2, 50, 0) here? What requires libsoup 2.50.0?

<span class="quote">&gt; Tools/TestWebKitAPI/glib/WebKitGLib/WebKitTestServer.cpp:117
&gt; +    soup_uri_free(uri);</span >

Why are you not able to use GUniquePtr&lt;SoupURI&gt;?

<span class="quote">&gt; Tools/TestWebKitAPI/glib/WebKitGLib/WebKitTestServer.h:55
&gt; +    SoupURI* m_baseURI { nullptr };
&gt; +#if SOUP_CHECK_VERSION(2, 50, 0)
&gt; +    SoupURI* m_baseWebSocketURI { nullptr };
&gt; +#endif</span >

I'd convert these to use GUniquePtr.</pre>
    </div>

    <div id="c32" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c32">Comment 32</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-01-09 00:26:51 PST
        </span>

      </div>




<pre class="bz_comment_text">(In reply to Michael Catanzaro from <a href="show_bug.cgi?id=126384#c31">comment #31</a>)
<span class="quote">&gt; Comment on <span class=""><a href="attachment.cgi?id=330682&amp;action=diff" name="attach_330682" title="Patch with unit tests">attachment 330682</a> <a href="attachment.cgi?id=330682&amp;action=edit" title="Patch with unit tests">[details]</a></span>
&gt; Patch with unit tests
&gt; 
&gt; View in context:
&gt; <a href="https://bugs.webkit.org/attachment.cgi?id=330682&amp;action=review">https://bugs.webkit.org/attachment.cgi?id=330682&amp;action=review</a>
&gt; 
&gt; r=me because I can't find any problems with the code, and I like the new
&gt; test. But I'm still concerned about not blocking WebSocket connections when
&gt; a proxy is in use in the fallback codepath.
&gt; 
&gt; &gt; Tools/TestWebKitAPI/Tests/WebKitGLib/TestWebKitWebContext.cpp:700
&gt; &gt; +    void webSockedConnected(WebSocketServerType serverType)
&gt; 
&gt; webSocketConnected</span >

Oops.

<span class="quote">&gt; &gt; Tools/TestWebKitAPI/glib/WebKitGLib/WebKitTestServer.cpp:56
&gt; &gt; +#if SOUP_CHECK_VERSION(2, 50, 0)
&gt; 
&gt; Why do we switch to (2, 50, 0) here? What requires libsoup 2.50.0?</span >

Because this is generic code, not specific to the web sockets over proxy tests, even if it's only used by that test ATM. WebSockets API used in WebKitTestServer was added in libsoup 2.50

<span class="quote">&gt; &gt; Tools/TestWebKitAPI/glib/WebKitGLib/WebKitTestServer.cpp:117
&gt; &gt; +    soup_uri_free(uri);
&gt; 
&gt; Why are you not able to use GUniquePtr&lt;SoupURI&gt;?</span >

Because the unit tests don't use WebCore, only the public API and WTF. Soup smart pointers are defined in WebCore, because WTF doesn't depend on soup.

<span class="quote">&gt; &gt; Tools/TestWebKitAPI/glib/WebKitGLib/WebKitTestServer.h:55
&gt; &gt; +    SoupURI* m_baseURI { nullptr };
&gt; &gt; +#if SOUP_CHECK_VERSION(2, 50, 0)
&gt; &gt; +    SoupURI* m_baseWebSocketURI { nullptr };
&gt; &gt; +#endif
&gt; 
&gt; I'd convert these to use GUniquePtr.</span >

It's not possible.</pre>
    </div>

    <div id="c33" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c33">Comment 33</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-01-09 08:50:02 PST
        </span>

      </div>




<pre class="bz_comment_text">libsoup 2.61.2 has been released so I'll have to update the ifdefs.</pre>
    </div>

    <div id="c34" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=126384#c34">Comment 34</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Carlos Garcia Campos</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2018-02-05 01:02:35 PST
        </span>

      </div>




<pre class="bz_comment_text">Committed <a href="https://commits.webkit.org/r228088">r228088</a>: &lt;<a href="https://trac.webkit.org/changeset/228088">https://trac.webkit.org/changeset/228088</a>&gt;</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=126384">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=126384">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=126384">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="./">Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li>
      <span class="separator">| </span>
        <a href="request.cgi">Requests</a></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    
      <li id="new_account_container_bottom">
        <span class="separator">| </span>
        <a href="createaccount.cgi">New&nbsp;Account</a>
      </li>

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=126384&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=126384" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=126384&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635620797-uhyjYLyS3dOIQNQgfecagNJJH_Iz39xmEuE-oSGrJwE">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

    <!-- WEBKIT_CHANGES -->
    <script defer src="/committers-autocomplete.js"></script>
  </body>
</html>