<!DOCTYPE html>
<html lang="en">
  <head>
    <title>8828 &ndash; DCOM-SYSACT dissector crash</title>

      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<link href="data/assets/64b49332a92937374625c24ed9a89c85.css?1635022386" rel="stylesheet" type="text/css">

<link href="data/assets/f6911ed8e5a97f108734d9324cb6bd67.css?1635022386" rel="stylesheet" type="text/css">

    
<script type="text/javascript" src="data/assets/a7c2f3a028f17a9aa60f56dc9d6e732d.js?1635022386"></script>

    <script type="text/javascript">
    <!--
        YAHOO.namespace('bugzilla');
        YAHOO.util.Event.addListener = function (el, sType, fn, obj, overrideContext) {
               if ( ("onpagehide" in window || YAHOO.env.ua.gecko) && sType === "unload") { sType = "pagehide"; };
               var capture = ((sType == "focusin" || sType == "focusout") && !YAHOO.env.ua.ie) ? true : false;
               return this._addListener(el, this._getType(sType), fn, obj, overrideContext, capture);
         };
        if ( "onpagehide" in window || YAHOO.env.ua.gecko) {
            YAHOO.util.Event._simpleRemove(window, "unload", 
                                           YAHOO.util.Event._unload);
        }
        
        function unhide_language_selector() { 
            YAHOO.util.Dom.removeClass(
                'lang_links_container', 'bz_default_hidden'
            ); 
        } 
        YAHOO.util.Event.onDOMReady(unhide_language_selector);

        
        var BUGZILLA = {
            param: {
                cookiepath: '\/',
                maxusermatches: 1000
            },
            constant: {
                COMMENT_COLS: 80
            },
            string: {
                

                attach_desc_required:
                    "You must enter a Description for this attachment.",
                component_required:
                    "You must select a Component for this bug.",
                description_required:
                    "You must enter a Description for this bug.",
                short_desc_required:
                    "You must enter a Summary for this bug.",
                version_required:
                    "You must select a Version for this bug."
            }
              , api_token: ''
        };

    if (history && history.replaceState) {
      if(!document.location.href.match(/show_bug\.cgi/)) {
        history.replaceState( null,
                             "8828 – DCOM-SYSACT dissector crash",
                             "show_bug.cgi?id=8828" );
        document.title = "8828 – DCOM-SYSACT dissector crash";
      }
      if (document.location.href.match(/show_bug\.cgi\?.*list_id=/)) {
        var href = document.location.href;
        href = href.replace(/[\?&]+list_id=(\d+|cookie)/, '');
        history.replaceState(null, "8828 – DCOM-SYSACT dissector crash", href);
      }
    }
    YAHOO.util.Event.onDOMReady(function() {
      initDirtyFieldTracking();

    });
    // -->
    </script>
<script type="text/javascript" src="data/assets/daf5e0fb6826e6a35280e622913f0c4a.js?1635022386"></script>

    

    
    <link rel="search" type="application/opensearchdescription+xml"
                       title="Bugzilla" href="./search_plugin.cgi">
    <link rel="shortcut icon" href="images/favicon.ico">
  </head>

  <body 
        class="bugs-wireshark-org-bugzilla
                 bz_bug
                 bz_status_RESOLVED
                 bz_product_Wireshark
                 bz_component_GTK&#X2B;_UI
                 bz_bug_8828 yui-skin-sam">

  <div id="header"><div id="banner">
      <a href="/bugzilla/"><img id="badge" src="/image/wsbadge-bug@186x57.png"></a>
      <span id="banner-text">
        Wireshark Bug Database &ndash; Bug&nbsp;8828
      </span>
      <div id="subtitle">
        <p class="subheader">DCOM-SYSACT dissector crash</p>
      </div>

       <div id="motd_yellow">

<p>
This Bugzilla instance was migrated to <a href="https://gitlab.com/wireshark/wireshark">GitLab</a> on Sunday, August 23.
</p>


<p>
This bug has been migrated to <a href="https://gitlab.com/wireshark/wireshark/-/issues/8828">issue 8828</a> in the <a href="https://gitlab.com/wireshark/wireshark/-/issues">GitLab issue tracker</a>.
It can be viewed and updated there.
</p>


</p>

<p>
See the <a href="https://gitlab.com/wireshark/gitlab-migration/wikis/home">migration wiki</a> for more details.
</p>

       </div>


    </div>

<!-- WS: Title info is in the banner
    <div id="titles">
      <span id="title">Bugzilla &ndash; Bug&nbsp;8828</span>
  
        <span id="subtitle" class="subheader">DCOM-SYSACT dissector crash</span>

        <span id="information" class="header_addl_info">Last modified: 2013-07-26 13:07:01 UTC</span>
    </div>
  -->


    <div id="common_links"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_top" name="no_redirect" value="0">
    <script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_top");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_top" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_top"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_top">
  <span class="separator">| </span>
  <a id="login_link_top" href="show_bug.cgi?id=8828&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_top')">Log In</a>

  <form action="show_bug.cgi?id=8828" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_top">
    <input id="Bugzilla_login_top" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_top" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_top">
    <a href="#" onclick="return hide_mini_login_form('_top')">[x]</a>
  </form>
</li>


  <li id="forgot_container_top">
    <span class="separator">| </span>
    <a id="forgot_link_top" href="show_bug.cgi?id=8828&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_top')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_top"
          class="mini_forgot bz_default_hidden">
      <label for="login_top">Login:</label>
      <input name="loginname" size="20" id="login_top" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_top" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_top" name="token"
             value="1635621964-lY6jnQDY-QB9061b4DUh9Rd7z3geV4H6y--DUJgkF-U">
      <a href="#" onclick="return hide_forgot_form('_top')">[x]</a>
    </form>
  </li>
</ul>
    </div>
  </div>

  <div id="bugzilla-body">


<script type="text/javascript">
<!--

//-->
</script>

<form name="changeform" id="changeform" method="post" action="process_bug.cgi">

  <input type="hidden" name="delta_ts" value="2013-07-26 13:07:01">
  <input type="hidden" name="id" value="8828">
  <input type="hidden" name="token" value="1635621964-2_-pfr7JqXAJYN301NfeeJd-dVYDSR_DJ5KSDiDedtI">
<div class="bz_short_desc_container edit_form">
     <a href="show_bug.cgi?id=8828"><b>Bug&nbsp;8828</b></a> <span id="summary_container" class="bz_default_hidden">
      - <span id="short_desc_nonedit_display">DCOM-SYSACT dissector crash</span>
     </span>

    <div id="summary_input"><span class="field_label "
    id="field_label_short_desc">


  <a 
      title="The bug summary is a short sentence which succinctly describes what the bug is about."
      class="field_help_link"
      href="page.cgi?id=fields.html#short_desc"
  >Summary:</a>

</span>DCOM-SYSACT dissector crash
    </div>
  </div>
  <script type="text/javascript">
    hideEditableField('summary_container',
                      'summary_input',
                      'summary_edit_action',
                      'short_desc',
                      'DCOM-SYSACT dissector crash' );
  </script>
  <table class="edit_form">
    <tr>
      
      <td id="bz_show_bug_column_1" class="bz_show_bug_column">     
        <table>
          <tr>
    <th class="field_label">
      <a href="page.cgi?id=fields.html#bug_status">Status</a>:
    </th>
    <td id="bz_field_status">
      <span id="static_bug_status">RESOLVED
          FIXED
      </span>
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_alias">


  <a 
      title="A short, unique name assigned to a bug in order to assist with looking it up and referring to it in other places in Bugzilla."
      class="field_help_link"
      href="page.cgi?id=fields.html#alias"
  >Alias:</a>

</th>
    <td>
        None
    </td>
  </tr>
<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_product">


  <a 
      title="Bugs are categorised into Products and Components."
      class="field_help_link"
      href="describecomponents.cgi"
  >Product:</a>

</th>
  <td class="field_value "
      id="field_container_product" >Wireshark

</td>
    </tr>

    
    <tr class="bz_default_hidden"><th class="field_label "
    id="field_label_classification">


  <a 
      title="Bugs are categorised into Classifications, Products and Components. classifications is the top-level categorisation."
      class="field_help_link"
      href="page.cgi?id=fields.html#classification"
  >Classification:</a>

</th>
  <td class="field_value "
      id="field_container_classification" >Unclassified

</td>
    </tr>
        
    
    
    <tr><th class="field_label "
    id="field_label_component">


  <a 
      title="Components are second-level categories; each belongs to a particular Product. Select a Product to narrow down this list."
      class="field_help_link"
      href="describecomponents.cgi?product=Wireshark"
  >Component:</a>

</th>
  <td class="field_value "
      id="field_container_component" >GTK+ UI

  (<a href="buglist.cgi?component=GTK%2B%20UI&amp;product=Wireshark&amp;bug_status=__open__"
      target="_blank">show other bugs</a>)
</td>
    </tr>
    <tr><th class="field_label "
    id="field_label_version">


  <a 
      title="The version field defines the version of the software the bug was found in."
      class="field_help_link"
      href="page.cgi?id=fields.html#version"
  >Version:</a>

</th>
<td>1.10.0
  </td>
    </tr>
        
    
        
    <tr><th class="field_label "
    id="field_label_rep_platform">


  <a 
      title="The hardware platform the bug was observed on. Note: When searching, selecting the option &quot;All&quot; only finds bugs whose value for this field is literally the word &quot;All&quot;."
      class="field_help_link"
      href="page.cgi?id=fields.html#rep_platform"
  >Hardware:</a>

</th>
      <td class="field_value">x86-64
        Ubuntu
      </td>
    </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          
          <tr>
      <th class="field_label">
        <label  accesskey="i">
          <a href="page.cgi?id=fields.html#importance"><u>I</u>mportance</a></label>:
      </th>
      <td>Low
       Major<span id="votes_container">
    (<a href="page.cgi?id=voting/user.html&amp;bug_id=8828#vote_8828">vote</a>)
  </span>
      </td>
    </tr>

      <tr><th class="field_label "
    id="field_label_target_milestone">


  <a 
      title="The Target Milestone field is used to define when the engineer the bug is assigned to expects to fix it."
      class="field_help_link"
      href="page.cgi?id=fields.html#target_milestone"
  >Target Milestone:</a>

</th><td>---
  </td>
      </tr>
          
          <tr><th class="field_label "
    id="field_label_assigned_to">


  <a 
      title="The person in charge of resolving the bug."
      class="field_help_link"
      href="page.cgi?id=fields.html#assigned_to"
  >Assignee:</a>

</th>
      <td><span class="vcard"><span class="fn">Bugzilla Administrator</span>
</span>
      </td>
    </tr>

    <script type="text/javascript">
      assignToDefaultOnChange(['product', 'component'],
        'bugzilla-admin\x40wireshark.org',
        '');
    </script>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
          <tr><th class="field_label "
    id="field_label_bug_file_loc">


  <a 
      title="Bugs can have a URL associated with them - for example, a pointer to a web site where the problem is seen."
      class="field_help_link"
      href="page.cgi?id=fields.html#bug_file_loc"
  >URL:</a>

</th>
    <td>
      <span id="bz_url_input_area">
      </span>
    </td>
  </tr>
          <tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>

          
<tr><th class="field_label "
    id="field_label_dependson">


  <a 
      title="The bugs listed here must be resolved before this bug can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#dependson"
  >Depends on:</a>

</th>

  <td>
    <span id="dependson_input_area">
    </span>

  </td>
  </tr>
  
  <tr><th class="field_label "
    id="field_label_blocked">


  <a 
      title="This bug must be resolved before the bugs listed in this field can be resolved."
      class="field_help_link"
      href="page.cgi?id=fields.html#blocked"
  >Blocks:</a>

</th>

  <td>
    <span id="blocked_input_area">
    </span>

  </td>
  </tr>
          
        </table>
      </td>
      <td>
        <div class="bz_column_spacer">&nbsp;</div>
      </td>
      
      <td id="bz_show_bug_column_2" class="bz_show_bug_column">
        <table>
        <tr>
    <th class="field_label">
      Reported:
    </th>
    <td>2013-06-20 01:16 UTC by <span class="vcard"><span class="fn">Laurent Butti</span>
</span>
    </td>
  </tr>
  
  <tr>
    <th class="field_label">
      Modified:
    </th>
    <td>2013-07-26 13:07 UTC
      (<a href="show_activity.cgi?id=8828">History</a>)
    </td>
  
  </tr>
<tr>
      <th class="field_label">
        <label  accesskey="a">
          CC List:
        </label>
      </th>
      <td>2 
          users
          <span id="cc_edit_area_showhide_container" class="bz_default_hidden">
            (<a href="#" id="cc_edit_area_showhide">show</a>)
          </span>
        <div id="cc_edit_area">
          <br>
            <select id="cc" multiple="multiple" size="5" >
                <option value="eapache">eapache</option>
                <option value="ltgao">ltgao</option>
            </select>
        </div>
          <script type="text/javascript">
            hideEditableField( 'cc_edit_area_showhide_container', 
                               'cc_edit_area', 
                               'cc_edit_area_showhide', 
                               '', 
                               '');  
          </script>
      </td>
    </tr>

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>
<tr><th class="field_label "
    id="field_label_see_also">


  <a 
      title="This allows you to refer to bugs in other installations. You can enter a URL to a bug in the 'Add Bug URLs' field to note that that bug is related to this one. You can enter multiple URLs at once by separating them with whitespace. You should normally use this field to refer to bugs in other installations. For bugs in this installation, it is better to use the Depends on and Blocks fields."
      class="field_help_link"
      href="page.cgi?id=fields.html#see_also"
  >See Also:</a>

</th>
  <td class="field_value "
      id="field_container_see_also" ><ul class="bug_urls">
          <li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4922">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4922</a>
          </li>
          <li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4923">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4923</a>
          </li>
          <li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4924">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4924</a>
          </li>
          <li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4925">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2013-4925</a>
          </li></ul>

</td>
    </tr> 

<tr>
    <td colspan="2" class="bz_section_spacer"></td>
  </tr>



        </table>
      </td>
    </tr>
    <tr>
      <td colspan="3">
          <hr id="bz_top_half_spacer">
      </td>
    </tr>
  </table>

  <table id="bz_big_form_parts">
  <tr>
  <td>

    
<script type="text/javascript">
<!--
function toggle_display(link) {
    var table = document.getElementById("attachment_table");
    var view_all = document.getElementById("view_all");
    var hide_obsolete_url_parameter = "&hide_obsolete=1";
    // Store current height for scrolling later
    var originalHeight = table.offsetHeight;
    var rows = YAHOO.util.Dom.getElementsByClassName(
        'bz_tr_obsolete', 'tr', table);

    for (var i = 0; i < rows.length; i++) {
        bz_toggleClass(rows[i], 'bz_default_hidden');
    }

    if (YAHOO.util.Dom.hasClass(rows[0], 'bz_default_hidden')) {
        link.innerHTML = "Show Obsolete";
        view_all.href = view_all.href + hide_obsolete_url_parameter 
    }
    else {
        link.innerHTML = "Hide Obsolete";
        view_all.href = view_all.href.replace(hide_obsolete_url_parameter,"");
    }

    var newHeight = table.offsetHeight;
    // This scrolling makes the window appear to not move at all.
    window.scrollBy(0, newHeight - originalHeight);

    return false;
}
//-->
</script>

<br>
<table id="attachment_table">
  <tr id="a0">
    <th colspan="2" class="left">
      Attachments
    </th>
  </tr>


      <tr id="a1" class="bz_contenttype_application_cap">
        <td>
            <a href="attachment.cgi?id=11029"
               title="View the content of the attachment">
          <b>capture</b></a>

          <span class="bz_attach_extra_info">
              (231.48 KB,
                application/cap)

            <br>
            <a href="#attach_11029"
               title="Go to the comment associated with the attachment">2013-06-20 01:16 UTC</a>,

            <span class="vcard"><span class="fn">Laurent Butti</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=11029&amp;action=edit">Details</a>
        </td>
      </tr>
      <tr id="a2" class="bz_contenttype_image_png">
        <td>
            <a href="attachment.cgi?id=11158"
               title="View the content of the attachment">
          <b>This is a screen capture corresponding to comments #9.</b></a>

          <span class="bz_attach_extra_info">
              (214.75 KB,
                image/png)

            <br>
            <a href="#attach_11158"
               title="Go to the comment associated with the attachment">2013-07-07 23:29 UTC</a>,

            <span class="vcard"><span class="fn">Litao Gao</span>
</span>
          </span>
        </td>


        <td>
          <a href="attachment.cgi?id=11158&amp;action=edit">Details</a>
        </td>
      </tr>

  <tr class="bz_attach_footer">
    <td colspan="2">
        <span class="bz_attach_view_hide">
        </span>
        <a href="attachment.cgi?bugid=8828&amp;action=enter">Add an attachment</a>
        (proposed patch, testcase, etc.)
    </td>
  </tr>
</table>
<br>
<div id="add_comment" class="bz_section_additional_comments">
      <table>
        <tr>
          <td>
            <fieldset>
              <legend>Note</legend>
              You need to
              <a href="show_bug.cgi?id=8828&amp;GoAheadAndLogIn=1">log in</a>
              before you can comment on or make changes to this bug.
            </fieldset>
          </td>
        </tr> 
      </table>
  </div>
  </td>
  <td>
  </td>
  </tr></table>

  
  <div id="comments"><script src="js/comments.js?1490378926" type="text/javascript">
</script>

<script type="text/javascript">
<!--
  /* Adds the reply text to the 'comment' textarea */
  function replyToComment(id, real_id, name) {
      var prefix = "(In reply to " + name + " from comment #" + id + ")\n";
      var replytext = "";
        /* pre id="comment_name_N" */
        var text_elem = document.getElementById('comment_text_'+id);
        var text = getText(text_elem);
        replytext = prefix + wrapReplyText(text);


      /* <textarea id="comment"> */
      var textarea = document.getElementById('comment');
      if (textarea.value != replytext) {
          textarea.value += replytext;
      }

      textarea.focus();
  } 
//-->
</script>


<!-- This auto-sizes the comments and positions the collapse/expand links 
     to the right. -->
<table class="bz_comment_table">
<tr>
<td>
<div id="c0" class="bz_comment bz_first_comment">

      <div class="bz_first_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c0">Description</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laurent Butti</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-06-20 01:16:50 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=11029" name="attach_11029" title="capture">attachment 11029</a> <a href="attachment.cgi?id=11029&amp;action=edit" title="capture">[details]</a></span>
capture

Build Information:
TShark 1.10.0 (SVN Rev Unknown from unknown)

Copyright 1998-2013 Gerald Combs &lt;<a href="/cdn-cgi/l/email-protection#42252730232e266461747679352b3027312a2330296c2d3025">gerald&#64;wireshark.org</a>&gt; and contributors.
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Compiled (64-bit) with GLib 2.32.3, with libpcap, with libz 1.2.3.4, without
POSIX capabilities, without libnl, without SMI, without c-ares, without ADNS,
with Lua 5.1, without Python, with GnuTLS 2.12.14, with Gcrypt 1.5.0, with MIT
Kerberos, without GeoIP.

Running on Linux 3.2.0-43-generic, with locale en_US.UTF-8, with libpcap version
1.1.1, with libz 1.2.3.4.
AMD Athlon(tm) Dual Core Processor 5000B

Built using gcc 4.6.3.
--
Hi,

Here is a PCAP file triggering a SIGABRT that could enable (at least) a remote
party to trigger a denial of service.

This file was generated thanks to a fuzz testing campaign.

Laurent Butti.

--

Program received signal SIGABRT, Aborted.
0x00007ffff297f425 in __GI_raise (sig=&lt;optimized out&gt;) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64
64  ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.
(gdb) bt
#0  0x00007ffff297f425 in __GI_raise (sig=&lt;optimized out&gt;) at ../nptl/sysdeps/unix/sysv/linux/raise.c:64
#1  0x00007ffff2982b8b in __GI_abort () at abort.c:91
#2  0x00007ffff29bd39e in __libc_message (do_abort=2, fmt=0x7ffff2ac7008 &quot;*** glibc detected *** %s: %s: 0x%s ***\n&quot;)
    at ../sysdeps/unix/sysv/linux/libc_fatal.c:201
#3  0x00007ffff29c7b96 in malloc_printerr (action=3, str=0x7ffff2ac7118 &quot;double free or corruption (!prev)&quot;, ptr=&lt;optimized out&gt;) at malloc.c:5018
#4  0x00007ffff5028c2c in dissect_dcom_ActivationProperties (tvb=0x177d300, offset=&lt;optimized out&gt;, pinfo=0x7fffffffd650, tree=&lt;optimized out&gt;, 
    drep=0x7fffffffc434 &quot;&quot;, size=&lt;optimized out&gt;) at packet-dcom-sysact.c:419
#5  0x00007ffff502c06b in dissect_dcom_CUSTOBJREF (tvb=0x177d300, offset=96, pinfo=0x7fffffffd650, tree=&lt;optimized out&gt;, drep=0x7fffffffc434 &quot;&quot;, 
    hfindex=&lt;optimized out&gt;, clsid=0x7fffffffbf40, iid=0x7fffffffbf30) at packet-dcom.c:2014
#6  0x00007ffff502c32c in dissect_dcom_OBJREF (tvb=0x177d300, offset=72, pinfo=0x7fffffffd650, tree=&lt;optimized out&gt;, drep=0x7fffffffc434 &quot;&quot;, hfindex=897, 
    interf=0x0) at packet-dcom.c:2073
#7  0x00007ffff502c479 in dissect_dcom_MInterfacePointer (tvb=0x177d300, offset=&lt;optimized out&gt;, pinfo=0x7fffffffd650, tree=&lt;optimized out&gt;, 
    drep=0x7fffffffc434 &quot;&quot;, hfindex=897, interf=0x0) at packet-dcom.c:2123
#8  0x00007ffff502cb1a in dissect_dcom_PMInterfacePointer (tvb=0x177d300, offset=&lt;optimized out&gt;, pinfo=0x7fffffffd650, tree=0x0, drep=0x7fffffffc434 &quot;&quot;, 
    hfindex=897, interf=0x0) at packet-dcom.c:2142
#9  0x00007ffff50293c0 in dissect_remsysact_remotecreateinstance_rqst (tvb=0x177d300, offset=&lt;optimized out&gt;, pinfo=0x7fffffffd650, tree=0x0, 
    drep=0x7fffffffc434 &quot;&quot;) at packet-dcom-sysact.c:1110
#10 0x00007ffff5019b70 in dcerpc_try_handoff (pinfo=0x7fffffffd650, tree=0x0, dcerpc_tree=&lt;optimized out&gt;, tvb=0x177d300, decrypted_tvb=&lt;optimized out&gt;, 
    drep=0x7fffffffc434 &quot;&quot;, info=0x7ffff76c25a8, auth_info=0x7fffffffc3d0) at packet-dcerpc.c:2688
#11 0x00007ffff4e054f4 in dissect_dcerpc_cn_stub (tvb=0x1781c60, offset=&lt;optimized out&gt;, pinfo=0x7fffffffd650, dcerpc_tree=0x0, tree=0x0, hdr=0x7fffffffc430, 
    di=0x7ffff76c25a8, auth_info=0x7fffffffc3d0, frame=15102, alloc_hint=&lt;optimized out&gt;) at packet-dcerpc.c:3344
#12 0x00007ffff501d36c in dissect_dcerpc_cn_resp (hdr=&lt;optimized out&gt;, tree=&lt;optimized out&gt;, dcerpc_tree=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, 
    offset=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;) at packet-dcerpc.c:3843
#13 dissect_dcerpc_cn (tvb=&lt;optimized out&gt;, offset=&lt;optimized out&gt;, pinfo=0x7fffffffd650, tree=0x0, can_desegment=&lt;optimized out&gt;, pkt_len=0x7fffecc582f8)
    at packet-dcerpc.c:4647
#14 0x00007ffff501ed7d in dissect_dcerpc_cn_bs_body (tvb=0x1781ea0, pinfo=0x7fffffffd650, tree=0x0) at packet-dcerpc.c:4733
#15 0x00007ffff4e31241 in dissector_try_heuristic (sub_dissectors=&lt;optimized out&gt;, tvb=0x1781ea0, pinfo=0x7fffffffd650, tree=0x0, data=0x0) at packet.c:1804
#16 0x00007ffff54959c4 in decode_tcp_ports (tvb=&lt;optimized out&gt;, offset=&lt;optimized out&gt;, pinfo=0x7fffffffd650, tree=0x0, src_port=&lt;optimized out&gt;, 
    dst_port=&lt;optimized out&gt;, tcpd=0x7fffecc58338) at packet-tcp.c:3963
#17 0x00007ffff5495efe in process_tcp_payload (tvb=0x1782060, offset=20, pinfo=0x7fffffffd650, tree=0x0, tcp_tree=0x0, src_port=2172, dst_port=135, seq=0, 
    nxtseq=0, is_tcp_segment=0, tcpd=0x7fffecc58338) at packet-tcp.c:4008
#18 0x00007ffff54964ae in desegment_tcp (tcpd=0x7fffecc58338, tcp_tree=0x0, tree=0x0, dport=135, sport=2172, nxtseq=1943221288, seq=1943220468, offset=20, 
    pinfo=0x7fffffffd650, tvb=0x1782060) at packet-tcp.c:1830
#19 dissect_tcp_payload (tvb=0x1782060, pinfo=0x7fffffffd650, offset=&lt;optimized out&gt;, seq=&lt;optimized out&gt;, nxtseq=1943221288, sport=2172, dport=135, 
    tree=0x0, tcp_tree=0x0, tcpd=0x7fffecc58338) at packet-tcp.c:4075
#20 0x00007ffff5497933 in dissect_tcp (tvb=0x1782060, pinfo=0x7fffffffd650, tree=0x0) at packet-tcp.c:4853
#21 0x00007ffff4e2f2a8 in call_dissector_through_handle (handle=0x1160190, tvb=0x1782060, pinfo=0x7fffffffd650, tree=0x0, data=0x0) at packet.c:458
#22 0x00007ffff4e2fbc5 in call_dissector_work (handle=0x1160190, tvb=0x1782060, pinfo_arg=0x7fffffffd650, tree=0x0, add_proto_name=1, data=0x0)
    at packet.c:549
#23 0x00007ffff4e30453 in dissector_try_uint_new (sub_dissectors=&lt;optimized out&gt;, uint_val=6, tvb=0x1782060, pinfo=0x7fffffffd650, tree=0x0, 
    add_proto_name=1, data=0x0) at packet.c:966
#24 0x00007ffff4e304a7 in dissector_try_uint (sub_dissectors=&lt;optimized out&gt;, uint_val=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, 
    tree=&lt;optimized out&gt;) at packet.c:992
#25 0x00007ffff51bb7b3 in dissect_ip (tvb=0x1781d20, pinfo=&lt;optimized out&gt;, parent_tree=0x0) at packet-ip.c:2418
#26 0x00007ffff4e2f2a8 in call_dissector_through_handle (handle=0xc75ae0, tvb=0x1781d20, pinfo=0x7fffffffd650, tree=0x0, data=0x0) at packet.c:458
#27 0x00007ffff4e2fbc5 in call_dissector_work (handle=0xc75ae0, tvb=0x1781d20, pinfo_arg=0x7fffffffd650, tree=0x0, add_proto_name=1, data=0x0) at packet.c:549
#28 0x00007ffff4e30453 in dissector_try_uint_new (sub_dissectors=&lt;optimized out&gt;, uint_val=2048, tvb=0x1781d20, pinfo=0x7fffffffd650, tree=0x0, 
    add_proto_name=1, data=0x0) at packet.c:966
#29 0x00007ffff4e304a7 in dissector_try_uint (sub_dissectors=&lt;optimized out&gt;, uint_val=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, 
    tree=&lt;optimized out&gt;) at packet.c:992
#30 0x00007ffff5091822 in ethertype (etype=2048, tvb=0x1781d80, offset_after_etype=14, pinfo=0x7fffffffd650, tree=0x0, fh_tree=0x0, etype_id=23707, 
    trailer_id=23711, fcs_len=-1) at packet-ethertype.c:280
#31 0x00007ffff50902b9 in dissect_eth_common (tvb=0x1781d80, pinfo=0x7fffffffd650, parent_tree=0x0, fcs_len=-1) at packet-eth.c:404
#32 0x00007ffff4e2f2a8 in call_dissector_through_handle (handle=0xa5dc30, tvb=0x1781d80, pinfo=0x7fffffffd650, tree=0x0, data=0x0) at packet.c:458
#33 0x00007ffff4e2fbc5 in call_dissector_work (handle=0xa5dc30, tvb=0x1781d80, pinfo_arg=0x7fffffffd650, tree=0x0, add_proto_name=1, data=0x0) at packet.c:549
#34 0x00007ffff4e30453 in dissector_try_uint_new (sub_dissectors=&lt;optimized out&gt;, uint_val=1, tvb=0x1781d80, pinfo=0x7fffffffd650, tree=0x0, 
    add_proto_name=1, data=0x0) at packet.c:966
#35 0x00007ffff4e304a7 in dissector_try_uint (sub_dissectors=&lt;optimized out&gt;, uint_val=&lt;optimized out&gt;, tvb=&lt;optimized out&gt;, pinfo=&lt;optimized out&gt;, 
    tree=&lt;optimized out&gt;) at packet.c:992
---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---
#36 0x00007ffff50c5108 in dissect_frame (tvb=0x1781d80, pinfo=0x7fffffffd650, parent_tree=0x0) at packet-frame.c:481
#37 0x00007ffff4e2f2a8 in call_dissector_through_handle (handle=0x74c5d0, tvb=0x1781d80, pinfo=0x7fffffffd650, tree=0x0, data=0x0) at packet.c:458
#38 0x00007ffff4e2fbc5 in call_dissector_work (handle=0x74c5d0, tvb=0x1781d80, pinfo_arg=0x7fffffffd650, tree=0x0, add_proto_name=1, data=0x0) at packet.c:549
#39 0x00007ffff4e31991 in call_dissector_with_data (handle=&lt;optimized out&gt;, tvb=0x1781d80, pinfo=0x7fffffffd650, tree=0x0, data=&lt;optimized out&gt;)
    at packet.c:2073
#40 0x00007ffff4e31d64 in dissect_packet (edt=0x7fffffffd640, phdr=0xffffffffffffffc0, pd=0x1753dd0 &quot;&quot;, fd=0x7fffffffd830, cinfo=0x0) at packet.c:392
#41 0x00007ffff4e277dc in epan_dissect_run_with_taps (edt=0x7fffffffd640, phdr=0x174ece0, data=0x1753dd0 &quot;&quot;, fd=0x7fffffffd830, cinfo=&lt;optimized out&gt;)
    at epan.c:217
#42 0x000000000041935e in process_packet (cf=0x643b00, offset=&lt;optimized out&gt;, whdr=0x174ece0, pd=0x1753dd0 &quot;&quot;, filtering_tap_listeners=&lt;optimized out&gt;, 
    tap_flags=&lt;optimized out&gt;) at tshark.c:3251
#43 0x000000000040b519 in load_cap_file (max_byte_count=0, max_packet_count=-15101, out_file_name_res=0, out_file_type=2, save_file=0x0, cf=&lt;optimized out&gt;)
    at tshark.c:3046
#44 main (argc=&lt;optimized out&gt;, argv=&lt;optimized out&gt;) at tshark.c:1918
(gdb) python import exploitable
(gdb) exploitable -v
'exploitable' version 1.04
Linux nitro 3.2.0-43-generic #68-Ubuntu SMP Wed May 15 03:33:33 UTC 2013 x86_64
Signal si_signo: 6 Signal si_addr: 0x3e8000054c7
Nearby code:
   0x00007ffff297f415 &lt;+37&gt;:    movsxd rdx,edi
   0x00007ffff297f418 &lt;+40&gt;:    movsxd rsi,esi
   0x00007ffff297f41b &lt;+43&gt;:    movsxd rdi,eax
   0x00007ffff297f41e &lt;+46&gt;:    mov    eax,0xea
   0x00007ffff297f423 &lt;+51&gt;:    syscall 
=&gt; 0x00007ffff297f425 &lt;+53&gt;:    cmp    rax,0xfffffffffffff000
   0x00007ffff297f42b &lt;+59&gt;:    ja     0x7ffff297f43f &lt;__GI_raise+79&gt;
   0x00007ffff297f42d &lt;+61&gt;:    repz ret 
   0x00007ffff297f42f &lt;+63&gt;:    nop
   0x00007ffff297f430 &lt;+64&gt;:    test   eax,eax
Stack trace:
#  0 __GI_raise at 0x7ffff297f425 in /lib/x86_64-linux-gnu/libc-2.15.so (BL)
#  1 __GI_abort at 0x7ffff2982b8b in /lib/x86_64-linux-gnu/libc-2.15.so (BL)
#  2 __libc_message at 0x7ffff29bd39e in /lib/x86_64-linux-gnu/libc-2.15.so (BL)
#  3 malloc_printerr at 0x7ffff29c7b96 in /lib/x86_64-linux-gnu/libc-2.15.so (BL)
#  4 dissect_dcom_ActivationProperties at 0x7ffff5028c2c in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
#  5 dissect_dcom_CUSTOBJREF at 0x7ffff502c06b in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
#  6 dissect_dcom_OBJREF at 0x7ffff502c32c in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
#  7 dissect_dcom_MInterfacePointer at 0x7ffff502c479 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
#  8 dissect_dcom_PMInterfacePointer at 0x7ffff502cb1a in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
#  9 dissect_remsysact_remotecreateinstance_rqst at 0x7ffff50293c0 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 10 dcerpc_try_handoff at 0x7ffff5019b70 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 11 dissect_dcerpc_cn_stub at 0x7ffff4e054f4 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 12 dissect_dcerpc_cn_resp at 0x7ffff501d36c in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 13 dissect_dcerpc_cn at 0x7ffff501d36c in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 14 dissect_dcerpc_cn_bs_body at 0x7ffff501ed7d in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 15 dissector_try_heuristic at 0x7ffff4e31241 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 16 decode_tcp_ports at 0x7ffff54959c4 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 17 process_tcp_payload at 0x7ffff5495efe in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 18 desegment_tcp at 0x7ffff54964ae in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 19 dissect_tcp_payload at 0x7ffff54964ae in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 20 dissect_tcp at 0x7ffff5497933 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 21 call_dissector_through_handle at 0x7ffff4e2f2a8 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 22 call_dissector_work at 0x7ffff4e2fbc5 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 23 dissector_try_uint_new at 0x7ffff4e30453 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 24 dissector_try_uint at 0x7ffff4e304a7 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 25 dissect_ip at 0x7ffff51bb7b3 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 26 call_dissector_through_handle at 0x7ffff4e2f2a8 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 27 call_dissector_work at 0x7ffff4e2fbc5 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 28 dissector_try_uint_new at 0x7ffff4e30453 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 29 dissector_try_uint at 0x7ffff4e304a7 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 30 ethertype at 0x7ffff5091822 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 31 dissect_eth_common at 0x7ffff50902b9 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 32 call_dissector_through_handle at 0x7ffff4e2f2a8 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 33 call_dissector_work at 0x7ffff4e2fbc5 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 34 dissector_try_uint_new at 0x7ffff4e30453 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 35 dissector_try_uint at 0x7ffff4e304a7 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 36 dissect_frame at 0x7ffff50c5108 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 37 call_dissector_through_handle at 0x7ffff4e2f2a8 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 38 call_dissector_work at 0x7ffff4e2fbc5 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 39 call_dissector_with_data at 0x7ffff4e31991 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 40 dissect_packet at 0x7ffff4e31d64 in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 41 epan_dissect_run_with_taps at 0x7ffff4e277dc in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
# 42 process_packet at 0x41935e in /home/laurent/fuzzing/bin/wireshark-1.10.0/bin/tshark
# 43 load_cap_file at 0x40b519 in /home/laurent/fuzzing/bin/wireshark-1.10.0/bin/tshark
# 44 main at 0x40b519 in /home/laurent/fuzzing/bin/wireshark-1.10.0/bin/tshark
Faulting frame: #  4 dissect_dcom_ActivationProperties at 0x7ffff5028c2c in /home/laurent/fuzzing/bin/wireshark-1.10.0/lib/libwireshark.so.3.0.0
Description: Abort signal
Short description: AbortSignal (19/21)
Hash: c172099a7cc49c14b62fc459ceaa0829.410472bcbdf2f39100d29eb38fa5550d
Exploitability Classification: UNKNOWN
Explanation: The target is stopped on a SIGABRT. SIGABRTs are often generated by libc and compiled check-code to indicate potentially exploitable conditions. Unfortunately this command does not yet further analyze these crashes.</pre>
    </div>

    <div id="c1" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c1">Comment 1</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-06-20 16:27:57 UTC
        </span>

      </div>




<pre class="bz_comment_text">Double-free fixed in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=50094">r50094</a>, but I'm still seeing Dissector Bugs and valgrind errors with this capture in trunk, so not closing the bug yet.</pre>
    </div>

    <div id="c2" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c2">Comment 2</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-06-28 16:55:14 UTC
        </span>

      </div>




<pre class="bz_comment_text">Valgrind errors fixed in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=50226">r50226</a>. Just the dissector bugs left.</pre>
    </div>

    <div id="c3" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c3">Comment 3</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-06-29 10:39:39 UTC
        </span>

      </div>




<pre class="bz_comment_text">The dissector bugs are less simple. I'm not sure if they are actually bugs in the dissector, or simply things that should be replaced with expert info.

Litao, I am CCing you on this bug since you updated the dissector recently. Do you know how to fix the remaining assertions from this capture?</pre>
    </div>

    <div id="c4" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c4">Comment 4</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Jeff Morriss</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-06-30 14:41:00 UTC
        </span>

      </div>




<pre class="bz_comment_text">Crash is fixed, making this one public.</pre>
    </div>

    <div id="c5" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c5">Comment 5</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Litao Gao</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-07-01 03:12:49 UTC
        </span>

      </div>




<pre class="bz_comment_text">Thank Evan for the debugging and fix the double free issue!

As to the dissector assertion, after comparing the normal pcap, 
I believe that these assertions should belong to expert info.
This pcap is generated by fuzz tools, right?


(In reply to <a href="show_bug.cgi?id=8828#c3">comment #3</a>)
<span class="quote">&gt; The dissector bugs are less simple. I'm not sure if they are actually bugs
&gt; in the dissector, or simply things that should be replaced with expert info.
&gt; 
&gt; Litao, I am CCing you on this bug since you updated the dissector recently.
&gt; Do you know how to fix the remaining assertions from this capture?</span ></pre>
    </div>

    <div id="c6" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c6">Comment 6</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Laurent Butti</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-07-01 04:06:43 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8828#c5">comment #5</a>)
<span class="quote">&gt; Thank Evan for the debugging and fix the double free issue!
&gt; 
&gt; As to the dissector assertion, after comparing the normal pcap, 
&gt; I believe that these assertions should belong to expert info.
&gt; This pcap is generated by fuzz tools, right?</span >

Yes, thanks to dumb (but apparently efficient) fuzzing!</pre>
    </div>

    <div id="c7" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c7">Comment 7</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Litao Gao</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-07-01 19:12:00 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8828#c6">comment #6</a>)
<span class="quote">&gt; 
&gt; Yes, thanks to dumb (but apparently efficient) fuzzing!</span >

Agree, fuzzing is quite helpful!
I will run as many fuzzing test as possible before submitting for code commit later on.

Thank all of you for the effort dealing with this issue.</pre>
    </div>

    <div id="c8" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c8">Comment 8</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-07-07 09:19:52 UTC
        </span>

      </div>




<pre class="bz_comment_text">I replaced some of the assertions with if-branches for expert info in<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=50432">r50432</a>. I didn't actually put expert info in to make backporting easier, since the expert API has changed.

There is still one:
WARNING **: Dissector bug, protocol ISystemActivator, in packet 995: packet-dcom-sysact.c:600: failed assertion &quot;len &lt;= size&quot;

which I'm not sure of.</pre>
    </div>

    <div id="c9" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c9">Comment 9</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Litao Gao</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-07-07 23:26:59 UTC
        </span>

      </div>




<pre class="bz_comment_text">(In reply to <a href="show_bug.cgi?id=8828#c8">comment #8</a>)
<span class="quote">&gt; I replaced some of the assertions with if-branches for expert info in
&gt;<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=50432">r50432</a>. I didn't actually put expert info in to make backporting easier,
&gt; since the expert API has changed.
&gt; 
&gt; There is still one:
&gt; WARNING **: Dissector bug, protocol ISystemActivator, in packet 995:
&gt; packet-dcom-sysact.c:600: failed assertion &quot;len &lt;= size&quot;
&gt; 
&gt; which I'm not sure of.</span >

Evan,

As to this assertion failure, it is also caused by fuzz mutation.

I have capture the picture and mark the abnormal value with oval circle.
I have provided the picture as an attachment.

As we can see, the number is 3355443288, which will be a minus value if 
being treated as a value of type gint. 
That is the reason why &quot;DISSECTOR_ASSERT(len &lt;= size);&quot; fails.</pre>
    </div>

    <div id="c10" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c10">Comment 10</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Litao Gao</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-07-07 23:29:24 UTC
        </span>

      </div>




<pre class="bz_comment_text">Created <span class=""><a href="attachment.cgi?id=11158" name="attach_11158" title="This is a screen capture corresponding to comments #9.">attachment 11158</a> <a href="attachment.cgi?id=11158&amp;action=edit" title="This is a screen capture corresponding to comments #9.">[details]</a></span>
This is a screen capture corresponding to comments #9.</pre>
    </div>

    <div id="c11" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c11">Comment 11</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-07-09 17:33:31 UTC
        </span>

      </div>




<pre class="bz_comment_text">Last bits and pieces cleaned up in 50478.</pre>
    </div>

    <div id="c12" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c12">Comment 12</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-07-09 17:33:50 UTC
        </span>

      </div>




<pre class="bz_comment_text">That is<a href="http://anonsvn.wireshark.org/viewvc?view=revision&revision=50478">r50478</a>.</pre>
    </div>

    <div id="c13" class="bz_comment">

      <div class="bz_comment_head">


        <span class="bz_comment_number">
          <a 
             href="show_bug.cgi?id=8828#c13">Comment 13</a>
        </span>

        <span class="bz_comment_user">
          <span class="vcard"><span class="fn">Evan Huus</span>
</span>
        </span>

        <span class="bz_comment_user_images">
        </span>

        <span class="bz_comment_time">
          2013-07-09 17:37:52 UTC
        </span>

      </div>




<pre class="bz_comment_text">All commits scheduled for 1.10, and the relevant subset of them for 1.8.</pre>
    </div>


  

</td>
<td>
</td>
</tr></table>
  </div>
        

</form>

<hr>
<ul class="related_actions">
    <li><a href="show_bug.cgi?format=multiple&amp;id=8828">Format For Printing</a></li>
    <li>&nbsp;-&nbsp;<a href="show_bug.cgi?ctype=xml&amp;id=8828">XML</a></li>
    <li>&nbsp;-&nbsp;<a href="enter_bug.cgi?cloned_bug_id=8828">Clone This Bug</a></li>
    
    <li>&nbsp;-&nbsp;<a href="#">Top of page </a></li>
    </ul>

<br>
</div>

    <div id="footer">
      <div class="intro"></div>
<ul id="useful-links">
  <li id="links-actions"><ul class="links">
  <li><a href="https://www.wireshark.org/">Wireshark Home</a></li>
  <li><span class="separator">| </span><a href="enter_bug.cgi">New</a></li>
  <li><span class="separator">| </span><a href="describecomponents.cgi">Browse</a></li>
  <li><span class="separator">| </span><a href="query.cgi">Search</a></li>

  <li class="form">
    <span class="separator">| </span>
    <form action="buglist.cgi" method="get"
        onsubmit="if (this.quicksearch.value == '')
                  { alert('Please enter one or more search terms first.');
                    return false; } return true;">
    <input type="hidden" id="no_redirect_bottom" name="no_redirect" value="0">
    <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript">
      if (history && history.replaceState) {
        var no_redirect = document.getElementById("no_redirect_bottom");
        no_redirect.value = 1;
      }
    </script>
    <input class="txt" type="text" id="quicksearch_bottom" name="quicksearch" 
           title="Quick Search" value="">
    <input class="btn" type="submit" value="Search" 
           id="find_bottom"></form>
  <a href="page.cgi?id=quicksearch.html" title="Quicksearch Help">[?]</a></li>

  <li><span class="separator">| </span><a href="report.cgi">Reports</a></li>

  <li></li>


  <li>
        <span class="separator">| </span>
        <a href="https://bugzilla.readthedocs.org/en/5.0/using/understanding.html" target="_blank">Help</a>
      </li>
    

    <li id="mini_login_container_bottom">
  <span class="separator">| </span>
  <a id="login_link_bottom" href="show_bug.cgi?id=8828&amp;GoAheadAndLogIn=1"
     onclick="return show_mini_login_form('_bottom')">Log In</a>

  <form action="show_bug.cgi?id=8828" method="POST"
        class="mini_login bz_default_hidden"
        id="mini_login_bottom">
    <input id="Bugzilla_login_bottom" required
           name="Bugzilla_login" class="bz_login"
        type="email" placeholder="Email Address">
    <input class="bz_password" name="Bugzilla_password" type="password"
           id="Bugzilla_password_bottom" required
           placeholder="Password">
    <input type="hidden" name="Bugzilla_login_token"
           value="">
    <input type="submit" name="GoAheadAndLogIn" value="Log in"
            id="log_in_bottom">
    <a href="#" onclick="return hide_mini_login_form('_bottom')">[x]</a>
  </form>
</li>


  <li id="forgot_container_bottom">
    <span class="separator">| </span>
    <a id="forgot_link_bottom" href="show_bug.cgi?id=8828&amp;GoAheadAndLogIn=1#forgot"
       onclick="return show_forgot_form('_bottom')">Forgot Password</a>
    <form action="token.cgi" method="post" id="forgot_form_bottom"
          class="mini_forgot bz_default_hidden">
      <label for="login_bottom">Login:</label>
      <input name="loginname" size="20" id="login_bottom" required
          type="email" placeholder="Your Email Address">
      <input id="forgot_button_bottom" value="Reset Password" type="submit">
      <input type="hidden" name="a" value="reqpw">
      <input type="hidden" id="token_bottom" name="token"
             value="1635621964-lY6jnQDY-QB9061b4DUh9Rd7z3geV4H6y--DUJgkF-U">
      <a href="#" onclick="return hide_forgot_form('_bottom')">[x]</a>
    </form>
  </li>
</ul>
  </li>

  




  
</ul>

      <div class="outro"></div>
    </div>

  </body>
</html>